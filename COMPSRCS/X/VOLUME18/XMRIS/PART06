Path: uunet!usc!elroy.jpl.nasa.gov!swrinde!mips!msi!dcmartin
From: nathan@inmos.co.uk (Nathan Sidwell)
Newsgroups: comp.sources.x
Subject: v18i027: Xmris - an X video game, Part06/09
Message-ID: <1992Jul16.171809.1886@msi.com>
Date: 16 Jul 92 17:18:09 GMT
References: <csx-18i022-xmris@uunet.UU.NET>
Sender: dcmartin@msi.com (David C. Martin - Moderator)
Organization: Molecular Simulations, Inc.
Lines: 1390
Approved: dcmartin@msi.com
Originator: dcmartin@fascet

Submitted-by: Nathan Sidwell <nathan@inmos.co.uk>
Posting-number: Volume 18, Issue 27
Archive-name: xmris/part06

# this is part.06 (part 6 of a multipart archive)
# do not concatenate these parts, unpack them in order with /bin/sh
# file xmris.c continued
#
if test ! -r _shar_seq_.tmp; then
	echo 'Please unpack part 1 first!'
	exit 1
fi
(read Scheck
 if test "$Scheck" != 6; then
	echo Please unpack part "$Scheck" next!
	exit 1
 else
	exit 0
 fi
) < _shar_seq_.tmp || exit 1
if test ! -f _shar_wnt_.tmp; then
	echo 'x - still skipping xmris.c'
else
echo 'x - continuing file xmris.c'
sed 's/^X//' << 'SHAR_EOF' >> 'xmris.c' &&
X	      }
X	  }
X	/*}}}*/
X	/*{{{  go right?*/
X	if(cptr->depths[3])
X	  {
X	    tptr = cptr + 1;
X	    if(tptr->visit && !tptr->distance)
X	      {
X		tptr->distance = count;
X		*aptr++ = tptr;
X	      }
X	  }
X	/*}}}*/
X	assert(aptr - list[toggle] < FLOOD_FILL);
X      }
X    *aptr = NULL;
X  }
X  return;
}
/*}}}*/
/*{{{  void fatal_error(text, ...)*/
extern void fatal_error FUNCARGLIST((text VARARG))
char const *text FUNCARGSEP
FUNCVARARG
{
X  va_list   args;
X  
X  VARARGSET(args, text);
X  vfprintf(stderr, text, args);
X  fputc('\n', stderr);
X  release_resources();
X  exit(1);
}
/*}}}*/
/*{{{  int itoa(text, n, width)*/
extern int itoa FUNCARGLIST((text, number, digits))
char    *text   FUNCARGSEP  /* output text (include 0) */
int     number  FUNCARGSEP  /* number to convert */
int     digits  FUNCARGTERM /* field width to convert into */
/*
X * formats an integer to a string
X * in the specified number of digits
X * pads leading zeros to ' '
X * returns the number of characters used
X */
{
X  char    reverse[10];
X  int     l, length;
X
X  l = 0;
X  do
X    {
X      reverse[l++] = number % 10 + '0';
X      number /= 10;
X    }
X  while(number);
X  if(!digits)
X    length = 0;
X  else if(l < digits)
X    {
X      length = digits - l;
X      memset(text, ' ', length);
X    }
X  else
X    {
X      length = 0;
X      l = digits;
X    }
X  while(l)
X    text[length++] = reverse[--l];
X  text[length] = 0;
X  return length;
}
/*}}}*/
/*{{{  int main(argc, argv)*/
extern int main FUNCARGLIST((argc, argv))
int     argc    FUNCARGSEP
char    **argv  FUNCARGTERM
{
#ifndef __STDC__
X  sprintf(title_text[1], "%s %s", XMRISVERSION, DATE);
#endif
X  /*{{{  set defaults*/
X  {
X    argv[argc] = NULL;
X    display.name = NULL;
X    font.name = FONT_NAME;
X    flags.gender = GAME_GENDER;
X  }
X  /*}}}*/
X  parse_args(argc, argv);
X  /*{{{  help?*/
X  if(flags.help)
X    {
X      ARG const *aptr;
X      char const *ptr;
X	
X      if(!*argv)
X	ptr = game_name;
X      else
X	{
X	  ptr = *argv;
X	  for(ptr += strlen(ptr) - 1; ptr != *argv; ptr--)
X	    if(ptr[-1] == '/')
X	      break;
X	}
X      fprintf(stderr, "%s [option ...]\n", ptr);
X      fprintf(stderr, "%s %s\n", game_name, title_text[1]);
X      fprintf(stderr, "%s\n", title_text[0]);
X      for(aptr = args; aptr->arg; aptr++)
X	fprintf(stderr, "  %-8s %s\n", aptr->arg, aptr->help);
X      return 0;
X    }
X  /*}}}*/
X  create_resources(argc, argv);
X  timer_open();
X  XMapWindow(display.display, display.window);
X  XSelectInput(display.display, display.window, display.event_mask |
X      KeyPressMask | ButtonPressMask | KeyReleaseMask | PointerMotionMask);
X  while(!demo_mode())
X    /*{{{  game*/
X    {
X      extra.got = 0;
X      extra.select = 0;
X      extra.escape = 0;
X      extra.score = 0;
X      create_xtra_monster(0);
X      player.lives = START_LIVES;
X      player.score = 0;
X      player.screen = 0;
X      player.pressed = 0;
X      while(player.lives)
X	{
X	  new_board();
X	  zoom_board();
X	  refresh_window();
X	  history.prize <<= 1;
X	  history.ending <<= 2;
X	  timer_start(FRAME_RATE);
X	  do
X	    {
X	      int     count;
X		  
X	      count = SCORE_SHOW;
X	      /*{{{  initialize stuff*/
X	      {
X		player.mouse.x = PLAYER_START_X;
X		player.mouse.y = PLAYER_START_Y;
X		player.mouse_dir = player.next_dir = 0;
X		global.state = 0;
X		monster.monsters = 0;
X		monster.delay = 0;
X		monster.den = monster.normals;
X		monster.drones = 0;
X		spawn_monster(4, 2, 2, PLAYER_START_X, PLAYER_START_Y, 0, 0);
X		monster.list[0].stop = 1;
X		player.pressed = 0;
X		player.ball.state = 8;
X		player.ball.count = 0;
X		player.old_ball.state = 0;
X	      }
X	      /*}}}*/
X	      calc_distances();
X	      draw_center(SPRITE_DEN);
X	      show_updates();
X	      player.ball.state = 0;
X	      /*{{{  game loop*/
X	      while(count)
X	      {
X		age_scores();
X		if(process_xevents(1))
X		  {
X		    player.lives = 1;
X		    monster.list[0].shot = 1;
X		    global.state = 4;
X		    count = 1;
X		  }
X		if(global.state != 4)
X		  move_player();
X		move_monsters();
X		bounce_ball();
X		move_apples();
X		if(!global.state)
X		  /*{{{  monster escape?*/
X		  {
X		    if(!monster.delay && random() < DEN_ESCAPE_PROB)
X		      monster.delay = DEN_ESCAPE_DELAY * DEN_ESCAPE_FLASH + 1;
X		    if(monster.delay)
X		      {
X			monster.delay--;
X			if(!(monster.delay % DEN_ESCAPE_FLASH))
X			  draw_center(monster.delay / DEN_ESCAPE_FLASH &
X			      1 ? SPRITE_NORMAL + 4 : SPRITE_DEN);
X			if(!monster.delay)
X			  {
X			    MONSTER   *mptr;
X											      
X			    mptr = spawn_monster(0, 2, 2, DEN_X, DEN_Y, 0, 0);
X			    monster.den--;
X			    if(!monster.den)
X			      {
X				global.state++;
X				draw_center(SPRITE_PRIZE_BASE +
X				  (player.screen - 1) % SPRITE_PRIZES);
X			      }
X			  }
X		      }
X		  }
X		  /*}}}*/
X		else if(global.state == 2 &&
X		    !monster.den && !monster.drones)
X		  global.state = 3;
X		fall_monsters();
X		/*{{{  ending?*/
X		if(global.state == 4)
X		  {
X		    if(update.score.scores || player.ball.state)
X		      count++;
X		    else
X		      {
X			APPLE   *aptr;
X			int     i;
X											
X			for(aptr = apple.list, i = apple.apples; i--; aptr++)
X			  if(aptr->state)
X			    {
X			      count++;
X			      break;
X			    }
X		      }
X		    count--;
X		    if(player.ball.state == 1)
X		      {
X			player.ball.state = 2;
X			player.ball.count = 0;
X		      }
X		    else if(player.ball.state == 3)
X		      player.ball.state = 4;
X		  }
X		/*}}}*/
X		/*{{{  extra stuff*/
X		if(!extra.escape)
X		  {
X		    unsigned  temp;
X										    
X		    if(random() < NEXT_XTRA_PROB)
X		      new_xtra();
X		    temp = player.score / 5000;
X		    if(temp != extra.score)
X		      {
X			extra.score = temp;
X			extra_escape();
X		      }
X		  }
X		else
X		  extra.score = player.score / 5000;
X		/*}}}*/
X		if(!global.cherries || !monster.normals ||
X		    monster.list[0].shot || extra.got == 0x1F)
X		  global.state = 4;
X		if(global.broken)
X		  calc_distances();
X		show_updates();
X		timer_wait();
X	      }
X	      /*}}}*/
X	      if(extra.got == 0x1F)
X		/*{{{  extra life*/
X		{
X		  extra_life();
X		  extra.got = 0;
X		  create_xtra_monster(extra.select);
X		  monster.list[0].shot = 0;
X		  history.ending |= 2;
X		}
X		/*}}}*/
X	      else if(!monster.normals)
X		{
X		  monster.list[0].shot = 0;
X		  history.ending |= 1;
X		}
X	      else if(!global.cherries)
X		monster.list[0].shot = 0;
X	      else if(monster.list[0].shot)
X		/*{{{  die*/
X		{
X		  unsigned  i;
X		  unsigned  base, offset;
X		  MONSTER   *mptr;
X										
X		  player.ball.count = 8;
X		  i = monster.list[0].face;
X		  if(i >= 6)
X		    i = 2 + (i & 1);
X		  i = SPRITE_PLAYER + i * MONSTER_IMAGES;
X		  for(base = 8; base--;)
X		    if(player_dies[base] == i)
X		      break;
X		  offset = (base + 1) & 3;
X		  base = base & 4;
X		  for(i = 0; i != 8; i++)
X		    {
X		      unsigned  delay;
X										
X		      if(process_xevents(0))
X			player.lives = 1;
X		      monster.list[0].type =
X			  player_dies[base + ((offset + i) & 3)];
X		      show_updates();
X		      for(delay = DIE_DELAY; delay--;)
X			timer_wait();
X		    }
X		  for(mptr = monster.list, i = monster.monsters; i--; mptr++)
X		    add_background(mptr->pixel.x, mptr->pixel.y,
X			CELL_WIDTH, CELL_HEIGHT);
X		  monster.monsters = 0;
X		  player.lives--;
X		  if(player.lives)
X		    {
X		      XFillRectangle(display.display, display.back, GCN(GC_CLEAR),
X			  PIXELX(player.lives - 1, 0), PIXELY(CELLS_DOWN, 0),
X			  CELL_WIDTH, CELL_HEIGHT);
X		      add_background(PIXELX(player.lives - 1, 0),
X			  PIXELY(CELLS_DOWN, 0), CELL_WIDTH, CELL_HEIGHT);
X		    }
X		  if(extra.escape)
X		    {
X		      extra.escape = 0;
X		      draw_extra();
X		    }
X		  show_updates();
X		}
X		/*}}}*/
X	      if(!monster.list[0].shot && !(player.screen % HISTORY_SHOW))
X		show_history();
X	    }
X	  while(monster.list[0].shot && player.lives);
X	  timer_stop();
X	}
X    }
X    /*}}}*/
X  release_resources();
X  timer_close();
X  return 0;
}
/*}}}*/
/*{{{  void parse_args(argc, argv)*/
static void parse_args FUNCARGLIST((argc, argv))
int     argc    FUNCARGSEP
char    **argv  FUNCARGTERM
{
X  char      **vptr;
X  static char const *names[2] = {"xmris", "xmsit"};
X
X  vptr = argv;
X  /*{{{  determine gender of the game*/
X  if(*argv)
X    {
X      unsigned  length;
X      unsigned  other;
X      unsigned  index;
X	
X      length = strlen(*argv);
X      for(index = 2; index--;)
X	{
X	  other = strlen(&names[index][1]);
X	  if(length >= other &&
X	      !strcmp(&(*argv)[length - other], &names[index][1]))
X	    flags.gender = index;
X	}
X    }
X  /*}}}*/
X  /*{{{  parse all the arguments*/
X  while(*++vptr)
X    {
X      while(**vptr != '-')
X	vptr++;
X      if(*vptr)
X	{
X	  ARG const *aptr;
X	
X	  for(aptr = args; aptr->arg; aptr++)
X	    if(!strcmp(aptr->arg, &(*vptr)[1]))
X	      {
X		if(aptr->flag >= 0)
X		  *(unsigned *)aptr->ptr = aptr->flag;
X		else
X		  *(char **)aptr->ptr = *++vptr;
X		break;
X	      }
X	}
X    }
X  /*}}}*/
X  game_name = names[flags.gender];
X  return;
}
/*}}}*/
/*{{{  int process_xevents(pausable)*/
extern int process_xevents FUNCARGLIST((pausable))
int     pausable  FUNCARGTERM
{
X  int       quit;
X  int       paused;
X
X  player.motionevent = 0;
X  quit = 0;
X  paused = 0;
X  /*{{{  read the events*/
X  while(QLength(display.display) || paused)
X    {
X      XEvent    event;
X	
X      XNextEvent(display.display, &event);
X      if(event.xany.window != display.window)
X	continue;
X      switch (event.type)
X      {
X	/*{{{  case KeyPress:*/
X	case KeyPress:
X	/*
X	 * When a key is pressed, we check to see if it is
X	 * a control key. If so, then we set the relevant pressed bit.
X	 */
X	{
X	  char      chr;
X	  KeySym    symbol;
X	  XComposeStatus status;
X					  
X	  XLookupString(&event.xkey, &chr, 1, &symbol, &status);
X	  if(isupper(chr))
X	    chr = tolower(chr);
X	  if(chr == 'p' && pausable)
X	    paused++;
X	  else if(paused && chr == ' ')
X	    player.motionevent = paused = 0;
X	  else if((paused || !pausable) && chr == 'q')
X	    {
X	      paused = 0;
X	      quit = 1;
X	    }
X	  else if(global.state > 5)
X	    player.keyboard = player.button = 1;
X	  else if(!paused && player.keyboard)
X	    {
X	      int       index;
X					
X	      for(index = 5; index--;)
X		if(chr == keystrokes[index])
X		  {
X		    if(index == 4)
X		      player.button = 1;
X		    else
X		      player.pressed |= 1 << index;
X		    break;
X		  }
X	    }
X	  break;
X	}
X	/*}}}*/
X	/*{{{  case KeyRelease:*/
X	case KeyRelease:
X	/*
X	 * when a key is released, we check to see if it is
X	 * the controlling direction key. If so, then we stop
X	 */
X	{
X	  if(player.keyboard)
X	    {
X	      char      chr;
X	      KeySym    symbol;
X	      XComposeStatus status;
X	      unsigned  index;
X					    
X	      XLookupString(&event.xkey, &chr, 1, &symbol, &status);
X	      if(isupper(chr))
X		chr = tolower(chr);
X	      for(index = 5; index--;)
X		if(chr == keystrokes[index])
X		  {
X		    if(index == 4)
X		      player.button = 0;
X		    else
X		      player.pressed &= ~(1 << index);
X		    break;
X		  }
X	      break;
X	    }
X	}
X	/*}}}*/
X	/*{{{  case MotionNotify:*/
X	case MotionNotify:
X	/*
X	 * for mouse motion, we save the coordinate and process the
X	 * final one only
X	 */
X	{
X	  player.raw_mouse.x = event.xmotion.x;
X	  player.raw_mouse.y = event.xmotion.y;
X	  player.motionevent = 1;
X	  break;
X	}
X	/*}}}*/
X	/*{{{  case ButtonPress:*/
X	case ButtonPress:
X	  if(!player.keyboard)
X	    player.button = 1;
X	  break;
X	/*}}}*/
X	/*{{{  case ButtonRelease:*/
X	case ButtonRelease:
X	  if(!player.keyboard && player.throw)
X	    player.button = 0;
X	  break;
X	/*}}}*/
X	/*{{{  case Expose:*/
X	case Expose:
X	  refresh_window();
X	  break;
X	/*}}}*/
X	/*{{{  case UnmapNotify:*/
X	case UnmapNotify:
X	  paused++;
X	  break;
X	/*}}}*/
X	/*{{{  case MapNotify:*/
X	case MapNotify:
X	  if(!pausable)
X	    paused = 0;
X	  break;
X	/*}}}*/
X	/*{{{  case PropertyNotify:*/
X	case PropertyNotify:
X	  if(event.xproperty.atom == display.DEC_icon_atom)
X	    paused++;
X	  break;
X	/*}}}*/
X	default:
X	  break;
X      }
X      /*{{{  started to pause?*/
X      if(paused == 1)
X	{
X	  char const *text = "Space to continue, Q to quit";
X	  TEXT      info;
X	  unsigned  length;
X		
X	  paused++;
X	  length = strlen(text);
X	  text_size(text, length, &info);
X	  add_background(0, PIXELY(CELLS_DOWN, 0), WINDOW_WIDTH, CELL_HEIGHT);
X	  XFillRectangle(display.display, display.copy, GCN(GC_CLEAR),
X	      0, PIXELY(CELLS_DOWN, 0), WINDOW_WIDTH, CELL_HEIGHT);
X	  XDrawImageString(display.display, display.copy, GCN(GC_TEXT),
X	      WINDOW_WIDTH / 2 - info.width / 2,
X	      PIXELY(CELLS_DOWN, CELL_HEIGHT / 2) +
X	      (info.ascent - info.descent) / 2, text, length);
X	  XCopyArea(display.display, display.copy, display.window, GCN(GC_COPY),
X	      0, PIXELY(CELLS_DOWN, 0), WINDOW_WIDTH, CELL_HEIGHT,
X	      0, PIXELY(CELLS_DOWN, 0));
X	  XSync(display.display, False);
X	}
X      /*}}}*/
X    }
X  /*}}}*/
X  return quit;
}
/*}}}*/
/*{{{  unsigned random()*/
extern unsigned random FUNCARGVOID
/*
X * a simple random number generator
X * it generates 8 new bits of number at each call
X * using a 31 bit maximal length linear feedback shift register
X * the taps are bits 0 and 3
X */
{
X  unsigned  bits;
X
X  if(!seed)
X    seed = time(NULL);
X  bits = ((seed >> 3) ^ seed) & 0xFF;
X  seed = (seed >> 8) | (bits << 23);
X  return bits;
}
/*}}}*/
SHAR_EOF
echo 'File xmris.c is complete' &&
chmod 0644 xmris.c ||
echo 'restore of xmris.c failed'
Wc_c="`wc -c < 'xmris.c'`"
test 18828 -eq "$Wc_c" ||
	echo 'xmris.c: original size 18828, current size' "$Wc_c"
rm -f _shar_wnt_.tmp
fi
# ============= bitmaps/apple/apple.h ==============
if test ! -d 'bitmaps'; then
    echo 'x - creating directory bitmaps'
    mkdir 'bitmaps'
fi
if test ! -d 'bitmaps/apple'; then
    echo 'x - creating directory bitmaps/apple'
    mkdir 'bitmaps/apple'
fi
if test -f 'bitmaps/apple/apple.h' -a X"$1" != X"-c"; then
	echo 'x - skipping bitmaps/apple/apple.h (File already exists)'
	rm -f _shar_wnt_.tmp
else
> _shar_wnt_.tmp
echo 'x - extracting bitmaps/apple/apple.h (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'bitmaps/apple/apple.h' &&
#define apple_width 32
#define apple_height 32
static char apple_bits[] = {
X   0x00, 0x50, 0x3d, 0x00, 0x00, 0xac, 0x1e, 0x00, 0x00, 0x57, 0xf7, 0x00,
X   0xc0, 0xaf, 0xfb, 0x03, 0xe0, 0xd5, 0xf5, 0x05, 0x70, 0xac, 0xfa, 0x0b,
X   0x38, 0x5f, 0xfd, 0x15, 0xbc, 0xff, 0xff, 0x2b, 0x9c, 0xff, 0xff, 0x15,
X   0xde, 0xff, 0xff, 0x2b, 0xde, 0xff, 0xff, 0x55, 0xfe, 0xff, 0xff, 0x2b,
X   0xff, 0xff, 0xff, 0xd5, 0xff, 0xff, 0xff, 0xab, 0xaf, 0xff, 0xff, 0xd5,
X   0x57, 0xfd, 0xff, 0xeb, 0xaf, 0xfa, 0xff, 0xf5, 0x57, 0xf5, 0xff, 0xfb,
X   0xaf, 0xea, 0xff, 0xff, 0x56, 0xd5, 0xff, 0xff, 0xae, 0xea, 0xff, 0x7f,
X   0x5e, 0xd5, 0xff, 0x7f, 0xac, 0xea, 0xff, 0x3f, 0x5c, 0xd5, 0xff, 0x3f,
X   0xb8, 0xea, 0xff, 0x1f, 0x78, 0xd5, 0xff, 0x1f, 0xf0, 0xeb, 0xff, 0x0f,
X   0xe0, 0xff, 0xff, 0x07, 0xc0, 0xff, 0xff, 0x03, 0x00, 0xff, 0xff, 0x01,
X   0x00, 0xfc, 0x7f, 0x00, 0x00, 0xe0, 0x0f, 0x00};
SHAR_EOF
chmod 0644 bitmaps/apple/apple.h ||
echo 'restore of bitmaps/apple/apple.h failed'
Wc_c="`wc -c < 'bitmaps/apple/apple.h'`"
test 878 -eq "$Wc_c" ||
	echo 'bitmaps/apple/apple.h: original size 878, current size' "$Wc_c"
rm -f _shar_wnt_.tmp
fi
# ============= bitmaps/apple/applem.h ==============
if test -f 'bitmaps/apple/applem.h' -a X"$1" != X"-c"; then
	echo 'x - skipping bitmaps/apple/applem.h (File already exists)'
	rm -f _shar_wnt_.tmp
else
> _shar_wnt_.tmp
echo 'x - extracting bitmaps/apple/applem.h (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'bitmaps/apple/applem.h' &&
#define applem_width 32
#define applem_height 32
static char applem_bits[] = {
X   0x00, 0xf0, 0x7f, 0x00, 0x00, 0xfc, 0x1f, 0x00, 0x00, 0xff, 0xff, 0x00,
X   0xc0, 0xff, 0xff, 0x03, 0xe0, 0xff, 0xff, 0x07, 0xf0, 0xff, 0xff, 0x0f,
X   0xf8, 0xff, 0xff, 0x1f, 0xfc, 0xff, 0xff, 0x3f, 0xfc, 0xff, 0xff, 0x3f,
X   0xfe, 0xff, 0xff, 0x7f, 0xfe, 0xff, 0xff, 0x7f, 0xfe, 0xff, 0xff, 0x7f,
X   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
X   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
X   0xff, 0xff, 0xff, 0xff, 0xfe, 0xff, 0xff, 0xff, 0xfe, 0xff, 0xff, 0x7f,
X   0xfe, 0xff, 0xff, 0x7f, 0xfc, 0xff, 0xff, 0x3f, 0xfc, 0xff, 0xff, 0x3f,
X   0xf8, 0xff, 0xff, 0x1f, 0xf8, 0xff, 0xff, 0x1f, 0xf0, 0xff, 0xff, 0x0f,
X   0xe0, 0xff, 0xff, 0x07, 0xc0, 0xff, 0xff, 0x03, 0x00, 0xff, 0xff, 0x01,
X   0x00, 0xfc, 0x7f, 0x00, 0x00, 0xe0, 0x0f, 0x00};
SHAR_EOF
chmod 0644 bitmaps/apple/applem.h ||
echo 'restore of bitmaps/apple/applem.h failed'
Wc_c="`wc -c < 'bitmaps/apple/applem.h'`"
test 881 -eq "$Wc_c" ||
	echo 'bitmaps/apple/applem.h: original size 881, current size' "$Wc_c"
rm -f _shar_wnt_.tmp
fi
# ============= bitmaps/apple/decay.h ==============
if test -f 'bitmaps/apple/decay.h' -a X"$1" != X"-c"; then
	echo 'x - skipping bitmaps/apple/decay.h (File already exists)'
	rm -f _shar_wnt_.tmp
else
> _shar_wnt_.tmp
echo 'x - extracting bitmaps/apple/decay.h (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'bitmaps/apple/decay.h' &&
#define decay_width 48
#define decay_height 24
static char decay_bits[] = {
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x03, 0x00, 0x00, 0xc0, 0x03,
X   0x30, 0x1c, 0x00, 0x00, 0x38, 0x0c, 0x28, 0x60, 0x00, 0x00, 0x06, 0x14,
X   0x44, 0x80, 0x01, 0x80, 0x01, 0x22, 0x84, 0x00, 0x02, 0x40, 0x00, 0x21,
X   0x06, 0x3d, 0x04, 0x20, 0xbc, 0x60, 0x0e, 0xc2, 0x08, 0x10, 0x43, 0x70,
X   0x0f, 0x31, 0x11, 0x88, 0x8c, 0xf0, 0x1f, 0x6d, 0x22, 0x44, 0xb6, 0xf8,
X   0x3f, 0x5a, 0x22, 0x44, 0x5a, 0xfc, 0x7f, 0x12, 0x42, 0x42, 0x48, 0xfe,
X   0xff, 0x8c, 0x41, 0x82, 0x31, 0xff, 0xfe, 0x71, 0x82, 0x41, 0x8e, 0x7f,
X   0xfe, 0x07, 0x84, 0x21, 0xe0, 0x7f, 0xfe, 0x1f, 0x98, 0x19, 0xf8, 0x7f,
X   0xfc, 0x7f, 0x60, 0x06, 0xfe, 0x3f, 0xf8, 0xff, 0x71, 0x8e, 0xff, 0x1f,
X   0xf0, 0xff, 0x3f, 0xfc, 0xff, 0x0f, 0xe0, 0xff, 0x3f, 0xfc, 0xff, 0x07,
X   0xc0, 0xff, 0x1f, 0xf8, 0xff, 0x03, 0x80, 0xff, 0x0f, 0xf0, 0xff, 0x01,
X   0x00, 0xfe, 0x07, 0xe0, 0x7f, 0x00, 0x00, 0xf8, 0x01, 0x80, 0x1f, 0x00};
SHAR_EOF
chmod 0644 bitmaps/apple/decay.h ||
echo 'restore of bitmaps/apple/decay.h failed'
Wc_c="`wc -c < 'bitmaps/apple/decay.h'`"
test 977 -eq "$Wc_c" ||
	echo 'bitmaps/apple/decay.h: original size 977, current size' "$Wc_c"
rm -f _shar_wnt_.tmp
fi
# ============= bitmaps/apple/decaym.h ==============
if test -f 'bitmaps/apple/decaym.h' -a X"$1" != X"-c"; then
	echo 'x - skipping bitmaps/apple/decaym.h (File already exists)'
	rm -f _shar_wnt_.tmp
else
> _shar_wnt_.tmp
echo 'x - extracting bitmaps/apple/decaym.h (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'bitmaps/apple/decaym.h' &&
#define decaym_width 48
#define decaym_height 24
static char decaym_bits[] = {
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x03, 0x00, 0x00, 0xc0, 0x03,
X   0xf0, 0x1f, 0x00, 0x00, 0xf8, 0x0f, 0xf8, 0x7f, 0x00, 0x00, 0xfe, 0x1f,
X   0xfc, 0xff, 0x01, 0x80, 0xff, 0x3f, 0xfc, 0xff, 0x03, 0xc0, 0xff, 0x3f,
X   0xfe, 0xff, 0x07, 0xe0, 0xff, 0x7f, 0xfe, 0xff, 0x0f, 0xf0, 0xff, 0x7f,
X   0xff, 0xff, 0x1f, 0xf8, 0xff, 0xff, 0xff, 0xff, 0x3f, 0xfc, 0xff, 0xff,
X   0xff, 0xff, 0x3f, 0xfc, 0xff, 0xff, 0xff, 0xff, 0x7f, 0xfe, 0xff, 0xff,
X   0xff, 0xff, 0x7f, 0xfe, 0xff, 0xff, 0xfe, 0xff, 0xff, 0xff, 0xff, 0x7f,
X   0xfe, 0xff, 0xff, 0xff, 0xff, 0x7f, 0xfe, 0xff, 0xff, 0xff, 0xff, 0x7f,
X   0xfc, 0xff, 0x7f, 0xfe, 0xff, 0x3f, 0xf8, 0xff, 0x7f, 0xfe, 0xff, 0x1f,
X   0xf0, 0xff, 0x3f, 0xfc, 0xff, 0x0f, 0xe0, 0xff, 0x3f, 0xfc, 0xff, 0x07,
X   0xc0, 0xff, 0x1f, 0xf8, 0xff, 0x03, 0x80, 0xff, 0x0f, 0xf0, 0xff, 0x01,
X   0x00, 0xfe, 0x07, 0xe0, 0x7f, 0x00, 0x00, 0xf8, 0x01, 0x80, 0x1f, 0x00};
SHAR_EOF
chmod 0644 bitmaps/apple/decaym.h ||
echo 'restore of bitmaps/apple/decaym.h failed'
Wc_c="`wc -c < 'bitmaps/apple/decaym.h'`"
test 980 -eq "$Wc_c" ||
	echo 'bitmaps/apple/decaym.h: original size 980, current size' "$Wc_c"
rm -f _shar_wnt_.tmp
fi
# ============= bitmaps/apple/rock.h ==============
if test -f 'bitmaps/apple/rock.h' -a X"$1" != X"-c"; then
	echo 'x - skipping bitmaps/apple/rock.h (File already exists)'
	rm -f _shar_wnt_.tmp
else
> _shar_wnt_.tmp
echo 'x - extracting bitmaps/apple/rock.h (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'bitmaps/apple/rock.h' &&
#define rock_width 32
#define rock_height 32
static char rock_bits[] = {
X   0x00, 0xf0, 0x03, 0x00, 0x00, 0xfc, 0x97, 0x03, 0x00, 0xff, 0xeb, 0x00,
X   0xc0, 0xc7, 0xf5, 0x00, 0xe0, 0xf1, 0xab, 0x01, 0xf0, 0xfc, 0x57, 0x07,
X   0x78, 0xfe, 0xaf, 0x0e, 0x3c, 0xff, 0xff, 0x1f, 0xbc, 0xff, 0xff, 0x2f,
X   0xfe, 0xff, 0xff, 0x57, 0xfe, 0xff, 0xff, 0x2f, 0xff, 0xff, 0xff, 0x57,
X   0xaf, 0xff, 0xff, 0xab, 0x57, 0xfd, 0xff, 0x57, 0xaf, 0xfa, 0xff, 0xab,
X   0x57, 0xf5, 0xff, 0x57, 0xaf, 0xfa, 0xff, 0xab, 0x57, 0xf5, 0xff, 0xd5,
X   0xaf, 0xea, 0xff, 0xea, 0x5e, 0xf5, 0xff, 0x7d, 0xae, 0xea, 0xff, 0x7f,
X   0x5c, 0xf5, 0xff, 0x7f, 0xbc, 0xea, 0xff, 0x3f, 0x78, 0xf5, 0xff, 0x3f,
X   0xf8, 0xfa, 0xff, 0x1f, 0xf0, 0xfd, 0xff, 0x0f, 0xe0, 0xff, 0xff, 0x07,
X   0xc0, 0xff, 0xff, 0x03, 0x80, 0xff, 0xff, 0x01, 0x00, 0xff, 0xff, 0x00,
X   0x00, 0xfc, 0x3f, 0x00, 0x00, 0xf0, 0x0f, 0x00};
SHAR_EOF
chmod 0644 bitmaps/apple/rock.h ||
echo 'restore of bitmaps/apple/rock.h failed'
Wc_c="`wc -c < 'bitmaps/apple/rock.h'`"
test 875 -eq "$Wc_c" ||
	echo 'bitmaps/apple/rock.h: original size 875, current size' "$Wc_c"
rm -f _shar_wnt_.tmp
fi
# ============= bitmaps/apple/rockm.h ==============
if test -f 'bitmaps/apple/rockm.h' -a X"$1" != X"-c"; then
	echo 'x - skipping bitmaps/apple/rockm.h (File already exists)'
	rm -f _shar_wnt_.tmp
else
> _shar_wnt_.tmp
echo 'x - extracting bitmaps/apple/rockm.h (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'bitmaps/apple/rockm.h' &&
#define rockm_width 32
#define rockm_height 32
static char rockm_bits[] = {
X   0x00, 0xf0, 0x03, 0x00, 0x00, 0xfc, 0x9f, 0x03, 0x00, 0xff, 0xff, 0x00,
X   0xc0, 0xff, 0xff, 0x00, 0xe0, 0xff, 0xff, 0x01, 0xf0, 0xff, 0xff, 0x07,
X   0xf8, 0xff, 0xff, 0x0f, 0xfc, 0xff, 0xff, 0x1f, 0xfc, 0xff, 0xff, 0x3f,
X   0xfe, 0xff, 0xff, 0x3f, 0xfe, 0xff, 0xff, 0x7f, 0xff, 0xff, 0xff, 0x7f,
X   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
X   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
X   0xff, 0xff, 0xff, 0xff, 0xfe, 0xff, 0xff, 0x7f, 0xfe, 0xff, 0xff, 0x7f,
X   0xfc, 0xff, 0xff, 0x7f, 0xfc, 0xff, 0xff, 0x3f, 0xf8, 0xff, 0xff, 0x3f,
X   0xf8, 0xff, 0xff, 0x1f, 0xf0, 0xff, 0xff, 0x0f, 0xe0, 0xff, 0xff, 0x07,
X   0xc0, 0xff, 0xff, 0x03, 0x80, 0xff, 0xff, 0x01, 0x00, 0xff, 0xff, 0x00,
X   0x00, 0xfc, 0x3f, 0x00, 0x00, 0xf0, 0x0f, 0x00};
SHAR_EOF
chmod 0644 bitmaps/apple/rockm.h ||
echo 'restore of bitmaps/apple/rockm.h failed'
Wc_c="`wc -c < 'bitmaps/apple/rockm.h'`"
test 878 -eq "$Wc_c" ||
	echo 'bitmaps/apple/rockm.h: original size 878, current size' "$Wc_c"
rm -f _shar_wnt_.tmp
fi
# ============= bitmaps/apple/rot.h ==============
if test -f 'bitmaps/apple/rot.h' -a X"$1" != X"-c"; then
	echo 'x - skipping bitmaps/apple/rot.h (File already exists)'
	rm -f _shar_wnt_.tmp
else
> _shar_wnt_.tmp
echo 'x - extracting bitmaps/apple/rot.h (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'bitmaps/apple/rot.h' &&
#define rot_width 48
#define rot_height 16
static char rot_bits[] = {
X   0x06, 0x00, 0x00, 0x00, 0x00, 0x60, 0x3a, 0x00, 0x00, 0x00, 0x00, 0x5c,
X   0x42, 0x00, 0x00, 0x00, 0x00, 0x42, 0x81, 0x00, 0x00, 0x00, 0x00, 0x81,
X   0x81, 0x1c, 0x03, 0xc0, 0x38, 0x81, 0x81, 0x98, 0x3c, 0x3c, 0x19, 0x81,
X   0x03, 0x43, 0xc0, 0x03, 0xc2, 0xc0, 0x03, 0x3c, 0xc0, 0x03, 0x3c, 0xc0,
X   0x06, 0x00, 0x60, 0x06, 0x00, 0x60, 0x0e, 0x00, 0x70, 0x0e, 0x00, 0x70,
X   0x3c, 0x00, 0x3c, 0x3c, 0x00, 0x3c, 0xfc, 0xc0, 0x3f, 0xfc, 0x03, 0x3f,
X   0xf8, 0xff, 0x1f, 0xf8, 0xff, 0x1f, 0xe0, 0xff, 0x0f, 0xf0, 0xff, 0x07,
X   0x80, 0xff, 0x03, 0xc0, 0xff, 0x01, 0x00, 0xfe, 0x00, 0x00, 0x7f, 0x00};
SHAR_EOF
chmod 0644 bitmaps/apple/rot.h ||
echo 'restore of bitmaps/apple/rot.h failed'
Wc_c="`wc -c < 'bitmaps/apple/rot.h'`"
test 671 -eq "$Wc_c" ||
	echo 'bitmaps/apple/rot.h: original size 671, current size' "$Wc_c"
rm -f _shar_wnt_.tmp
fi
# ============= bitmaps/apple/rotm.h ==============
if test -f 'bitmaps/apple/rotm.h' -a X"$1" != X"-c"; then
	echo 'x - skipping bitmaps/apple/rotm.h (File already exists)'
	rm -f _shar_wnt_.tmp
else
> _shar_wnt_.tmp
echo 'x - extracting bitmaps/apple/rotm.h (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'bitmaps/apple/rotm.h' &&
#define rotm_width 48
#define rotm_height 16
static char rotm_bits[] = {
X   0x06, 0x00, 0x00, 0x00, 0x00, 0x60, 0x3e, 0x00, 0x00, 0x00, 0x00, 0x7c,
X   0xfe, 0x03, 0x00, 0x00, 0xc0, 0x7f, 0xff, 0x3f, 0x00, 0x00, 0xfc, 0xff,
X   0xff, 0xff, 0x03, 0xc0, 0xff, 0xff, 0xff, 0xff, 0x3f, 0xfc, 0xff, 0xff,
X   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
X   0xfe, 0xff, 0x7f, 0xfe, 0xff, 0x7f, 0xfe, 0xff, 0x7f, 0xfe, 0xff, 0x7f,
X   0xfc, 0xff, 0x3f, 0xfc, 0xff, 0x3f, 0xfc, 0xff, 0x3f, 0xfc, 0xff, 0x3f,
X   0xf8, 0xff, 0x1f, 0xf8, 0xff, 0x1f, 0xe0, 0xff, 0x0f, 0xf0, 0xff, 0x07,
X   0x80, 0xff, 0x03, 0xc0, 0xff, 0x01, 0x00, 0xfe, 0x00, 0x00, 0x7f, 0x00};
SHAR_EOF
chmod 0644 bitmaps/apple/rotm.h ||
echo 'restore of bitmaps/apple/rotm.h failed'
Wc_c="`wc -c < 'bitmaps/apple/rotm.h'`"
test 674 -eq "$Wc_c" ||
	echo 'bitmaps/apple/rotm.h: original size 674, current size' "$Wc_c"
rm -f _shar_wnt_.tmp
fi
# ============= bitmaps/apple/split.h ==============
if test -f 'bitmaps/apple/split.h' -a X"$1" != X"-c"; then
	echo 'x - skipping bitmaps/apple/split.h (File already exists)'
	rm -f _shar_wnt_.tmp
else
> _shar_wnt_.tmp
echo 'x - extracting bitmaps/apple/split.h (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'bitmaps/apple/split.h' &&
#define split_width 32
#define split_height 32
static char split_bits[] = {
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x00, 0x00, 0xc6, 0xff, 0x00,
X   0xc0, 0xef, 0xff, 0x02, 0xe0, 0x9e, 0xff, 0x05, 0x70, 0x0e, 0xf9, 0x0a,
X   0x38, 0x8f, 0xf8, 0x15, 0x9c, 0x8f, 0xf0, 0x2b, 0xcc, 0x8f, 0xf0, 0x55,
X   0xee, 0x9f, 0xf0, 0x2b, 0xfe, 0x9f, 0xe0, 0xd5, 0xfe, 0xdf, 0xe1, 0xea,
X   0xff, 0xff, 0xe1, 0xd5, 0xff, 0xff, 0xe3, 0xea, 0xef, 0xff, 0x63, 0xfd,
X   0xd7, 0xff, 0xe3, 0xfe, 0xab, 0xff, 0xe1, 0x7f, 0x57, 0xff, 0xe1, 0x7f,
X   0xab, 0xfe, 0xf0, 0x7f, 0x56, 0x7f, 0xf0, 0x7f, 0xae, 0x7e, 0xf0, 0x3f,
X   0x5e, 0x7d, 0xf0, 0x3f, 0xac, 0x7e, 0xf8, 0x1f, 0x5c, 0xfd, 0xf8, 0x1f,
X   0xb8, 0xfa, 0xf8, 0x0f, 0x70, 0xfd, 0xf8, 0x0f, 0xe0, 0xfe, 0xfc, 0x07,
X   0xc0, 0xff, 0xfc, 0x03, 0x80, 0xff, 0xfe, 0x01, 0x00, 0xfe, 0xfe, 0x00,
X   0x00, 0xf8, 0x3f, 0x00, 0x00, 0xe0, 0x0c, 0x00};
SHAR_EOF
chmod 0644 bitmaps/apple/split.h ||
echo 'restore of bitmaps/apple/split.h failed'
Wc_c="`wc -c < 'bitmaps/apple/split.h'`"
test 878 -eq "$Wc_c" ||
	echo 'bitmaps/apple/split.h: original size 878, current size' "$Wc_c"
rm -f _shar_wnt_.tmp
fi
# ============= bitmaps/apple/splitm.h ==============
if test -f 'bitmaps/apple/splitm.h' -a X"$1" != X"-c"; then
	echo 'x - skipping bitmaps/apple/splitm.h (File already exists)'
	rm -f _shar_wnt_.tmp
else
> _shar_wnt_.tmp
echo 'x - extracting bitmaps/apple/splitm.h (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'bitmaps/apple/splitm.h' &&
#define splitm_width 32
#define splitm_height 32
static char splitm_bits[] = {
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x00, 0x00, 0xc6, 0xff, 0x00,
X   0xc0, 0xef, 0xff, 0x03, 0xe0, 0xff, 0xff, 0x0f, 0xf0, 0xff, 0xff, 0x1f,
X   0xf8, 0xff, 0xff, 0x3f, 0xfc, 0xff, 0xff, 0x3f, 0xfc, 0xff, 0xff, 0x7f,
X   0xfe, 0xff, 0xff, 0x7f, 0xfe, 0xff, 0xff, 0xff, 0xfe, 0xff, 0xff, 0xff,
X   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
X   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x7f, 0xff, 0xff, 0xff, 0x7f,
X   0xff, 0xff, 0xff, 0x7f, 0xfe, 0xff, 0xff, 0x7f, 0xfe, 0xff, 0xff, 0x3f,
X   0xfe, 0xff, 0xff, 0x3f, 0xfc, 0xff, 0xff, 0x1f, 0xfc, 0xff, 0xff, 0x1f,
X   0xf8, 0xff, 0xff, 0x0f, 0xf0, 0xff, 0xff, 0x0f, 0xe0, 0xff, 0xff, 0x07,
X   0xc0, 0xff, 0xff, 0x03, 0x80, 0xff, 0xff, 0x01, 0x00, 0xfe, 0xff, 0x00,
X   0x00, 0xf8, 0x3f, 0x00, 0x00, 0xe0, 0x0c, 0x00};
SHAR_EOF
chmod 0644 bitmaps/apple/splitm.h ||
echo 'restore of bitmaps/apple/splitm.h failed'
Wc_c="`wc -c < 'bitmaps/apple/splitm.h'`"
test 881 -eq "$Wc_c" ||
	echo 'bitmaps/apple/splitm.h: original size 881, current size' "$Wc_c"
rm -f _shar_wnt_.tmp
fi
# ============= bitmaps/board/cherry.h ==============
if test ! -d 'bitmaps/board'; then
    echo 'x - creating directory bitmaps/board'
    mkdir 'bitmaps/board'
fi
if test -f 'bitmaps/board/cherry.h' -a X"$1" != X"-c"; then
	echo 'x - skipping bitmaps/board/cherry.h (File already exists)'
	rm -f _shar_wnt_.tmp
else
> _shar_wnt_.tmp
echo 'x - extracting bitmaps/board/cherry.h (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'bitmaps/board/cherry.h' &&
#define cherry_width 32
#define cherry_height 32
static char cherry_bits[] = {
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
X   0x00, 0x00, 0xc0, 0x3f, 0x00, 0x00, 0xf0, 0x36, 0x00, 0x00, 0x3c, 0x27,
X   0x00, 0x00, 0x0e, 0x03, 0x00, 0x00, 0x87, 0x01, 0x00, 0x80, 0x83, 0x01,
X   0x00, 0xc0, 0xc1, 0x00, 0x00, 0xe0, 0xc0, 0x00, 0x00, 0x4f, 0xe0, 0x00,
X   0xc0, 0x3f, 0x60, 0x00, 0xe0, 0x78, 0x70, 0x00, 0x30, 0x3e, 0x30, 0x00,
X   0xb0, 0x8f, 0x27, 0x00, 0x98, 0xe7, 0x1f, 0x00, 0xd8, 0x73, 0x3c, 0x00,
X   0xd8, 0x1b, 0x7f, 0x00, 0xf8, 0xd9, 0x7f, 0x00, 0xf0, 0xcd, 0xff, 0x00,
X   0xf0, 0xed, 0xff, 0x00, 0xe0, 0xed, 0xff, 0x00, 0xc0, 0xfd, 0xff, 0x00,
X   0x00, 0xf9, 0x7f, 0x00, 0x00, 0xf8, 0x7f, 0x00, 0x00, 0xf0, 0x3f, 0x00,
X   0x00, 0xe0, 0x1f, 0x00, 0x00, 0x80, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
SHAR_EOF
chmod 0644 bitmaps/board/cherry.h ||
echo 'restore of bitmaps/board/cherry.h failed'
Wc_c="`wc -c < 'bitmaps/board/cherry.h'`"
test 881 -eq "$Wc_c" ||
	echo 'bitmaps/board/cherry.h: original size 881, current size' "$Wc_c"
rm -f _shar_wnt_.tmp
fi
# ============= bitmaps/board/cherrym.h ==============
if test -f 'bitmaps/board/cherrym.h' -a X"$1" != X"-c"; then
	echo 'x - skipping bitmaps/board/cherrym.h (File already exists)'
	rm -f _shar_wnt_.tmp
else
> _shar_wnt_.tmp
echo 'x - extracting bitmaps/board/cherrym.h (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'bitmaps/board/cherrym.h' &&
#define cherrym_width 32
#define cherrym_height 32
static char cherrym_bits[] = {
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x1f, 0x00, 0x00, 0xe0, 0x7f,
X   0x00, 0x00, 0xf8, 0x7f, 0x00, 0x00, 0xfe, 0x7f, 0x00, 0x00, 0xff, 0x7f,
X   0x00, 0x80, 0xff, 0x7f, 0x00, 0xc0, 0xff, 0x07, 0x00, 0xe0, 0xff, 0x03,
X   0x00, 0xf0, 0xff, 0x03, 0x80, 0xff, 0xf3, 0x01, 0xe0, 0xff, 0xf1, 0x01,
X   0xf0, 0xff, 0xf8, 0x01, 0xf8, 0xff, 0xf8, 0x00, 0xf8, 0xff, 0xff, 0x00,
X   0xfc, 0xff, 0x7f, 0x00, 0xfc, 0xff, 0x7f, 0x00, 0xfc, 0xff, 0xff, 0x00,
X   0xfc, 0xff, 0xff, 0x00, 0xfc, 0xff, 0xff, 0x01, 0xfc, 0xff, 0xff, 0x01,
X   0xf8, 0xff, 0xff, 0x01, 0xf8, 0xff, 0xff, 0x01, 0xf0, 0xff, 0xff, 0x01,
X   0xe0, 0xff, 0xff, 0x01, 0x80, 0xff, 0xff, 0x00, 0x00, 0xfc, 0xff, 0x00,
X   0x00, 0xf8, 0x7f, 0x00, 0x00, 0xf0, 0x3f, 0x00, 0x00, 0xc0, 0x0f, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
SHAR_EOF
chmod 0644 bitmaps/board/cherrym.h ||
echo 'restore of bitmaps/board/cherrym.h failed'
Wc_c="`wc -c < 'bitmaps/board/cherrym.h'`"
test 884 -eq "$Wc_c" ||
	echo 'bitmaps/board/cherrym.h: original size 884, current size' "$Wc_c"
rm -f _shar_wnt_.tmp
fi
# ============= bitmaps/board/digits.h ==============
if test -f 'bitmaps/board/digits.h' -a X"$1" != X"-c"; then
	echo 'x - skipping bitmaps/board/digits.h (File already exists)'
	rm -f _shar_wnt_.tmp
else
> _shar_wnt_.tmp
echo 'x - extracting bitmaps/board/digits.h (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'bitmaps/board/digits.h' &&
#define digits_width 88
#define digits_height 16
static char digits_bits[] = {
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c,
X   0x20, 0x3c, 0x3c, 0x24, 0x3c, 0x3c, 0x3c, 0x3c, 0x3c, 0x00, 0x7e, 0x60,
X   0x7e, 0x7e, 0x66, 0x7e, 0x7e, 0x7e, 0x7e, 0x7e, 0x00, 0x66, 0x60, 0x60,
X   0x60, 0x66, 0x06, 0x06, 0x60, 0x66, 0x66, 0x00, 0x66, 0x60, 0x60, 0x60,
X   0x66, 0x06, 0x06, 0x60, 0x66, 0x66, 0x00, 0x66, 0x60, 0x60, 0x60, 0x66,
X   0x06, 0x06, 0x60, 0x66, 0x66, 0x00, 0x66, 0x60, 0x60, 0x60, 0x66, 0x06,
X   0x06, 0x60, 0x66, 0x66, 0x00, 0x66, 0x60, 0x7c, 0x7c, 0x7e, 0x3e, 0x3e,
X   0x60, 0x7e, 0x7e, 0x00, 0x66, 0x60, 0x3e, 0x7c, 0x7c, 0x7c, 0x7e, 0x60,
X   0x7e, 0x7c, 0x00, 0x66, 0x60, 0x06, 0x60, 0x60, 0x60, 0x66, 0x60, 0x66,
X   0x60, 0x00, 0x66, 0x60, 0x06, 0x60, 0x60, 0x60, 0x66, 0x60, 0x66, 0x60,
X   0x00, 0x66, 0x60, 0x06, 0x60, 0x60, 0x60, 0x66, 0x60, 0x66, 0x60, 0x00,
X   0x66, 0x60, 0x06, 0x60, 0x60, 0x60, 0x66, 0x60, 0x66, 0x60, 0x00, 0x7e,
X   0x60, 0x7e, 0x7e, 0x60, 0x7e, 0x7e, 0x60, 0x7e, 0x7e, 0x00, 0x3c, 0x20,
X   0x3c, 0x3c, 0x20, 0x3c, 0x3c, 0x20, 0x3c, 0x3c, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
SHAR_EOF
chmod 0644 bitmaps/board/digits.h ||
echo 'restore of bitmaps/board/digits.h failed'
Wc_c="`wc -c < 'bitmaps/board/digits.h'`"
test 1181 -eq "$Wc_c" ||
	echo 'bitmaps/board/digits.h: original size 1181, current size' "$Wc_c"
rm -f _shar_wnt_.tmp
fi
# ============= bitmaps/board/digitsm.h ==============
if test -f 'bitmaps/board/digitsm.h' -a X"$1" != X"-c"; then
	echo 'x - skipping bitmaps/board/digitsm.h (File already exists)'
	rm -f _shar_wnt_.tmp
else
> _shar_wnt_.tmp
echo 'x - extracting bitmaps/board/digitsm.h (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'bitmaps/board/digitsm.h' &&
#define digitsm_width 88
#define digitsm_height 16
static char digitsm_bits[] = {
X   0x7e, 0x7e, 0x7e, 0x7e, 0x7e, 0x7e, 0x7e, 0x7e, 0x7e, 0x7e, 0x00, 0xff,
X   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0xff, 0xff,
X   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0xff, 0xff, 0xff,
X   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0xff, 0xff, 0xff, 0xff,
X   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff,
X   0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
X   0xff, 0xff, 0xff, 0xff, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
X   0xff, 0xff, 0xff, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
X   0xff, 0xff, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
X   0xff, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
X   0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00,
X   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0xff,
X   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0xff, 0xff,
X   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x7e, 0x7e, 0x7e,
X   0x7e, 0x7e, 0x7e, 0x7e, 0x7e, 0x7e, 0x7e, 0x00};
SHAR_EOF
chmod 0644 bitmaps/board/digitsm.h ||
echo 'restore of bitmaps/board/digitsm.h failed'
Wc_c="`wc -c < 'bitmaps/board/digitsm.h'`"
test 1184 -eq "$Wc_c" ||
	echo 'bitmaps/board/digitsm.h: original size 1184, current size' "$Wc_c"
rm -f _shar_wnt_.tmp
fi
# ============= bitmaps/board/edgelr.h ==============
if test -f 'bitmaps/board/edgelr.h' -a X"$1" != X"-c"; then
	echo 'x - skipping bitmaps/board/edgelr.h (File already exists)'
	rm -f _shar_wnt_.tmp
else
> _shar_wnt_.tmp
echo 'x - extracting bitmaps/board/edgelr.h (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'bitmaps/board/edgelr.h' &&
#define edgelr_width 40
#define edgelr_height 20
static char edgelr_bits[] = {
X   0xf0, 0xff, 0xff, 0xff, 0x0f, 0xf0, 0xff, 0xff, 0xff, 0x0f, 0xf0, 0xff,
X   0xff, 0xff, 0x0f, 0xf0, 0xff, 0xff, 0xff, 0x0f, 0xfc, 0xff, 0xff, 0xff,
X   0x3f, 0xf8, 0xff, 0xff, 0xff, 0x1f, 0xf0, 0xff, 0xff, 0xff, 0x0f, 0xf0,
X   0xff, 0xff, 0xff, 0x0f, 0xf0, 0xff, 0xff, 0xff, 0x0f, 0xf0, 0xff, 0xff,
X   0xff, 0x0f, 0xf8, 0xff, 0xff, 0xff, 0x1f, 0xfc, 0xff, 0xff, 0xff, 0x3f,
X   0xfc, 0xff, 0xff, 0xff, 0x3f, 0xf8, 0xff, 0xff, 0xff, 0x1f, 0xf8, 0xff,
X   0xff, 0xff, 0x1f, 0xfc, 0xff, 0xff, 0xff, 0x3f, 0xfc, 0xff, 0xff, 0xff,
X   0x3f, 0xfe, 0xff, 0xff, 0xff, 0x7f, 0xfe, 0xff, 0xff, 0xff, 0x7f, 0xfc,
X   0xff, 0xff, 0xff, 0x3f};
SHAR_EOF
chmod 0644 bitmaps/board/edgelr.h ||
echo 'restore of bitmaps/board/edgelr.h failed'
Wc_c="`wc -c < 'bitmaps/board/edgelr.h'`"
test 707 -eq "$Wc_c" ||
	echo 'bitmaps/board/edgelr.h: original size 707, current size' "$Wc_c"
rm -f _shar_wnt_.tmp
fi
# ============= bitmaps/board/edgetb.h ==============
if test -f 'bitmaps/board/edgetb.h' -a X"$1" != X"-c"; then
	echo 'x - skipping bitmaps/board/edgetb.h (File already exists)'
	rm -f _shar_wnt_.tmp
else
> _shar_wnt_.tmp
echo 'x - extracting bitmaps/board/edgetb.h (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'bitmaps/board/edgetb.h' &&
#define edgetb_width 20
#define edgetb_height 40
static char edgetb_bits[] = {
X   0x00, 0x00, 0xf0, 0x00, 0x00, 0xf6, 0x10, 0x98, 0xff, 0x30, 0xfc, 0xff,
X   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
X   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
X   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
X   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
X   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
X   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
X   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
X   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
X   0x30, 0xfc, 0xff, 0x10, 0x98, 0xff, 0x00, 0x00, 0xf6, 0x00, 0x00, 0xf0};
SHAR_EOF
chmod 0644 bitmaps/board/edgetb.h ||
echo 'restore of bitmaps/board/edgetb.h failed'
Wc_c="`wc -c < 'bitmaps/board/edgetb.h'`"
test 830 -eq "$Wc_c" ||
	echo 'bitmaps/board/edgetb.h: original size 830, current size' "$Wc_c"
rm -f _shar_wnt_.tmp
fi
# ============= bitmaps/board/fill0.h ==============
if test -f 'bitmaps/board/fill0.h' -a X"$1" != X"-c"; then
	echo 'x - skipping bitmaps/board/fill0.h (File already exists)'
	rm -f _shar_wnt_.tmp
else
> _shar_wnt_.tmp
echo 'x - extracting bitmaps/board/fill0.h (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'bitmaps/board/fill0.h' &&
#define fill0_width 32
#define fill0_height 16
static char fill0_bits[] = {
X   0xff, 0xff, 0xfe, 0xff, 0xff, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xff,
X   0xff, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xff, 0xff, 0x7f, 0xff, 0xff,
X   0xaa, 0xaa, 0xaa, 0xaa, 0x55, 0x55, 0x55, 0x55, 0xfe, 0xff, 0xff, 0xff,
X   0xff, 0xff, 0xff, 0x7f, 0xfe, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x7f,
X   0xfe, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x7f, 0xaa, 0xaa, 0xaa, 0xaa,
X   0x55, 0x55, 0x55, 0x55};
SHAR_EOF
chmod 0644 bitmaps/board/fill0.h ||
echo 'restore of bitmaps/board/fill0.h failed'
Wc_c="`wc -c < 'bitmaps/board/fill0.h'`"
test 479 -eq "$Wc_c" ||
	echo 'bitmaps/board/fill0.h: original size 479, current size' "$Wc_c"
rm -f _shar_wnt_.tmp
fi
# ============= bitmaps/board/fill1.h ==============
if test -f 'bitmaps/board/fill1.h' -a X"$1" != X"-c"; then
	echo 'x - skipping bitmaps/board/fill1.h (File already exists)'
	rm -f _shar_wnt_.tmp
else
> _shar_wnt_.tmp
echo 'x - extracting bitmaps/board/fill1.h (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'bitmaps/board/fill1.h' &&
#define fill1_width 32
#define fill1_height 16
static char fill1_bits[] = {
X   0x55, 0x55, 0xff, 0xff, 0xaa, 0xea, 0xff, 0xbf, 0x55, 0xf5, 0xff, 0x5f,
X   0xaa, 0xfe, 0xff, 0xab, 0x55, 0xff, 0xff, 0x55, 0xea, 0xff, 0xbf, 0xaa,
X   0xf5, 0xff, 0x5f, 0x55, 0xfe, 0xff, 0xab, 0xaa, 0xff, 0xff, 0x55, 0x55,
X   0xff, 0xbf, 0xaa, 0xea, 0xff, 0x5f, 0x55, 0xf5, 0xff, 0xab, 0xaa, 0xfe,
X   0xff, 0x55, 0x55, 0xff, 0xbf, 0xaa, 0xea, 0xff, 0x5f, 0x55, 0xf5, 0xff,
X   0xab, 0xaa, 0xfe, 0xff};
SHAR_EOF
chmod 0644 bitmaps/board/fill1.h ||
echo 'restore of bitmaps/board/fill1.h failed'
Wc_c="`wc -c < 'bitmaps/board/fill1.h'`"
test 479 -eq "$Wc_c" ||
	echo 'bitmaps/board/fill1.h: original size 479, current size' "$Wc_c"
rm -f _shar_wnt_.tmp
fi
# ============= bitmaps/board/fill2.h ==============
if test -f 'bitmaps/board/fill2.h' -a X"$1" != X"-c"; then
	echo 'x - skipping bitmaps/board/fill2.h (File already exists)'
	rm -f _shar_wnt_.tmp
else
> _shar_wnt_.tmp
echo 'x - extracting bitmaps/board/fill2.h (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'bitmaps/board/fill2.h' &&
#define fill2_width 32
#define fill2_height 16
static char fill2_bits[] = {
X   0x7f, 0x55, 0x55, 0xfd, 0xff, 0xaa, 0xaa, 0xff, 0xff, 0x57, 0xd5, 0xff,
X   0xfe, 0xaf, 0xfa, 0xbf, 0xf5, 0x7f, 0xfd, 0x5f, 0xea, 0xff, 0xff, 0xab,
X   0x55, 0xff, 0xff, 0x55, 0xaa, 0xfe, 0xbf, 0xaa, 0x55, 0xfd, 0x7f, 0x55,
X   0xaa, 0xff, 0xff, 0xaa, 0xd5, 0xff, 0xff, 0x57, 0xfa, 0xbf, 0xfe, 0xaf,
X   0xfd, 0x5f, 0xf5, 0x7f, 0xff, 0xab, 0xea, 0xff, 0xff, 0x55, 0x55, 0xff,
X   0xbf, 0xaa, 0xaa, 0xfe};
SHAR_EOF
chmod 0644 bitmaps/board/fill2.h ||
echo 'restore of bitmaps/board/fill2.h failed'
Wc_c="`wc -c < 'bitmaps/board/fill2.h'`"
test 479 -eq "$Wc_c" ||
	echo 'bitmaps/board/fill2.h: original size 479, current size' "$Wc_c"
rm -f _shar_wnt_.tmp
fi
# ============= bitmaps/board/fill3.h ==============
if test -f 'bitmaps/board/fill3.h' -a X"$1" != X"-c"; then
	echo 'x - skipping bitmaps/board/fill3.h (File already exists)'
	rm -f _shar_wnt_.tmp
else
> _shar_wnt_.tmp
echo 'x - extracting bitmaps/board/fill3.h (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'bitmaps/board/fill3.h' &&
#define fill3_width 32
#define fill3_height 16
static char fill3_bits[] = {
X   0x55, 0x55, 0x57, 0x55, 0xaa, 0xea, 0xaf, 0xaa, 0x55, 0xf5, 0x7f, 0x55,
X   0xaa, 0xfe, 0xff, 0xaa, 0x55, 0xff, 0xff, 0x57, 0xea, 0xff, 0xff, 0xaf,
X   0xf5, 0xff, 0xff, 0x7f, 0xfe, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd, 0xff,
X   0xff, 0xbf, 0xfa, 0xff, 0xff, 0x5f, 0xd5, 0xff, 0xff, 0xab, 0xaa, 0xff,
X   0xff, 0x55, 0x55, 0xfd, 0xbf, 0xaa, 0xaa, 0xfa, 0x5f, 0x55, 0x55, 0xd5,
X   0xab, 0xaa, 0xaa, 0xaa};
SHAR_EOF
chmod 0644 bitmaps/board/fill3.h ||
echo 'restore of bitmaps/board/fill3.h failed'
Wc_c="`wc -c < 'bitmaps/board/fill3.h'`"
test 479 -eq "$Wc_c" ||
	echo 'bitmaps/board/fill3.h: original size 479, current size' "$Wc_c"
rm -f _shar_wnt_.tmp
fi
# ============= bitmaps/board/munchlr.h ==============
if test -f 'bitmaps/board/munchlr.h' -a X"$1" != X"-c"; then
	echo 'x - skipping bitmaps/board/munchlr.h (File already exists)'
	rm -f _shar_wnt_.tmp
else
> _shar_wnt_.tmp
echo 'x - extracting bitmaps/board/munchlr.h (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'bitmaps/board/munchlr.h' &&
#define munchlr_width 16
#define munchlr_height 32
static char munchlr_bits[] = {
X   0xf0, 0x0f, 0x3c, 0x3c, 0x1e, 0x78, 0x1e, 0x78, 0x0f, 0xf0, 0x0f, 0xf0,
X   0x0f, 0xf0, 0x0f, 0xf0, 0x0f, 0xf0, 0x0f, 0xf0, 0x0f, 0xf0, 0x0f, 0xf0,
X   0x0f, 0xf0, 0x0f, 0xf0, 0x0f, 0xf0, 0x0f, 0xf0, 0x0f, 0xf0, 0x0f, 0xf0,
X   0x0f, 0xf0, 0x0f, 0xf0, 0x0f, 0xf0, 0x0f, 0xf0, 0x0f, 0xf0, 0x0f, 0xf0,
X   0x0f, 0xf0, 0x0f, 0xf0, 0x0f, 0xf0, 0x0f, 0xf0, 0x1e, 0x78, 0x1e, 0x78,
X   0x3c, 0x3c, 0xf0, 0x0f};
SHAR_EOF
chmod 0644 bitmaps/board/munchlr.h ||
echo 'restore of bitmaps/board/munchlr.h failed'
Wc_c="`wc -c < 'bitmaps/board/munchlr.h'`"
test 485 -eq "$Wc_c" ||
	echo 'bitmaps/board/munchlr.h: original size 485, current size' "$Wc_c"
rm -f _shar_wnt_.tmp
fi
# ============= bitmaps/board/munchtb.h ==============
if test -f 'bitmaps/board/munchtb.h' -a X"$1" != X"-c"; then
	echo 'x - skipping bitmaps/board/munchtb.h (File already exists)'
	rm -f _shar_wnt_.tmp
else
> _shar_wnt_.tmp
echo 'x - extracting bitmaps/board/munchtb.h (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'bitmaps/board/munchtb.h' &&
#define munchtb_width 32
#define munchtb_height 16
static char munchtb_bits[] = {
X   0xf0, 0xff, 0xff, 0x0f, 0xfc, 0xff, 0xff, 0x3f, 0xfe, 0xff, 0xff, 0x7f,
X   0xfe, 0xff, 0xff, 0x7f, 0x0f, 0x00, 0x00, 0xf0, 0x03, 0x00, 0x00, 0xc0,
X   0x01, 0x00, 0x00, 0x80, 0x01, 0x00, 0x00, 0x80, 0x01, 0x00, 0x00, 0x80,
X   0x01, 0x00, 0x00, 0x80, 0x03, 0x00, 0x00, 0xc0, 0x0f, 0x00, 0x00, 0xf0,
X   0xfe, 0xff, 0xff, 0x7f, 0xfe, 0xff, 0xff, 0x7f, 0xfc, 0xff, 0xff, 0x3f,
X   0xf0, 0xff, 0xff, 0x0f};
SHAR_EOF
chmod 0644 bitmaps/board/munchtb.h ||
echo 'restore of bitmaps/board/munchtb.h failed'
Wc_c="`wc -c < 'bitmaps/board/munchtb.h'`"
test 485 -eq "$Wc_c" ||
	echo 'bitmaps/board/munchtb.h: original size 485, current size' "$Wc_c"
rm -f _shar_wnt_.tmp
fi
# ============= bitmaps/board/oblong.h ==============
if test -f 'bitmaps/board/oblong.h' -a X"$1" != X"-c"; then
	echo 'x - skipping bitmaps/board/oblong.h (File already exists)'
	rm -f _shar_wnt_.tmp
else
> _shar_wnt_.tmp
echo 'x - extracting bitmaps/board/oblong.h (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'bitmaps/board/oblong.h' &&
#define oblong_width 32
#define oblong_height 32
static char oblong_bits[] = {
X   0xf0, 0xff, 0xff, 0x0f, 0xfc, 0xff, 0xff, 0x3f, 0xfe, 0xff, 0xff, 0x7f,
X   0xfe, 0xff, 0xff, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
X   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
X   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
X   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
X   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
X   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
X   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
X   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
X   0xff, 0xff, 0xff, 0xff, 0xfe, 0xff, 0xff, 0x7f, 0xfe, 0xff, 0xff, 0x7f,
X   0xfc, 0xff, 0xff, 0x3f, 0xf0, 0xff, 0xff, 0x0f};
SHAR_EOF
chmod 0644 bitmaps/board/oblong.h ||
echo 'restore of bitmaps/board/oblong.h failed'
Wc_c="`wc -c < 'bitmaps/board/oblong.h'`"
test 881 -eq "$Wc_c" ||
	echo 'bitmaps/board/oblong.h: original size 881, current size' "$Wc_c"
rm -f _shar_wnt_.tmp
fi
# ============= bitmaps/board/rect.h ==============
if test -f 'bitmaps/board/rect.h' -a X"$1" != X"-c"; then
	echo 'x - skipping bitmaps/board/rect.h (File already exists)'
	rm -f _shar_wnt_.tmp
else
> _shar_wnt_.tmp
echo 'x - extracting bitmaps/board/rect.h (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'bitmaps/board/rect.h' &&
#define rect_width 32
#define rect_height 32
static char rect_bits[] = {
X   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
X   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
X   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
X   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
X   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
X   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
X   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
X   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
X   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
X   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
X   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff};
SHAR_EOF
chmod 0644 bitmaps/board/rect.h ||
echo 'restore of bitmaps/board/rect.h failed'
Wc_c="`wc -c < 'bitmaps/board/rect.h'`"
test 875 -eq "$Wc_c" ||
	echo 'bitmaps/board/rect.h: original size 875, current size' "$Wc_c"
rm -f _shar_wnt_.tmp
fi
# ============= bitmaps/chomp/chmpcls.h ==============
if test ! -d 'bitmaps/chomp'; then
    echo 'x - creating directory bitmaps/chomp'
    mkdir 'bitmaps/chomp'
fi
if test -f 'bitmaps/chomp/chmpcls.h' -a X"$1" != X"-c"; then
	echo 'x - skipping bitmaps/chomp/chmpcls.h (File already exists)'
	rm -f _shar_wnt_.tmp
else
> _shar_wnt_.tmp
echo 'x - extracting bitmaps/chomp/chmpcls.h (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'bitmaps/chomp/chmpcls.h' &&
#define chmpcls_width 32
#define chmpcls_height 32
static char chmpcls_bits[] = {
X   0x00, 0x00, 0x00, 0x00, 0xe0, 0x07, 0xe0, 0x07, 0xf0, 0x0f, 0xf0, 0x0f,
X   0x30, 0x0c, 0x30, 0x0c, 0x30, 0x0f, 0x30, 0x0f, 0x30, 0x0f, 0x30, 0x0f,
X   0x30, 0x0c, 0x30, 0x0c, 0xf8, 0xff, 0xff, 0x1f, 0x0e, 0x00, 0x00, 0x70,
X   0x02, 0x00, 0x00, 0x40, 0x02, 0x00, 0x00, 0x40, 0x06, 0x00, 0x00, 0x60,
X   0x0c, 0x00, 0x00, 0x30, 0x08, 0x00, 0x00, 0x10, 0x0c, 0x00, 0x00, 0x30,
X   0x26, 0x00, 0x00, 0x64, 0x72, 0x00, 0x00, 0x4e, 0x72, 0x00, 0x00, 0x4e,
X   0xf2, 0x00, 0x00, 0x4f, 0xf2, 0xfd, 0xbf, 0x4f, 0xf2, 0xff, 0xff, 0x4f,
X   0xe2, 0xff, 0xff, 0x47, 0xc6, 0x1f, 0xf8, 0x63, 0x0c, 0x00, 0x00, 0x30,
X   0x08, 0x00, 0x00, 0x10, 0x0c, 0x00, 0x00, 0x30, 0x06, 0x00, 0x00, 0x60,
X   0xc2, 0x1f, 0xf8, 0x43, 0x46, 0x10, 0x08, 0x62, 0x6c, 0x30, 0x0c, 0x36,
X   0x38, 0xe0, 0x07, 0x1c, 0x00, 0x00, 0x00, 0x00};
SHAR_EOF
chmod 0644 bitmaps/chomp/chmpcls.h ||
echo 'restore of bitmaps/chomp/chmpcls.h failed'
Wc_c="`wc -c < 'bitmaps/chomp/chmpcls.h'`"
test 884 -eq "$Wc_c" ||
	echo 'bitmaps/chomp/chmpcls.h: original size 884, current size' "$Wc_c"
rm -f _shar_wnt_.tmp
fi
# ============= bitmaps/chomp/chmpclsm.h ==============
if test -f 'bitmaps/chomp/chmpclsm.h' -a X"$1" != X"-c"; then
	echo 'x - skipping bitmaps/chomp/chmpclsm.h (File already exists)'
	rm -f _shar_wnt_.tmp
else
> _shar_wnt_.tmp
echo 'x - extracting bitmaps/chomp/chmpclsm.h (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'bitmaps/chomp/chmpclsm.h' &&
#define chmpclsm_width 32
#define chmpclsm_height 32
static char chmpclsm_bits[] = {
X   0xf0, 0x0f, 0xf0, 0x0f, 0xf8, 0x1f, 0xf8, 0x1f, 0xf8, 0x1f, 0xf8, 0x1f,
X   0xf8, 0x1f, 0xf8, 0x1f, 0xf8, 0x1f, 0xf8, 0x1f, 0xf8, 0x1f, 0xf8, 0x1f,
X   0xfc, 0xff, 0xff, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
X   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
X   0xff, 0xff, 0xff, 0xff, 0xfe, 0xff, 0xff, 0x7f, 0xff, 0xff, 0xff, 0xff,
X   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
X   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
X   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
X   0xfe, 0xff, 0xff, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
X   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x1f, 0xff,
SHAR_EOF
true || echo 'restore of bitmaps/chomp/chmpclsm.h failed'
fi
echo 'End of  part 6'
echo 'File bitmaps/chomp/chmpclsm.h is continued in part 7'
echo 7 > _shar_seq_.tmp
exit 0
-- 
---
Senior Systems Scientist		mail: dcmartin@msi.com
Molecular Simulations, Inc.		uucp: uunet!dcmartin
796 North Pastoria Avenue		at&t: 408/522-9236
