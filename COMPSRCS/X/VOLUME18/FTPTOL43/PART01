Path: uunet!dtix!darwin.sura.net!mips!msi!dcmartin
From: Mike.Sullivan@EBay.Sun.COM (Mike Sullivan {AKA Simon BarSinister})
Newsgroups: comp.sources.x
Subject: v18i083: Ftptool 4.3 (XVIEW), Part01/12
Message-ID: <csx-18i083-ftptool-4.3@uunet.UU.NET>
Date: 18 Aug 92 15:35:01 GMT
Sender: dcmartin@msi.com (David C. Martin - Moderator)
Organization: Molecular Simulations, Inc.
Lines: 1653
Approved: dcmartin@msi.com
Originator: dcmartin@fascet

Submitted-by: Mike.Sullivan@EBay.Sun.COM (Mike Sullivan {AKA Simon BarSinister})
Posting-number: Volume 18, Issue 83
Archive-name: ftptool-4.3/part01

[From the README - dcm]

You should be able to compile and run it on 4.1.X, OW2 or better. You
might want to use xview3, which is available with the OW3 CD or from
export.lcs.mit.edu in /contrib/xview3. For a sun3, you may also need
the unofficial patch /contrib/xview3/Fixes/xview3.0_unofficial_patch
(unless Patch-02 fixed those problems).  Other operating
systems (besides SunOS 5.0) have not been tested by me, though I believe 
it works under Ultrix and 386SVR4.

#!/bin/sh
# This is a shell archive (produced by shar 3.50)
# To extract the files from this archive, save it to a file, remove
# everything above the "!/bin/sh" line above, and type "sh file_name".
#
# made 08/18/1992 15:30 UTC by dcmartin@fascet
# Source directory /home/fascet/dcmartin/csx/src/ftptool/Ftptool4.3
#
# existing files will NOT be overwritten unless -c is specified
#
# This is part 1 of a multipart archive                                    
# do not concatenate these parts, unpack them in order with /bin/sh        
#
# This shar contains:
# length  mode       name
# ------ ---------- ------------------------------------------
#   1989 -rw-r--r-- Imakefile
#   2808 -rw-r--r-- LEGAL_NOTICE
#   2480 -rw-r--r-- Makefile.sunpro
#    268 -rw-r--r-- README.FIRST
#    771 -rw-r--r-- batch.h
#     75 -rw-r--r-- batch_struct.h
#   2190 -rw-r--r-- busy1.ftptool.icon
#   2190 -rw-r--r-- busy2.ftptool.icon
#   2190 -rw-r--r-- busy3.ftptool.icon
#   2190 -rw-r--r-- busy4.ftptool.icon
#    672 -rw-r--r-- change_dir.h
#   1749 -rw-r--r-- config.h
#    224 -rw-r--r-- create_main.h
#    704 -rw-r--r-- create_other.h
#    747 -rw-r--r-- dircache.h
#    235 -rw-r--r-- dircache_struct.h
#    194 -rw-r--r-- directory.pr
#   1869 -rw-r--r-- dirlist.h
#    295 -rw-r--r-- dirlist_struct.h
#    849 -rw-r--r-- dofuncs.h
#    221 -rw-r--r-- dotdot.pr
#   1304 -rw-r--r-- event.h
#    194 -rw-r--r-- file.pr
#   2190 -rw-r--r-- ftptool.icon
#   2682 -rw-r--r-- host_list.h
#    248 -rw-r--r-- host_list_struct.h
#    562 -rw-r--r-- lex.l
#    330 -rw-r--r-- main.h
#    770 -rw-r--r-- menu_funcs.h
#   2248 -rw-r--r-- misc.h
#     29 -rw-r--r-- more
#     40 -rw-r--r-- patchlevel.h
#    646 -rw-r--r-- readdir.h
#   1700 -rw-r--r-- schedule.h
#    165 -rw-r--r-- schedule_struct.h
#   2190 -rw-r--r-- tar.viewer.icon
#    548 -rw-r--r-- tar_view.h
#   1071 -rw-r--r-- transfer.h
#    222 -rw-r--r-- unknown.pr
#    675 -rw-r--r-- view_file.h
#   3069 -rw-r--r-- README
#  10213 -rw-r--r-- batch.c
#   4698 -rw-r--r-- button_funcs.h
#   4331 -rw-r--r-- dircache.c
#   2888 -rw-r--r-- ftp_var.h
#   9377 -rw-r--r-- ftptool.h
#   7548 -rw-r--r-- tar_view.c
#   6916 -rw-r--r-- view_file.c
#  11937 -rw-r--r-- Makefile
#  12320 -rw-r--r-- dirlist.c
#  11513 -rw-r--r-- lex.c
#  13063 -rw-r--r-- readdir.c
#  14252 -rw-r--r-- change_dir.c
#  13307 -rw-r--r-- event.c
#  16551 -rw-r--r-- menu_funcs.c
#  18272 -rw-r--r-- HISTORY
#  17319 -rw-r--r-- schedule.c
#  16747 -rw-r--r-- transfer.c
#  20039 -rw-r--r-- dofuncs.c
#  18317 -rw-r--r-- main.c
#  20101 -rw-r--r-- ftptool.man
#  23290 -rw-r--r-- misc.c
#  27153 -rw-r--r-- create_main.c
#  30712 -rw-r--r-- ftp.c
#  30792 -rw-r--r-- host_list.c
#  32541 -rw-r--r-- ftptool.info
#  40591 -rw-r--r-- create_other.c
#  44896 -rw-r--r-- button_funcs.c
#
if test -r _shar_seq_.tmp; then
	echo 'Must unpack archives in sequence!'
	echo Please unpack part `cat _shar_seq_.tmp` next
	exit 1
fi
# ============= Imakefile ==============
if test -f 'Imakefile' -a X"$1" != X"-c"; then
	echo 'x - skipping Imakefile (File already exists)'
	rm -f _shar_wnt_.tmp
else
> _shar_wnt_.tmp
echo 'x - extracting Imakefile (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'Imakefile' &&
/* Where do you have OpenWindows 3 installed? */
#OPENWINHOME = /usr/local/OW3
X
#Uncomment the appropriate one if necessary. You should not need
#either, as it should be determined by the program.
#XVIEW= -DXVIEW3
#XVIEW= -DXVIEW2
X
#Uncomment the following line for SunOS 4.X
DEFINES= $(XVIEW)
X
#Uncomment the following lines for SunOS 5.0. 
#DEFINES= -DSYSV -DSVR4 
#LIBSUNOS5= -R /usr/openwin/lib:/opt/openwin/lib:/usr/opt/openwin/lib \
#	-lsocket -lnsl
X
#Uncomment the following line for 386 SVR4.
#DEFINES= -DSYSV386 -DSYSV -DSVR4
X
SYS_LIBRARIES 	= -lm
LOCAL_LIBRARIES = -lxview -lolgx $(XLIB) $(LIBSUNOS5)
LDOPTIONS 		= -L$(OPENWINHOME)/lib
INCLUDES 		= -I$(OPENWINHOME)/include
X
/* this probably needs to be changed to suit your site. */
HELPDIR			= $(OPENWINHOME)/lib/help
X
ICONS = busy1.ftptool.icon busy2.ftptool.icon busy3.ftptool.icon \
X	busy4.ftptool.icon ftptool.icon tar.viewer.icon
X
HEADERS = ftptool.h
X
SUBHEADERS= batch.h batch_struct.h button_funcs.h change_dir.h config.h \
X	create_main.h create_other.h dircache.h dircache_struct.h dirlist.h \
X	dirlist_struct.h dofuncs.h event.h ftp_var.h host_list.h \
X	host_list_struct.h main.h menu_funcs.h misc.h patchlevel.h readdir.h \
X	schedule.h schedule_struct.h tar_view.h transfer.h view_file.h
X
INFOFILES = ftptool.info
X
MANPAGES = ftptool.man
X
SRCS = batch.c button_funcs.c change_dir.c create_main.c create_other.c \
X	dircache.c dirlist.c dofuncs.c event.c ftp.c host_list.c lex.l main.c \
X	menu_funcs.c misc.c readdir.c schedule.c tar_view.c transfer.c view_file.c
X
OBJS = batch.o button_funcs.o change_dir.o create_main.o create_other.o \
X	dircache.o dirlist.o dofuncs.o event.o ftp.o host_list.o lex.o main.o \
X	menu_funcs.o misc.o readdir.o schedule.o tar_view.o transfer.o view_file.o 
X
ALLFILES = ${HEADERS} ${INFOFILES} ${MANPAGES} ${ICONS} ${SRCS}
X
AllTarget(ftptool)
X
$(OBJS): $(HEADERS) $(SUBHEADERS)
X
ComplexProgramTarget(ftptool)
X
install::
X	$(INSTALL) -c $(INSTMANFLAGS) ftptool.info $(HELPDIR)/ftptool.info
SHAR_EOF
chmod 0644 Imakefile ||
echo 'restore of Imakefile failed'
Wc_c="`wc -c < 'Imakefile'`"
test 1989 -eq "$Wc_c" ||
	echo 'Imakefile: original size 1989, current size' "$Wc_c"
rm -f _shar_wnt_.tmp
fi
# ============= LEGAL_NOTICE ==============
if test -f 'LEGAL_NOTICE' -a X"$1" != X"-c"; then
	echo 'x - skipping LEGAL_NOTICE (File already exists)'
	rm -f _shar_wnt_.tmp
else
> _shar_wnt_.tmp
echo 'x - extracting LEGAL_NOTICE (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'LEGAL_NOTICE' &&
X	NOTICE TO USER: The source code, including the glyphs or icons 
X	forming a par of the OPEN LOOK TM Graphic User Interface, on this 
X	tape and in these files is copyrighted under U.S. and international
X	laws. Sun Microsystems, Inc. of Mountain View, California owns
X	the copyright and has design patents pending on many of the icons. 
X	AT&T is the owner of the OPEN LOOK trademark associated with the
X	materials on this tape. Users and possessors of this source code 
X	are hereby granted a nonexclusive, royalty-free copyright and 
X	design patent license to use this code in individual and 
X	commercial software. A royalty-free, nonexclusive trademark
X	license to refer to the code and output as "OPEN LOOK" compatible 
X	is available from AT&T if, and only if, the appearance of the 
X	icons or glyphs is not changed in any manner except as absolutely
X	necessary to accommodate the standard resolution of the screen or
X	other output device, the code and output is not changed except as 
X	authorized herein, and the code and output is validated by AT&T. 
X	Bigelow & Holmes is the owner of the Lucida (R) trademark for the
X	fonts and bit-mapped images associated with the materials on this 
X	tape. Users are granted a royalty-free, nonexclusive license to use
X	the trademark only to identify the fonts and bit-mapped images if, 
X	and only if, the fonts and bit-mapped images are not modified in any
X	way by the user. 
X
X
X	Any use of this source code must include, in the user documentation 
X	and internal comments to the code, notices to the end user as  
X	follows:
X
X
X	(c) Copyright 1989 Sun Microsystems, Inc. Sun design patents
X	pending in the U.S. and foreign countries. OPEN LOOK is a 
X	trademark of AT&T. Used by written permission of the owners.
X
X
X 	(c) Copyright Bigelow & Holmes 1986, 1985. Lucida is a registered 
X	trademark of Bigelow & Holmes. Permission to use the Lucida 
X	trademark is hereby granted only in association with the images 
X	and fonts described in this file.
X
X
X
X	SUN MICROSYSTEMS, INC., AT&T, AND BIGELOW & HOLMES 
X	MAKE NO REPRESENTATIONS ABOUT THE SUITABILITY OF
X 	THIS SOURCE CODE FOR ANY PURPOSE. IT IS PROVIDED "AS IS" 
X	WITHOUT EXPRESS OR IMPLIED WARRANTY OF ANY KIND. 
X	SUN  MICROSYSTEMS, INC., AT&T AND BIGELOW  & HOLMES, 
X	SEVERALLY AND INDIVIDUALLY, DISCLAIM ALL WARRANTIES 
X	WITH REGARD TO THIS SOURCE CODE, INCLUDING ALL IMPLIED
X	WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
X	PARTICULAR PURPOSE. IN NO EVENT SHALL SUN MICROSYSTEMS,
X	INC., AT&T OR BIGELOW & HOLMES BE LIABLE FOR ANY
X	SPECIAL, INDIRECT, INCIDENTAL, OR CONSEQUENTIAL DAMAGES,
X	OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA 	
X	OR PROFITS, WHETHER IN AN ACTION OF  CONTRACT, NEGLIGENCE
X	OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION
X	WITH THE USE OR PERFORMANCE OF THIS SOURCE CODE.
SHAR_EOF
chmod 0644 LEGAL_NOTICE ||
echo 'restore of LEGAL_NOTICE failed'
Wc_c="`wc -c < 'LEGAL_NOTICE'`"
test 2808 -eq "$Wc_c" ||
	echo 'LEGAL_NOTICE: original size 2808, current size' "$Wc_c"
rm -f _shar_wnt_.tmp
fi
# ============= Makefile.sunpro ==============
if test -f 'Makefile.sunpro' -a X"$1" != X"-c"; then
	echo 'x - skipping Makefile.sunpro (File already exists)'
	rm -f _shar_wnt_.tmp
else
> _shar_wnt_.tmp
echo 'x - extracting Makefile.sunpro (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'Makefile.sunpro' &&
OFILES= batch.o button_funcs.o change_dir.o create_main.o create_other.o \
X	dircache.o dirlist.o dofuncs.o event.o ftp.o host_list.o lex.o main.o \
X	menu_funcs.o misc.o readdir.o schedule.o tar_view.o transfer.o view_file.o
X
CFILES= batch.c button_funcs.c change_dir.c create_main.c create_other.c \
X	dircache.c dirlist.c dofuncs.c event.c ftp.c host_list.c lex.l main.c \
X	menu_funcs.c misc.c readdir.c schedule.c tar_view.c transfer.c view_file.c
X
ICONS= busy1.ftptool.icon busy2.ftptool.icon busy3.ftptool.icon \
X	busy4.ftptool.icon ftptool.icon tar.viewer.icon
X
SUBHEADERS= batch.h batch_struct.h button_funcs.h change_dir.h config.h \
X	create_main.h create_other.h dircache.h dircache_struct.h dirlist.h \
X	dirlist_struct.h dofuncs.h event.h ftp_var.h host_list.h \
X	host_list_struct.h main.h menu_funcs.h misc.h patchlevel.h readdir.h \
X	schedule.h schedule_struct.h tar_view.h transfer.h view_file.h
X
HEADERS= ftptool.h
X
#Uncomment the following if ftptool should use the resolver only.
#to make sure the static ftptool can use the resolver
#RES= -lresolv
X
#Uncomment if OPENWINHOME is not set
#OPENWINHOME=/usr/openwin
X
#Uncomment the appropriate one if necessary. You should not need
#either, as it should be determined by the program.
#XVIEW= -DXVIEW3
#XVIEW= -DXVIEW2
X
#Uncomment the following lines for SunOS 4.X
LIBS= -Bstatic -L$$OPENWINHOME/lib -lxview -lolgx -lX11 -Bdynamic $(RES) -lm
DEFINES= $(XVIEW)
#Choose a CC. Any CC (only tested under cc and gcc though)
CC=cc 
#CC=gcc -ansi
X
#Uncomment the following lines for SunOS 5.0
#DEFINES= -DSYSV -DSVR4 $(XVIEW)
#LIBS= -R /usr/openwin/lib:/opt/openwin/lib:/usr/opt/openwin/lib \
#	-L${OPENWINHOME}/lib -lxview -lolgx -lX11 -lsocket -lnsl -lm
#CC=cc -Xa
X
X
X
#Uncomment the following line for 386 SVR4.
#DEFINES= -DSYSV -DSVR4 -DSYSV386
X
CFLAGS= -I$$OPENWINHOME/include  -O $(DEFINES)
X
BINDIR=/usr/local/Xbin
HELPDIR=$$OPENWINHOME/lib/help
MANDIR=/usr/local/man
MANSECT=1
X
#BINDIR=/net/enterprise/export/local/Xbin
#HELPDIR=/net/enterprise/export/unbundled/OW3/lib/help
#MANDIR=/net/enterprise/export/local/man
#MANSECT=1
X
ftptool: $(OFILES)
X	$(CC) -o ftptool $(OFILES) $(STATIC) $(LIBS)
X
$(OFILES): $(HEADERS) $(SUBHEADERS) $(ICONS)
X
lint:
X	/usr/bin/lint -DLINT -I$$OPENWINHOME/include $(CFILES)
X
vgrind:
X	vgrind $(CFILES) -s11 -t | lpr -t
X
clean:
X	rm -f $(OFILES) ftptool
X
install: ftptool
X	install ftptool $(BINDIR)
X	install ftptool.info $(HELPDIR)
X	install ftptool.man $(MANDIR)/man$(MANSECT)/ftptool.$(MANSECT)
SHAR_EOF
chmod 0644 Makefile.sunpro ||
echo 'restore of Makefile.sunpro failed'
Wc_c="`wc -c < 'Makefile.sunpro'`"
test 2480 -eq "$Wc_c" ||
	echo 'Makefile.sunpro: original size 2480, current size' "$Wc_c"
rm -f _shar_wnt_.tmp
fi
# ============= README.FIRST ==============
if test -f 'README.FIRST' -a X"$1" != X"-c"; then
	echo 'x - skipping README.FIRST (File already exists)'
	rm -f _shar_wnt_.tmp
else
> _shar_wnt_.tmp
echo 'x - extracting README.FIRST (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'README.FIRST' &&
X
As of ftptool 4.3, ftptool will automatically try to use Sun 
Consulting's proxy ftp to get to the named host. This is _not_ enabled
by default. Enable it in the Properties window. This is primarily for
use by Sun people, who need it to get to hosts on the Internet.
SHAR_EOF
chmod 0644 README.FIRST ||
echo 'restore of README.FIRST failed'
Wc_c="`wc -c < 'README.FIRST'`"
test 268 -eq "$Wc_c" ||
	echo 'README.FIRST: original size 268, current size' "$Wc_c"
rm -f _shar_wnt_.tmp
fi
# ============= batch.h ==============
if test -f 'batch.h' -a X"$1" != X"-c"; then
	echo 'x - skipping batch.h (File already exists)'
	rm -f _shar_wnt_.tmp
else
> _shar_wnt_.tmp
echo 'x - extracting batch.h (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'batch.h' &&
X
#ifdef USE_PROTOTYPES
X
struct batchlist *new_batchlist(void);
struct batchlist *add_batchname(Panel panel_list, char *name, mode_t mode,
X	size_t size, char *dir);
void free_batchlist(Panel panel_list, int only_selected);
int batchentry_exists(Panel panel_list, char *name);
void receive_list_delete_proc(void);
void send_list_delete_proc(void);
void dobatchget(void);
void dobatchput(void);
int save_batch_list(Panel list, char *filename);
int load_batch_list(Panel list, char *filename);
X
#else
X
struct batchlist *new_batchlist();
struct batchlist *add_batchname();
void free_batchlist();
int batchentry_exists();
void receive_list_delete_proc();
void send_list_delete_proc();
void dobatchget();
void dobatchput();
int save_batch_list();
int load_batch_list();
X
#endif
SHAR_EOF
chmod 0644 batch.h ||
echo 'restore of batch.h failed'
Wc_c="`wc -c < 'batch.h'`"
test 771 -eq "$Wc_c" ||
	echo 'batch.h: original size 771, current size' "$Wc_c"
rm -f _shar_wnt_.tmp
fi
# ============= batch_struct.h ==============
if test -f 'batch_struct.h' -a X"$1" != X"-c"; then
	echo 'x - skipping batch_struct.h (File already exists)'
	rm -f _shar_wnt_.tmp
else
> _shar_wnt_.tmp
echo 'x - extracting batch_struct.h (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'batch_struct.h' &&
struct batchlist {
X	char	*name;
X	mode_t	mode;
X	int		row;
X	size_t	size;
};
X
SHAR_EOF
chmod 0644 batch_struct.h ||
echo 'restore of batch_struct.h failed'
Wc_c="`wc -c < 'batch_struct.h'`"
test 75 -eq "$Wc_c" ||
	echo 'batch_struct.h: original size 75, current size' "$Wc_c"
rm -f _shar_wnt_.tmp
fi
# ============= busy1.ftptool.icon ==============
if test -f 'busy1.ftptool.icon' -a X"$1" != X"-c"; then
	echo 'x - skipping busy1.ftptool.icon (File already exists)'
	rm -f _shar_wnt_.tmp
else
> _shar_wnt_.tmp
echo 'x - extracting busy1.ftptool.icon (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'busy1.ftptool.icon' &&
/* Format_version=1, Width=64, Height=64, Depth=1, Valid_bits_per_item=16
X */
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x001F,	0xFEFF,	0xFE7F,	0xF000,
X	0x001F,	0xFEFF,	0xFE7F,	0xFC00,
X	0x001C,	0x0003,	0x8070,	0x1C00,
X	0x001C,	0x0003,	0x8070,	0x0E00,
X	0x001C,	0x0003,	0x8070,	0x0E00,
X	0x001C,	0x0003,	0x8070,	0x0E00,
X	0x001C,	0x0003,	0x8070,	0x0E00,
X	0x001C,	0x0003,	0x8070,	0x1C00,
X	0x001F,	0xFC03,	0x807F,	0xFC00,
X	0x001F,	0xFC03,	0x807F,	0xF800,
X	0x001C,	0x0003,	0x8070,	0x0000,
X	0x001C,	0x0003,	0x8070,	0x0000,
X	0x001C,	0x0003,	0x8070,	0x0000,
X	0x001C,	0x0003,	0x8070,	0x0000,
X	0x001C,	0x0003,	0x8070,	0x0000,
X	0x001C,	0x0003,	0x8070,	0x0000,
X	0x001C,	0x0003,	0x8070,	0x0000,
X	0x001C,	0x0003,	0x8070,	0x0000,
X	0x001C,	0x0003,	0x8070,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0010,	0x0000,	0x0000,	0x1000,
X	0x0030,	0x0000,	0x0000,	0x1800,
X	0x0070,	0x0000,	0x0000,	0x1C00,
X	0x00F0,	0x0000,	0x0000,	0x1A00,
X	0x0170,	0x0000,	0x0000,	0x1900,
X	0x027F,	0xFFFF,	0xFFFF,	0xF880,
X	0x0478,	0x7878,	0x7878,	0x7840,
X	0x0878,	0x7878,	0x7878,	0x7820,
X	0x0478,	0x7878,	0x7878,	0x7840,
X	0x027F,	0xFFFF,	0xFFFF,	0xF880,
X	0x0170,	0x0000,	0x0000,	0x1900,
X	0x00F0,	0x0000,	0x0000,	0x1A00,
X	0x0070,	0x0000,	0x0000,	0x1C00,
X	0x0030,	0x0000,	0x0000,	0x1800,
X	0x0010,	0x0000,	0x0000,	0x1000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
SHAR_EOF
chmod 0644 busy1.ftptool.icon ||
echo 'restore of busy1.ftptool.icon failed'
Wc_c="`wc -c < 'busy1.ftptool.icon'`"
test 2190 -eq "$Wc_c" ||
	echo 'busy1.ftptool.icon: original size 2190, current size' "$Wc_c"
rm -f _shar_wnt_.tmp
fi
# ============= busy2.ftptool.icon ==============
if test -f 'busy2.ftptool.icon' -a X"$1" != X"-c"; then
	echo 'x - skipping busy2.ftptool.icon (File already exists)'
	rm -f _shar_wnt_.tmp
else
> _shar_wnt_.tmp
echo 'x - extracting busy2.ftptool.icon (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'busy2.ftptool.icon' &&
/* Format_version=1, Width=64, Height=64, Depth=1, Valid_bits_per_item=16
X */
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x001F,	0xFEFF,	0xFE7F,	0xF000,
X	0x001F,	0xFEFF,	0xFE7F,	0xFC00,
X	0x001C,	0x0003,	0x8070,	0x1C00,
X	0x001C,	0x0003,	0x8070,	0x0E00,
X	0x001C,	0x0003,	0x8070,	0x0E00,
X	0x001C,	0x0003,	0x8070,	0x0E00,
X	0x001C,	0x0003,	0x8070,	0x0E00,
X	0x001C,	0x0003,	0x8070,	0x1C00,
X	0x001F,	0xFC03,	0x807F,	0xFC00,
X	0x001F,	0xFC03,	0x807F,	0xF800,
X	0x001C,	0x0003,	0x8070,	0x0000,
X	0x001C,	0x0003,	0x8070,	0x0000,
X	0x001C,	0x0003,	0x8070,	0x0000,
X	0x001C,	0x0003,	0x8070,	0x0000,
X	0x001C,	0x0003,	0x8070,	0x0000,
X	0x001C,	0x0003,	0x8070,	0x0000,
X	0x001C,	0x0003,	0x8070,	0x0000,
X	0x001C,	0x0003,	0x8070,	0x0000,
X	0x001C,	0x0003,	0x8070,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0010,	0x0000,	0x0000,	0x1000,
X	0x0030,	0x0000,	0x0000,	0x1800,
X	0x0050,	0x0000,	0x0000,	0x1C00,
X	0x0090,	0x0000,	0x0000,	0x1E00,
X	0x0110,	0x0000,	0x0000,	0x1F00,
X	0x021F,	0xFFFF,	0xFFFF,	0xFE80,
X	0x061E,	0x1E1E,	0x1E1E,	0x1E40,
X	0x0E1E,	0x1E1E,	0x1E1E,	0x1E20,
X	0x061E,	0x1E1E,	0x1E1E,	0x1E40,
X	0x021F,	0xFFFF,	0xFFFF,	0xFE80,
X	0x0110,	0x0000,	0x0000,	0x1F00,
X	0x0090,	0x0000,	0x0000,	0x1E00,
X	0x0050,	0x0000,	0x0000,	0x1C00,
X	0x0030,	0x0000,	0x0000,	0x1800,
X	0x0010,	0x0000,	0x0000,	0x1000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
SHAR_EOF
chmod 0644 busy2.ftptool.icon ||
echo 'restore of busy2.ftptool.icon failed'
Wc_c="`wc -c < 'busy2.ftptool.icon'`"
test 2190 -eq "$Wc_c" ||
	echo 'busy2.ftptool.icon: original size 2190, current size' "$Wc_c"
rm -f _shar_wnt_.tmp
fi
# ============= busy3.ftptool.icon ==============
if test -f 'busy3.ftptool.icon' -a X"$1" != X"-c"; then
	echo 'x - skipping busy3.ftptool.icon (File already exists)'
	rm -f _shar_wnt_.tmp
else
> _shar_wnt_.tmp
echo 'x - extracting busy3.ftptool.icon (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'busy3.ftptool.icon' &&
/* Format_version=1, Width=64, Height=64, Depth=1, Valid_bits_per_item=16
X */
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x001F,	0xFEFF,	0xFE7F,	0xF000,
X	0x001F,	0xFEFF,	0xFE7F,	0xFC00,
X	0x001C,	0x0003,	0x8070,	0x1C00,
X	0x001C,	0x0003,	0x8070,	0x0E00,
X	0x001C,	0x0003,	0x8070,	0x0E00,
X	0x001C,	0x0003,	0x8070,	0x0E00,
X	0x001C,	0x0003,	0x8070,	0x0E00,
X	0x001C,	0x0003,	0x8070,	0x1C00,
X	0x001F,	0xFC03,	0x807F,	0xFC00,
X	0x001F,	0xFC03,	0x807F,	0xF800,
X	0x001C,	0x0003,	0x8070,	0x0000,
X	0x001C,	0x0003,	0x8070,	0x0000,
X	0x001C,	0x0003,	0x8070,	0x0000,
X	0x001C,	0x0003,	0x8070,	0x0000,
X	0x001C,	0x0003,	0x8070,	0x0000,
X	0x001C,	0x0003,	0x8070,	0x0000,
X	0x001C,	0x0003,	0x8070,	0x0000,
X	0x001C,	0x0003,	0x8070,	0x0000,
X	0x001C,	0x0003,	0x8070,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0010,	0x0000,	0x0000,	0x1000,
X	0x0030,	0x0000,	0x0000,	0x1800,
X	0x0050,	0x0000,	0x0000,	0x1400,
X	0x0090,	0x0000,	0x0000,	0x1600,
X	0x0190,	0x0000,	0x0000,	0x1700,
X	0x039F,	0xFFFF,	0xFFFF,	0xF780,
X	0x0787,	0x8787,	0x8787,	0x87C0,
X	0x0F87,	0x8787,	0x8787,	0x87A0,
X	0x0787,	0x8787,	0x8787,	0x87C0,
X	0x039F,	0xFFFF,	0xFFFF,	0xF780,
X	0x0190,	0x0000,	0x0000,	0x1700,
X	0x0090,	0x0000,	0x0000,	0x1600,
X	0x0050,	0x0000,	0x0000,	0x1400,
X	0x0030,	0x0000,	0x0000,	0x1800,
X	0x0010,	0x0000,	0x0000,	0x1000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
SHAR_EOF
chmod 0644 busy3.ftptool.icon ||
echo 'restore of busy3.ftptool.icon failed'
Wc_c="`wc -c < 'busy3.ftptool.icon'`"
test 2190 -eq "$Wc_c" ||
	echo 'busy3.ftptool.icon: original size 2190, current size' "$Wc_c"
rm -f _shar_wnt_.tmp
fi
# ============= busy4.ftptool.icon ==============
if test -f 'busy4.ftptool.icon' -a X"$1" != X"-c"; then
	echo 'x - skipping busy4.ftptool.icon (File already exists)'
	rm -f _shar_wnt_.tmp
else
> _shar_wnt_.tmp
echo 'x - extracting busy4.ftptool.icon (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'busy4.ftptool.icon' &&
/* Format_version=1, Width=64, Height=64, Depth=1, Valid_bits_per_item=16
X */
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x001F,	0xFEFF,	0xFE7F,	0xF000,
X	0x001F,	0xFEFF,	0xFE7F,	0xFC00,
X	0x001C,	0x0003,	0x8070,	0x1C00,
X	0x001C,	0x0003,	0x8070,	0x0E00,
X	0x001C,	0x0003,	0x8070,	0x0E00,
X	0x001C,	0x0003,	0x8070,	0x0E00,
X	0x001C,	0x0003,	0x8070,	0x0E00,
X	0x001C,	0x0003,	0x8070,	0x1C00,
X	0x001F,	0xFC03,	0x807F,	0xFC00,
X	0x001F,	0xFC03,	0x807F,	0xF800,
X	0x001C,	0x0003,	0x8070,	0x0000,
X	0x001C,	0x0003,	0x8070,	0x0000,
X	0x001C,	0x0003,	0x8070,	0x0000,
X	0x001C,	0x0003,	0x8070,	0x0000,
X	0x001C,	0x0003,	0x8070,	0x0000,
X	0x001C,	0x0003,	0x8070,	0x0000,
X	0x001C,	0x0003,	0x8070,	0x0000,
X	0x001C,	0x0003,	0x8070,	0x0000,
X	0x001C,	0x0003,	0x8070,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0010,	0x0000,	0x0000,	0x1000,
X	0x0030,	0x0000,	0x0000,	0x1800,
X	0x0070,	0x0000,	0x0000,	0x1400,
X	0x00F0,	0x0000,	0x0000,	0x1200,
X	0x01F0,	0x0000,	0x0000,	0x1100,
X	0x03FF,	0xFFFF,	0xFFFF,	0xF180,
X	0x05E1,	0xE1E1,	0xE1E1,	0xE1C0,
X	0x09E1,	0xE1E1,	0xE1E1,	0xE1E0,
X	0x05E1,	0xE1E1,	0xE1E1,	0xE1C0,
X	0x03FF,	0xFFFF,	0xFFFF,	0xF180,
X	0x01F0,	0x0000,	0x0000,	0x1100,
X	0x00F0,	0x0000,	0x0000,	0x1200,
X	0x0070,	0x0000,	0x0000,	0x1400,
X	0x0030,	0x0000,	0x0000,	0x1800,
X	0x0010,	0x0000,	0x0000,	0x1000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
SHAR_EOF
chmod 0644 busy4.ftptool.icon ||
echo 'restore of busy4.ftptool.icon failed'
Wc_c="`wc -c < 'busy4.ftptool.icon'`"
test 2190 -eq "$Wc_c" ||
	echo 'busy4.ftptool.icon: original size 2190, current size' "$Wc_c"
rm -f _shar_wnt_.tmp
fi
# ============= change_dir.h ==============
if test -f 'change_dir.h' -a X"$1" != X"-c"; then
	echo 'x - skipping change_dir.h (File already exists)'
	rm -f _shar_wnt_.tmp
else
> _shar_wnt_.tmp
echo 'x - extracting change_dir.h (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'change_dir.h' &&
X
#ifdef USE_PROTOTYPES
X
int	checkdir(char *dirname);
int dirwasmodified(void);
int change_local_dir(char *s, int force);
int change_remote_dir(char *s, int force);
char *expand_dirname(char *arg);
int	delete_local_dir(char *dir);
int delete_local_file(char *filename, int (*deletefunc)(const char *filename));
int	delete_remote_dir(char *dir);
int delete_remote_file(char *filename, char *deletecmd);
int up_one_level(void);
X
#else
X
int	checkdir();
int dirwasmodified();
int change_local_dir();
int change_remote_dir();
char *expand_dirname();
int	delete_local_dir();
int delete_local_file();
int	delete_remote_dir();
int delete_remote_file();
int up_one_level();
X
#endif
SHAR_EOF
chmod 0644 change_dir.h ||
echo 'restore of change_dir.h failed'
Wc_c="`wc -c < 'change_dir.h'`"
test 672 -eq "$Wc_c" ||
	echo 'change_dir.h: original size 672, current size' "$Wc_c"
rm -f _shar_wnt_.tmp
fi
# ============= config.h ==============
if test -f 'config.h' -a X"$1" != X"-c"; then
	echo 'x - skipping config.h (File already exists)'
	rm -f _shar_wnt_.tmp
else
> _shar_wnt_.tmp
echo 'x - extracting config.h (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'config.h' &&
/* 
X If you use Sun Consulting's Proxy FTP, set this up appropriately
X	DEFAULT_PROXY is the ftp gateway
*/
#define DEFAULT_HOST  "yavin.EBay"
#define DEFAULT_PROXY "sun-barr.EBay"
X
#define DEFAULT_PARSE "PERMS LINKS USER GROUP SIZE MONTH DAY TIME NAME"
X
/* define this to be a global .ftptoolrc */
/* ftptool will load this if $HOME/.ftptoolrc does not exist */
#define GLOBAL_FTPTOOLRC "/usr/local/lib/ftptoolrc"
X
/* The following are the filenames that ftptool will create in the */
/* users home directory. You probably don't want to change this. */
#define FTPTOOL_RC			".ftptoolrc"
#define FTPTOOL_LAYOUT		".ftptoollayout"
#define FTPTOOL_DEFAULTS	".ftptooldefaults"
X
#if defined(SYSV) || defined(SYSV386)
X
#	include <memory.h>
X
#	define bzero(b, length)			memset(b, '\0', length)
#	define bcopy(b1, b2, length)	memcpy(b2, b1, length)
X
#else
X
void bzero();
void bcopy();
X
#endif
X
/* USE_PROTOTYPES also implies you use <stdarg.h> and not <varargs.h> */
#ifndef USE_PROTOTYPES
#if __STDC__ == 1 || defined(SYSV) || defined(SVR4) || defined(SYSV386)
#define USE_PROTOTYPES
#endif
#endif
X
/* Define NEED_STRCASECMP if you don't have it */
#ifndef NEED_STRCASECMP
#if defined(SYSV386)
#define NEED_STRCASECMP
#endif
#endif
X
/* The following are used to determine the max size of ftptoolrc */
/* fields that ftptool can read in */
#define MAXLOGINLEN		64
#define MAXPASSWORDLEN	1024
#define MAXCOMMENTLEN	1024
#define MAXALIASLEN		1024
X
/* The following are the default port numbers to use if ftptool cannot */
/* find the 'ftp,tcp' service or 'ftp-passthru, tcp service'. */
/* ftp is usually 21, ftp-passthru can vary */
#define FTP_PORT	21
#define FTP_PASSTHRU_PORT	4666
X
#ifndef S_ISLNK
#define	S_ISLNK(mode)	((mode & S_IFMT) == S_IFLNK)
#endif
SHAR_EOF
chmod 0644 config.h ||
echo 'restore of config.h failed'
Wc_c="`wc -c < 'config.h'`"
test 1749 -eq "$Wc_c" ||
	echo 'config.h: original size 1749, current size' "$Wc_c"
rm -f _shar_wnt_.tmp
fi
# ============= create_main.h ==============
if test -f 'create_main.h' -a X"$1" != X"-c"; then
	echo 'x - skipping create_main.h (File already exists)'
	rm -f _shar_wnt_.tmp
else
> _shar_wnt_.tmp
echo 'x - extracting create_main.h (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'create_main.h' &&
X
#ifdef USE_PROTOTYPES
X
void create_base_window(void);
void create_property_window(void);
void create_local_window(void);
X
#else
X
void create_base_window();
void create_property_window();
void create_local_window();
X
#endif
SHAR_EOF
chmod 0644 create_main.h ||
echo 'restore of create_main.h failed'
Wc_c="`wc -c < 'create_main.h'`"
test 224 -eq "$Wc_c" ||
	echo 'create_main.h: original size 224, current size' "$Wc_c"
rm -f _shar_wnt_.tmp
fi
# ============= create_other.h ==============
if test -f 'create_other.h' -a X"$1" != X"-c"; then
	echo 'x - skipping create_other.h (File already exists)'
	rm -f _shar_wnt_.tmp
else
> _shar_wnt_.tmp
echo 'x - extracting create_other.h (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'create_other.h' &&
X
#ifdef USE_PROTOTYPES
X
void create_host_popup(void);
void create_session_log(void);
void create_about_window(void);
void create_feedback_window(void);
void create_file_property_window(struct file_property_window *file_props, 
X	char *header);
void create_tar_file_popup(void);
void create_load_save_popup(Frame *framep, Panel *textp, Panel *buttonp);
void create_schedule_window(void);
void create_status_window(void);
X
#else
X
void create_host_popup();
void create_session_log();
void create_about_window();
void create_feedback_window();
void create_file_property_window();
void create_tar_file_popup();
void create_load_save_popup();
void create_schedule_window();
void create_status_window();
X
#endif
SHAR_EOF
chmod 0644 create_other.h ||
echo 'restore of create_other.h failed'
Wc_c="`wc -c < 'create_other.h'`"
test 704 -eq "$Wc_c" ||
	echo 'create_other.h: original size 704, current size' "$Wc_c"
rm -f _shar_wnt_.tmp
fi
# ============= dircache.h ==============
if test -f 'dircache.h' -a X"$1" != X"-c"; then
	echo 'x - skipping dircache.h (File already exists)'
	rm -f _shar_wnt_.tmp
else
> _shar_wnt_.tmp
echo 'x - extracting dircache.h (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'dircache.h' &&
X
#ifdef USE_PROTOTYPES
X
int dircache_add(struct dircache *dcache, char *name, struct dirlist *dlist);
void dircache_delete(struct dircache *dcache, char *name);
void dircache_shrink(struct dircache *dcache, int newsize);
void free_dircache(struct dircache *dcache);
struct dirlist *cache_lookup(struct dircache *dcache, char *dirname);
struct dirlist_header *new_dirlist_header(char *name, struct dirlist *dlist);
void free_dirlist_header(struct dirlist_header *head);
void show_dircache(struct dircache *dcache);
X
#else
X
int dircache_add();
void dircache_delete();
void dircache_shrink();
void free_dircache();
struct dirlist *cache_lookup();
struct dirlist_header *new_dirlist_header();
void free_dirlist_header();
void show_dircache();
X
#endif
SHAR_EOF
chmod 0644 dircache.h ||
echo 'restore of dircache.h failed'
Wc_c="`wc -c < 'dircache.h'`"
test 747 -eq "$Wc_c" ||
	echo 'dircache.h: original size 747, current size' "$Wc_c"
rm -f _shar_wnt_.tmp
fi
# ============= dircache_struct.h ==============
if test -f 'dircache_struct.h' -a X"$1" != X"-c"; then
	echo 'x - skipping dircache_struct.h (File already exists)'
	rm -f _shar_wnt_.tmp
else
> _shar_wnt_.tmp
echo 'x - extracting dircache_struct.h (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'dircache_struct.h' &&
struct dirlist_header {
X	struct dirlist_header *next;
X	struct dirlist_header *prev;
X	struct dirlist *dlist;
X	char	*name;
X	int		mtime;
};
X
struct dircache {
X	int		ndirs; 
X	struct dirlist_header *first;
X	struct dirlist_header *last;
};
X
SHAR_EOF
chmod 0644 dircache_struct.h ||
echo 'restore of dircache_struct.h failed'
Wc_c="`wc -c < 'dircache_struct.h'`"
test 235 -eq "$Wc_c" ||
	echo 'dircache_struct.h: original size 235, current size' "$Wc_c"
rm -f _shar_wnt_.tmp
fi
# ============= directory.pr ==============
if test -f 'directory.pr' -a X"$1" != X"-c"; then
	echo 'x - skipping directory.pr (File already exists)'
	rm -f _shar_wnt_.tmp
else
> _shar_wnt_.tmp
echo 'x - extracting directory.pr (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'directory.pr' &&
/* Format_version=1, Width=16, Height=16, Depth=1, Valid_bits_per_item=16
X */
X	0x0000,0x0000,0x0000,0x003C,0x0042,0xFF81,0x8001,0x8001,
X	0x8001,0x8001,0x8001,0x8001,0x8001,0x8001,0x8001,0xFFFF
X
SHAR_EOF
chmod 0644 directory.pr ||
echo 'restore of directory.pr failed'
Wc_c="`wc -c < 'directory.pr'`"
test 194 -eq "$Wc_c" ||
	echo 'directory.pr: original size 194, current size' "$Wc_c"
rm -f _shar_wnt_.tmp
fi
# ============= dirlist.h ==============
if test -f 'dirlist.h' -a X"$1" != X"-c"; then
	echo 'x - skipping dirlist.h (File already exists)'
	rm -f _shar_wnt_.tmp
else
> _shar_wnt_.tmp
echo 'x - extracting dirlist.h (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'dirlist.h' &&
X
#ifdef USE_PROTOTYPES
X
struct dirlist *new_dirlist(char *name, char *date, char *owner, 
X	char *group, mode_t mode, size_t size);
struct dirlist *add_dirname(struct dirlist *head, char *name, char *date, 
X	char *owner, char *group, mode_t mode, size_t size, int sort_mode, 
X	int sort_direction);
struct dirlist *add_dirlist_struct(struct dirlist *head, 
X	struct dirlist *dlist, int sort_mode, int sort_direction);
void free_dirlist(struct dirlist *head);
struct dirlist *sortupbyname(struct dirlist *head, char *name);
struct dirlist *sortupbydate(struct dirlist *head, char *date);
struct dirlist *sortupbysize(struct dirlist *head, size_t size);
long	datetotime(char *date);
int isearlier(char *date1, char *date2);
struct dirlist *sortdownbyname(struct dirlist *head, char *name);
struct dirlist *sortdownbydate(struct dirlist *head, char *date);
struct dirlist *sortdownbysize(struct dirlist *head, size_t size);
void clear_slist(Panel panel_list);
void actual_dirlist_to_slist(Panel panel_list, struct dirlist *head, 
X	mode_t type, int showdotfiles);
void dirlist_to_slist(Panel panel_list, struct dirlist *head);
void add_dotdot(struct dirlist *head);
struct dirlist *sort_dirlist(struct dirlist *head, int sort_mode, 
X	int sort_direction);
void hour_time(char *date, struct tm *tm);
void year_time(char *date, struct tm *tm);
X
#else
X
struct dirlist *new_dirlist();
struct dirlist *add_dirname();
struct dirlist *add_dirlist_struct();
void free_dirlist();
struct dirlist *sortupbyname();
struct dirlist *sortupbydate();
struct dirlist *sortupbysize();
long	datetotime();
int isearlier();
struct dirlist *sortdownbyname();
struct dirlist *sortdownbydate();
struct dirlist *sortdownbysize();
void clear_slist();
void actual_dirlist_to_slist();
void dirlist_to_slist();
void add_dotdot();
struct dirlist *sort_dirlist();
void hour_time();
void year_time();
X
#endif
SHAR_EOF
chmod 0644 dirlist.h ||
echo 'restore of dirlist.h failed'
Wc_c="`wc -c < 'dirlist.h'`"
test 1869 -eq "$Wc_c" ||
	echo 'dirlist.h: original size 1869, current size' "$Wc_c"
rm -f _shar_wnt_.tmp
fi
# ============= dirlist_struct.h ==============
if test -f 'dirlist_struct.h' -a X"$1" != X"-c"; then
	echo 'x - skipping dirlist_struct.h (File already exists)'
	rm -f _shar_wnt_.tmp
else
> _shar_wnt_.tmp
echo 'x - extracting dirlist_struct.h (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'dirlist_struct.h' &&
#define DATELEN 20
X
struct dirlist {
X	struct dirlist *next;
X	char	*name;
X	char	*date;
X	char	*owner;
X	char	*group;
X	mode_t	mode;
X	size_t	size;
};
X
#define SORTBYNAME	0
#define SORTBYDATE	1
#define SORTBYSIZE	2
X
#define ASCENDING	0
#define DESCENDING	1
X
#define GROUPBYTYPE 0
#define	GROUPNONE	1
X
SHAR_EOF
chmod 0644 dirlist_struct.h ||
echo 'restore of dirlist_struct.h failed'
Wc_c="`wc -c < 'dirlist_struct.h'`"
test 295 -eq "$Wc_c" ||
	echo 'dirlist_struct.h: original size 295, current size' "$Wc_c"
rm -f _shar_wnt_.tmp
fi
# ============= dofuncs.h ==============
if test -f 'dofuncs.h' -a X"$1" != X"-c"; then
	echo 'x - skipping dofuncs.h (File already exists)'
	rm -f _shar_wnt_.tmp
else
> _shar_wnt_.tmp
echo 'x - extracting dofuncs.h (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'dofuncs.h' &&
X
#define DOCONNECT			1
#define DOGET				2
#define DOPUT				3
#define DOLOCALVIEW			4
#define DOREMOTEVIEW		5
#define DOUNCOMPRESS		6
#define DOEXTRACT			7
#define DOCOMPRESS			8
#define DOGETTARFILENAME	9
#define DOTAR				10
#define DOREMOTECD			11
#define DOREMOTECDFORCE		12
#define DOBATCHGET			13
#define DOBATCHPUT			14
#define DOSCHEDULE			15
#define DODIR				16
#define DOLS				17
#define DOREMOTEDOUBLECLICK	18
#define DOQUIT				(-1)
X
#ifdef USE_PROTOTYPES
X
int	doconnect(void);
int openhost(char *ftphost, char *login, char *password, int port);
void doget(void);
void doput(void);
void dofileop(int which);
void doview(int which);
void create_tar_file(void);
void doremotecd(int force);
X
#else
X
int	doconnect();
int openhost();
void doget();
void doput();
void dofileop();
void doview();
void create_tar_file();
void doremotecd();
X
#endif
SHAR_EOF
chmod 0644 dofuncs.h ||
echo 'restore of dofuncs.h failed'
Wc_c="`wc -c < 'dofuncs.h'`"
test 849 -eq "$Wc_c" ||
	echo 'dofuncs.h: original size 849, current size' "$Wc_c"
rm -f _shar_wnt_.tmp
fi
# ============= dotdot.pr ==============
if test -f 'dotdot.pr' -a X"$1" != X"-c"; then
	echo 'x - skipping dotdot.pr (File already exists)'
	rm -f _shar_wnt_.tmp
else
> _shar_wnt_.tmp
echo 'x - extracting dotdot.pr (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'dotdot.pr' &&
/* Format_version=1, Width=16, Height=16, Depth=1, Valid_bits_per_item=16
X */
X	0x0180,
X	0x03C0,
X	0x07E0,
X	0x0FF0,
X	0x1FF8,
X	0x3FFC,
X	0x7FFE,
X	0xFFFF,
X	0x07E0,
X	0x07E0,
X	0x07E0,
X	0x07E0,
X	0x07E0,
X	0x07E0,
X	0x07E0,
X	0x07E0
SHAR_EOF
chmod 0644 dotdot.pr ||
echo 'restore of dotdot.pr failed'
Wc_c="`wc -c < 'dotdot.pr'`"
test 221 -eq "$Wc_c" ||
	echo 'dotdot.pr: original size 221, current size' "$Wc_c"
rm -f _shar_wnt_.tmp
fi
# ============= event.h ==============
if test -f 'event.h' -a X"$1" != X"-c"; then
	echo 'x - skipping event.h (File already exists)'
	rm -f _shar_wnt_.tmp
else
> _shar_wnt_.tmp
echo 'x - extracting event.h (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'event.h' &&
X
#ifdef USE_PROTOTYPES
X
void local_cd_select(void);
void local_cd_text(void);
void local_cd_dotdot(void);
void remote_cd_select(void);
void remote_cd_text(void);
void remote_cd_dotdot(void);
Notify_value destroy_func(Notify_client client, Destroy_status status);
Notify_value sig_func(void);
void cycle_busy_icon(void);
void start_busy_cycle(void);
void end_busy_cycle(void);
void props_event_proc(Panel panel, Event *event);
void base_event_proc(Xv_Window window, Event *event);
void resize_window(Panel panel, Panel_item list, Panel_item dismiss);
void local_event_proc(Xv_Window window, Event *event);
void schedule_event_proc(Xv_Window window, Event *event);
void host_event_proc(Xv_Window window, Event *event);
void send_noop_command(void);
void idle_timer_on(void);
void idle_timer_off(void);
X
#else
X
void local_cd_select();
void local_cd_text();
void local_cd_dotdot();
void remote_cd_select();
void remote_cd_text();
void remote_cd_dotdot();
Notify_value destroy_func();
Notify_value sig_func();
void cycle_busy_icon();
void start_busy_cycle();
void end_busy_cycle();
void props_event_proc();
void base_event_proc();
void resize_window();
void local_event_proc();
void schedule_event_proc();
void host_event_proc();
void send_noop_command();
void idle_timer_on();
void idle_timer_off();
X
#endif
SHAR_EOF
chmod 0644 event.h ||
echo 'restore of event.h failed'
Wc_c="`wc -c < 'event.h'`"
test 1304 -eq "$Wc_c" ||
	echo 'event.h: original size 1304, current size' "$Wc_c"
rm -f _shar_wnt_.tmp
fi
# ============= file.pr ==============
if test -f 'file.pr' -a X"$1" != X"-c"; then
	echo 'x - skipping file.pr (File already exists)'
	rm -f _shar_wnt_.tmp
else
> _shar_wnt_.tmp
echo 'x - extracting file.pr (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'file.pr' &&
/* Format_version=1, Width=16, Height=16, Depth=1, Valid_bits_per_item=16
X */
X	0x7FE0,0x4030,0x4028,0x4024,0x403E,0x4002,0x4002,0x4002,
X	0x4002,0x4002,0x4002,0x4002,0x4002,0x4002,0x4002,0x7FFE
X
SHAR_EOF
chmod 0644 file.pr ||
echo 'restore of file.pr failed'
Wc_c="`wc -c < 'file.pr'`"
test 194 -eq "$Wc_c" ||
	echo 'file.pr: original size 194, current size' "$Wc_c"
rm -f _shar_wnt_.tmp
fi
# ============= ftptool.icon ==============
if test -f 'ftptool.icon' -a X"$1" != X"-c"; then
	echo 'x - skipping ftptool.icon (File already exists)'
	rm -f _shar_wnt_.tmp
else
> _shar_wnt_.tmp
echo 'x - extracting ftptool.icon (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'ftptool.icon' &&
/* Format_version=1, Width=64, Height=64, Depth=1, Valid_bits_per_item=16
X */
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x001F,	0xFEFF,	0xFE7F,	0xF000,
X	0x001F,	0xFEFF,	0xFE7F,	0xFC00,
X	0x001C,	0x0003,	0x8070,	0x1C00,
X	0x001C,	0x0003,	0x8070,	0x0E00,
X	0x001C,	0x0003,	0x8070,	0x0E00,
X	0x001C,	0x0003,	0x8070,	0x0E00,
X	0x001C,	0x0003,	0x8070,	0x0E00,
X	0x001C,	0x0003,	0x8070,	0x1C00,
X	0x001F,	0xFC03,	0x807F,	0xFC00,
X	0x001F,	0xFC03,	0x807F,	0xF800,
X	0x001C,	0x0003,	0x8070,	0x0000,
X	0x001C,	0x0003,	0x8070,	0x0000,
X	0x001C,	0x0003,	0x8070,	0x0000,
X	0x001C,	0x0003,	0x8070,	0x0000,
X	0x001C,	0x0003,	0x8070,	0x0000,
X	0x001C,	0x0003,	0x8070,	0x0000,
X	0x001C,	0x0003,	0x8070,	0x0000,
X	0x001C,	0x0003,	0x8070,	0x0000,
X	0x001C,	0x0003,	0x8070,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0010,	0x0000,	0x0000,	0x1000,
X	0x0030,	0x0000,	0x0000,	0x1800,
X	0x0050,	0x0000,	0x0000,	0x1400,
X	0x0090,	0x0000,	0x0000,	0x1200,
X	0x0110,	0x0000,	0x0000,	0x1100,
X	0x021F,	0xFFFF,	0xFFFF,	0xF080,
X	0x0400,	0x0000,	0x0000,	0x0040,
X	0x0800,	0x0000,	0x0000,	0x0020,
X	0x0400,	0x0000,	0x0000,	0x0040,
X	0x021F,	0xFFFF,	0xFFFF,	0xF080,
X	0x0110,	0x0000,	0x0000,	0x1100,
X	0x0090,	0x0000,	0x0000,	0x1200,
X	0x0050,	0x0000,	0x0000,	0x1400,
X	0x0030,	0x0000,	0x0000,	0x1800,
X	0x0010,	0x0000,	0x0000,	0x1000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
X	0x0000,	0x0000,	0x0000,	0x0000,
SHAR_EOF
chmod 0644 ftptool.icon ||
echo 'restore of ftptool.icon failed'
Wc_c="`wc -c < 'ftptool.icon'`"
test 2190 -eq "$Wc_c" ||
	echo 'ftptool.icon: original size 2190, current size' "$Wc_c"
rm -f _shar_wnt_.tmp
fi
# ============= host_list.h ==============
if test -f 'host_list.h' -a X"$1" != X"-c"; then
	echo 'x - skipping host_list.h (File already exists)'
	rm -f _shar_wnt_.tmp
else
> _shar_wnt_.tmp
echo 'x - extracting host_list.h (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'host_list.h' &&
X
#ifdef USE_PROTOTYPES
X
void host_list_clean_proc(Panel_item item, Event *event);
void host_list_item_proc(Menu menu, Menu_item menu_item);
void host_list_add_proc(Menu menu, Menu_item menu_item);
void host_list_change_proc(Menu menu, Menu_item menu_item);
void host_save_proc(Menu menu, Menu_item menu_item);
void host_load_proc(Menu menu, Menu_item menu_item);
void update_timestamp(void);
void enter_host_info(int warnchange);
void host_list_delete_proc(Menu menu, Menu_item menu_item);
int host_list_use_proc(Panel_item item, char *string, 
X	Xv_opaque client_data, Panel_list_op op, Event *event);
struct hostlist *new_hostlist(void);
struct hostlist *add_hostalias(struct hostlist *head, char *aliasname, 
X	char *last_visited, char *proxy, char *host, char *login, 
X	char *password, int transfer_mode, char *remote_directory, 
X	char *local_directory, char *dir_parse, char *comment);
void free_hostlist(struct hostlist *head);
struct hostlist *gethostlist(struct hostlist *head, char *aliasname);
int delete_hostlist(struct hostlist *head, char *aliasname);
void read_ftptoolrc(void);
int read_entry(int version, FILE *fp, char *aliasname, char *last_visited, 
X	char *proxy, char *host, char *login, char *password, int *transfer_mode, 
X	char *rdir, char *ldir, char *dir_parse, char *comment);
void read_newftptoolrc(void);
void write_ftptoolrc(void);
int ftptoolrc_fd(int flags, int mode);
void reload_host_list_menu(struct hostlist *head);
char *create_dotfile(char *dotfile, int mode);
char *find_dotfile(char *dotfile);
int netrc_token(FILE *fp);
void	host_append_netrc_proc(void);
void add_netrc(char *machine, char *login, char *password);
char key_to_char(char *key);
char *ftptool_encrypt(char *s, char *key);
char *ftptool_decrypt(char *s, char *key);
char *old_ftptool_decrypt(char *s, char *key);
struct hostlist *sort_hostlist(struct hostlist *head);
X
#else
X
void host_list_clean_proc();
void host_list_item_proc();
void host_list_add_proc();
void host_list_change_proc();
void host_save_proc();
void host_load_proc();
void update_timestamp();
void enter_host_info();
void host_list_delete_proc();
int host_list_use_proc();
struct hostlist *new_hostlist();
struct hostlist *add_hostalias();
void free_hostlist();
struct hostlist *gethostlist();
int delete_hostlist();
void read_ftptoolrc();
int read_entry();
void read_newftptoolrc();
void write_ftptoolrc();
int ftptoolrc_fd();
void reload_host_list_menu();
char *create_dotfile();
char *find_dotfile();
int netrc_token();
void host_append_netrc_proc();
void add_netrc();
char key_to_char();
char *ftptool_encrypt();
char *ftptool_decrypt();
char *old_ftptool_decrypt();
struct hostlist *sort_hostlist();
X
#endif
SHAR_EOF
chmod 0644 host_list.h ||
echo 'restore of host_list.h failed'
Wc_c="`wc -c < 'host_list.h'`"
test 2682 -eq "$Wc_c" ||
	echo 'host_list.h: original size 2682, current size' "$Wc_c"
rm -f _shar_wnt_.tmp
fi
# ============= host_list_struct.h ==============
if test -f 'host_list_struct.h' -a X"$1" != X"-c"; then
	echo 'x - skipping host_list_struct.h (File already exists)'
	rm -f _shar_wnt_.tmp
else
> _shar_wnt_.tmp
echo 'x - extracting host_list_struct.h (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'host_list_struct.h' &&
X
struct hostlist {
X	struct hostlist *next;
X	char	*aliasname;
X	char	*last_visited;
X	char	*proxy;
X	char	*host;
X	char	*login;
X	char	*password;
X	int		transfer_mode;
X	char	*remote_directory;
X	char	*local_directory;
X	char	*dir_parse;
X	char	*comment;
};
X
SHAR_EOF
chmod 0644 host_list_struct.h ||
echo 'restore of host_list_struct.h failed'
Wc_c="`wc -c < 'host_list_struct.h'`"
test 248 -eq "$Wc_c" ||
	echo 'host_list_struct.h: original size 248, current size' "$Wc_c"
rm -f _shar_wnt_.tmp
fi
# ============= lex.l ==============
if test -f 'lex.l' -a X"$1" != X"-c"; then
	echo 'x - skipping lex.l (File already exists)'
	rm -f _shar_wnt_.tmp
else
> _shar_wnt_.tmp
echo 'x - extracting lex.l (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'lex.l' &&
%{
#undef ECHO
#include "ftptool.h"
X
#undef input
extern char *lex_string;
# define input() (((yytchar=yysptr>yysbuf?U(*--yysptr):*lex_string++)==10?(yylineno++,yytchar):yytchar)==0?0:yytchar)
%}
%%
[ \t\n]+	{return(' ');}
PERMS		{return(PERMS);}
LINKS		{return(LINKS);}
USER		{return(USER);}
GROUP		{return(GROUP);}
SIZE		{return(SIZE);}
MONTH		{return(MONTH);}
DAY			{return(DAY);}
TIME		{return(TIME);}
NAME		{return(NAME);}
SKIP		{return(SKIP);}
NONUNIX		{return(NONUNIX);}
\<NAME\>		{return(LOWERNAME);}
.			{return(yytext[0]);}
%%
X
yywrap()
{
X	return 1;
}
SHAR_EOF
chmod 0644 lex.l ||
echo 'restore of lex.l failed'
Wc_c="`wc -c < 'lex.l'`"
test 562 -eq "$Wc_c" ||
	echo 'lex.l: original size 562, current size' "$Wc_c"
rm -f _shar_wnt_.tmp
fi
# ============= main.h ==============
if test -f 'main.h' -a X"$1" != X"-c"; then
	echo 'x - skipping main.h (File already exists)'
	rm -f _shar_wnt_.tmp
else
> _shar_wnt_.tmp
echo 'x - extracting main.h (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'main.h' &&
#define BINARY  0
#define ASCII   1
#define TENEX   2
/*
#define IMAGE   3
#define EBCDIC  4
X */
X
#ifdef USE_PROTOTYPES
X
int main(int argc, char **argv);
void load_xdefaults(void);
void set_xdefaults(void);
void save_xdefaults(void);
X
#else
X
int main();
void load_xdefaults();
void set_xdefaults();
void save_xdefaults();
X
#endif
SHAR_EOF
chmod 0644 main.h ||
echo 'restore of main.h failed'
Wc_c="`wc -c < 'main.h'`"
test 330 -eq "$Wc_c" ||
	echo 'main.h: original size 330, current size' "$Wc_c"
rm -f _shar_wnt_.tmp
fi
# ============= menu_funcs.h ==============
if test -f 'menu_funcs.h' -a X"$1" != X"-c"; then
	echo 'x - skipping menu_funcs.h (File already exists)'
	rm -f _shar_wnt_.tmp
else
> _shar_wnt_.tmp
echo 'x - extracting menu_funcs.h (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'menu_funcs.h' &&
X
#ifdef USE_PROTOTYPES
X
Menu file_menu_gen(Menu m, Menu_generate op);
Menu file_copy_menu_gen(Menu m, Menu_generate op);
Menu file_delete_menu_gen(Menu m, Menu_generate op);
Menu view_menu_gen(Menu m, Menu_generate op);
SHAR_EOF
true || echo 'restore of menu_funcs.h failed'
fi
echo 'End of  part 1'
echo 'File menu_funcs.h is continued in part 2'
echo 2 > _shar_seq_.tmp
exit 0
-- 
Senior Systems Scientist		mail: dcmartin@msi.com
Molecular Simulations, Inc.		uucp: uunet!dcmartin
796 North Pastoria Avenue		at&t: 408/522-9236
Sunnyvale, California 94086		fax: 408/732-0831
