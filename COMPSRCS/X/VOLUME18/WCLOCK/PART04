Newsgroups: comp.sources.x
Path: uunet!zaphod.mps.ohio-state.edu!mips!msi!dcmartin
From: R.Caley@ed.ac.uk (Richard Caley)
Subject: v18i014: Wclock - another X clock, Part04/04
Message-ID: <1992Jul13.153554.6463@msi.com>
Originator: dcmartin@fascet
Sender: dcmartin@msi.com (David C. Martin - Moderator)
Organization: Molecular Simulations, Inc.
References: <csx-18i011-wclock@uunet.UU.NET>
Date: Mon, 13 Jul 1992 15:35:54 GMT
Approved: dcmartin@msi.com
Lines: 755

Submitted-by: R.Caley@ed.ac.uk (Richard Caley)
Posting-number: Volume 18, Issue 14
Archive-name: wclock/part04

#!/bin/sh
# this is part.04 (part 4 of a multipart archive)
# do not concatenate these parts, unpack them in order with /bin/sh
# file rose.xbm continued
#
if test ! -r _shar_seq_.tmp; then
	echo 'Please unpack part 1 first!'
	exit 1
fi
(read Scheck
 if test "$Scheck" != 4; then
	echo Please unpack part "$Scheck" next!
	exit 1
 else
	exit 0
 fi
) < _shar_seq_.tmp || exit 1
if test ! -f _shar_wnt_.tmp; then
	echo 'x - still skipping rose.xbm'
else
echo 'x - continuing file rose.xbm'
sed 's/^X//' << 'SHAR_EOF' >> 'rose.xbm' &&
X 0xff,0xda,0x56,0x55,0x6b,0x57,0x55,0x25,0x54,0x00,0x69,0x7f,0xa2,0xfa,0x6f,
X 0xaf,0x14,0x42,0x55,0x81,0x68,0x5d,0x55,0x15,0x51,0x12,0x01,0x95,0x29,0x91,
X 0x12,0x44,0xf9,0xff,0xff,0xfb,0xfb,0xff,0xfd,0xed,0xbf,0x6f,0x55,0xd5,0xde,
X 0xfd,0x97,0x08,0x49,0x55,0xd2,0x7e,0x49,0xec,0xfd,0xb7,0x82,0x10,0x92,0x24,
X 0xa2,0xab,0x55,0x49,0x94,0xa4,0x28,0x44,0x44,0x24,0x40,0x29,0xd2,0xdf,0xff,
X 0xff,0xff,0xf7,0xef,0xff,0xfe,0x5a,0xad,0xba,0x75,0x57,0x55,0x25,0x94,0x84,
X 0x68,0x37,0x84,0x7a,0x6f,0x5b,0x55,0x22,0xa9,0x02,0x88,0xb6,0xaa,0x92,0x24,
X 0x09,0x82,0x52,0x89,0x82,0x0a,0xa2,0xfa,0xff,0xff,0xdf,0xbf,0x7f,0xbf,0xff,
X 0x57,0xd7,0x56,0x6f,0xdf,0xfd,0xab,0x52,0x21,0x22,0xa2,0x7d,0x41,0xec,0xff,
X 0xfe,0x96,0x48,0x40,0x95,0x20,0xaa,0x2a,0x09,0x95,0x52,0x21,0xa1,0x54,0x50,
X 0xa0,0xa8,0xe6,0xfe,0xff,0xff,0xff,0xff,0xfb,0xff,0xff,0xba,0xf5,0xfa,0x7d,
X 0xb7,0xae,0x6c,0x4a,0x88,0xc8,0x7e,0x94,0xfa,0xfb,0xdb,0x2b,0x01,0x15,0x45,
X 0x02,0x54,0x55,0x22,0x2a,0x04,0x94,0x94,0x82,0x02,0x05,0xd5,0x5a,0xfb,0xff,
X 0xff,0xff,0xdd,0xff,0xdb,0x6f,0x6f,0xbb,0x5f,0xd7,0xff,0x77,0xbb,0x88,0x22,
X 0x22,0x77,0x41,0x6c,0x6f,0xff,0xb6,0x54,0x40,0xa8,0x54,0x81,0x8a,0x88,0x42,
X 0x49,0x21,0x51,0x54,0xa8,0xa0,0xa8,0xd6,0xfe,0xff,0xfb,0xfe,0xff,0x6e,0xff,
X 0xbd,0xd5,0xee,0xfd,0xfd,0xf6,0xad,0xaf,0x22,0x84,0x88,0x7a,0x24,0xf5,0xff,
X 0xad,0x5b,0x05,0x01,0x01,0x49,0x2a,0x00,0x62,0x29,0x22,0x14,0x94,0x22,0x05,
X 0x0a,0xa2,0xba,0xf5,0xff,0xff,0xdf,0xf7,0xff,0xff,0xf7,0xbe,0x7f,0xb7,0xbf,
X 0x5f,0xff,0xfd,0x14,0x29,0x22,0x7d,0x89,0xd8,0xbb,0xff,0xf6,0xab,0x54,0x48,
X 0x10,0xa9,0x6a,0x29,0x8a,0x88,0x84,0x4a,0x88,0xa0,0x80,0x54,0x6b,0xff,0xff,
X 0xff,0xff,0xbf,0xdb,0xff,0xde,0xd5,0xfa,0xff,0xf6,0xfe,0x6b,0xaf,0xa2,0x84,
X 0x88,0xda,0x20,0xf5,0xff,0xf6,0x5f,0xad,0x00,0x21,0x02,0x40,0x55,0x95,0x10,
X 0x02,0x49,0xaa,0x12,0x0a,0x2a,0xd2,0xd6,0xfa,0xff,0xfd,0xff,0xfe,0xff,0xff,
X 0xbf,0x76,0x55,0xad,0xdf,0xd7,0xff,0xff,0x54,0x52,0x20,0xf4,0x8a,0xd8,0xde,
X 0x5f,0xeb,0xf7,0x56,0x08,0x90,0x14,0x80,0x24,0x84,0x50,0x12,0x09,0x49,0x81,
X 0x40,0x51,0x75,0xff,0xff,0xef,0xff,0xff,0x7f,0xbb,0xf5,0xad,0xed,0xfb,0x7a,
X 0x7f,0xdf,0x7e,0x49,0x85,0x82,0x78,0x21,0xf5,0xff,0xfd,0xbd,0x5a,0x95,0x42,
X 0x01,0x42,0x12,0x80,0x12,0x4a,0xa0,0x52,0x12,0x24,0x8a,0xaa,0xae,0xfd,0xff,
X 0xff,0xfb,0xef,0xee,0xff,0x5f,0x5b,0xb5,0xbe,0xdf,0xed,0xf7,0xb7,0x54,0x51,
X 0x28,0xd2,0x48,0xd4,0xef,0x6f,0xdf,0xdf,0xad,0x14,0xa4,0x10,0x24,0x49,0x84,
X 0x90,0x4a,0x95,0x44,0x89,0x40,0x54,0xf5,0xdf,0xff,0x7f,0xff,0xff,0xff,0x7f,
X 0xb5,0xad,0xea,0xeb,0x76,0xbf,0xbd,0xbf,0x2a,0x25,0x85,0xf0,0x01,0x79,0x7f,
X 0xff,0x7b,0xb5,0xbb,0xa5,0x00,0x40,0x00,0x84,0x10,0x4b,0x48,0x22,0x11,0x20,
X 0x2a,0xa9,0xad,0xff,0xff,0xff,0xbf,0xff,0xff,0xdf,0xdf,0xd6,0xda,0xfe,0xff,
X 0xf7,0xff,0x5b,0x55,0x59,0x21,0xc4,0x55,0xd2,0xfb,0xdd,0xde,0xef,0xd6,0x5a,
X 0x55,0x0a,0x52,0x51,0xa2,0x22,0xa2,0x94,0x88,0x8a,0x80,0xaa,0xf6,0xff,0xff,
X 0xff,0xff,0xfd,0xdf,0x7e,0xb5,0xba,0x55,0xab,0xaa,0xdd,0x76,0xbf,0xaa,0x26,
X 0x8a,0xd0,0x01,0xe9,0xff,0xff,0x77,0xbd,0x6d,0xb7,0x0a,0x21,0x01,0x04,0x54,
X 0x4a,0x54,0x52,0x22,0x20,0x2a,0x54,0xdb,0xff,0xff,0xff,0xff,0xbf,0xfb,0xef,
X 0x5f,0x57,0xd5,0xfe,0xff,0xf7,0xdf,0xdd,0xaa,0x52,0x21,0x05,0x4b,0xd2,0xbf,
X 0xf7,0xfd,0x6f,0xdb,0xda,0xed,0x4a,0x48,0x51,0xb7,0x25,0x29,0x09,0x48,0x8a,
X 0x80,0xd2,0xfd,0xfb,0xff,0xff,0xff,0xff,0xff,0xbf,0xf5,0xda,0xaa,0xab,0xdd,
X 0xbe,0xfd,0xb7,0x5b,0x15,0x0a,0x90,0x05,0xe9,0xff,0xbf,0xaf,0xfd,0xef,0xb7,
X 0xbb,0x5d,0x2b,0xa2,0x4d,0x9a,0x44,0xa2,0x02,0x21,0x2a,0x55,0xff,0xff,0xff,
X 0xdf,0xf7,0xff,0xff,0xee,0xae,0xad,0xaa,0xfe,0xf7,0xf7,0x6f,0xdf,0xb6,0x55,
X 0x41,0x25,0x52,0xd2,0xff,0xff,0xff,0xb7,0x7a,0x6d,0xed,0xff,0xdf,0x5b,0xd5,
X 0xad,0x2a,0x11,0x50,0x08,0x92,0xa8,0xfd,0xff,0xff,0xff,0x7f,0xf7,0xde,0x7f,
X 0x5b,0x53,0xd5,0xb5,0xdf,0xde,0xfe,0x7d,0xab,0xaa,0x2a,0x80,0x06,0xe4,0xfd,
X 0xee,0xf6,0xfe,0xef,0xbf,0xbf,0xb5,0x7d,0xed,0xbe,0xbb,0x92,0x44,0x05,0x51,
X 0x49,0xf5,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xdb,0xef,0x5d,0x55,0xff,0xfa,
X 0xfb,0xb7,0xdf,0xdf,0xaa,0x94,0x2a,0xa8,0xd2,0xef,0xff,0xbf,0xbf,0xbb,0xea,
X 0xf5,0x6f,0xab,0xbb,0xd5,0x4a,0x24,0x21,0x40,0x0a,0xa4,0xda,0xff,0xff,0xff,
X 0xff,0xff,0xff,0xff,0x6f,0x55,0xaa,0xaa,0xda,0x6f,0x6f,0xff,0x76,0xbb,0x56,
X 0x29,0x40,0x15,0xe4,0xff,0xff,0xff,0xeb,0xfe,0xff,0xdf,0xfe,0x76,0xad,0x6f,
X 0x25,0x11,0x4a,0x15,0x50,0x49,0xf5,0xff,0xff,0xff,0xff,0xde,0xbf,0xef,0xfb,
X 0xbb,0x56,0x55,0xf7,0xfd,0xff,0xb7,0xff,0x6f,0xab,0x4a,0x2a,0x50,0xd2,0xff,
X 0xbf,0xed,0xff,0xdf,0x7e,0xff,0xab,0xdd,0xd6,0x9a,0x48,0x4a,0x51,0x42,0xa5,
X 0x54,0xfd,0xff,0xff,0xff,0xff,0xff,0xfd,0x7d,0xaf,0xd6,0xad,0x2a,0xdd,0xb7,
X 0xd5,0xfe,0x6d,0xdb,0xaa,0x12,0x41,0xa1,0xf4,0xff,0xfd,0x7f,0xff,0xfb,0xf7,
X 0x6d,0xff,0xb6,0x3b,0x45,0x22,0x21,0x4a,0x29,0x95,0xaa,0xff,0xff,0xff,0xff,
X 0xff,0xff,0xff,0xff,0xfd,0x7d,0x55,0xa5,0x76,0x7d,0xbb,0x6f,0xff,0x7f,0x57,
X 0x55,0x28,0x4a,0xd5,0xde,0xff,0xff,0x6f,0xff,0xdf,0xff,0xad,0xdb,0x6e,0x21,
X 0x49,0x4a,0xa1,0x4a,0xaa,0x54,0xb5,0xff,0xff,0xff,0xff,0xff,0xff,0xf7,0xd7,
X 0xd6,0xaa,0xaa,0xfe,0xf7,0x76,0xfd,0xad,0xed,0x5a,0x95,0x42,0x90,0xea,0xff,
X 0xff,0xdf,0xfd,0xdf,0xff,0xdb,0x77,0xb7,0x95,0x94,0x90,0x08,0x8a,0x90,0xaa,
X 0xea,0xd6,0xfe,0xff,0xff,0xff,0xff,0xdf,0xbe,0xbd,0x6f,0x57,0x55,0xdb,0x5e,
X 0xaf,0x6f,0xff,0xbf,0xdf,0xaa,0x28,0x0a,0xf5,0xff,0xef,0xf6,0xff,0xfb,0xfd,
X 0x7e,0xdd,0xaa,0x2a,0x49,0x24,0x52,0x51,0xaa,0xaa,0xaa,0xaa,0xfd,0xff,0xff,
X 0xff,0x77,0xff,0xff,0x77,0xb5,0x5a,0x55,0xed,0xeb,0x7a,0xfd,0x75,0xfb,0x6a,
X 0x5b,0x42,0x51,0xfa,0xbd,0xff,0xbf,0xad,0x6f,0xd7,0xeb,0xaa,0x5a,0x45,0x04,
X 0x49,0x25,0x2a,0x55,0x6d,0x5b,0xa9,0xf6,0xff,0xff,0xff,0xff,0xfb,0xff,0xdd,
X 0xde,0xad,0x55,0xfd,0x5e,0xad,0x6f,0xdf,0xbf,0x5f,0x55,0x29,0x24,0xfa,0xff,
X 0xfb,0xed,0xfb,0xda,0xba,0x5a,0xb7,0x6a,0x29,0x52,0x12,0x48,0x91,0xaa,0xb6,
X 0x2d,0x12,0xfd,0xff,0xff,0xff,0xff,0xff,0xae,0x77,0x6b,0x6b,0xad,0xda,0xfb,
X 0x6b,0xfb,0x7b,0xf5,0x7a,0xad,0x42,0x49,0xd9,0xf7,0xdf,0xbf,0xae,0x77,0xd7,
X 0xb6,0x5a,0xab,0x40,0x81,0xa0,0x92,0xa4,0xd4,0xea,0x56,0xa9,0xf6,0xff,0xff,
X 0x7f,0xff,0xff,0xff,0xdd,0xbd,0xb5,0xaa,0x76,0xaf,0xda,0xde,0xee,0xbf,0x5f,
X 0xb7,0x28,0x24,0xf2,0x7e,0x7f,0xeb,0xfb,0xba,0x7b,0xdb,0xad,0x2a,0x2a,0x28,
X 0x4a,0x54,0x52,0x55,0xbb,0x15,0xa2,0xfd,0xff,0xff,0xff,0xff,0xdf,0xb7,0x77,
X 0xf7,0xae,0x55,0xdd,0xfd,0xb7,0xfb,0xbf,0xfb,0xed,0xad,0x42,0x49,0xe5,0xff,
X 0xfb,0x5d,0x57,0xd7,0xd6,0x56,0xdb,0x8a,0x44,0x45,0x20,0xa1,0xa4,0xaa,0xae,
X 0x4e,0x55,0xf7,0xff,0xff,0xff,0xbf,0xff,0xff,0xdd,0xad,0xb5,0xaa,0xf5,0x5f,
X 0xdd,0xb7,0xf6,0x5e,0xbf,0x76,0x2a,0x92,0xa8,0xef,0x6f,0xf7,0xed,0xbb,0x6d,
X 0xdb,0xaa,0x2a,0x29,0x90,0x0a,0x54,0x52,0xdb,0xab,0x15,0xa8,0xfd,0xff,0xff,
X 0xff,0xfb,0xfb,0x6d,0xb7,0x77,0x57,0x55,0xdd,0xfe,0x6b,0xff,0xdf,0xfb,0xfd,
X 0x5b,0xa5,0x48,0xc2,0x7e,0xbf,0x5d,0x5b,0x6d,0xdb,0xb6,0x56,0x41,0x40,0x05,
X 0x50,0x89,0xaa,0xb6,0x6a,0x4b,0x55,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xed,
X 0xdd,0xd5,0x6a,0xf5,0xef,0xde,0xdb,0x76,0xbf,0xd7,0xbe,0x12,0x25,0x95,0xfb,
X 0xff,0xb7,0xed,0xb6,0x6d,0xd5,0x5a,0x14,0x95,0xa0,0x2a,0x52,0xa9,0xda,0x5a,
X 0x15,0xa9,0xfb,0xff,0xff,0xff,0xff,0xff,0xd6,0xbf,0xbb,0xaa,0x5a,0xdd,0xfb,
X 0x7b,0xff,0xff,0xed,0xff,0x6b,0x55,0x52,0x25,0xef,0xad,0xda,0xb6,0x6d,0xdb,
X 0x56,0x25,0xa9,0x48,0x0a,0x95,0x94,0x52,0x57,0xb5,0x47,0x6a,0xef,0xff,0xff,
X 0xff,0xff,0xbf,0xff,0xea,0xee,0x6d,0xad,0xf6,0xfe,0xee,0xb7,0x6d,0xff,0xda,
X 0xbe,0xaa,0x24,0x55,0x7a,0xff,0x6e,0xdb,0xb6,0x56,0xdb,0x92,0x04,0x92,0xa4,
X 0x08,0xa9,0xaa,0x55,0xd5,0x1a,0xaa,0xfa,0xff,0xff,0xff,0xff,0xff,0xad,0xbf,
X 0x5b,0x5b,0xdb,0xfe,0xdf,0xbf,0xfd,0xff,0xb5,0xff,0xdb,0xaa,0x52,0xa5,0xec,
X 0xab,0xb5,0xad,0xd5,0x6d,0xb5,0x24,0xa9,0x4a,0x12,0xa5,0x56,0x75,0x55,0xab,
X 0xa6,0xaa,0xad,0xff,0xff,0xbf,0xff,0xfe,0x7b,0xeb,0xbe,0xaa,0x6d,0xb7,0xfb,
X 0xf7,0x6f,0xb5,0xef,0xdb,0xbe,0x56,0x95,0x2a,0x69,0xdf,0xda,0xea,0xba,0x56,
X 0x5b,0x52,0x4a,0x21,0xa9,0xa8,0xaa,0xaa,0xaa,0x6a,0xab,0xaa,0xea,0xff,0xff,
X 0xff,0xff,0xaf,0xef,0xbd,0x6b,0xdb,0xd6,0xfe,0x7f,0xbf,0xff,0xdf,0xbd,0xee,
X 0xf7,0xad,0x68,0x55,0xd2,0xbd,0x55,0xb7,0x57,0x75,0x55,0xa5,0x14,0x55,0xa5,
X 0x52,0x89,0x92,0xaa,0xd6,0xae,0xaa,0xda,0xff,0xbf,0xff,0xff,0xff,0xba,0xef,
X 0xde,0xb6,0xb5,0xff,0xef,0xff,0x76,0x7f,0xef,0x7f,0xfd,0xb6,0x96,0x52,0x25,
X 0xaa,0xba,0xad,0xea,0x5a,0x57,0x55,0xa2,0x94,0x2a,0x6d,0x55,0x49,0xd5,0x5a,
X 0xab,0x5a,0x65,0xff,0xff,0xff,0xff,0xf7,0xff,0xbe,0xbb,0xed,0xdb,0xdb,0xfe,
X 0xed,0xdf,0xf5,0xbb,0xda,0xd7,0xad,0xaa,0x8a,0x54,0x55,0xd7,0x5a,0xad,0xab,
X 0x54,0xaa,0x5a,0x55,0xd5,0xbe,0x2a,0x55,0xaa,0xb5,0xae,0x55,0xda,0xff,0xff,
X 0xff,0x6f,0x5d,0xad,0xeb,0xd6,0xba,0xf6,0xff,0xff,0xff,0xfb,0xff,0xfe,0xf7,
X 0xfd,0x6b,0x55,0x25,0x55,0x55,0xb5,0x6a,0xab,0x54,0xab,0x52,0xa5,0xaa,0x5a,
X 0x57,0xa5,0xaa,0x55,0xad,0xb5,0x56,0x65,0xff,0xff,0xff,0xbb,0xff,0xf7,0xbf,
X 0x7f,0xef,0x7d,0xff,0xdb,0x7f,0xbf,0xd7,0xd7,0x5e,0xb7,0xdf,0xaa,0xaa,0xaa,
X 0xde,0x6a,0x57,0x55,0xab,0x54,0xad,0x5a,0xd5,0xed,0x5d,0xa9,0x2a,0xb5,0x6a,
X 0x5b,0x49,0xd4,0xff,0xff,0xff,0xae,0xbc,0xfd,0xea,0xaa,0x7b,0xff,0x6d,0xff,
X 0xed,0xef,0xfd,0xfd,0xf7,0xef,0x6d,0x6f,0x55,0x6d,0x6b,0x95,0xba,0x6b,0x55,
X 0xab,0xaa,0xd6,0x7e,0x7b,0xaf,0x56,0x55,0x55,0xdb,0xae,0x2a,0xa9,0xfe,0xff,
X 0xbf,0x55,0xf9,0xd7,0xbf,0xff,0xae,0xed,0xff,0xff,0xff,0xff,0xbf,0x6f,0xdf,
X 0xba,0xbf,0x5d,0x55,0xb5,0xdd,0x6d,0xd5,0xde,0xb6,0xed,0xdd,0x7d,0xeb,0xef,
X 0x55,0xa9,0xaa,0x6a,0x6d,0x1b,0x4a,0xd2,0xfb,0xff,0x6f,0x6b,0xb5,0xbd,0xed,
X 0xaa,0xf7,0xff,0xff,0x77,0x7f,0xbb,0xed,0xfb,0xbb,0xff,0xed,0xd6,0xb6,0xde,
X 0xb6,0xb6,0xad,0xb6,0x7b,0x5b,0xf7,0xdf,0x7f,0xb5,0xae,0x56,0x55,0xad,0xb6,
X 0xb6,0x22,0xa9,0xfe,0xff,0xbb,0xad,0xfa,0xff,0xde,0xff,0xda,0xbf,0xbb,0xff,
X 0xfb,0xff,0xbf,0x6f,0xef,0xd6,0xfe,0x7b,0xdb,0x6a,0xdb,0xad,0xda,0xfa,0xee,
X 0xff,0x5d,0x7b,0xd5,0xdf,0x5b,0x55,0xd5,0xea,0xd5,0x5d,0xa8,0x52,0xed,0xff,
X 0xee,0xf6,0xdf,0xb6,0xf7,0x5a,0xff,0xf6,0xff,0xdd,0xff,0xef,0xf7,0xfb,0xfb,
X 0xbf,0xb7,0xde,0xbf,0xdd,0xf6,0xb6,0xab,0xad,0xff,0x6d,0xff,0xae,0xbf,0xea,
X 0xaa,0x55,0x55,0x2b,0xb5,0x36,0x92,0x94,0xf6,0xff,0xbb,0x5f,0x7f,0xdf,0xdd,
X 0xef,0xb5,0xff,0xfe,0xff,0xef,0x7e,0xbf,0xde,0xde,0xfa,0xfd,0x6b,0x75,0x77,
X 0xdf,0xdb,0x76,0xdb,0xda,0xff,0xb5,0xfb,0xea,0xbf,0xb7,0xaa,0x5a,0xed,0x6e,
X 0xb5,0x48,0x22,0xad,0xff,0xee,0xfb,0xd7,0xf7,0x77,0xfb,0xff,0xdf,0xb7,0xff,
X 0xfd,0xff,0xf7,0xff,0xbf,0x6f,0x5f,0xff,0xdf,0xdd,0xb5,0x76,0xdb,0x6e,0xbf,
X 0x6d,0xef,0xbf,0xbf,0xea,0x5a,0x6d,0xab,0x35,0xab,0x5f,0xaa,0x4a,0xf2,0xf6,
X 0xfb,0xff,0xfe,0xbe,0xfe,0x5d,0xdb,0xfb,0xff,0xdd,0xbf,0xf7,0xff,0xb5,0xf5,
X 0xfd,0xf5,0x5b,0xed,0x77,0xff,0xef,0x6e,0xbb,0xf5,0xff,0xbb,0xea,0xea,0xdd,
X 0xb7,0xd5,0xb6,0xd6,0x5a,0x69,0x90,0x2a,0xd5,0xff,0x6d,0xff,0xdb,0xed,0x5b,
X 0xff,0xff,0xff,0xff,0xff,0xff,0xbf,0x7d,0xff,0x7f,0x5f,0xff,0xfe,0x7f,0xdd,
X 0xab,0xba,0xdb,0xde,0x5b,0xdb,0xfe,0x7f,0x7f,0x77,0x5d,0xbb,0x5a,0x6b,0x6d,
X 0x77,0xa5,0x8a,0x54,0xd5,0xf7,0xbf,0x7f,0x7f,0xff,0xdb,0x76,0xbf,0xdd,0xf7,
X 0xf6,0xfd,0xef,0x6f,0xf7,0xf5,0xad,0xf7,0xf6,0x77,0xff,0xf7,0xee,0x75,0xef,
X 0xff,0xdb,0xd5,0xd5,0xee,0xeb,0x56,0xd5,0xd6,0xda,0xae,0x48,0x50,0x52,0x7b,
X 0xbd,0xfb,0xed,0xdb,0xef,0xfe,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xfb,0x7d,
X 0xbf,0xfb,0xbd,0xbf,0xdd,0x55,0xbd,0xbb,0xbe,0x75,0x6d,0x7f,0xff,0xbe,0xbb,
X 0x5e,0xdb,0xb6,0x5a,0xb7,0xda,0xa2,0x8a,0x28,0xd5,0xff,0xff,0xbf,0xff,0xfe,
X 0xef,0xdb,0xed,0x7f,0xbf,0xdf,0xef,0xbe,0xdf,0xd7,0xfb,0xee,0xf7,0xed,0x7f,
X 0xff,0xd7,0xee,0xeb,0xae,0xff,0xed,0x55,0x6b,0xed,0xfb,0xb6,0x6d,0x6b,0xd5,
X 0xb5,0x08,0x11,0x92,0x6a,0xd7,0xff,0xf7,0xff,0xbf,0x7f,0xff,0xff,0xee,0xf7,
X 0xff,0xfe,0xf7,0xff,0xfe,0xdf,0x7f,0x7d,0xff,0xd6,0x6d,0xfd,0x7b,0xbd,0xfb,
X 0x6d,0xff,0xff,0xde,0xbb,0xae,0x6d,0xab,0xb5,0xba,0xde,0x52,0x44,0x49,0xd4,
X 0xff,0xfe,0xff,0xfb,0xf7,0xff,0xff,0xff,0xff,0xff,0xfd,0xff,0xff,0xf6,0xbb,
X 0x76,0xdb,0xef,0xdb,0xff,0xf7,0x57,0xef,0xf7,0xae,0xf6,0xdb,0xea,0x75,0xef,
X 0x5d,0xdb,0x5e,0x6b,0xd7,0x75,0x81,0x28,0x2a,0x6b,0xfb,0xdf,0x7f,0x6f,0xff,
X 0xfb,0xff,0xf7,0xff,0xde,0xf7,0x77,0xff,0x7f,0xef,0xff,0xff,0xfb,0xfe,0x6d,
X 0x5d,0xfd,0x5b,0x5d,0xf7,0xbf,0xff,0x5f,0xbf,0x75,0xab,0xb6,0xb5,0xb5,0x6a,
X 0xdb,0x2a,0x42,0x55,0xd5,0xff,0xfb,0xfe,0xff,0xff,0xff,0xdd,0xbf,0xfb,0xff,
X 0xbf,0xff,0xdb,0xdf,0x7d,0xdb,0xb6,0xee,0xb7,0xff,0xff,0xb7,0xfe,0xf7,0x5d,
X 0xf5,0xb6,0xfa,0xea,0xae,0xb7,0xdd,0xd6,0xee,0xad,0x6d,0x41,0x94,0x4a,0x6a,
X 0xbf,0xff,0xff,0xdd,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xfb,0xdf,
X 0xff,0xfd,0xbf,0xfd,0xb7,0x6d,0xed,0xb7,0x5d,0xef,0xee,0xff,0x5f,0x5f,0xfb,
X 0xda,0x76,0xbb,0x35,0xdb,0xb6,0x15,0xa9,0x95,0xd4,0xff,0xdf,0xdb,0xff,0xff,
X 0xff,0xff,0xd6,0xee,0xbd,0xff,0xdd,0xff,0x7f,0x77,0xd5,0xd7,0xfd,0xb7,0xfe,
X 0xf7,0xbf,0xdd,0xf7,0xba,0xbb,0x5b,0xf5,0xfa,0xad,0xaa,0xad,0x6d,0xef,0xb6,
X 0xdb,0x2a,0x72,0x2b,0x69,0xff,0xf6,0xfe,0x7f,0xff,0xff,0xff,0x15,0x00,0xfe,
X 0xdd,0xff,0xfd,0xfe,0xfd,0xff,0x7e,0x57,0xfd,0xdf,0x7e,0x6b,0x77,0xbd,0xef,
X 0xfe,0xfe,0x5f,0xaf,0xfe,0xda,0x7a,0xb7,0xb5,0xda,0xf6,0x8b,0xa8,0x95,0xd4,
X 0xff,0xbf,0x7f,0xf7,0xff,0xff,0xff,0xaf,0xaa,0xf5,0xff,0xff,0xef,0xf7,0x6f,
X 0xdb,0xfb,0xff,0xef,0xfa,0xef,0xff,0xff,0xf7,0xba,0xdb,0xab,0xfa,0x7a,0x8b,
X 0xb6,0xed,0x6d,0x6b,0xb7,0x5d,0x25,0xa5,0x2a,0x52,0xff,0xed,0xf7,0xff,0xff,
X 0xff,0xff,0xb7,0xea,0xff,0xff,0xbf,0xff,0xdf,0xdf,0xff,0xde,0xba,0xbb,0xbf,
X 0xbb,0xbb,0x55,0xbd,0xef,0xff,0xff,0xaf,0xd7,0x6a,0x55,0x5b,0xbb,0xbd,0xdb,
X 0xee,0x55,0x52,0x4b,0xa9,0xdf,0xff,0xff,0xff,0xff,0xff,0xff,0xdf,0xfa,0xff,
X 0xff,0xff,0x7f,0xff,0x7e,0xb5,0xf7,0xef,0xfe,0xed,0xfe,0xfe,0xff,0xf7,0x7e,
X 0xbb,0x56,0x75,0x5d,0xd5,0x76,0xed,0xee,0xd6,0xb6,0xb5,0x0b,0xa9,0x2a,0x2a,
X 0xff,0xbb,0xbd,0xfd,0xff,0xff,0xff,0x7f,0xf7,0xff,0xff,0xff,0xff,0xff,0xef,
X 0xff,0xbd,0xfd,0x6f,0xff,0xef,0xdf,0xf6,0xbe,0xdf,0xef,0xfb,0xde,0x56,0x54,
X 0xab,0xb7,0x77,0xbb,0xed,0xde,0xd6,0x50,0x95,0xaa,0xff,0xff,0xff,0xff,0xff,
X 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x7f,0x6b,0xef,0xb7,0xfd,0xed,
X 0xbf,0xfb,0xdf,0xfb,0x7d,0xbb,0xae,0xb5,0xa5,0xaa,0x6e,0xfd,0xda,0xed,0xb6,
X 0x75,0x7b,0x57,0x55,0x55,0xff,0xef,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
X 0xff,0xff,0xff,0xbf,0xea,0xff,0xfb,0xfe,0x5f,0x7f,0xf5,0x6f,0xfb,0xbf,0xb7,
X 0xad,0x6b,0xdb,0x92,0xda,0xb5,0x56,0x7f,0xbb,0xdd,0xde,0xff,0xbd,0xaa,0xb6,
X 0xdf,0xff,0xff,0xf7,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xbf,
X 0xad,0xef,0xdb,0xf6,0xed,0xbf,0xfd,0xdf,0xf6,0x2e,0x52,0x94,0x56,0x54,0x35,
X 0xed,0xed,0xf5,0xef,0x77,0x6b,0xfd,0x7f,0xa5,0x5a,0xff,0xfe,0xef,0xfe,0xff,
X 0xff,0xff,0xf7,0xff,0xff,0xff,0xff,0xff,0xff,0xfb,0xff,0xda,0xfe,0xff,0xff,
X 0xee,0x7f,0xf7,0xff,0x57,0x89,0x22,0x21,0xa5,0xd6,0x56,0xbb,0xbf,0xba,0xba,
X 0xdd,0xeb,0xdf,0xab,0xf6,0xff,0xff,0xfe,0xdf,0xff,0xff,0xff,0xfe,0xff,0xff,
X 0xff,0xff,0xff,0xff,0xff,0xed,0x7f,0xb7,0xad,0xed,0x7b,0xdb,0xbf,0xad,0x48,
X 0x55,0x4a,0x4a,0x4a,0xd5,0xbd,0xed,0xf6,0xef,0xd7,0x77,0xff,0xff,0x57,0xdd,
X 0xff,0xff,0xbf,0xfb,0x6d,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
X 0x7f,0xdb,0xff,0x7f,0x7f,0xff,0xff,0xf6,0x7f,0x57,0x92,0x92,0x24,0xa5,0x6a,
X 0xd5,0xb6,0xdf,0x7a,0xfd,0xba,0xeb,0xfd,0xbf,0xf5,0xff,0xef,0xf7,0x7f,0xff,
X 0x7f,0xfd,0xfa,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xf7,0x7d,0x6b,0xfb,0xb5,
X 0xdb,0xf6,0xdf,0x4a,0xa9,0x24,0x54,0xa9,0x54,0x57,0x5b,0xdf,0xfb,0xef,0xd7,
X 0xef,0xfe,0xff,0xed,0x56,0xff,0xff,0xfe,0xee,0xff,0xff,0xbf,0xff,0xff,0xff,
X 0xff,0xff,0xff,0xff,0xff,0x7f,0xdf,0xff,0xb7,0xff,0xfe,0xbf,0xfb,0xab,0xaa,
X 0x52,0x25,0x48,0x4a,0xb5,0xed,0xea,0x7e,0x7b,0x7d,0x75,0xdb,0xdf,0xff,0xbb,
X 0xff,0xfb,0xff,0xff,0xfb,0xbf,0xfe,0xf6,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
X 0xdf,0x75,0x5b,0xff,0xee,0x6b,0xfb,0xae,0x2a,0x45,0x4a,0x52,0x25,0xa9,0xda,
X 0xb6,0xb7,0xef,0xdf,0xb7,0xdf,0xef,0xff,0x7f,0x57,0xff,0xdf,0xdf,0xdb,0xbe,
X 0xff,0xfb,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xdf,0xf7,0xdb,0x7b,
X 0xff,0xaf,0x77,0x55,0xaa,0xa4,0x24,0x92,0xaa,0xad,0x6d,0xed,0xfe,0xf7,0xfd,
X 0xf6,0xfa,0xff,0xff,0xbf,0x7f,0xff,0xfd,0xff,0xf7,0xff,0xff,0xff,0xff,0xff,
X 0xff,0xff,0xff,0xff,0xff,0xff,0x7f,0xdf,0x7e,0xdf,0xad,0x7e,0xc9,0xaa,0x94,
X 0x92,0x4a,0x55,0x52,0x7b,0xb7,0xbb,0xbb,0xbf,0xb7,0x5f,0xef,0xfe,0xff,0x6f,
X 0xff,0xff,0xff,0xbe,0xfd,0xff,0xff,0xfd,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
X 0xff,0xdb,0xb5,0xdb,0xf7,0xff,0xab,0xb6,0x95,0xa2,0x28,0x91,0x48,0xd5,0xaa,
X 0xed,0xee,0xfe,0xfd,0xff,0xf5,0xdb,0xff,0xf7,0xbe,0xff,0xff,0xff,0xf7,0xef,
X 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xef,0x5e,
X 0x55,0x55,0xa9,0xaa,0x54,0xa5,0x2a,0xa5,0xaa,0x6d,0xbb,0xdd,0xdb,0xf7,0xf6,
X 0xdf,0xfe,0xef,0xfe,0xff,0xdf,0xf7,0xde,0xff,0xfb,0xff,0xff,0xff,0xff,0xff,
X 0xff,0xff,0xff,0xff,0xff,0xff,0x7f,0xdb,0xba,0xf7,0xaf,0xaa,0x56,0x95,0x2a,
X 0x2a,0x44,0x55,0x6d,0xdb,0xdd,0xf7,0x7e,0xff,0xdf,0xf6,0xb7,0xff,0xff,0xfb,
X 0xff,0xff,0xff,0xdf,0x7e,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
X 0xff,0xf7,0xef,0xff,0x5e,0xa9,0x54,0xb5,0xaa,0xd2,0xa4,0x52,0x92,0xaa,0x6e,
X 0xb7,0xae,0xfb,0xbf,0xff,0x5f,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
X 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x7f,0x7b,0xab,0xb7,
X 0xaa,0xaa,0xaa,0xaa,0x2a,0x2a,0x55,0x55,0xf5,0xb5,0xed,0xfb,0xdd,0xfb,0xff,
X 0xff,0xd5,0xfe,0xff,0xff,0xff,0xbe,0xff,0xfe,0xef,0xff,0xff,0xff,0xff,0xff,
X 0xff,0xef,0xff,0xff,0xff,0xff,0xff,0xdf,0xfd,0x6a,0x55,0xd5,0xad,0x2a,0xa5,
X 0x52,0xa9,0x6a,0xab,0xde,0xb7,0xae,0xf7,0xff,0x77,0xfb,0xff,0xff,0xff,0xef,
X 0xff,0xff,0xf7,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
X 0xff,0xff,0x7f,0x6f,0xb7,0xdb,0xb6,0xaa,0x56,0x55,0x55,0xa5,0xaa,0x7d,0x77,
X 0xfd,0xfb,0xfd,0xfe,0xff,0xdf,0x6e,0xff,0xbf,0xff,0xff,0xff,0xff,0xbf,0xff,
X 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xed,0xfd,0x5a,
X 0x55,0x6b,0xdb,0xaa,0x2a,0x55,0x55,0xed,0xd6,0xda,0xab,0x57,0xf7,0xef,0xfe,
X 0xff,0xbf,0xf7,0xff,0xff,0xff,0xff,0xff,0xff,0xfb,0xff,0xff,0xff,0xff,0xff,
X 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x5f,0xef,0x5a,0xb5,0x56,0x55,0x55,
X 0x55,0xb5,0xb6,0xbb,0xf7,0xfe,0xfd,0xdf,0xff,0xff,0xff,0xef,0xff,0xfb,0xfd,
X 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
X 0xff,0xff,0xbf,0xf5,0x5a,0xab,0xd6,0xb5,0xad,0xaa,0xaa,0x6a,0x5b,0x6f,0xdd,
X 0xdb,0x6e,0xfb,0xfd,0xf7,0xff,0x7f,0x7f,0xff,0xff,0xff,0xff,0xff,0xff,0xbf,
X 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xdf,0xf7,
X 0xff,0xbb,0x6e,0xf7,0x6d,0x77,0xdf,0xfd,0xfb,0x7f,0xff,0xff,0xff,0xff,0x7e,
X 0xff,0xff,0xff,0xff,0xef};
SHAR_EOF
echo 'File rose.xbm is complete' &&
chmod 0444 rose.xbm ||
echo 'restore of rose.xbm failed'
Wc_c="`wc -c < 'rose.xbm'`"
test 41150 -eq "$Wc_c" ||
	echo 'rose.xbm: original size 41150, current size' "$Wc_c"
rm -f _shar_wnt_.tmp
fi
# ============= wclock.c ==============
if test -f 'wclock.c' -a X"$1" != X"-c"; then
	echo 'x - skipping wclock.c (File already exists)'
	rm -f _shar_wnt_.tmp
else
> _shar_wnt_.tmp
echo 'x - extracting wclock.c (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'wclock.c' &&
#ifndef lint
static char rcsid[] = "$XConsortium: xclock.c,v 1.28 89/12/11 15:51:32 kit Exp $";
#endif /* lint */
X
/*
X * Wclock mainline. Hacked from xclock.c (X11R4) by RJC.
X */
X
/*
X * Copyright 1989 Massachusetts Institute of Technology
X *
X * Permission to use, copy, modify, distribute, and sell this software and its
X * documentation for any purpose is hereby granted without fee, provided that
X * the above copyright notice appear in all copies and that both that
X * copyright notice and this permission notice appear in supporting
X * documentation, and that the name of M.I.T. not be used in advertising or
X * publicity pertaining to distribution of the software without specific,
X * written prior permission.  M.I.T. makes no representations about the
X * suitability of this software for any purpose.  It is provided "as is"
X * without express or implied warranty.
X *
X * M.I.T. DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING ALL
X * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO EVENT SHALL M.I.T.
X * BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
X * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION
X * OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN 
X * CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
X */
X
X
#include <X11/Xatom.h>
#include <X11/Intrinsic.h>
#include <X11/StringDefs.h>
#include <X11/Xaw/Cardinals.h>
#include <X11/Shell.h>
X
#include "Wclock.h"
#include "patchlevel.h"
#include "wclock.xbm"
#include "wclock.mask"
X
extern void exit();
static void quit();
X
/* Command line options table.  Only resources are entered here...there is a
X   pass over the remaining options after XtParseCommand is let loose. */
X
static XrmOptionDescRec options[] = {
{"-forceshape",	"*wclock.forceShape",		XrmoptionNoArg,	       "TRUE"},
{"-noforceshape","*wclock.forceShape",		XrmoptionNoArg,	      "FALSE"},
{"-plot",	"*wclock.plotSegment",		XrmoptionNoArg,	       "TRUE"},
{"-noplot",	"*wclock.plotSegment",		XrmoptionNoArg,	      "FALSE"},
{"-shape",	"*wclock.shapeSegment",		XrmoptionNoArg,	       "TRUE"},
{"-noshape",	"*wclock.shapeSegment",		XrmoptionNoArg,	      "FALSE"},
{"-extoutline",	"*wclock.externalOutline",	XrmoptionSepArg,	 NULL},
{"-intoutline",	"*wclock.internalOutline",	XrmoptionSepArg,	 NULL},
{"-extpercent", "*wclock.externalPercent",	XrmoptionSepArg,	 NULL},
{"-intpercent", "*wclock.internalPercent",	XrmoptionSepArg,	 NULL},
{"-extbitmap",	"*wclock.externalBitmap",	XrmoptionSepArg,	 NULL},
{"-intbitmap",	"*wclock.internalBitmap",	XrmoptionSepArg,	 NULL},
{"-bitmap",	"*wclock.backgroundBitmap",	XrmoptionSepArg,	 NULL},
{"-slicewidth",	"*wclock.sliceWidth",		XrmoptionSepArg,	 NULL},
{"-slicespace",	"*wclock.sliceSpace",		XrmoptionSepArg,	 NULL},
{"-sliceoffset","*wclock.sliceOffset",		XrmoptionSepArg,	 NULL},
{"-update",	"*wclock.update",		XrmoptionSepArg,	 NULL},
{"-debug",	"*wclock.debugInc",		XrmoptionSepArg,	 NULL},
};
X
X
static XtActionsRec wclock_actions[] = {
X    { "quit",	quit },
};
X
static Atom wm_delete_window;
X
/*
X * Report the syntax for calling wclock.
X */
X
Syntax(call)
X	char *call;
{
X
X        (void) printf ("Wclock patchlevel %d\n", PATCHLEVEL);
X        (void) printf ("usage: %s [-[no]shape] [-[no]forceshape] [-[no]plot]\n", call);
X        (void) printf ("       [-extoutline <outline>] [-intoutline <outline>] \n");
X        (void) printf ("       [-extbitmap <bitmap>] [-intbitmap <bitmap>] \n");
X        (void) printf ("       [-extpercent <int>] [-intpercent <int>] \n");
X        (void) printf ("       [-slicewidth <sec>] [-slicespace <sec>] [-sliceofset <sec>\n");
X        (void) printf ("       [-update <seconds>] [-bitmap <bitmap>]\n");
X        (void) printf ("       [toolkit options...]\n\n");
exit(1);
}
X
void main(argc, argv)
X    int argc;
X    char **argv;
{
X    Widget toplevel;
X    Arg arg;
X    Pixmap icon_pixmap = None;
X    XtAppContext app_con;
X
X    toplevel = XtAppInitialize (&app_con, "Wclock", options, XtNumber(options),
X				&argc, argv, NULL, NULL, ZERO);
X    if (argc != 1) Syntax(argv[0]);
X
X    XtAppAddActions (app_con, wclock_actions, XtNumber(wclock_actions));
X
X    /*
X     * This is a hack so that f.delete will do something useful in this
X     * single-window application.
X     */
X    XtOverrideTranslations(toplevel, 
X		    XtParseTranslationTable ("<Message>WM_PROTOCOLS: quit()"));
X
X    XtSetArg(arg, XtNiconPixmap, &icon_pixmap);
X    XtGetValues(toplevel, &arg, ONE);
X    if (icon_pixmap == None) {
X	arg.value = (XtArgVal)XCreateBitmapFromData(XtDisplay(toplevel),
X				       XtScreen(toplevel)->root,
X				       wclock_bits, wclock_width, wclock_height);
X	XtSetValues (toplevel, &arg, ONE);
X    }
X    XtSetArg(arg, XtNiconMask, &icon_pixmap);
X    XtGetValues(toplevel, &arg, ONE);
X    if (icon_pixmap == None) {
X	arg.value = (XtArgVal)XCreateBitmapFromData(XtDisplay(toplevel),
X				       XtScreen(toplevel)->root,
X				       wclock_mask_bits, wclock_mask_width, 
X				       wclock_mask_height);
X	XtSetValues (toplevel, &arg, ONE);
X    }
X
X    XtCreateManagedWidget ("wclock", wclockWidgetClass, toplevel, NULL, ZERO);
X    XtRealizeWidget (toplevel);
X    wm_delete_window = XInternAtom (XtDisplay(toplevel), "WM_DELETE_WINDOW",
X				    False);
X    (void) XSetWMProtocols (XtDisplay(toplevel), XtWindow(toplevel),
X			    &wm_delete_window, 1);
X    XtAppMainLoop (app_con);
}
X
X
/*ARGSUSED*/
static void quit (w, event, params, num_params)
X    Widget w;
X    XEvent *event;
X    String *params;
X    Cardinal *num_params;
{
X    if (event->type == ClientMessage &&
X	event->xclient.data.l[0] != wm_delete_window) {
X	XBell (XtDisplay(w), 0);
X	return;
X    }
X    XCloseDisplay (XtDisplay(w));
X    (void)exit (0);
}
X
X
X
X
X
X
X
X
X
X
SHAR_EOF
chmod 0444 wclock.c ||
echo 'restore of wclock.c failed'
Wc_c="`wc -c < 'wclock.c'`"
test 5723 -eq "$Wc_c" ||
	echo 'wclock.c: original size 5723, current size' "$Wc_c"
rm -f _shar_wnt_.tmp
fi
# ============= wclock.man ==============
if test -f 'wclock.man' -a X"$1" != X"-c"; then
	echo 'x - skipping wclock.man (File already exists)'
	rm -f _shar_wnt_.tmp
else
> _shar_wnt_.tmp
echo 'x - extracting wclock.man (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'wclock.man' &&
'\" t
.TH WCLOCK 1 "Release 4" "X Version 11"
.SH NAME
wclock - `wedge' clock for X
.SH SYNOPSIS
.ta 8n
\fBwclock\fP	[-\fItoolkitoption\fP ...] [-help] 
X       [-[no]shape] [-[no]forceshape] [-[no]plot]
X       [-extoutline \fIoutline\fR] [-intoutline \fIoutline\fR]
X       [-extbitmap \fIbitmap\fR] [-intbitmap \fIbitmap\fR]
X       [-extpercent \fIint\fR] [-intpercent \fIint\fR]
X       [-slicewidth \fIsec\fR] [-slicespace \fIsec\fR] [-sliceofset \fIsec\fR]
X       [-update \fIseconds\fR] [-bitmap \fIbitmap\fR]
X
.SH DESCRIPTION
Wclock is yet another clock for X. It is unusual in it's method of
indicating the current time. Rather than displaying hands it displays
a wedge shaped region which starts at the hour hand position and ends
at the minute hand position. What form this wedge takes and how it is
displayed can be changed to create a large number of different looks. 
.LP
Wclock has two basic modes of operation, plot and shape. In plot mode
the wedge representing the current time is plotted over the
background. In shape mode, the background itself is shaped to the size
of the wedge. Additionally, wclock can be told to shape the entire
application window to fit the wedge.
.LP
The overall shape of the clock (and of the entire application if
`forceshape' is set) is given as two outlines, interior and exterior.
These outlines can be circles with diameter a given percentage of the
size of the clock or they can be given as a bitmap mask. 
.SH OPTIONS
In addition to the standard toolkit options, \fIwclock\fR understands
the following:
.TP 8
.B \-help
This option indicates that a brief summary of the allowed options should be
printed on the standard error.
.TP 8
.B \-update \fIseconds\fP
This option specifies the frequency in seconds at which \fIwclock\fP
should update its display.  If the clock is obscured and then exposed,
it will be updated immediately.  The default is 60 seconds.
.TP 8
.B \-[no]shape
Turn shape mode on and off.
.TP 8
.B \-[no]forceshape
If shape mode is on, shape the entire application, not just the clock
window itself. If this is not set the exterior frame of the application
will be rectangular.
.TP 8
.B \-[no]plot
Turn plot mode on and off.
.TP 8
.B \-extoutline \fItype\fR
Select the type of exterior outline. \fIType\fR should be one of
`none', `circle' or `bitmap' indicating no outline, a circle (ellipse
if the geometry of the clock is not a square) or a shape given in a
bitmap mask.
.TP 8
.B \-extbitmap \fImask\fR
If the external shape is to be a bitmap, this option gives the name of
the masking bitmap.
.TP 8
.B \-extpercent \fIpercentage\fR
If the external shape is to be a circle, this option gives the radius
of the circle as a percentage of the size of the clock.
.TP 8
.B \-intoutline \fItype\fR
.B \-intbitmap \fImask\fR
.B \-intpercent \fIpercentage\fR
These options define the interior outline in a similar way.
.TP 8 
.B \-slicewidth \fIsecs\fR
If non zero, wedge shaped slices spanning \fIsecs\fR seconds are drawn
on the background.
.TP 8 
.B \-slicespace \fIsecs\fR
Specifies the spacing between the starts of the slices drawn if slice
width is non zero.
.TP 8 
.B \-sliceoffset \fIsecs\fR
Specifies the offset from twelve o'clock at which the first slice is
drawn. 
.TP 8 
.B \-bitmap \fIbitmap\fR
Specifies the background of the clock.
.SH EXAMPLES
To produce a circular rather than annular clock do
.IP
wclock -intoutline none
.LP
To create a clock in the shape of a rose do
.IP
.nf
wclock -intoutline none -bitmap rose.xbm -extoutline bitmap
.br
X	-extbitmap rose.mask -slicewidth 0 
.LP
If the application defaults file has been installed correctly you can
get the latter by simply doing
.IP
wclock -name roseClock
.LP
Also try 
.IP
wclock -name eyeClock
.LP
For a different outlook on things.
.SH X DEFAULTS
The wclock program is simply a wrapper around the Wclock widget. The
relationship between the command line options and the resource names
for the widget is as follows:
.IP
.TS
tab (/), center;
lB  lB  lB  lB
l  l  l  l.
Option		/ Resource		/ Class			/ Type
-[no]forceshape	/ forceShape		/ ForceShape		/ Boolean
-[no]plot	/ plotSegment		/ PlotSegment		/ Boolean
-[no]shape	/ shapeSegment		/ ShapeSegment		/ Boolean
-extoutline	/ externalOutline	/ Outline		/ Outline
-intoutline	/ internalOutline	/ Outline		/ Outline
-extpercent	/ externalPercent	/ Margin		/ Int
-intpercent	/ internalPercent	/ Margin		/ Int
-extbitmap	/ externalBitmap	/ Mask			/ Bitmap
-intbitmap	/ internalBitmap	/ Mask			/ Bitmap
-bitmap		/ backgroundBitmap	/ Bitmap		/ Bitmap
-slicewidth	/ sliceWidth		/ Slice			/ Int
-slicespace	/ sliceSpace		/ Slice			/ Int
-sliceoffset	/ sliceOffset		/ Slice			/ Int
-update		/ update		/ Update		/ Int
.TE
.SH WIDGETS
The widget hierarchy is very simple:
.sp
.nf
.TA .5i 
.ta .5i 
Wclock  wclock
X	Wclock  wclock
.fi
.sp
.SH ENVIRONMENT
.PP
.TP 8
.B DISPLAY
to get the default host and display number.
.TP 8
.B XENVIRONMENT
to get the name of a resource file that overrides the global resources
stored in the RESOURCE_MANAGER property.
.SH FILES
/usr/lib/X11/app-defaults/Wclock - specifies required resources
.SH "SEE ALSO"
XX(1), xclock(1), oclock(1), xrdb(1), time(3C)
.SH BUGS
.I Wclock
believes the system clock too.
.LP
It is arguable whether two `circular' outlines in a non-rectangular
box should produce a band of constant width or, as happens now, a
region bounded by two ellipses.
.SH COPYRIGHT
Copyright 1988, Massachusetts Institute of Technology.
.br
See \fIX(1)\fP for a full statement of rights and permissions.
.SH AUTHORS
Wclock was created by Richard Caley (R.Caley@ed.ac.uk) from parts
scavenged from xclock, xdiary and xbiff and the bottom of a coffee
pot. 
.LP
XXclock was created by:
.IP
Tony Della Fera (MIT-Athena, DEC)
.IP
Dave Mankins (MIT-Athena, BBN)
.IP
Ed Moy (UC Berkeley)
.LP
XXdiary was created by:
.IP
Jason Baietto (Harris Corporation)
.LP
XXbiff was created by:
.IP
Jim Fulton (MIT X Consortium)
.LP
Rjc made the coffee.
X
X
X
SHAR_EOF
chmod 0444 wclock.man ||
echo 'restore of wclock.man failed'
Wc_c="`wc -c < 'wclock.man'`"
test 5949 -eq "$Wc_c" ||
	echo 'wclock.man: original size 5949, current size' "$Wc_c"
rm -f _shar_wnt_.tmp
fi
# ============= wclock.mask ==============
if test -f 'wclock.mask' -a X"$1" != X"-c"; then
	echo 'x - skipping wclock.mask (File already exists)'
	rm -f _shar_wnt_.tmp
else
> _shar_wnt_.tmp
echo 'x - extracting wclock.mask (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'wclock.mask' &&
#define wclock_mask_width 42
#define wclock_mask_height 39
#define wclock_mask_x_hot 0
#define wclock_mask_y_hot 0
static char wclock_mask_bits[] = {
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xac,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0xec, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfc,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0x00, 0x00, 0xfc, 0x03, 0x00, 0xec,
X   0x00, 0x80, 0xff, 0x0f, 0x00, 0xec, 0x00, 0xe0, 0xff, 0x3f, 0x00, 0xec,
X   0x00, 0xf0, 0xff, 0xff, 0x00, 0xec, 0x00, 0xf8, 0xff, 0xff, 0x01, 0xfc,
X   0x00, 0xfe, 0x03, 0xfe, 0x01, 0x9c, 0x00, 0xfe, 0x00, 0xf0, 0x00, 0xec,
X   0x00, 0x3f, 0x00, 0x30, 0x00, 0xac, 0x00, 0x3f, 0x00, 0x00, 0x00, 0xfc,
X   0x80, 0x1f, 0x00, 0x00, 0x00, 0xfc, 0x80, 0x0f, 0x00, 0x00, 0x00, 0xfc,
X   0xc0, 0x0f, 0x00, 0x00, 0x00, 0x44, 0xc0, 0x07, 0x00, 0x00, 0x00, 0x00,
X   0xc0, 0x07, 0x00, 0x00, 0x00, 0xfc, 0xc0, 0x07, 0x00, 0x00, 0x00, 0xfc,
X   0xc0, 0x07, 0x00, 0x00, 0x00, 0xfc, 0xc0, 0x07, 0x00, 0x00, 0x00, 0xfc,
X   0xc0, 0x07, 0x00, 0x00, 0x00, 0x44, 0xc0, 0x07, 0x00, 0x00, 0x00, 0xfc,
X   0xc0, 0x0f, 0x00, 0x00, 0x00, 0x44, 0x80, 0x0f, 0x00, 0x00, 0x00, 0xfc,
X   0x80, 0x1f, 0x00, 0x00, 0x00, 0xfc, 0x00, 0x1f, 0x00, 0x00, 0x00, 0xfc,
X   0x00, 0x3f, 0x00, 0x00, 0x00, 0xec, 0x00, 0xfe, 0x00, 0x00, 0x00, 0x44,
X   0x00, 0xfe, 0x03, 0x00, 0x00, 0xfc, 0x00, 0xf8, 0xff, 0x03, 0x00, 0xfc,
X   0x00, 0xf0, 0xff, 0x03, 0x00, 0xe4, 0x00, 0xe0, 0xff, 0x07, 0x00, 0x00,
X   0x00, 0x80, 0xff, 0x07, 0x00, 0x00, 0x00, 0x00, 0xfc, 0x03, 0x00, 0xfc,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0xfc};
SHAR_EOF
chmod 0444 wclock.mask ||
echo 'restore of wclock.mask failed'
Wc_c="`wc -c < 'wclock.mask'`"
test 1615 -eq "$Wc_c" ||
	echo 'wclock.mask: original size 1615, current size' "$Wc_c"
rm -f _shar_wnt_.tmp
fi
# ============= wclock.xbm ==============
if test -f 'wclock.xbm' -a X"$1" != X"-c"; then
	echo 'x - skipping wclock.xbm (File already exists)'
	rm -f _shar_wnt_.tmp
else
> _shar_wnt_.tmp
echo 'x - extracting wclock.xbm (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'wclock.xbm' &&
#define wclock_width 42
#define wclock_height 39
#define wclock_x_hot 0
#define wclock_y_hot 0
static char wclock_bits[] = {
X   0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x50,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe3, 0x00, 0x00, 0x10,
X   0x00, 0xc0, 0xe3, 0x10, 0x00, 0x10, 0x00, 0x80, 0xe3, 0x38, 0x00, 0x10,
X   0x00, 0x88, 0xe3, 0x38, 0x00, 0x10, 0x00, 0x1c, 0xe7, 0x1c, 0x00, 0x00,
X   0x00, 0x38, 0x47, 0x0c, 0x03, 0x60, 0x00, 0x70, 0x00, 0x8c, 0x07, 0x10,
X   0x00, 0x61, 0x00, 0xc0, 0x01, 0x50, 0x80, 0x03, 0x00, 0xe0, 0x00, 0x00,
X   0x80, 0x0f, 0x00, 0x20, 0x00, 0x00, 0x00, 0x1f, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x08, 0x00, 0x00, 0x00, 0xb8, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfc,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x0f, 0x00, 0x00, 0x00, 0x00,
X   0xe0, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0xb8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x0e, 0x00, 0x00, 0x00, 0xb8, 0xc0, 0x1f, 0x00, 0x00, 0x00, 0x00,
X   0x80, 0x07, 0x00, 0x00, 0x00, 0x00, 0x80, 0x21, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x70, 0x00, 0x00, 0x00, 0x10, 0x00, 0x78, 0x00, 0x04, 0x00, 0xb8,
X   0x00, 0x3c, 0x67, 0x04, 0x00, 0x00, 0x00, 0x1c, 0xe7, 0x0c, 0x00, 0x00,
X   0x00, 0x88, 0xe3, 0x08, 0x00, 0x18, 0x00, 0x80, 0xe3, 0x18, 0x00, 0xfc,
X   0x00, 0xc0, 0xe3, 0x10, 0x00, 0xfc, 0x00, 0x00, 0xe3, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfc,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
SHAR_EOF
chmod 0444 wclock.xbm ||
echo 'restore of wclock.xbm failed'
Wc_c="`wc -c < 'wclock.xbm'`"
test 1590 -eq "$Wc_c" ||
	echo 'wclock.xbm: original size 1590, current size' "$Wc_c"
rm -f _shar_wnt_.tmp
fi
rm -f _shar_seq_.tmp
echo You have unpacked the last part
exit 0
-- 
--
Molecular Simulations, Inc.			mail: dcmartin@msi.com
796 N. Pastoria Avenue				uucp: uunet!dcmartin
Sunnyvale, California 94086			at&t: 408/522-9236
