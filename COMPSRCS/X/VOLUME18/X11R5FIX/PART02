Newsgroups: comp.sources.x
Path: uunet!uunet!paladin.american.edu!darwin.sura.net!mips!msi!dcmartin
From: Donna Converse <converse@expo.lcs.mit.edu>
Subject: v18i061: X11R5 public fix #14, Part02/02
Message-ID: <1992Jul28.215042.8099@msi.com>
Originator: dcmartin@fascet
Sender: dcmartin@msi.com (David C. Martin - Moderator)
Organization: Molecular Simulations, Inc.
References: <csx-18i060-X11R5-fix14@uunet.UU.NET>
Date: Tue, 28 Jul 1992 21:50:42 GMT
Approved: dcmartin@msi.com
Lines: 573

Submitted-by: Donna Converse <converse@expo.lcs.mit.edu>
Posting-number: Volume 18, Issue 61
Archive-name: X11R5-fix14/part02

#!/bin/sh
# this is part.02 (part 2 of a multipart archive)
# do not concatenate these parts, unpack them in order with /bin/sh
# file fix-14 continued
#
if test ! -r _shar_seq_.tmp; then
	echo 'Please unpack part 1 first!'
	exit 1
fi
(read Scheck
 if test "$Scheck" != 2; then
	echo Please unpack part "$Scheck" next!
	exit 1
 else
	exit 0
 fi
) < _shar_seq_.tmp || exit 1
if test ! -f _shar_wnt_.tmp; then
	echo 'x - still skipping fix-14'
else
echo 'x - continuing file fix-14'
sed 's/^X//' << 'SHAR_EOF' >> 'fix-14' &&
X              xtpd->keysyms_per_keycode = 0;
*** /tmp/da4019	Thu Jul 23 16:57:16 1992
--- mit/lib/Xt/Initialize.c	Thu Jul 23 16:57:14 1992
***************
*** 1,4 ****
! /* $XConsortium: Initialize.c,v 1.200 91/12/19 19:30:59 rws Exp $ */
X  
X  /***********************************************************
X  Copyright 1987, 1988 by Digital Equipment Corporation, Maynard, Massachusetts,
--- 1,4 ----
! /* $XConsortium: Initialize.c,v 1.201 92/06/08 11:15:22 converse Exp $ */
X  
X  /***********************************************************
X  Copyright 1987, 1988 by Digital Equipment Corporation, Maynard, Massachusetts,
***************
*** 580,602 ****
X      name_list[0] = class_list[0] = XrmPermStringToQuark(".");
X      name_list[2] = class_list[2] = NULLQUARK;
X      XrmParseCommand(&db, options, num_options, ".", &targc, targv);
!     if (applName && ! *applName) {
X  	name_list[1] = XrmPermStringToQuark("name");
X  	if (XrmQGetResource(db, name_list, name_list, &type, &val) &&
X  	    type == _XtQString)
X  	    *applName = val.addr;
X      }
!     if (displayName && ! *displayName) {
X  	name_list[1] = XrmPermStringToQuark("display");
X  	if (XrmQGetResource(db, name_list, name_list, &type, &val) &&
X  	    type == _XtQString)
X  	    *displayName = val.addr;
X      }
!     name_list[1] = XrmPermStringToQuark("xnlLanguage");
!     class_list[1] = XrmPermStringToQuark("XnlLanguage");
!     if (XrmQGetResource(db, name_list, class_list, &type, &val) &&
! 	type == _XtQString)
! 	*language = val.addr;
X  
X      XtFree((char *)targv);
X      XtFree((char *)options);
--- 580,604 ----
X      name_list[0] = class_list[0] = XrmPermStringToQuark(".");
X      name_list[2] = class_list[2] = NULLQUARK;
X      XrmParseCommand(&db, options, num_options, ".", &targc, targv);
!     if (applName) {
X  	name_list[1] = XrmPermStringToQuark("name");
X  	if (XrmQGetResource(db, name_list, name_list, &type, &val) &&
X  	    type == _XtQString)
X  	    *applName = val.addr;
X      }
!     if (displayName) {
X  	name_list[1] = XrmPermStringToQuark("display");
X  	if (XrmQGetResource(db, name_list, name_list, &type, &val) &&
X  	    type == _XtQString)
X  	    *displayName = val.addr;
X      }
!     if (language) {
! 	name_list[1] = XrmPermStringToQuark("xnlLanguage");
! 	class_list[1] = XrmPermStringToQuark("XnlLanguage");
! 	if (XrmQGetResource(db, name_list, class_list, &type, &val) &&
! 	    type == _XtQString)
! 	    *language = val.addr;
!     }
X  
X      XtFree((char *)targv);
X      XtFree((char *)options);
*** /tmp/da4055	Thu Jul 23 16:57:23 1992
--- mit/lib/Xt/Intrinsic.c	Thu Jul 23 16:57:22 1992
***************
*** 1,4 ****
! /* $XConsortium: Intrinsic.c,v 1.171 91/07/16 18:30:20 converse Exp $ */
X  
X  /***********************************************************
X  Copyright 1987, 1988 by Digital Equipment Corporation, Maynard, Massachusetts,
--- 1,4 ----
! /* $XConsortium: Intrinsic.c,v 1.172 92/04/15 19:15:24 rws Exp $ */
X  
X  /***********************************************************
X  Copyright 1987, 1988 by Digital Equipment Corporation, Maynard, Massachusetts,
***************
*** 28,33 ****
--- 28,36 ----
X  
X  #include "IntrinsicI.h"
X  #include "StringDefs.h"
+ #ifndef NO_IDENTIFY_WINDOWS
+ #include <X11/Xatom.h>
+ #endif
X  #ifndef VMS
X  #include <sys/stat.h>
X  #endif /* VMS */
***************
*** 225,235 ****
X      window = XtWindow(widget);
X  #ifndef NO_IDENTIFY_WINDOWS
X      if (_XtGetPerDisplay(XtDisplay(widget))->appContext->identify_windows) {
! 	XClassHint classhint;
X  
! 	classhint.res_name = widget->core.name;
! 	classhint.res_class = widget->core.widget_class->core_class.class_name;
! 	XSetClassHint (XtDisplay(widget), window, &classhint);
X      }
X  #endif
X  #ifdef notdef
--- 228,250 ----
X      window = XtWindow(widget);
X  #ifndef NO_IDENTIFY_WINDOWS
X      if (_XtGetPerDisplay(XtDisplay(widget))->appContext->identify_windows) {
! 	int len_nm, len_cl;
! 	char *s;
X  
! 	len_nm = widget->core.name ? strlen(widget->core.name) : 0;
! 	len_cl = strlen(widget->core.widget_class->core_class.class_name);
! 	s = XtMalloc((unsigned) (len_nm + len_cl + 2));
! 	s[0] = '\0';
! 	if (len_nm)
! 	    strcpy(s, widget->core.name);
! 	strcpy(s + len_nm + 1,
! 	       widget->core.widget_class->core_class.class_name);
! 	XChangeProperty(XtDisplay(widget), window,
! 			XInternAtom(XtDisplay(widget), "_MIT_OBJ_CLASS",
! 				    False),
! 			XA_STRING, 8, PropModeReplace, (unsigned char *) s, 
! 			len_nm + len_cl + 2);
! 	XtFree(s);
X      }
X  #endif
X  #ifdef notdef
*** /tmp/da4091	Thu Jul 23 16:57:29 1992
--- mit/lib/Xt/Keyboard.c	Thu Jul 23 16:57:27 1992
***************
*** 1,4 ****
! /* $XConsortium: Keyboard.c,v 1.24 91/07/21 16:55:01 converse Exp $ */
X  
X  /********************************************************
X  
--- 1,4 ----
! /* $XConsortium: Keyboard.c,v 1.25 92/04/22 16:49:33 rws Exp $ */
X  
X  /********************************************************
X  
***************
*** 273,279 ****
X  		       * focus 
X  		       */
X  		      if (
! 			  (event->type != KeyPress)
X  			  )
X  			dspWidget = focusWidget;
X  		      else
--- 273,280 ----
X  		       * focus 
X  		       */
X  		      if (
! 			  (event->type != KeyPress) ||
! 			  (event->keycode == 0) /* Xlib XIM composed input */
X  			  )
X  			dspWidget = focusWidget;
X  		      else
***************
*** 341,347 ****
X        {
X  	case KeyPress:
X  	  {
! 	      if (!IsServerGrab(device->grabType) && 
X  		  (newGrab = CheckServerGrabs((XEvent*)event,
X  					      pdi->trace,
X  					      pdi->traceDepth)))
--- 342,349 ----
X        {
X  	case KeyPress:
X  	  {
! 	      if (event->keycode != 0 && /* Xlib XIM composed input */
! 		  !IsServerGrab(device->grabType) && 
X  		  (newGrab = CheckServerGrabs((XEvent*)event,
X  					      pdi->trace,
X  					      pdi->traceDepth)))
*** /tmp/da4127	Thu Jul 23 16:57:35 1992
--- mit/lib/Xt/PassivGrab.c	Thu Jul 23 16:57:33 1992
***************
*** 1,4 ****
! /* $XConsortium: PassivGrab.c,v 1.19 91/07/21 16:04:41 converse Exp $ */
X  
X  /********************************************************
X  
--- 1,4 ----
! /* $XConsortium: PassivGrab.c,v 1.20 92/05/11 17:44:00 converse Exp $ */
X  
X  /********************************************************
X  
***************
*** 536,544 ****
X  
X  /*
X   * This handler is needed to guarantee that we see releases on passive
!  * grabs for widgets that haven't selected for keyrelease. Also
!  * potentially for tracking focusOuts in order to know that the grab
!  * widget has been unmapped.
X   */
X  
X  /*ARGSUSED*/
--- 536,542 ----
X  
X  /*
X   * This handler is needed to guarantee that we see releases on passive
!  * button grabs for widgets that haven't selected for button release.
X   */
X  
X  /*ARGSUSED*/
***************
*** 562,573 ****
X      XtPerDisplayInput	pdi;
X      XtPerWidgetInput	pwi;
X  {
!     if (!pwi->active_handler_added)
!     {
! 	Mask mask = (isKeyboard ? 
! 		     (KeyPressMask | KeyReleaseMask) :
! 		     (ButtonPressMask | ButtonReleaseMask));
! 	XtAddEventHandler(grab->widget, mask, FALSE,
X  			  ActiveHandler, (XtPointer)pdi);
X  	pwi->active_handler_added = TRUE;
X      }
--- 560,567 ----
X      XtPerDisplayInput	pdi;
X      XtPerWidgetInput	pwi;
X  {
!     if (!isKeyboard && !pwi->active_handler_added) {
! 	XtAddEventHandler(grab->widget, ButtonReleaseMask, FALSE,
X  			  ActiveHandler, (XtPointer)pdi);
X  	pwi->active_handler_added = TRUE;
X      }
*** /tmp/da4163	Thu Jul 23 16:57:42 1992
--- mit/lib/Xt/SetValues.c	Thu Jul 23 16:57:41 1992
***************
*** 1,4 ****
! /* $XConsortium: SetValues.c,v 1.13 91/05/02 16:11:33 swick Exp $ */
X  
X  /***********************************************************
X  Copyright 1987, 1988 by Digital Equipment Corporation, Maynard, Massachusetts,
--- 1,4 ----
! /* $XConsortium: SetValues.c,v 1.15 92/05/22 09:50:27 rws Exp $ */
X  
X  /***********************************************************
X  Copyright 1987, 1988 by Digital Equipment Corporation, Maynard, Massachusetts,
***************
*** 25,30 ****
--- 25,31 ----
X  ******************************************************************/
X  
X  #include "IntrinsicI.h"
+ #include "StringDefs.h"
X  
X  /*
X   *	XtSetValues(), XtSetSubvalues()
***************
*** 222,227 ****
--- 223,255 ----
X  	}
X      
X  	if (geoReq.request_mode != 0) {
+ 	    /* Pass on any requests for unchanged geometry values */
+ 	    if (geoReq.request_mode !=
+ 		(CWX | CWY | CWWidth | CWHeight | CWBorderWidth)) {
+ 		for ( ; num_args != 0; num_args--, args++) {
+ 		    if (! (geoReq.request_mode & CWX) &&
+ 			strcmp(XtNx, args->name) == 0) {
+ 			geoReq.x = w->core.x;
+ 			geoReq.request_mode |= CWX;
+ 		    } else if (! (geoReq.request_mode & CWY) &&
+ 			       strcmp(XtNy, args->name) == 0) {
+ 			geoReq.y = w->core.y;
+ 			geoReq.request_mode |= CWY;
+ 		    } else if (! (geoReq.request_mode & CWWidth) &&
+ 			       strcmp(XtNwidth, args->name) == 0) {
+ 			geoReq.width = w->core.width;
+ 			geoReq.request_mode |= CWWidth;
+ 		    } else if (! (geoReq.request_mode & CWHeight) &&
+ 			       strcmp(XtNheight, args->name) == 0) {
+ 			geoReq.height = w->core.height;
+ 			geoReq.request_mode |= CWHeight;
+ 		    } else if (! (geoReq.request_mode & CWBorderWidth) &&
+ 			       strcmp(XtNborderWidth, args->name) == 0) {
+ 			geoReq.border_width = w->core.border_width;
+ 			geoReq.request_mode |= CWBorderWidth;
+ 		    }
+ 		}
+ 	    }
X  	    do {
X  		result = _XtMakeGeometryRequest(w, &geoReq, &geoReply, 
X  						&cleared_rect_obj);
*** /tmp/da4199	Thu Jul 23 16:57:49 1992
--- mit/lib/Xt/Shell.c	Thu Jul 23 16:57:47 1992
***************
*** 1,4 ****
! /* $XConsortium: Shell.c,v 1.124 92/02/21 12:34:32 converse Exp $ */
X  
X  /***********************************************************
X  Copyright 1987, 1988 by Digital Equipment Corporation, Maynard, Massachusetts,
--- 1,4 ----
! /* $XConsortium: Shell.c,v 1.127 92/06/08 14:28:33 converse Exp $ */
X  
X  /***********************************************************
X  Copyright 1987, 1988 by Digital Equipment Corporation, Maynard, Massachusetts,
***************
*** 1046,1055 ****
X  
X  	hintp->flags = StateHint | InputHint;
X  
- 	if (XtIsTopLevelShell((Widget)w)
- 	    && ((TopLevelShellWidget)w)->topLevel.iconic) {
- 	    hintp->initial_state = IconicState;
- 	}
X  	if (hintp->icon_x == XtUnspecifiedShellInt)
X  	    hintp->icon_x = -1;
X  	else
--- 1046,1051 ----
***************
*** 1360,1365 ****
--- 1356,1391 ----
X  	        }
X  		return;
X  
+ 	      case UnmapNotify:
+ 		{
+ 		    XtPerDisplayInput	pdi;
+ 		    XtDevice		device;
+ 		    Widget		p;
+ 
+ 		    pdi = _XtGetPerDisplayInput(event->xunmap.display);
+ 
+ 		    device = &pdi->pointer;
+ 		    if (device->grabType == XtPassiveServerGrab) {
+ 			p = device->grab.widget;
+ 			while (p && !(XtIsShell(p)))
+ 			    p = p->core.parent;
+ 			if (p == wid)
+ 			    device->grabType = XtNoServerGrab;
+ 		    }
+ 
+ 		    device = &pdi->keyboard;
+ 		    if (IsEitherPassiveGrab(device->grabType)) {
+ 			p = device->grab.widget;
+ 			while (p && !(XtIsShell(p)))
+ 			    p = p->core.parent;
+ 			if (p == wid) {
+ 			    device->grabType = XtNoServerGrab;
+ 			    pdi->activatingKey = 0;
+ 			}
+ 		    }
+ 
+ 		    return;
+ 		}
X  	      default:
X  		 return;
X  	 } 
***************
*** 2016,2023 ****
X  			       XtWindow(newW),
X  			       XScreenNumberOfScreen(XtScreen(newW))
X  			       );
! 	    else
X  		XtPopup(newW, XtGrabNone);
X  	}
X  
X  	if (!new->shell.override_redirect &&
--- 2042,2052 ----
X  			       XtWindow(newW),
X  			       XScreenNumberOfScreen(XtScreen(newW))
X  			       );
! 	    else {
! 		Boolean map = new->shell.popped_up;
X  		XtPopup(newW, XtGrabNone);
+ 		if (map) XMapWindow(XtDisplay(newW), XtWindow(newW));
+ 	    }
X  	}
X  
X  	if (!new->shell.override_redirect &&
*** /tmp/da4235	Thu Jul 23 16:57:56 1992
--- mit/lib/Xt/TMkey.c	Thu Jul 23 16:57:54 1992
***************
*** 1,4 ****
! /* $XConsortium: TMkey.c,v 1.12 91/07/05 15:04:12 rws Exp $ */
X  /*LINTLIBRARY*/
X  
X  /***********************************************************
--- 1,4 ----
! /* $XConsortium: TMkey.c,v 1.16 92/05/19 11:16:48 converse Exp $ */
X  /*LINTLIBRARY*/
X  
X  /***********************************************************
***************
*** 90,96 ****
X  { \
X      int _i_ = (((key) - (pd)->min_keycode + modmix[(mod) & 0xff]) & \
X  	       (TMKEYCACHESIZE-1)); \
!     if ((ctx)->keycache.keycode[_i_] == (key) && \
X  	(ctx)->keycache.modifiers[_i_] == (mod)) { \
X  	mod_ret = (ctx)->keycache.modifiers_return; \
X  	sym_ret = (ctx)->keycache.keysym[_i_]; \
--- 90,97 ----
X  { \
X      int _i_ = (((key) - (pd)->min_keycode + modmix[(mod) & 0xff]) & \
X  	       (TMKEYCACHESIZE-1)); \
!     if ((key) != 0 && /* Xlib XIM composed input */ \
! 	(ctx)->keycache.keycode[_i_] == (key) && \
X  	(ctx)->keycache.modifiers[_i_] == (mod)) { \
X  	mod_ret = (ctx)->keycache.modifiers_return; \
X  	sym_ret = (ctx)->keycache.keysym[_i_]; \
***************
*** 307,313 ****
X  
X      FLUSHKEYCACHE(pd->tm_context);
X      if (pd->keysyms)
! 	XtFree( (char *)pd->keysyms );
X      XDisplayKeycodes(dpy, &pd->min_keycode, &pd->max_keycode);
X      pd->keysyms_serial = NextRequest(dpy);
X      pd->keysyms = XGetKeyboardMapping(dpy, pd->min_keycode,
--- 308,314 ----
X  
X      FLUSHKEYCACHE(pd->tm_context);
X      if (pd->keysyms)
! 	XFree( (char *)pd->keysyms );
X      XDisplayKeycodes(dpy, &pd->min_keycode, &pd->max_keycode);
X      pd->keysyms_serial = NextRequest(dpy);
X      pd->keysyms = XGetKeyboardMapping(dpy, pd->min_keycode,
***************
*** 448,454 ****
X  	else
X  	    *keysym_return = syms[0];
X      } else if (!(modifiers & LockMask) ||
! 	       (dpy->lock_meaning != XK_Caps_Lock)) {
X  	if ((per == 1) || ((usym = syms[1]) == NoSymbol))
X  	    XtConvertCase(dpy, syms[0], &lsym, &usym);
X  	*keysym_return = usym;
--- 449,455 ----
X  	else
X  	    *keysym_return = syms[0];
X      } else if (!(modifiers & LockMask) ||
! 	       (pd->lock_meaning != XK_Caps_Lock)) {
X  	if ((per == 1) || ((usym = syms[1]) == NoSymbol))
X  	    XtConvertCase(dpy, syms[0], &lsym, &usym);
X  	*keysym_return = usym;
***************
*** 552,560 ****
X  	    *upper -= (XK_scaron - XK_Scaron);
X  	else if (sym >= XK_zcaron && sym <= XK_zabovedot)
X  	    *upper -= (XK_zcaron - XK_Zcaron);
! 	else if (sym <= XK_Racute && sym <= XK_Tcedilla)
X  	    *lower += (XK_racute - XK_Racute);
! 	else if (sym <= XK_racute && sym <= XK_tcedilla)
X  	    *upper -= (XK_racute - XK_Racute);
X  	break;
X  #endif
--- 553,561 ----
X  	    *upper -= (XK_scaron - XK_Scaron);
X  	else if (sym >= XK_zcaron && sym <= XK_zabovedot)
X  	    *upper -= (XK_zcaron - XK_Zcaron);
! 	else if (sym >= XK_Racute && sym <= XK_Tcedilla)
X  	    *lower += (XK_racute - XK_Racute);
! 	else if (sym >= XK_racute && sym <= XK_tcedilla)
X  	    *upper -= (XK_racute - XK_Racute);
X  	break;
X  #endif
***************
*** 572,578 ****
X  	else if (sym >= XK_Cabovedot && sym <= XK_Scircumflex)
X  	    *lower += (XK_cabovedot - XK_Cabovedot);
X  	else if (sym >= XK_cabovedot && sym <= XK_scircumflex)
! 	    *lower += (XK_cabovedot - XK_Cabovedot);
X  	break;
X  #endif
X  #ifdef XK_LATIN4
--- 573,579 ----
X  	else if (sym >= XK_Cabovedot && sym <= XK_Scircumflex)
X  	    *lower += (XK_cabovedot - XK_Cabovedot);
X  	else if (sym >= XK_cabovedot && sym <= XK_scircumflex)
! 	    *upper -= (XK_cabovedot - XK_Cabovedot);
X  	break;
X  #endif
X  #ifdef XK_LATIN4
*** /tmp/da4271	Thu Jul 23 16:58:01 1992
--- mit/extensions/lib/XShm.c	Thu Jul 23 16:58:00 1992
***************
*** 1,5 ****
X  /*
!  * $XConsortium: XShm.c,v 1.14 91/07/12 09:54:02 rws Exp $
X   *
X   * Copyright 1989 Massachusetts Institute of Technology
X   *
--- 1,5 ----
X  /*
!  * $XConsortium: XShm.c,v 1.15 92/04/22 16:04:26 rws Exp $
X   *
X   * Copyright 1989 Massachusetts Institute of Technology
X   *
***************
*** 339,344 ****
--- 339,345 ----
X      if (!shminfo) return 0;
X  
X      LockDisplay(dpy);
+     FlushGC(dpy, gc);
X      GetReq(ShmPutImage, req);
X      req->reqType = info->codes->major_opcode;
X      req->shmReqType = X_ShmPutImage;
*** /tmp/da4307	Thu Jul 23 16:58:07 1992
--- mit/fonts/scaled/Speedo/COPYRIGHT	Thu Jul 23 16:58:06 1992
***************
*** 1,10 ****
X  Copyright 1989-1991, Bitstream Inc., Cambridge, MA.
X  You are hereby granted permission under all Bitstream propriety rights to
X  use, copy, modify, sublicense, sell, and redistribute the Bitstream Speedo
! software and the Bitstream Charter outline font for any purpose and without
! restrictions; provided, that this notice is left intact on all copies of such
! software or font and that Bitstream's trademark is acknowledged as shown below
! on all unmodified copies of such font.
X  
X  BITSTREAM CHARTER is a registered trademark of Bitstream Inc.
X  
--- 1,10 ----
X  Copyright 1989-1991, Bitstream Inc., Cambridge, MA.
X  You are hereby granted permission under all Bitstream propriety rights to
X  use, copy, modify, sublicense, sell, and redistribute the Bitstream Speedo
! software and the Bitstream Charter and Courier outline fonts for any purpose
! and without restrictions; provided, that this notice is left intact on all
! copies of such software or font and that Bitstream's trademark is acknowledged
! as shown below on all unmodified copies of such font.
X  
X  BITSTREAM CHARTER is a registered trademark of Bitstream Inc.
X  
SHAR_EOF
echo 'File fix-14 is complete' &&
chmod 0644 fix-14 ||
echo 'restore of fix-14 failed'
Wc_c="`wc -c < 'fix-14'`"
test 66153 -eq "$Wc_c" ||
	echo 'fix-14: original size 66153, current size' "$Wc_c"
rm -f _shar_wnt_.tmp
fi
rm -f _shar_seq_.tmp
echo You have unpacked the last part
exit 0
-- 
Senior Systems Scientist		mail: dcmartin@msi.com
Molecular Simulations, Inc.		uucp: uunet!dcmartin
796 North Pastoria Avenue		at&t: 408/522-9236
Sunnyvale, California 94086		fax: 408/732-0831
