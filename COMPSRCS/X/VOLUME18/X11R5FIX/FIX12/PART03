Newsgroups: comp.sources.x
Path: uunet!zaphod.mps.ohio-state.edu!mips!msi!dcmartin
From: rws@EXPO.LCS.MIT.EDU (Bob Scheifler)
Subject: v18i039: X11R5 public fix #12, Part03/05
Message-ID: <1992Jul20.155623.2635@msi.com>
Originator: dcmartin@fascet
Sender: dcmartin@msi.com (David C. Martin - Moderator)
Organization: Molecular Simulations, Inc.
References: <csx-18i037-X11R5-fix12@uunet.UU.NET>
Date: Mon, 20 Jul 1992 15:56:23 GMT
Approved: dcmartin@msi.com
Lines: 1519

Submitted-by: rws@EXPO.LCS.MIT.EDU (Bob Scheifler)
Posting-number: Volume 18, Issue 39
Archive-name: X11R5-fix12/part03

#!/bin/sh
# this is part.03 (part 3 of a multipart archive)
# do not concatenate these parts, unpack them in order with /bin/sh
# file fix-12 continued
#
if test ! -r _shar_seq_.tmp; then
	echo 'Please unpack part 1 first!'
	exit 1
fi
(read Scheck
 if test "$Scheck" != 3; then
	echo Please unpack part "$Scheck" next!
	exit 1
 else
	exit 0
 fi
) < _shar_seq_.tmp || exit 1
if test ! -f _shar_wnt_.tmp; then
	echo 'x - still skipping fix-12'
else
echo 'x - continuing file fix-12'
sed 's/^X//' << 'SHAR_EOF' >> 'fix-12' &&
X   * documentation for any purpose is hereby granted without fee, provided that
--- 1,7 ----
! /* $XConsortium: XimpWDrS.c,v 1.3 92/04/14 13:30:18 rws Exp $ */
X  /*
!  * Copyright 1990, 1991, 1992 by TOSHIBA Corp.
!  * Copyright 1990, 1991, 1992 by SORD Computer Corp.
X   *
X   * Permission to use, copy, modify, distribute, and sell this software and its
X   * documentation for any purpose is hereby granted without fee, provided that
***************
*** 29,35 ****
X  
X  /******************************************************************
X  
!               Copyright 1991, by FUJITSU LIMITED
X  
X  Permission to use, copy, modify, distribute, and sell this software
X  and its documentation for any purpose is hereby granted without fee,
--- 29,35 ----
X  
X  /******************************************************************
X  
!               Copyright 1991, 1992 by FUJITSU LIMITED
X  
X  Permission to use, copy, modify, distribute, and sell this software
X  and its documentation for any purpose is hereby granted without fee,
*** /tmp/d17119	Sun May  3 18:46:42 1992
--- mit/lib/X/Ximp/XimpWEsc.c	Sun May  3 18:46:39 1992
***************
*** 1,7 ****
! /* $XConsortium: XimpWEsc.c,v 1.2 91/07/09 17:22:12 rws Exp $ */
X  /*
!  * Copyright 1990, 1991 by TOSHIBA Corp.
!  * Copyright 1990, 1991 by SORD Computer Corp.
X   *
X   * Permission to use, copy, modify, distribute, and sell this software and its
X   * documentation for any purpose is hereby granted without fee, provided that
--- 1,7 ----
! /* $XConsortium: XimpWEsc.c,v 1.3 92/04/14 13:30:22 rws Exp $ */
X  /*
!  * Copyright 1990, 1991, 1992 by TOSHIBA Corp.
!  * Copyright 1990, 1991, 1992 by SORD Computer Corp.
X   *
X   * Permission to use, copy, modify, distribute, and sell this software and its
X   * documentation for any purpose is hereby granted without fee, provided that
***************
*** 29,35 ****
X  
X  /******************************************************************
X  
!               Copyright 1991, by FUJITSU LIMITED
X  
X  Permission to use, copy, modify, distribute, and sell this software
X  and its documentation for any purpose is hereby granted without fee,
--- 29,35 ----
X  
X  /******************************************************************
X  
!               Copyright 1991, 1992 by FUJITSU LIMITED
X  
X  Permission to use, copy, modify, distribute, and sell this software
X  and its documentation for any purpose is hereby granted without fee,
*** /tmp/d17141	Sun May  3 18:46:53 1992
--- mit/lib/X/Ximp/XimpWExt.c	Sun May  3 18:46:50 1992
***************
*** 1,7 ****
! /* $XConsortium: XimpWExt.c,v 1.2 91/07/09 17:22:14 rws Exp $ */
X  /*
!  * Copyright 1990, 1991 by TOSHIBA Corp.
!  * Copyright 1990, 1991 by SORD Computer Corp.
X   *
X   * Permission to use, copy, modify, distribute, and sell this software and its
X   * documentation for any purpose is hereby granted without fee, provided that
--- 1,7 ----
! /* $XConsortium: XimpWExt.c,v 1.3 92/04/14 13:30:24 rws Exp $ */
X  /*
!  * Copyright 1990, 1991, 1992 by TOSHIBA Corp.
!  * Copyright 1990, 1991, 1992 by SORD Computer Corp.
X   *
X   * Permission to use, copy, modify, distribute, and sell this software and its
X   * documentation for any purpose is hereby granted without fee, provided that
***************
*** 29,35 ****
X  
X  /******************************************************************
X  
!               Copyright 1991, by FUJITSU LIMITED
X  
X  Permission to use, copy, modify, distribute, and sell this software
X  and its documentation for any purpose is hereby granted without fee,
--- 29,35 ----
X  
X  /******************************************************************
X  
!               Copyright 1991, 1992 by FUJITSU LIMITED
X  
X  Permission to use, copy, modify, distribute, and sell this software
X  and its documentation for any purpose is hereby granted without fee,
*** /tmp/d17163	Sun May  3 18:47:05 1992
--- mit/lib/X/Ximp/Ximplc.h	Sun May  3 18:47:02 1992
***************
*** 1,7 ****
! /* $XConsortium: Ximplc.h,v 1.4 91/10/07 17:51:06 rws Exp $ */
X  /*
!  * Copyright 1990, 1991 by TOSHIBA Corp.
!  * Copyright 1990, 1991 by SORD Computer Corp.
X   *
X   * Permission to use, copy, modify, distribute, and sell this software and its
X   * documentation for any purpose is hereby granted without fee, provided that
--- 1,7 ----
! /* $XConsortium: Ximplc.h,v 1.5 92/04/14 13:30:42 rws Exp $ */
X  /*
!  * Copyright 1990, 1991, 1992 by TOSHIBA Corp.
!  * Copyright 1990, 1991, 1992 by SORD Computer Corp.
X   *
X   * Permission to use, copy, modify, distribute, and sell this software and its
X   * documentation for any purpose is hereby granted without fee, provided that
***************
*** 28,34 ****
X  
X  /******************************************************************
X  
!               Copyright 1991, by FUJITSU LIMITED
X  
X  Permission to use, copy, modify, distribute, and sell this software
X  and its documentation for any purpose is hereby granted without fee,
--- 28,35 ----
X  
X  /******************************************************************
X  
!               Copyright 1991, 1992 by FUJITSU LIMITED
!               Copyright 1991, 1992 by Sony Corporation
X  
X  Permission to use, copy, modify, distribute, and sell this software
X  and its documentation for any purpose is hereby granted without fee,
***************
*** 35,55 ****
X  provided that the above copyright notice appear in all copies and
X  that both that copyright notice and this permission notice appear
X  in supporting documentation, and that the name of FUJITSU LIMITED
! not be used in advertising or publicity pertaining to distribution
! of the software without specific, written prior permission.
! FUJITSU LIMITED makes no representations about the suitability of
! this software for any purpose.  It is provided "as is" without
! express or implied warranty.
X  
! FUJITSU LIMITED DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE,
! INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS,
! IN NO EVENT SHALL FUJITSU LIMITED BE LIABLE FOR ANY SPECIAL, INDIRECT
! OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS
! OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE
! OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE
! OR PERFORMANCE OF THIS SOFTWARE.
X  
X    Author: Takashi Fujiwara     FUJITSU LIMITED 
X  
X  ******************************************************************/
X  /*
--- 36,60 ----
X  provided that the above copyright notice appear in all copies and
X  that both that copyright notice and this permission notice appear
X  in supporting documentation, and that the name of FUJITSU LIMITED
! and Sony Corporation not be used in advertising or publicity
! pertaining to distribution of the software without specific, written
! prior permission.
! FUJITSU LIMITED and Sony Corporation make no representations about
! the suitability of this software for any purpose.  It is provided
! "as is" without express or implied warranty.
X  
! FUJITSU LIMITED AND SONY CORPORATION DISCLAIM ALL WARRANTIES WITH
! REGARD TO THIS SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES OF
! MERCHANTABILITY AND FITNESS, IN NO EVENT SHALL FUJITSU LIMITED AND
! SONY CORPORATION BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL
! DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA
! OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER
! TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
! PERFORMANCE
! OF THIS SOFTWARE.
X  
X    Author: Takashi Fujiwara     FUJITSU LIMITED 
+           Makoto Wakamatsu     Sony Corporation
X  
X  ******************************************************************/
X  /*
***************
*** 200,205 ****
--- 205,211 ----
X  
X  #define XIMP_CREATE_IC	0
X  #define	XIMP_SET_IC	1
+ #define	XIMP_START_IC	2
X  
X  #define XIMP_INPUT_STYLE	0x0001
X  #define XIMP_CLIENT_WIN		0x0002
***************
*** 207,212 ****
--- 213,220 ----
X  #define XIMP_RES_CLASS		0x0008
X  #define XIMP_GEOMETRY_CB        0x0010
X  #define XIMP_FILTER_EV          0x0020
+ #define XIMP_PRE_CALLBAK        0x0040
+ #define XIMP_STS_CALLBAK        0x0080
X  
X  #define XIMP_PROP_FOCUS		( XIMP_FOCUS_WIN_MASK )
X  #define XIMP_PROP_PREEDIT	( XIMP_PRE_AREA_MASK \
***************
*** 259,265 ****
X  	int		 connectserver;
X  	int		 inputserver;
X  	Bool		 use_wchar;
! 	KeySym		 def_startkeysym;
X  	char		*locale_server;
X  	Window		 fe_window;
X  	Window		 owner;
--- 267,273 ----
X  	int		 connectserver;
X  	int		 inputserver;
X  	Bool		 use_wchar;
! 	Ximp_KeyList	*process_start_keys;
X  	char		*locale_server;
X  	Window		 fe_window;
X  	Window		 owner;
***************
*** 331,338 ****
--- 339,349 ----
X  	long			 icid;
X  	int			 input_mode;
X  	int			 is_bep_mode;
+ 	int			 filter_mode;
X  	unsigned long		 back_mask;
X  	long			 value_mask;
+ 	Bool			 putback_key_event;
+ 	Window			 back_focus_win;
X  
X  	long			 proto_mask;
X  	Ximp_PreeditPropRec	 preedit_attr;
*** /tmp/d17206	Sun May  3 18:47:26 1992
--- mit/lib/X/Ximp/XimpCT.c	Sun May  3 18:47:24 1992
***************
*** 1,7 ****
! /* $XConsortium: XimpCT.c,v 1.3 92/03/03 11:02:11 rws Exp $ */
X  /*
!  * Copyright 1990, 1991 by TOSHIBA Corp.
!  * Copyright 1990, 1991 by SORD Computer Corp.
X   *
X   * Permission to use, copy, modify, distribute, and sell this software and its
X   * documentation for any purpose is hereby granted without fee, provided that
--- 1,7 ----
! /* $XConsortium: XimpCT.c,v 1.4 92/04/14 13:28:38 rws Exp $ */
X  /*
!  * Copyright 1990, 1991, 1992 by TOSHIBA Corp.
!  * Copyright 1990, 1991, 1992 by SORD Computer Corp.
X   *
X   * Permission to use, copy, modify, distribute, and sell this software and its
X   * documentation for any purpose is hereby granted without fee, provided that
***************
*** 28,34 ****
X  
X  /******************************************************************
X  
!               Copyright 1991, by FUJITSU LIMITED
X  
X  Permission to use, copy, modify, distribute, and sell this software
X  and its documentation for any purpose is hereby granted without fee,
--- 28,34 ----
X  
X  /******************************************************************
X  
!               Copyright 1991, 1992 by FUJITSU LIMITED
X  
X  Permission to use, copy, modify, distribute, and sell this software
X  and its documentation for any purpose is hereby granted without fee,
***************
*** 124,130 ****
X  	while (encoding_ptr = *table_ptr++)
X  	    if (encoding_ptr->GR_encoding) {
X  	    	if (encoding_ptr->char_length == char_length &&
! 		    !strcmp(encoding_ptr->GR_encoding, encoding) &&
X  		    encoding_ptr->GR_gc_size == gc_size)
X  
X  		    return encoding_ptr->lindex;
--- 124,130 ----
X  	while (encoding_ptr = *table_ptr++)
X  	    if (encoding_ptr->GR_encoding) {
X  	    	if (encoding_ptr->char_length == char_length &&
! 		    !strcmp(encoding_ptr->GR_encoding, (char *)encoding) &&
X  		    encoding_ptr->GR_gc_size == gc_size)
X  
X  		    return encoding_ptr->lindex;
***************
*** 133,139 ****
X  	while (encoding_ptr = *table_ptr++)
X  	    if (encoding_ptr->GL_encoding) {
X  	    	if (encoding_ptr->char_length == char_length &&
! 		    !strcmp(encoding_ptr->GL_encoding, encoding) &&
X  		    encoding_ptr->GL_gc_size == gc_size)
X  
X  		    return encoding_ptr->lindex;
--- 133,139 ----
X  	while (encoding_ptr = *table_ptr++)
X  	    if (encoding_ptr->GL_encoding) {
X  	    	if (encoding_ptr->char_length == char_length &&
! 		    !strcmp(encoding_ptr->GL_encoding, (char *)encoding) &&
X  		    encoding_ptr->GL_gc_size == gc_size)
X  
X  		    return encoding_ptr->lindex;
***************
*** 239,245 ****
X      if (encoding_len < 0)
X  	return -1;
X  
!     strncpy(encoding, ctptr, encoding_len);
X      encoding[encoding_len] = 0;
X      ctptr += encoding_len;
X  
--- 239,245 ----
X      if (encoding_len < 0)
X  	return -1;
X  
!     strncpy((char *)encoding, (char *)ctptr, encoding_len);
X      encoding[encoding_len] = 0;
X      ctptr += encoding_len;
X  
***************
*** 395,406 ****
X  	if (msb_mask == GR)
X  	    *encoding_ptr++ = '-';
X      }
!     strcpy(encoding_ptr, (msb_mask == GR) ? 
X  		encoding_rec->GR_encoding : encoding_rec->GL_encoding);
!     tmp_len = strlen(encoding);
X      if ((ct_len -= tmp_len) < 0)
X  	return -1;
!     strcpy(ctptr, encoding);
X      ctptr += tmp_len;
X  
X      min_ch = 0x20;
--- 395,406 ----
X  	if (msb_mask == GR)
X  	    *encoding_ptr++ = '-';
X      }
!     strcpy((char *)encoding_ptr, (msb_mask == GR) ? 
X  		encoding_rec->GR_encoding : encoding_rec->GL_encoding);
!     tmp_len = strlen((char *)encoding);
X      if ((ct_len -= tmp_len) < 0)
X  	return -1;
!     strcpy((char *)ctptr, (char *)encoding);
X      ctptr += tmp_len;
X  
X      min_ch = 0x20;
*** /tmp/d17228	Sun May  3 18:47:39 1992
--- mit/lib/X/Ximp/XimpDefCnv.c	Sun May  3 18:47:36 1992
***************
*** 1,7 ****
! /* $XConsortium: XimpDefCnv.c,v 1.2 91/10/07 17:47:57 rws Exp $ */
X  /*
!  * Copyright 1990, 1991 by TOSHIBA Corp.
!  * Copyright 1990, 1991 by SORD Computer Corp.
X   *
X   * Permission to use, copy, modify, distribute, and sell this software and its
X   * documentation for any purpose is hereby granted without fee, provided that
--- 1,7 ----
! /* $XConsortium: XimpDefCnv.c,v 1.3 92/04/14 13:28:51 rws Exp $ */
X  /*
!  * Copyright 1990, 1991, 1992 by TOSHIBA Corp.
!  * Copyright 1990, 1991, 1992 by SORD Computer Corp.
X   *
X   * Permission to use, copy, modify, distribute, and sell this software and its
X   * documentation for any purpose is hereby granted without fee, provided that
***************
*** 28,34 ****
X  
X  /******************************************************************
X  
!               Copyright 1991, by FUJITSU LIMITED
X  
X  Permission to use, copy, modify, distribute, and sell this software
X  and its documentation for any purpose is hereby granted without fee,
--- 28,34 ----
X  
X  /******************************************************************
X  
!               Copyright 1991, 1992 by FUJITSU LIMITED
X  
X  Permission to use, copy, modify, distribute, and sell this software
X  and its documentation for any purpose is hereby granted without fee,
*** /tmp/d17250	Sun May  3 18:47:50 1992
--- mit/lib/X/Ximp/XimpDrStr.c	Sun May  3 18:47:48 1992
***************
*** 1,7 ****
! /* $XConsortium: XimpDrStr.c,v 1.1 91/07/09 17:36:53 rws Exp $ */
X  /*
!  * Copyright 1990, 1991 by TOSHIBA Corp.
!  * Copyright 1990, 1991 by SORD Computer Corp.
X   *
X   * Permission to use, copy, modify, distribute, and sell this software and its
X   * documentation for any purpose is hereby granted without fee, provided that
--- 1,7 ----
! /* $XConsortium: XimpDrStr.c,v 1.2 92/04/14 13:28:54 rws Exp $ */
X  /*
!  * Copyright 1990, 1991, 1992 by TOSHIBA Corp.
!  * Copyright 1990, 1991, 1992 by SORD Computer Corp.
X   *
X   * Permission to use, copy, modify, distribute, and sell this software and its
X   * documentation for any purpose is hereby granted without fee, provided that
***************
*** 29,35 ****
X  
X  /******************************************************************
X  
!               Copyright 1991, by FUJITSU LIMITED
X  
X  Permission to use, copy, modify, distribute, and sell this software
X  and its documentation for any purpose is hereby granted without fee,
--- 29,35 ----
X  
X  /******************************************************************
X  
!               Copyright 1991, 1992 by FUJITSU LIMITED
X  
X  Permission to use, copy, modify, distribute, and sell this software
X  and its documentation for any purpose is hereby granted without fee,
***************
*** 112,119 ****
X  
X              XSetFont(dpy, gc, font->fid);
X  	    if (char_length < 2) {
! 	        XDrawString(dpy, d, gc, x, y, xchar_buf, tmp_len);
! 		x += XTextWidth(font, xchar_buf, tmp_len);
X              } else {
X  	        XDrawString16(dpy, d, gc, x, y, xchar2b_buf, tmp_len);
X  		x += XTextWidth16(font, xchar2b_buf, tmp_len);
--- 112,119 ----
X  
X              XSetFont(dpy, gc, font->fid);
X  	    if (char_length < 2) {
! 	        XDrawString(dpy, d, gc, x, y, (char *)xchar_buf, tmp_len);
! 		x += XTextWidth(font, (char *)xchar_buf, tmp_len);
X              } else {
X  	        XDrawString16(dpy, d, gc, x, y, xchar2b_buf, tmp_len);
X  		x += XTextWidth16(font, xchar2b_buf, tmp_len);
*** /tmp/d17272	Sun May  3 18:48:02 1992
--- mit/lib/X/Ximp/XimpEUC.c	Sun May  3 18:47:59 1992
***************
*** 1,7 ****
! /* $XConsortium: XimpEUC.c,v 1.3 91/10/07 17:48:17 rws Exp $ */
X  /*
!  * Copyright 1990, 1991 by TOSHIBA Corp.
!  * Copyright 1990, 1991 by SORD Computer Corp.
X   *
X   * Permission to use, copy, modify, distribute, and sell this software and its
X   * documentation for any purpose is hereby granted without fee, provided that
--- 1,7 ----
! /* $XConsortium: XimpEUC.c,v 1.4 92/04/14 13:28:56 rws Exp $ */
X  /*
!  * Copyright 1990, 1991, 1992 by TOSHIBA Corp.
!  * Copyright 1990, 1991, 1992 by SORD Computer Corp.
X   *
X   * Permission to use, copy, modify, distribute, and sell this software and its
X   * documentation for any purpose is hereby granted without fee, provided that
***************
*** 28,34 ****
X  
X  /******************************************************************
X  
!               Copyright 1991, by FUJITSU LIMITED
X  
X  Permission to use, copy, modify, distribute, and sell this software
X  and its documentation for any purpose is hereby granted without fee,
--- 28,34 ----
X  
X  /******************************************************************
X  
!               Copyright 1991, 1992 by FUJITSU LIMITED
X  
X  Permission to use, copy, modify, distribute, and sell this software
X  and its documentation for any purpose is hereby granted without fee,
*** /tmp/d17294	Sun May  3 18:48:15 1992
--- mit/lib/X/Ximp/XimpExten.c	Sun May  3 18:48:12 1992
***************
*** 1,8 ****
! /* $XConsortium: XimpExten.c,v 1.4 91/10/10 20:41:37 rws Exp $ */
X  /******************************************************************
X  
!     Copyright 1991, by FUJITSU LIMITED.
!     Copyright 1991, by Sun Microsystems, Inc.
X  
X  Permission to use, copy, modify, distribute, and sell this software
X  and its documentation for any purpose is hereby granted without fee,
--- 1,8 ----
! /* $XConsortium: XimpExten.c,v 1.5 92/04/14 13:29:00 rws Exp $ */
X  /******************************************************************
X  
!     Copyright 1991, 1992 by FUJITSU LIMITED.
!     Copyright 1991, 1992 by Sun Microsystems, Inc.
X  
X  Permission to use, copy, modify, distribute, and sell this software
X  and its documentation for any purpose is hereby granted without fee,
***************
*** 26,33 ****
X  
X  Author: Takashi Fujiwara     FUJITSU LIMITED
X  		       fujiwara@a80.tech.yk.fujitsu.co.jp
!   Hideki Hiura (hhiura@Sun.COM)
! 				     Sun Microsystems, Inc.
X  ******************************************************************/
X  
X  #define NEED_EVENTS
--- 26,33 ----
X  
X  Author: Takashi Fujiwara     FUJITSU LIMITED
X  		       fujiwara@a80.tech.yk.fujitsu.co.jp
!         Hideki Hiura         Sun Microsystems, Inc.
! 	               hhiura@Sun.COM
X  ******************************************************************/
X  
X  #define NEED_EVENTS
***************
*** 37,42 ****
--- 37,54 ----
X  #include "Xlcint.h"
X  #include "Ximplc.h"
X  
+ #ifdef XIMP_SIGNAL
+ #include <sys/signal.h>
+ #endif /* XIMP_SIGNAL */
+ static int	_time_flag = 0;
+ #ifdef XIMP_SIGNAL
+ static int
+ _time_out()
+ 	{
+ 	_time_flag = 1;
+ 	}
+ #endif /* XIMP_SIGNAL */
+ 
X  #define		XIM_UNKNOWN_KEYSYM	0x77777777
X  #define		XIM_UNDETERMINED	0x77777776
X  
***************
*** 48,65 ****
X  
X  typedef enum {
X      XIMCB_Success,
!     XIMCB_FatalError,
X  }               XIMCBResult;
X  
X  
X  typedef enum {
X      DrawUpHorizontally = 0,
!     DrawUpVertically = 1,
X  }               DrawUpDirection;
X  
X  typedef enum {
X      XIMOwnsLabel = 0,
!     CBOwnsLabel = 1,
X  }               WhoOwnsLabel;
X  
X  typedef struct {
--- 60,77 ----
X  
X  typedef enum {
X      XIMCB_Success,
!     XIMCB_FatalError
X  }               XIMCBResult;
X  
X  
X  typedef enum {
X      DrawUpHorizontally = 0,
!     DrawUpVertically = 1
X  }               DrawUpDirection;
X  
X  typedef enum {
X      XIMOwnsLabel = 0,
!     CBOwnsLabel = 1
X  }               WhoOwnsLabel;
X  
X  typedef struct {
***************
*** 111,116 ****
--- 123,129 ----
X  
X  extern Ximp_XIC _Ximp_LookupXIC();
X  extern void     _Ximp_IM_SendMessage();
+ extern void 	_Ximp_ProcError();
X  
X  #define Private static
X  /*
***************
*** 170,176 ****
X  typedef enum {
X      XICOpCreate = 1,
X      XICOpSet = 2,
!     XICOpGet = 3,
X  }               XICOp_t;
X  
X  /*
--- 183,189 ----
X  typedef enum {
X      XICOpCreate = 1,
X      XICOpSet = 2,
!     XICOpGet = 3
X  }               XICOp_t;
X  
X  /*
***************
*** 235,247 ****
X      XICOp_t         op;
X      long            value;
X  {
!     XIMXimpRec     *im_impart = ((Ximp_XIM)ic->core.im)->ximp_impart;
!     Ximp_ExtXIMRec *ext_im;
!     long           *p_long;
X  
-     if(!(im_impart->inputserver))
- 	return (False);
-     ext_im = (Ximp_ExtXIMRec *) im_impart->imtype;
X      if (!(ext_im->extension_back_front_exist))
X  	return (False);
X  
--- 248,255 ----
X      XICOp_t         op;
X      long            value;
X  {
!     Ximp_ExtXIMRec *ext_im = (Ximp_ExtXIMRec *)(((Ximp_XIM)ic->core.im)->ximp_impart)->imtype;
X  
X      if (!(ext_im->extension_back_front_exist))
X  	return (False);
X  
***************
*** 252,263 ****
X  	return (True);
X  	break;
X      case XICOpGet:
! 	if((p_long = (long *)Xmalloc(sizeof(long))) == NULL) {
! 		*((long *) value) = (long)NULL;
! 		break;
! 	}
! 	*p_long = (long)(ic->ximp_icpart->is_bep_mode);
! 	*((long *) value) = (long)p_long;
X  	return (True);
X  	break;
X      }
--- 260,266 ----
X  	return (True);
X  	break;
X      case XICOpGet:
! 	*((long *) value) = (long)(ic->ximp_icpart->is_bep_mode);
X  	return (True);
X  	break;
X      }
***************
*** 297,302 ****
--- 300,346 ----
X   *	  +-----------------------------------------+
X   **/
X  
+ 
+ typedef struct {
+ 	Atom message_type;
+ 	Atom ext_type;
+ 	Window owner;
+ } XimpConversionPredArgRec, *XimpConversionPredArg;
+ 
+ Private Bool
+ #if NeedFunctionPrototypes
+ ximp_ext_conversionPredicate(
+     Display *d,
+     XEvent *ev,
+     XPointer arg0
+     )
+ #else
+ ximp_ext_conversionPredicate(d, ev, arg0)
+ Display *d;
+ XEvent *ev;
+ XPointer arg0;
+ #endif
+ {
+     XimpConversionPredArg arg = (XimpConversionPredArg) arg0;
+ 
+ 	if (ev->type == ClientMessage) {
+ 		if (ev->xclient.message_type == arg->message_type) {
+ 			if (ev->xclient.format == 32) {
+ 				if(ev->xclient.data.l[0] == XIMP_ERROR)
+ 					return(True);
+ 				else if(ev->xclient.data.l[0] == XIMP_EXTENSION
+ 				     && ev->xclient.data.l[3] == arg->ext_type)
+ 					return(True);
+ 			}
+ 		}
+ 	} else if (ev->type == DestroyNotify) {
+ 		if (ev->xdestroywindow.window == arg->owner) {
+ 			return(True);
+ 		}
+ 	}
+ 	return(False);
+ }
+ 
X  Private int
X  ximp_ext_conversion(ic, op, value)
X      Ximp_XIC        ic;
***************
*** 303,315 ****
X      XICOp_t         op;
X      long            value;
X  {
!     XIMXimpRec     *im_impart = ((Ximp_XIM)ic->core.im)->ximp_impart;
!     Ximp_ExtXIMRec *ext_im;
!     int            *p_long;
X  
-     if(!(im_impart->inputserver))
- 	return (False);
-     ext_im = (Ximp_ExtXIMRec *) im_impart->imtype;
X      if (!(ext_im->extension_conversion_exist))
X  	return (False);
X  
--- 347,356 ----
X      XICOp_t         op;
X      long            value;
X  {
!     Ximp_ExtXIMRec *ext_im = (Ximp_ExtXIMRec *)(((Ximp_XIM)ic->core.im)->ximp_impart)->imtype;
!     XEvent	    event;
!     XimpConversionPredArgRec Arg;
X  
X      if (!(ext_im->extension_conversion_exist))
X  	return (False);
X  
***************
*** 316,321 ****
--- 357,367 ----
X      switch (op) {
X      case XICOpCreate:
X      case XICOpSet:
+ 	if(ic->ximp_icpart->icid == NULL) {
+ 		if(((Ximp_XIM)ic->core.im)->ximp_impart->inputserver)
+ 			return (False);
+ 		return (True);
+ 		}
X  	/*
X  	 * Set Conversion mode on/off
X  	 */
***************
*** 330,349 ****
X  	return True;
X  	break;
X      case XICOpGet:
X  	_Ximp_IM_SendMessage(ic, XIMP_EXTENSION,
X  		     ext_im->extension_conversion_id,
X  		     False,	/* GetICVelues */
X  		     value);
! 	/*
! 	 * KNOWN issue: above call would never affect following.
! 	 */
! 	if((p_long = (long *)Xmalloc(sizeof(long))) == NULL) {
! 		*((long *) value) = (long)NULL;
! 		break;
!         }
! 	*p_long = (long)(ext_im->extension_conversion);
! 	*((long *) value) = (long)p_long;
! 	return (True);
X  	break;
X      }
X      return (False);
--- 376,427 ----
X  	return True;
X  	break;
X      case XICOpGet:
+ 	if(ic->ximp_icpart->icid == NULL) {
+ 		if(((Ximp_XIM)ic->core.im)->ximp_impart->inputserver)
+ 			return (False);
+ 		*((long *) value) = (long)(ext_im->extension_conversion);
+ 		return (True);
+ 		}
X  	_Ximp_IM_SendMessage(ic, XIMP_EXTENSION,
X  		     ext_im->extension_conversion_id,
X  		     False,	/* GetICVelues */
X  		     value);
! #ifdef XIMP_SIGNAL
! 	signal(SIGALRM, _time_out);
! 	alarm(XIMP_TIME_OUT);
! #endif /* XIMP_SIGNAL */
! 	Arg.message_type = ((Ximp_XIM)ic->core.im)->ximp_impart->improtocol_id;
! 	Arg.ext_type     = ext_im->extension_conversion_id;
! 	Arg.owner = ((Ximp_XIM)ic->core.im)->ximp_impart->fe_window;
! 	while(_time_flag != 1) {
! 		if( (XCheckIfEvent(ic->core.im->core.display, &event, ximp_ext_conversionPredicate, (XPointer)&Arg)) == False) {
! #ifdef XIMP_SIGNAL
! 			sleep(1);
! #endif /* XIMP_SIGNAL */
! 			continue;
! 			}
! 		if(event.type == ClientMessage &&
! 		   event.xclient.data.l[0] == XIMP_EXTENSION) {
! #ifdef XIMP_SIGNAL
! 			alarm(0);
! #endif /* XIMP_SIGNAL */
! 			ext_im->extension_conversion = (Bool)event.xclient.data.l[4];
! 			*((long *) value) = (long)(ext_im->extension_conversion);
! 			_time_flag = 0;
! 			return(True);
! 			}
! 		else {
! #ifdef XIMP_SIGNAL
! 			alarm(0);
! #endif /* XIMP_SIGNAL */
! 			_Ximp_ProcError (ic->core.im->core.display, NULL, &event);
! 			_time_flag = 0;
! 			/* return(False); */
! 			continue;
! 			}
! 		}
! 	_time_flag = 0;
! 	return(False);
X  	break;
X      }
X      return (False);
***************
*** 360,369 ****
X      XICOp_t         op;
X      long            value;
X  {
!     XIMXimpRec     *im_impart = ((Ximp_XIM)ic->core.im)->ximp_impart;
!     Ximp_ExtXIMRec *ext_im;
X  
-     ext_im = (Ximp_ExtXIMRec *) im_impart->imtype;
X      if (!(ext_im->extension_statuswindow_exist))
X  	return (False);
X  
--- 438,445 ----
X      XICOp_t         op;
X      long            value;
X  {
!     Ximp_ExtXIMRec *ext_im = (Ximp_ExtXIMRec *)(((Ximp_XIM)ic->core.im)->ximp_impart)->imtype;
X  
X      if (!(ext_im->extension_statuswindow_exist))
X  	return (False);
X  
***************
*** 608,615 ****
X      XIMXimpRec     *im_impart = ((Ximp_XIM)ic->core.im)->ximp_impart;
X      Ximp_ExtXIMRec *ext_im;
X  
-     if(!(im_impart->inputserver))
- 	return (False);
X      ext_im = (Ximp_ExtXIMRec *) im_impart->imtype;
X      if (!(ext_im->extension_lookup_exist))
X  	return (False);
--- 684,689 ----
***************
*** 619,624 ****
--- 693,703 ----
X  	ic->ximp_icpart->use_lookup_choices = True ;
X  	break ;
X      case XICOpSet:
+ 	if(ic->ximp_icpart->icid == NULL) {
+ 		if(((Ximp_XIM)ic->core.im)->ximp_impart->inputserver)
+ 			return (False);
+ 		return (True);
+ 		}
X  	ic->ximp_icpart->use_lookup_choices = True ;
X  	_Ximp_IM_SendMessage(ic, XIMP_EXTENSION,
X  			     ext_im->extension_lookup_id,
***************
*** 748,754 ****
X  			    ext_im->extension_lookup_start_rep,
X  			    32,
X  			    PropModeReplace,
! 			    prop,
X  			    6);
X  
X  	    XFlush(ic->core.im->core.display);
--- 827,833 ----
X  			    ext_im->extension_lookup_start_rep,
X  			    32,
X  			    PropModeReplace,
! 			    (unsigned char *)prop,
X  			    6);
X  
X  	    XFlush(ic->core.im->core.display);
***************
*** 867,873 ****
X  			   ((Ximp_XIM) ic->core.im)->ximp_impart->fe_window,
X  			   *(prop + 4), 0, 4096, True, AnyPropertyType,
X  			   &type, &format, &nitems, &after,
! 			   (unsigned char *) &feedback) == Success)&&feedback){
X  
X  	for (i = l = 0; i < luc_draw->n_choices; i++, l += 2) {
X  	    if (luc_draw->choices[i].value){
--- 946,952 ----
X  			   ((Ximp_XIM) ic->core.im)->ximp_impart->fe_window,
X  			   *(prop + 4), 0, 4096, True, AnyPropertyType,
X  			   &type, &format, &nitems, &after,
! 			   (unsigned char **) &feedback) == Success)&&feedback){
X  
X  	for (i = l = 0; i < luc_draw->n_choices; i++, l += 2) {
X  	    if (luc_draw->choices[i].value){
***************
*** 1200,1218 ****
X      ext_id = ev->data.l[2];
X      ic = _Ximp_LookupXIC(icid);
X  
-     if(!((Ximp_XIM)ic->core.im)->ximp_impart->inputserver)
- 	return;
X      im_impart = ((Ximp_XIM)ic->core.im)->ximp_impart;
X      ext_im = (Ximp_ExtXIMRec *) im_impart->imtype;
X  
!     if (ext_id == ext_im->extension_conversion_id) {
! 	if (!(ext_im->extension_conversion_exist))
! 	    return;
! 	ext_im->extension_conversion = (Bool) ev->data.l[4];
!     } else if (ext_id == ext_im->extension_back_front_id) {
! 	if (!(ext_im->extension_back_front_exist))
! 	    return;
!     } else if (ext_id == ext_im->extension_lookup_id) {
X  	if (ext_im->extension_lookup_exist)
X  	    _Ximp_ExtLookup(d, w, ev, ic);
X  	return;
--- 1279,1288 ----
X      ext_id = ev->data.l[2];
X      ic = _Ximp_LookupXIC(icid);
X  
X      im_impart = ((Ximp_XIM)ic->core.im)->ximp_impart;
X      ext_im = (Ximp_ExtXIMRec *) im_impart->imtype;
X  
!     if (ext_id == ext_im->extension_lookup_id) {
X  	if (ext_im->extension_lookup_exist)
X  	    _Ximp_ExtLookup(d, w, ev, ic);
X  	return;
*** /tmp/d17316	Sun May  3 18:48:29 1992
--- mit/lib/X/Ximp/XimpICG.c	Sun May  3 18:48:26 1992
***************
*** 1,33 ****
! /* $XConsortium: XimpICG.c,v 1.6 92/03/03 11:01:06 rws Exp $ */
X  /******************************************************************
X  
!     Copyright 1991, by FUJITSU LIMITED.
!     Copyright 1991, by Sun Microsystems, Inc.
X  
X  Permission to use, copy, modify, distribute, and sell this software
X  and its documentation for any purpose is hereby granted without fee,
X  provided that the above copyright notice appear in all copies and that
X  both that copyright notice and this permission notice appear in
! supporting documentation, and that the name of FUJITSU LIMITED or Sun
! Microsystems, Inc.  not be used in advertising or publicity pertaining
! to distribution of the software without specific, written prior
! permission.  FUJITSU LIMITED and Sun Microsystems, Inc. make no
X  representations about the suitability of this software for any
X  purpose.  It is provided "as is" without express or implied warranty.
X  
! FUJITSU LIMITED AND SUN MICROSYSTEMS, INC. DISCLAIMS ALL WARRANTIES
! WITH REGARD TO THIS SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES OF
! MERCHANTABILITY AND FITNESS, IN NO EVENT SHALL FUJITSU LIMITED AND SUN
! MICROSYSTEMS, INC. BE LIABLE FOR ANY SPECIAL, INDIRECT OR
! CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF
! USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
! OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
! PERFORMANCE OF THIS SOFTWARE.
X  
X  Author: Takashi Fujiwara     FUJITSU LIMITED
! 		       fujiwara@a80.tech.yk.fujitsu.co.jp
!         Hideki Hiura (hhiura@Sun.COM)
! 				     Sun Microsystems, Inc.
X  
X  ******************************************************************/
X  
--- 1,34 ----
! /* $XConsortium: XimpICG.c,v 1.8 92/04/22 15:46:03 rws Exp $ */
X  /******************************************************************
X  
!     Copyright 1991, 1992 by FUJITSU LIMITED.
!     Copyright 1991, 1992 by Sun Microsystems, Inc.
!     Copyright 1991, 1992 by Sony Corporation
X  
X  Permission to use, copy, modify, distribute, and sell this software
X  and its documentation for any purpose is hereby granted without fee,
X  provided that the above copyright notice appear in all copies and that
X  both that copyright notice and this permission notice appear in
! supporting documentation, and that the name of FUJITSU LIMITED, Sun
! Microsystems, Inc. and Sony Corporation  not be used in advertising
! or publicity pertaining to distribution of the software without
! specific, written prior permission.
! FUJITSU LIMITED , Sun Microsystems, Inc. and Sony Corporation make no
X  representations about the suitability of this software for any
X  purpose.  It is provided "as is" without express or implied warranty.
X  
! FUJITSU LIMITED, SUN MICROSYSTEMS, INC. AND SONY CORPORATION DISCLAIM
! ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING ALL IMPLIED
! WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO EVENT SHALL FUJITSU
! LIMITED, SUN MICROSYSTEMS, INC. AND SONY CORPORATION BE LIABLE FOR ANY
! SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER
! RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF
! CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN
! CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
X  
X  Author: Takashi Fujiwara     FUJITSU LIMITED
!         Hideki Hiura         Sun Microsystems, Inc.
!         Makoto Wakamatsu     Sony Corporaion
X  
X  ******************************************************************/
X  
***************
*** 57,64 ****
X  {
X  	XIMArg		*p;
X  	char		*p_char;
- 	long		*p_long;
- 	XIMCallback 	*p_callback;
X  	char		*return_name = NULL;
X  	int		 len;
X  
--- 58,63 ----
***************
*** 65,71 ****
X  	for(p = values; p->name != NULL; p++) {
X  		if(strcmp(p->name, XNInputStyle) == 0) {
X  			if(ic->ximp_icpart->value_mask & XIMP_INPUT_STYLE) {
! 			    (*((long *)(p->value))) = (long)ic->core.input_style;
X  			} else {			    
X  			    return_name = p->name;
X  			    break;
--- 64,70 ----
X  	for(p = values; p->name != NULL; p++) {
X  		if(strcmp(p->name, XNInputStyle) == 0) {
X  			if(ic->ximp_icpart->value_mask & XIMP_INPUT_STYLE) {
! 			    *((XIMStyle *)(p->value)) = ic->core.input_style;
X  			} else {			    
X  			    return_name = p->name;
X  			    break;
***************
*** 72,78 ****
X  			}
X  		} else if(strcmp(p->name, XNClientWindow)==0) {
X  			if(ic->ximp_icpart->value_mask & XIMP_CLIENT_WIN) {
! 			    (*((long *)(p->value))) = (long)ic->core.client_window;
X  			} else {
X  			    return_name = p->name;
X  			    break;
--- 71,77 ----
X  			}
X  		} else if(strcmp(p->name, XNClientWindow)==0) {
X  			if(ic->ximp_icpart->value_mask & XIMP_CLIENT_WIN) {
! 			    *((Window *)(p->value)) = ic->core.client_window;
X  			} else {
X  			    return_name = p->name;
X  			    break;
***************
*** 79,85 ****
X  			}
X  		} else if(strcmp(p->name, XNFocusWindow)==0) {
X  			if(ic->ximp_icpart->proto_mask & XIMP_FOCUS_WIN_MASK) {
! 			    (*((long *)(p->value))) = (long)ic->core.focus_window;
X  			} else if(((Ximp_XIM)ic->core.im)->ximp_impart->inputserver){
X  			    return_name = p->name;
X  			    break;
--- 78,84 ----
X  			}
X  		} else if(strcmp(p->name, XNFocusWindow)==0) {
X  			if(ic->ximp_icpart->proto_mask & XIMP_FOCUS_WIN_MASK) {
! 			    *((Window *)(p->value)) = ic->core.focus_window;
X  			} else if(((Ximp_XIM)ic->core.im)->ximp_impart->inputserver){
X  			    return_name = p->name;
X  			    break;
***************
*** 88,105 ****
X  						 XIMP_FOCUS_WIN_MASK,
X  						((Ximp_XIM)ic->core.im)->ximp_impart->focus_win_id,
X  						XA_WINDOW);
! 			    (*((long *)(p->value))) = *(long*)tmp ;
X  			    free(tmp) ;
X  			}
X  		} else if(strcmp(p->name, XNResourceName)==0) {
X  			if(ic->core.im->core.res_name != (char *)NULL) {
X  			    len = strlen(ic->core.im->core.res_name);
! 			    if((p_char = Xmalloc(sizeof(len+1))) == NULL) {
X  				return_name = p->name;
X  				break;
X  			    }
X  			    strcpy(p_char, ic->core.im->core.res_name);
! 			    (*((long *)(p->value))) = (long)p_char;
X  			} else {
X  			    return_name = p->name;
X  			    break;
--- 87,104 ----
X  						 XIMP_FOCUS_WIN_MASK,
X  						((Ximp_XIM)ic->core.im)->ximp_impart->focus_win_id,
X  						XA_WINDOW);
! 			    *((Window *)(p->value)) = *(Window *)tmp ;
X  			    free(tmp) ;
X  			}
X  		} else if(strcmp(p->name, XNResourceName)==0) {
X  			if(ic->core.im->core.res_name != (char *)NULL) {
X  			    len = strlen(ic->core.im->core.res_name);
! 			    if((p_char = Xmalloc(len+1)) == NULL) {
X  				return_name = p->name;
X  				break;
X  			    }
X  			    strcpy(p_char, ic->core.im->core.res_name);
! 			    *((char **)(p->value)) = p_char;
X  			} else {
X  			    return_name = p->name;
X  			    break;
***************
*** 106,112 ****
X  			}
X  		} else if(strcmp(p->name, XNResourceClass)==0) {
X  			if(ic->core.im->core.res_class != (char *)NULL) {
! 			    (*((long *)(p->value))) = (long)ic->core.im->core.res_class;
X  			} else {
X  			    return_name = p->name;
X  			    break;
--- 105,117 ----
X  			}
X  		} else if(strcmp(p->name, XNResourceClass)==0) {
X  			if(ic->core.im->core.res_class != (char *)NULL) {
! 			    len = strlen(ic->core.im->core.res_class);
! 			    if((p_char = Xmalloc(len+1)) == NULL) {
! 				return_name = p->name;
! 				break;
! 			    }
! 			    strcpy(p_char, ic->core.im->core.res_name);
! 			    *((char **)(p->value)) = p_char;
X  			} else {
X  			    return_name = p->name;
X  			    break;
***************
*** 113,132 ****
X  			}
X  		} else if(strcmp(p->name, XNGeometryCallback)==0) {
X  			if(ic->ximp_icpart->value_mask & XIMP_GEOMETRY_CB) {
! 			    (*((long *)(p->value))) = (long)ic->core.geometry_callback.callback;
X  			} else {
X  			    return_name = p->name;
X  			    break;
X  			}
X  		} else if(strcmp(p->name, XNFilterEvents)==0) {
! 		    (*((long *)(p->value))) = (long)ic->core.filter_events;
X  		} else if(strcmp(p->name, XNPreeditAttributes)==0) {
X  			if( _Ximp_PreGetAttributes(ic, p->value,
! 						   return_name) == False)
X  				break;
X  		} else if(strcmp(p->name, XNStatusAttributes)==0) {
X  			if( _Ximp_StatusGetAttributes(ic, p->value,
! 						   return_name) == False)
X  				break;
X  		} else {
X  			if( _Ximp_GetICExtension(ic, p->name, p->value) == False) {
--- 118,137 ----
X  			}
X  		} else if(strcmp(p->name, XNGeometryCallback)==0) {
X  			if(ic->ximp_icpart->value_mask & XIMP_GEOMETRY_CB) {
! 			    *((XIMCallback *)(p->value)) = ic->core.geometry_callback;
X  			} else {
X  			    return_name = p->name;
X  			    break;
X  			}
X  		} else if(strcmp(p->name, XNFilterEvents)==0) {
! 		    *((unsigned long *)(p->value)) = ic->core.filter_events;
X  		} else if(strcmp(p->name, XNPreeditAttributes)==0) {
X  			if( _Ximp_PreGetAttributes(ic, p->value,
! 						   &return_name) == False)
X  				break;
X  		} else if(strcmp(p->name, XNStatusAttributes)==0) {
X  			if( _Ximp_StatusGetAttributes(ic, p->value,
! 						   &return_name) == False)
X  				break;
X  		} else {
X  			if( _Ximp_GetICExtension(ic, p->name, p->value) == False) {
***************
*** 142,168 ****
X  _Ximp_PreGetAttributes(ic, vl, return_name)
X  	Ximp_XIC	 ic;
X  	XIMArg		*vl;
! 	char		*return_name;
X  {
X  	XIMArg		*p;
X  	XRectangle	*p_rect;
X  	XPoint		*p_point;
- 	long		*p_long;
X  	unsigned long	 mask;
X  	int		 im_preedit_flag = 0;
! 	int		 im_font_flag    = 0;
! 	Ximp_PreeditPropRec	*preedit_data;
X  	XIMCallback 	*p_callback;
- 	XPointer	*xptr;
X  
! 	if(((Ximp_XIM)ic->core.im)->ximp_impart->inputserver) {
X  		for(mask = 0, p = vl; p->name != NULL; p++) {
X  			if(strcmp(p->name, XNArea)==0)
X  				mask |= XIMP_PRE_AREA_MASK;
X  			else if(strcmp(p->name, XNAreaNeeded)==0)
X  				mask |= XIMP_PRE_AREANEED_MASK;
! 			else if(strcmp(p->name, XNSpotLocation)==0)
X  				mask |= XIMP_PRE_SPOTL_MASK;
X  			else if(strcmp(p->name, XNColormap)==0)
X  				mask |= XIMP_PRE_COLORMAP_MASK;
X  			else if(strcmp(p->name, XNStdColormap)==0)
--- 147,176 ----
X  _Ximp_PreGetAttributes(ic, vl, return_name)
X  	Ximp_XIC	 ic;
X  	XIMArg		*vl;
! 	char		**return_name;
X  {
X  	XIMArg		*p;
X  	XRectangle	*p_rect;
X  	XPoint		*p_point;
X  	unsigned long	 mask;
X  	int		 im_preedit_flag = 0;
! 	Ximp_PreeditPropRec	*preedit_data = NULL;
X  	XIMCallback 	*p_callback;
X  
! 	if(((Ximp_XIM)ic->core.im)->ximp_impart->connectserver) {
X  		for(mask = 0, p = vl; p->name != NULL; p++) {
X  			if(strcmp(p->name, XNArea)==0)
X  				mask |= XIMP_PRE_AREA_MASK;
X  			else if(strcmp(p->name, XNAreaNeeded)==0)
X  				mask |= XIMP_PRE_AREANEED_MASK;
! 			else if(strcmp(p->name, XNSpotLocation)==0) {
! 				if(!ic->ximp_icpart->input_mode)
! 				    _Ximp_IM_SendMessage(ic, XIMP_MOVE,
! 					ic->ximp_icpart->preedit_attr.SpotLocation.x,
! 					ic->ximp_icpart->preedit_attr.SpotLocation.y,
! 					NULL);
X  				mask |= XIMP_PRE_SPOTL_MASK;
+ 			}
X  			else if(strcmp(p->name, XNColormap)==0)
X  				mask |= XIMP_PRE_COLORMAP_MASK;
X  			else if(strcmp(p->name, XNStdColormap)==0)
***************
*** 177,184 ****
X  				mask |= XIMP_PRE_LINESP_MASK;
X  			else if(strcmp(p->name, XNCursor)==0)
X  				mask |= XIMP_PRE_CURSOR_MASK;
- 			else if(strcmp(p->name, XNFontSet)==0)
- 				im_font_flag = 1;
X  		}
X  		if(mask) {
X  			preedit_data = (Ximp_PreeditPropRec *)_Ximp_GetRequestIM(ic, mask,
--- 185,190 ----
***************
*** 191,197 ****
X  	for(p = vl; p->name != NULL; p++) {
X  		if(strcmp(p->name, XNArea)==0) {
X  			if(im_preedit_flag) {
! 				p_rect = (XRectangle *)(p->value) ;
X  				p_rect->x       = preedit_data->Area.x;
X  				p_rect->y       = preedit_data->Area.y;
X  				p_rect->width   = preedit_data->Area.width;
--- 197,206 ----
X  	for(p = vl; p->name != NULL; p++) {
X  		if(strcmp(p->name, XNArea)==0) {
X  			if(im_preedit_flag) {
! 				if((p_rect = (XRectangle *)Xmalloc(sizeof(XRectangle))) == NULL) {
! 					*return_name = p->name;
! 					return(False);
! 				}
X  				p_rect->x       = preedit_data->Area.x;
X  				p_rect->y       = preedit_data->Area.y;
X  				p_rect->width   = preedit_data->Area.width;
***************
*** 198,387 ****
X  				p_rect->height  = preedit_data->Area.height;
X  			} else {
X  				if(ic->ximp_icpart->proto_mask & XIMP_PRE_AREA_MASK) {
! 				        p_rect = (XRectangle *)(p->value) ;
X  					p_rect->x       = ic->core.preedit_attr.area.x;
X  					p_rect->y       = ic->core.preedit_attr.area.y;
X  					p_rect->width   = ic->core.preedit_attr.area.width;
X  					p_rect->height  = ic->core.preedit_attr.area.height;
X  				} else {
! 				        return_name = p->name;
X  				        return(False);
X  				}
X  			}
X  		} else if(strcmp(p->name, XNAreaNeeded)==0) {
X  			if(im_preedit_flag) {
! 				p_rect = (XRectangle *)Xmalloc(sizeof(XRectangle));
! 				xptr = (XPointer *)p->value;
! 				*xptr = (XPointer)p_rect;
X  				p_rect->x  = p_rect->y  = 0;
X  				p_rect->width   = preedit_data->AreaNeeded.width;
X  				p_rect->height  = preedit_data->AreaNeeded.height;
X  			} else {
X  				if(ic->ximp_icpart->proto_mask & XIMP_PRE_AREANEED_MASK) {
! 					p_rect = (XRectangle *)Xmalloc(sizeof(XRectangle));
! 					xptr = (XPointer *)p->value;
! 					*xptr = (XPointer)p_rect;
X  					p_rect->x  = p_rect->y  = 0;
X  					p_rect->width   = ic->core.preedit_attr.area_needed.width;
X  					p_rect->height  = ic->core.preedit_attr.area_needed.height;
X  				} else {
! 				        return_name = p->name;
X  				        return(False);
X  				}
X  			}
X  		} else if(strcmp(p->name, XNSpotLocation)==0) {
X  			if(im_preedit_flag) {
! 				p_point = (XPoint *)Xmalloc(sizeof(XPoint));
! 				xptr = (XPointer *)p->value;
! 				*xptr = (XPointer)p_point;
X  				p_point->x = preedit_data->SpotLocation.x;
X  				p_point->y = preedit_data->SpotLocation.y;
X  			} else {
X  				if(ic->ximp_icpart->proto_mask & XIMP_PRE_SPOTL_MASK) {
! 					p_point = (XPoint *)Xmalloc(sizeof(XPoint));
! 					xptr = (XPointer *)p->value;
! 					*xptr = (XPointer)p_point;
X  					p_point->x = ic->core.preedit_attr.spot_location.x;
X  					p_point->y = ic->core.preedit_attr.spot_location.y;
X  				} else {
! 				        return_name = p->name;
X  				        return(False);
X  				}
X  			}
X  		} else if(  strcmp(p->name, XNColormap)==0
X  		        || strcmp(p->name, XNStdColormap)==0) {
X  			if(im_preedit_flag) {
! 			         p_long = (long *)(p->value);
! 				*p_long = preedit_data->Colormap;
X  			} else {
X  				if(ic->ximp_icpart->proto_mask & XIMP_PRE_COLORMAP_MASK) {
! 				         p_long = (long *)(p->value);
! 					*p_long = ic->core.preedit_attr.colormap;
X  				} else {
! 					return_name = p->name;
X  					return(False);
X  				}
X  			}
X  		} else if(strcmp(p->name, XNBackground)==0) {
X  			if(im_preedit_flag) {
! 			         p_long = (long *)(p->value);
! 				*p_long = preedit_data->Background;
X  			} else {
X  				if(ic->ximp_icpart->proto_mask & XIMP_PRE_BG_MASK) {
! 				         p_long = (long *)(p->value);
! 					*p_long = ic->core.preedit_attr.background;
X  				} else {
! 					return_name = p->name;
X  					return(False);
X  				}
X  			}
X  		} else if(strcmp(p->name, XNForeground)==0) {
X  			if(im_preedit_flag) {
! 			         p_long = (long *)(p->value);
! 				*p_long = preedit_data->Foreground;
X  			} else {
X  				if(ic->ximp_icpart->proto_mask & XIMP_PRE_FG_MASK) {
! 				         p_long = (long *)(p->value);
! 					*p_long = ic->core.preedit_attr.foreground;
X  				} else {
! 					return_name = p->name;
X  					return(False);
X  				}
X  			}
X  		} else if(strcmp(p->name, XNBackgroundPixmap)==0) {
X  			if(im_preedit_flag) {
! 			         p_long = (long *)(p->value);
! 				*p_long = preedit_data->Bg_Pixmap;
X  			} else {
X  				if(ic->ximp_icpart->proto_mask & XIMP_PRE_BGPIXMAP_MASK) {
! 				         p_long = (long *)(p->value);
! 					*p_long = ic->core.preedit_attr.background_pixmap;
X  				} else {
! 					return_name = p->name;
X  					return(False);
X  				}
X  			}
X  		} else if(strcmp(p->name, XNFontSet)==0) {
X  			if(ic->ximp_icpart->proto_mask & XIMP_PRE_FONT_MASK) {
! 			         p_long = (long *)(p->value);
! 				*p_long = (long)ic->core.preedit_attr.fontset;
X  			} else {
! 				return_name = p->name;
X  				return(False);
X  			}
X  		} else if(strcmp(p->name, XNLineSpace)==0) {
X  			if(im_preedit_flag) {
! 			         p_long = (long *)(p->value);
! 				*p_long = preedit_data->LineSpacing;
X  			} else {
X  				if(ic->ximp_icpart->proto_mask & XIMP_PRE_LINESP_MASK) {
! 				         p_long = (long *)(p->value);
! 					*p_long = ic->core.preedit_attr.line_space;
X  				} else {
! 					return_name = p->name;
X  					return(False);
X  				}
X  			}
X  		} else if(strcmp(p->name, XNCursor)==0) {
X  			if(im_preedit_flag) {
! 			         p_long = (long *)(p->value);
! 				*p_long = preedit_data->Cursor;
X  			} else {
X  				if(ic->ximp_icpart->proto_mask & XIMP_PRE_CURSOR_MASK) {
! 				         p_long = (long *)(p->value);
! 					*p_long = ic->core.preedit_attr.cursor;
X  				} else {
! 					return_name = p->name;
X  					return(False);
X  				}
X  			}
X  		} else if(strcmp(p->name, XNPreeditStartCallback)==0) {
X  			if((int)ic->core.preedit_attr.callbacks.start.callback) {
! 			        p_callback = (XIMCallback *)(p->value) ;
X  				p_callback->client_data =
X  					ic->core.preedit_attr.callbacks.start.client_data;
X  				p_callback->callback =
X  					ic->core.preedit_attr.callbacks.start.callback;
X  			} else {
! 				return_name = p->name;
X  				return(False);
X  			}
X  		} else if(strcmp(p->name, XNPreeditDrawCallback)==0) {
X  			if((int)ic->core.preedit_attr.callbacks.draw.callback) {
! 			        p_callback = (XIMCallback *)(p->value) ;
X  				p_callback->client_data =
X  					ic->core.preedit_attr.callbacks.draw.client_data;
X  				p_callback->callback =
X  					ic->core.preedit_attr.callbacks.draw.callback;
X  			} else {
! 				return_name = p->name;
X  				return(False);
X  			}
X  		} else if(strcmp(p->name, XNPreeditDoneCallback)==0) {
X  			if((int)ic->core.preedit_attr.callbacks.done.callback) {
! 			        p_callback = (XIMCallback *)(p->value) ;
X  				p_callback->client_data =
X  					ic->core.preedit_attr.callbacks.done.client_data;
X  				p_callback->callback =
X  					ic->core.preedit_attr.callbacks.done.callback;
X  			} else {
! 				return_name = p->name;
X  				return(False);
X  			}
X  		} else if(strcmp(p->name, XNPreeditCaretCallback)==0) {
X  			if((int)ic->core.preedit_attr.callbacks.caret.callback) {
! 			        p_callback = (XIMCallback *)(p->value) ;
X  				p_callback->client_data =
X  					ic->core.preedit_attr.callbacks.caret.client_data;
X  				p_callback->callback =
X  					ic->core.preedit_attr.callbacks.caret.callback;
X  			} else {
! 				return_name = p->name;
X  				return(False);
X  			}
X  		}
X  	}
! 	XFree(preedit_data);
X  	return(True);
X  }
X  
--- 207,411 ----
X  				p_rect->height  = preedit_data->Area.height;
X  			} else {
X  				if(ic->ximp_icpart->proto_mask & XIMP_PRE_AREA_MASK) {
! 					if((p_rect = (XRectangle *)Xmalloc(sizeof(XRectangle))) == NULL) {
! 						*return_name = p->name;
! 						return(False);
! 					}
X  					p_rect->x       = ic->core.preedit_attr.area.x;
X  					p_rect->y       = ic->core.preedit_attr.area.y;
X  					p_rect->width   = ic->core.preedit_attr.area.width;
X  					p_rect->height  = ic->core.preedit_attr.area.height;
X  				} else {
! 				        *return_name = p->name;
X  				        return(False);
X  				}
X  			}
+ 			*((XRectangle **)(p->value)) = p_rect;
X  		} else if(strcmp(p->name, XNAreaNeeded)==0) {
X  			if(im_preedit_flag) {
! 				if((p_rect = (XRectangle *)Xmalloc(sizeof(XRectangle))) == NULL) {
! 					*return_name = p->name;
! 					return(False);
! 				}
X  				p_rect->x  = p_rect->y  = 0;
X  				p_rect->width   = preedit_data->AreaNeeded.width;
X  				p_rect->height  = preedit_data->AreaNeeded.height;
X  			} else {
X  				if(ic->ximp_icpart->proto_mask & XIMP_PRE_AREANEED_MASK) {
! 					if((p_rect = (XRectangle *)Xmalloc(sizeof(XRectangle))) == NULL) {
! 						*return_name = p->name;
! 						return(False);
SHAR_EOF
true || echo 'restore of fix-12 failed'
fi
echo 'End of  part 3'
echo 'File fix-12 is continued in part 4'
echo 4 > _shar_seq_.tmp
exit 0
-- 
---
Senior Systems Scientist		mail: dcmartin@msi.com
Molecular Simulations, Inc.		uucp: uunet!dcmartin
796 North Pastoria Avenue		at&t: 408/522-9236
