Newsgroups: comp.sources.x
Path: uunet!gatech!europa.asd.contel.com!darwin.sura.net!mips!msi!dcmartin
From: rws@EXPO.LCS.MIT.EDU (Bob Scheifler)
Subject: v18i037: X11R5 public fix #12, Part01/05
Message-ID: <csx-18i037-X11R5-fix12@uunet.UU.NET>
Originator: dcmartin@fascet
Sender: dcmartin@msi.com (David C. Martin - Moderator)
Organization: Molecular Simulations, Inc.
Date: Mon, 20 Jul 1992 15:54:42 GMT
Approved: dcmartin@msi.com
Lines: 1707

Submitted-by: rws@EXPO.LCS.MIT.EDU (Bob Scheifler)
Posting-number: Volume 18, Issue 37
Archive-name: X11R5-fix12/part01

Fix 12 corrects the following problems:

Xlib: lots of internationalization bugs

#!/bin/sh
# This is a shell archive (produced by shar 3.50)
# To extract the files from this archive, save it to a file, remove
# everything above the "!/bin/sh" line above, and type "sh file_name".
#
# made 07/20/1992 15:51 UTC by dcmartin@fascet
# Source directory /home/fascet/dcmartin/csx/src/tmp
#
# existing files will NOT be overwritten unless -c is specified
#
# This is part 1 of a multipart archive                                    
# do not concatenate these parts, unpack them in order with /bin/sh        
#
# This shar contains:
# length  mode       name
# ------ ---------- ------------------------------------------
# 212132 -rw-r--r-- fix-12
#
if test -r _shar_seq_.tmp; then
	echo 'Must unpack archives in sequence!'
	echo Please unpack part `cat _shar_seq_.tmp` next
	exit 1
fi
# ============= fix-12 ==============
if test -f 'fix-12' -a X"$1" != X"-c"; then
	echo 'x - skipping fix-12 (File already exists)'
	rm -f _shar_wnt_.tmp
else
> _shar_wnt_.tmp
echo 'x - extracting fix-12 (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'fix-12' &&
X		      Release 5 Public Patch #12
X			   MIT X Consortium
X
To apply this patch:
X
cd to the top of the source tree (to the directory containing the "mit"
and "contrib" subdirectories) and do:
X	patch -p -s < ThisFile
Patch will work silently unless an error occurs.
If you want to watch patch do its thing, leave out the "-s" argument to patch.
X
Finally, to rebuild after applying this patch, cd to the "mit" subdirectory
and do:
X	make -k >& make.log
X
Brief notes on what this patch fixes:
X
XXlib: lots of internationalization bugs
X
Prereq: public-patch-11
X
*** /tmp/,RCSt1a09635	Sun May 17 13:35:02 1992
--- mit/bug-report	Sun May 17 13:33:01 1992
***************
*** 2,8 ****
X  Subject: [area]: [synopsis]   [replace with actual area and short description]
X  
X  VERSION:
!     R5, public-patch-11
X      [MIT public patches will edit this line to indicate the patch level]
X  
X  CLIENT MACHINE and OPERATING SYSTEM:
--- 2,8 ----
X  Subject: [area]: [synopsis]   [replace with actual area and short description]
X  
X  VERSION:
!     R5, public-patch-12
X      [MIT public patches will edit this line to indicate the patch level]
X  
X  CLIENT MACHINE and OPERATING SYSTEM:
*** /tmp/d14042	Sun May  3 18:19:16 1992
--- mit/lib/X/XSetLocale.c	Sun May  3 18:19:13 1992
***************
*** 1,5 ****
X  /*
!  * $XConsortium: XSetLocale.c,v 1.32 91/05/13 08:45:00 rws Exp $
X   */
X  
X  /*
--- 1,5 ----
X  /*
!  * $XConsortium: XSetLocale.c,v 1.33 92/04/22 11:48:46 rws Exp $
X   */
X  
X  /*
***************
*** 118,125 ****
X      int   len;
X  
X      start = index(osname, ':');
!     if (!start)
X  	return osname;
X      start++;
X      end = index(start, ';');
X      if (!end)
--- 118,127 ----
X      int   len;
X  
X      start = index(osname, ':');
!     if (!start) {
! 	strcpy(siname, osname);
X  	return osname;
+     }
X      start++;
X      end = index(start, ';');
X      if (!end)
*** /tmp/d15668	Sun May  3 18:33:39 1992
--- mit/lib/X/Xlcint.h	Sun May  3 18:33:36 1992
***************
*** 1,5 ****
X  /*
!  * $XConsortium: Xlcint.h,v 11.13 91/06/05 09:09:43 rws Exp $
X   */
X  
X  /*
--- 1,5 ----
X  /*
!  * $XConsortium: Xlcint.h,v 11.14 92/04/14 15:42:59 rws Exp $
X   */
X  
X  /*
***************
*** 89,94 ****
--- 89,96 ----
X  #define	ICFontSet		12
X  #define	ICLineSpace		13
X  #define	ICCursor		14
+ #define	ICResourceClass		26
+ #define	ICResourceName		27
X  
X  #define	IMQueryInputStyle	0
X  
*** /tmp/d15753	Sun May  3 18:34:25 1992
--- mit/lib/X/XlcWrap.c	Sun May  3 18:34:22 1992
***************
*** 1,5 ****
X  /*
!  * $XConsortium: XlcWrap.c,v 11.8 91/05/02 16:26:52 rws Exp $
X   */
X  
X  /*
--- 1,5 ----
X  /*
!  * $XConsortium: XlcWrap.c,v 11.9 92/04/24 16:07:40 rws Exp $
X   */
X  
X  /*
***************
*** 124,134 ****
X  	i += strlen(user_mods);
X      mods = Xmalloc(i);
X      if (mods) {
! 	if (user_mods) {
! 	    strcpy(mods, user_mods);
! 	    strcat(mods, prog_mods);
! 	} else
! 	    strcpy(mods, prog_mods);
X      }
X      return mods;
X  }
--- 124,132 ----
X  	i += strlen(user_mods);
X      mods = Xmalloc(i);
X      if (mods) {
! 	strcpy(mods, prog_mods);
! 	if (user_mods)
! 	    strcat(mods, user_mods);
X      }
X      return mods;
X  }
*** /tmp/d15866	Sun May  3 18:35:25 1992
--- mit/lib/X/Xsi/ProtoFlt.c	Sun May  3 18:35:22 1992
***************
*** 1,5 ****
X  /*
!  * $XConsortium: ProtoFlt.c,v 1.26 92/03/03 10:01:17 rws Exp $
X   */
X  
X  /*
--- 1,5 ----
X  /*
!  * $XConsortium: ProtoFlt.c,v 1.27 92/04/24 16:13:58 rws Exp $
X   */
X  
X  /*
***************
*** 360,369 ****
X  
X      if (!im || (im->fd < 0)) return(False);
X      /*
!      * If key_code is larger than max_keycode, this key event be regarded
X       * as the event pushed back by this filter.
X       */
!     if (ev->xkey.keycode == (display->max_keycode + 1)) {
X  	if (_XipTypeOfNextICQueue(ic) == XIM_KEYSYM &&
X  	    (keysym = _XipKeySymOfNextICQueue(ic)) > XK_BackSpace){
X  	    if ((keycode = XKeysymToKeycode(display, keysym)) != 0) {
--- 360,369 ----
X  
X      if (!im || (im->fd < 0)) return(False);
X      /*
!      * If key_code is 0, this key event be regarded
X       * as the event pushed back by this filter.
X       */
!     if (ev->xkey.keycode == 0) {
X  	if (_XipTypeOfNextICQueue(ic) == XIM_KEYSYM &&
X  	    (keysym = _XipKeySymOfNextICQueue(ic)) > XK_BackSpace){
X  	    if ((keycode = XKeysymToKeycode(display, keysym)) != 0) {
***************
*** 431,437 ****
X  	    bcopy((char *)ev, (char *)&dummy_ev, sizeof(XEvent));
X  	    dummy_ev.type = KeyPress;
X  	    dummy_ev.xkey.state = 0;
! 	    dummy_ev.xkey.keycode = display->max_keycode + 1;
X  	    if (first == 0) count--;
X  	    for (i = 0; i < count; i++) {
X  		XPutBackEvent(display, &dummy_ev);
--- 431,437 ----
X  	    bcopy((char *)ev, (char *)&dummy_ev, sizeof(XEvent));
X  	    dummy_ev.type = KeyPress;
X  	    dummy_ev.xkey.state = 0;
! 	    dummy_ev.xkey.keycode = 0;
X  	    if (first == 0) count--;
X  	    for (i = 0; i < count; i++) {
X  		XPutBackEvent(display, &dummy_ev);
***************
*** 440,446 ****
X  	    if (first > 0) continue;
X  	    first++;
X  	    ev->xkey.state = 0;
! 	    ev->xkey.keycode = display->max_keycode + 1;
X  	    if (_XipTypeOfNextICQueue(ic) == XIM_KEYSYM &&
X  		(keysym = _XipKeySymOfNextICQueue(ic)) > XK_BackSpace){
X  		if ((keycode = XKeysymToKeycode(display, keysym)) != 0) {
--- 440,446 ----
X  	    if (first > 0) continue;
X  	    first++;
X  	    ev->xkey.state = 0;
! 	    ev->xkey.keycode = 0;
X  	    if (_XipTypeOfNextICQueue(ic) == XIM_KEYSYM &&
X  		(keysym = _XipKeySymOfNextICQueue(ic)) > XK_BackSpace){
X  		if ((keycode = XKeysymToKeycode(display, keysym)) != 0) {
*** /tmp/d15993	Sun May  3 18:36:33 1992
--- mit/lib/X/Xsi/XCnvMBToCT.c	Sun May  3 18:36:31 1992
***************
*** 1,5 ****
X  /*
!  * $XConsortium: XCnvMBToCT.c,v 1.20 91/11/17 16:18:34 rws Exp $
X   */
X  
X  /*
--- 1,5 ----
X  /*
!  * $XConsortium: XCnvMBToCT.c,v 1.21 92/04/14 15:54:22 rws Exp $
X   */
X  
X  /*
***************
*** 270,276 ****
X              continue;
X            case SPACE:
X  	    /* force designate ISO8859.1 to GL (Codeset 0) */
! 	    ctSetid(xlocale, CODESET0);
X  	    goto _Normal_char;
X            case CSI:
X              /* not supported yet */
--- 270,276 ----
X              continue;
X            case SPACE:
X  	    /* force designate ISO8859.1 to GL (Codeset 0) */
! 	    ctSetGLid(xlocale, CODESET0);
X  	    goto _Normal_char;
X            case CSI:
X              /* not supported yet */
*** /tmp/d16015	Sun May  3 18:36:46 1992
--- mit/lib/X/Xsi/XCnvWCToMB.c	Sun May  3 18:36:43 1992
***************
*** 1,5 ****
X  /*
!  * $XConsortium: XCnvWCToMB.c,v 1.22 91/11/17 16:22:31 rws Exp $
X   */
X  
X  /*
--- 1,5 ----
X  /*
!  * $XConsortium: XCnvWCToMB.c,v 1.23 92/04/14 15:54:49 rws Exp $
X   */
X  
X  /*
***************
*** 296,302 ****
X              wc_str++, wccnt++, wc_len--;
X              continue;
X          }
! 	ctid = _XcwGetWoffset(*wc_str, &newwoffset);
X  	if (ctid == ND || (newcsid = _Xmbctidtocsid(xlocale, ctid)) == ND) {
X  	    /* XXX BUG: if stateful encoding, need to check/add
X  			designate sequence of default string.
--- 296,302 ----
X              wc_str++, wccnt++, wc_len--;
X              continue;
X          }
! 	ctid = _XcwGetWoffsetFromLocale(xlocale, *wc_str, &newwoffset);
X  	if (ctid == ND || (newcsid = _Xmbctidtocsid(xlocale, ctid)) == ND) {
X  	    /* XXX BUG: if stateful encoding, need to check/add
X  			designate sequence of default string.
*** /tmp/d16079	Sun May  3 18:37:19 1992
--- mit/lib/X/Xsi/XCrFntSet.c	Sun May  3 18:37:16 1992
***************
*** 1,5 ****
X  /*
!  * $XConsortium: XCrFntSet.c,v 1.44 92/03/03 10:00:34 rws Exp $
X   */
X  
X  /*
--- 1,5 ----
X  /*
!  * $XConsortium: XCrFntSet.c,v 1.46 92/04/24 16:10:50 rws Exp $
X   */
X  
X  /*
***************
*** 75,82 ****
X      Display        *dpy;
X      XFontSet        font_set;
X  {
!     _XlcFreeLocale(((XsiFontSet)font_set)->xlc);
!     Xfree((char *) ((XsiFontSet)font_set)->ctid);
X  }
X  
X  static RConst XFontSetMethodsRec fs_methods = {
--- 75,84 ----
X      Display        *dpy;
X      XFontSet        font_set;
X  {
!     if (((XsiFontSet)font_set)->xlc)
! 	_XlcFreeLocale(((XsiFontSet)font_set)->xlc);
!     if (font_set->core.num_of_fonts > 0)
! 	Xfree((char *) ((XsiFontSet)font_set)->ctid);
X  }
X  
X  static RConst XFontSetMethodsRec fs_methods = {
***************
*** 385,401 ****
X          }
X          start++;
X      }
!     /* treat jisx0208.1983-0 same as jisx0208.1990-0 */
!     if ((i = strlen(cset)) == 15 && strlen(start) == i &&
X  	*(cset+14) == *(start+14) &&
! 	!strncmp(cset, "jisx0208", 8)) {
!          return ((compareNLowercase(start, cset, 8) == 0) ? True : False);
X      }
!     /* treat ISO8859.* for GL same as ISO8859.1 */
X      if (GLorGR == GL && !strncmp(cset, "iso8859-", 8)) {
X           return ((compareNLowercase(start, cset, 8) == 0) ? True : False);
X      }
!     return ((compareLowercase(start, cset) == 0) ? True : False);
X  }
X  
X  static int
--- 387,406 ----
X          }
X          start++;
X      }
!     if (compareLowercase(start, cset) == 0)
! 	return (True);
! 
!     /* jisx0208.1990-0 is super set of jisx0208.1983-0 */
!     if (strlen(cset) == 15 && strlen(start) == 15 &&
X  	*(cset+14) == *(start+14) &&
! 	!strncmp(cset, "jisx0208.1983", 13)) {
!          return ((compareNLowercase(start, "jisx0208.1990", 13) == 0) ? True : False);
X      }
!     /* GL of ISO8859.* is same as GL of ISO8859.1 */
X      if (GLorGR == GL && !strncmp(cset, "iso8859-", 8)) {
X           return ((compareNLowercase(start, cset, 8) == 0) ? True : False);
X      }
!     return (False);
X  }
X  
X  static int
***************
*** 552,562 ****
X  
X  #ifdef XML
X  static int
! TryLoad(s_tmp, id_tmp, found, info, charset, GLorGR)
! XFontStruct	*s_tmp[];
X  int		id_tmp[];
X  int		found;
- XFontStruct     *info;
X  char		*charset;
X  _CSID		GLorGR;
X  {
--- 557,565 ----
X  
X  #ifdef XML
X  static int
! AlreadyLoad(id_tmp, found, charset, GLorGR)
X  int		id_tmp[];
X  int		found;
X  char		*charset;
X  _CSID		GLorGR;
X  {
***************
*** 567,573 ****
--- 570,587 ----
X  	if (id_tmp[i] == id_tmp[found])
X  	    return 0;
X      }
+     return 1;
+ }
X  
+ static int
+ TryLoad(s_tmp, id_tmp, found, info, charset, GLorGR)
+ XFontStruct	*s_tmp[];
+ int		id_tmp[];
+ int		found;
+ XFontStruct     *info;
+ char		*charset;
+ _CSID		GLorGR;
+ {
X      if (! (s_tmp[found] = (XFontStruct *)Xmalloc(sizeof(XFontStruct))))
X  	return 0;
X  #ifndef MUSTCOPY
***************
*** 652,672 ****
X  			loadASCIIFONT = 1;
X  		    }
X  		} else {
X  		    if (!info)
X  			info_list = XListFontsWithInfo(dpy, list[j], 1, &count_list, &info);
X  		    if (count_list != 1)
X  			/* never go to here. */
X  			continue;
! 
! 		    f_tmp[found+1] = f_tmp[found];
! 		    found += TryLoad(s_tmp, id_tmp, found, info, charset, GL);
X  		}
- 		if (!info)
- 		    info_list = XListFontsWithInfo(dpy, list[j], 1, &count_list, &info);
- 		if (count_list != 1)
- 		    /* never go to here. */
- 		    continue;
- 		found += TryLoad(s_tmp, id_tmp, found, info, charset, GR);
X  		notfound = 0;
X  		if (info)
X  		    XFreeFontInfo(info_list, info, count_list);
--- 666,691 ----
X  			loadASCIIFONT = 1;
X  		    }
X  		} else {
+ 		    if (AlreadyLoad(id_tmp, found, charset, GL)) {
+ 
+ 			if (!info)
+ 			    info_list = XListFontsWithInfo(dpy, list[j], 1, &count_list, &info);
+ 			if (count_list != 1)
+ 			    /* never go to here. */
+ 			    continue;
+ 
+ 			f_tmp[found+1] = f_tmp[found];
+ 			found += TryLoad(s_tmp, id_tmp, found, info, charset, GL);
+ 		    }
+ 		}
+ 		if (AlreadyLoad(id_tmp, found, charset, GR)) {
X  		    if (!info)
X  			info_list = XListFontsWithInfo(dpy, list[j], 1, &count_list, &info);
X  		    if (count_list != 1)
X  			/* never go to here. */
X  			continue;
! 		    found += TryLoad(s_tmp, id_tmp, found, info, charset, GR);
X  		}
X  		notfound = 0;
X  		if (info)
X  		    XFreeFontInfo(info_list, info, count_list);
***************
*** 880,886 ****
X  		      &font_set->ascent, &font_set->descent);
X      font_set->core.default_string = NULL;
X      for (i = 0; (int)i < found; i++) {
! 	Xfree((char *)f_tmp[i]);
X      }
X  
X      /*
--- 899,905 ----
X  		      &font_set->ascent, &font_set->descent);
X      font_set->core.default_string = NULL;
X      for (i = 0; (int)i < found; i++) {
! 	if (f_tmp[i]) Xfree((char *)f_tmp[i]);
X      }
X  
X      /*
*** /tmp/d16101	Sun May  3 18:37:32 1992
--- mit/lib/X/Xsi/XCrIC.c	Sun May  3 18:37:30 1992
***************
*** 1,5 ****
X  /*
!  * $XConsortium: XCrIC.c,v 1.30 91/06/05 09:23:58 rws Exp $
X   */
X  
X  /*
--- 1,5 ----
X  /*
!  * $XConsortium: XCrIC.c,v 1.31 92/04/14 15:44:17 rws Exp $
X   */
X  
X  /*
***************
*** 114,133 ****
X  };
X  
X  static Status
! _StringToPixel(display, w, name, pixel)
X      Display *display;
!     Window w;
X      char *name;
X      unsigned long *pixel;
X  {
X      XColor c, e_c;
-     Colormap colormap;
-     XWindowAttributes win_info;
X      Status status;
X  
-     XGetWindowAttributes(display, w, &win_info);
-     colormap = win_info.colormap;
- 
X      if (name[0] == '#') {
X  	status = XParseColor(display, colormap, name, &c);
X  	if (status != 0) {
--- 114,128 ----
X  };
X  
X  static Status
! _StringToPixel(display, colormap, name, pixel)
X      Display *display;
!     Colormap colormap;
X      char *name;
X      unsigned long *pixel;
X  {
X      XColor c, e_c;
X      Status status;
X  
X      if (name[0] == '#') {
X  	status = XParseColor(display, colormap, name, &c);
X  	if (status != 0) {
***************
*** 155,161 ****
X  {
X      XipIM im = ipIMofIC(ic);
X      unsigned long ret_mask = 0;
-     int screen;
X      char name_prefix[256], class_prefix[256];
X      char res_name_buf[256], res_class_buf[256];
X      /*
--- 150,155 ----
***************
*** 166,182 ****
X  #endif	/* XML */
X      char def_fg_name[256], def_bg_name[256];
X      unsigned long def_fg, def_bg;
-     Window window;
X      char *str_type[20];
X      XrmValue value;
X      XIMArg args[8], pre_args[4], st_args[4];
X      int count = 0, pre_count = 0, st_count = 0;
X  
X      if (rdb == NULL) {
X  	return(0);
X      }
!     screen = DefaultScreen(display);
!     window = RootWindow(display, screen);
X      if (res_name == NULL || *res_name == '\0'
X  	|| res_class == NULL || *res_class == '\0') {
X  	strcpy(name_prefix, "*.");
--- 160,183 ----
X  #endif	/* XML */
X      char def_fg_name[256], def_bg_name[256];
X      unsigned long def_fg, def_bg;
X      char *str_type[20];
X      XrmValue value;
X      XIMArg args[8], pre_args[4], st_args[4];
X      int count = 0, pre_count = 0, st_count = 0;
+     Colormap colormap, def_colormap;
+     XWindowAttributes win_info;
X  
X      if (rdb == NULL) {
X  	return(0);
X      }
!     if (ic->core.client_window) {
! 	XGetWindowAttributes(display, ic->core.client_window, &win_info);
!     } else {
! 	XGetWindowAttributes(display,
! 			     RootWindow(display, DefaultScreen(display)),
! 			     &win_info);
!     }
!     def_colormap = win_info.colormap;
X      if (res_name == NULL || *res_name == '\0'
X  	|| res_class == NULL || *res_class == '\0') {
X  	strcpy(name_prefix, "*.");
***************
*** 195,201 ****
X  	if (XrmGetResource(rdb, res_name_buf, res_class_buf,
X  			   str_type, &value) == True) {
X  	    strncpy(def_fg_name, value.addr, (int)value.size);
! 	    if (_StringToPixel(display, window, def_fg_name, &def_fg) == 0) {
X  		if (!(mask & (1 << ICForeground))) {
X  		    pre_args[pre_count].name = (char *)XNForeground;
X  		    pre_args[pre_count].value = (XPointer)def_fg;
--- 196,207 ----
X  	if (XrmGetResource(rdb, res_name_buf, res_class_buf,
X  			   str_type, &value) == True) {
X  	    strncpy(def_fg_name, value.addr, (int)value.size);
! 	    if (ic->core.preedit_attr.colormap) {
! 		colormap = ic->core.preedit_attr.colormap;
! 	    } else {
! 		colormap = def_colormap;
! 	    }
! 	    if (_StringToPixel(display, colormap, def_fg_name, &def_fg) == 0) {
X  		if (!(mask & (1 << ICForeground))) {
X  		    pre_args[pre_count].name = (char *)XNForeground;
X  		    pre_args[pre_count].value = (XPointer)def_fg;
***************
*** 220,226 ****
X  	if (XrmGetResource(rdb, res_name_buf, res_class_buf,
X  			   str_type, &value) == True) {	
X  	    strncpy(def_bg_name, value.addr, (int)value.size);	
! 	    if (_StringToPixel(display, window, def_bg_name, &def_bg) == 0) {
X  		if (!(mask & (1 << ICBackground))) {
X  		    pre_args[pre_count].name = (char *)XNBackground;
X  		    pre_args[pre_count].value = (XPointer)def_bg;
--- 226,237 ----
X  	if (XrmGetResource(rdb, res_name_buf, res_class_buf,
X  			   str_type, &value) == True) {	
X  	    strncpy(def_bg_name, value.addr, (int)value.size);	
! 	    if (ic->core.preedit_attr.colormap) {
! 		colormap = ic->core.preedit_attr.colormap;
! 	    } else {
! 		colormap = def_colormap;
! 	    }
! 	    if (_StringToPixel(display, colormap, def_bg_name, &def_bg) == 0) {
X  		if (!(mask & (1 << ICBackground))) {
X  		    pre_args[pre_count].name = (char *)XNBackground;
X  		    pre_args[pre_count].value = (XPointer)def_bg;
*** /tmp/d16186	Sun May  3 18:38:19 1992
--- mit/lib/X/Xsi/XICSetVal.c	Sun May  3 18:38:16 1992
***************
*** 1,5 ****
X  /*
!  * $XConsortium: XICSetVal.c,v 1.27 91/09/11 11:40:57 rws Exp $
X   */
X  
X  /*
--- 1,5 ----
X  /*
!  * $XConsortium: XICSetVal.c,v 1.28 92/04/24 16:14:45 rws Exp $
X   */
X  
X  /*
***************
*** 266,272 ****
X      req.input_style = ic->core.input_style;
X      req.focus_window = ic->core.focus_window;
X      req.filter_events = ic->core.filter_events;
!     req.max_keycode = im->core.display->max_keycode;
X  #ifdef	XML
X      if (mask & (1 << ICUsingLanguage)) {
X  	if (ic->xlc_num == 0) {
--- 266,272 ----
X      req.input_style = ic->core.input_style;
X      req.focus_window = ic->core.focus_window;
X      req.filter_events = ic->core.filter_events;
!     req.max_keycode = 0;	/* noused */
X  #ifdef	XML
X      if (mask & (1 << ICUsingLanguage)) {
X  	if (ic->xlc_num == 0) {
*** /tmp/d16208	Sun May  3 18:38:31 1992
--- mit/lib/X/Xsi/XIMKeyBind.c	Sun May  3 18:38:29 1992
***************
*** 1,5 ****
X  /*
!  * $XConsortium: XIMKeyBind.c,v 1.22 92/03/03 10:01:53 rws Exp $
X   */
X  
X  /*
--- 1,5 ----
X  /*
!  * $XConsortium: XIMKeyBind.c,v 1.23 92/04/24 16:14:56 rws Exp $
X   */
X  
X  /*
***************
*** 55,61 ****
X      char		*mbuf;
X  #endif
X  
!     if (ev->keycode > ev->display->max_keycode) {
X  	(void)_XipGetNextICQueue(ic, &type, &length, keysym, (char **)&ptr);
X  	if (type == XIM_STRING || (type == XIM_KEYSYM && length > 0)) {
X  #ifdef X_WCHAR
--- 55,61 ----
X      char		*mbuf;
X  #endif
X  
!     if (ev->keycode == 0) {
X  	(void)_XipGetNextICQueue(ic, &type, &length, keysym, (char **)&ptr);
X  	if (type == XIM_STRING || (type == XIM_KEYSYM && length > 0)) {
X  #ifdef X_WCHAR
***************
*** 148,154 ****
X      int			ret_len, scanned_bytes;
X      int			ret;
X  
!     if (ev->keycode > ev->display->max_keycode) {
X  	_XipGetNextICQueue(ic, &type, &length, keysym, (char **)&ptr);
X  	if (type == XIM_STRING) {
X  	    ret_len = nbytes;
--- 148,154 ----
X      int			ret_len, scanned_bytes;
X      int			ret;
X  
!     if (ev->keycode == 0) {
X  	_XipGetNextICQueue(ic, &type, &length, keysym, (char **)&ptr);
X  	if (type == XIM_STRING) {
X  	    ret_len = nbytes;
***************
*** 213,219 ****
X      char		*ptr;
X      int			ret_len;
X  
!     if (ev->keycode > ev->display->max_keycode) {
X  	_XipGetNextICQueue(ic, &type, &length, keysym, &ptr);
X  	if (type == XIM_STRING) {
X  	    if (length > nbytes) {
--- 213,219 ----
X      char		*ptr;
X      int			ret_len;
X  
!     if (ev->keycode == 0) {
X  	_XipGetNextICQueue(ic, &type, &length, keysym, &ptr);
X  	if (type == XIM_STRING) {
X  	    if (length > nbytes) {
*** /tmp/d16272	Sun May  3 18:39:06 1992
--- mit/lib/X/Xsi/XInitCT.c	Sun May  3 18:39:03 1992
***************
*** 1,5 ****
X  /*
!  * $XConsortium: XInitCT.c,v 1.17 92/03/03 10:02:52 rws Exp $
X   */
X  
X  /*
--- 1,5 ----
X  /*
!  * $XConsortium: XInitCT.c,v 1.18 92/04/14 15:55:19 rws Exp $
X   */
X  
X  /*
***************
*** 378,386 ****
X      ctSetid(xlocale, id);
X      return(True);
X  }
- #endif
X  
- #ifdef not_use
X  int
X  _XcwNameGetLength(state_name, GLorGR)
X      char       *state_name;
--- 378,384 ----
***************
*** 446,451 ****
--- 444,475 ----
X      return(ND);
X  }
X  
+ static _CSID
+ _XcwEscGetIdFromLocale(xlocale, state_encoding)
+     XLocale	 xlocale;
+     char	*state_encoding;
+ {
+     Fontset			*fontset;
+     _CSID                       id;
+     char			esc[128];
+ 
+     if(!xlocale && !xlocale->xlc_db && !xlocale->xlc_db->lc_fontset) {
+ 	return (_XcwEscGetId(state_encoding));
+     }
+     fontset = xlocale->xlc_db->lc_fontset;
+ 
+     if(state_encoding[1] == 0x25) {
+ 	strcpy(esc, state_encoding);
+ 	esc[4] = '0'; esc[5] = '0';	/* mask length */
+ 	state_encoding = esc;
+     }
+     for (id = 0; id < fontset->fs_num; id++) {
+         if (!strcmp(state_encoding, fontset->fs_cset[id]->cs_des))
+ 	    return(fontset->fs_cset[id]->cs_id);
+         }
+     return (_XcwEscGetId(state_encoding));
+ }
+ 
X  Bool
X  _XcwEscSetStatus(xlocale, state_encoding)
X      XLocale	 xlocale;
***************
*** 452,458 ****
X      char	*state_encoding;
X  {
X      _CSID	id;
!     if((id = _XcwEscGetId(state_encoding)) == ND)
X  	return(False);
X      ctSetGLorGR(xlocale, ISOStateTable[id].GLorGR);
X      ctSetid(xlocale, id);
--- 476,482 ----
X      char	*state_encoding;
X  {
X      _CSID	id;
!     if((id = _XcwEscGetIdFromLocale(xlocale, state_encoding)) == ND)
X  	return(False);
X      ctSetGLorGR(xlocale, ISOStateTable[id].GLorGR);
X      ctSetid(xlocale, id);
***************
*** 467,473 ****
X      wchar	*woffset;
X  {
X      _CSID	id;
!     if((id = _XcwEscGetId(state_encoding)) == ND)
X  	return(False);
X      ctSetGLorGR(xlocale, ISOStateTable[id].GLorGR);
X      ctSetid(xlocale, id);
--- 491,497 ----
X      wchar	*woffset;
X  {
X      _CSID	id;
!     if((id = _XcwEscGetIdFromLocale(xlocale, state_encoding)) == ND)
X  	return(False);
X      ctSetGLorGR(xlocale, ISOStateTable[id].GLorGR);
X      ctSetid(xlocale, id);
***************
*** 572,577 ****
--- 596,631 ----
X          }
X      }
X      return(ind);
+ }
+ 
+ _CSID
+ _XcwGetWoffsetFromLocale(xlocale, wc, woffset)
+     XLocale	        xlocale;
+     wchar		wc;
+     wchar	       *woffset;
+ {
+     register wchar              disp_min;
+     _CSID                       id;
+     Fontset			*fontset;
+ 
+     if(!xlocale && !xlocale->xlc_db && !xlocale->xlc_db->lc_fontset) {
+ 	*woffset = 0;
+ 	return (_XcwGetWoffset(wc, woffset));
+     }
+ 
+     fontset = xlocale->xlc_db->lc_fontset;
+     wc &= ~0x7f;
+     for (id = 0; id < fontset->fs_num; id++) {
+ 	if (fontset->fs_cset[id]->cs_len == 2)
+ 	    disp_min = PosSub(wc & ~0x7f00, fontset->fs_cset[id]->cs_woff);
+ 	else
+ 	    disp_min = PosSub(wc, fontset->fs_cset[id]->cs_woff);
+ 	if (disp_min < 0x80) {
+ 	    *woffset = fontset->fs_cset[id]->cs_woff;
+ 	    return(fontset->fs_cset[id]->cs_id);
+ 	}
+     }
+     return (_XcwGetWoffset(wc, woffset));
X  #undef PosSub
X  }
X  
***************
*** 611,618 ****
X  {
X      _CSID		id;
X  
!     id = _XcwGetWoffset(wc, woffset);
!     if(id == ND)
X  	return;
X  
X      ctSetGLorGR(xlocale, ISOStateTable[id].GLorGR);
--- 665,671 ----
X  {
X      _CSID		id;
X  
!     if ((id = _XcwGetWoffsetFromLocale(xlocale, wc, woffset)) == ND)
X  	return;
X  
X      ctSetGLorGR(xlocale, ISOStateTable[id].GLorGR);
***************
*** 645,652 ****
X      wchar	woffset;
X      _CSID	id;
X  
!     id = _XcwGetWoffset(wc, &woffset);
!     if(id == ND)
X  	return;
X      
X      if (ISOStateTable[id].GLorGR == GL)
--- 698,704 ----
X      wchar	woffset;
X      _CSID	id;
X  
!     if ((id = _XcwGetWoffsetFromLocale(xlocale, wc, woffset)) == ND)
X  	return;
X      
X      if (ISOStateTable[id].GLorGR == GL)
*** /tmp/d16358	Sun May  3 18:39:53 1992
--- mit/lib/X/Xsi/XlcLoad.c	Sun May  3 18:39:50 1992
***************
*** 1,5 ****
X  /*
!  * $XConsortium: XlcLoad.c,v 1.40 91/12/23 11:37:03 rws Exp $
X   */
X  
X  /*
--- 1,5 ----
X  /*
!  * $XConsortium: XlcLoad.c,v 1.41 92/04/14 15:53:03 rws Exp $
X   */
X  
X  /*
***************
*** 873,879 ****
X  		fprintf(stderr, "Xlib: bad format locale file: %s\n", fn);
X  	    if (lastBadLCName)
X  		Xfree(lastBadLCName);
! 	    if (lastBadLCName = Xmalloc(strlen(lc_name)))
X  		strcpy(lastBadLCName, lc_name);
X  	}
X      }
--- 873,879 ----
X  		fprintf(stderr, "Xlib: bad format locale file: %s\n", fn);
X  	    if (lastBadLCName)
X  		Xfree(lastBadLCName);
! 	    if (lastBadLCName = Xmalloc(strlen(lc_name) + 1))
X  		strcpy(lastBadLCName, lc_name);
X  	}
X      }
*** /tmp/d16464	Sun May  3 18:40:49 1992
--- mit/lib/X/Xsi/XwcDeGlyph.c	Sun May  3 18:40:46 1992
***************
*** 1,5 ****
X  /*
!  * $XConsortium: XwcDeGlyph.c,v 1.15 91/11/17 16:29:59 rws Exp $
X   */
X  
X  /*
--- 1,5 ----
X  /*
!  * $XConsortium: XwcDeGlyph.c,v 1.16 92/04/14 15:55:31 rws Exp $
X   */
X  
X  /*
***************
*** 111,117 ****
X  		*ctid = ctGetid(xlocale);
X  	    newwoffset = woffset;
X  	} else {
!             if(_XcwGetWoffset(wc, &newwoffset) == ND) { /* MUST not change Status */
X  		/* XXX BUG: need to check designate sequence of default string.
X  		   But current default string is NULL, so OK. :-) */
X  		for (i = 0; *(defstr + i) != 0; i++) {
--- 111,117 ----
X  		*ctid = ctGetid(xlocale);
X  	    newwoffset = woffset;
X  	} else {
!             if(_XcwGetWoffsetFromLocale(xlocale, wc, &newwoffset) == ND) { /* MUST not change Status */
X  		/* XXX BUG: need to check designate sequence of default string.
X  		   But current default string is NULL, so OK. :-) */
X  		for (i = 0; *(defstr + i) != 0; i++) {
*** /tmp/d16592	Sun May  3 18:41:53 1992
--- mit/lib/X/Xsi/Xi18nint.h	Sun May  3 18:41:51 1992
***************
*** 1,5 ****
X  /*
!  * $XConsortium: Xi18nint.h,v 1.18 91/11/17 15:59:13 rws Exp $
X   */
X  
X  /*
--- 1,5 ----
X  /*
!  * $XConsortium: Xi18nint.h,v 1.19 92/04/14 15:45:50 rws Exp $
X   */
X  
X  /*
***************
*** 154,163 ****
X  #endif	/* !NO_LOCAL_IM */
X  
X  #ifdef	XML
! #define ICUsingLanguage		26
! #define ICCurrentLanguage	27
! #define ICChangeLocaleCB	28
! #define ICAllMask		0x1fffffff
X  #else	/* XML */
X  #define	ICAllMask		0x03ffffff
X  #endif	/* XML */
--- 154,163 ----
X  #endif	/* !NO_LOCAL_IM */
X  
X  #ifdef	XML
! #define ICUsingLanguage		28
! #define ICCurrentLanguage	29
! #define ICChangeLocaleCB	30
! #define ICAllMask		0x73ffffff
X  #else	/* XML */
X  #define	ICAllMask		0x03ffffff
X  #endif	/* XML */
***************
*** 393,398 ****
--- 393,404 ----
X  extern int _XipwcLookupString(
X  #if NeedFunctionPrototypes
X  	XIC, XKeyEvent*, wchar_t*, int, KeySym*, Status*
+ #endif
+ );
+ 
+ extern unsigned long _XipReadRdb(
+ #if NeedFunctionPrototypes
+ 	Display*, XipIC, unsigned long, XrmDatabase, char*, char*
X  #endif
X  );
X  
*** /tmp/d16614	Sun May  3 18:42:06 1992
--- mit/lib/X/Xsi/Xlocaleint.h	Sun May  3 18:42:03 1992
***************
*** 1,5 ****
X  /*
!  * $XConsortium: Xlocaleint.h,v 1.34 91/11/17 16:11:44 rws Exp $
X   */
X  
X  /*
--- 1,5 ----
X  /*
!  * $XConsortium: Xlocaleint.h,v 1.35 92/04/14 15:55:37 rws Exp $
X   */
X  
X  /*
***************
*** 294,300 ****
X  extern _CSID		_XcwNameGetGLorGRId();
X  extern void             _XcwGetAll();
X  extern void		_XcwGetDefaultEncoding();
! extern _CSID		_XcwGetWoffset();
X  extern Bool             _XcwCheckDefaultState();
X  extern Bool		_XmbCheck();
X  extern Bool		_XcwIdCheck();
--- 294,300 ----
X  extern _CSID		_XcwNameGetGLorGRId();
X  extern void             _XcwGetAll();
X  extern void		_XcwGetDefaultEncoding();
! extern _CSID		_XcwGetWoffsetFromLocale();
X  extern Bool             _XcwCheckDefaultState();
X  extern Bool		_XmbCheck();
X  extern Bool		_XcwIdCheck();
*** /tmp/d16678	Sun May  3 18:42:39 1992
--- mit/lib/X/Xsi/XLocalIM.c	Sun May  3 18:42:36 1992
***************
*** 1,5 ****
X  /*
!  * $XConsortium: XLocalIM.c,v 1.8 91/12/27 15:12:20 rws Exp $
X   */
X  
X  /*
--- 1,5 ----
X  /*
!  * $XConsortium: XLocalIM.c,v 1.9 92/04/24 16:15:02 rws Exp $
X   */
X  
X  /*
***************
*** 890,896 ****
X      if (xcvt->cnt == 0)
X  	return(False);
X  
!     if (ev->xkey.keycode == (display->max_keycode + 1)) {
X  	if (_XipTypeOfNextICQueue((XipIC)ic) == XIM_KEYSYM){
X  	    if ((keycode = XKeysymToKeycode(display,
X  			    _XipKeySymOfNextICQueue((XipIC)ic))) != 0
--- 890,896 ----
X      if (xcvt->cnt == 0)
X  	return(False);
X  
!     if (ev->xkey.keycode == 0) {
X  	if (_XipTypeOfNextICQueue((XipIC)ic) == XIM_KEYSYM){
X  	    if ((keycode = XKeysymToKeycode(display,
X  			    _XipKeySymOfNextICQueue((XipIC)ic))) != 0
***************
*** 932,938 ****
X      bcopy((char *)ev, (char *)&dummy_ev, sizeof(XEvent));
X      dummy_ev.type = KeyPress;
X      dummy_ev.xkey.state = 0;
!     dummy_ev.xkey.keycode = display->max_keycode + 1;
X  
X      if (xcvt->off == True) {
X  	if ((c = off_key_check(xcvt)) == 0) {
--- 932,938 ----
X      bcopy((char *)ev, (char *)&dummy_ev, sizeof(XEvent));
X      dummy_ev.type = KeyPress;
X      dummy_ev.xkey.state = 0;
!     dummy_ev.xkey.keycode = 0;
X  
X      if (xcvt->off == True) {
X  	if ((c = off_key_check(xcvt)) == 0) {
***************
*** 954,960 ****
X  	       return(False);
X  	}
X  	ev->xkey.state = 0;
! 	ev->xkey.keycode = display->max_keycode + 1;
X  	if ((keycode = XKeysymToKeycode(display,
X  				_XipKeySymOfNextICQueue((XipIC)ic))) != 0
X  	    && _XipStringOfNextICQueue((XipIC)ic) == NULL) {
--- 954,960 ----
X  	       return(False);
X  	}
X  	ev->xkey.state = 0;
! 	ev->xkey.keycode = 0;
X  	if ((keycode = XKeysymToKeycode(display,
X  				_XipKeySymOfNextICQueue((XipIC)ic))) != 0
X  	    && _XipStringOfNextICQueue((XipIC)ic) == NULL) {
***************
*** 984,990 ****
X  	       return(False);
X  	}
X  	ev->xkey.state = 0;
! 	ev->xkey.keycode = display->max_keycode + 1;
X  	if ((keycode = XKeysymToKeycode(display,
X  				_XipKeySymOfNextICQueue((XipIC)ic))) != 0
X  	    && _XipStringOfNextICQueue((XipIC)ic) == NULL) {
--- 984,990 ----
X  	       return(False);
X  	}
X  	ev->xkey.state = 0;
! 	ev->xkey.keycode = 0;
X  	if ((keycode = XKeysymToKeycode(display,
X  				_XipKeySymOfNextICQueue((XipIC)ic))) != 0
X  	    && _XipStringOfNextICQueue((XipIC)ic) == NULL) {
*** /tmp/d16789	Sun May  3 18:43:40 1992
--- mit/lib/X/Ximp/XimpLCUtil.c	Sun May  3 18:43:38 1992
***************
*** 1,7 ****
! /* $XConsortium: XimpLCUtil.c,v 1.6 91/10/07 17:48:57 rws Exp $ */
X  /*
!  * Copyright 1990, 1991 by TOSHIBA Corp.
!  * Copyright 1990, 1991 by SORD Computer Corp.
X   *
X   * Permission to use, copy, modify, distribute, and sell this software and its
X   * documentation for any purpose is hereby granted without fee, provided that
--- 1,7 ----
! /* $XConsortium: XimpLCUtil.c,v 1.7 92/04/14 13:29:21 rws Exp $ */
X  /*
!  * Copyright 1990, 1991, 1992 by TOSHIBA Corp.
!  * Copyright 1990, 1991, 1992 by SORD Computer Corp.
X   *
X   * Permission to use, copy, modify, distribute, and sell this software and its
X   * documentation for any purpose is hereby granted without fee, provided that
***************
*** 28,34 ****
X  
X  /******************************************************************
X  
!               Copyright 1991, by FUJITSU LIMITED
X  
X  Permission to use, copy, modify, distribute, and sell this software
X  and its documentation for any purpose is hereby granted without fee,
--- 28,34 ----
X  
X  /******************************************************************
X  
!               Copyright 1991, 1992 by FUJITSU LIMITED
X  
X  Permission to use, copy, modify, distribute, and sell this software
X  and its documentation for any purpose is hereby granted without fee,
***************
*** 84,90 ****
X      GR_ENCODING,
X      LENGTH,
X      NAME,
!     STRING,
X  } keyword_value;
X  
X  typedef struct KeywordRec {
--- 84,90 ----
X      GR_ENCODING,
X      LENGTH,
X      NAME,
!     STRING
X  } keyword_value;
X  
X  typedef struct KeywordRec {
*** /tmp/d16811	Sun May  3 18:43:52 1992
--- mit/lib/X/Ximp/XIMProto.h	Sun May  3 18:43:49 1992
***************
*** 1,7 ****
! /* $XConsortium: XIMProto.h,v 1.4 91/10/10 20:41:32 rws Exp $ */
X  /******************************************************************
X  
!               Copyright 1991, by FUJITSU LIMITED
X  
X  Permission to use, copy, modify, distribute, and sell this software
X  and its documentation for any purpose is hereby granted without fee,
--- 1,7 ----
! /* $XConsortium: XIMProto.h,v 1.5 92/04/14 13:28:34 rws Exp $ */
X  /******************************************************************
X  
!               Copyright 1991, 1992 by FUJITSU LIMITED
X  
X  Permission to use, copy, modify, distribute, and sell this software
X  and its documentation for any purpose is hereby granted without fee,
***************
*** 28,34 ****
X  ******************************************************************/
X  
X  /* Ximp implementation revision */
! #define XIMP_REVISION "Ximp Revision 3.1"
X  
X  /* Ximp Protocol Version */
X  #define XIMP_PROTOCOL_VERSION "XIMP.3.5"
--- 28,34 ----
X  ******************************************************************/
X  
X  /* Ximp implementation revision */
! #define XIMP_REVISION "Ximp Revision 3.2"
X  
X  /* Ximp Protocol Version */
X  #define XIMP_PROTOCOL_VERSION "XIMP.3.5"
*** /tmp/d16833	Sun May  3 18:44:04 1992
--- mit/lib/X/Ximp/XimpCallbk.c	Sun May  3 18:44:01 1992
***************
*** 1,9 ****
! /* $XConsortium: XimpCallbk.c,v 1.4 91/10/07 17:47:37 rws Exp $ */
X  /******************************************************************
X  
!               Copyright 1991, by Fuji Xerox Co.,Ltd.
!               Copyright 1991, by FUJITSU LIMITED
!               Copyright 1991, by Sun Microsystems, Inc.
X  
X  Permission to use, copy, modify, distribute, and sell this software
X  and its documentation for any purpose is hereby granted without fee,
--- 1,9 ----
! /* $XConsortium: XimpCallbk.c,v 1.5 92/04/14 13:28:40 rws Exp $ */
X  /******************************************************************
X  
!               Copyright 1991, 1992 by Fuji Xerox Co.,Ltd.
!               Copyright 1991, 1992 by FUJITSU LIMITED
!               Copyright 1991, 1992 by Sun Microsystems, Inc.
X  
X  Permission to use, copy, modify, distribute, and sell this software
X  and its documentation for any purpose is hereby granted without fee,
***************
*** 29,36 ****
X                                 kaz@ssdev.ksp.fujixerox.co.jp
X            Takashi Fujiwara     FUJITSU LIMITED
X                                 fujiwara@a80.tech.yk.fujitsu.co.jp
! 	  Hideki Hiura         hhiura@Sun.COM
! 	  		       Sun Microsystems, Inc.
X  ******************************************************************/
X  
X  #define NEED_EVENTS
--- 29,36 ----
X                                 kaz@ssdev.ksp.fujixerox.co.jp
X            Takashi Fujiwara     FUJITSU LIMITED
X                                 fujiwara@a80.tech.yk.fujitsu.co.jp
!           Hideki Hiura         Sun Microsystems, Inc.
!                                hhiura@Sun.COM
X  ******************************************************************/
X  
X  #define NEED_EVENTS
***************
*** 42,47 ****
--- 42,48 ----
X  
X  #define XIMP_MAXBUF	256
X  
+ extern void	_Ximp_IM_SendMessage();
X  
X  void
X  _Ximp_CallGeometryCallback(xic, event)
***************
*** 62,87 ****
X      XClientMessageEvent *event;
X  {
X      register XIMCallback *cb;
!     static XClientMessageEvent clmsg;
X  
-     clmsg.type = ClientMessage;
-     clmsg.display = xic->core.im->core.display;
-     clmsg.window = ((Ximp_XIM) xic->core.im)->ximp_impart->fe_window;
-     clmsg.message_type = ((Ximp_XIM) xic->core.im)->ximp_impart->improtocol_id;
-     clmsg.format = 32;
-     clmsg.data.l[0] = XIMP_PREEDITSTART_RETURN;
-     clmsg.data.l[1] = xic->ximp_icpart->icid;
X      cb = &xic->core.preedit_attr.callbacks.start;
X      if (cb->callback) {
! 	clmsg.data.l[2] = (*(int (*) ()) cb->callback) (xic, cb->client_data, NULL);
X  
X      } else {
! 	clmsg.data.l[2] = -1;
X      }
!     XSendEvent(xic->core.im->core.display,
! 	       ((Ximp_XIM) xic->core.im)->ximp_impart->fe_window,
! 	       False, NoEventMask, (XEvent *) & clmsg);
!     XFlush(xic->core.im->core.display);
X  }
X  
X  void
--- 63,78 ----
X      XClientMessageEvent *event;
X  {
X      register XIMCallback *cb;
!              int          data;
X  
X      cb = &xic->core.preedit_attr.callbacks.start;
X      if (cb->callback) {
! 	data = (*(int (*) ()) cb->callback) (xic, cb->client_data, NULL);
X  
X      } else {
! 	data = -1;
X      }
!     _Ximp_IM_SendMessage(xic, XIMP_PREEDITSTART_RETURN, data, NULL, NULL);
X  }
X  
X  void
***************
*** 513,536 ****
X  
X      cb = &xic->core.preedit_attr.callbacks.caret;
X      if (cb->callback) {
- 	static XClientMessageEvent clmsg;
X  	CallData.position = event->data.l[2];
X  	CallData.direction = ToXIMCaretDirection(event->data.l[3]);
X  	CallData.style = ToXIMCaretStyle(event->data.l[4]);
X  	(*cb->callback) (xic, cb->client_data, &CallData);
- 	clmsg.type = ClientMessage;
- 	clmsg.display = xic->core.im->core.display;
- 	clmsg.window = ((Ximp_XIM) xic->core.im)->ximp_impart->fe_window;
- 	clmsg.message_type = ((Ximp_XIM) xic->core.im)->ximp_impart->improtocol_id;
- 	clmsg.format = 32;
- 	clmsg.data.l[0] = XIMP_PREEDITCARET_RETURN;
- 	clmsg.data.l[1] = xic->ximp_icpart->icid;
- 	clmsg.data.l[2] = CallData.position;;
X  
! 	XSendEvent(xic->core.im->core.display,
! 		   ((Ximp_XIM) xic->core.im)->ximp_impart->fe_window,
! 		   False, NoEventMask, &clmsg);
! 	XFlush(xic->core.im->core.display);
X      }
X  }
X  
--- 504,516 ----
X  
X      cb = &xic->core.preedit_attr.callbacks.caret;
X      if (cb->callback) {
X  	CallData.position = event->data.l[2];
X  	CallData.direction = ToXIMCaretDirection(event->data.l[3]);
X  	CallData.style = ToXIMCaretStyle(event->data.l[4]);
X  	(*cb->callback) (xic, cb->client_data, &CallData);
X  
!         _Ximp_IM_SendMessage(xic, XIMP_PREEDITCARET_RETURN,
! 				CallData.position, NULL, NULL);
X      }
X  }
X  
*** /tmp/d16855	Sun May  3 18:44:17 1992
--- mit/lib/X/Ximp/XimpConv.c	Sun May  3 18:44:14 1992
***************
*** 1,7 ****
! /* $XConsortium: XimpConv.c,v 1.5 91/10/07 17:47:44 rws Exp $ */
X  /*
!  * Copyright 1990, 1991 by TOSHIBA Corp.
!  * Copyright 1990, 1991 by SORD Computer Corp.
X   *
X   * Permission to use, copy, modify, distribute, and sell this software and its
X   * documentation for any purpose is hereby granted without fee, provided that
--- 1,7 ----
! /* $XConsortium: XimpConv.c,v 1.6 92/04/14 13:28:45 rws Exp $ */
X  /*
!  * Copyright 1990, 1991, 1992 by TOSHIBA Corp.
!  * Copyright 1990, 1991, 1992 by SORD Computer Corp.
X   *
X   * Permission to use, copy, modify, distribute, and sell this software and its
X   * documentation for any purpose is hereby granted without fee, provided that
***************
*** 28,34 ****
X  
X  /******************************************************************
X  
!               Copyright 1991, by FUJITSU LIMITED
X  
X  Permission to use, copy, modify, distribute, and sell this software
X  and its documentation for any purpose is hereby granted without fee,
--- 28,34 ----
X  
X  /******************************************************************
X  
!               Copyright 1991, 1992 by FUJITSU LIMITED
X  
X  Permission to use, copy, modify, distribute, and sell this software
X  and its documentation for any purpose is hereby granted without fee,
*** /tmp/d16877	Sun May  3 18:44:29 1992
--- mit/lib/X/Ximp/XimpCrFS.c	Sun May  3 18:44:26 1992
***************
*** 1,7 ****
! /* $XConsortium: XimpCrFS.c,v 1.5 91/10/07 17:47:50 rws Exp $ */
X  /*
!  * Copyright 1990, 1991 by TOSHIBA Corp.
!  * Copyright 1990, 1991 by SORD Computer Corp.
X   *
X   * Permission to use, copy, modify, distribute, and sell this software and its
X   * documentation for any purpose is hereby granted without fee, provided that
--- 1,7 ----
! /* $XConsortium: XimpCrFS.c,v 1.6 92/04/14 13:28:48 rws Exp $ */
X  /*
!  * Copyright 1990, 1991, 1992 by TOSHIBA Corp.
!  * Copyright 1990, 1991, 1992 by SORD Computer Corp.
X   *
X   * Permission to use, copy, modify, distribute, and sell this software and its
X   * documentation for any purpose is hereby granted without fee, provided that
***************
*** 29,35 ****
X  
X  /******************************************************************
X  
!               Copyright 1991, by FUJITSU LIMITED
X  
X  Permission to use, copy, modify, distribute, and sell this software
X  and its documentation for any purpose is hereby granted without fee,
--- 29,35 ----
X  
X  /******************************************************************
X  
!               Copyright 1991, 1992 by FUJITSU LIMITED
X  
X  Permission to use, copy, modify, distribute, and sell this software
X  and its documentation for any purpose is hereby granted without fee,
*** /tmp/d16899	Sun May  3 18:44:41 1992
--- mit/lib/X/Ximp/XimpIC.c	Sun May  3 18:44:39 1992
***************
*** 1,7 ****
! /* $XConsortium: XimpIC.c,v 1.5 92/03/03 11:03:14 rws Exp $ */
X  /******************************************************************
X  
!               Copyright 1991, by FUJITSU LIMITED
X  
X  Permission to use, copy, modify, distribute, and sell this software
X  and its documentation for any purpose is hereby granted without fee,
--- 1,8 ----
! /* $XConsortium: XimpIC.c,v 1.6 92/04/14 13:29:06 rws Exp $ */
X  /******************************************************************
X  
!               Copyright 1991, 1992 by FUJITSU LIMITED
!               Copyright 1991, 1992 by Sony Corporation
X  
X  Permission to use, copy, modify, distribute, and sell this software
X  and its documentation for any purpose is hereby granted without fee,
***************
*** 8,29 ****
X  provided that the above copyright notice appear in all copies and
X  that both that copyright notice and this permission notice appear
X  in supporting documentation, and that the name of FUJITSU LIMITED
! not be used in advertising or publicity pertaining to distribution
! of the software without specific, written prior permission.
! FUJITSU LIMITED makes no representations about the suitability of
! this software for any purpose.  It is provided "as is" without
! express or implied warranty.
X  
! FUJITSU LIMITED DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE,
! INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS,
! IN NO EVENT SHALL FUJITSU LIMITED BE LIABLE FOR ANY SPECIAL, INDIRECT
! OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS
! OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE
! OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE
! OR PERFORMANCE OF THIS SOFTWARE.
X  
X    Author: Takashi Fujiwara     FUJITSU LIMITED 
!                                fujiwara@a80.tech.yk.fujitsu.co.jp
X  
X  ******************************************************************/
X  
--- 9,32 ----
X  provided that the above copyright notice appear in all copies and
X  that both that copyright notice and this permission notice appear
X  in supporting documentation, and that the name of FUJITSU LIMITED
! and Sony Corporation not be used in advertising or publicity
! pertaining to distribution of the software without specific,
! written prior permission.
! FUJITSU LIMITED and Sony Corporation make no representations about
! the suitability of this software for any purpose.  It is provided
! "as is" without express or implied warranty.
X  
! FUJITSU LIMITED AND SONY CORPORATION DISCLAIM ALL WARRANTIES WITH
! REGARD TO THIS SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES OF
! MERCHANTABILITY AND FITNESS, IN NO EVENT SHALL FUJITSU LIMITED AND
! SONY CORPORATION BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL
! DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA
! OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER
! TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
! PERFORMANCE OF THIS SOFTWARE.
X  
X    Author: Takashi Fujiwara     FUJITSU LIMITED 
!           Makoto Wakamatsu     Sony Corporation
X  
X  ******************************************************************/
X  
***************
*** 53,71 ****
X  extern void		_Ximp_SetPreeditFont();
X  extern void		_Ximp_SetStatusAtr();
X  extern void		_Ximp_SetStatusFont();
X  extern Bool		_Ximp_XimFilter_Client();
X  
X  static void 		_Ximp_AttributesSetL();
X  extern void 		_Ximp_IM_SendMessage();
X  
- #if NeedFunctionPrototypes
- extern Bool _Ximp_XimFilter_Keypress (
- 	Display *d, 
- 	Window w, 
- 	XEvent *ev, 
- 	XPointer client_data);
- #endif
- 
X  static XICMethodsRec Ximp_ic_methods = {
X  				_Ximp_DestroyIC, 	/* destroy */
X  				_Ximp_SetFocus,  	/* set_focus */
--- 56,67 ----
X  extern void		_Ximp_SetPreeditFont();
X  extern void		_Ximp_SetStatusAtr();
X  extern void		_Ximp_SetStatusFont();
+ extern Bool		_Ximp_XimFilter_Keypress();
X  extern Bool		_Ximp_XimFilter_Client();
X  
X  static void 		_Ximp_AttributesSetL();
X  extern void 		_Ximp_IM_SendMessage();
X  
X  static XICMethodsRec Ximp_ic_methods = {
X  				_Ximp_DestroyIC, 	/* destroy */
X  				_Ximp_SetFocus,  	/* set_focus */
***************
*** 78,97 ****
X  				_Ximp_WcLookupString,	/* wc_lookup_string */
X  				};
X  
- Bool
- _Ximp_XimFilter_Keypress (d, w, ev, client_data)
- 	Display		*d;
- 	Window		w;
- 	XEvent		*ev;
- 	XPointer	client_data;
- {
- 	extern Bool	_Ximp_Keypress ();
- 
- 	return(_Ximp_Keypress (d, w, ev, client_data));
- }
- 
- static Ximp_XIC		current_xic = 0;
- 
X  XIC
X  _Ximp_CreateIC(im, values)
X  	XIM		 im;
--- 74,79 ----
***************
*** 117,123 ****
X  	ic->core.filter_events = KeyPressMask | KeyReleaseMask | StructureNotifyMask;
X  
X  	ic->ximp_icpart = ximp_icpart;
! 	_Ximp_SetICValueData(ic, values, XIMP_CREATE_IC, &dummy);
X  
X  	/* The Value must be set */
X  	if(!(ximp_icpart->value_mask & XIMP_INPUT_STYLE)) /* Input Style */
--- 99,106 ----
X  	ic->core.filter_events = KeyPressMask | KeyReleaseMask | StructureNotifyMask;
X  
X  	ic->ximp_icpart = ximp_icpart;
! 	if(_Ximp_SetICValueData(ic, values, XIMP_CREATE_IC, &dummy))
! 		goto Set_Error;
X  
X  	/* The Value must be set */
X  	if(!(ximp_icpart->value_mask & XIMP_INPUT_STYLE)) /* Input Style */
***************
*** 132,154 ****
X  	if(ic->core.input_style & XIMStatusArea)
X  		if(!(ximp_icpart->proto_mask & XIMP_STS_FONT_MASK)) /* FontSet */
X  			goto Set_Error;
! 	if(!(ximp_icpart->value_mask & XIMP_CLIENT_WIN)) /* Client Window */
! 		goto Set_Error;
X  	
X  	_Ximp_SetValue_Resource(ic, &dummy);
X  
! 	if(((Ximp_XIM)im)->ximp_impart->inputserver) {
! 		if(_Ximp_SetOpenXIMP(ic) == False)
X  			goto Set_Error;
X  	}
- 	if (!current_xic) {
- 		_XRegisterFilterByType (ic->core.im->core.display,
- 				ic->core.focus_window,
- 				KeyPress, KeyPress,
- 				_Ximp_XimFilter_Keypress,
- 				(XPointer)ic);
- 		current_xic = ic;
- 	}
X  	return((XIC)ic);
X  
X     Set_Error :
--- 115,143 ----
X  	if(ic->core.input_style & XIMStatusArea)
X  		if(!(ximp_icpart->proto_mask & XIMP_STS_FONT_MASK)) /* FontSet */
X  			goto Set_Error;
! 	if(ic->core.input_style & XIMPreeditCallbacks)
! 		if(!(ximp_icpart->value_mask & XIMP_PRE_CALLBAK)) /* Preedit Callback */
! 			goto Set_Error;
! 	if(ic->core.input_style & XIMStatusCallbacks)
! 		if(!(ximp_icpart->value_mask & XIMP_STS_CALLBAK)) /* Status Callback */
! 			goto Set_Error;
X  	
X  	_Ximp_SetValue_Resource(ic, &dummy);
X  
! 	if(((Ximp_XIM)im)->ximp_impart->inputserver ||
! 	   ((Ximp_XIM)im)->ximp_impart->connectserver) {
! 		if(_Ximp_SetOpenXIMP(ic, XIMP_CREATE_IC) == False)
X  			goto Set_Error;
+ 	} else {
+ 		if(ic->ximp_icpart->proto_mask & XIMP_FOCUS_WIN_MASK) {
+ 			_XRegisterFilterByType (ic->core.im->core.display,
+ 						ic->core.focus_window,
+ 						KeyPress, KeyPress,
+ 						_Ximp_XimFilter_Keypress,
+ 						(XPointer)ic);
+ 			ic->ximp_icpart->filter_mode |= 0x1;
+ 		}
X  	}
X  	return((XIC)ic);
X  
X     Set_Error :
***************
*** 161,176 ****
X  _Ximp_DestroyIC(ic)
X  	Ximp_XIC	 ic;
X  {
! 	if(ic->ximp_icpart->icid) {
!  		_Ximp_IM_SendMessage(ic, XIMP_DESTROY, NULL, NULL, NULL);
! 		if (current_xic) {
! 			_XUnregisterFilter (ic->core.im->core.display,
! 					ic->core.focus_window,
! 					_Ximp_XimFilter_Keypress,
! 					(XPointer)current_xic);
! 			current_xic = 0;
! 		}
X  	}
X  	Xfree(ic->ximp_icpart);
X  	return;
X  }
--- 150,167 ----
X  _Ximp_DestroyIC(ic)
X  	Ximp_XIC	 ic;
X  {
! 	if(ic->ximp_icpart->filter_mode & 0x1) {
! 		_XUnregisterFilter (ic->core.im->core.display,
! 				ic->core.focus_window,
! 				_Ximp_XimFilter_Keypress,
! 				(XPointer)ic);
X  	}
+ 	if(ic->ximp_icpart->filter_mode & 0x2) {
+ 		_XUnregisterFilter(ic->core.im->core.display,
+ 				   ic->ximp_icpart->back_focus_win,
+ 				   _Ximp_XimFilter_Client, (XPointer)NULL);
+ 	}
+  	_Ximp_IM_SendMessage(ic, XIMP_DESTROY, NULL, NULL, NULL);
X  	Xfree(ic->ximp_icpart);
X  	return;
X  }
***************
*** 179,197 ****
X  _Ximp_SetFocus(ic)
X  	Ximp_XIC	ic;
X  {
! 	if (ic->ximp_icpart->icid) {
!  		_Ximp_IM_SendMessage(ic, XIMP_SETFOCUS, NULL, NULL, NULL);
SHAR_EOF
true || echo 'restore of fix-12 failed'
fi
echo 'End of  part 1'
echo 'File fix-12 is continued in part 2'
echo 2 > _shar_seq_.tmp
exit 0
-- 
---
Senior Systems Scientist		mail: dcmartin@msi.com
Molecular Simulations, Inc.		uucp: uunet!dcmartin
796 North Pastoria Avenue		at&t: 408/522-9236
