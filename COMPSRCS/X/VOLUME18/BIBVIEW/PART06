Path: uunet!dtix!darwin.sura.net!mips!msi!dcmartin
From: liebla@informatik.tu-muenchen.de (Armin Liebl)
Newsgroups: comp.sources.x
Subject: v18i104: bibview - BibTeX GUI, Part06/20
Message-ID: <1992Aug27.161449.25403@msi.com>
Date: 27 Aug 92 16:14:49 GMT
References: <csx-18i099-bibview@uunet.UU.NET>
Sender: dcmartin@msi.com (David C. Martin - Moderator)
Organization: Molecular Simulations, Inc.
Lines: 807
Approved: dcmartin@msi.com
Originator: dcmartin@fascet

Submitted-by: Armin Liebl <liebla@informatik.tu-muenchen.de>
Posting-number: Volume 18, Issue 104
Archive-name: bibview/part06

#!/bin/sh
# this is part.06 (part 6 of a multipart archive)
# do not concatenate these parts, unpack them in order with /bin/sh
# file bitmaps/bv_crd64 continued
#
if test ! -r _shar_seq_.tmp; then
	echo 'Please unpack part 1 first!'
	exit 1
fi
(read Scheck
 if test "$Scheck" != 6; then
	echo Please unpack part "$Scheck" next!
	exit 1
 else
	exit 0
 fi
) < _shar_seq_.tmp || exit 1
if test ! -f _shar_wnt_.tmp; then
	echo 'x - still skipping bitmaps/bv_crd64'
else
echo 'x - continuing file bitmaps/bv_crd64'
sed 's/^X//' << 'SHAR_EOF' >> 'bitmaps/bv_crd64' &&
X   0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x10, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x01, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
X   0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x10, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x01, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
X   0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x10, 0x78, 0xee, 0x89,
X   0xee, 0x0b, 0x02, 0x01, 0x10, 0x88, 0x24, 0x8a, 0x24, 0x08, 0x02, 0x01,
X   0x10, 0x88, 0x24, 0x8a, 0x24, 0x08, 0x02, 0x01, 0x10, 0x78, 0xe4, 0x89,
X   0xe4, 0x09, 0x02, 0x01, 0x10, 0xf8, 0xe4, 0x53, 0xe4, 0x49, 0x02, 0x01,
X   0x10, 0x88, 0x24, 0x52, 0x24, 0xa8, 0x02, 0x01, 0x10, 0x88, 0x24, 0x52,
X   0x24, 0xa8, 0x02, 0x01, 0x10, 0x78, 0xee, 0x21, 0xee, 0x13, 0x01, 0x01,
X   0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x10, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x01, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
X   0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x10, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x01, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
X   0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xf0, 0xff, 0xff, 0xff,
X   0xff, 0xff, 0xff, 0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x84, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x42, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x21,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x10, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x40, 0x88, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x44,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x22, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x08, 0x91, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x84, 0x48,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x42, 0xa4};
SHAR_EOF
echo 'File bitmaps/bv_crd64 is complete' &&
chmod 0640 bitmaps/bv_crd64 ||
echo 'restore of bitmaps/bv_crd64 failed'
Wc_c="`wc -c < 'bitmaps/bv_crd64'`"
test 3296 -eq "$Wc_c" ||
	echo 'bitmaps/bv_crd64: original size 3296, current size' "$Wc_c"
rm -f _shar_wnt_.tmp
fi
# ============= bitmaps/bv_ico64 ==============
if test -f 'bitmaps/bv_ico64' -a X"$1" != X"-c"; then
	echo 'x - skipping bitmaps/bv_ico64 (File already exists)'
	rm -f _shar_wnt_.tmp
else
> _shar_wnt_.tmp
echo 'x - extracting bitmaps/bv_ico64 (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'bitmaps/bv_ico64' &&
#define bv_ico64_width 64
#define bv_ico64_height 64
static unsigned char bv_ico64_bits[] = {
X   0x25, 0x42, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x12, 0x21, 0x00, 0xf0,
X   0xdc, 0xf3, 0x01, 0x21, 0x89, 0x10, 0x00, 0x10, 0x49, 0x44, 0x00, 0x12,
X   0x44, 0x08, 0x00, 0x10, 0x49, 0x44, 0x00, 0x0c, 0x22, 0x04, 0x00, 0xf0,
X   0xc8, 0x43, 0x00, 0x0c, 0x11, 0x02, 0x00, 0xf0, 0xc9, 0x47, 0x7c, 0x0c,
X   0x08, 0x01, 0x00, 0x10, 0x49, 0x44, 0x04, 0x0c, 0x84, 0x00, 0x00, 0x10,
X   0x49, 0x44, 0x04, 0x12, 0x42, 0x00, 0x00, 0xf0, 0xdc, 0x43, 0x3c, 0x21,
X   0x21, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x00, 0x10, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x04, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00,
X   0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7c, 0x00, 0x02, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xff, 0x3f, 0x01,
X   0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x20, 0x01, 0x00, 0x00, 0x00, 0x00,
X   0xf0, 0xff, 0x4f, 0x02, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x48, 0xfe,
X   0xff, 0xff, 0xff, 0x0f, 0x10, 0x10, 0x90, 0x00, 0x00, 0x00, 0x00, 0x08,
X   0x10, 0x28, 0x90, 0xff, 0xff, 0xff, 0xff, 0x0b, 0x10, 0x38, 0x20, 0x00,
X   0x00, 0x00, 0x00, 0x0a, 0x1c, 0x44, 0xe0, 0xff, 0xff, 0xff, 0xff, 0x0a,
X   0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x0a, 0x04, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x80, 0x0a, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x0a,
X   0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x0a, 0x04, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x80, 0x0a, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x0a,
X   0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x0a, 0x84, 0xe7, 0x9e, 0xe8,
X   0xbe, 0x20, 0x80, 0x0a, 0x84, 0x48, 0xa2, 0x48, 0x82, 0x20, 0x80, 0x0a,
X   0x84, 0x48, 0xa2, 0x48, 0x82, 0x20, 0x80, 0x0a, 0x84, 0x47, 0x9e, 0x48,
X   0x9e, 0x20, 0x80, 0x0a, 0x84, 0x4f, 0x3e, 0x45, 0x9e, 0x24, 0x80, 0x0a,
X   0x84, 0x48, 0x22, 0x45, 0x82, 0x2a, 0x80, 0x0a, 0x84, 0x48, 0x22, 0x45,
X   0x82, 0x2a, 0x80, 0x0a, 0x84, 0xe7, 0x1e, 0xe2, 0x3e, 0x11, 0x80, 0x0a,
X   0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x0a, 0x04, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x80, 0x0e, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x02,
X   0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x03, 0x04, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x80, 0x00, 0xfc, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x84, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x42, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x21,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x10, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x40, 0x88, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x44,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x22, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x08, 0x91, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x84, 0x48,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x42, 0xa4};
SHAR_EOF
chmod 0640 bitmaps/bv_ico64 ||
echo 'restore of bitmaps/bv_ico64 failed'
Wc_c="`wc -c < 'bitmaps/bv_ico64'`"
test 3296 -eq "$Wc_c" ||
	echo 'bitmaps/bv_ico64: original size 3296, current size' "$Wc_c"
rm -f _shar_wnt_.tmp
fi
# ============= bitmaps/bv_lst64 ==============
if test -f 'bitmaps/bv_lst64' -a X"$1" != X"-c"; then
	echo 'x - skipping bitmaps/bv_lst64 (File already exists)'
	rm -f _shar_wnt_.tmp
else
> _shar_wnt_.tmp
echo 'x - extracting bitmaps/bv_lst64 (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'bitmaps/bv_lst64' &&
#define bv_lst64_width 64
#define bv_lst64_height 64
static unsigned char bv_lst64_bits[] = {
X   0x25, 0x42, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x12, 0x21, 0x00, 0xf0,
X   0xdc, 0xf3, 0x01, 0x21, 0x89, 0x10, 0x00, 0x10, 0x49, 0x44, 0x00, 0x12,
X   0x44, 0x08, 0x00, 0x10, 0x49, 0x44, 0x00, 0x0c, 0x22, 0x04, 0x00, 0xf0,
X   0xc8, 0x43, 0x00, 0x0c, 0x11, 0x02, 0x00, 0xf0, 0xc9, 0x47, 0x7c, 0x0c,
X   0x08, 0x01, 0x00, 0x10, 0x49, 0x44, 0x04, 0x0c, 0x84, 0x00, 0x00, 0x10,
X   0x49, 0x44, 0x04, 0x12, 0x42, 0x00, 0x00, 0xf0, 0xdc, 0x43, 0x3c, 0x21,
X   0x21, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x00, 0x10, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x04, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00,
X   0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7c, 0x00, 0x02, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0x3f, 0x00, 0x80, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x20, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00,
X   0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x40, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x10, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00,
X   0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x10, 0xcf, 0x3d, 0xd1,
X   0x7d, 0x41, 0x04, 0x00, 0x10, 0x91, 0x44, 0x91, 0x04, 0x41, 0x04, 0x00,
X   0x10, 0x91, 0x44, 0x91, 0x04, 0x41, 0x04, 0x00, 0x08, 0x8f, 0x3c, 0x91,
X   0x1c, 0x41, 0x02, 0x00, 0x08, 0x9f, 0x7c, 0x8a, 0x1c, 0x49, 0x02, 0x00,
X   0x08, 0x91, 0x44, 0x8a, 0x04, 0x55, 0x02, 0x00, 0x08, 0x91, 0x44, 0x8a,
X   0x04, 0x55, 0x02, 0x00, 0x08, 0xcf, 0x3d, 0xc4, 0x7d, 0x22, 0x02, 0x00,
X   0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x10, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x04, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00,
X   0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x20, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x08, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00,
X   0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x40, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x10, 0x00, 0x40, 0x00, 0xe1, 0xbc, 0xbf, 0x0f, 0x10, 0x00,
X   0x40, 0x00, 0x41, 0x02, 0x84, 0x00, 0x10, 0x00, 0x40, 0x00, 0x41, 0x02,
X   0x84, 0x00, 0x10, 0x00, 0x80, 0x00, 0x41, 0x1c, 0x84, 0x03, 0x20, 0x00,
X   0x80, 0x00, 0x41, 0x20, 0x84, 0x03, 0x20, 0x00, 0x00, 0x01, 0x41, 0x20,
X   0x84, 0x00, 0x40, 0x00, 0x00, 0x01, 0x41, 0x20, 0x84, 0x00, 0x40, 0x00,
X   0x00, 0x01, 0xef, 0x1e, 0x84, 0x0f, 0x40, 0x00, 0x00, 0x01, 0x00, 0x00,
X   0x00, 0x00, 0x40, 0x80, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40,
X   0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x20, 0x80, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x20, 0x10, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x08,
X   0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x84, 0x20, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x08, 0x42, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x21,
X   0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x82, 0x10, 0xf0, 0xff, 0xff, 0xff,
X   0xff, 0xff, 0x41, 0x88, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x44,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x22, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x08, 0x91, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x84, 0x48,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x42, 0xa4};
SHAR_EOF
chmod 0640 bitmaps/bv_lst64 ||
echo 'restore of bitmaps/bv_lst64 failed'
Wc_c="`wc -c < 'bitmaps/bv_lst64'`"
test 3296 -eq "$Wc_c" ||
	echo 'bitmaps/bv_lst64: original size 3296, current size' "$Wc_c"
rm -f _shar_wnt_.tmp
fi
# ============= bitmaps/error32 ==============
if test -f 'bitmaps/error32' -a X"$1" != X"-c"; then
	echo 'x - skipping bitmaps/error32 (File already exists)'
	rm -f _shar_wnt_.tmp
else
> _shar_wnt_.tmp
echo 'x - extracting bitmaps/error32 (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'bitmaps/error32' &&
#define error32_width 32
#define error32_height 32
static unsigned char error32_bits[] = {
X   0x00, 0x00, 0x00, 0x00, 0x00, 0xfe, 0x7f, 0x00, 0x00, 0xff, 0xff, 0x00,
X   0x80, 0x01, 0x80, 0x01, 0xc0, 0x00, 0x00, 0x03, 0x60, 0x00, 0x00, 0x06,
X   0x30, 0x00, 0x00, 0x0c, 0x18, 0x00, 0x00, 0x18, 0x0c, 0x00, 0x00, 0x30,
X   0xe6, 0xff, 0xff, 0x67, 0x06, 0x00, 0x00, 0x60, 0xe6, 0xce, 0x91, 0x63,
X   0x26, 0x52, 0xaa, 0x64, 0x26, 0x52, 0xaa, 0x64, 0x26, 0x52, 0xaa, 0x64,
X   0x66, 0xde, 0xab, 0x67, 0x26, 0x4a, 0xa9, 0x62, 0x26, 0x52, 0xaa, 0x64,
X   0x26, 0x52, 0xaa, 0x64, 0xe6, 0x52, 0x92, 0x64, 0x06, 0x00, 0x00, 0x60,
X   0xe6, 0xff, 0xff, 0x67, 0x0c, 0x00, 0x00, 0x30, 0x18, 0x00, 0x00, 0x18,
X   0x30, 0x00, 0x00, 0x0c, 0x60, 0x00, 0x00, 0x06, 0xc0, 0x00, 0x00, 0x03,
X   0x80, 0x01, 0x80, 0x01, 0x00, 0xff, 0xff, 0x00, 0x00, 0xfe, 0x7f, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
SHAR_EOF
chmod 0640 bitmaps/error32 ||
echo 'restore of bitmaps/error32 failed'
Wc_c="`wc -c < 'bitmaps/error32'`"
test 893 -eq "$Wc_c" ||
	echo 'bitmaps/error32: original size 893, current size' "$Wc_c"
rm -f _shar_wnt_.tmp
fi
# ============= bitmaps/notice32 ==============
if test -f 'bitmaps/notice32' -a X"$1" != X"-c"; then
	echo 'x - skipping bitmaps/notice32 (File already exists)'
	rm -f _shar_wnt_.tmp
else
> _shar_wnt_.tmp
echo 'x - extracting bitmaps/notice32 (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'bitmaps/notice32' &&
#define notice32_width 32
#define notice32_height 32
static unsigned char notice32_bits[] = {
X   0x00, 0x00, 0x00, 0x00, 0xfe, 0xff, 0xff, 0x7f, 0x02, 0x00, 0x00, 0x40,
X   0x02, 0x00, 0x00, 0x40, 0x02, 0x80, 0x00, 0x40, 0x02, 0x80, 0x00, 0x40,
X   0x42, 0x80, 0x00, 0x41, 0x82, 0x80, 0x80, 0x40, 0x02, 0x81, 0x40, 0x40,
X   0x02, 0x82, 0x20, 0x40, 0x02, 0x84, 0x10, 0x40, 0x02, 0x88, 0x08, 0x40,
X   0x02, 0x90, 0x04, 0x40, 0x02, 0xa0, 0x02, 0x40, 0x02, 0xc0, 0x01, 0x40,
X   0xf2, 0xff, 0xff, 0x4f, 0x02, 0xc0, 0x01, 0x40, 0x02, 0xa0, 0x02, 0x40,
X   0x02, 0x90, 0x04, 0x40, 0x02, 0x88, 0x08, 0x40, 0x02, 0x84, 0x10, 0x40,
X   0x02, 0x82, 0x20, 0x40, 0x02, 0x81, 0x40, 0x40, 0x82, 0x80, 0x80, 0x40,
X   0x42, 0x80, 0x00, 0x41, 0x02, 0x80, 0x00, 0x40, 0x02, 0x80, 0x00, 0x40,
X   0x02, 0x80, 0x00, 0x40, 0x02, 0x00, 0x00, 0x40, 0x02, 0x00, 0x00, 0x40,
X   0xfe, 0xff, 0xff, 0x7f, 0x00, 0x00, 0x00, 0x00};
SHAR_EOF
chmod 0640 bitmaps/notice32 ||
echo 'restore of bitmaps/notice32 failed'
Wc_c="`wc -c < 'bitmaps/notice32'`"
test 896 -eq "$Wc_c" ||
	echo 'bitmaps/notice32: original size 896, current size' "$Wc_c"
rm -f _shar_wnt_.tmp
fi
# ============= bitmaps/quest32 ==============
if test -f 'bitmaps/quest32' -a X"$1" != X"-c"; then
	echo 'x - skipping bitmaps/quest32 (File already exists)'
	rm -f _shar_wnt_.tmp
else
> _shar_wnt_.tmp
echo 'x - extracting bitmaps/quest32 (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'bitmaps/quest32' &&
#define quest32_width 32
#define quest32_height 32
static unsigned char quest32_bits[] = {
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x0f, 0x00,
X   0x00, 0x0e, 0x70, 0x00, 0x00, 0x01, 0x80, 0x00, 0xc0, 0xc0, 0x03, 0x03,
X   0x20, 0x30, 0x0c, 0x04, 0x20, 0x08, 0x10, 0x04, 0x10, 0x08, 0x10, 0x08,
X   0x08, 0x08, 0x10, 0x10, 0x08, 0x00, 0x10, 0x10, 0x08, 0x00, 0x08, 0x10,
X   0x04, 0xe0, 0x07, 0x20, 0x04, 0x10, 0x00, 0x20, 0x04, 0x08, 0x00, 0x20,
X   0x04, 0x08, 0x00, 0x20, 0x04, 0x08, 0x10, 0x20, 0x04, 0x08, 0x10, 0x20,
X   0x04, 0x08, 0x10, 0x20, 0x04, 0x10, 0x08, 0x10, 0x08, 0xe0, 0x07, 0x10,
X   0x08, 0x00, 0x00, 0x10, 0x08, 0x80, 0x01, 0x08, 0x10, 0xc0, 0x03, 0x04,
X   0x10, 0xc0, 0x03, 0x04, 0x20, 0x80, 0x01, 0x02, 0x40, 0x00, 0x80, 0x01,
X   0x80, 0x01, 0x40, 0x00, 0x00, 0x06, 0x30, 0x00, 0x00, 0xf8, 0x0f, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
SHAR_EOF
chmod 0640 bitmaps/quest32 ||
echo 'restore of bitmaps/quest32 failed'
Wc_c="`wc -c < 'bitmaps/quest32'`"
test 893 -eq "$Wc_c" ||
	echo 'bitmaps/quest32: original size 893, current size' "$Wc_c"
rm -f _shar_wnt_.tmp
fi
# ============= bitmaps/warn32 ==============
if test -f 'bitmaps/warn32' -a X"$1" != X"-c"; then
	echo 'x - skipping bitmaps/warn32 (File already exists)'
	rm -f _shar_wnt_.tmp
else
> _shar_wnt_.tmp
echo 'x - extracting bitmaps/warn32 (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'bitmaps/warn32' &&
#define warn32_width 32
#define warn32_height 32
static unsigned char warn32_bits[] = {
X   0x00, 0x00, 0x00, 0x00, 0xfc, 0xff, 0xff, 0x3f, 0xfe, 0xff, 0xff, 0x7f,
X   0x06, 0x00, 0x00, 0x60, 0x06, 0x00, 0x00, 0x60, 0x06, 0xe0, 0x07, 0x60,
X   0x06, 0xf0, 0x0f, 0x60, 0x06, 0xf0, 0x0f, 0x60, 0x06, 0xf0, 0x0f, 0x60,
X   0x06, 0xf0, 0x0f, 0x60, 0x06, 0xe0, 0x07, 0x60, 0x0c, 0xe0, 0x07, 0x30,
X   0x0c, 0xe0, 0x07, 0x30, 0x18, 0xc0, 0x03, 0x18, 0x18, 0xc0, 0x03, 0x18,
X   0x30, 0xc0, 0x03, 0x0c, 0x60, 0x80, 0x01, 0x06, 0x60, 0x80, 0x01, 0x06,
X   0xc0, 0x00, 0x00, 0x03, 0x80, 0x01, 0x80, 0x01, 0x80, 0x81, 0x81, 0x01,
X   0x00, 0xc3, 0xc3, 0x00, 0x00, 0xc6, 0x63, 0x00, 0x00, 0x86, 0x61, 0x00,
X   0x00, 0x0c, 0x30, 0x00, 0x00, 0x18, 0x18, 0x00, 0x00, 0x18, 0x18, 0x00,
X   0x00, 0x30, 0x0c, 0x00, 0x00, 0x60, 0x06, 0x00, 0x00, 0xc0, 0x03, 0x00,
X   0x00, 0x80, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00};
SHAR_EOF
chmod 0640 bitmaps/warn32 ||
echo 'restore of bitmaps/warn32 failed'
Wc_c="`wc -c < 'bitmaps/warn32'`"
test 890 -eq "$Wc_c" ||
	echo 'bitmaps/warn32: original size 890, current size' "$Wc_c"
rm -f _shar_wnt_.tmp
fi
# ============= bitmaps/chkmrk16 ==============
if test -f 'bitmaps/chkmrk16' -a X"$1" != X"-c"; then
	echo 'x - skipping bitmaps/chkmrk16 (File already exists)'
	rm -f _shar_wnt_.tmp
else
> _shar_wnt_.tmp
echo 'x - extracting bitmaps/chkmrk16 (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'bitmaps/chkmrk16' &&
#define chkmrk16_width 16
#define chkmrk16_height 16
static unsigned char chkmrk16_bits[] = {
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x38, 0x00, 0x1c, 0x00, 0x0e,
X   0x00, 0x06, 0x00, 0x07, 0x0c, 0x03, 0x9c, 0x03, 0xb8, 0x01, 0xf0, 0x01,
X   0xe0, 0x01, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00};
SHAR_EOF
chmod 0640 bitmaps/chkmrk16 ||
echo 'restore of bitmaps/chkmrk16 failed'
Wc_c="`wc -c < 'bitmaps/chkmrk16'`"
test 296 -eq "$Wc_c" ||
	echo 'bitmaps/chkmrk16: original size 296, current size' "$Wc_c"
rm -f _shar_wnt_.tmp
fi
# ============= bitmaps/bv_mac64 ==============
if test -f 'bitmaps/bv_mac64' -a X"$1" != X"-c"; then
	echo 'x - skipping bitmaps/bv_mac64 (File already exists)'
	rm -f _shar_wnt_.tmp
else
> _shar_wnt_.tmp
echo 'x - extracting bitmaps/bv_mac64 (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'bitmaps/bv_mac64' &&
#define bv_mac64_width 64
#define bv_mac64_height 64
static unsigned char bv_mac64_bits[] = {
X   0x25, 0x42, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x12, 0x21, 0x00, 0xf0,
X   0xdc, 0xf3, 0x01, 0x21, 0x89, 0x10, 0x00, 0x10, 0x49, 0x44, 0x00, 0x12,
X   0x44, 0x08, 0x00, 0x10, 0x49, 0x44, 0x00, 0x0c, 0x22, 0x04, 0x00, 0xf0,
X   0xc8, 0x43, 0x00, 0x0c, 0x11, 0x02, 0x00, 0xf0, 0xc9, 0x47, 0x7c, 0x0c,
X   0x08, 0x01, 0x00, 0x10, 0x49, 0x44, 0x04, 0x0c, 0x84, 0x00, 0x00, 0x10,
X   0x49, 0x44, 0x04, 0x12, 0x42, 0x00, 0x00, 0xf0, 0xdc, 0x43, 0x3c, 0x21,
X   0x21, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x00, 0x10, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x04, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00,
X   0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7c, 0x00, 0x02, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0x3f, 0x00, 0x80, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x20, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00,
X   0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x40, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x10, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00,
X   0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x10, 0xcf, 0x3d, 0xd1,
X   0x7d, 0x41, 0x04, 0x00, 0x10, 0x91, 0x44, 0x91, 0x04, 0x41, 0x04, 0x00,
X   0x10, 0x91, 0x44, 0x91, 0x04, 0x41, 0x04, 0x00, 0x08, 0x8f, 0x3c, 0x91,
X   0x1c, 0x41, 0x02, 0x00, 0x08, 0x9f, 0x7c, 0x8a, 0x1c, 0x49, 0x02, 0x00,
X   0x08, 0x91, 0x44, 0x8a, 0x04, 0x55, 0x02, 0x00, 0x08, 0x91, 0x44, 0x8a,
X   0x04, 0x55, 0x02, 0x00, 0x08, 0xcf, 0x3d, 0xc4, 0x7d, 0x22, 0x02, 0x00,
X   0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x10, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x04, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00,
X   0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x20, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x08, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00,
X   0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x40, 0x20, 0xfa, 0xde,
X   0xf7, 0x3d, 0x10, 0x00, 0x40, 0x60, 0x8b, 0x42, 0x14, 0x25, 0x10, 0x00,
X   0x40, 0xa0, 0x8a, 0x42, 0x14, 0x05, 0x10, 0x00, 0x40, 0xa0, 0x8a, 0x42,
X   0x16, 0x05, 0x10, 0x00, 0x80, 0x20, 0xfa, 0xc2, 0x11, 0x39, 0x20, 0x00,
X   0x80, 0x20, 0x8a, 0x42, 0x12, 0x21, 0x20, 0x00, 0x00, 0x21, 0x8a, 0x42,
X   0x14, 0x21, 0x40, 0x00, 0x00, 0x21, 0x8a, 0x5e, 0xf4, 0x3d, 0x40, 0x00,
X   0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x01, 0x00, 0x00,
X   0x00, 0x00, 0x40, 0x80, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40,
X   0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x20, 0x80, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x20, 0x10, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x08,
X   0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x84, 0x20, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x08, 0x42, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x21,
X   0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x82, 0x10, 0xf0, 0xff, 0xff, 0xff,
X   0xff, 0xff, 0x41, 0x88, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x44,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x22, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x08, 0x91, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x84, 0x48,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x42, 0xa4};
SHAR_EOF
chmod 0640 bitmaps/bv_mac64 ||
echo 'restore of bitmaps/bv_mac64 failed'
Wc_c="`wc -c < 'bitmaps/bv_mac64'`"
test 3296 -eq "$Wc_c" ||
	echo 'bitmaps/bv_mac64: original size 3296, current size' "$Wc_c"
rm -f _shar_wnt_.tmp
fi
# ============= bitmaps/bv_ann64 ==============
if test -f 'bitmaps/bv_ann64' -a X"$1" != X"-c"; then
	echo 'x - skipping bitmaps/bv_ann64 (File already exists)'
	rm -f _shar_wnt_.tmp
else
> _shar_wnt_.tmp
echo 'x - extracting bitmaps/bv_ann64 (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'bitmaps/bv_ann64' &&
#define bv_annote64_width 64
#define bv_annote64_height 64
static char bv_annote64_bits[] = {
X   0x25, 0x42, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x12, 0x21, 0x00, 0xf0,
X   0xdc, 0xf3, 0x01, 0x21, 0x89, 0x10, 0x00, 0x10, 0x49, 0x44, 0x00, 0x12,
X   0x44, 0x08, 0x00, 0x10, 0x49, 0x44, 0x00, 0x0c, 0x22, 0x04, 0x00, 0xf0,
X   0xc8, 0x43, 0x00, 0x0c, 0x11, 0x02, 0x00, 0xf0, 0xc9, 0x47, 0x7c, 0x0c,
X   0x08, 0x01, 0x00, 0x10, 0x49, 0x44, 0x04, 0x0c, 0x84, 0x00, 0x00, 0x10,
X   0x49, 0x44, 0x04, 0x12, 0x42, 0x00, 0x00, 0xf0, 0xdc, 0x43, 0x3c, 0x21,
X   0x21, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x00, 0x10, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x04, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00,
X   0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7c, 0x00, 0x02, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0x3f, 0x00, 0x80, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x20, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00,
X   0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x40, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x10, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00,
X   0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x10, 0xcf, 0x3d, 0xd1,
X   0x7d, 0x41, 0x04, 0x00, 0x10, 0x91, 0x44, 0x91, 0x04, 0x41, 0x04, 0x00,
X   0x10, 0x91, 0x44, 0x91, 0x04, 0x41, 0x04, 0x00, 0x08, 0x8f, 0x3c, 0x91,
X   0x1c, 0x41, 0x02, 0x00, 0x08, 0x9f, 0x7c, 0x8a, 0x1c, 0x49, 0x02, 0x00,
X   0x08, 0x91, 0x44, 0x8a, 0x04, 0x55, 0x02, 0x00, 0x08, 0x91, 0x44, 0x8a,
X   0x04, 0x55, 0x02, 0x00, 0x08, 0xcf, 0x3d, 0xc4, 0x7d, 0x22, 0x02, 0x00,
X   0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x10, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x04, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00,
X   0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x20, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x08, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00,
X   0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x40, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x10, 0x00, 0x40, 0xf0, 0x45, 0x11, 0xe7, 0xfb, 0x10, 0x00,
X   0x40, 0x10, 0x4d, 0x93, 0x88, 0x08, 0x10, 0x00, 0x40, 0x10, 0x4d, 0x93,
X   0x88, 0x08, 0x10, 0x00, 0x80, 0x10, 0x55, 0x95, 0x88, 0x38, 0x20, 0x00,
X   0x80, 0xf0, 0x55, 0x95, 0x88, 0x38, 0x20, 0x00, 0x00, 0x11, 0x65, 0x99,
X   0x88, 0x08, 0x40, 0x00, 0x00, 0x11, 0x65, 0x99, 0x88, 0x08, 0x40, 0x00,
X   0x00, 0x11, 0x45, 0x11, 0x87, 0xf8, 0x40, 0x00, 0x00, 0x01, 0x00, 0x00,
X   0x00, 0x00, 0x40, 0x80, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40,
X   0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x20, 0x80, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x20, 0x10, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x08,
X   0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x84, 0x20, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x08, 0x42, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x21,
X   0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x82, 0x10, 0xf0, 0xff, 0xff, 0xff,
X   0xff, 0xff, 0x41, 0x88, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x44,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x22, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x08, 0x91, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x84, 0x48,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x42, 0xa4};
SHAR_EOF
chmod 0640 bitmaps/bv_ann64 ||
echo 'restore of bitmaps/bv_ann64 failed'
Wc_c="`wc -c < 'bitmaps/bv_ann64'`"
test 3296 -eq "$Wc_c" ||
	echo 'bitmaps/bv_ann64: original size 3296, current size' "$Wc_c"
rm -f _shar_wnt_.tmp
fi
# ============= bitmaps/proginfo.xbm ==============
if test -f 'bitmaps/proginfo.xbm' -a X"$1" != X"-c"; then
	echo 'x - skipping bitmaps/proginfo.xbm (File already exists)'
	rm -f _shar_wnt_.tmp
else
> _shar_wnt_.tmp
echo 'x - extracting bitmaps/proginfo.xbm (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'bitmaps/proginfo.xbm' &&
#define proginfo_width 311
#define proginfo_height 311
static char proginfo_bits[] = {
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x01, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x01,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0xc0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0xff,
X   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
X   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
X   0xff, 0xff, 0xff, 0xff, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0xfc, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
X   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
X   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x1f, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0xfc, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
X   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
X   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x1f, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xbc, 0xaa, 0xaa, 0xaa, 0xaa,
X   0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa,
X   0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa,
X   0xaa, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5c, 0x55,
X   0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55,
X   0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55,
X   0x55, 0x55, 0x55, 0x55, 0x1d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0xbc, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa,
X   0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa,
X   0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0x1e, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x5c, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55,
X   0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55,
X   0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x1d, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xbc, 0xaa, 0xaa, 0xaa, 0xaa,
X   0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa,
X   0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa,
X   0xaa, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5c, 0x55,
X   0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55,
X   0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55,
X   0x55, 0x55, 0x55, 0x55, 0x1d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0xbc, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa,
X   0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa,
X   0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0x1e, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x5c, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55,
X   0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55,
X   0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x1d, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xbc, 0xaa, 0xaa, 0xaa, 0xaa,
X   0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa,
X   0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa,
X   0xaa, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5c, 0x55,
X   0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55,
X   0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55,
X   0x55, 0x55, 0x55, 0x55, 0x1d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0xbc, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa,
X   0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa,
X   0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0x1e, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x5c, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55,
X   0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55,
X   0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x1d, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xbc, 0xaa, 0xaa, 0xaa, 0xaa,
X   0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa,
X   0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa,
X   0xaa, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5c, 0x55,
X   0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55,
X   0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55,
X   0x55, 0x55, 0x55, 0x55, 0x1d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0xbc, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa,
X   0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa,
X   0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0x1e, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x5c, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55,
X   0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55,
X   0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x1d, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xbc, 0xaa, 0xaa, 0xaa, 0xaa,
X   0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa,
X   0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa,
X   0xaa, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5c, 0x55,
X   0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55,
X   0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55,
X   0x55, 0x55, 0x55, 0x55, 0x1d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0xbc, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa,
X   0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa,
X   0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0x1e, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x5c, 0x55, 0x55, 0x55, 0xf5, 0xff, 0x57, 0x75,
X   0x55, 0x55, 0xd5, 0xff, 0xf5, 0x5f, 0x57, 0x55, 0x55, 0x55, 0x55, 0x55,
X   0x55, 0x55, 0xd5, 0x55, 0x55, 0x7d, 0x55, 0x55, 0x55, 0x55, 0x1d, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xbc, 0xaa, 0xaa, 0xaa, 0xaa,
X   0xbf, 0xbf, 0xfa, 0xfa, 0xab, 0xaa, 0xbf, 0xea, 0xab, 0xaf, 0xaa, 0xaa,
X   0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xfa, 0xaa, 0xaa, 0xfe, 0xab, 0xaa, 0xaa,
X   0xaa, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5c, 0x55,
X   0x55, 0x55, 0x55, 0x5f, 0x7f, 0xf5, 0xf5, 0x55, 0x55, 0x5f, 0xd5, 0xd5,
X   0x57, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0xfd, 0x55, 0x55, 0xdf,
X   0x55, 0x55, 0x55, 0x55, 0x1d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0xbc, 0xaa, 0xaa, 0xaa, 0xaa, 0xbf, 0xfe, 0xfa, 0xea, 0xab, 0xaa,
X   0xbf, 0xaa, 0xaa, 0xaf, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xff,
X   0xaa, 0xaa, 0xaf, 0xab, 0xaa, 0xaa, 0xaa, 0x1e, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x5c, 0x55, 0x55, 0x55, 0x55, 0x5f, 0x7d, 0x75,
X   0xf5, 0x55, 0x55, 0x7f, 0xd5, 0x55, 0x57, 0x55, 0x55, 0x55, 0x55, 0x55,
X   0x55, 0x55, 0xfd, 0x55, 0xd5, 0xd7, 0x57, 0x55, 0x55, 0x55, 0x1d, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xbc, 0xaa, 0xaa, 0xaa, 0xaa,
X   0xbf, 0xfe, 0xaa, 0xea, 0xab, 0xaa, 0xfe, 0xea, 0xaa, 0xaa, 0xaa, 0xaa,
X   0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xfa, 0xaa, 0xaa, 0xaf, 0xaf, 0xaa, 0xaa,
X   0xaa, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5c, 0x55,
X   0x55, 0x55, 0x55, 0x5f, 0x7d, 0x55, 0xf5, 0x55, 0x55, 0x7d, 0x55, 0x55,
X   0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0xfd, 0x55, 0xd5, 0xd7,
X   0x57, 0x55, 0x55, 0x55, 0x1d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0xbc, 0xaa, 0xaa, 0xaa, 0xaa, 0xbf, 0xfe, 0xfe, 0xea, 0xfb, 0xaa,
X   0xfe, 0xea, 0xea, 0xaf, 0xfa, 0xea, 0xff, 0xbf, 0xaf, 0xaa, 0xaa, 0xfa,
X   0xaa, 0xea, 0xaf, 0xaf, 0xaa, 0xaa, 0xaa, 0x1e, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x5c, 0x55, 0x55, 0x55, 0x55, 0x5f, 0x7d, 0xfd,
X   0xf5, 0xfd, 0x57, 0xfd, 0x75, 0xd5, 0x57, 0xdf, 0xd7, 0xdf, 0x5f, 0x57,
X   0x55, 0x55, 0xfd, 0x55, 0xd5, 0xd7, 0x5f, 0x55, 0x55, 0x55, 0x1d, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xbc, 0xaa, 0xaa, 0xaa, 0xaa,
X   0xbf, 0xbe, 0xfa, 0xea, 0xff, 0xab, 0xfa, 0xaa, 0xaa, 0xaf, 0xaf, 0xab,
X   0xaf, 0xaf, 0xaa, 0xaa, 0xaa, 0xfa, 0xaa, 0xea, 0xaf, 0xaf, 0xaa, 0xaa,
X   0xaa, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5c, 0x55,
X   0x55, 0x55, 0x55, 0xdf, 0x5f, 0xf5, 0xf5, 0xd7, 0x57, 0xfd, 0x75, 0xd5,
X   0xd7, 0x57, 0xd7, 0x5f, 0x5f, 0x57, 0x55, 0x55, 0xfd, 0x55, 0xd5, 0xd7,
X   0x5f, 0x55, 0x55, 0x55, 0x1d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0xbc, 0xaa, 0xaa, 0xaa, 0xaa, 0xff, 0xaf, 0xfa, 0xea, 0xeb, 0xaf,
X   0xfa, 0xbb, 0xaa, 0xaf, 0xaf, 0xaf, 0xaf, 0xbf, 0xab, 0xaa, 0xaa, 0xfa,
X   0xaa, 0xea, 0xaf, 0xaf, 0xaa, 0xaa, 0xaa, 0x1e, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x5c, 0x55, 0x55, 0x55, 0x55, 0x5f, 0x7f, 0xf5,
X   0xf5, 0xd5, 0x5f, 0xf5, 0x5d, 0xd5, 0xd7, 0x57, 0x5f, 0x5f, 0xdf, 0x55,
X   0x55, 0x55, 0xfd, 0x55, 0xd5, 0xd7, 0x5f, 0x55, 0x55, 0x55, 0x1d, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xbc, 0xaa, 0xaa, 0xaa, 0xaa,
X   0xbf, 0xfe, 0xfa, 0xea, 0xab, 0xaf, 0xfa, 0xbb, 0xaa, 0xef, 0xaf, 0xaf,
X   0xbf, 0xbf, 0xab, 0xaa, 0xaa, 0xfa, 0xaa, 0xea, 0xaf, 0xaf, 0xaa, 0xaa,
X   0xaa, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5c, 0x55,
X   0x55, 0x55, 0x55, 0x5f, 0xfd, 0xf5, 0xf5, 0xd5, 0x5f, 0xf5, 0x5f, 0xd5,
X   0xd7, 0xff, 0x5f, 0xdf, 0xff, 0x55, 0x55, 0x55, 0xfd, 0x55, 0xd5, 0xd7,
X   0x5f, 0x55, 0x55, 0x55, 0x1d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0xbc, 0xaa, 0xaa, 0xaa, 0xaa, 0xbf, 0xfa, 0xfa, 0xea, 0xab, 0xaf,
X   0xea, 0xaf, 0xaa, 0xef, 0xaf, 0xaa, 0xfe, 0xfe, 0xaa, 0xaa, 0xaa, 0xfa,
X   0xaa, 0xea, 0xaf, 0xaf, 0xaa, 0xaa, 0xaa, 0x1e, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x5c, 0x55, 0x55, 0x55, 0x55, 0x5f, 0xfd, 0xf5,
X   0xf5, 0xd5, 0x5f, 0xd5, 0x57, 0xd5, 0xd7, 0x57, 0x55, 0xfd, 0x7d, 0x55,
X   0x55, 0x55, 0xfd, 0x55, 0xd5, 0xd7, 0x57, 0x55, 0x55, 0x55, 0x1d, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xbc, 0xaa, 0xaa, 0xaa, 0xaa,
X   0xbf, 0xfa, 0xfa, 0xea, 0xab, 0xaf, 0xea, 0xaf, 0xaa, 0xef, 0xaf, 0xaa,
X   0xfe, 0xfe, 0xaa, 0xaa, 0xaa, 0xfa, 0xaa, 0xaa, 0xaf, 0xaf, 0xaa, 0xaa,
X   0xaa, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5c, 0x55,
X   0x55, 0x55, 0x55, 0x5f, 0xfd, 0xf5, 0xf5, 0xd5, 0x57, 0xd5, 0x57, 0xd5,
X   0xd7, 0x57, 0x55, 0x7d, 0x7d, 0x55, 0x55, 0x55, 0xfd, 0xd5, 0xd7, 0xd7,
X   0x57, 0x55, 0x55, 0x55, 0x1d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0xbc, 0xaa, 0xaa, 0xaa, 0xaa, 0xbf, 0xfa, 0xfa, 0xea, 0xeb, 0xaf,
X   0xaa, 0xab, 0xaa, 0xaf, 0xaf, 0xaa, 0xba, 0xba, 0xaa, 0xaa, 0xaa, 0xfa,
X   0xea, 0xaf, 0xaf, 0xab, 0xaa, 0xaa, 0xaa, 0x1e, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x5c, 0x55, 0x55, 0x55, 0x55, 0x5f, 0x7d, 0xf5,
X   0xf5, 0xf7, 0x57, 0xd5, 0x57, 0xd5, 0x57, 0x5f, 0x57, 0x7d, 0x7d, 0x55,
X   0x55, 0x55, 0xfd, 0xd5, 0x57, 0xdf, 0x55, 0x55, 0x55, 0x55, 0x1d, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xbc, 0xaa, 0xaa, 0xaa, 0xaa,
X   0xbf, 0xbe, 0xfa, 0xeb, 0xff, 0xab, 0xaa, 0xab, 0xea, 0xaf, 0xfe, 0xab,
X   0xba, 0xba, 0xaa, 0xaa, 0xaa, 0xfe, 0xeb, 0xaf, 0xfe, 0xaa, 0xaa, 0xaa,
X   0xaa, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5c, 0x55,
X   0x55, 0x55, 0xf5, 0xff, 0x57, 0xfd, 0x77, 0x7d, 0x55, 0x55, 0x55, 0xf5,
X   0x5f, 0xfd, 0x55, 0x55, 0x55, 0x55, 0x55, 0xd5, 0xff, 0xdf, 0x57, 0x7d,
X   0x55, 0x55, 0x55, 0x55, 0x1d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0xbc, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa,
X   0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa,
X   0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0x1e, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x5c, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55,
X   0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55,
X   0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x1d, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xbc, 0xaa, 0xaa, 0xaa, 0xaa,
X   0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa,
X   0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa,
X   0xaa, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5c, 0x55,
X   0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55,
X   0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55,
X   0x55, 0x55, 0x55, 0x55, 0x1d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0xbc, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa,
X   0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa,
X   0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0x1e, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x5c, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55,
X   0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55,
X   0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x1d, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xbc, 0xaa, 0xaa, 0xaa, 0xaa,
X   0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa,
X   0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa,
X   0xaa, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5c, 0x55,
X   0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55,
X   0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55,
X   0x55, 0x55, 0x55, 0x55, 0x1d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0xbc, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa,
X   0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa,
X   0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0x1e, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x5c, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55,
X   0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55,
X   0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x1d, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xbc, 0xaa, 0xaa, 0xaa, 0xaa,
X   0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa,
X   0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa,
X   0xaa, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5c, 0x55,
X   0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55,
X   0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55,
X   0x55, 0x55, 0x55, 0x55, 0x1d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0xbc, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa,
X   0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa,
X   0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0x1e, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x5c, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55,
X   0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55,
X   0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x1d, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xbc, 0xaa, 0xaa, 0xaa, 0xaa,
X   0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa,
X   0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa,
X   0xaa, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0xff,
X   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
X   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
X   0xff, 0xff, 0xff, 0xff, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0xfc, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
X   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
X   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x1f, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0xfc, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
X   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
X   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x1f, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
SHAR_EOF
true || echo 'restore of bitmaps/proginfo.xbm failed'
fi
echo 'End of  part 6'
echo 'File bitmaps/proginfo.xbm is continued in part 7'
echo 7 > _shar_seq_.tmp
exit 0
-- 
Senior Systems Scientist		mail: dcmartin@msi.com
Molecular Simulations, Inc.		uucp: uunet!dcmartin
796 North Pastoria Avenue		at&t: 408/522-9236
Sunnyvale, California 94086		fax: 408/732-0831
