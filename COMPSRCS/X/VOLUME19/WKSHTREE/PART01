Newsgroups: comp.sources.x
From: Eric_Wallengren@univel.com (Eric Wallengren)
Subject: v19i070:  wkshTree - Windowing Korn Shell Widget Tree. Examples of wksh widgets., Part01/02
Message-ID: <csx-v19i070=wkshTree.181256@sparky.IMD.Sterling.COM>
X-Md4-Signature: 3d5be4a530cb8df0e9b637deb0e86b98
Date: Sun, 4 Apr 1993 00:13:47 GMT
Approved: chris@sparky.imd.sterling.com

Submitted-by: Eric_Wallengren@univel.com (Eric Wallengren)
Posting-number: Volume 19, Issue 70
Archive-name: wkshTree/part01
Environment: X11. wksh

[I could not test this, as I don't have wksh running...]
[   Chris Olson                                        ]

#!/bin/sh
# This is a shell archive (produced by shar 3.49)
# To extract the files from this archive, save it to a file, remove
# everything above the "!/bin/sh" line above, and type "sh file_name".
#
# made 03/29/1993 23:22 UTC by eric@mr_big
# Source directory /home/eric/wkshtree/temp
#
# existing files will NOT be overwritten unless -c is specified
#
# This shar contains:
# length  mode       name
# ------ ---------- ------------------------------------------
#   1131 -rw-r--r-- Abbrevbutton
#    677 -rw-r--r-- Abbrevmenubutton
#    809 -rw-r--r-- Bulletinboard
#   1076 -rw-r--r-- Caption
#   1471 -rw-r--r-- Category
#    441 -rw-r--r-- Checkbox
#   1789 -rw-r--r-- Controlarea
#    571 -rw-r--r-- Exclusives
#   1849 -rw-r--r-- Flatbuttons
#    596 -rw-r--r-- Flatcheckbox
#    593 -rw-r--r-- Flatexclusives
#    677 -rw-r--r-- Flatlist
#    621 -rw-r--r-- Flatnonexclusives
#    538 -rw-r--r-- Footer
#    547 -rw-r--r-- Footerpanel
#    962 -rw-r--r-- Form
#    604 -rw-r--r-- Gauge
#    604 -rw-r--r-- Guage
#    964 -rw-r--r-- Help
#    591 -rw-r--r-- Integerfield
#    748 -rw-r--r-- MenuShell
#    572 -rw-r--r-- Menubutton
#    527 -rw-r--r-- Menubuttongadget
#    431 -rw-r--r-- Modalshell
#    546 -rw-r--r-- Nonexclusives
#    467 -rw-r--r-- Noticeshell
#    329 -rw-r--r-- Oblongbutton
#    336 -rw-r--r-- Oblongbuttongadget
#   1132 -rw-r--r-- Panes
#    758 -rw-r--r-- Popupmenushell
#    821 -rw-r--r-- Popupwindowshell
#    327 -rw-r--r-- Rectbutton
#   1114 -rw-r--r-- Rubbertile
#    601 -rw-r--r-- Scrollbar
#    866 -rw-r--r-- Scrolledwindow
#    580 -rw-r--r-- Scrollinglist
#    607 -rw-r--r-- Slider
#   1554 -rw-r--r-- Statictext
#   1253 -rw-r--r-- Stepfield
#    637 -rw-r--r-- Stub
#    438 -rw-r--r-- Text
#    680 -rw-r--r-- Textedit
#    595 -rw-r--r-- Textfield
#  39051 -rwxr-xr-x wkshTree
#    767 -rw-rw-r-- README
#
# ============= Abbrevbutton ==============
if test -f 'Abbrevbutton' -a X"$1" != X"-c"; then
	echo 'x - skipping Abbrevbutton (File already exists)'
else
echo 'x - extracting Abbrevbutton (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'Abbrevbutton' &&
Abbrevbutton()
{
X	MENUITEMS="{Restart}, {Cancel}, {Abort}"
X
X	cps POPUP popupWindowShell popupWindowShell $PANE \\\n
X		title:"WkshClass: AbbreviatedMenuButton"
X
X	acb $POPUP popdownCallback "pd $POPUP"
X
X	cps WINDOW popup popupWindowShell $POPUP \\\n
X		title:"AbbreviatedButton Window"
X
X	cmw CAPTION caption caption $POPUP_UCA \\\n
X		label:"AbbreviatedButton (Window):" \\\n
X		font:OlDefaultBoldFont
X
X	cmw ABW abbreviatedButton abbreviatedButton $CAPTION \\\n
X		buttonType:windowBtn \\\n
X		popupWidget:$WINDOW
X
X	cps MENU menu popupMenuShell $POPUP 
X
X	cmw BUTTONS buttons flatButtons $MENU \\\n
X		numItems:3 \\\n
X		numItemFields:1 \\\n
X		itemFields:'{label}' \\\n
X		items:"${MENUITEMS}" 
X
X	cmw CAPTION2 caption caption $POPUP_UCA \\\n
X		label:"AbbreviatedButton (Menu):" \\\n
X		font:OlDefaultBoldFont
X
X	cmw ABWC abbreviatedButton abbreviatedButton $CAPTION2 \\\n
X		popupWidget:$MENU
X		
X	cmw OK Ok flatButtons $POPUP_LCA \\\n
X		numItems:1 \\\n
X		numItemFields:1 \\\n
X		itemFields:'{label}' \\\n
X		items:'{Ok}' 
X
X	sv $OK selectProc:"PopdownCB $POPUP"	
X
X	orh $POPUP "AbbreviatedButton Source" -f `pwd`/Abbrevbutton
X
X	pu $POPUP GrabNone
}
SHAR_EOF
chmod 0644 Abbrevbutton ||
echo 'restore of Abbrevbutton failed'
Wc_c="`wc -c < 'Abbrevbutton'`"
test 1131 -eq "$Wc_c" ||
	echo 'Abbrevbutton: original size 1131, current size' "$Wc_c"
fi
# ============= Abbrevmenubutton ==============
if test -f 'Abbrevmenubutton' -a X"$1" != X"-c"; then
	echo 'x - skipping Abbrevmenubutton (File already exists)'
else
echo 'x - extracting Abbrevmenubutton (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'Abbrevmenubutton' &&
AbbrevMenuButton()
{
X	cps POPUP popupWindowShell popupWindowShell $PANE \\\n
X		title:"AbbreviatedMenuButton"
X
X	acb $POPUP popdownCallback "dw $POPUP"
X
X	cmw CAPTION caption caption $POPUP_UCA \\\n
X		label:"AbbreviatedMenuButton:" \\\n
X		font:OlDefaultBoldFont
X
X	cmw ABBREV abbrevMenuButton abbrevMenuButton $CAPTION 
X		
X	cmw OPEN Open... oblongButton $ABBREV_MP \\\n
X		buttonType:$BUTTON
X
X	cmw SAVE Save... oblongButton $ABBREV_MP \\\n
X		buttonType:$BUTTON
X
X	cmw EXIT Exit oblongButton $ABBREV_MP \\\n
X		buttonType:$BUTTON
X
X	cmw OK Ok oblongButton $POPUP_LCA \\\n
X		buttonType:$BUTTON
X
X	orh $POPUP "AbbreviatedMenuButton Source" -f `pwd`/Abbrevmenubutton
X
X	pu $POPUP GrabNone
}
SHAR_EOF
chmod 0644 Abbrevmenubutton ||
echo 'restore of Abbrevmenubutton failed'
Wc_c="`wc -c < 'Abbrevmenubutton'`"
test 677 -eq "$Wc_c" ||
	echo 'Abbrevmenubutton: original size 677, current size' "$Wc_c"
fi
# ============= Bulletinboard ==============
if test -f 'Bulletinboard' -a X"$1" != X"-c"; then
	echo 'x - skipping Bulletinboard (File already exists)'
else
echo 'x - extracting Bulletinboard (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'Bulletinboard' &&
BulletinBoard()
{
X	cps TRANSHELL transient transientShell $PANE \\\n
X		title:"WkshTree: BulletinBoard"
X
X	cmw CAP1 caption caption $TRANSHELL \\\n
X		font:OlDefaultBoldFont \\\n
X		label:"BulletinBoard:" \\\n
X		position:top \\\n
X		alignment:left
X
X	cmw BBOARD bulletinBoard bulletinBoard $CAP1 \\\n
X		width:200 \\\n
X		height:150 \\\n
X		borderWidth:1
X
X	cmw ONE 0x0 staticText $BBOARD \\\n
X		string:"(0,0)"
X
X	cmw TWO 100x100 staticText $BBOARD \\\n
X		string:"(150,100)" \\\n
X		x:100 y:100
X
X	cmw THREE 80x0 staticText $BBOARD \\\n
X		string:"(80,0)" \\\n
X		x:80 y:0
X
X	cmw OK OK flatButtons $BBOARD \\\n
X		x:90 y:130 \\\n
X		numItems:1 \\\n
X		itemFields:'{label}' \\\n
X		items:'{OK}' 
X
X	sv $OK selectProc:"PopdownCB $TRANSHELL"
X	
X	orh $TRANSHELL "BulletinBoard Source" -f `pwd`/Bulletinboard
X
X	pu $TRANSHELL GrabNone
}
SHAR_EOF
chmod 0644 Bulletinboard ||
echo 'restore of Bulletinboard failed'
Wc_c="`wc -c < 'Bulletinboard'`"
test 809 -eq "$Wc_c" ||
	echo 'Bulletinboard: original size 809, current size' "$Wc_c"
fi
# ============= Caption ==============
if test -f 'Caption' -a X"$1" != X"-c"; then
	echo 'x - skipping Caption (File already exists)'
else
echo 'x - extracting Caption (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'Caption' &&
Caption()
{
X	cmw POPCAPTION popupWidget popupWindowShell $PANE \\\n
X		title:"Caption" 
X
X	acb $POPCAPTION popdownCallback "dw $POPCAPTION"
X
X	cmw CAP1 leftcaption caption $POPCAPTION_UCA \\\n
X		label:"Position Left:" \\\n
X		font:OlDefaultBoldFont \\\n
X		position:left \\\n
X		borderWidth:0
X
X	cmw CAP2 rightcaption caption $CAP1 \\\n
X		label:":Position Right" \\\n
X		font:OlDefaultBoldFont \\\n
X		position:right \\\n
X		borderWidth:1
X
X	cmw CAP3 topcaption caption $CAP2 \\\n
X		label:"Position Top:" \\\n
X		font:OlDefaultBoldFont \\\n
X		position:top \\\n
X		borderWidth:1
X
X	cmw CAP4 topcaption caption $CAP3 \\\n
X		label:"Position Bottom:" \\\n
X		font:OlDefaultBoldFont \\\n
X		position:bottom \\\n
X		borderWidth:1
X
X	cmw ABV abbrevmenu abbrevMenuButton $CAP4 
X
X	
X	cmw MENUITEMS menuitems flatButtons $ABV_MP \\\n
X		numItems:3 \\\n
X		itemFields:'{label}' \\\n
X		items:'{Open...}, {Save...}, {Exit}'
X
X	cmw OK Ok flatButtons $POPCAPTION_LCA \\\n
X		numItems:1 \\\n
X		itemFields:'{label}' \\\n
X		items:'{Ok}' 
X
X	orh $POPCAPTION "Caption Help" -f `pwd`/Caption
X
X	pu $POPCAPTION GrabNone 
}
SHAR_EOF
chmod 0644 Caption ||
echo 'restore of Caption failed'
Wc_c="`wc -c < 'Caption'`"
test 1076 -eq "$Wc_c" ||
	echo 'Caption: original size 1076, current size' "$Wc_c"
fi
# ============= Category ==============
if test -f 'Category' -a X"$1" != X"-c"; then
	echo 'x - skipping Category (File already exists)'
else
echo 'x - extracting Category (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'Category' &&
Category()
{
X	PAGE1_ITEMS="{Red}, {Orange}, {Yellow}, {Green}, {Blue},
X		     {Indigo}, {Violet}"
X
X	PAGE2_ITEMS="{Apples}, {Oranges}, {Banannas}, {Grapes},
X		     {Watermellon}"
X
X	PAGE3_ITEMS="{Lions}, {Tigers}, {Bears}, {Elephants},
X		     {Zebras}, {Monkeys}, {Hippos}, {Deer}, 
X		     {Duck Billed Platypus}"
X
X	cps POPUP popup popupWindowShell $PANE \\\n
X		title:"WkshTree: Category"
X
X	cmw CATEGORY category category $POPUP_UCA \\\n
X		categoryLabel:"Category:" \\\n
X		leftFoot:"LeftFoot" \\\n
X		rightFoot:"RightFoot" \\\n
X		showFooter:true
X
X	cmw COLORS colors flatButtons $CATEGORY \\\n
X		pageLabel:"Colors" \\\n
X		layoutType:fixedcols \\\n
X		exclusives:true \\\n
X		buttonType:rectBtn \\\n
X		numItems:7 \\\n
X		numItemFields:1 \\\n
X		itemFields:'{label}' \\\n
X		items:"$PAGE1_ITEMS" 
X
X	cmw FRUITS fruits flatButtons $CATEGORY \\\n
X		pageLabel:"Fruits" \\\n
X		layoutType:fixedcols \\\n
X		exclusives:true \\\n
X		buttonType:rectBtn \\\n
X		numItems:5 \\\n
X		numItemFields:1 \\\n
X		itemFields:'{label}' \\\n
X		items:"$PAGE2_ITEMS"
X	
X	cmw ANIMALS animals flatButtons $CATEGORY \\\n
X		pageLabel:"Animals" \\\n
X		layoutType:fixedcols \\\n
X		exclusives:true \\\n
X		buttonType:rectBtn \\\n
X		numItems:9 \\\n
X		numItemFields:1 \\\n
X		itemFields:'{label}' \\\n
X		items:"$PAGE3_ITEMS" 
X
X	cmw OK Ok flatButtons $POPUP_LCA \\\n
X		numItems:1 \\\n
X		numItemFields:1 \\\n
X		itemFields:'{label}' \\\n
X		items:'{Ok}'
X
X	orh $POPUP "Catogory Source" -f `pwd`/Category
X
X	pu $POPUP GrabNone
}
SHAR_EOF
chmod 0644 Category ||
echo 'restore of Category failed'
Wc_c="`wc -c < 'Category'`"
test 1471 -eq "$Wc_c" ||
	echo 'Category: original size 1471, current size' "$Wc_c"
fi
# ============= Checkbox ==============
if test -f 'Checkbox' -a X"$1" != X"-c"; then
	echo 'x - skipping Checkbox (File already exists)'
else
echo 'x - extracting Checkbox (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'Checkbox' &&
Checkbox()
{
X	cps POPUP popupWindowShell popupWindowShell $PANE \\\n
X		title:"Checkbox"
X
X	acb $POPUP popdownCallback "dw $POPUP"
X
X	cmw CHECKBOX checkbox checkBox $POPUP_UCA \\\n
X		label:"Checkbox:" \\\n
X		font:OlDefaultBoldFont \\\n
X		set:true
X
X	cmw OK Ok flatButtons $POPUP_LCA \\\n
X		numItems:1 \\\n
X		numItemFields:1 \\\n
X		itemFields:'{label}' \\\n
X		items:'{Ok}' 
X
X	orh $POPUP "CheckBox Source" -f `pwd`/Checkbox
X
X	pu $POPUP GrabNone
}
SHAR_EOF
chmod 0644 Checkbox ||
echo 'restore of Checkbox failed'
Wc_c="`wc -c < 'Checkbox'`"
test 441 -eq "$Wc_c" ||
	echo 'Checkbox: original size 441, current size' "$Wc_c"
fi
# ============= Controlarea ==============
if test -f 'Controlarea' -a X"$1" != X"-c"; then
	echo 'x - skipping Controlarea (File already exists)'
else
echo 'x - extracting Controlarea (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'Controlarea' &&
ControlArea()
{
X	THEFRUIT="{Apples}, {Oranges}, {Banannas}, {Grapes},
X		  {Watermelon}, {Kiwi}"
X
X	THECOLOR="{Red}, {Orange}, {Yellow}, {Green}, {Blue},
X		  {Indigo}, {Violet}, {Black}"
X	
X	THEANIMAL="{Lions}, {Tigers}, {Bears}, {Elephants}, 
X		   {Zebras}, {Monkeys}, {Hippos}, {Deer},
X		   {Duck Billed Platypus}"
X
X	cps POPCONTROLA transientShell transientShell $PANE \\\n
X		title:"WkshTree: ControlArea"
X
X	cmw CAPTION caption caption $POPCONTROLA \\\n
X		label:"ControlArea:" \\\n
X		font:OlDefaultBoldFont \\\n
X		position:top \\\n
X		alignment:left
X
X	cmw CONTROLAREA controlarea controlArea $CAPTION \\\n
X		alignCaptions:true \\\n
X		layoutType:fixedcols \\\n
X		center:true \\\n
X		hSpace:10 
X
X	cmw FRUITS caption caption $CONTROLAREA \\\n
X		label:"Fruits:" 
X
X	cmw FRUITBUTTONS fruitbuttons flatButtons $FRUITS \\\n
X		layoutType:fixedcols \\\n
X		buttonType:rectBtn \\\n
X		exclusives:true \\\n
X		measure:3 \\\n
X		numItems:6 \\\n
X		itemFields:'{label}' \\\n
X		items:"$THEFRUIT" 
X
X	cmw COLORS caption caption $CONTROLAREA \\\n
X		label:"Colors:"
X
X	cmw COLORBUTTONS colorButtons flatButtons $COLORS \\\n
X		layoutType:fixedcols \\\n
X		buttonType:rectBtn \\\n
X		exclusives:true \\\n
X		measure:4 \\\n
X		numItems:8 \\\n
X		itemFields:'{label}' \\\n
X		items:"$THECOLOR" 
X
X	cmw ANIMALS caption caption $CONTROLAREA \\\n
X		label:"Animals:"
X	
X	cmw ANIMALBUTTONS animalButtons flatButtons $ANIMALS \\\n
X		layoutType:fixedcols \\\n
X		buttonType:rectBtn \\\n
X		exclusives:true \\\n
X		measure:3 \\\n
X		numItems:9 \\\n
X		itemFields:'{label}' \\\n
X		items:"$THEANIMAL" 
X
X	cmw OK Ok flatButtons $CONTROLAREA \\\n
X		numItems:1 \\\n
X		itemFields:'{label}' \\\n
X		items:'{Ok}'
X				
X	sv $OK selectProc:"PopdownCB $POPCONTROLA"
X
X	orh $POPCONTROLA "ControlArea Source" -f `pwd`/Controlarea
X
X	pu $POPCONTROLA GrabNone
}
SHAR_EOF
chmod 0644 Controlarea ||
echo 'restore of Controlarea failed'
Wc_c="`wc -c < 'Controlarea'`"
test 1789 -eq "$Wc_c" ||
	echo 'Controlarea: original size 1789, current size' "$Wc_c"
fi
# ============= Exclusives ==============
if test -f 'Exclusives' -a X"$1" != X"-c"; then
	echo 'x - skipping Exclusives (File already exists)'
else
echo 'x - extracting Exclusives (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'Exclusives' &&
Exclusives()
{
X	cps POPEXCLUSIVES exclusives popupWindowShell $PANE \\\n
X		title:"Exclusives"
X
X	acb $POPEXCLUSIVES popdownCallback "dw $POPEXCLUSIVES"
X
X	cmw CAPTION caption caption $POPEXCLUSIVES_UCA \\\n
X		label:"Exclusives:" \\\n
X		font:OlDefaultFont
X
X	cmw EXCLUSIVES exclusives exclusives $CAPTION
X
X	cmw ON On rectButton $EXCLUSIVES 
X
X	cmw OFF Off rectButton $EXCLUSIVES 
X
X	cmw OK Ok oblongButton $POPEXCLUSIVES_LCA \\\n
X		buttonType:$BUTTON \\\n
X		select:"pd $POPEXCLUSIVES"
X
X	orh $POPEXCLUSIVES "Exclusives Source" -f `pwd`/Exclusives
X
X	pu $POPEXCLUSIVES GrabNone
}
SHAR_EOF
chmod 0644 Exclusives ||
echo 'restore of Exclusives failed'
Wc_c="`wc -c < 'Exclusives'`"
test 571 -eq "$Wc_c" ||
	echo 'Exclusives: original size 571, current size' "$Wc_c"
fi
# ============= Flatbuttons ==============
if test -f 'Flatbuttons' -a X"$1" != X"-c"; then
	echo 'x - skipping Flatbuttons (File already exists)'
else
echo 'x - extracting Flatbuttons (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'Flatbuttons' &&
Flatbuttons()
{
X	LOWER_ITEMS="{Ok}, {Apply}, {Reset}, {Cancel},  {Help}"
X	ONOFF_ITEMS="{On}, {Off}"
X	COLOR_ITEMS="{Red}, {Green}, {Blue}"
X	PERMISSION_ITEMS="{Read}, {Write}, {Execute}"
X
X	MENU_BUTTON_ITEMS="{Flat Menu Button}"
X	MENU_ITEMS="{Menu Item 1}, {Menu Item 2}, {Menu Item 3}"
X	SUB_MENU_ITEMS="{Menu Item 1}"
X
X	cmw POPUP popupWindowShell popupWindowShell $PANE \\\n
X		title:"WkshTree: Flatbuttons"
X
X	acb $POPUP popdownCallback "dw $POPUP"
X
X	cmw BELL bell caption $POPUP_UCA \\\n
X		label:"Bell:"
X
X	cmw ONOFF onoff flatButtons $BELL \\\n
X		buttonType:rectBtn \\\n
X		exclusives:true \\\n
X		numItems:2 \\\n
X		numItemFields:1 \\\n
X		itemFields:'{label}' \\\n
X		items:"$ONOFF_ITEMS"
X
X	cmw COLOR color caption $POPUP_UCA \\\n
X		label:"Color:"
X
X	cmw SIZE size flatButtons $COLOR \\\n
X		buttonType:rectBtn \\\n
X		numItems:3 \\\n
X		numItemFields:1 \\\n
X		itemFields:'{label}' \\\n
X		items:"$COLOR_ITEMS"
X
X	cmw PERMISSION permission caption $POPUP_UCA \\\n
X		label:"Permissions:"
X
X	cmw PERMISSIONS permissions flatButtons $PERMISSION \\\n
X		buttonType:checkbox \\\n
X		numItems:3 \\\n
X		numItemFields:1 \\\n
X		itemFields:'{label}' \\\n
X		items:"$PERMISSION_ITEMS"
X
X	cmw MENU_BUTTON menu_button caption $POPUP_UCA \\\n
X		label:"Flat Menu Button:"
X
X	cmw MENU_BUTTON_ITEM menu_button_item menuButton $MENU_BUTTON \\\n
X		buttonType:$BUTTON \\\n
X		label:"Flat Menu Button"
X
X	cmw CA controlarea controlArea $MENU_BUTTON_ITEM_MP \\\n
X		layoutType:fixedcols measure:1
X
X	cmw MENU_ITEM menu_items flatButtons $CA \\\n
X		layoutType:fixedcols \\\n
X		measure:1 \\\n
X		numItems:3 \\\n
X		numItemFields:1 \\\n
X		itemFields:'{label}' \\\n
X		items:"$MENU_ITEMS"
X
X	cmw OK Ok flatButtons $POPUP_LCA \\\n
X		numItems:5 \\\n
X		numItemFields:1 \\\n
X		itemFields:'{label}' \\\n
X		items:"$LOWER_ITEMS"
X
X	orh $POPUP "FlatButtons Source" -f `pwd`/Flatbuttons
X
X	pu $POPUP GrabNone
}
SHAR_EOF
chmod 0644 Flatbuttons ||
echo 'restore of Flatbuttons failed'
Wc_c="`wc -c < 'Flatbuttons'`"
test 1849 -eq "$Wc_c" ||
	echo 'Flatbuttons: original size 1849, current size' "$Wc_c"
fi
# ============= Flatcheckbox ==============
if test -f 'Flatcheckbox' -a X"$1" != X"-c"; then
	echo 'x - skipping Flatcheckbox (File already exists)'
else
echo 'x - extracting Flatcheckbox (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'Flatcheckbox' &&
Flatcheckbox()
{
X	RWXITEMS="{Read}, {Write}, {Execute}"
X
X	cps POPUP popupWindowShell popupWindowShell $PANE \\\n
X		title:"FlatCheckBox"
X
X	acb $POPUP popdownCallback "dw $POPUP"
X
X	cmw CAPTION caption caption $POPUP_UCA \\\n
X		label:"FlatCheckBox:"
X
X	cmw FLATCBOX perrmission flatCheckBox $CAPTION \\\n
X		numItems:3 \\\n
X		numItemFields:1 \\\n
X		itemFields:'{label}' \\\n
X		items:"$RWXITEMS" 
X
X	cmw OK Ok flatButtons $POPUP_LCA \\\n
X		numItems:1 \\\n
X		numItemFields:1 \\\n
X		itemFields:'{label}' \\\n
X		items:'{Ok}' 
X
X	orh $POPUP "FlatCheckBox Source" -f `pwd`/Flatcheckbox
X
X	pu $POPUP GrabNone
}
SHAR_EOF
chmod 0644 Flatcheckbox ||
echo 'restore of Flatcheckbox failed'
Wc_c="`wc -c < 'Flatcheckbox'`"
test 596 -eq "$Wc_c" ||
	echo 'Flatcheckbox: original size 596, current size' "$Wc_c"
fi
# ============= Flatexclusives ==============
if test -f 'Flatexclusives' -a X"$1" != X"-c"; then
	echo 'x - skipping Flatexclusives (File already exists)'
else
echo 'x - extracting Flatexclusives (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'Flatexclusives' &&
Flatexclusives()
{
X	ONOFFITEMS="{On}, {Off}"
X
X	cps POPUP popupWindowShell popupWindowShell $PANE \\\n
X		title:"FlatExclusives"
X
X	acb $POPUP popdownCallback "dw $POPUP"
X
X	cmw EXCLUSIVE exclusive caption $POPUP_UCA \\\n
X		label:"FlatExclusive:"
X
X	cmw ONOFF onoff flatExclusives $EXCLUSIVE \\\n
X		numItems:2 \\\n
X		numItemFields:1 \\\n
X		itemFields:'{label}' \\\n
X		items:"$ONOFFITEMS" 
X
X	cmw OK Ok flatButtons $POPUP_LCA \\\n
X		numItems:1 \\\n
X		numItemFields:1 \\\n
X		itemFields:'{label}' \\\n
X		items:'{Ok}' 
X
X	orh $POPUP "FlatExclusives Source" -f `pwd`/Flatexclusives
X
X	pu $POPUP GrabNone
}
SHAR_EOF
chmod 0644 Flatexclusives ||
echo 'restore of Flatexclusives failed'
Wc_c="`wc -c < 'Flatexclusives'`"
test 593 -eq "$Wc_c" ||
	echo 'Flatexclusives: original size 593, current size' "$Wc_c"
fi
# ============= Flatlist ==============
if test -f 'Flatlist' -a X"$1" != X"-c"; then
	echo 'x - skipping Flatlist (File already exists)'
else
echo 'x - extracting Flatlist (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'Flatlist' &&
Flatlist()
{
X	COLOR_ITEMS="{Red}, {Green}, {Blue}, {Orange}, {Purple},
X		     {Pink}, {Black}, {White}"
X
X	cps POPUP popup popupWindowShell $PANE \\\n
X		title:"WkshTree: FlatList"
X
X	cmw CAPTION caption caption $POPUP_UCA \\\n
X		label:"Flat List:"
X
X	cmw SW sw scrolledWindow $CAPTION \\\n
X		forceVerticalSB:true
X
X	cmw FLIST flist flatList $SW \\\n
X		exclusives:true \\\n
X		viewHeight:4 \\\n
X		numItems:8 \\\n
X		numItemFields:1 \\\n
X		itemFields:'{label}' \\\n
X		items:"$COLOR_ITEMS"
X
X	cmw OK Ok flatButtons $POPUP_LCA \\\n
X		numItems:1 \\\n
X		numItemFields:1 \\\n
X		itemFields:'{label}' \\\n
X		items:'{Ok}'
X
X	orh $POPUP "FlatList Source" -f `pwd`/Flatlist
X
X	pu $POPUP GrabNone
}
SHAR_EOF
chmod 0644 Flatlist ||
echo 'restore of Flatlist failed'
Wc_c="`wc -c < 'Flatlist'`"
test 677 -eq "$Wc_c" ||
	echo 'Flatlist: original size 677, current size' "$Wc_c"
fi
# ============= Flatnonexclusives ==============
if test -f 'Flatnonexclusives' -a X"$1" != X"-c"; then
	echo 'x - skipping Flatnonexclusives (File already exists)'
else
echo 'x - extracting Flatnonexclusives (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'Flatnonexclusives' &&
Flatnonexclusives()
{
X	RWXITEMS="{Read}, {Write}, {Execute}"
X
X	cps POPUP popupWindowShell popupWindowShell $PANE \\\n
X		title:"FlatNonexclusives" 
X
X	acb $POPUP popdownCallback "dw $POPUP"
X
X	cmw CAPTION lights caption $POPUP_UCA \\\n
X		label:"FlatNonexclusive:"
X
X	cmw PERMS permission flatNonexclusives $CAPTION \\\n
X		numItems:3 \\\n
X		numItemFields:1 \\\n
X		itemFields:'{label}' \\\n
X		items:"$RWXITEMS" 
X
X	cmw OK Ok flatButtons $POPUP_LCA \\\n
X		numItems:1 \\\n
X		numItemFields:1 \\\n
X		itemFields:'{label}' \\\n
X		items:'{Ok}' 
X
X	orh $POPUP "FlatNonexclusives Source" -f `pwd`/Flatnonexclusives
X
X	pu $POPUP GrabNone
}
SHAR_EOF
chmod 0644 Flatnonexclusives ||
echo 'restore of Flatnonexclusives failed'
Wc_c="`wc -c < 'Flatnonexclusives'`"
test 621 -eq "$Wc_c" ||
	echo 'Flatnonexclusives: original size 621, current size' "$Wc_c"
fi
# ============= Footer ==============
if test -f 'Footer' -a X"$1" != X"-c"; then
	echo 'x - skipping Footer (File already exists)'
else
echo 'x - extracting Footer (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'Footer' &&
Footer()
{
X	cps POPUP popupWindowShell popupWindowShell $PANE \\\n
X		resizeCorners:true \\\n
X		title:"WkshTree: Footer"
X
X	acb $POPUP popdownCallback "dw $POPUP"
X
X	sv $POPUP_UCA width:295 
X
X	cmw FOOTER footer footer $POPUP_FP \\\n
X		leftFoot:"Left footer message" \\\n
X		leftWeight:1 \\\n
X		rightFoot:"Right footer message" \\\n
X		rightWeight:1
X	
X	cmw OK Ok flatButtons $POPUP_LCA \\\n
X		numItems:1 \\\n
X		numItemFields:1 \\\n
X		itemFields:'{label}' \\\n
X		items:'{Ok}' 
X
X	orh $POPUP "Footer Source" -f `pwd`/Footer
X
X	pu $POPUP GrabNone
}
SHAR_EOF
chmod 0644 Footer ||
echo 'restore of Footer failed'
Wc_c="`wc -c < 'Footer'`"
test 538 -eq "$Wc_c" ||
	echo 'Footer: original size 538, current size' "$Wc_c"
fi
# ============= Footerpanel ==============
if test -f 'Footerpanel' -a X"$1" != X"-c"; then
	echo 'x - skipping Footerpanel (File already exists)'
else
echo 'x - extracting Footerpanel (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'Footerpanel' &&
Footerpanel()
{
X	cps FOOTERPOPUP Footerpanel transientShell $PANE \\\n
X		title:"WkshTree: FooterPanel" 
X
X	cmw FOOTERPANEL footerpanel footerPanel $FOOTERPOPUP
X
X	cmw OK Ok flatButtons $FOOTERPANEL \\\n
X		gravity:center \\\n
X		numItems:1 \\\n
X		numItemFields:1 \\\n
X		itemFields:'{label}' \\\n
X		items:'{Ok}' 
X
X	sv $OK selectProc:"PopdownCB $FOOTERPOPUP"
X
X	cmw FOOTER footer footer $FOOTERPANEL \\\n
X		leftFoot:"Left Message" \\\n
X		rightFoot:"Right Message"
X
X	orh $FOOTERPOPUP "FooterPanel Source" -f `pwd`/Footerpanel
X
X	pu $FOOTERPOPUP GrabNone
}
SHAR_EOF
chmod 0644 Footerpanel ||
echo 'restore of Footerpanel failed'
Wc_c="`wc -c < 'Footerpanel'`"
test 547 -eq "$Wc_c" ||
	echo 'Footerpanel: original size 547, current size' "$Wc_c"
fi
# ============= Form ==============
if test -f 'Form' -a X"$1" != X"-c"; then
	echo 'x - skipping Form (File already exists)'
else
echo 'x - extracting Form (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'Form' &&
Form()
{
X	cps POPFORM transientShell transientShell $PANE \\\n
X		title:"WkshTree: Form" 
X
X	cmw CAPTION caption caption $POPFORM \\\n
X		label:"Form:" \\\n
X		position:top \\\n
X		alignment:left 
X
X	cmw FORM form form $CAPTION \\\n
X		width:150 \\\n
X		height:150 \\\n
X		shadowThickness:0
X
X	cmw ATTACHLEFT AttachLeft staticText $FORM \\\n
X		string:"Attach Left" \\\n
X		yOffset:50
X
X	cmw ATTACHTOP AttachTop staticText $FORM \\\n
X		string:"Attach Top" \\\n
X		xRefName:AttachLeft \\\n
X		xAddWidth:true
X
X	cmw ATTACHRIGHT AttachRight staticText $FORM \\\n
X		string:"Attach Right" \\\n
X		xAttachRight:true \\\n
X		xAddWidth:true \\\n
X		xVaryOffset:true \\\n
X		yOffset:50 \\\n
X		xRefName:AttachTop
X
X	cmw OK Ok oblongButton $FORM \\\n
X		buttonType:$BUTTON \\\n
X		yAttachBottom:true \\\n
X		yRefName:AttachTop \\\n
X		yAddHeight:true \\\n
X		yVaryOffset:true \\\n
X		xOffset:85
X
X	sv $OK select:"PopdownCB $POPFORM"
X
X	orh $POPFORM "Form Source" -f `pwd`/Form
X
X	pu $POPFORM GrabNone
}
SHAR_EOF
chmod 0644 Form ||
echo 'restore of Form failed'
Wc_c="`wc -c < 'Form'`"
test 962 -eq "$Wc_c" ||
	echo 'Form: original size 962, current size' "$Wc_c"
fi
# ============= Gauge ==============
if test -f 'Gauge' -a X"$1" != X"-c"; then
	echo 'x - skipping Gauge (File already exists)'
else
echo 'x - extracting Gauge (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'Gauge' &&
Gauge()
{
X	cps POPUP popupWindowShell popupWindowShell $PANE \\\n
X		title:"Gauge" 
X
X	acb $POPUP popdownCallback "dw $POPUP"
X
X	cmw CAPTION caption caption $POPUP_UCA \\\n
X		label:"Gauge:" \\\n
X		font:OlDefaultBoldFont \\\n
X		position:left
X
X	cmw GAUGE gauge gauge $CAPTION \\\n
X		span:100 \\\n
X		sliderValue:33 \\\n
X		minLabel:"0" \\\n
X		maxLabel:"100" \\\n
X		ticks:10 \\\n
X		tickUnit:percent \\\n
X		showValue:true
X
X	cmw OK Ok flatButtons $POPUP_LCA \\\n
X		numItems:1 \\\n
X		numItemFields:1 \\\n
X		itemFields:'{label}' \\\n
X		items:'{Ok}' 
X
X	orh $POPUP "Gauge Source" -f `pwd`/Gauge
X
X	pu $POPUP GrabNone
}
SHAR_EOF
chmod 0644 Gauge ||
echo 'restore of Gauge failed'
Wc_c="`wc -c < 'Gauge'`"
test 604 -eq "$Wc_c" ||
	echo 'Gauge: original size 604, current size' "$Wc_c"
fi
# ============= Guage ==============
if test -f 'Guage' -a X"$1" != X"-c"; then
	echo 'x - skipping Guage (File already exists)'
else
echo 'x - extracting Guage (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'Guage' &&
Gauge()
{
X	cps POPUP popupWindowShell popupWindowShell $PANE \\\n
X		title:"Gauge" 
X
X	acb $POPUP popdownCallback "dw $POPUP"
X
X	cmw CAPTION caption caption $POPUP_UCA \\\n
X		label:"Gauge:" \\\n
X		font:OlDefaultBoldFont \\\n
X		position:left
X
X	cmw GAUGE gauge gauge $CAPTION \\\n
X		span:100 \\\n
X		sliderValue:33 \\\n
X		minLabel:"0" \\\n
X		maxLabel:"100" \\\n
X		ticks:10 \\\n
X		tickUnit:percent \\\n
X		showValue:true
X
X	cmw OK Ok flatButtons $POPUP_LCA \\\n
X		numItems:1 \\\n
X		numItemFields:1 \\\n
X		itemFields:'{label}' \\\n
X		items:'{Ok}' 
X
X	orh $POPUP "Gauge Source" -f `pwd`/Gauge
X
X	pu $POPUP GrabNone
}
SHAR_EOF
chmod 0644 Guage ||
echo 'restore of Guage failed'
Wc_c="`wc -c < 'Guage'`"
test 604 -eq "$Wc_c" ||
	echo 'Guage: original size 604, current size' "$Wc_c"
fi
# ============= Help ==============
if test -f 'Help' -a X"$1" != X"-c"; then
	echo 'x - skipping Help (File already exists)'
else
echo 'x - extracting Help (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'Help' &&
Help()
{
X	cps POPUP help popupWindowShell $PANE \\\n
X		title:"WkshTree: Help"
X
X	acb $POPUP popdownCallback "dw $POPUP"
X
X	cmw CAPTION caption caption $POPUP_UCA \\\n
X		font:OlDefaultBoldFont \\\n
X		label:"Help:" 
X
X	cmw TEXT statictext staticText $CAPTION \\\n
X		string:"The Help Widget is not explicitly created and manipulated by an application. The OlRegisterHelp function is used in an application to register a help file, a help string, or a help function that is displayed when the user presses the Hel key (F1).  The Help widget is a shell that contains a magnifying glass to indicate the context, and a TextEdit widget to display the help message. \n\nPosition the curser here and press F1 for help." \\\n
X		alignment:left \\\n
X		width:350 \\\n
X		recomputeSize:false
X
X	cmw OK Ok flatButtons $POPUP_LCA \\\n
X		numItems:1 \\\n
X		numItemFields:1 \\\n
X		itemFields:'{label}' \\\n
X		items:'{Ok}' 
X		
X	orh $POPUP "Help Source" -f `pwd`/Help
X
X	pu $POPUP GrabNone
}
SHAR_EOF
chmod 0644 Help ||
echo 'restore of Help failed'
Wc_c="`wc -c < 'Help'`"
test 964 -eq "$Wc_c" ||
	echo 'Help: original size 964, current size' "$Wc_c"
fi
# ============= Integerfield ==============
if test -f 'Integerfield' -a X"$1" != X"-c"; then
	echo 'x - skipping Integerfield (File already exists)'
else
echo 'x - extracting Integerfield (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'Integerfield' &&
Integerfield()
{
X	cps POPUP popupWindowShell popupWindowShell $PANE \\\n
X		title:"IntegerField"
X
X	acb $POPUP popdownCallback "dw $POPUP"
X
X	cmw CAPTION caption caption $POPUP_UCA \\\n
X		label:"IntegerField:" \\\n
X		font:OlDefaultBoldFont \\\n
X		position:left
X
X	cmw INTFIELD integerField integerField $CAPTION \\\n
X		value:10 \\\n
X		charsVisible:3
X
X	cmw OK Ok flatButtons $POPUP_LCA \\\n
X		numItems:1 \\\n
X		numItemFields:1 \\\n
X		itemFields:'{label}' \\\n
X		items:'{Ok}' 
X
X	sv $OK selectProc:"PopdownCB $POPUP"
X
X	orh $POPUP "IntegerField Source" -f `pwd`/Integerfield
X
X	pu $POPUP GrabNone
}	
SHAR_EOF
chmod 0644 Integerfield ||
echo 'restore of Integerfield failed'
Wc_c="`wc -c < 'Integerfield'`"
test 591 -eq "$Wc_c" ||
	echo 'Integerfield: original size 591, current size' "$Wc_c"
fi
# ============= MenuShell ==============
if test -f 'MenuShell' -a X"$1" != X"-c"; then
	echo 'x - skipping MenuShell (File already exists)'
else
echo 'x - extracting MenuShell (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'MenuShell' &&
# Create menuShell from button pressed by user
MenuShell()
{
X	cps POPUP "WkshTree:Menu" popupWindowShell $PANE \\\n
X		maxHeight:100 maxWidth:200
X
X	acb $POPUP popdownCallback "PopdownCB $POPUP"
X
X	cps MENUSHELLPOP "Menu" menuShell $POPUP_UCA \\\n
X		pushpin:out
X	cmw TMP ca controlArea $MENUSHELLPOP_MP \\\n
X		layoutType:fixedcols measure:1
X
X	cmw SAVE Save... oblongButton $TMP \\\n
X		buttonType:$BUTTON
X	cmw OPEN Open... oblongButton $TMP \\\n
X		buttonType:$BUTTON
X	cmw PROP Properties... oblongButton $TMP \\\n
X		buttonType:$BUTTON
X	cmw EXIT Exit... oblongButton $TMP \\\n
X		buttonType:$BUTTON
X
X	cmw STRING text staticText $POPUP_UCA \\\n
X		string:"MenuShell: Press MenuButton for menu"
X
X	addbuttons $POPUP_LCA \\\n
X	 	Ok	" "
X
X	pu $POPUP GrabNone
}
SHAR_EOF
chmod 0644 MenuShell ||
echo 'restore of MenuShell failed'
Wc_c="`wc -c < 'MenuShell'`"
test 748 -eq "$Wc_c" ||
	echo 'MenuShell: original size 748, current size' "$Wc_c"
fi
# ============= Menubutton ==============
if test -f 'Menubutton' -a X"$1" != X"-c"; then
	echo 'x - skipping Menubutton (File already exists)'
else
echo 'x - extracting Menubutton (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'Menubutton' &&
Menubutton()
{
X	cps POPUP popupWindowShell popupWindowShell $PANE \\\n
X		title:"MenuButton"
X
X	acb $POPUP popdownCallback "dw $POPUP"
X
X	cmw MENUBUTTON menuButton menuButton $POPUP_UCA \\\n
X		label:"Menu Button Widget" 
X
X	cmw OPEN Open... oblongButton $MENUBUTTON_MP \\\n
X		buttonType:$BUTTON
X
X	cmw SAVE Save... oblongButton $MENUBUTTON_MP \\\n
X		buttonType:$BUTTON
X
X	cmw EXIT Exit oblongButton $MENUBUTTON_MP \\\n
X		buttonType:$BUTTON
X
X	cmw OK Ok oblongButton $POPUP_LCA \\\n
X		buttonType:$BUTTON
X
X	orh $POPUP "MenuButton Source" -f `pwd`/Menubutton
X
X	pu $POPUP GrabNone
}
SHAR_EOF
chmod 0644 Menubutton ||
echo 'restore of Menubutton failed'
Wc_c="`wc -c < 'Menubutton'`"
test 572 -eq "$Wc_c" ||
	echo 'Menubutton: original size 572, current size' "$Wc_c"
fi
# ============= Menubuttongadget ==============
if test -f 'Menubuttongadget' -a X"$1" != X"-c"; then
	echo 'x - skipping Menubuttongadget (File already exists)'
else
echo 'x - extracting Menubuttongadget (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'Menubuttongadget' &&
Menubuttongadget()
{
X	cps POPUP popupWindowShell popupWindowShell $PANE \\\n
X		title:"Menu Button Gadget" 
X	
X	acb $POPUP popdownCallback "dw $POPUP"
X
X	cmw MENUGADGET menuGadget menuButtonGadget $POPUP_UCA \\\n
X		label:"Menu Button Gadget"
X
X	cmw OPEN Open... oblongButtonGadget $MENUGADGET_MP
X	
X	cmw SAVE Save... oblongButtonGadget $MENUGADGET_MP
X
X	cmw EXIT Exit oblongButtonGadget $MENUGADGET_MP
X
X	cmw OK Ok oblongButtonGadget $POPUP_LCA
X
X	orh $POPUP "MenuButtonGadget Source" -f `pwd`/Menubuttongadget
X
X	pu $POPUP GrabNone
}	
SHAR_EOF
chmod 0644 Menubuttongadget ||
echo 'restore of Menubuttongadget failed'
Wc_c="`wc -c < 'Menubuttongadget'`"
test 527 -eq "$Wc_c" ||
	echo 'Menubuttongadget: original size 527, current size' "$Wc_c"
fi
# ============= Modalshell ==============
if test -f 'Modalshell' -a X"$1" != X"-c"; then
	echo 'x - skipping Modalshell (File already exists)'
else
echo 'x - extracting Modalshell (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'Modalshell' &&
Modalshell()
{
X	cps POPUP modalshell modalShell $PANE \\\n
X		emanateWidget:$PANE 
X
X	acb $POPUP popdownCallback "pd $POPUP"
X
X	cmw TEXT staticText staticText $POPUP \\\n
X		string:"Error: ModalShell displays modal messages" \\\n
X		gravity:center
X
X	cmw OK Ok flatButtons $POPUP \\\n
X		numItems:1 \\\n
X		numItemFields:1 \\\n
X		itemFields:'{label}' \\\n
X		items:'{Ok}' 
X
X	sv $OK selectProc:"PopdownCB $POPUP"
X
X	pu $POPUP GrabExclusive
}
SHAR_EOF
chmod 0644 Modalshell ||
echo 'restore of Modalshell failed'
Wc_c="`wc -c < 'Modalshell'`"
test 431 -eq "$Wc_c" ||
	echo 'Modalshell: original size 431, current size' "$Wc_c"
fi
# ============= Nonexclusives ==============
if test -f 'Nonexclusives' -a X"$1" != X"-c"; then
	echo 'x - skipping Nonexclusives (File already exists)'
else
echo 'x - extracting Nonexclusives (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'Nonexclusives' &&
Nonexclusives()
{
X	cps NONEXCPOPUP Nonexclusives popupWindowShell $PANE \\\n
X		title:"FlatNonexclusives" 
X
X	acb $NONEXCPOPUP popdownCallback "dw $NONEXCPOPUP"
X
X	cmw CAPTION caption caption $NONEXCPOPUP_UCA \\\n
X		label:"Nonexclusives"
X
X	cmw NEXC nonexclusives nonexclusives $CAPTION
X
X	cmw RED Red rectButton $NEXC 
X
X	cmw GREEN Green rectButton $NEXC 
X
X	cmw BLUE Blue rectButton $NEXC
X
X	cmw OK Ok oblongButton $NONEXCPOPUP_LCA \\\n
X		buttonType:$BUTTON
X
X	orh $NONEXCPOPUP "Nonexclusives Source" -f `pwd`/Nonexclusives
X
X	pu $NONEXCPOPUP GrabNone
}
SHAR_EOF
chmod 0644 Nonexclusives ||
echo 'restore of Nonexclusives failed'
Wc_c="`wc -c < 'Nonexclusives'`"
test 546 -eq "$Wc_c" ||
	echo 'Nonexclusives: original size 546, current size' "$Wc_c"
fi
# ============= Noticeshell ==============
if test -f 'Noticeshell' -a X"$1" != X"-c"; then
	echo 'x - skipping Noticeshell (File already exists)'
else
echo 'x - extracting Noticeshell (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'Noticeshell' &&
NoticeShell()
{
X	cps NOTICE notice noticeShell $PANE \\\n
X		title:"Information Dialog" \\\n
X		noticeType:information \\\n
X		emanateWidget:$PANE
X
X	acb $NOTICE popdownCallback "dw $NOTICE"
X
X	sv $NOTICE_TA string:"Information: NoticeShell displays messages" 
X
X	cmw OK Ok flatButtons $NOTICE_CA \\\n
X		numItems:1 \\\n
X		numItemFields:2 \\\n
X		itemFields:'{label}' \\\n
X		items:'{Ok}'
X
X	orh $NOTICE "NoticeShell Source" -f `pwd`/Noticeshell
X
X	pu $NOTICE GrabExclusive
X	
}
SHAR_EOF
chmod 0644 Noticeshell ||
echo 'restore of Noticeshell failed'
Wc_c="`wc -c < 'Noticeshell'`"
test 467 -eq "$Wc_c" ||
	echo 'Noticeshell: original size 467, current size' "$Wc_c"
fi
# ============= Oblongbutton ==============
if test -f 'Oblongbutton' -a X"$1" != X"-c"; then
	echo 'x - skipping Oblongbutton (File already exists)'
else
echo 'x - extracting Oblongbutton (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'Oblongbutton' &&
Oblongbutton()
{
X	cps POPUP popupWindowShell popupWindowShell $PANE \\\n
X		title:"Oblongbutton"
X
X	acb $POPUP popdownCallback "dw $POPUP"
X
X	cmw OBW "Oblong Button Widget" oblongButton $POPUP_LCA \\\n
X		buttonType:$BUTTON \\\n
X		accelerator:"Ctrl<z>"
X
X	orh $POPUP "Oblongbutton Source" -f `pwd`/Oblongbutton
X
X	pu $POPUP GrabNone
}
SHAR_EOF
chmod 0644 Oblongbutton ||
echo 'restore of Oblongbutton failed'
Wc_c="`wc -c < 'Oblongbutton'`"
test 329 -eq "$Wc_c" ||
	echo 'Oblongbutton: original size 329, current size' "$Wc_c"
fi
# ============= Oblongbuttongadget ==============
if test -f 'Oblongbuttongadget' -a X"$1" != X"-c"; then
	echo 'x - skipping Oblongbuttongadget (File already exists)'
else
echo 'x - extracting Oblongbuttongadget (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'Oblongbuttongadget' &&
Oblongbuttongadget()
{
X	cps POPUP popupWindowShell popupWindowShell $PANE \\\n
X		title:"OblongButtonGadget"
X
X	acb $POPUP popdownCallback "dw $POPUP"
X
X	cmw OBG oblongButtongadget oblongButtonGadget $POPUP_LCA \\\n
X		label:"Oblong Button Gadget"
X
X	orh $POPUP "OblongButtonGadget Source" -f `pwd`/Oblongbuttongadget
X
X	pu $POPUP GrabNone
}
SHAR_EOF
chmod 0644 Oblongbuttongadget ||
echo 'restore of Oblongbuttongadget failed'
Wc_c="`wc -c < 'Oblongbuttongadget'`"
test 336 -eq "$Wc_c" ||
	echo 'Oblongbuttongadget: original size 336, current size' "$Wc_c"
fi
# ============= Panes ==============
if test -f 'Panes' -a X"$1" != X"-c"; then
	echo 'x - skipping Panes (File already exists)'
else
echo 'x - extracting Panes (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'Panes' &&
Panes()
{
X	cps POPUP transientShell transientShell $PANE \\\n
X		title:"WkshTree: Panes" 
X
X	cmw CAPTION caption caption $POPUP \\\n
X		label:"Panes:" \\\n
X		font:OlDefaultBoldFont \\\n
X		position:top \\\n
X		alignment:left
X
X	cmw PANES panes panes $CAPTION 
X
X	cmw PANE_0 pane_0 $TYPEBUTTON $PANES \\\n
X		buttonType:$BUTTON \\\n
X		weight:0
X
X	cmw PANE_1 pane_1 $TYPEBUTTON $PANES \\\n
X		buttonType:$BUTTON \\\n
X		weight:1 \\\n
X		refName:"pane_0" \\\n
X		refPosition:bottom 
X
X	cmw PANE_2 pane_2 $TYPEBUTTON $PANES \\\n
X		buttonType:$BUTTON \\\n
X		weight:2 \\\n
X		refName:"pane_1" \\\n
X		refPosition:right
X
X	cmw PANE_3 pane_3 $TYPEBUTTON $PANES \\\n
X		buttonType:$BUTTON \\\n
X		weight:2 \\\n
X		refName:"pane_2" \\\n
X		refPosition:bottom
X
X	cmw OK Ok flatButtons $PANES \\\n
X		numItems:1 \\\n
X		numItemFields:1 \\\n
X		itemFields:'{label}' \\\n
X		items:'{Ok}' \\\n
X		gravity:center
X
X	acb $PANE_0 select "ButtonCB $PANE_0"
X	acb $PANE_1 select "ButtonCB $PANE_1"
X	acb $PANE_2 select "ButtonCB $PANE_2"
X	acb $PANE_3 select "ButtonCB $PANE_3"
X
X	sv $OK selectProc:"PopdownCB $POPUP"
X
X	orh $POPUP "Panes Source" -f `pwd`/Panes
X
X	pu $POPUP GrabNone
}
SHAR_EOF
chmod 0644 Panes ||
echo 'restore of Panes failed'
Wc_c="`wc -c < 'Panes'`"
test 1132 -eq "$Wc_c" ||
	echo 'Panes: original size 1132, current size' "$Wc_c"
fi
# ============= Popupmenushell ==============
if test -f 'Popupmenushell' -a X"$1" != X"-c"; then
	echo 'x - skipping Popupmenushell (File already exists)'
else
echo 'x - extracting Popupmenushell (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'Popupmenushell' &&
PopupMenuShell()
{
X	cps POP PopupMenu popupWindowShell $PANE 
X
X	acb $POP popdownCallback "dw $POP"
X
X	cmw POPCAP PopupMenu caption $POP_UCA \\\n
X		font:OlDefaultBoldFont \\\n
X		label:"PopupMenu:"
X	cmw TEXT text staticText $POPCAP \\\n
X		string:"Press MenuButton for menu"
X
X	cps PMS PopupMenu popupMenuShell $POP \\\n
X		ancestorSensitive:true \\\n
X		title:"PopupMenu" 
X
X	cmw SAVE Save... oblongButton $PMS \\\n
X		buttonType:$BUTTON
X	cmw OPEN Open... oblongButton $PMS \\\n
X		buttonType:$BUTTON
X	cmw PROP Properties... oblongButton $PMS \\\n
X		buttonType:$BUTTON
X	cmw EXIT Exit oblongButton $PMS \\\n
X		buttonType:$BUTTON \\\n
X		select:"pd $PMS"
X	addbuttons $POP_LCA \\\n
X		OK	" "
X
X	orh $POP "PopupMenuShell Source" -f `pwd`/Popupmenushell
X
X	pu $POP GrabNone
}
SHAR_EOF
chmod 0644 Popupmenushell ||
echo 'restore of Popupmenushell failed'
Wc_c="`wc -c < 'Popupmenushell'`"
test 758 -eq "$Wc_c" ||
	echo 'Popupmenushell: original size 758, current size' "$Wc_c"
fi
# ============= Popupwindowshell ==============
if test -f 'Popupwindowshell' -a X"$1" != X"-c"; then
	echo 'x - skipping Popupwindowshell (File already exists)'
else
echo 'x - extracting Popupwindowshell (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'Popupwindowshell' &&
PopupWindowShell()
{
X	cps POP PopupWindowShell popupWindowShell $PANE \\\n
X		title:"PopupWindowShell"  \\\n
X		apply:" " \\\n
X		reset:" " \\\n
X		resetFactory:" " \\\n
X		setDefaults:" "
X
X	acb $POP popdownCallback "dw $POP"
X
X	cmw CAP1 caption caption $POP_UCA \\\n
X		label:"Bell:"
X
X	cmw CAP1BUT buttons flatButtons $CAP1 \\\n
X		buttonType:rectbtn exclusives:true \\\n
X		numItems:2 itemFields:'{label}' \\\n
X		items:'{On}, {Off}'
X		
X	cmw CAP2 size caption $POP_UCA \\\n
X		label:"Point Size:"
X
X	cmw CAP2BUT buttons flatButtons $CAP2 \\\n
X		buttonType:rectbtn exclusives:true \\\n
X		numItems:7 itemFields:'{label}' \\\n
X		items:'{6}, {8}, {10}, {12}, {14}, {18}, {24}'
X
X	cmw FOOT footer footer $POP_FP \\\n
X		leftFoot:"Left" rightFoot:"Right"
X
X	orh $POP "PopupWindowShell Source" -f `pwd`/Popupwindowshell
X
X	pu $POP GrabNone
}
SHAR_EOF
chmod 0644 Popupwindowshell ||
echo 'restore of Popupwindowshell failed'
Wc_c="`wc -c < 'Popupwindowshell'`"
test 821 -eq "$Wc_c" ||
	echo 'Popupwindowshell: original size 821, current size' "$Wc_c"
fi
# ============= Rectbutton ==============
if test -f 'Rectbutton' -a X"$1" != X"-c"; then
	echo 'x - skipping Rectbutton (File already exists)'
else
echo 'x - extracting Rectbutton (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'Rectbutton' &&
Rectbutton()
{
X	cps POPUP popupWindowShell popupWindowShell $PANE \\\n
X		title:"RectButton"
X
X	acb $POPUP popdownCallback "dw $POPUP"
X
X	cmw RECTB "Rect Button Widget" rectButton $POPUP_UCA 
X
X	cmw OK Ok oblongButton $POPUP_LCA \\\n
X		buttonType:$BUTTON
X
X	orh $POPUP "RectButton Source" -f `pwd`/Rectbutton
X
X	pu $POPUP GrabNone
}
SHAR_EOF
chmod 0644 Rectbutton ||
echo 'restore of Rectbutton failed'
Wc_c="`wc -c < 'Rectbutton'`"
test 327 -eq "$Wc_c" ||
	echo 'Rectbutton: original size 327, current size' "$Wc_c"
fi
# ============= Rubbertile ==============
if test -f 'Rubbertile' -a X"$1" != X"-c"; then
	echo 'x - skipping Rubbertile (File already exists)'
else
echo 'x - extracting Rubbertile (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'Rubbertile' &&
Rubbertile()
{
X	cps POPUP transientShell transientShell $PANE \\\n
X		title:"WkshTree: RubberTile" \\\n
X		sensitive:true
X
X	cmw CAPTION caption caption $POPUP \\\n
X		label:"RubberTile:" \\\n
X		font:OlDefaultBoldFont \\\n
X		position:top \\\n
X		alignment:left
X
X	cmw RUBBERTILE rubberTile rubberTile $CAPTION \\\n
X		orientation:vertical
X
X	cmw WEIGHT_0 weight_0 $TYPEBUTTON $RUBBERTILE \\\n
X		buttonType:$BUTTON \\\n
X		weight:0
X
X	cmw WEIGHT_1 weight_1 $TYPEBUTTON $RUBBERTILE \\\n
X		buttonType:$BUTTON \\\n
X		weight:1
X
X	cmw WEIGHT_2 weight_2 $TYPEBUTTON $RUBBERTILE \\\n
X		buttonType:$BUTTON \\\n
X		weight:2
X
X	cmw RUBBERTILE2 rubberTile2 rubberTile $RUBBERTILE \\\n
X		weight:0 \\\n
X		orientation:horizontal \\\n
X		shadowThickness:0
X	
X	cmw OK Ok flatButtons $RUBBERTILE2 \\\n
X		numItems:1 \\\n
X		numItemFields:1 \\\n
X		itemFields:'{label}' \\\n
X		items:'{Ok}' \\\n
X		weight:0
X
X	acb $WEIGHT_0 select "ButtonCB $WEIGHT_0"
X	acb $WEIGHT_1 select "ButtonCB $WEIGHT_1"
X	acb $WEIGHT_2 select "ButtonCB $WEIGHT_2"
X
X	sv $OK selectProc:"PopdownCB $POPUP"
X
X	orh $POPUP "RubberTile Source" -f `pwd`/Rubbertile
X
X	pu $POPUP GrabNone
}
SHAR_EOF
chmod 0644 Rubbertile ||
echo 'restore of Rubbertile failed'
Wc_c="`wc -c < 'Rubbertile'`"
test 1114 -eq "$Wc_c" ||
	echo 'Rubbertile: original size 1114, current size' "$Wc_c"
fi
# ============= Scrollbar ==============
if test -f 'Scrollbar' -a X"$1" != X"-c"; then
	echo 'x - skipping Scrollbar (File already exists)'
else
echo 'x - extracting Scrollbar (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'Scrollbar' &&
Scrollbar()
{
X	cps POPUP popupWindowShell popupWindowShell $PANE \\\n
X		title:"Scrollbar"
X
X	acb $POPUP popdownCallback "dw $POPUP" 
X
X	cmw CAPTION caption caption $POPUP_UCA \\\n
X		label:"Scrollbar" \\\n
X		font:OlDefaultBoldFont \\\n
X		position:left \\\n
X		width:200
X
X	cmw SCROLLBAR scrollbar scrollbar $CAPTION \\\n
X		height:100 \\\n
X		proportionLength:40 \\\n
X		showPage:right \\\n
X		currentPage:2
X
X	cmw OK Ok flatButtons $POPUP_LCA \\\n
X		numItems:1 \\\n
X		numItemFields:1 \\\n
X		itemFields:'{label}' \\\n
X		items:'{Ok}' 
X			
X	orh $POPUP "Scrollbar Source" -f `pwd`/Scrollbar
X
X	pu $POPUP GrabNone
}
SHAR_EOF
chmod 0644 Scrollbar ||
echo 'restore of Scrollbar failed'
Wc_c="`wc -c < 'Scrollbar'`"
test 601 -eq "$Wc_c" ||
	echo 'Scrollbar: original size 601, current size' "$Wc_c"
fi
# ============= Scrolledwindow ==============
if test -f 'Scrolledwindow' -a X"$1" != X"-c"; then
	echo 'x - skipping Scrolledwindow (File already exists)'
else
echo 'x - extracting Scrolledwindow (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'Scrolledwindow' &&
Scrolledwindow()
{
X	cps POPUP popupWindowShell popupWindowShell $PANE \\\n
X		title:"WkshTree: ScrolledWindow"
X
X	acb $POPUP popdownCallback "dw $POPUP"
X
X	cmw CAPTION caption caption $POPUP_UCA \\\n
X		label:"Scrolled Window:" \\\n
X		font:OlDefaultBoldFont \\\n
X		position:top \\\n
X		alignment:left
X
X	cmw SCROLLEDWINDOW scrolledwindow scrolledWindow $CAPTION \\\n
X		recomputeWidth:false \\\n
X		recomputeHeight:false \\\n
X		forceHorizontalSB:true \\\n
X		forceVerticalSB:true 
X
X	cmw TEXT textedit textEdit $SCROLLEDWINDOW \\\n
X		source:"The TextEdit widget displays multi-line text." \\\n
X		width:200 \\\n
X		height:200 
X
X	cmw OK Ok flatButtons $POPUP_LCA \\\n
X		numItems:1 \\\n
X		numItemFields:1 \\\n
X		itemFields:'{label}' \\\n
X		items:'{Ok}' 
X		
X	sv $OK selectProc:"PopdownCB $POPUP" 
X
X	orh $POPUP "ScrolledWindow Source" -f `pwd`/Scrolledwindow
X
X	pu $POPUP GrabNone
}
SHAR_EOF
chmod 0644 Scrolledwindow ||
echo 'restore of Scrolledwindow failed'
Wc_c="`wc -c < 'Scrolledwindow'`"
test 866 -eq "$Wc_c" ||
	echo 'Scrolledwindow: original size 866, current size' "$Wc_c"
fi
# ============= Scrollinglist ==============
if test -f 'Scrollinglist' -a X"$1" != X"-c"; then
	echo 'x - skipping Scrollinglist (File already exists)'
else
echo 'x - extracting Scrollinglist (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'Scrollinglist' &&
ScrollingList()
{
X	THECOLOR="Red Green Blue Orange Purple Pink Black White"
X
X	cps POPUP scrollinglist popupWindowShell $PANE \\\n
X		title:"WkshTree: ScrollingList" 
X
X	acb $POPUP popdownCallback "dw $POPUP"
X
X	cmw CAPTION caption caption $POPUP_UCA \\\n
X		label:"Scrolling List:" 
X
X	cmw SLIST scrollingList scrollingList $CAPTION \\\n
X		viewHeight:3 
X
X	sladd $SLIST $THECOLOR
X
X	cmw OK Ok flatButtons $POPUP_LCA \\\n
X		numItems:1 \\\n
X		numItemFields:1 \\\n
X		itemFields:'{label}' \\\n
X		items:'{Ok}'
X
X	orh $POPUP "ScrollingList Source" -f `pwd`/Scrollinglist
X
X	pu $POPUP GrabNone
}
SHAR_EOF
chmod 0644 Scrollinglist ||
echo 'restore of Scrollinglist failed'
Wc_c="`wc -c < 'Scrollinglist'`"
test 580 -eq "$Wc_c" ||
	echo 'Scrollinglist: original size 580, current size' "$Wc_c"
fi
# ============= Slider ==============
if test -f 'Slider' -a X"$1" != X"-c"; then
	echo 'x - skipping Slider (File already exists)'
else
echo 'x - extracting Slider (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'Slider' &&
Slider()
{
X	cps POPUP popupWindowShell popupWindowShell $PANE \\\n
X		title:"Slider"
X
X	acb $POPUP popdownCallback "dw $POPUP"
X
X	cmw CAPTION caption caption $POPUP_UCA \\\n
X		label:"Slider:" \\\n
X		font:OlDefaultBoldFont \\\n
X		position:left
X
X	cmw SLIDER slider slider $CAPTION \\\n
X		span:100 \\\n
X		sliderValue:33 \\\n
X		minLabel:0 \\\n
X		maxLabel:100 \\\n
X		ticks:10 \\\n
X		tickUnit:percent \\\n
X		showValue:true
X
X	cmw OK Ok flatButtons $POPUP_LCA \\\n
X		numItems:1 \\\n
X		numItemFields:1 \\\n
X		itemFields:'{label}' \\\n
X		items:'{Ok}' 
X
X	orh $POPUP "Slider Source" -f `pwd`/Slider
X
X	pu $POPUP GrabNone
}
SHAR_EOF
chmod 0644 Slider ||
echo 'restore of Slider failed'
Wc_c="`wc -c < 'Slider'`"
test 607 -eq "$Wc_c" ||
	echo 'Slider: original size 607, current size' "$Wc_c"
fi
# ============= Statictext ==============
if test -f 'Statictext' -a X"$1" != X"-c"; then
	echo 'x - skipping Statictext (File already exists)'
else
echo 'x - extracting Statictext (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'Statictext' &&
Statictext()
{
X	cps POPUP popupWindowShell popupWindowShell $PANE \\\n
X		title:"WkshTree: StaticText" 
X
X	acb $POPUP popdownCallback "dw $POPUP"
X
X	cmw CAPTION caption caption $POPUP_UCA \\\n
X		label:"StaticText:" \\\n
X		font:OlDefaultBoldFont
X
X	cmw STEXT1 staticText staticText $CAPTION \\\n
X		string:"StaticText can be selected and copied.\nEach line cane be centered.\nIt is not editable." \\\n
X		alignment:center
X
X	cmw STEXT2 staticText staticText $POPUP_UCA \\\n
X		string:"olDefaultFont" \\\n
X		font:OlDefaultFont \\\n
X		alignment:center
X
X	cmw TEXT3 staticText staticText $POPUP_UCA \\\n
X		string:"olDefaultBoldFont" \\\n
X		font:OlDefaultBoldFont \\\n
X		alignment:center
X
X	cmw TEXT4 staticText staticText $POPUP_UCA \\\n
X		string:"olDefaultFixedFont" \\\n
X		font:OlDefaultFixedFont \\\n
X		alignment:center
X
X	cmw TEXT5 staticText staticText $POPUP_UCA \\\n
X		string:"olDefaultItalicFont" \\\n
X		font:OlDefaultItalicFont \\\n
X		alignment:center
X
X	cmw TEXT6 staticText staticText $POPUP_UCA \\\n
X		string:"olDefaultBoldItalicFont" \\\n
X		font:OlDefaultBoldItalicFont \\\n
X		alignment:center
X
X	cmw TEXT7 staticText staticText $POPUP_UCA \\\n
X		string:"olDefaultNoticeFont" \\\n
X		font:OlDefaultNoticeFont \\\n
X		alignment:center
X
X	cmw TEXT8 staticText staticText $POPUP_UCA \\\n
X		string:"xtDefaultFont" \\\n
X		font:XtDefaultFont \\\n
X		alignment:center
X
X	cmw OK Ok flatButtons $POPUP_LCA \\\n
X		numItems:1 \\\n
X		numItemFields:1 \\\n
X		itemFields:'{label}' \\\n
X		items:'{Ok}' 
X
X	orh $POPUP "StaticText Source" -f `pwd`/Statictext
X
X	pu $POPUP GrabNone
}
SHAR_EOF
chmod 0644 Statictext ||
echo 'restore of Statictext failed'
Wc_c="`wc -c < 'Statictext'`"
test 1554 -eq "$Wc_c" ||
	echo 'Statictext: original size 1554, current size' "$Wc_c"
fi
# ============= Stepfield ==============
if test -f 'Stepfield' -a X"$1" != X"-c"; then
	echo 'x - skipping Stepfield (File already exists)'
else
echo 'x - extracting Stepfield (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'Stepfield' &&
Stepfield()
{
X	NUM=0
X
X	MONTHS="January February March April May June July
X		August September October November December"
X
X	for i in `echo $MONTHS`
X	do
X		MON[NUM]=$i
X		((NUM=$NUM+1))
X	done
X
X	WHERE=0
X	INC=true
X
X	cps POPUP popupWindowShell popupWindowShell $PANE \\\n
X		title:"StepField:" 
X
X	acb $POPUP popdownCallback "dw $POPUP"
X
X	cmw CAPTION caption caption $POPUP_UCA \\\n
X		label:"Stepfield" \\\n
X		font:OlDefaultBoldFont \\\n
X		position:left
X
X	cmw STEP stepField stepField $CAPTION \\\n
X		string:"January" \\\n
X		charsVisible:8 \\\n
X		canIncrement:true \\\n
X		canDecrement:false \\\n
X		displayPosition:1
X
X	acb $STEP stepped "SteppedCB $WHERE"
X
X	cmw OK Ok flatButtons $POPUP_LCA \\\n
X		numItems:1 \\\n
X		numItemFields:1 \\\n
X		itemFields:'{label}' \\\n
X		items:'{Ok}' 
X
X	sv $OK selectProc:"PopdownCB $POPUP"
X
X	orh $POPUP "StepField Source" -f `pwd`/Stepfield
X	
X	pu $POPUP GrabNone
}
X
SteppedCB()
{
X
X	MIN=0
X	MAX=11
X
X	if [[ $INC = "true" ]]
X	then
X		((WHERE=$WHERE+1))
X	else
X		((WHERE=$WHERE-1))
X	fi
X	
X	if [[ $WHERE -eq $MAX ]]
X	then
X		INC=false
X		sv $STEP canDecrement:true
X		sv $STEP canIncrement:false
X	fi
X
X	if [[ $WHERE -eq $MIN ]]
X	then
X		INC=true
X		sv $STEP canDecrement:false
X		sv $STEP canIncrement:true
X	fi
X
X	sv $STEP string:"${MON[$WHERE]}"
X
}	
SHAR_EOF
chmod 0644 Stepfield ||
echo 'restore of Stepfield failed'
Wc_c="`wc -c < 'Stepfield'`"
test 1253 -eq "$Wc_c" ||
	echo 'Stepfield: original size 1253, current size' "$Wc_c"
fi
true || echo 'restore of Stub failed'
echo End of part 1, continue with part 2
exit 0

exit 0 # Just in case...
-- 
  // chris@IMD.Sterling.COM            | Send comp.sources.x submissions to:
\X/  Amiga - The only way to fly!      |
 "It's intuitively obvious to the most |    sources-x@imd.sterling.com
  casual observer..."                  |
