Newsgroups: comp.sources.x
From: envbvs@epb9.lbl.gov (Brian V. Smith)
Subject: v19i127:  xfig - Draw amd manipulate objects in an X-Window, Part15/27
Message-ID: <1993May21.021559.6553@sparky.imd.sterling.com>
X-Md4-Signature: 66a1b6c31d58d1690030881e4ab8d003
Sender: chris@sparky.imd.sterling.com (Chris Olson)
Organization: Sterling Software
Date: Fri, 21 May 1993 02:15:59 GMT
Approved: chris@sparky.imd.sterling.com

Submitted-by: envbvs@epb9.lbl.gov (Brian V. Smith)
Posting-number: Volume 19, Issue 127
Archive-name: xfig/part15
Environment: X11
Supersedes: xfig: Volume 16, Issue 6-30,39

#! /bin/sh
# This is a shell archive.  Remove anything before this line, then unpack
# it by saving it into a file and typing "sh file".  To overwrite existing
# files, type "sh file -c".  You can also feed this as standard input via
# unshar, or by typing "sh <file", e.g..  If this archive is complete, you
# will see the following message at the end:
#		"End of archive 15 (of 27)."
# Contents:  Examples/snake4.fig.uu Examples/test0.fig.uu w_dir.c
# Wrapped by envbvs@epb9.lbl.gov.lbl.gov on Mon May  3 12:05:58 1993
PATH=/bin:/usr/bin:/usr/ucb ; export PATH
if test -f 'Examples/snake4.fig.uu' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'Examples/snake4.fig.uu'\"
else
echo shar: Extracting \"'Examples/snake4.fig.uu'\" \(21385 characters\)
sed "s/^X//" >'Examples/snake4.fig.uu' <<'END_OF_FILE'
Xbegin 444 snake4.fig
XM(T9)1R`R+C$*.#`@,@HV(#0Q.2`R.2`W-3D@,C,T"C4@,2`P(#(@+3$@-"`P
XM(#,@,"XP,#`@,2`P(#`@-#4Q+C0V,B`Q.3`N-3@Y(#0W-2`Q.#$@-#0R(#$V
XM-R`T-3$@,C$V"C$@,R`P(#`@+3$@,"`P(#(Q(#`N,#`P(#$@,"XP,#`@-#4Q
XM(#$X-"`S(#,@-#4Q(#$X-"`T-3,@,3@V"C$@,R`P(#(@+3$@,R`P(#$@,"XP
XM,#`@,2`P+C`P,"`T-3$@,3@T(#<@-R`T-3$@,3@T(#0U-R`Q.#8*,2`R(#`@
XM,"`M,2`P(#`@-R`P+C`P,"`Q(#`N,#`P(#0S.2`Q.3<@."`T(#0S,2`Q.3,@
XM-#0W(#(P,0HQ(#(@,"`P("TQ(#`@,"`W(#`N,#`P(#$@,"XP,#`@-#<X(#$Y
XM.2`X(#0@-#<P(#$Y-2`T.#8@,C`S"C$@,B`P(#`@+3$@,"`P(#<@,"XP,#`@
XM,2`P+C`P,"`U,34@,3@R(#$P(#0@-3`U(#$W."`U,C4@,3@V"C$@,B`P(#`@
XM+3$@,"`P(#<@,"XP,#`@,2`P+C`P,"`U-3$@,34X(#D@-"`U-#$@,34T(#4V
XM,"`Q-C,*,2`R(#`@,"`M,2`P(#`@-R`P+C`P,"`Q(#`N,#`P(#4W-R`Q,S$@
XM,3`@-2`U-C8@,3(V(#4X-B`Q,S<*,2`R(#`@,"`M,2`P(#`@-R`P+C`P,"`Q
XM(#`N,#`P(#4U.2`Y-B`Y(#4@-34P(#DQ(#4V.2`Q,#$*,2`R(#`@,"`M,2`P
XM(#`@-R`P+C`P,"`Q(#`N,#`P(#4Y,B`X."`X(#8@-3@U(#@S(#8P,2`Y-0HQ
XM(#(@,"`P("TQ(#`@,"`W(#`N,#`P(#$@,"XP,#`@-C(P(#$R,2`Y(#4@-C$P
XM(#$Q-B`V,C@@,3(W"C$@,B`P(#`@+3$@,"`P(#<@,"XP,#`@,2`P+C`P,"`V
XM-S,@,3(Y(#D@-2`V-C0@,3(S(#8X,R`Q,S0*,2`R(#`@,"`M,2`P(#`@-R`P
XM+C`P,"`Q(#`N,#`P(#<Q-R`Q,#8@.2`T(#<P."`Q,#(@-S(V(#$Q,`HQ(#(@
XM,"`P("TQ(#`@,"`W(#`N,#`P(#$@,"XP,#`@-S,U(#<V(#D@-"`W,C<@-S(@
XM-S0U(#@Q"C$@,B`P(#`@+3$@,"`P(#<@,"XP,#`@,2`P+C`P,"`U-S(@-3<@
XM,3`@-2`U-C,@-3,@-3@R(#8R"C(@,2`P(#`@+3$@,2`P(#$@,"XP,#`@+3$@
XM,"`P"@D@-#$Y(#(P.2`T-#4@,C$S(#0U-2`R,S$@-#$Y(#(Q-"`Y.3DY(#DY
XM.3D*,B`Q(#`@,B`M,2`R(#`@,2`P+C`P,"`W(#`@,`H)(#0S,B`R,3$@-#4S
XM(#$Y.2`T-#D@,C$Y(#DY.3D@.3DY.0HS(#(@,"`R("TQ(#`@,"`Q(#`N,#`P
XM(#`@,`H)(#4V-B`Q,34@-3<T(#DW(#4X,2`X-B`U.#,@-S$@-3<U(#8T(#4V
XM.2`V-"`U-3D@-C@@-34Y(#<U(#4U.2`X,2`U-C,@.#8@-38W(#DQ(#4W,2`Y
XM,R`U-S,@.30@-3<V(#DU(#DY.3D@.3DY.0H)(#,T,BXU-38@+3,R+C8R-B`U
XM-S`N-S`T(#$P-"XW.38@-3<R+C0X,B`Q,#`N.#<P(#4W-2XT-#0@.34N,C8Q
XM"@D@-3<Y+C4Y,R`X.2XV-3(@-3@Q+CDV,R`X,BXY,C$@-3@T+C,S,R`W-2XP
XM-C@@-3@Q+C,W,"`V."XS,S<*"2`U-S8N-C,P(#8U+C4S,R`U-S,N,#<T(#8S
XM+C@U,"`U-CDN-3$Y(#8S+C@U,"`U-C4N,S<P(#8T+C0Q,0H)(#4V,"XV,S`@
XM-C4N-3,S(#4U-RXP-S0@-S`N,#(P(#4U."XR-3D@-S,N,S@U(#4U."XX-3(@
XM-S8N,3DP"@D@-34X+C@U,B`X,"XQ,38@-34Y+C0T-"`X,BXY,C$@-38Q+C@Q
XM-2`X-2XW,C4@-38S+C4Y,R`X-RXY-CD*"2`U-C4N.38S(#DP+C<W,R`U-C@N
XM,S,S(#DQ+C@Y-2`U-CDN-3$Y(#DS+C`Q-R`U-S$N,CDV(#DS+C4W.`H)(#4W
XM,BXT.#(@.30N,3,Y(#4W,RXV-C<@.30N-S`P(#4W-"XR-3D@.30N-S`P(#,T
XM,BXU-38@+3,R+C8R-@HS(#(@,"`R("TQ(#4@,"`S(#`N,#`P(#`@,`H)(#8P
XM-2`Q,#4@-C(T(#$Q,"`V-#D@,3$U(#8V,2`Q,38@-C@U(#$Q,R`W,#D@,3`P
XM(#<R-2`W-R`W-#(@-#<@-S0V(#,T(#<T-B`S,R`W-30@-#@@-S4Q(#8W(#<T
XM-R`X,2`W-#,@.38@-S,U(#$Q,2`W,S`@,3(P(#<Q-B`Q,S0@-CDR(#$S.2`V
XM-S@@,3,X(#8T.2`Q,S4@-C0S(#$S-2`V,S0@,3,S(#8R-"`Q,S$@-C$U(#$R
XM."`V,3`@,3(V(#8P,2`Q,C(@.3DY.2`Y.3DY"@D@,S0T+CDR-B`M,S0N,S`Y
XM(#8Q-2XW-#$@,3`X+C$V,2`V,C`N-#@R(#$P.2XR.#,@-C(Y+C,W,"`Q,3$N
XM-3(W"@D@-C0S+C`P,"`Q,30N,S,Q(#8U,2XR.38@,3$U+C0U,R`V-3@N-#`W
XM(#$Q-BXU-S4@-C8V+C<P-"`Q,38N,#$T"@D@-C<Y+C$T."`Q,30N.#DR(#8Y
XM,2XP,#`@,3$P+CDV-B`W,#,N-#0T(#$P-"XW.38@-S$T+C$Q,2`Y-2XX,C(*
XM"2`W,C$N.#$U(#@R+C,V,"`W,C@N.3(V(#<P+C4X,2`W,SDN,#`P(#4T+C@W
XM-2`W-#,N,30X(#0T+C<W.0H)(#<T,RXQ-#@@,S<N-#@W(#<T-2XU,3@@,S0N
XM,3(R(#<T-2XU,3@@,S,N-38Q(#<U,2XT-#0@,S0N-C@S"@D@-S4R+C8S,"`T
XM-"XR,3@@-S4T+C0P-R`U,RXQ.3,@-S4R+C`S-R`V,RXR.#D@-S4P+C(U.2`W
XM,"XU.#$*"2`W-#<N.#@Y(#<X+C0S,R`W-#8N,3$Q(#@T+C8P,R`W-#,N-S0Q
XM(#DS+C`Q-R`W-#`N-S<X(#DY+C<T.`H)(#<S-BXV,S`@,3`W+C8P,2`W,S,N
XM-C8W(#$Q,RXR,3`@-S,P+C<P-"`Q,3<N-CDW(#<R-BXU-38@,3(S+C,P-@H)
XM(#<R,"XP,S<@,3,Q+C<R,"`W,#DN.38S(#$S-RXS,CD@-CDV+CDR-B`Q,SDN
XM-3<R(#8X."XP,S<@,30P+C$S,PH)(#8X,"XS,S,@,3,X+C0U,"`V-S`N.#4R
XM(#$S-RXS,CD@-C4U+C0T-"`Q,S8N,C`W(#8T-RXW-#$@,3,U+C8T-@H)(#8T
XM-"XW-S@@,3,U+C8T-B`V-#$N,C(R(#$S-2XP.#4@-C,U+C@X.2`Q,S,N.38S
XM(#8S,2XW-#$@,3,S+C0P,@H)(#8R-BXT,#<@,3,R+C(X,"`V,C(N,C4Y(#$S
XM,"XU.3@@-C$V+C,S,R`Q,C@N.3$U(#8Q,RXS-S`@,3(W+C<Y,PH)(#8Q,"XT
XM,#<@,3(V+C8W,2`V,#@N,#,W(#$R-2XU-3`@-C`U+C8V-R`Q,C0N.3@Y(#,T
XM-"XY,C8@+3,T+C,P.0HS(#(@,"`R("TQ(#0@,"`S(#`N,#`P(#`@,`H)(#0T
XM."`R,C`@-#<X(#(Q-"`U,3,@,3DV(#4W.2`Q-3(@-3DP(#$T,2`U.3@@,3(W
XM(#8P-"`Q,3,@-C`S(#$Q,B`V,#<@.30@-C`U(#<X(#8P,2`V.2`U.#4@-30@
XM-3<W(#4Q(#4T."`V,B`U-#,@-S0@-30T(#DU(#4U,2`Q,#,@-34W(#$P-B`U
XM-C<@,3$P(#4U,R`Q,S$@-30V(#$T,R`U,S@@,34Q(#4S,"`Q-3D@-3(P(#$V
XM-B`U,#$@,3<V(#0X,R`Q.#$@-#<U(#$X,B`Y.3DY(#DY.3D*"2`S-#,N,30X
XM("TS,2XU,#0@-#8U+C(R,B`R,3<N-3,X(#0W,BXS,S,@,C$U+C@U-B`T.#4N
XM.38S(#(Q,"XX,#<*"2`U,#0N.3(V(#(P,"XW,3$@-3(X+C8S,"`Q.#<N,C0Y
XM(#4V-2XS-S`@,38T+C(U,B`U.#$N.38S(#$U,"XR,CD*"2`U.#<N.#@Y(#$T
XM-"XV,C`@-3DR+C`S-R`Q,S@N-#4P(#4Y-BXW-S@@,3,P+C4Y."`U.3DN-S0Q
XM(#$R,RXX-C<*"2`V,#,N,CDV(#$Q-RXQ,S8@-C`S+C@X.2`Q,3,N,C$P(#8P
XM,RXR.38@,3$R+C`X."`V,#(N-S`T(#$P-RXV,#$*"2`V,#8N,C4Y(#DX+C8R
XM-B`V,#8N.#4R(#DP+C<W,R`V,#8N,C4Y(#@Q+C(S."`V,#0N-#@R(#<U+C8R
XM.0H)(#8P,BXQ,3$@-S$N,30R(#4Y-RXS-S`@-C4N-3,S(#4X.2XV-C<@-3<N
XM,3$Y(#4X,RXQ-#@@-3,N,3DS"@D@-3<Y+C`P,"`U,2XU,3`@-38X+C,S,R`U
XM,"XY-#D@-34S+C4Q.2`U-BXU-3@@-30U+C(R,B`V-"XT,3$*"2`U-#(N.#4R
XM(#<Q+C$T,B`U-#$N-C8W(#<Y+C4U-2`U-#$N-C8W(#DP+C(Q,B`U-#0N-C,P
XM(#DX+C`V-0H)(#4T."XW-S@@,3`Q+C0S,2`U-3$N-S0Q(#$P,RXV-S0@-34T
XM+C<P-"`Q,#4N.3$X(#4U."XR-3D@,3`X+C$V,0H)(#4V-2XS-S`@,3`W+C`T
XM,"`U-CDN-3$Y(#$Q."XX,3D@-34U+C@X.2`Q,C8N-C<Q(#4U,2XQ-#@@,3,S
XM+CDV,PH)(#4T-RXU.3,@,30P+C8Y-"`U-#0N,#,W(#$T-2XQ.#$@-3,Y+C@X
XM.2`Q-#DN-C8Y(#4S-2XW-#$@,34S+C4Y-0H)(#4S,2XU.3,@,34X+C`X,B`U
XM,C<N-#0T(#$V,2XT-#@@-3(R+C$Q,2`Q-C0N.#$S(#4Q-2XU.3,@,38X+C<S
XM.0H)(#4P-2XU,3D@,3<S+C<X."`T.3<N,C(R(#$W-RXQ-3,@-#@W+C$T."`Q
XM-SDN.34X(#0X,2XR,C(@,3@Q+C`W.0H)(#0W.2XT-#0@,3@Q+C8T,"`S-#,N
XM,30X("TS,2XU,#0*+38*-B`T-CD@,C4Y(#8W-"`U.3D*-2`Q(#`@,B`M,2`T
XM(#`@,R`P+C`P,"`Q(#`@,"`U,3$N,#`P(#(Y-2XP,#`@-3(Q(#,Q.2`U,S4@
XM,C@V(#0X-B`R.34*,2`R(#`@,"`M,2`P(#`@-R`P+C`P,"`Q(#`N,#`P(#8T
XM-2`T,38@-2`Q,"`V-#D@-#`W(#8T,"`T,C8*,2`R(#`@,"`M,2`P(#`@-R`P
XM+C`P,"`Q(#`N,#`P(#8R-B`U-SD@-"`Y(#8S,"`U-S$@-C(Q(#4X.0HQ(#(@
XM,"`P("TQ(#`@,"`W(#`N,#`P(#$@,"XP,#`@-3DV(#4V,2`T(#D@-C`P(#4U
XM,B`U.3(@-3<P"C$@,B`P(#`@+3$@,"`P(#<@,"XP,#`@,2`P+C`P,"`U-S,@
XM-3$W(#4@.2`U-SD@-3`X(#4V."`U,C<*,2`R(#`@,"`M,2`P(#`@-R`P+C`P
XM,"`Q(#`N,#`P(#4X,2`T-C0@-2`Y(#4X-B`T-30@-3<U(#0W,@HQ(#(@,"`P
XM("TQ(#`@,"`W(#`N,#`P(#$@,"XP,#`@-C$T(#0S-B`V(#@@-C$Y(#0R.2`V
XM,#<@-#0U"C$@,B`P(#`@+3$@,"`P(#<@,"XP,#`@,2`P+C`P,"`V,#8@-#`S
XM(#4@.2`V,3$@,SDT(#8P,2`T,3,*,2`R(#`@,"`M,2`P(#`@-R`P+C`P,"`Q
XM(#`N,#`P(#4W,2`T,C$@-2`Q,"`U-S8@-#$P(#4V-2`T,S`*,2`R(#`@,"`M
XM,2`P(#`@-R`P+C`P,"`Q(#`N,#`P(#4T-"`S.34@-"`Y(#4T."`S.#4@-3,Y
XM(#0P-`HQ(#(@,"`P("TQ(#`@,"`W(#`N,#`P(#$@,"XP,#`@-3(P(#,U.2`T
XM(#$P(#4R-"`S-#D@-3$V(#,V.0HQ(#(@,"`P("TQ(#`@,"`W(#`N,#`P(#$@
XM,"XP,#`@-3`S(#,R,B`T(#@@-3`W(#,Q-"`T.3D@,S,P"C$@,B`P(#`@+3$@
XM,"`P(#<@,"XP,#`@,2`P+C`P,"`U,#4@,C@S(#0@."`U,#D@,C<U(#4P,2`R
XM.3$*,2`S(#`@,B`M,2`S(#`@,2`P+C`P,"`Q(#`N,#`P(#4Q."`R.34@-R`W
XM(#4Q."`R.34@-3$V(#,P,0HQ(#,@,"`P("TQ(#`@,"`R,2`P+C`P,"`Q(#`N
XM,#`P(#4Q."`R.34@,R`S(#4Q."`R.34@-3$V(#(Y-PHR(#$@,"`R("TQ(#(@
XM,"`Q(#`N,#`P(#<@,"`P"@D@-#DQ(#(W-B`U,#,@,CDW(#0X,R`R.3,@.3DY
XM.2`Y.3DY"C(@,2`P(#`@+3$@,2`P(#$@,"XP,#`@+3$@,"`P"@D@-#DS(#(V
XM,R`T.#D@,C@Y(#0W,2`R.3D@-#@X(#(V,R`Y.3DY(#DY.3D*,R`R(#`@,B`M
XM,2`T(#`@,R`P+C`P,"`P(#`*"2`T.#(@,CDR(#0X."`S,C(@-3`V(#,U-R`U
XM-3`@-#(S(#4V,2`T,S0@-3<U(#0T,B`U.#D@-#0X(#4Y,"`T-#<@-C`X(#0U
XM,2`V,C0@-#0Y(#8S,R`T-#4@-C0X(#0R.2`V-3$@-#(Q(#8T,"`S.3(@-C(X
XM(#,X-R`V,#<@,S@X(#4Y.2`S.34@-3DV(#0P,2`U.3(@-#$Q(#4W,2`S.3<@
XM-34Y(#,Y,"`U-3$@,S@R(#4T,R`S-S0@-3,V(#,V-"`U,C8@,S0U(#4R,2`S
XM,C<@-3(P(#,Q.2`Y.3DY(#DY.3D*"2`W,S,N,#`P(#$X."XP,#`@-#@T+C`P
XM,"`S,#DN,#`P(#0X-BXP,#`@,S$V+C`P,"`T.3$N,#`P(#,R.2XP,#`*"2`U
XM,#$N,#`P(#,T."XP,#`@-3$T+C`P,"`S-S(N,#`P(#4S-RXP,#`@-#`Y+C`P
XM,"`U-3$N,#`P(#0R-2XP,#`*"2`U-3<N,#`P(#0S,2XP,#`@-38S+C`P,"`T
XM,S8N,#`P(#4W,2XP,#`@-#0P+C`P,"`U-S@N,#`P(#0T,RXP,#`*"2`U.#0N
XM,#`P(#0T-RXP,#`@-3@X+C`P,"`T-#<N,#`P(#4X.2XP,#`@-#0W+C`P,"`U
XM.30N,#`P(#0T-BXP,#`*"2`V,#,N,#`P(#0U,"XP,#`@-C$Q+C`P,"`T-3`N
XM,#`P(#8R,"XP,#`@-#4P+C`P,"`V,C8N,#`P(#0T."XP,#`*"2`V,S`N,#`P
XM(#0T-BXP,#`@-C,V+C`P,"`T-#$N,#`P(#8T-"XP,#`@-#,S+C`P,"`V-#@N
XM,#`P(#0R-RXP,#`*"2`V-3`N,#`P(#0R,RXP,#`@-C4Q+C`P,"`T,3(N,#`P
XM(#8T-2XP,#`@,SDW+C`P,"`V,S<N,#`P(#,X.2XP,#`*"2`V,S`N,#`P(#,X
XM-BXP,#`@-C(R+C`P,"`S.#4N,#`P(#8Q,2XP,#`@,S@U+C`P,"`V,#,N,#`P
XM(#,X."XP,#`*"2`V,#`N,#`P(#,Y,BXP,#`@-3DX+C`P,"`S.34N,#`P(#4Y
XM-BXP,#`@,SDX+C`P,"`U.3,N,#`P(#0P,BXP,#`*"2`U.30N,#`P(#0P.2XP
XM,#`@-3@S+C`P,"`T,3,N,#`P(#4W-2XP,#`@,SDY+C`P,"`U-C@N,#`P(#,Y
XM-2XP,#`*"2`U-C$N,#`P(#,Y,2XP,#`@-34V+C`P,"`S.#@N,#`P(#4U,BXP
XM,#`@,S@S+C`P,"`U-#@N,#`P(#,W.2XP,#`*"2`U-#,N,#`P(#,W-2XP,#`@
XM-30P+C`P,"`S-S$N,#`P(#4S-RXP,#`@,S8V+C`P,"`U,S,N,#`P(#,U.2XP
XM,#`*"2`U,C@N,#`P(#,T.2XP,#`@-3(T+C`P,"`S-#$N,#`P(#4R,BXP,#`@
XM,S,Q+C`P,"`U,C`N,#`P(#,R-2XP,#`*"2`U,C`N,#`P(#,R,RXP,#`@-S,S
XM+C`P,"`Q.#@N,#`P"C,@,B`P(#(@+3$@-2`P(#,@,"XP,#`@,"`P"@D@-3DW
XM(#0T.2`U.3(@-#8X(#4X-R`T.3,@-3@V(#4P-2`U.#D@-3(Y(#8P,B`U-3,@
XM-C(U(#4V.2`V-34@-3@V(#8V."`U.3`@-C8Y(#4Y,"`V-30@-3DX(#8S-2`U
XM.34@-C(Q(#4Y,2`V,#8@-3@W(#4Y,2`U-SD@-3@R(#4W-"`U-C@@-38P(#4V
XM,R`U,S8@-38T(#4R,B`U-C<@-#DS(#4V-R`T.#<@-38Y(#0W."`U-S$@-#8X
XM(#4W-"`T-3D@-3<V(#0U-"`U.#`@-#0U(#DY.3D@.3DY.0H)(#<S-BXP,#`@
XM,3@Y+C`P,"`U.3,N,#`P(#0U.2XP,#`@-3DR+C`P,"`T-C0N,#`P(#4Y,"XP
XM,#`@-#<S+C`P,`H)(#4X-RXP,#`@-#@W+C`P,"`U.#8N,#`P(#0Y-2XP,#`@
XM-3@U+C`P,"`U,#(N,#`P(#4X-2XP,#`@-3$P+C`P,`H)(#4X-RXP,#`@-3(S
XM+C`P,"`U.3$N,#`P(#4S-2XP,#`@-3DW+C`P,"`U-#<N,#`P(#8P-BXP,#`@
XM-34X+C`P,`H)(#8Q.2XP,#`@-38U+C`P,"`V,S$N,#`P(#4W,BXP,#`@-C0W
XM+C`P,"`U.#,N,#`P(#8U-RXP,#`@-3@W+C`P,`H)(#8V-"XP,#`@-3@W+C`P
XM,"`V-C<N,#`P(#4X.2XP,#`@-C8X+C`P,"`U.#DN,#`P(#8V-RXP,#`@-3DU
XM+C`P,`H)(#8U-RXP,#`@-3DV+C`P,"`V-#@N,#`P(#4Y."XP,#`@-C,X+C`P
XM,"`U.38N,#`P(#8S,2XP,#`@-3DT+C`P,`H)(#8R,RXP,#`@-3DQ+C`P,"`V
XM,3<N,#`P(#4Y,"XP,#`@-C`X+C`P,"`U.#<N,#`P(#8P,BXP,#`@-3@T+C`P
XM,`H)(#4Y-"XP,#`@-3@P+C`P,"`U.#@N,#`P(#4W-RXP,#`@-3@T+C`P,"`U
XM-S0N,#`P(#4W."XP,#`@-3<P+C`P,`H)(#4W,"XP,#`@-38T+C`P,"`U-C0N
XM,#`P(#4U,RXP,#`@-38R+C`P,"`U-#`N,#`P(#4V,2XP,#`@-3,R+C`P,`H)
XM(#4V,RXP,#`@-3(T+C`P,"`U-C0N,#`P(#4Q-"XP,#`@-38U+C`P,"`T.3DN
XM,#`P(#4V-BXP,#`@-#DQ+C`P,`H)(#4V-BXP,#`@-#@X+C`P,"`U-C8N,#`P
XM(#0X-2XP,#`@-38X+C`P,"`T-SDN,#`P(#4V."XP,#`@-#<U+C`P,`H)(#4V
XM.2XP,#`@-#<P+C`P,"`U-S$N,#`P(#0V-BXP,#`@-3<S+C`P,"`T-C`N,#`P
XM(#4W-"XP,#`@-#4W+C`P,`H)(#4W-2XP,#`@-#4T+C`P,"`U-S8N,#`P(#0U
XM,BXP,#`@-3<W+C`P,"`T-#DN,#`P(#<S-BXP,#`@,3@Y+C`P,`HS(#(@,"`R
XM("TQ(#`@,"`Q(#`N,#`P(#`@,`H)(#4X-R`T,3`@-C`U(#0Q."`V,38@-#(U
XM(#8S,2`T,C<@-C,X(#0Q.2`V,S@@-#$S(#8S-"`T,#,@-C(W(#0P,R`V,C$@
XM-#`S(#8Q-B`T,#<@-C$Q(#0Q,2`V,#D@-#$U(#8P."`T,3<@-C`W(#0R,"`Y
XM.3DY(#DY.3D*"2`W,S0N,#`P(#$X-RXP,#`@-3DW+C`P,"`T,30N,#`P(#8P
XM,2XP,#`@-#$V+C`P,"`V,#8N,#`P(#0Q.2XP,#`*"2`V,3(N,#`P(#0R,RXP
XM,#`@-C$Y+C`P,"`T,C4N,#`P(#8R-BXP,#`@-#(X+C`P,"`V,S,N,#`P(#0R
XM-2XP,#`*"2`V,S8N,#`P(#0R,"XP,#`@-C,X+C`P,"`T,3<N,#`P(#8S."XP
XM,#`@-#$S+C`P,"`V,S<N,#`P(#0P.2XP,#`*"2`V,S8N,#`P(#0P-"XP,#`@
XM-C,Q+C`P,"`T,#$N,#`P(#8R."XP,#`@-#`R+C`P,"`V,C4N,#`P(#0P,BXP
XM,#`*"2`V,C$N,#`P(#0P,BXP,#`@-C$Y+C`P,"`T,#,N,#`P(#8Q-BXP,#`@
XM-#`U+C`P,"`V,30N,#`P(#0P-RXP,#`*"2`V,3$N,#`P(#0P.2XP,#`@-C$P
XM+C`P,"`T,3(N,#`P(#8P."XP,#`@-#$S+C`P,"`V,#@N,#`P(#0Q-2XP,#`*
XM"2`V,#<N,#`P(#0Q-BXP,#`@-C`W+C`P,"`T,3<N,#`P(#8P-RXP,#`@-#$X
XM+C`P,"`W,S0N,#`P(#$X-RXP,#`*+38*-B`W.2`R-"`R-SD@,S8T"C4@,2`P
XM(#(@+3$@-"`P(#,@,"XP,#`@,2`P(#`@,C,X+C4X.2`S,S`N,#`P(#(R.2`S
XM,#8@,C$U(#,S.2`R-C0@,S,P"C$@,B`P(#`@+3$@,"`P(#<@,"XP,#`@,2`P
XM+C`P,"`Q,#4@,C`Y(#4@,3`@,3`Q(#(Q."`Q,3`@,3DY"C$@,B`P(#`@+3$@
XM,"`P(#<@,"XP,#`@,2`P+C`P,"`Q,C0@-#8@-"`Y(#$R,"`U-"`Q,CD@,S8*
XM,2`R(#`@,"`M,2`P(#`@-R`P+C`P,"`Q(#`N,#`P(#$U-"`V-"`T(#D@,34P
XM(#<S(#$U."`U-0HQ(#(@,"`P("TQ(#`@,"`W(#`N,#`P(#$@,"XP,#`@,3<W
XM(#$P."`U(#D@,3<Q(#$Q-R`Q.#(@.3@*,2`R(#`@,"`M,2`P(#`@-R`P+C`P
XM,"`Q(#`N,#`P(#$V.2`Q-C$@-2`Y(#$V-"`Q-S$@,3<U(#$U,PHQ(#(@,"`P
XM("TQ(#`@,"`W(#`N,#`P(#$@,"XP,#`@,3,V(#$X.2`V(#@@,3,Q(#$Y-B`Q
XM-#,@,3@P"C$@,B`P(#`@+3$@,"`P(#<@,"XP,#`@,2`P+C`P,"`Q-#0@,C(R
XM(#4@.2`Q,SD@,C,Q(#$T.2`R,3(*,2`R(#`@,"`M,2`P(#`@-R`P+C`P,"`Q
XM(#`N,#`P(#$W.2`R,#0@-2`Q,"`Q-S0@,C$U(#$X-2`Q.34*,2`R(#`@,"`M
XM,2`P(#`@-R`P+C`P,"`Q(#`N,#`P(#(P-B`R,S`@-"`Y(#(P,B`R-#`@,C$Q
XM(#(R,0HQ(#(@,"`P("TQ(#`@,"`W(#`N,#`P(#$@,"XP,#`@,C,P(#(V-B`T
XM(#$P(#(R-B`R-S8@,C,T(#(U-@HQ(#(@,"`P("TQ(#`@,"`W(#`N,#`P(#$@
XM,"XP,#`@,C0W(#,P,R`T(#@@,C0S(#,Q,2`R-3$@,CDU"C$@,B`P(#`@+3$@
XM,"`P(#<@,"XP,#`@,2`P+C`P,"`R-#4@,S0R(#0@."`R-#$@,S4P(#(T.2`S
XM,S0*,2`S(#`@,B`M,2`S(#`@,2`P+C`P,"`Q(#`N,#`P(#(S,B`S,S`@-R`W
XM(#(S,B`S,S`@,C,T(#,R-`HQ(#,@,"`P("TQ(#`@,"`R,2`P+C`P,"`Q(#`N
XM,#`P(#(S,B`S,S`@,R`S(#(S,B`S,S`@,C,T(#,R.`HR(#$@,"`R("TQ(#(@
XM,"`Q(#`N,#`P(#<@,"`P"@D@,C4Y(#,T.2`R-#<@,S(X(#(V-R`S,S(@.3DY
XM.2`Y.3DY"C(@,2`P(#`@+3$@,2`P(#$@,"XP,#`@+3$@,"`P"@D@,C4W(#,V
XM,B`R-C$@,S,V(#(W.2`S,C8@,C8R(#,V,B`Y.3DY(#DY.3D*,R`R(#`@,B`M
XM,2`T(#`@,R`P+C`P,"`P(#`*"2`R-C@@,S,S(#(V,B`S,#,@,C0T(#(V."`R
XM,#`@,C`R(#$X.2`Q.3$@,3<U(#$X,R`Q-C$@,3<W(#$V,"`Q-S@@,30R(#$W
XM-"`Q,C8@,3<V(#$Q-R`Q.#`@,3`R(#$Y-B`Y.2`R,#0@,3$P(#(S,R`Q,C(@
XM,C,X(#$T,R`R,S<@,34Q(#(S,"`Q-30@,C(T(#$U."`R,30@,3<Y(#(R."`Q
XM.3$@,C,U(#$Y.2`R-#,@,C`W(#(U,2`R,30@,C8Q(#(R-"`R.#`@,C(Y(#(Y
XM."`R,S`@,S`V(#DY.3D@.3DY.0H)(#$V+C0Y-B`T,S<N,#`P(#(V-2XU,S@@
XM,S$V+C`P,"`R-C,N.#4V(#,P.2XP,#`@,C4X+C@P-R`R.38N,#`P"@D@,C0X
XM+C<Q,2`R-S<N,#`P(#(S-2XR-#D@,C4S+C`P,"`R,3(N,C4R(#(Q-BXP,#`@
XM,3DX+C(R.2`R,#`N,#`P"@D@,3DR+C8R,"`Q.30N,#`P(#$X-BXT-3`@,3@Y
XM+C`P,"`Q-S@N-3DX(#$X-2XP,#`@,3<Q+C@V-R`Q.#(N,#`P"@D@,38U+C$S
XM-B`Q-S@N,#`P(#$V,2XR,3`@,3<X+C`P,"`Q-C`N,#@X(#$W."XP,#`@,34U
XM+C8P,2`Q-SDN,#`P"@D@,30V+C8R-B`Q-S4N,#`P(#$S."XW-S,@,3<U+C`P
XM,"`Q,CDN,C,X(#$W-2XP,#`@,3(S+C8R.2`Q-S<N,#`P"@D@,3$Y+C$T,B`Q
XM-SDN,#`P(#$Q,RXU,S,@,3@T+C`P,"`Q,#4N,3$Y(#$Y,BXP,#`@,3`Q+C$Y
XM,R`Q.3@N,#`P"@D@.3DN-3$P(#(P,BXP,#`@.3@N.30Y(#(Q,RXP,#`@,3`T
XM+C4U."`R,C@N,#`P(#$Q,BXT,3$@,C,V+C`P,`H)(#$Q.2XQ-#(@,C,Y+C`P
XM,"`Q,C<N-34U(#(T,"XP,#`@,3,X+C(Q,B`R-#`N,#`P(#$T-BXP-C4@,C,W
XM+C`P,`H)(#$T.2XT,S$@,C,S+C`P,"`Q-3$N-C<T(#(S,"XP,#`@,34S+CDQ
XM."`R,C<N,#`P(#$U-BXQ-C$@,C(S+C`P,`H)(#$U-2XP-#`@,C$V+C`P,"`Q
XM-C8N.#$Y(#(Q,BXP,#`@,3<T+C8W,2`R,C8N,#`P(#$X,2XY-C,@,C,P+C`P
XM,`H)(#$X."XV.30@,C,T+C`P,"`Q.3,N,3@Q(#(S-RXP,#`@,3DW+C8V.2`R
XM-#(N,#`P(#(P,2XU.34@,C0V+C`P,`H)(#(P-BXP.#(@,C4P+C`P,"`R,#DN
XM-#0X(#(U-"XP,#`@,C$R+C@Q,R`R-3DN,#`P(#(Q-BXW,SD@,C8V+C`P,`H)
XM(#(R,2XW.#@@,C<V+C`P,"`R,C4N,34S(#(X-"XP,#`@,C(W+CDU."`R.30N
XM,#`P(#(R.2XP-SD@,S`P+C`P,`H)(#(R.2XV-#`@,S`R+C`P,"`Q-BXT.38@
XM-#,W+C`P,`HS(#(@,"`R("TQ(#4@,"`S(#`N,#`P(#`@,`H)(#$U,R`Q-S8@
XM,34X(#$U-R`Q-C,@,3,R(#$V-"`Q,C`@,38Q(#DV(#$T."`W,B`Q,C4@-38@
XM.34@,SD@.#(@,S4@.#$@,S4@.38@,C<@,3$U(#,P(#$R.2`S-"`Q-#0@,S@@
XM,34Y(#0V(#$V."`U,2`Q.#(@-C4@,3@W(#@Y(#$X-B`Q,#,@,3@S(#$S,B`Q
XM.#,@,3,X(#$X,2`Q-#<@,3<Y(#$U-R`Q-S8@,38V(#$W-"`Q-S$@,3<P(#$X
XM,"`Y.3DY(#DY.3D*"2`Q,RXV.3$@-#,V+C`P,"`Q-38N,38Q(#$V-BXP,#`@
XM,34W+C(X,R`Q-C$N,#`P(#$U.2XU,C<@,34R+C`P,`H)(#$V,BXS,S$@,3,X
XM+C`P,"`Q-C,N-#4S(#$S,"XP,#`@,38T+C4W-2`Q,C,N,#`P(#$V-"XP,30@
XM,3$U+C`P,`H)(#$V,BXX.3(@,3`R+C`P,"`Q-3@N.38V(#DP+C`P,"`Q-3(N
XM-SDV(#<X+C`P,"`Q-#,N.#(R(#8W+C`P,`H)(#$S,"XS-C`@-C`N,#`P(#$Q
XM."XU.#$@-3,N,#`P(#$P,BXX-S4@-#(N,#`P(#DR+C<W.2`S."XP,#`*"2`X
XM-2XT.#<@,S@N,#`P(#@R+C$R,B`S-BXP,#`@.#$N-38Q(#,V+C`P,"`X,BXV
XM.#,@,S`N,#`P"@D@.3(N,C$X(#(Y+C`P,"`Q,#$N,3DS(#(W+C`P,"`Q,3$N
XM,C@Y(#(Y+C`P,"`Q,3@N-3@Q(#,Q+C`P,`H)(#$R-BXT,S,@,S0N,#`P(#$S
XM,BXV,#,@,S4N,#`P(#$T,2XP,3<@,S@N,#`P(#$T-RXW-#@@-#$N,#`P"@D@
XM,34U+C8P,2`T-2XP,#`@,38Q+C(Q,"`T."XP,#`@,38U+C8Y-R`U,2XP,#`@
XM,3<Q+C,P-B`U-2XP,#`*"2`Q-SDN-S(P(#8Q+C`P,"`Q.#4N,S(Y(#<R+C`P
XM,"`Q.#<N-3<R(#@U+C`P,"`Q.#@N,3,S(#DS+C`P,`H)(#$X-BXT-3`@,3`Q
XM+C`P,"`Q.#4N,S(Y(#$Q,2XP,#`@,3@T+C(P-R`Q,C8N,#`P(#$X,RXV-#8@
XM,3,T+C`P,`H)(#$X,RXV-#8@,3,W+C`P,"`Q.#,N,#@U(#$T,"XP,#`@,3@Q
XM+CDV,R`Q-#8N,#`P(#$X,2XT,#(@,34P+C`P,`H)(#$X,"XR.#`@,34U+C`P
XM,"`Q-S@N-3DX(#$U.2XP,#`@,3<V+CDQ-2`Q-C4N,#`P(#$W-2XW.3,@,38X
XM+C`P,`H)(#$W-"XV-S$@,3<Q+C`P,"`Q-S,N-34P(#$W,RXP,#`@,3<R+CDX
XM.2`Q-S8N,#`P(#$S+C8Y,2`T,S8N,#`P"C,@,B`P(#(@+3$@,"`P(#$@,"XP
XM,#`@,"`P"@D@,38S(#(Q-2`Q-#4@,C`W(#$S-"`R,#`@,3$Y(#$Y."`Q,3(@
XM,C`V(#$Q,B`R,3(@,3$V(#(R,B`Q,C,@,C(R(#$R.2`R,C(@,3,T(#(Q."`Q
XM,SD@,C$T(#$T,2`R,3`@,30R(#(P."`Q-#,@,C`U(#DY.3D@.3DY.0H)(#$U
XM+C,W-"`T,S@N,#`P(#$U,BXW.38@,C$Q+C`P,"`Q-#@N.#<P(#(P.2XP,#`@
XM,30S+C(V,2`R,#8N,#`P"@D@,3,W+C8U,B`R,#(N,#`P(#$S,"XY,C$@,C`P
XM+C`P,"`Q,C,N,#8X(#$Y-RXP,#`@,3$V+C,S-R`R,#`N,#`P"@D@,3$S+C4S
XM,R`R,#4N,#`P(#$Q,2XX-3`@,C`X+C`P,"`Q,3$N.#4P(#(Q,BXP,#`@,3$R
XM+C0Q,2`R,38N,#`P"@D@,3$S+C4S,R`R,C$N,#`P(#$Q."XP,C`@,C(T+C`P
XM,"`Q,C$N,S@U(#(R,RXP,#`@,3(T+C$Y,"`R,C,N,#`P"@D@,3(X+C$Q-B`R
XM,C,N,#`P(#$S,"XY,C$@,C(R+C`P,"`Q,S,N-S(U(#(R,"XP,#`@,3,U+CDV
XM.2`R,3@N,#`P"@D@,3,X+C<W,R`R,38N,#`P(#$S.2XX.34@,C$S+C`P,"`Q
XM-#$N,#$W(#(Q,BXP,#`@,30Q+C4W."`R,3`N,#`P"@D@,30R+C$S.2`R,#DN
XM,#`P(#$T,BXW,#`@,C`X+C`P,"`Q-#(N-S`P(#(P-RXP,#`@,34N,S<T(#0S
XM."XP,#`*+38*-B`T-"`S.3D@,S@T(#8P-`HU(#$@,"`R("TQ(#0@,"`S(#`N
XM,#`P(#$@,"`P(#,U,BXP,#`@-#0R+C`P,"`S,C@@-#4R(#,V,2`T-C8@,S4R
XM(#0Q-PHQ(#,@,"`P("TQ(#`@,"`R,2`P+C`P,"`Q(#`N,#`P(#,U,B`T-#D@
XM,R`S(#,U,B`T-#D@,S4P(#0T-PHQ(#,@,"`R("TQ(#,@,"`Q(#`N,#`P(#$@
XM,"XP,#`@,S4R(#0T.2`W(#<@,S4R(#0T.2`S-#8@-#0W"C$@,B`P(#`@+3$@
XM,"`P(#<@,"XP,#`@,2`P+C`P,"`S-C0@-#,V(#@@-"`S-S(@-#0P(#,U-B`T
XM,S(*,2`R(#`@,"`M,2`P(#`@-R`P+C`P,"`Q(#`N,#`P(#,R-2`T,S0@."`T
XM(#,S,R`T,S@@,S$W(#0S,`HQ(#(@,"`P("TQ(#`@,"`W(#`N,#`P(#$@,"XP
XM,#`@,C@X(#0U,2`Q,"`T(#(Y."`T-34@,C<X(#0T-PHQ(#(@,"`P("TQ(#`@
XM,"`W(#`N,#`P(#$@,"XP,#`@,C4R(#0W-2`Y(#0@,C8R(#0W.2`R-#,@-#<P
XM"C$@,B`P(#`@+3$@,"`P(#<@,"XP,#`@,2`P+C`P,"`R,C8@-3`R(#$P(#4@
XM,C,W(#4P-R`R,3<@-#DV"C$@,B`P(#`@+3$@,"`P(#<@,"XP,#`@,2`P+C`P
XM,"`R-#0@-3,W(#D@-2`R-3,@-30R(#(S-"`U,S(*,2`R(#`@,"`M,2`P(#`@
XM-R`P+C`P,"`Q(#`N,#`P(#(Q,2`U-#4@."`V(#(Q."`U-3`@,C`R(#4S.`HQ
XM(#(@,"`P("TQ(#`@,"`W(#`N,#`P(#$@,"XP,#`@,3@S(#4Q,B`Y(#4@,3DS
XM(#4Q-R`Q-S4@-3`V"C$@,B`P(#`@+3$@,"`P(#<@,"XP,#`@,2`P+C`P,"`Q
XM,S`@-3`T(#D@-2`Q,SD@-3$P(#$R,"`T.3D*,2`R(#`@,"`M,2`P(#`@-R`P
XM+C`P,"`Q(#`N,#`P(#@V(#4R-R`Y(#0@.34@-3,Q(#<W(#4R,PHQ(#(@,"`P
XM("TQ(#`@,"`W(#`N,#`P(#$@,"XP,#`@-C@@-34W(#D@-"`W-B`U-C$@-3@@
XM-34R"C$@,B`P(#`@+3$@,"`P(#<@,"XP,#`@,2`P+C`P,"`R,S$@-3<V(#$P
XM(#4@,C0P(#4X,"`R,C$@-3<Q"C(@,2`P(#`@+3$@,2`P(#$@,"XP,#`@+3$@
XM,"`P"@D@,S@T(#0R-"`S-3@@-#(P(#,T."`T,#(@,S@T(#0Q.2`Y.3DY(#DY
XM.3D*,B`Q(#`@,B`M,2`R(#`@,2`P+C`P,"`W(#`@,`H)(#,W,2`T,C(@,S4P
XM(#0S-"`S-30@-#$T(#DY.3D@.3DY.0HS(#(@,"`R("TQ(#`@,"`Q(#`N,#`P
XM(#`@,`H)(#(S-R`U,3@@,C(Y(#4S-B`R,C(@-30W(#(R,"`U-C(@,C(X(#4V
XM.2`R,S0@-38Y(#(T-"`U-C4@,C0T(#4U."`R-#0@-34R(#(T,"`U-#<@,C,V
XM(#4T,B`R,S(@-30P(#(S,"`U,SD@,C(W(#4S."`Y.3DY(#DY.3D*"2`T-C`N
XM,#`P(#8V-2XP,#`@,C,S+C`P,"`U,C@N,#`P(#(S,2XP,#`@-3,R+C`P,"`R
XM,C@N,#`P(#4S-RXP,#`*"2`R,C0N,#`P(#4T,RXP,#`@,C(R+C`P,"`U-3`N
XM,#`P(#(Q.2XP,#`@-34W+C`P,"`R,C(N,#`P(#4V-"XP,#`*"2`R,C<N,#`P
XM(#4V-RXP,#`@,C,P+C`P,"`U-CDN,#`P(#(S-"XP,#`@-38Y+C`P,"`R,S@N
XM,#`P(#4V."XP,#`*"2`R-#,N,#`P(#4V-RXP,#`@,C0V+C`P,"`U-C(N,#`P
XM(#(T-2XP,#`@-34Y+C`P,"`R-#4N,#`P(#4U-BXP,#`*"2`R-#4N,#`P(#4U
XM,BXP,#`@,C0T+C`P,"`U-3`N,#`P(#(T,BXP,#`@-30W+C`P,"`R-#`N,#`P
XM(#4T-2XP,#`*"2`R,S@N,#`P(#4T,BXP,#`@,C,U+C`P,"`U-#$N,#`P(#(S
XM-"XP,#`@-3,Y+C`P,"`R,S(N,#`P(#4S.2XP,#`*"2`R,S$N,#`P(#4S."XP
XM,#`@,C,P+C`P,"`U,S@N,#`P(#(R.2XP,#`@-3,X+C`P,"`T-C`N,#`P(#8V
XM-2XP,#`*,R`R(#`@,B`M,2`U(#`@,R`P+C`P,"`P(#`*"2`Q.3@@-3(X(#$W
XM.2`U,C,@,34T(#4Q."`Q-#(@-3$W(#$Q."`U,C`@.30@-3,S(#<X(#4U-B`V
XM,2`U.#8@-3<@-3DY(#4W(#8P,"`T.2`U.#4@-3(@-38V(#4V(#4U,B`V,"`U
XM,S<@-C@@-3(R(#<S(#4Q,R`X-R`T.3D@,3$Q(#0Y-"`Q,C4@-#DU(#$U-"`T
XM.3@@,38P(#0Y."`Q-CD@-3`P(#$W.2`U,#(@,3@X(#4P-2`Q.3,@-3`W(#(P
XM,B`U,3$@.3DY.2`Y.3DY"@D@-#4X+C`P,"`V-C<N,#`P(#$X."XP,#`@-3(T
XM+C`P,"`Q.#,N,#`P(#4R,RXP,#`@,3<T+C`P,"`U,C$N,#`P"@D@,38P+C`P
XM,"`U,3@N,#`P(#$U,BXP,#`@-3$W+C`P,"`Q-#4N,#`P(#4Q-BXP,#`@,3,W
XM+C`P,"`U,38N,#`P"@D@,3(T+C`P,"`U,3@N,#`P(#$Q,BXP,#`@-3(R+C`P
XM,"`Q,#`N,#`P(#4R."XP,#`@.#DN,#`P(#4S-RXP,#`*"2`X,BXP,#`@-34P
XM+C`P,"`W-2XP,#`@-38R+C`P,"`V-"XP,#`@-3<X+C`P,"`V,"XP,#`@-3@X
XM+C`P,`H)(#8P+C`P,"`U.34N,#`P(#4X+C`P,"`U.3@N,#`P(#4X+C`P,"`U
XM.3DN,#`P(#4R+C`P,"`U.3@N,#`P"@D@-3$N,#`P(#4X."XP,#`@-#DN,#`P
XM(#4W.2XP,#`@-3$N,#`P(#4V.2XP,#`@-3,N,#`P(#4V,BXP,#`*"2`U-BXP
XM,#`@-34T+C`P,"`U-RXP,#`@-30X+C`P,"`V,"XP,#`@-3,Y+C`P,"`V,RXP
XM,#`@-3,S+C`P,`H)(#8W+C`P,"`U,C4N,#`P(#<P+C`P,"`U,3DN,#`P(#<S
XM+C`P,"`U,34N,#`P(#<W+C`P,"`U,#DN,#`P"@D@.#,N,#`P(#4P,2XP,#`@
XM.30N,#`P(#0Y-2XP,#`@,3`W+C`P,"`T.3,N,#`P(#$Q-2XP,#`@-#DR+C`P
XM,`H)(#$R,RXP,#`@-#DT+C`P,"`Q,S,N,#`P(#0Y-2XP,#`@,30X+C`P,"`T
XM.38N,#`P(#$U-BXP,#`@-#DW+C`P,`H)(#$U.2XP,#`@-#DW+C`P,"`Q-C(N
XM,#`P(#0Y-RXP,#`@,38X+C`P,"`T.3DN,#`P(#$W,BXP,#`@-#DY+C`P,`H)
XM(#$W-RXP,#`@-3`P+C`P,"`Q.#$N,#`P(#4P,BXP,#`@,3@W+C`P,"`U,#0N
XM,#`P(#$Y,"XP,#`@-3`U+C`P,`H)(#$Y,RXP,#`@-3`V+C`P,"`Q.34N,#`P
XM(#4P-RXP,#`@,3DX+C`P,"`U,#@N,#`P(#0U."XP,#`@-C8W+C`P,`HS(#(@
XM,"`R("TQ(#0@,"`S(#`N,#`P(#`@,`H)(#,U-2`T,3,@,S(U(#0Q.2`R.3`@
XM-#,W(#(R-"`T.#$@,C$S(#0Y,B`R,#4@-3`V(#$Y.2`U,C`@,C`P(#4R,2`Q
XM.38@-3,Y(#$Y."`U-34@,C`R(#4V-"`R,3@@-3<Y(#(R-B`U.#(@,C4U(#4W
XM,2`R-C`@-34Y(#(U.2`U,S@@,C4R(#4S,"`R-#8@-3(W(#(S-B`U,C,@,C4P
XM(#4P,B`R-3<@-#DP(#(V-2`T.#(@,C<S(#0W-"`R.#,@-#8W(#,P,B`T-3<@
XM,S(P(#0U,B`S,C@@-#4Q(#DY.3D@.3DY.0H)(#0U.2XP,#`@-C8T+C`P,"`S
XM,S@N,#`P(#0Q-2XP,#`@,S,Q+C`P,"`T,3<N,#`P(#,Q."XP,#`@-#(R+C`P
XM,`H)(#(Y.2XP,#`@-#,R+C`P,"`R-S4N,#`P(#0T-2XP,#`@,C,X+C`P,"`T
XM-C@N,#`P(#(R,BXP,#`@-#@R+C`P,`H)(#(Q-BXP,#`@-#@X+C`P,"`R,3$N
XM,#`P(#0Y-"XP,#`@,C`W+C`P,"`U,#(N,#`P(#(P-"XP,#`@-3`Y+C`P,`H)
XM(#(P,"XP,#`@-3$U+C`P,"`R,#`N,#`P(#4Q.2XP,#`@,C`P+C`P,"`U,C`N
XM,#`P(#(P,2XP,#`@-3(U+C`P,`H)(#$Y-RXP,#`@-3,T+C`P,"`Q.3<N,#`P
XM(#4T,BXP,#`@,3DW+C`P,"`U-3$N,#`P(#$Y.2XP,#`@-34W+C`P,`H)(#(P
XM,2XP,#`@-38Q+C`P,"`R,#8N,#`P(#4V-RXP,#`@,C$T+C`P,"`U-S4N,#`P
XM(#(R,"XP,#`@-3<Y+C`P,`H)(#(R-"XP,#`@-3@Q+C`P,"`R,S4N,#`P(#4X
XM,BXP,#`@,C4P+C`P,"`U-S8N,#`P(#(U."XP,#`@-38X+C`P,`H)(#(V,2XP
XM,#`@-38Q+C`P,"`R-C(N,#`P(#4U,RXP,#`@,C8R+C`P,"`U-#(N,#`P(#(U
XM.2XP,#`@-3,T+C`P,`H)(#(U-2XP,#`@-3,Q+C`P,"`R-3(N,#`P(#4R.2XP
XM,#`@,C0Y+C`P,"`U,C<N,#`P(#(T-2XP,#`@-3(T+C`P,`H)(#(S."XP,#`@
XM-3(U+C`P,"`R,S0N,#`P(#4Q-"XP,#`@,C0X+C`P,"`U,#8N,#`P(#(U,BXP
XM,#`@-#DY+C`P,`H)(#(U-BXP,#`@-#DR+C`P,"`R-3DN,#`P(#0X-RXP,#`@
XM,C8T+C`P,"`T.#,N,#`P(#(V."XP,#`@-#<Y+C`P,`H)(#(W,BXP,#`@-#<T
XM+C`P,"`R-S8N,#`P(#0W,2XP,#`@,C@Q+C`P,"`T-C@N,#`P(#(X."XP,#`@
XM-#8T+C`P,`H)(#(Y."XP,#`@-#4Y+C`P,"`S,#8N,#`P(#0U-2XP,#`@,S$V
XM+C`P,"`T-3,N,#`P(#,R,BXP,#`@-#4Q+C`P,`H)(#,R-"XP,#`@-#4Q+C`P
X5,"`T-3DN,#`P(#8V-"XP,#`*+38*
X`
Xend
END_OF_FILE
if test 21385 -ne `wc -c <'Examples/snake4.fig.uu'`; then
    echo shar: \"'Examples/snake4.fig.uu'\" unpacked with wrong size!
fi
# end of 'Examples/snake4.fig.uu'
fi
if test -f 'Examples/test0.fig.uu' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'Examples/test0.fig.uu'\"
else
echo shar: Extracting \"'Examples/test0.fig.uu'\" \(25430 characters\)
sed "s/^X//" >'Examples/test0.fig.uu' <<'END_OF_FILE'
Xbegin 444 test0.fig
XM(T9)1R`R+C$*.#`@,@HQ(#,@,"`Q("TQ(#`@,"`P(#`N,#`P(#$@,"XP,#`@
XM-#DT(#4W-"`U-2`U-2`T.30@-3<T(#4T.2`U-S0*,2`S(#`@,2`M,2`P(#`@
XM,"`P+C`P,"`Q(#`N,#`P(#0Y-"`U-S0@-3`@-3`@-#DT(#4W-"`U-#0@-3<T
XM"C$@,R`P(#$@+3$@,"`P(#`@,"XP,#`@,2`P+C`P,"`T.30@-3<T(#0U(#0U
XM(#0Y-"`U-S0@-3,Y(#4W-`HQ(#,@,"`Q("TQ(#`@,"`P(#`N,#`P(#$@,"XP
XM,#`@-#DT(#4W-"`T,"`T,"`T.30@-3<T(#4S-"`U-S0*,2`S(#`@,2`M,2`P
XM(#`@,"`P+C`P,"`Q(#`N,#`P(#0Y-"`U-S0@,S4@,S4@-#DT(#4W-"`U,CD@
XM-3<T"C$@,R`P(#$@+3$@,"`P(#`@,"XP,#`@,2`P+C`P,"`T.30@-3<T(#,P
XM(#,P(#0Y-"`U-S0@-3(T(#4W-`HQ(#,@,"`Q("TQ(#`@,"`P(#`N,#`P(#$@
XM,"XP,#`@-#DT(#4W-"`R-2`R-2`T.30@-3<T(#4Q.2`U-S0*,2`S(#`@,2`M
XM,2`P(#`@,"`P+C`P,"`Q(#`N,#`P(#0Y-"`U-S0@,C`@,C`@-#DT(#4W-"`U
XM,30@-3<T"C$@,R`P(#$@+3$@,"`P(#`@,"XP,#`@,2`P+C`P,"`T.30@-3<T
XM(#$U(#$U(#0Y-"`U-S0@-3`Y(#4W-`HQ(#,@,"`Q("TQ(#`@,"`P(#`N,#`P
XM(#$@,"XP,#`@-#DT(#4W-"`Q,"`Q,"`T.30@-3<T(#4P-"`U-S0*,2`S(#`@
XM,2`M,2`P(#`@,"`P+C`P,"`Q(#`N,#`P(#0Y-"`U-S0@-2`U(#0Y-"`U-S0@
XM-#DY(#4W-`HR(#$@,"`Q("TQ(#`@,"`P(#`N,#`P(#`@,"`P"@D@.#0@,38Y
XM(#@T(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@
XM,`H)(#DY(#$V.2`Y.2`U,30@.3DY.2`Y.3DY"C(@,2`P(#$@+3$@,"`P(#`@
XM,"XP,#`@,"`P(#`*"2`Q,#0@,38Y(#$P-"`U,30@.3DY.2`Y.3DY"C(@,2`P
XM(#$@+3$@,"`P(#`@,"XP,#`@,"`P(#`*"2`Y-"`Q-CD@.30@-3$T(#DY.3D@
XM.3DY.0HR(#$@,"`Q("TQ(#`@,"`P(#`N,#`P(#`@,"`P"@D@.#D@,38Y(#@Y
XM(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)
XM(#(V-"`Q-CD@,C8T(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P
XM+C`P,"`P(#`@,`H)(#(V.2`Q-CD@,C8Y(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@
XM,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#(W.2`Q-CD@,C<Y(#4Q-"`Y.3DY
XM(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#(W-"`Q-CD@
XM,C<T(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@
XM,`H)(#(U-"`Q-CD@,C4T(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@
XM,"`P+C`P,"`P(#`@,`H)(#(T.2`Q-CD@,C0Y(#4Q-"`Y.3DY(#DY.3D*,B`Q
XM(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#(U.2`Q-CD@,C4Y(#4Q-"`Y
XM.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#(R-"`Q
XM-CD@,C(T(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P
XM(#`@,`H)(#(Q-"`Q-CD@,C$T(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P
XM(#`@,"`P+C`P,"`P(#`@,`H)(#(Q.2`Q-CD@,C$Y(#4Q-"`Y.3DY(#DY.3D*
XM,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#(S.2`Q-CD@,C,Y(#4Q
XM-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#(T
XM-"`Q-CD@,C0T(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P
XM,"`P(#`@,`H)(#(S-"`Q-CD@,C,T(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M
XM,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#(R.2`Q-CD@,C(Y(#4Q-"`Y.3DY(#DY
XM.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#$Y-"`Q-CD@,3DT
XM(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)
XM(#$Y.2`Q-CD@,3DY(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P
XM+C`P,"`P(#`@,`H)(#(P.2`Q-CD@,C`Y(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@
XM,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#(P-"`Q-CD@,C`T(#4Q-"`Y.3DY
XM(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#$X-"`Q-CD@
XM,3@T(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@
XM,`H)(#$W.2`Q-CD@,3<Y(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@
XM,"`P+C`P,"`P(#`@,`H)(#$X.2`Q-CD@,3@Y(#4Q-"`Y.3DY(#DY.3D*,B`Q
XM(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#$U-"`Q-CD@,34T(#4Q-"`Y
XM.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#$T-"`Q
XM-CD@,30T(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P
XM(#`@,`H)(#$T.2`Q-CD@,30Y(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P
XM(#`@,"`P+C`P,"`P(#`@,`H)(#$V.2`Q-CD@,38Y(#4Q-"`Y.3DY(#DY.3D*
XM,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#$W-"`Q-CD@,3<T(#4Q
XM-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#$V
XM-"`Q-CD@,38T(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P
XM,"`P(#`@,`H)(#$U.2`Q-CD@,34Y(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M
XM,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#$R-"`Q-CD@,3(T(#4Q-"`Y.3DY(#DY
XM.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#$R.2`Q-CD@,3(Y
XM(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)
XM(#$S.2`Q-CD@,3,Y(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P
XM+C`P,"`P(#`@,`H)(#$S-"`Q-CD@,3,T(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@
XM,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#$Q-"`Q-CD@,3$T(#4Q-"`Y.3DY
XM(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#$P.2`Q-CD@
XM,3`Y(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@
XM,`H)(#$Q.2`Q-CD@,3$Y(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@
XM,"`P+C`P,"`P(#`@,`H)(#,R.2`Q-CD@,S(Y(#4Q-"`Y.3DY(#DY.3D*,B`Q
XM(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#,Q.2`Q-CD@,S$Y(#4Q-"`Y
XM.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#,R-"`Q
XM-CD@,S(T(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P
XM(#`@,`H)(#,T-"`Q-CD@,S0T(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P
XM(#`@,"`P+C`P,"`P(#`@,`H)(#,T.2`Q-CD@,S0Y(#4Q-"`Y.3DY(#DY.3D*
XM,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#,S.2`Q-CD@,S,Y(#4Q
XM-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#,S
XM-"`Q-CD@,S,T(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P
XM,"`P(#`@,`H)(#,V.2`Q-CD@,S8Y(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M
XM,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#,W-"`Q-CD@,S<T(#4Q-"`Y.3DY(#DY
XM.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#,X-"`Q-CD@,S@T
XM(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)
XM(#,W.2`Q-CD@,S<Y(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P
XM+C`P,"`P(#`@,`H)(#,U.2`Q-CD@,S4Y(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@
XM,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#,U-"`Q-CD@,S4T(#4Q-"`Y.3DY
XM(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#,V-"`Q-CD@
XM,S8T(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@
XM,`H)(#,Y.2`Q-CD@,SDY(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@
XM,"`P+C`P,"`P(#`@,`H)(#,X.2`Q-CD@,S@Y(#4Q-"`Y.3DY(#DY.3D*,B`Q
XM(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#,Y-"`Q-CD@,SDT(#4Q-"`Y
XM.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#0Q-"`Q
XM-CD@-#$T(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P
XM(#`@,`H)(#0Q.2`Q-CD@-#$Y(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P
XM(#`@,"`P+C`P,"`P(#`@,`H)(#0P.2`Q-CD@-#`Y(#4Q-"`Y.3DY(#DY.3D*
XM,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#0P-"`Q-CD@-#`T(#4Q
XM-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#0S
XM.2`Q-CD@-#,Y(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P
XM,"`P(#`@,`H)(#0T-"`Q-CD@-#0T(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M
XM,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#0U-"`Q-CD@-#4T(#4Q-"`Y.3DY(#DY
XM.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#0T.2`Q-CD@-#0Y
XM(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)
XM(#0R.2`Q-CD@-#(Y(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P
XM+C`P,"`P(#`@,`H)(#0R-"`Q-CD@-#(T(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@
XM,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#0S-"`Q-CD@-#,T(#4Q-"`Y.3DY
XM(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#0V.2`Q-CD@
XM-#8Y(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@
XM,`H)(#0U.2`Q-CD@-#4Y(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@
XM,"`P+C`P,"`P(#`@,`H)(#0V-"`Q-CD@-#8T(#4Q-"`Y.3DY(#DY.3D*,B`Q
XM(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#0X-"`Q-CD@-#@T(#4Q-"`Y
XM.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#0X.2`Q
XM-CD@-#@Y(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P
XM(#`@,`H)(#0W.2`Q-CD@-#<Y(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P
XM(#`@,"`P+C`P,"`P(#`@,`H)(#0W-"`Q-CD@-#<T(#4Q-"`Y.3DY(#DY.3D*
XM,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#(Y.2`Q-CD@,CDY(#4Q
XM-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#,P
XM-"`Q-CD@,S`T(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P
XM,"`P(#`@,`H)(#,Q-"`Q-CD@,S$T(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M
XM,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#,P.2`Q-CD@,S`Y(#4Q-"`Y.3DY(#DY
XM.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#(X.2`Q-CD@,C@Y
XM(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)
XM(#(X-"`Q-CD@,C@T(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P
XM+C`P,"`P(#`@,`H)(#(Y-"`Q-CD@,CDT(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@
XM,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#4P-"`Q-CD@-3`T(#4Q-"`Y.3DY
XM(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#0Y-"`Q-CD@
XM-#DT(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@
XM,`H)(#0Y.2`Q-CD@-#DY(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@
XM,"`P+C`P,"`P(#`@,`H)(#4Q.2`Q-CD@-3$Y(#4Q-"`Y.3DY(#DY.3D*,B`Q
XM(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#4R-"`Q-CD@-3(T(#4Q-"`Y
XM.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#4Q-"`Q
XM-CD@-3$T(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P
XM(#`@,`H)(#4P.2`Q-CD@-3`Y(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P
XM(#`@,"`P+C`P,"`P(#`@,`H)(#8X-"`Q-CD@-C@T(#4Q-"`Y.3DY(#DY.3D*
XM,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#8X.2`Q-CD@-C@Y(#4Q
XM-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#8Y
XM.2`Q-CD@-CDY(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P
XM,"`P(#`@,`H)(#8Y-"`Q-CD@-CDT(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M
XM,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#8W-"`Q-CD@-C<T(#4Q-"`Y.3DY(#DY
XM.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#8V.2`Q-CD@-C8Y
XM(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)
XM(#8W.2`Q-CD@-C<Y(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P
XM+C`P,"`P(#`@,`H)(#8T-"`Q-CD@-C0T(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@
XM,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#8S-"`Q-CD@-C,T(#4Q-"`Y.3DY
XM(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#8S.2`Q-CD@
XM-C,Y(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@
XM,`H)(#8U.2`Q-CD@-C4Y(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@
XM,"`P+C`P,"`P(#`@,`H)(#8V-"`Q-CD@-C8T(#4Q-"`Y.3DY(#DY.3D*,B`Q
XM(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#8U-"`Q-CD@-C4T(#4Q-"`Y
XM.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#8T.2`Q
XM-CD@-C0Y(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P
XM(#`@,`H)(#8Q-"`Q-CD@-C$T(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P
XM(#`@,"`P+C`P,"`P(#`@,`H)(#8Q.2`Q-CD@-C$Y(#4Q-"`Y.3DY(#DY.3D*
XM,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#8R.2`Q-CD@-C(Y(#4Q
XM-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#8R
XM-"`Q-CD@-C(T(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P
XM,"`P(#`@,`H)(#8P-"`Q-CD@-C`T(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M
XM,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#4Y.2`Q-CD@-3DY(#4Q-"`Y.3DY(#DY
XM.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#8P.2`Q-CD@-C`Y
XM(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)
XM(#4W-"`Q-CD@-3<T(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P
XM+C`P,"`P(#`@,`H)(#4V-"`Q-CD@-38T(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@
XM,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#4V.2`Q-CD@-38Y(#4Q-"`Y.3DY
XM(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#4X.2`Q-CD@
XM-3@Y(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@
XM,`H)(#4Y-"`Q-CD@-3DT(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@
XM,"`P+C`P,"`P(#`@,`H)(#4X-"`Q-CD@-3@T(#4Q-"`Y.3DY(#DY.3D*,B`Q
XM(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#4W.2`Q-CD@-3<Y(#4Q-"`Y
XM.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#4T-"`Q
XM-CD@-30T(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P
XM(#`@,`H)(#4T.2`Q-CD@-30Y(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P
XM(#`@,"`P+C`P,"`P(#`@,`H)(#4U.2`Q-CD@-34Y(#4Q-"`Y.3DY(#DY.3D*
XM,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#4U-"`Q-CD@-34T(#4Q
XM-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#4S
XM-"`Q-CD@-3,T(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P
XM,"`P(#`@,`H)(#4R.2`Q-CD@-3(Y(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M
XM,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#4S.2`Q-CD@-3,Y(#4Q-"`Y.3DY(#DY
XM.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#(Y(#$V.2`R.2`U
XM,30@.3DY.2`Y.3DY"C(@,2`P(#$@+3$@,"`P(#`@,"XP,#`@,"`P(#`*"2`R
XM-"`Q-CD@,C0@-3$T(#DY.3D@.3DY.0HR(#$@,"`Q("TQ(#`@,"`P(#`N,#`P
XM(#`@,"`P"@D@,3D@.2`Q.2`U,30@.3DY.2`Y.3DY"C(@,2`P(#$@+3$@,"`P
XM(#`@,"XP,#`@,"`P(#`*"2`Q-"`Y(#$T(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@
XM,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#D@.2`Y(#4Q-"`Y.3DY(#DY.3D*
XM,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#,T(#D@,S0@-3$T(#DY
XM.3D@.3DY.0HR(#$@,"`Q("TQ(#`@,"`P(#`N,#`P(#`@,"`P"@D@,SD@.2`S
XM.2`U,30@.3DY.2`Y.3DY"C(@,2`P(#$@+3$@,"`P(#`@,"XP,#`@,"`P(#`*
XM"2`T-"`Y(#0T(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P
XM,"`P(#`@,`H)(#0Y(#$V.2`T.2`U,30@.3DY.2`Y.3DY"C(@,2`P(#$@+3$@
XM,"`P(#`@,"XP,#`@,"`P(#`*"2`U-"`Q-CD@-30@-3$T(#DY.3D@.3DY.0HR
XM(#$@,"`Q("TQ(#`@,"`P(#`N,#`P(#`@,"`P"@D@-S0@,38T(#8Y.2`Q-3D@
XM.3DY.2`Y.3DY"C(@,2`P(#$@+3$@,"`P(#`@,"XP,#`@,"`P(#`*"2`W-"`Q
XM-3D@-CDY(#$U-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P
XM(#`@,`H)(#<T(#$T.2`V.3D@,30T(#DY.3D@.3DY.0HR(#$@,"`Q("TQ(#`@
XM,"`P(#`N,#`P(#`@,"`P"@D@-S0@,30T(#8Y.2`Q,SD@.3DY.2`Y.3DY"C(@
XM,2`P(#$@+3$@,"`P(#`@,"XP,#`@,"`P(#`*"2`W-"`Q,SD@-CDY(#$S-"`Y
XM.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#<T(#$U
XM-"`V.3D@,30Y(#DY.3D@.3DY.0HR(#$@,"`Q("TQ(#`@,"`P(#`N,#`P(#`@
XM,"`P"@D@-S0@,3,T(#8Y.2`Q,CD@.3DY.2`Y.3DY"C(@,2`P(#$@+3$@,"`P
XM(#`@,"XP,#`@,"`P(#`*"2`W-"`Q,CD@-CDY(#$R-"`Y.3DY(#DY.3D*,B`Q
XM(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#<T(#@Y(#8Y.2`X-"`Y.3DY
XM(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#<T(#DT(#8Y
XM.2`X.2`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)
XM(#<T(#$Q-"`V.3D@,3`Y(#DY.3D@.3DY.0HR(#$@,"`Q("TQ(#`@,"`P(#`N
XM,#`P(#`@,"`P"@D@-S0@.3D@-CDY(#DT(#DY.3D@.3DY.0HR(#$@,"`Q("TQ
XM(#`@,"`P(#`N,#`P(#`@,"`P"@D@-S0@,3`T(#8Y.2`Y.2`Y.3DY(#DY.3D*
XM,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#<T(#$P.2`V.3D@,3`T
XM(#DY.3D@.3DY.0HR(#$@,"`Q("TQ(#`@,"`P(#`N,#`P(#`@,"`P"@D@-S0@
XM,3$Y(#8Y.2`Q,30@.3DY.2`Y.3DY"C(@,2`P(#$@+3$@,"`P(#`@,"XP,#`@
XM,"`P(#`*"2`W-"`Q,C0@-CDY(#$Q.2`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P
XM(#`@,"`P+C`P,"`P(#`@,`H)(#<T(#@T(#8Y.2`W.2`Y.3DY(#DY.3D*,B`Q
XM(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#<T(#<Y(#8Y.2`W-"`Y.3DY
XM(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#<T(#8Y(#8Y
XM.2`V-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)
XM(#<T(#8T(#8Y.2`U.2`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P
XM,"`P(#`@,`H)(#<T(#4Y(#8Y.2`U-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P
XM(#`@,"`P+C`P,"`P(#`@,`H)(#<T(#<T(#8Y.2`V.2`Y.3DY(#DY.3D*,B`Q
XM(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#<T(#4T(#8Y.2`T.2`Y.3DY
XM(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#<T(#0Y(#8Y
XM.2`T-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)
XM(#<T(#D@-CDY(#0@.3DY.2`Y.3DY"C(@,2`P(#$@+3$@,"`P(#`@,"XP,#`@
XM,"`P(#`*"2`W-"`Q-"`V.3D@.2`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@
XM,"`P+C`P,"`P(#`@,`H)(#<T(#,T(#8Y.2`R.2`Y.3DY(#DY.3D*,B`Q(#`@
XM,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#<T(#$Y(#8Y.2`Q-"`Y.3DY(#DY
XM.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#<T(#(T(#8Y.2`Q
XM.2`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#<T
XM(#(Y(#8Y.2`R-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P
XM(#`@,`H)(#<T(#,Y(#8Y.2`S-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@
XM,"`P+C`P,"`P(#`@,`H)(#<T(#0T(#8Y.2`S.2`Y.3DY(#DY.3D*,B`Q(#`@
XM,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#<Y(#$V.2`W.2`U,30@.3DY.2`Y
XM.3DY"C(@,2`P(#$@+3$@,"`P(#`@,"XP,#`@,"`P(#`*"2`W-"`Q-CD@-S0@
XM-3$T(#DY.3D@.3DY.0HR(#$@,"`Q("TQ(#`@,"`P(#`N,#`P(#`@,"`P"@D@
XM-CD@.2`V.2`U,30@.3DY.2`Y.3DY"C(@,2`P(#$@+3$@,"`P(#`@,"XP,#`@
XM,"`P(#`*"2`V-"`Y(#8T(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@
XM,"`P+C`P,"`P(#`@,`H)(#4Y(#D@-3D@-3$T(#DY.3D@.3DY.0HR(#$@,"`Q
XM("TQ(#`@,"`P(#`N,#`P(#`@,"`P"@D@-S`T(#D@-S`T(#4Q-"`Y.3DY(#DY
XM.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#<P.2`Y(#<P.2`U
XM,30@.3DY.2`Y.3DY"C(@,2`P(#$@+3$@,"`P(#`@,"XP,#`@,"`P(#`*"2`W
XM,30@.2`W,30@-3$T(#DY.3D@.3DY.0HR(#$@,"`Q("TQ(#`@,"`P(#`N,#`P
XM(#`@,"`P"@D@-S$Y(#$V.2`W,3D@-3$T(#DY.3D@.3DY.0HR(#$@,"`Q("TQ
XM(#`@,"`P(#`N,#`P(#`@,"`P"@D@-S(T(#$V.2`W,C0@-3$T(#DY.3D@.3DY
XM.0HR(#$@,"`Q("TQ(#`@,"`P(#`N,#`P(#`@,"`P"@D@-S0Y(#$V.2`W-#D@
XM-3$T(#DY.3D@.3DY.0HR(#$@,"`Q("TQ(#`@,"`P(#`N,#`P(#`@,"`P"@D@
XM-S0T(#$V.2`W-#0@-3$T(#DY.3D@.3DY.0HR(#$@,"`Q("TQ(#`@,"`P(#`N
XM,#`P(#`@,"`P"@D@-S,Y(#D@-S,Y(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M
XM,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#<S-"`Y(#<S-"`U,30@.3DY.2`Y.3DY
XM"C(@,2`P(#$@+3$@,"`P(#`@,"XP,#`@,"`P(#`*"2`W,CD@.2`W,CD@-3$T
XM(#DY.3D@.3DY.0HR(#$@,"`Q("TQ(#`@,"`P(#`N,#`P(#`@,"`P"@D@-S4T
XM(#D@-S4T(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P
XM(#`@,`H)(#<U.2`Y(#<U.2`U,30@.3DY.2`Y.3DY"C(@,2`P(#$@+3$@,"`P
XM(#`@,"XP,#`@,"`P(#`*"2`W-C0@.2`W-C0@-3$T(#DY.3D@.3DY.0HR(#$@
XM,"`Q("TQ(#`@,"`P(#`N,#`P(#`@,"`P"@D@-S8Y(#$V.2`W-CD@-3$T(#DY
XM.3D@.3DY.0HR(#$@,"`Q("TQ(#`@,"`P(#`N,#`P(#`@,"`P"@D@-S<T(#$V
XM.2`W-S0@-3$T(#DY.3D@.3DY.0HS(#(@,"`Q("TQ(#`@,"`P(#`N,#`P(#`@
XM,`H)(#8Y(#4V.2`V.2`V,#D@,3`Y(#4V.2`Q,#D@-C`Y(#$T.2`U-CD@,30Y
XM(#8P.2`Q.#D@-38Y(#$X.2`V,#D@,C(Y(#4V.2`R,CD@-C`Y(#(V.2`U-CD@
XM,C8Y(#8P.2`S,#D@-38Y(#,P.2`V,#D@,S0Y(#4V.2`S-#D@-C`Y(#,X.2`U
XM-CD@.3DY.2`Y.3DY"@D@+3$P+C`P,"`Q,"XP,#`@-C,N,38V(#4Y-BXU.#0@
XM-C,N,38V(#8P-BXU.#0@.#`N,#`P(#8Q,RXU-38*"2`Y."XP,#`@-38T+C0T
XM-"`Q,38N-S<X(#4W,BXR,C(@,3`Q+C(R,B`V,#4N-S<X(#$R,"XP,#`@-C$S
XM+C4U-@H)(#$S."XP,#`@-38T+C0T-"`Q-38N-S<X(#4W,BXR,C(@,30Q+C(R
XM,B`V,#4N-S<X(#$V,"XP,#`@-C$S+C4U-@H)(#$W."XP,#`@-38T+C0T-"`Q
XM.38N-S<X(#4W,BXR,C(@,3@Q+C(R,B`V,#4N-S<X(#(P,"XP,#`@-C$S+C4U
XM-@H)(#(Q."XP,#`@-38T+C0T-"`R,S8N-S<X(#4W,BXR,C(@,C(Q+C(R,B`V
XM,#4N-S<X(#(T,"XP,#`@-C$S+C4U-@H)(#(U."XP,#`@-38T+C0T-"`R-S8N
XM-S<X(#4W,BXR,C(@,C8Q+C(R,B`V,#4N-S<X(#(X,"XP,#`@-C$S+C4U-@H)
XM(#(Y."XP,#`@-38T+C0T-"`S,38N-S<X(#4W,BXR,C(@,S`Q+C(R,B`V,#4N
XM-S<X(#,R,"XP,#`@-C$S+C4U-@H)(#,S."XP,#`@-38T+C0T-"`S-38N-S<X
XM(#4W,BXR,C(@,S0Q+C(R,B`V,#4N-S<X(#,U-RXR-3`@-C$R+C0Q-PH)(#,V
XM-RXR-3`@-C`R+C0Q-R`M,3`N,#`P(#$P+C`P,`HS(#(@,"`Q("TQ(#`@,"`P
XM(#`N,#`P(#`@,`H)(#<T(#4V-"`W-"`V,#0@,3$T(#4V-"`Q,30@-C`T(#$U
XM-"`U-C0@,34T(#8P-"`Q.30@-38T(#$Y-"`V,#0@,C,T(#4V-"`R,S0@-C`T
XM(#(W-"`U-C0@,C<T(#8P-"`S,30@-38T(#,Q-"`V,#0@,S4T(#4V-"`S-30@
XM-C`T(#,Y-"`U-C0@.3DY.2`Y.3DY"@D@+34N,#`P(#4N,#`P(#8X+C$V-B`U
XM.3$N-3@T(#8X+C$V-B`V,#$N-3@T(#@U+C`P,"`V,#@N-34V"@D@,3`S+C`P
XM,"`U-3DN-#0T(#$R,2XW-S@@-38W+C(R,B`Q,#8N,C(R(#8P,"XW-S@@,3(U
XM+C`P,"`V,#@N-34V"@D@,30S+C`P,"`U-3DN-#0T(#$V,2XW-S@@-38W+C(R
XM,B`Q-#8N,C(R(#8P,"XW-S@@,38U+C`P,"`V,#@N-34V"@D@,3@S+C`P,"`U
XM-3DN-#0T(#(P,2XW-S@@-38W+C(R,B`Q.#8N,C(R(#8P,"XW-S@@,C`U+C`P
XM,"`V,#@N-34V"@D@,C(S+C`P,"`U-3DN-#0T(#(T,2XW-S@@-38W+C(R,B`R
XM,C8N,C(R(#8P,"XW-S@@,C0U+C`P,"`V,#@N-34V"@D@,C8S+C`P,"`U-3DN
XM-#0T(#(X,2XW-S@@-38W+C(R,B`R-C8N,C(R(#8P,"XW-S@@,C@U+C`P,"`V
XM,#@N-34V"@D@,S`S+C`P,"`U-3DN-#0T(#,R,2XW-S@@-38W+C(R,B`S,#8N
XM,C(R(#8P,"XW-S@@,S(U+C`P,"`V,#@N-34V"@D@,S0S+C`P,"`U-3DN-#0T
XM(#,V,2XW-S@@-38W+C(R,B`S-#8N,C(R(#8P,"XW-S@@,S8R+C(U,"`V,#<N
XM-#$W"@D@,S<R+C(U,"`U.3<N-#$W("TU+C`P,"`U+C`P,`HS(#(@,"`Q("TQ
XM(#`@,"`P(#`N,#`P(#`@,`H)(#$Q-"`U,C0@,3$T(#4V-"`Q-30@-3(T(#$U
XM-"`U-C0@,3DT(#4R-"`Q.30@-38T(#(S-"`U,C0@,C,T(#4V-"`R-S0@-3(T
XM(#(W-"`U-C0@,S$T(#4R-"`S,30@-38T(#,U-"`U,C0@,S4T(#4V-"`S.30@
XM-3(T(#,Y-"`U-C0@-#,T(#4R-"`Y.3DY(#DY.3D*"2`S-2XP,#`@+3,U+C`P
XM,"`Q,#@N,38V(#4U,2XU.#0@,3`X+C$V-B`U-C$N-3@T(#$R-2XP,#`@-38X
XM+C4U-@H)(#$T,RXP,#`@-3$Y+C0T-"`Q-C$N-S<X(#4R-RXR,C(@,30V+C(R
XM,B`U-C`N-S<X(#$V-2XP,#`@-38X+C4U-@H)(#$X,RXP,#`@-3$Y+C0T-"`R
XM,#$N-S<X(#4R-RXR,C(@,3@V+C(R,B`U-C`N-S<X(#(P-2XP,#`@-38X+C4U
XM-@H)(#(R,RXP,#`@-3$Y+C0T-"`R-#$N-S<X(#4R-RXR,C(@,C(V+C(R,B`U
XM-C`N-S<X(#(T-2XP,#`@-38X+C4U-@H)(#(V,RXP,#`@-3$Y+C0T-"`R.#$N
XM-S<X(#4R-RXR,C(@,C8V+C(R,B`U-C`N-S<X(#(X-2XP,#`@-38X+C4U-@H)
XM(#,P,RXP,#`@-3$Y+C0T-"`S,C$N-S<X(#4R-RXR,C(@,S`V+C(R,B`U-C`N
XM-S<X(#,R-2XP,#`@-38X+C4U-@H)(#,T,RXP,#`@-3$Y+C0T-"`S-C$N-S<X
XM(#4R-RXR,C(@,S0V+C(R,B`U-C`N-S<X(#,V-2XP,#`@-38X+C4U-@H)(#,X
XM,RXP,#`@-3$Y+C0T-"`T,#$N-S<X(#4R-RXR,C(@,S@V+C(R,B`U-C`N-S<X
XM(#0P,BXR-3`@-38W+C0Q-PH)(#0Q,BXR-3`@-34W+C0Q-R`S-2XP,#`@+3,U
XM+C`P,`HS(#(@,"`Q("TQ(#`@,"`P(#`N,#`P(#`@,`H)(#$P.2`U,CD@,3`Y
XM(#4V.2`Q-#D@-3(Y(#$T.2`U-CD@,3@Y(#4R.2`Q.#D@-38Y(#(R.2`U,CD@
XM,C(Y(#4V.2`R-CD@-3(Y(#(V.2`U-CD@,S`Y(#4R.2`S,#D@-38Y(#,T.2`U
XM,CD@,S0Y(#4V.2`S.#D@-3(Y(#,X.2`U-CD@-#(Y(#4R.2`Y.3DY(#DY.3D*
XM"2`S,"XP,#`@+3,P+C`P,"`Q,#,N,38V(#4U-BXU.#0@,3`S+C$V-B`U-C8N
XM-3@T(#$R,"XP,#`@-3<S+C4U-@H)(#$S."XP,#`@-3(T+C0T-"`Q-38N-S<X
XM(#4S,BXR,C(@,30Q+C(R,B`U-C4N-S<X(#$V,"XP,#`@-3<S+C4U-@H)(#$W
XM."XP,#`@-3(T+C0T-"`Q.38N-S<X(#4S,BXR,C(@,3@Q+C(R,B`U-C4N-S<X
XM(#(P,"XP,#`@-3<S+C4U-@H)(#(Q."XP,#`@-3(T+C0T-"`R,S8N-S<X(#4S
XM,BXR,C(@,C(Q+C(R,B`U-C4N-S<X(#(T,"XP,#`@-3<S+C4U-@H)(#(U."XP
XM,#`@-3(T+C0T-"`R-S8N-S<X(#4S,BXR,C(@,C8Q+C(R,B`U-C4N-S<X(#(X
XM,"XP,#`@-3<S+C4U-@H)(#(Y."XP,#`@-3(T+C0T-"`S,38N-S<X(#4S,BXR
XM,C(@,S`Q+C(R,B`U-C4N-S<X(#,R,"XP,#`@-3<S+C4U-@H)(#,S."XP,#`@
XM-3(T+C0T-"`S-38N-S<X(#4S,BXR,C(@,S0Q+C(R,B`U-C4N-S<X(#,V,"XP
XM,#`@-3<S+C4U-@H)(#,W."XP,#`@-3(T+C0T-"`S.38N-S<X(#4S,BXR,C(@
XM,S@Q+C(R,B`U-C4N-S<X(#,Y-RXR-3`@-3<R+C0Q-PH)(#0P-RXR-3`@-38R
XM+C0Q-R`S,"XP,#`@+3,P+C`P,`HS(#(@,"`Q("TQ(#`@,"`P(#`N,#`P(#`@
XM,`H)(#$P-"`U,S0@,3`T(#4W-"`Q-#0@-3,T(#$T-"`U-S0@,3@T(#4S-"`Q
XM.#0@-3<T(#(R-"`U,S0@,C(T(#4W-"`R-C0@-3,T(#(V-"`U-S0@,S`T(#4S
XM-"`S,#0@-3<T(#,T-"`U,S0@,S0T(#4W-"`S.#0@-3,T(#,X-"`U-S0@-#(T
XM(#4S-"`Y.3DY(#DY.3D*"2`R-2XP,#`@+3(U+C`P,"`Y."XQ-C8@-38Q+C4X
XM-"`Y."XQ-C8@-3<Q+C4X-"`Q,34N,#`P(#4W."XU-38*"2`Q,S,N,#`P(#4R
XM.2XT-#0@,34Q+C<W."`U,S<N,C(R(#$S-BXR,C(@-3<P+C<W."`Q-34N,#`P
XM(#4W."XU-38*"2`Q-S,N,#`P(#4R.2XT-#0@,3DQ+C<W."`U,S<N,C(R(#$W
XM-BXR,C(@-3<P+C<W."`Q.34N,#`P(#4W."XU-38*"2`R,3,N,#`P(#4R.2XT
XM-#0@,C,Q+C<W."`U,S<N,C(R(#(Q-BXR,C(@-3<P+C<W."`R,S4N,#`P(#4W
XM."XU-38*"2`R-3,N,#`P(#4R.2XT-#0@,C<Q+C<W."`U,S<N,C(R(#(U-BXR
XM,C(@-3<P+C<W."`R-S4N,#`P(#4W."XU-38*"2`R.3,N,#`P(#4R.2XT-#0@
XM,S$Q+C<W."`U,S<N,C(R(#(Y-BXR,C(@-3<P+C<W."`S,34N,#`P(#4W."XU
XM-38*"2`S,S,N,#`P(#4R.2XT-#0@,S4Q+C<W."`U,S<N,C(R(#,S-BXR,C(@
XM-3<P+C<W."`S-34N,#`P(#4W."XU-38*"2`S-S,N,#`P(#4R.2XT-#0@,SDQ
XM+C<W."`U,S<N,C(R(#,W-BXR,C(@-3<P+C<W."`S.3(N,C4P(#4W-RXT,3<*
XM"2`T,#(N,C4P(#4V-RXT,3<@,C4N,#`P("TR-2XP,#`*,R`R(#`@,2`M,2`P
XM(#`@,"`P+C`P,"`P(#`*"2`Y.2`U,SD@.3D@-3<Y(#$S.2`U,SD@,3,Y(#4W
XM.2`Q-SD@-3,Y(#$W.2`U-SD@,C$Y(#4S.2`R,3D@-3<Y(#(U.2`U,SD@,C4Y
XM(#4W.2`R.3D@-3,Y(#(Y.2`U-SD@,S,Y(#4S.2`S,SD@-3<Y(#,W.2`U,SD@
XM,S<Y(#4W.2`T,3D@-3,Y(#DY.3D@.3DY.0H)(#(P+C`P,"`M,C`N,#`P(#DS
XM+C$V-B`U-C8N-3@T(#DS+C$V-B`U-S8N-3@T(#$Q,"XP,#`@-3@S+C4U-@H)
XM(#$R."XP,#`@-3,T+C0T-"`Q-#8N-S<X(#4T,BXR,C(@,3,Q+C(R,B`U-S4N
XM-S<X(#$U,"XP,#`@-3@S+C4U-@H)(#$V."XP,#`@-3,T+C0T-"`Q.#8N-S<X
XM(#4T,BXR,C(@,3<Q+C(R,B`U-S4N-S<X(#$Y,"XP,#`@-3@S+C4U-@H)(#(P
XM."XP,#`@-3,T+C0T-"`R,C8N-S<X(#4T,BXR,C(@,C$Q+C(R,B`U-S4N-S<X
XM(#(S,"XP,#`@-3@S+C4U-@H)(#(T."XP,#`@-3,T+C0T-"`R-C8N-S<X(#4T
XM,BXR,C(@,C4Q+C(R,B`U-S4N-S<X(#(W,"XP,#`@-3@S+C4U-@H)(#(X."XP
XM,#`@-3,T+C0T-"`S,#8N-S<X(#4T,BXR,C(@,CDQ+C(R,B`U-S4N-S<X(#,Q
XM,"XP,#`@-3@S+C4U-@H)(#,R."XP,#`@-3,T+C0T-"`S-#8N-S<X(#4T,BXR
XM,C(@,S,Q+C(R,B`U-S4N-S<X(#,U,"XP,#`@-3@S+C4U-@H)(#,V."XP,#`@
XM-3,T+C0T-"`S.#8N-S<X(#4T,BXR,C(@,S<Q+C(R,B`U-S4N-S<X(#,X-RXR
XM-3`@-3@R+C0Q-PH)(#,Y-RXR-3`@-3<R+C0Q-R`R,"XP,#`@+3(P+C`P,`HS
XM(#(@,"`Q("TQ(#`@,"`P(#`N,#`P(#`@,`H)(#DT(#4T-"`Y-"`U.#0@,3,T
XM(#4T-"`Q,S0@-3@T(#$W-"`U-#0@,3<T(#4X-"`R,30@-30T(#(Q-"`U.#0@
XM,C4T(#4T-"`R-30@-3@T(#(Y-"`U-#0@,CDT(#4X-"`S,S0@-30T(#,S-"`U
XM.#0@,S<T(#4T-"`S-S0@-3@T(#0Q-"`U-#0@.3DY.2`Y.3DY"@D@,34N,#`P
XM("TQ-2XP,#`@.#@N,38V(#4W,2XU.#0@.#@N,38V(#4X,2XU.#0@,3`U+C`P
XM,"`U.#@N-34V"@D@,3(S+C`P,"`U,SDN-#0T(#$T,2XW-S@@-30W+C(R,B`Q
XM,C8N,C(R(#4X,"XW-S@@,30U+C`P,"`U.#@N-34V"@D@,38S+C`P,"`U,SDN
XM-#0T(#$X,2XW-S@@-30W+C(R,B`Q-C8N,C(R(#4X,"XW-S@@,3@U+C`P,"`U
XM.#@N-34V"@D@,C`S+C`P,"`U,SDN-#0T(#(R,2XW-S@@-30W+C(R,B`R,#8N
XM,C(R(#4X,"XW-S@@,C(U+C`P,"`U.#@N-34V"@D@,C0S+C`P,"`U,SDN-#0T
XM(#(V,2XW-S@@-30W+C(R,B`R-#8N,C(R(#4X,"XW-S@@,C8U+C`P,"`U.#@N
XM-34V"@D@,C@S+C`P,"`U,SDN-#0T(#,P,2XW-S@@-30W+C(R,B`R.#8N,C(R
XM(#4X,"XW-S@@,S`U+C`P,"`U.#@N-34V"@D@,S(S+C`P,"`U,SDN-#0T(#,T
XM,2XW-S@@-30W+C(R,B`S,C8N,C(R(#4X,"XW-S@@,S0U+C`P,"`U.#@N-34V
XM"@D@,S8S+C`P,"`U,SDN-#0T(#,X,2XW-S@@-30W+C(R,B`S-C8N,C(R(#4X
XM,"XW-S@@,S@R+C(U,"`U.#<N-#$W"@D@,SDR+C(U,"`U-S<N-#$W(#$U+C`P
XM,"`M,34N,#`P"C,@,B`P(#$@+3$@,"`P(#`@,"XP,#`@,"`P"@D@.#D@-30Y
XM(#@Y(#4X.2`Q,CD@-30Y(#$R.2`U.#D@,38Y(#4T.2`Q-CD@-3@Y(#(P.2`U
XM-#D@,C`Y(#4X.2`R-#D@-30Y(#(T.2`U.#D@,C@Y(#4T.2`R.#D@-3@Y(#,R
XM.2`U-#D@,S(Y(#4X.2`S-CD@-30Y(#,V.2`U.#D@-#`Y(#4T.2`Y.3DY(#DY
XM.3D*"2`Q,"XP,#`@+3$P+C`P,"`X,RXQ-C8@-3<V+C4X-"`X,RXQ-C8@-3@V
XM+C4X-"`Q,#`N,#`P(#4Y,RXU-38*"2`Q,3@N,#`P(#4T-"XT-#0@,3,V+C<W
XM."`U-3(N,C(R(#$R,2XR,C(@-3@U+C<W."`Q-#`N,#`P(#4Y,RXU-38*"2`Q
XM-3@N,#`P(#4T-"XT-#0@,3<V+C<W."`U-3(N,C(R(#$V,2XR,C(@-3@U+C<W
XM."`Q.#`N,#`P(#4Y,RXU-38*"2`Q.3@N,#`P(#4T-"XT-#0@,C$V+C<W."`U
XM-3(N,C(R(#(P,2XR,C(@-3@U+C<W."`R,C`N,#`P(#4Y,RXU-38*"2`R,S@N
XM,#`P(#4T-"XT-#0@,C4V+C<W."`U-3(N,C(R(#(T,2XR,C(@-3@U+C<W."`R
XM-C`N,#`P(#4Y,RXU-38*"2`R-S@N,#`P(#4T-"XT-#0@,CDV+C<W."`U-3(N
XM,C(R(#(X,2XR,C(@-3@U+C<W."`S,#`N,#`P(#4Y,RXU-38*"2`S,3@N,#`P
XM(#4T-"XT-#0@,S,V+C<W."`U-3(N,C(R(#,R,2XR,C(@-3@U+C<W."`S-#`N
XM,#`P(#4Y,RXU-38*"2`S-3@N,#`P(#4T-"XT-#0@,S<V+C<W."`U-3(N,C(R
XM(#,V,2XR,C(@-3@U+C<W."`S-S<N,C4P(#4Y,BXT,3<*"2`S.#<N,C4P(#4X
XM,BXT,3<@,3`N,#`P("TQ,"XP,#`*,R`R(#`@,2`M,2`P(#`@,"`P+C`P,"`P
XM(#`*"2`X-"`U-30@.#0@-3DT(#$R-"`U-30@,3(T(#4Y-"`Q-C0@-34T(#$V
XM-"`U.30@,C`T(#4U-"`R,#0@-3DT(#(T-"`U-30@,C0T(#4Y-"`R.#0@-34T
XM(#(X-"`U.30@,S(T(#4U-"`S,C0@-3DT(#,V-"`U-30@,S8T(#4Y-"`T,#0@
XM-34T(#DY.3D@.3DY.0H)(#4N,#`P("TU+C`P,"`W."XQ-C8@-3@Q+C4X-"`W
XM."XQ-C8@-3DQ+C4X-"`Y-2XP,#`@-3DX+C4U-@H)(#$Q,RXP,#`@-30Y+C0T
XM-"`Q,S$N-S<X(#4U-RXR,C(@,3$V+C(R,B`U.3`N-S<X(#$S-2XP,#`@-3DX
XM+C4U-@H)(#$U,RXP,#`@-30Y+C0T-"`Q-S$N-S<X(#4U-RXR,C(@,34V+C(R
XM,B`U.3`N-S<X(#$W-2XP,#`@-3DX+C4U-@H)(#$Y,RXP,#`@-30Y+C0T-"`R
XM,3$N-S<X(#4U-RXR,C(@,3DV+C(R,B`U.3`N-S<X(#(Q-2XP,#`@-3DX+C4U
XM-@H)(#(S,RXP,#`@-30Y+C0T-"`R-3$N-S<X(#4U-RXR,C(@,C,V+C(R,B`U
XM.3`N-S<X(#(U-2XP,#`@-3DX+C4U-@H)(#(W,RXP,#`@-30Y+C0T-"`R.3$N
XM-S<X(#4U-RXR,C(@,C<V+C(R,B`U.3`N-S<X(#(Y-2XP,#`@-3DX+C4U-@H)
XM(#,Q,RXP,#`@-30Y+C0T-"`S,S$N-S<X(#4U-RXR,C(@,S$V+C(R,B`U.3`N
XM-S<X(#,S-2XP,#`@-3DX+C4U-@H)(#,U,RXP,#`@-30Y+C0T-"`S-S$N-S<X
XM(#4U-RXR,C(@,S4V+C(R,B`U.3`N-S<X(#,W,BXR-3`@-3DW+C0Q-PH)(#,X
XM,BXR-3`@-3@W+C0Q-R`U+C`P,"`M-2XP,#`*,R`R(#`@,2`M,2`P(#`@,"`P
XM+C`P,"`P(#`*"2`W.2`U-3D@-SD@-3DY(#$Q.2`U-3D@,3$Y(#4Y.2`Q-3D@
XM-34Y(#$U.2`U.3D@,3DY(#4U.2`Q.3D@-3DY(#(S.2`U-3D@,C,Y(#4Y.2`R
XM-SD@-34Y(#(W.2`U.3D@,S$Y(#4U.2`S,3D@-3DY(#,U.2`U-3D@,S4Y(#4Y
XM.2`S.3D@-34Y(#DY.3D@.3DY.0H)(#`N,#`P(#`N,#`P(#<S+C$V-B`U.#8N
XM-3@T(#<S+C$V-B`U.38N-3@T(#DP+C`P,"`V,#,N-34V"@D@,3`X+C`P,"`U
XM-30N-#0T(#$R-BXW-S@@-38R+C(R,B`Q,3$N,C(R(#4Y-2XW-S@@,3,P+C`P
XM,"`V,#,N-34V"@D@,30X+C`P,"`U-30N-#0T(#$V-BXW-S@@-38R+C(R,B`Q
XM-3$N,C(R(#4Y-2XW-S@@,3<P+C`P,"`V,#,N-34V"@D@,3@X+C`P,"`U-30N
XM-#0T(#(P-BXW-S@@-38R+C(R,B`Q.3$N,C(R(#4Y-2XW-S@@,C$P+C`P,"`V
XM,#,N-34V"@D@,C(X+C`P,"`U-30N-#0T(#(T-BXW-S@@-38R+C(R,B`R,S$N
XM,C(R(#4Y-2XW-S@@,C4P+C`P,"`V,#,N-34V"@D@,C8X+C`P,"`U-30N-#0T
XM(#(X-BXW-S@@-38R+C(R,B`R-S$N,C(R(#4Y-2XW-S@@,CDP+C`P,"`V,#,N
XM-34V"@D@,S`X+C`P,"`U-30N-#0T(#,R-BXW-S@@-38R+C(R,B`S,3$N,C(R
XM(#4Y-2XW-S@@,S,P+C`P,"`V,#,N-34V"@D@,S0X+C`P,"`U-30N-#0T(#,V
XM-BXW-S@@-38R+C(R,B`S-3$N,C(R(#4Y-2XW-S@@,S8W+C(U,"`V,#(N-#$W
X?"@D@,S<W+C(U,"`U.3(N-#$W(#`N,#`P(#`N,#`P"C8W
X`
Xend
END_OF_FILE
if test 25430 -ne `wc -c <'Examples/test0.fig.uu'`; then
    echo shar: \"'Examples/test0.fig.uu'\" unpacked with wrong size!
fi
# end of 'Examples/test0.fig.uu'
fi
if test -f 'w_dir.c' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'w_dir.c'\"
else
echo shar: Extracting \"'w_dir.c'\" \(21569 characters\)
sed "s/^X//" >'w_dir.c' <<'END_OF_FILE'
X/* This file is part of xdir, an X-based directory browser.
X *
X *	Created: 13 Aug 88
X *
X *	Win Treese
X *	Cambridge Research Lab
X *	Digital Equipment Corporation
X *	treese@crl.dec.com
X *
X *	$Source: /trx/u2/treese/Src/Xdir.rel/RCS/xdir.c,v $
X *
X *	    COPYRIGHT 1990
X *	  DIGITAL EQUIPMENT CORPORATION
X *	   MAYNARD, MASSACHUSETTS
X *	  ALL RIGHTS RESERVED.
X *
X * THE INFORMATION IN THIS SOFTWARE IS SUBJECT TO CHANGE WITHOUT NOTICE AND
X * SHOULD NOT BE CONSTRUED AS A COMMITMENT BY DIGITAL EQUIPMENT CORPORATION.
X * DIGITAL MAKES NO REPRESENTATIONS ABOUT THE SUITABILITY OF THIS SOFTWARE
X * FOR ANY PURPOSE.  IT IS SUPPLIED "AS IS" WITHOUT EXPRESS OR IMPLIED
X * WARRANTY.
X *
X * IF THE SOFTWARE IS MODIFIED IN A MANNER CREATING DERIVATIVE COPYRIGHT
X * RIGHTS, APPROPRIATE LEGENDS MAY BE PLACED ON THE DERIVATIVE WORK IN
X * ADDITION TO THAT SET FORTH ABOVE.
X *
X * Permission to use, copy, modify, and distribute this software and its
X * documentation for any purpose and without fee is hereby granted, provided
X * that the above copyright notice appear in all copies and that both that
X * copyright notice and this permission notice appear in supporting
X * documentation, and that the name of Digital Equipment Corporation not be
X * used in advertising or publicity pertaining to distribution of the
X * software without specific, written prior permission.
X *
X *	Modified: 4 Dec 91 - Paul King (king@cs.uq.oz.au)
X */
X
X#include "w_util.h"
X#include "fig.h"
X#include "figx.h"
X#include "resources.h"
X#include "mode.h"
X#include "w_dir.h"
X#include "w_setup.h"
X#include "w_drawprim.h"		/* for char_height */
X#ifdef USE_DIRENT
X#include <dirent.h>
X#else
X#include <sys/dir.h>
X#endif
X
X/* Static variables */
X
XDeclareStaticArgs(10);
Xstatic Boolean	errorInProgress;
Xstatic String	dir_translations =
X	"<Key>Return: SetDir()\n\
X	Ctrl<Key>X: EmptyTextKey()\n\
X	<Key>F18: PastePanelKey()\n";
Xstatic String	list_panel_translations =
X	"<Btn3Up>: ParentDir()\n";
Xstatic char	CurrentSelectionName[PATH_MAX];
Xstatic int	file_entry_cnt, dir_entry_cnt;
Xstatic char   **file_list, **dir_list;
Xstatic char   **filelist, **dirlist;
Xstatic char    *dirmask;
X
X/* External variables */
X
Xextern Widget	file_panel, export_panel;
Xextern Widget	exp_selfile, file_selfile, exp_dir, file_dir, exp_flist,
X		file_flist, exp_dlist, file_dlist, exp_mask, file_mask;
Xextern Boolean	file_up, export_up;
Xextern char	export_dir[];
X
X/* Functions */
X
Xvoid		DoChangeDir(),
X		SetDir(),
X		Rescan(),
X		CallbackRescan();
X
Xstatic void	ParentDir();
X
X/* Function:	FileSelected() is called when the user selects a file.
X *		Set the global variable "CurrentSelectionName"
X *		and set either the export or file panel file name, whichever is popped up
X * Arguments:	Standard Xt callback arguments.
X * Returns:	Nothing.
X * Notes:
X */
X
Xvoid
XFileSelected(w, client_data, ret_val)
X    Widget	    w;
X    XtPointer	    client_data;
X    XtPointer	    ret_val;
X{
X    XawListReturnStruct *ret_struct = (XawListReturnStruct *) ret_val;
X
X    strcpy(CurrentSelectionName, ret_struct->string);
X    FirstArg(XtNstring, CurrentSelectionName);
X	/* I don't know why this doesn't work? */
X	/* NextArg(XtNinsertPosition, strlen(CurrentSelectionName));*/
X	if (export_up) {
X	SetValues(exp_selfile);
X		XawTextSetInsertionPoint(exp_selfile, strlen(CurrentSelectionName));
X	} else {
X	SetValues(file_selfile);
X		XawTextSetInsertionPoint(file_selfile, strlen(CurrentSelectionName));
X	}
X}
X
X/* Function:	DirSelected() is called when the user selects a directory.
X *
X * Arguments:	Standard Xt callback arguments.
X * Returns:	Nothing.
X * Notes:
X */
X
Xvoid
XDirSelected(w, client_data, ret_val)
X    Widget	    w;
X    XtPointer	    client_data;
X    XtPointer	    ret_val;
X{
X    XawListReturnStruct *ret_struct = (XawListReturnStruct *) ret_val;
X
X    strcpy(CurrentSelectionName, ret_struct->string);
X    DoChangeDir(CurrentSelectionName);
X}
X
Xvoid
XGoHome(w, client_data, ret_val)
X    Widget	    w;
X    XtPointer	    client_data;
X    XtPointer	    ret_val;
X{
X     parseuserpath("~",cur_dir);
X     DoChangeDir(cur_dir);
X}
X
X/*
X   come here when the user presses return in the directory path widget
X   Get the current string from the widget and set the current directory to that
X   Also, copy the dir to the current directory widget in the file popup
X*/
X
X/* Function:  SetDir() changes to the parent directory.
X * Arguments: Standard Xt action arguments.
X * Returns:   Nothing.
X * Notes:
X */
X
Xvoid
XSetDir(widget, event, params, num_params)
X    Widget	    widget;
X    XEvent	   *event;
X    String	   *params;
X    Cardinal	   *num_params;
X{
X    char	   *ndir;
X
X    /* get the string from the widget */
X    FirstArg(XtNstring, &ndir);
X    if (file_up)
X	GetValues(file_dir);
X    else {
X	GetValues(exp_dir);
X	strcpy(export_dir,ndir);	/* save in global var */
X    }
X    /* if there is a ~ in the directory, parse the username */
X    if (ndir[0]=='~')
X	{
X	char longdir[PATH_MAX];
X	parseuserpath(ndir,longdir);
X	ndir=longdir;
X	}
X    strcpy(cur_dir, ndir);
X    DoChangeDir(cur_dir);
X}
X
X/* make the full path from ~/partialpath */
Xparseuserpath(path,longpath)
Xchar *path,*longpath;
X{
X    char	  *home,*p;
X    struct passwd *who;
X
X    /* this user's home */
X    if (strlen(path)==1 || path[1]=='/')
X	{
X	strcpy(longpath,getenv("HOME"));
X	if (strlen(path)==1)		/* nothing after the ~, we have the full path */
X		return;
X	strcat(longpath,&path[1]);	/* append the rest of the path */
X	return;
X	}
X    /* another user name after ~ */
X    strcpy(longpath,&path[1]);
X    p=index(longpath,'/');
X    if (p)
X	    *p='\0';
X    who = getpwnam(longpath);
X    if (!who)
X	{
X	file_msg("No such user: %s",longpath);
X	strcpy(longpath,path);
X	}
X    else
X	{
X	strcpy(longpath,who->pw_dir);
X	p=index(path,'/');
X	if (p)
X		strcat(longpath,p);	/* attach stuff after the / */
X	}
X}
X
Xstatic String	mask_text_translations =
X		"<Key>Return: rescan()\n\
X		Ctrl<Key>J: rescan()\n\
X		Ctrl<Key>M: rescan()\n";
X
Xstatic XtActionsRec actionTable[] = {
X    {"ParentDir", ParentDir},
X    {"SetDir", SetDir},
X    {"rescan", Rescan},
X};
X
Xstatic int      actions_added=0;
X
Xvoid
Xcreate_dirinfo(parent, below, ret_beside, ret_below,
X	       mask_w, dir_w, flist_w, dlist_w)
X    Widget	    parent, below, *ret_beside, *ret_below, *mask_w, *dir_w,
X		   *flist_w, *dlist_w;
X
X{
X    Widget	    w,dir_alt,home;
X    Widget	    file_viewport;
X    Widget	    dir_viewport;
X    PIX_FONT	    temp_font;
X    int		    char_ht;
X
X    dir_entry_cnt = NENTRIES;
X    file_entry_cnt = NENTRIES;
X    filelist = (char **) calloc(file_entry_cnt, sizeof(char *));
X    dirlist = (char **) calloc(dir_entry_cnt, sizeof(char *));
X
X    get_directory(cur_dir);
X
X    FirstArg(XtNlabel, "     Alternatives:");
X    NextArg(XtNfromVert, below);
X    NextArg(XtNborderWidth, 0);
X    w = XtCreateManagedWidget("file_alt_label", labelWidgetClass,
X			      parent, Args, ArgCount);
X    FirstArg(XtNfont, &temp_font);
X    GetValues(w);
X    char_ht = char_height(temp_font) + 2;
X
X    FirstArg(XtNallowVert, True);
X    NextArg(XtNfromHoriz, w);
X    NextArg(XtNfromVert, below);
X    NextArg(XtNborderWidth, INTERNAL_BW);
X    NextArg(XtNwidth, 350);
X    NextArg(XtNheight, char_ht * 10);
X    file_viewport = XtCreateManagedWidget("vport", viewportWidgetClass,
X					  parent, Args, ArgCount);
X
X    FirstArg(XtNlabel, "    Filename Mask:");
X    NextArg(XtNborderWidth, 0);
X    NextArg(XtNfromVert, file_viewport);
X    w = XtCreateManagedWidget("mask_label", labelWidgetClass, 
X				parent, Args, ArgCount);
X
X    FirstArg(XtNeditType, XawtextEdit);
X    NextArg(XtNscrollHorizontal, XawtextScrollNever);
X    NextArg(XtNborderWidth, INTERNAL_BW);
X    NextArg(XtNscrollVertical, XawtextScrollNever);
X    NextArg(XtNresize, XawtextResizeWidth);
X    NextArg(XtNwidth, 100);
X    NextArg(XtNfromHoriz, w);
X    NextArg(XtNfromVert, file_viewport);
X    *mask_w = XtCreateManagedWidget("mask", asciiTextWidgetClass, 
X					parent, Args, ArgCount);
X    XtOverrideTranslations(*mask_w,
X			   XtParseTranslationTable(mask_text_translations));
X
X    /* get the first directory listing */
X    FirstArg(XtNstring, &dirmask);
X    GetValues(*mask_w);
X    if (MakeFileList(cur_dir, dirmask, &dir_list, &file_list) == False)
X	file_msg("No files in directory?");
X
X    FirstArg(XtNlabel, "Current Directory:");
X    NextArg(XtNborderWidth, 0);
X    NextArg(XtNfromVert, *mask_w);
X    NextArg(XtNvertDistance, 15);
X    w = XtCreateManagedWidget("dir_label", labelWidgetClass,
X			      parent, Args, ArgCount);
X    FirstArg(XtNstring, cur_dir);
X	NextArg(XtNinsertPosition, strlen(cur_dir));
X    NextArg(XtNheight, char_ht * 2);
X    NextArg(XtNborderWidth, INTERNAL_BW);
X    NextArg(XtNscrollHorizontal, XawtextScrollWhenNeeded);
X    NextArg(XtNeditType, XawtextEdit);
X    NextArg(XtNfromVert, *mask_w);
X    NextArg(XtNvertDistance, 15);
X    NextArg(XtNfromHoriz, w);
X    NextArg(XtNwidth, 350);
X    *dir_w = XtCreateManagedWidget("dir_name", asciiTextWidgetClass,
X				   parent, Args, ArgCount);
X
X    XtOverrideTranslations(*dir_w,
X			   XtParseTranslationTable(dir_translations));
X
X    FirstArg(XtNlabel, "     Alternatives:");
X    NextArg(XtNborderWidth, 0);
X    NextArg(XtNfromVert, *dir_w);
X    dir_alt = XtCreateManagedWidget("dir_alt_label", labelWidgetClass,
X			      parent, Args, ArgCount);
X
X    /* put a Home button to the left of the list of directories */
X    FirstArg(XtNlabel, "Home");
X    NextArg(XtNfromVert, dir_alt);
X    NextArg(XtNfromHoriz, dir_alt);
X    NextArg(XtNhorizDistance, -70);
X    NextArg(XtNborderWidth, INTERNAL_BW);
X    home = XtCreateManagedWidget("home", commandWidgetClass, 
X				parent, Args, ArgCount);
X    XtAddCallback(home, XtNcallback, GoHome, (XtPointer) NULL);
X
X    FirstArg(XtNallowVert, True);
X    NextArg(XtNfromHoriz, dir_alt);
X    NextArg(XtNfromVert, *dir_w);
X    NextArg(XtNborderWidth, INTERNAL_BW);
X    NextArg(XtNwidth, 350);
X    NextArg(XtNheight, char_ht * 4);
X    dir_viewport = XtCreateManagedWidget("dirvport", viewportWidgetClass,
X					 parent, Args, ArgCount);
X
X    FirstArg(XtNlist, file_list);
X    *flist_w = XtCreateManagedWidget("file_list_panel", listWidgetClass,
X				     file_viewport, Args, ArgCount);
X    XtOverrideTranslations(*flist_w,
X			   XtParseTranslationTable(list_panel_translations));
X    XtAddCallback(*flist_w, XtNcallback, FileSelected,
X		  (XtPointer) NULL);
X
X    FirstArg(XtNlist, dir_list);
X    *dlist_w = XtCreateManagedWidget("dir_list_panel", listWidgetClass,
X				     dir_viewport, Args, ArgCount);
X
X    XtOverrideTranslations(*dlist_w,
X			   XtParseTranslationTable(list_panel_translations));
X    XtAddCallback(*dlist_w, XtNcallback, DirSelected,
X		  (XtPointer) NULL);
X
X    if (!actions_added) {
X	XtAppAddActions(tool_app, actionTable, XtNumber(actionTable));
X	actions_added = 1;
X    }
X
X    FirstArg(XtNlabel, "Rescan");
X    NextArg(XtNfromVert, dir_viewport);
X    NextArg(XtNborderWidth, INTERNAL_BW);
X    NextArg(XtNvertDistance, 15);
X    NextArg(XtNhorizDistance, 45);
X    NextArg(XtNheight, 25);
X    w = XtCreateManagedWidget("rescan", commandWidgetClass, parent,
X			      Args, ArgCount);
X    XtAddCallback(w, XtNcallback, CallbackRescan, NULL);
X
X    /* install accelerators so they can be used from each window */
X    XtInstallAccelerators(*flist_w, parent);
X    XtInstallAccelerators(*dlist_w, parent);
X
X    *ret_beside = w;
X    *ret_below = dir_viewport;
X    return;
X}
X
X/* Function:	SPComp() compares two string pointers for qsort().
X * Arguments:	s1, s2: strings to be compared.
X * Returns:	Value of strcmp().
X * Notes:
X */
X
Xstatic int
XSPComp(s1, s2)
X    char	  **s1, **s2;
X{
X    return (strcmp(*s1, *s2));
X}
X
XBoolean
XMakeFileList(dir_name, mask, dir_list, file_list)
X    char	   *dir_name;
X    char	   *mask, ***dir_list, ***file_list;
X{
X    DIR		   *dirp;
X    DIRSTRUCT	  *dp;
X    char	  **cur_file, **cur_directory;
X    char	  **last_file, **last_dir;
X
X    set_temp_cursor(wait_cursor);
X    cur_file = filelist;
X    cur_directory = dirlist;
X    last_file = filelist + file_entry_cnt - 1;
X    last_dir = dirlist + dir_entry_cnt - 1;
X
X    dirp = opendir(dir_name);
X    if (dirp == NULL) {
X	reset_cursor();
X	*file_list = filelist;
X	*file_list[0]="";
X	*dir_list = dirlist;
X	*dir_list[0]="..";
X	return False;
X    }
X    /* process any events to ensure cursor is set to wait_cursor */
X    /*
X     * don't do this inside the following loop because this procedure could
X     * be re-entered if the user presses (e.g.) rescan
X     */
X    app_flush();
X
X    for (dp = readdir(dirp); dp != NULL; dp = readdir(dirp)) {
X	/* skip over '.' (current dir) */
X	if (!strcmp(dp->d_name, "."))
X	    continue;
X
X	if (IsDirectory(dir_name, dp->d_name)) {
X	    *cur_directory++ = SaveString(dp->d_name);
X	    if (cur_directory == last_dir) {	/* out of space, make more */
X		dirlist = (char **) realloc(dirlist,
X					2 * dir_entry_cnt * sizeof(char *));
X		cur_directory = dirlist + dir_entry_cnt - 1;
X		dir_entry_cnt = 2 * dir_entry_cnt;
X		last_dir = dirlist + dir_entry_cnt - 1;
X	    }
X	} else {
X	    /* check if matches regular expression */
X	    if ((mask == NULL) || (*mask == '\0'))
X		mask = "*";
X	    if (wild_match(dp->d_name, mask) == 0)
X		continue;	/* no, do next */
X	    if (mask[0] == '*' && dp->d_name[0] == '.')
X		continue;	/* skip files with leading . */
X	    *cur_file++ = SaveString(dp->d_name);
X	    if (cur_file == last_file) {	/* out of space, make more */
X		filelist = (char **) realloc(filelist,
X				       2 * file_entry_cnt * sizeof(char *));
X		cur_file = filelist + file_entry_cnt - 1;
X		file_entry_cnt = 2 * file_entry_cnt;
X		last_file = filelist + file_entry_cnt - 1;
X	    }
X	}
X    }
X    *cur_file = NULL;
X    *cur_directory = NULL;
X    if (cur_file != filelist)
X	qsort(filelist, cur_file - filelist, sizeof(char *), (int(*)())SPComp);
X    if (cur_directory != dirlist)
X	qsort(dirlist, cur_directory - dirlist, sizeof(char *), (int(*)())SPComp);
X    *file_list = filelist;
X    *dir_list = dirlist;
X    reset_cursor();
X    closedir(dirp);
X    return True;
X}
X
X/* Function:	ParentDir() changes to the parent directory.
X * Arguments:	Standard Xt action arguments.
X * Returns:	Nothing.
X * Notes:
X */
X
Xstatic void
XParentDir(w, event, params, num_params)
X    Widget	    w;
X    XEvent*	    event;
X    String*	    params;
X    Cardinal*	    num_params;
X{
X    DoChangeDir("..");
X}
X
X/* Function:	DoChangeDir() actually changes the directory and changes
X *		the list widget values to the new listing.
X * Arguments:	dir:	Pathname of new directory.
X * Returns:	Nothing.
X * Notes:
X *	NULL for dir means to rebuild the file list for the current directory
X *	(as in an update to the directory or change in filename filter).
X */
X
Xvoid
XDoChangeDir(dir)
X    char	   *dir;
X{
X    char	  **file_list;
X    char	  **dir_list;
X    char	   *p;
X    Arg		    args[10];
X    Cardinal	    arg_cnt;
X    char	    ndir[PATH_MAX], tmpdir[PATH_MAX];
X
X    
X    strcpy(ndir, cur_dir);
X    if (dir != NULL && dir[0] != '/') { /* relative path, prepend current dir */
X	if (dir[strlen(dir) - 1] == '/')
X	    dir[strlen(dir) - 1] = '\0';
X	if (!strcmp(dir, "..")) {	/* Parent directory. */
X	    if (*ndir == '\0')
X		return;			/* no current directory, */
X					/* can't do anything unless absolute path */
X	    p = rindex(ndir, '/');
X	    *p = EOS;
X	    if (ndir[0] == EOS)
X		strcpy(ndir, "/");
X	} else {
X	    if (strcmp(ndir, "/"))	/* At the root already */
X		strcat(ndir, "/");
X	    strcat(ndir, dir);
X	}
X    }
X    strcpy(tmpdir, cur_dir);
X    strcpy(cur_dir, ndir);
X    if (change_directory(cur_dir) != 0 ) {
X	file_msg("Can't change to directory %s", cur_dir);
X	strcpy(cur_dir, tmpdir);
X    } else if (MakeFileList(ndir, dirmask, &dirlist, &filelist) == False) {
X	file_msg("Unable to list directory %s", ndir);
X	strcpy(cur_dir, tmpdir);
X    }
X
X    FirstArg(XtNstring, cur_dir);
X    /* I don't know why this doesn't work? */
X    /* NextArg(XtNinsertPosition, strlen(cur_dir));*/
X    /* update the current directory and file/dir list widgets */
X    if (file_up) 
X	{
X	SetValues(file_dir);
X	XawTextSetInsertionPoint(file_dir, strlen(cur_dir));
X	NewList(file_flist,filelist);
X	NewList(file_dlist,dirlist);
X    } else {
X	SetValues(exp_dir);
X	strcpy(export_dir,cur_dir);	/* save in global var */
X	XawTextSetInsertionPoint(exp_dir, strlen(cur_dir));
X	NewList(exp_flist, filelist);
X	NewList(exp_dlist, dirlist);
X	}
X    CurrentSelectionName[0] = '\0';
X}
X
Xvoid 
XCallbackRescan(widget, closure, call_data)
X    Widget    widget;
X    XtPointer closure;
X    XtPointer call_data;
X{
X     Rescan(0, 0, 0, 0);
X}
X
Xvoid
XRescan(widget, event, params, num_params)
X    Widget	widget;
X    XEvent*	event;
X    String*	params;
X    Cardinal*	num_params;
X{
X    char	*dir;
X
X    /*
X     * get the mask string from the File or Export mask widget and put in
X     * dirmask
X     */
X    if (file_up) {
X	FirstArg(XtNstring, &dirmask);
X	GetValues(file_mask);
X	FirstArg(XtNstring, &dir);
X	GetValues(file_dir);
X	(void) MakeFileList(dir, dirmask, &dir_list, &file_list);
X	NewList(file_flist,file_list);
X	NewList(file_dlist,dir_list);
X    } else {
X	FirstArg(XtNstring, &dirmask);
X	GetValues(exp_mask);
X	FirstArg(XtNstring, &dir);
X	GetValues(exp_dir);
X	strcpy(export_dir,dir);		/* save in global var */
X	(void) MakeFileList(dir, dirmask, &dir_list, &file_list);
X	NewList(exp_flist, file_list);
X	NewList(exp_dlist, dir_list);
X    }
X}
X
Xstatic String null_entry = " ";
Xstatic String *null_list = { &null_entry };
X
XNewList(listwidget, list)
X    Widget    listwidget;
X    String   *list;
X{
X	XawListChange(listwidget, null_list, 1, 0, True);
X	XawListChange(listwidget, list, 0, 0, True);
X}
X
X
X/* Function:	SaveString() creates a copy of a string.
X * Arguments:	string: String to save.
X * Returns:	A pointer to the new copy (char *).
X * Notes:
X */
X
Xchar	       *
XSaveString(string)
X    char	   *string;
X{
X    char	   *new;
X
X    new = (char *) malloc(strlen(string) + 1);
X    strcpy(new, string);
X    return (new);
X}
X
X/* Function:	IsDirectory() tests to see if a pathname is a directory.
X * Arguments:	path:	Pathname of file to test.
X * Returns:	True or False.
X * Notes:	False is returned if the directory is not accessible.
X */
X
XBoolean
XIsDirectory(root, path)
X    char	   *root;
X    char	   *path;
X{
X    char	    fullpath[PATH_MAX];
X    struct stat	    statbuf;
X
X    if (path == NULL)
X	return (False);
X    MakeFullPath(root, path, fullpath);
X    if (stat(fullpath, &statbuf))	/* some error, report that it is not
X					 * a directory */
X	return (False);
X    if (statbuf.st_mode & S_IFDIR)
X	return (True);
X    else
X	return (False);
X}
X
X/* Function:	MakeFullPath() creates the full pathname for the given file.
X * Arguments:	filename:	Name of the file in question.
X *		pathname:	Buffer for full name.
X * Returns:	Nothing.
X * Notes:
X */
X
Xvoid
XMakeFullPath(root, filename, pathname)
X    char	   *root;
X    char	   *filename;
X    char	   *pathname;
X{
X    strcpy(pathname, root);
X    strcat(pathname, "/");
X    strcat(pathname, filename);
X}
X
X/* wildmatch.c - Unix-style command line wildcards
X
X   This procedure is in the public domain.
X
X   After that, it is just as if the operating system had expanded the
X   arguments, except that they are not sorted.	The program name and all
X   arguments that are expanded from wildcards are lowercased.
X
X   Syntax for wildcards:
X   *		Matches zero or more of any character (except a '.' at
X		the beginning of a name).
X   ?		Matches any single character.
X   [r3z]	Matches 'r', '3', or 'z'.
X   [a-d]	Matches a single character in the range 'a' through 'd'.
X   [!a-d]	Matches any single character except a character in the
X		range 'a' through 'd'.
X
X   The period between the filename root and its extension need not be
X   given explicitly.  Thus, the pattern `a*e' will match 'abacus.exe'
X   and 'axyz.e' as well as 'apple'.  Comparisons are not case sensitive.
X
X   The wild_match code was written by Rich Salz, rsalz@bbn.com,
X   posted to net.sources in November, 1986.
X
X   The code connecting the two is by Mike Slomin, bellcore!lcuxa!mike2,
X   posted to comp.sys.ibm.pc in November, 1988.
X
X   Major performance enhancements and bug fixes, and source cleanup,
X   by David MacKenzie, djm@ai.mit.edu. */
X
X/* Shell-style pattern matching for ?, \, [], and * characters.
X   I'm putting this replacement in the public domain.
X
X   Written by Rich $alz, mirror!rs, Wed Nov 26 19:03:17 EST 1986. */
X
X/* The character that inverts a character class; '!' or '^'. */
X#define INVERT '!'
X
Xstatic int	star();
X
X/* Return nonzero if `string' matches Unix-style wildcard pattern
X   `pattern'; zero if not. */
X
Xint
Xwild_match(string, pattern)
X    char	   *string, *pattern;
X{
X    int		    prev;	/* Previous character in character class. */
X    int		    matched;	/* If 1, character class has been matched. */
X    int		    reverse;	/* If 1, character class is inverted. */
X
X    for (; *pattern; string++, pattern++)
X	switch (*pattern) {
X	case '\\':
X	    /* Literal match with following character; fall through. */
X	    pattern++;
X	default:
X	    if (*string != *pattern)
X		return 0;
X	    continue;
X	case '?':
X	    /* Match anything. */
X	    if (*string == '\0')
X		return 0;
X	    continue;
X	case '*':
X	    /* Trailing star matches everything. */
X	    return *++pattern ? star(string, pattern) : 1;
X	case '[':
X	    /* Check for inverse character class. */
X	    reverse = pattern[1] == INVERT;
X	    if (reverse)
X		pattern++;
X	    for (prev = 256, matched = 0; *++pattern && *pattern != ']';
X		 prev = *pattern)
X		if (*pattern == '-'
X		    ? *string <= *++pattern && *string >= prev
X		    : *string == *pattern)
X		    matched = 1;
X	    if (matched == reverse)
X		return 0;
X	    continue;
X	}
X
X    return *string == '\0';
X}
X
Xstatic int
Xstar(string, pattern)
X    char	   *string, *pattern;
X{
X    while (wild_match(string, pattern) == 0)
X	if (*++string == '\0')
X	    return 0;
X    return 1;
X}
END_OF_FILE
if test 21569 -ne `wc -c <'w_dir.c'`; then
    echo shar: \"'w_dir.c'\" unpacked with wrong size!
fi
# end of 'w_dir.c'
fi
echo shar: End of archive 15 \(of 27\).
cp /dev/null ark15isdone
MISSING=""
for I in 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 ; do
    if test ! -f ark${I}isdone ; then
	MISSING="${MISSING} ${I}"
    fi
done
if test "${MISSING}" = "" ; then
    echo You have unpacked all 27 archives.
    rm -f ark[1-9]isdone ark[1-9][0-9]isdone
else
    echo You still need to unpack the following archives:
    echo "        " ${MISSING}
fi
##  End of shell archive.
exit 0

exit 0 # Just in case...
-- 
  // chris@IMD.Sterling.COM       | Send comp.sources.x submissions to:
\X/  Amiga - The only way to fly! |    sources-x@imd.sterling.com
 "It's intuitively obvious to the |
  most casual observer..."        | GCS d+/-- p+ c++ l+ m+ s++/+ g+ w+ t+ r+ x+
