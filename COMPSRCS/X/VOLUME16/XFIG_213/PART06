Path: uunet!zaphod.mps.ohio-state.edu!mips!msi!dcmartin
From: envbvs@bea.lbl.gov (Brian V. Smith)
Newsgroups: comp.sources.x
Subject: v16i011: Xfig 2.1.3, Part06/25
Message-ID: <1992Feb4.145811.540@msi.com>
Date: 4 Feb 92 14:58:11 GMT
References: <csx-16i006-xfig-2.1.3@uunet.UU.NET>
Sender: dcmartin@msi.com (David C. Martin - Moderator)
Organization: Molecular Simulations, Inc.
Lines: 1543
Approved: dcmartin@msi.com
Originator: dcmartin@fascet

Submitted-by: envbvs@bea.lbl.gov (Brian V. Smith)
Posting-number: Volume 16, Issue 11
Archive-name: xfig-2.1.3/part06

# This is a shell archive.  Remove anything before this line, then feed it
# into a shell via "sh file" or similar.  To overwrite existing files,
# type "sh file -c".
# The tool that generated this appeared in the comp.sources.unix newsgroup;
# send mail to comp-sources-unix@uunet.uu.net if you want that tool.
# If this archive is complete, you will see the following message at the end:
#		"End of archive 6 (of 25)."
# Contents:  Examples/test0.fig.uu e_break.c f_read.c
# Wrapped by dcmartin@fascet on Tue Feb  4 06:42:27 1992
PATH=/bin:/usr/bin:/usr/ucb ; export PATH
if test -f 'Examples/test0.fig.uu' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'Examples/test0.fig.uu'\"
else
echo shar: Extracting \"'Examples/test0.fig.uu'\" \(25208 characters\)
sed "s/^X//" >'Examples/test0.fig.uu' <<'END_OF_FILE'
Xbegin 664 test0.fig
XM(T9)1R`R+C$*.#`@,@HQ(#,@,"`Q("TQ(#`@,"`P(#`N,#`P(#$@,"XP,#`@
XM-#DT(#4W-"`U-2`U-2`T.30@-3<T(#4T.2`U-S0*,2`S(#`@,2`M,2`P(#`@
XM,"`P+C`P,"`Q(#`N,#`P(#0Y-"`U-S0@-3`@-3`@-#DT(#4W-"`U-#0@-3<T
XM"C$@,R`P(#$@+3$@,"`P(#`@,"XP,#`@,2`P+C`P,"`T.30@-3<T(#0U(#0U
XM(#0Y-"`U-S0@-3,Y(#4W-`HQ(#,@,"`Q("TQ(#`@,"`P(#`N,#`P(#$@,"XP
XM,#`@-#DT(#4W-"`T,"`T,"`T.30@-3<T(#4S-"`U-S0*,2`S(#`@,2`M,2`P
XM(#`@,"`P+C`P,"`Q(#`N,#`P(#0Y-"`U-S0@,S4@,S4@-#DT(#4W-"`U,CD@
XM-3<T"C$@,R`P(#$@+3$@,"`P(#`@,"XP,#`@,2`P+C`P,"`T.30@-3<T(#,P
XM(#,P(#0Y-"`U-S0@-3(T(#4W-`HQ(#,@,"`Q("TQ(#`@,"`P(#`N,#`P(#$@
XM,"XP,#`@-#DT(#4W-"`R-2`R-2`T.30@-3<T(#4Q.2`U-S0*,2`S(#`@,2`M
XM,2`P(#`@,"`P+C`P,"`Q(#`N,#`P(#0Y-"`U-S0@,C`@,C`@-#DT(#4W-"`U
XM,30@-3<T"C$@,R`P(#$@+3$@,"`P(#`@,"XP,#`@,2`P+C`P,"`T.30@-3<T
XM(#$U(#$U(#0Y-"`U-S0@-3`Y(#4W-`HQ(#,@,"`Q("TQ(#`@,"`P(#`N,#`P
XM(#$@,"XP,#`@-#DT(#4W-"`Q,"`Q,"`T.30@-3<T(#4P-"`U-S0*,2`S(#`@
XM,2`M,2`P(#`@,"`P+C`P,"`Q(#`N,#`P(#0Y-"`U-S0@-2`U(#0Y-"`U-S0@
XM-#DY(#4W-`HR(#$@,"`Q("TQ(#`@,"`P(#`N,#`P(#`@,"`P"@D@.#0@,38Y
XM(#@T(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@
XM,`H)(#DY(#$V.2`Y.2`U,30@.3DY.2`Y.3DY"C(@,2`P(#$@+3$@,"`P(#`@
XM,"XP,#`@,"`P(#`*"2`Q,#0@,38Y(#$P-"`U,30@.3DY.2`Y.3DY"C(@,2`P
XM(#$@+3$@,"`P(#`@,"XP,#`@,"`P(#`*"2`Y-"`Q-CD@.30@-3$T(#DY.3D@
XM.3DY.0HR(#$@,"`Q("TQ(#`@,"`P(#`N,#`P(#`@,"`P"@D@.#D@,38Y(#@Y
XM(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)
XM(#(V-"`Q-CD@,C8T(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P
XM+C`P,"`P(#`@,`H)(#(V.2`Q-CD@,C8Y(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@
XM,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#(W.2`Q-CD@,C<Y(#4Q-"`Y.3DY
XM(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#(W-"`Q-CD@
XM,C<T(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@
XM,`H)(#(U-"`Q-CD@,C4T(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@
XM,"`P+C`P,"`P(#`@,`H)(#(T.2`Q-CD@,C0Y(#4Q-"`Y.3DY(#DY.3D*,B`Q
XM(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#(U.2`Q-CD@,C4Y(#4Q-"`Y
XM.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#(R-"`Q
XM-CD@,C(T(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P
XM(#`@,`H)(#(Q-"`Q-CD@,C$T(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P
XM(#`@,"`P+C`P,"`P(#`@,`H)(#(Q.2`Q-CD@,C$Y(#4Q-"`Y.3DY(#DY.3D*
XM,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#(S.2`Q-CD@,C,Y(#4Q
XM-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#(T
XM-"`Q-CD@,C0T(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P
XM,"`P(#`@,`H)(#(S-"`Q-CD@,C,T(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M
XM,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#(R.2`Q-CD@,C(Y(#4Q-"`Y.3DY(#DY
XM.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#$Y-"`Q-CD@,3DT
XM(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)
XM(#$Y.2`Q-CD@,3DY(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P
XM+C`P,"`P(#`@,`H)(#(P.2`Q-CD@,C`Y(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@
XM,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#(P-"`Q-CD@,C`T(#4Q-"`Y.3DY
XM(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#$X-"`Q-CD@
XM,3@T(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@
XM,`H)(#$W.2`Q-CD@,3<Y(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@
XM,"`P+C`P,"`P(#`@,`H)(#$X.2`Q-CD@,3@Y(#4Q-"`Y.3DY(#DY.3D*,B`Q
XM(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#$U-"`Q-CD@,34T(#4Q-"`Y
XM.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#$T-"`Q
XM-CD@,30T(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P
XM(#`@,`H)(#$T.2`Q-CD@,30Y(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P
XM(#`@,"`P+C`P,"`P(#`@,`H)(#$V.2`Q-CD@,38Y(#4Q-"`Y.3DY(#DY.3D*
XM,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#$W-"`Q-CD@,3<T(#4Q
XM-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#$V
XM-"`Q-CD@,38T(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P
XM,"`P(#`@,`H)(#$U.2`Q-CD@,34Y(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M
XM,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#$R-"`Q-CD@,3(T(#4Q-"`Y.3DY(#DY
XM.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#$R.2`Q-CD@,3(Y
XM(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)
XM(#$S.2`Q-CD@,3,Y(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P
XM+C`P,"`P(#`@,`H)(#$S-"`Q-CD@,3,T(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@
XM,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#$Q-"`Q-CD@,3$T(#4Q-"`Y.3DY
XM(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#$P.2`Q-CD@
XM,3`Y(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@
XM,`H)(#$Q.2`Q-CD@,3$Y(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@
XM,"`P+C`P,"`P(#`@,`H)(#,R.2`Q-CD@,S(Y(#4Q-"`Y.3DY(#DY.3D*,B`Q
XM(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#,Q.2`Q-CD@,S$Y(#4Q-"`Y
XM.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#,R-"`Q
XM-CD@,S(T(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P
XM(#`@,`H)(#,T-"`Q-CD@,S0T(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P
XM(#`@,"`P+C`P,"`P(#`@,`H)(#,T.2`Q-CD@,S0Y(#4Q-"`Y.3DY(#DY.3D*
XM,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#,S.2`Q-CD@,S,Y(#4Q
XM-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#,S
XM-"`Q-CD@,S,T(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P
XM,"`P(#`@,`H)(#,V.2`Q-CD@,S8Y(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M
XM,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#,W-"`Q-CD@,S<T(#4Q-"`Y.3DY(#DY
XM.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#,X-"`Q-CD@,S@T
XM(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)
XM(#,W.2`Q-CD@,S<Y(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P
XM+C`P,"`P(#`@,`H)(#,U.2`Q-CD@,S4Y(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@
XM,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#,U-"`Q-CD@,S4T(#4Q-"`Y.3DY
XM(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#,V-"`Q-CD@
XM,S8T(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@
XM,`H)(#,Y.2`Q-CD@,SDY(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@
XM,"`P+C`P,"`P(#`@,`H)(#,X.2`Q-CD@,S@Y(#4Q-"`Y.3DY(#DY.3D*,B`Q
XM(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#,Y-"`Q-CD@,SDT(#4Q-"`Y
XM.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#0Q-"`Q
XM-CD@-#$T(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P
XM(#`@,`H)(#0Q.2`Q-CD@-#$Y(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P
XM(#`@,"`P+C`P,"`P(#`@,`H)(#0P.2`Q-CD@-#`Y(#4Q-"`Y.3DY(#DY.3D*
XM,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#0P-"`Q-CD@-#`T(#4Q
XM-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#0S
XM.2`Q-CD@-#,Y(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P
XM,"`P(#`@,`H)(#0T-"`Q-CD@-#0T(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M
XM,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#0U-"`Q-CD@-#4T(#4Q-"`Y.3DY(#DY
XM.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#0T.2`Q-CD@-#0Y
XM(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)
XM(#0R.2`Q-CD@-#(Y(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P
XM+C`P,"`P(#`@,`H)(#0R-"`Q-CD@-#(T(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@
XM,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#0S-"`Q-CD@-#,T(#4Q-"`Y.3DY
XM(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#0V.2`Q-CD@
XM-#8Y(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@
XM,`H)(#0U.2`Q-CD@-#4Y(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@
XM,"`P+C`P,"`P(#`@,`H)(#0V-"`Q-CD@-#8T(#4Q-"`Y.3DY(#DY.3D*,B`Q
XM(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#0X-"`Q-CD@-#@T(#4Q-"`Y
XM.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#0X.2`Q
XM-CD@-#@Y(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P
XM(#`@,`H)(#0W.2`Q-CD@-#<Y(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P
XM(#`@,"`P+C`P,"`P(#`@,`H)(#0W-"`Q-CD@-#<T(#4Q-"`Y.3DY(#DY.3D*
XM,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#(Y.2`Q-CD@,CDY(#4Q
XM-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#,P
XM-"`Q-CD@,S`T(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P
XM,"`P(#`@,`H)(#,Q-"`Q-CD@,S$T(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M
XM,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#,P.2`Q-CD@,S`Y(#4Q-"`Y.3DY(#DY
XM.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#(X.2`Q-CD@,C@Y
XM(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)
XM(#(X-"`Q-CD@,C@T(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P
XM+C`P,"`P(#`@,`H)(#(Y-"`Q-CD@,CDT(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@
XM,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#4P-"`Q-CD@-3`T(#4Q-"`Y.3DY
XM(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#0Y-"`Q-CD@
XM-#DT(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@
XM,`H)(#0Y.2`Q-CD@-#DY(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@
XM,"`P+C`P,"`P(#`@,`H)(#4Q.2`Q-CD@-3$Y(#4Q-"`Y.3DY(#DY.3D*,B`Q
XM(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#4R-"`Q-CD@-3(T(#4Q-"`Y
XM.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#4Q-"`Q
XM-CD@-3$T(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P
XM(#`@,`H)(#4P.2`Q-CD@-3`Y(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P
XM(#`@,"`P+C`P,"`P(#`@,`H)(#8X-"`Q-CD@-C@T(#4Q-"`Y.3DY(#DY.3D*
XM,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#8X.2`Q-CD@-C@Y(#4Q
XM-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#8Y
XM.2`Q-CD@-CDY(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P
XM,"`P(#`@,`H)(#8Y-"`Q-CD@-CDT(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M
XM,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#8W-"`Q-CD@-C<T(#4Q-"`Y.3DY(#DY
XM.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#8V.2`Q-CD@-C8Y
XM(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)
XM(#8W.2`Q-CD@-C<Y(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P
XM+C`P,"`P(#`@,`H)(#8T-"`Q-CD@-C0T(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@
XM,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#8S-"`Q-CD@-C,T(#4Q-"`Y.3DY
XM(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#8S.2`Q-CD@
XM-C,Y(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@
XM,`H)(#8U.2`Q-CD@-C4Y(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@
XM,"`P+C`P,"`P(#`@,`H)(#8V-"`Q-CD@-C8T(#4Q-"`Y.3DY(#DY.3D*,B`Q
XM(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#8U-"`Q-CD@-C4T(#4Q-"`Y
XM.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#8T.2`Q
XM-CD@-C0Y(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P
XM(#`@,`H)(#8Q-"`Q-CD@-C$T(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P
XM(#`@,"`P+C`P,"`P(#`@,`H)(#8Q.2`Q-CD@-C$Y(#4Q-"`Y.3DY(#DY.3D*
XM,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#8R.2`Q-CD@-C(Y(#4Q
XM-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#8R
XM-"`Q-CD@-C(T(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P
XM,"`P(#`@,`H)(#8P-"`Q-CD@-C`T(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M
XM,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#4Y.2`Q-CD@-3DY(#4Q-"`Y.3DY(#DY
XM.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#8P.2`Q-CD@-C`Y
XM(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)
XM(#4W-"`Q-CD@-3<T(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P
XM+C`P,"`P(#`@,`H)(#4V-"`Q-CD@-38T(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@
XM,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#4V.2`Q-CD@-38Y(#4Q-"`Y.3DY
XM(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#4X.2`Q-CD@
XM-3@Y(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@
XM,`H)(#4Y-"`Q-CD@-3DT(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@
XM,"`P+C`P,"`P(#`@,`H)(#4X-"`Q-CD@-3@T(#4Q-"`Y.3DY(#DY.3D*,B`Q
XM(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#4W.2`Q-CD@-3<Y(#4Q-"`Y
XM.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#4T-"`Q
XM-CD@-30T(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P
XM(#`@,`H)(#4T.2`Q-CD@-30Y(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P
XM(#`@,"`P+C`P,"`P(#`@,`H)(#4U.2`Q-CD@-34Y(#4Q-"`Y.3DY(#DY.3D*
XM,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#4U-"`Q-CD@-34T(#4Q
XM-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#4S
XM-"`Q-CD@-3,T(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P
XM,"`P(#`@,`H)(#4R.2`Q-CD@-3(Y(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M
XM,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#4S.2`Q-CD@-3,Y(#4Q-"`Y.3DY(#DY
XM.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#(Y(#$V.2`R.2`U
XM,30@.3DY.2`Y.3DY"C(@,2`P(#$@+3$@,"`P(#`@,"XP,#`@,"`P(#`*"2`R
XM-"`Q-CD@,C0@-3$T(#DY.3D@.3DY.0HR(#$@,"`Q("TQ(#`@,"`P(#`N,#`P
XM(#`@,"`P"@D@,3D@.2`Q.2`U,30@.3DY.2`Y.3DY"C(@,2`P(#$@+3$@,"`P
XM(#`@,"XP,#`@,"`P(#`*"2`Q-"`Y(#$T(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@
XM,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#D@.2`Y(#4Q-"`Y.3DY(#DY.3D*
XM,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#,T(#D@,S0@-3$T(#DY
XM.3D@.3DY.0HR(#$@,"`Q("TQ(#`@,"`P(#`N,#`P(#`@,"`P"@D@,SD@.2`S
XM.2`U,30@.3DY.2`Y.3DY"C(@,2`P(#$@+3$@,"`P(#`@,"XP,#`@,"`P(#`*
XM"2`T-"`Y(#0T(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P
XM,"`P(#`@,`H)(#0Y(#$V.2`T.2`U,30@.3DY.2`Y.3DY"C(@,2`P(#$@+3$@
XM,"`P(#`@,"XP,#`@,"`P(#`*"2`U-"`Q-CD@-30@-3$T(#DY.3D@.3DY.0HR
XM(#$@,"`Q("TQ(#`@,"`P(#`N,#`P(#`@,"`P"@D@-S0@,38T(#8Y.2`Q-3D@
XM.3DY.2`Y.3DY"C(@,2`P(#$@+3$@,"`P(#`@,"XP,#`@,"`P(#`*"2`W-"`Q
XM-3D@-CDY(#$U-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P
XM(#`@,`H)(#<T(#$T.2`V.3D@,30T(#DY.3D@.3DY.0HR(#$@,"`Q("TQ(#`@
XM,"`P(#`N,#`P(#`@,"`P"@D@-S0@,30T(#8Y.2`Q,SD@.3DY.2`Y.3DY"C(@
XM,2`P(#$@+3$@,"`P(#`@,"XP,#`@,"`P(#`*"2`W-"`Q,SD@-CDY(#$S-"`Y
XM.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#<T(#$U
XM-"`V.3D@,30Y(#DY.3D@.3DY.0HR(#$@,"`Q("TQ(#`@,"`P(#`N,#`P(#`@
XM,"`P"@D@-S0@,3,T(#8Y.2`Q,CD@.3DY.2`Y.3DY"C(@,2`P(#$@+3$@,"`P
XM(#`@,"XP,#`@,"`P(#`*"2`W-"`Q,CD@-CDY(#$R-"`Y.3DY(#DY.3D*,B`Q
XM(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#<T(#@Y(#8Y.2`X-"`Y.3DY
XM(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#<T(#DT(#8Y
XM.2`X.2`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)
XM(#<T(#$Q-"`V.3D@,3`Y(#DY.3D@.3DY.0HR(#$@,"`Q("TQ(#`@,"`P(#`N
XM,#`P(#`@,"`P"@D@-S0@.3D@-CDY(#DT(#DY.3D@.3DY.0HR(#$@,"`Q("TQ
XM(#`@,"`P(#`N,#`P(#`@,"`P"@D@-S0@,3`T(#8Y.2`Y.2`Y.3DY(#DY.3D*
XM,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#<T(#$P.2`V.3D@,3`T
XM(#DY.3D@.3DY.0HR(#$@,"`Q("TQ(#`@,"`P(#`N,#`P(#`@,"`P"@D@-S0@
XM,3$Y(#8Y.2`Q,30@.3DY.2`Y.3DY"C(@,2`P(#$@+3$@,"`P(#`@,"XP,#`@
XM,"`P(#`*"2`W-"`Q,C0@-CDY(#$Q.2`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P
XM(#`@,"`P+C`P,"`P(#`@,`H)(#<T(#@T(#8Y.2`W.2`Y.3DY(#DY.3D*,B`Q
XM(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#<T(#<Y(#8Y.2`W-"`Y.3DY
XM(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#<T(#8Y(#8Y
XM.2`V-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)
XM(#<T(#8T(#8Y.2`U.2`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P
XM,"`P(#`@,`H)(#<T(#4Y(#8Y.2`U-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P
XM(#`@,"`P+C`P,"`P(#`@,`H)(#<T(#<T(#8Y.2`V.2`Y.3DY(#DY.3D*,B`Q
XM(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#<T(#4T(#8Y.2`T.2`Y.3DY
XM(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#<T(#0Y(#8Y
XM.2`T-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)
XM(#<T(#D@-CDY(#0@.3DY.2`Y.3DY"C(@,2`P(#$@+3$@,"`P(#`@,"XP,#`@
XM,"`P(#`*"2`W-"`Q-"`V.3D@.2`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@
XM,"`P+C`P,"`P(#`@,`H)(#<T(#,T(#8Y.2`R.2`Y.3DY(#DY.3D*,B`Q(#`@
XM,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#<T(#$Y(#8Y.2`Q-"`Y.3DY(#DY
XM.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#<T(#(T(#8Y.2`Q
XM.2`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#<T
XM(#(Y(#8Y.2`R-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P
XM(#`@,`H)(#<T(#,Y(#8Y.2`S-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@
XM,"`P+C`P,"`P(#`@,`H)(#<T(#0T(#8Y.2`S.2`Y.3DY(#DY.3D*,B`Q(#`@
XM,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#<Y(#$V.2`W.2`U,30@.3DY.2`Y
XM.3DY"C(@,2`P(#$@+3$@,"`P(#`@,"XP,#`@,"`P(#`*"2`W-"`Q-CD@-S0@
XM-3$T(#DY.3D@.3DY.0HR(#$@,"`Q("TQ(#`@,"`P(#`N,#`P(#`@,"`P"@D@
XM-CD@.2`V.2`U,30@.3DY.2`Y.3DY"C(@,2`P(#$@+3$@,"`P(#`@,"XP,#`@
XM,"`P(#`*"2`V-"`Y(#8T(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@
XM,"`P+C`P,"`P(#`@,`H)(#4Y(#D@-3D@-3$T(#DY.3D@.3DY.0HR(#$@,"`Q
XM("TQ(#`@,"`P(#`N,#`P(#`@,"`P"@D@-S`T(#D@-S`T(#4Q-"`Y.3DY(#DY
XM.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#<P.2`Y(#<P.2`U
XM,30@.3DY.2`Y.3DY"C(@,2`P(#$@+3$@,"`P(#`@,"XP,#`@,"`P(#`*"2`W
XM,30@.2`W,30@-3$T(#DY.3D@.3DY.0HR(#$@,"`Q("TQ(#`@,"`P(#`N,#`P
XM(#`@,"`P"@D@-S$Y(#$V.2`W,3D@-3$T(#DY.3D@.3DY.0HR(#$@,"`Q("TQ
XM(#`@,"`P(#`N,#`P(#`@,"`P"@D@-S(T(#$V.2`W,C0@-3$T(#DY.3D@.3DY
XM.0HR(#$@,"`Q("TQ(#`@,"`P(#`N,#`P(#`@,"`P"@D@-S0Y(#$V.2`W-#D@
XM-3$T(#DY.3D@.3DY.0HR(#$@,"`Q("TQ(#`@,"`P(#`N,#`P(#`@,"`P"@D@
XM-S0T(#$V.2`W-#0@-3$T(#DY.3D@.3DY.0HR(#$@,"`Q("TQ(#`@,"`P(#`N
XM,#`P(#`@,"`P"@D@-S,Y(#D@-S,Y(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M
XM,2`P(#`@,"`P+C`P,"`P(#`@,`H)(#<S-"`Y(#<S-"`U,30@.3DY.2`Y.3DY
XM"C(@,2`P(#$@+3$@,"`P(#`@,"XP,#`@,"`P(#`*"2`W,CD@.2`W,CD@-3$T
XM(#DY.3D@.3DY.0HR(#$@,"`Q("TQ(#`@,"`P(#`N,#`P(#`@,"`P"@D@-S4T
XM(#D@-S4T(#4Q-"`Y.3DY(#DY.3D*,B`Q(#`@,2`M,2`P(#`@,"`P+C`P,"`P
XM(#`@,`H)(#<U.2`Y(#<U.2`U,30@.3DY.2`Y.3DY"C(@,2`P(#$@+3$@,"`P
XM(#`@,"XP,#`@,"`P(#`*"2`W-C0@.2`W-C0@-3$T(#DY.3D@.3DY.0HR(#$@
XM,"`Q("TQ(#`@,"`P(#`N,#`P(#`@,"`P"@D@-S8Y(#$V.2`W-CD@-3$T(#DY
XM.3D@.3DY.0HR(#$@,"`Q("TQ(#`@,"`P(#`N,#`P(#`@,"`P"@D@-S<T(#$V
XM.2`W-S0@-3$T(#DY.3D@.3DY.0HS(#(@,"`Q("TQ(#`@,"`P(#`N,#`P(#`@
XM,`H)(#8Y(#4V.2`V.2`V,#D@,3`Y(#4V.2`Q,#D@-C`Y(#$T.2`U-CD@,30Y
XM(#8P.2`Q.#D@-38Y(#$X.2`V,#D@,C(Y(#4V.2`R,CD@-C`Y(#(V.2`U-CD@
XM,C8Y(#8P.2`S,#D@-38Y(#,P.2`V,#D@,S0Y(#4V.2`S-#D@-C`Y(#,X.2`U
XM-CD@.3DY.2`Y.3DY"@D@+3$P+C`P,"`Q,"XP,#`@-C,N,38V(#4Y-BXU.#0@
XM-C,N,38V(#8P-BXU.#0@.#`N,#`P(#8Q,RXU-38@.3@N,#`P(#4V-"XT-#0@
XM,3$V+C<W."`U-S(N,C(R(#$P,2XR,C(@-C`U+C<W."`Q,C`N,#`P(#8Q,RXU
XM-38@,3,X+C`P,"`U-C0N-#0T(#$U-BXW-S@@-3<R+C(R,B`Q-#$N,C(R(#8P
XM-2XW-S@@,38P+C`P,"`V,3,N-34V(#$W."XP,#`@-38T+C0T-"`Q.38N-S<X
XM(#4W,BXR,C(@,3@Q+C(R,B`V,#4N-S<X(#(P,"XP,#`@-C$S+C4U-B`R,3@N
XM,#`P(#4V-"XT-#0@,C,V+C<W."`U-S(N,C(R(#(R,2XR,C(@-C`U+C<W."`R
XM-#`N,#`P(#8Q,RXU-38@,C4X+C`P,"`U-C0N-#0T(#(W-BXW-S@@-3<R+C(R
XM,B`R-C$N,C(R(#8P-2XW-S@@,C@P+C`P,"`V,3,N-34V(#(Y."XP,#`@-38T
XM+C0T-"`S,38N-S<X(#4W,BXR,C(@,S`Q+C(R,B`V,#4N-S<X(#,R,"XP,#`@
XM-C$S+C4U-B`S,S@N,#`P(#4V-"XT-#0@,S4V+C<W."`U-S(N,C(R(#,T,2XR
XM,C(@-C`U+C<W."`S-3<N,C4P(#8Q,BXT,3<@,S8W+C(U,"`V,#(N-#$W("TQ
XM,"XP,#`@,3`N,#`P"C,@,B`P(#$@+3$@,"`P(#`@,"XP,#`@,"`P"@D@-S0@
XM-38T(#<T(#8P-"`Q,30@-38T(#$Q-"`V,#0@,34T(#4V-"`Q-30@-C`T(#$Y
XM-"`U-C0@,3DT(#8P-"`R,S0@-38T(#(S-"`V,#0@,C<T(#4V-"`R-S0@-C`T
XM(#,Q-"`U-C0@,S$T(#8P-"`S-30@-38T(#,U-"`V,#0@,SDT(#4V-"`Y.3DY
XM(#DY.3D*"2`M-2XP,#`@-2XP,#`@-C@N,38V(#4Y,2XU.#0@-C@N,38V(#8P
XM,2XU.#0@.#4N,#`P(#8P."XU-38@,3`S+C`P,"`U-3DN-#0T(#$R,2XW-S@@
XM-38W+C(R,B`Q,#8N,C(R(#8P,"XW-S@@,3(U+C`P,"`V,#@N-34V(#$T,RXP
XM,#`@-34Y+C0T-"`Q-C$N-S<X(#4V-RXR,C(@,30V+C(R,B`V,#`N-S<X(#$V
XM-2XP,#`@-C`X+C4U-B`Q.#,N,#`P(#4U.2XT-#0@,C`Q+C<W."`U-C<N,C(R
XM(#$X-BXR,C(@-C`P+C<W."`R,#4N,#`P(#8P."XU-38@,C(S+C`P,"`U-3DN
XM-#0T(#(T,2XW-S@@-38W+C(R,B`R,C8N,C(R(#8P,"XW-S@@,C0U+C`P,"`V
XM,#@N-34V(#(V,RXP,#`@-34Y+C0T-"`R.#$N-S<X(#4V-RXR,C(@,C8V+C(R
XM,B`V,#`N-S<X(#(X-2XP,#`@-C`X+C4U-B`S,#,N,#`P(#4U.2XT-#0@,S(Q
XM+C<W."`U-C<N,C(R(#,P-BXR,C(@-C`P+C<W."`S,C4N,#`P(#8P."XU-38@
XM,S0S+C`P,"`U-3DN-#0T(#,V,2XW-S@@-38W+C(R,B`S-#8N,C(R(#8P,"XW
XM-S@@,S8R+C(U,"`V,#<N-#$W(#,W,BXR-3`@-3DW+C0Q-R`M-2XP,#`@-2XP
XM,#`*,R`R(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`*"2`Q,30@-3(T(#$Q-"`U
XM-C0@,34T(#4R-"`Q-30@-38T(#$Y-"`U,C0@,3DT(#4V-"`R,S0@-3(T(#(S
XM-"`U-C0@,C<T(#4R-"`R-S0@-38T(#,Q-"`U,C0@,S$T(#4V-"`S-30@-3(T
XM(#,U-"`U-C0@,SDT(#4R-"`S.30@-38T(#0S-"`U,C0@.3DY.2`Y.3DY"@D@
XM,S4N,#`P("TS-2XP,#`@,3`X+C$V-B`U-3$N-3@T(#$P."XQ-C8@-38Q+C4X
XM-"`Q,C4N,#`P(#4V."XU-38@,30S+C`P,"`U,3DN-#0T(#$V,2XW-S@@-3(W
XM+C(R,B`Q-#8N,C(R(#4V,"XW-S@@,38U+C`P,"`U-C@N-34V(#$X,RXP,#`@
XM-3$Y+C0T-"`R,#$N-S<X(#4R-RXR,C(@,3@V+C(R,B`U-C`N-S<X(#(P-2XP
XM,#`@-38X+C4U-B`R,C,N,#`P(#4Q.2XT-#0@,C0Q+C<W."`U,C<N,C(R(#(R
XM-BXR,C(@-38P+C<W."`R-#4N,#`P(#4V."XU-38@,C8S+C`P,"`U,3DN-#0T
XM(#(X,2XW-S@@-3(W+C(R,B`R-C8N,C(R(#4V,"XW-S@@,C@U+C`P,"`U-C@N
XM-34V(#,P,RXP,#`@-3$Y+C0T-"`S,C$N-S<X(#4R-RXR,C(@,S`V+C(R,B`U
XM-C`N-S<X(#,R-2XP,#`@-38X+C4U-B`S-#,N,#`P(#4Q.2XT-#0@,S8Q+C<W
XM."`U,C<N,C(R(#,T-BXR,C(@-38P+C<W."`S-C4N,#`P(#4V."XU-38@,S@S
XM+C`P,"`U,3DN-#0T(#0P,2XW-S@@-3(W+C(R,B`S.#8N,C(R(#4V,"XW-S@@
XM-#`R+C(U,"`U-C<N-#$W(#0Q,BXR-3`@-34W+C0Q-R`S-2XP,#`@+3,U+C`P
XM,`HS(#(@,"`Q("TQ(#`@,"`P(#`N,#`P(#`@,`H)(#$P.2`U,CD@,3`Y(#4V
XM.2`Q-#D@-3(Y(#$T.2`U-CD@,3@Y(#4R.2`Q.#D@-38Y(#(R.2`U,CD@,C(Y
XM(#4V.2`R-CD@-3(Y(#(V.2`U-CD@,S`Y(#4R.2`S,#D@-38Y(#,T.2`U,CD@
XM,S0Y(#4V.2`S.#D@-3(Y(#,X.2`U-CD@-#(Y(#4R.2`Y.3DY(#DY.3D*"2`S
XM,"XP,#`@+3,P+C`P,"`Q,#,N,38V(#4U-BXU.#0@,3`S+C$V-B`U-C8N-3@T
XM(#$R,"XP,#`@-3<S+C4U-B`Q,S@N,#`P(#4R-"XT-#0@,34V+C<W."`U,S(N
XM,C(R(#$T,2XR,C(@-38U+C<W."`Q-C`N,#`P(#4W,RXU-38@,3<X+C`P,"`U
XM,C0N-#0T(#$Y-BXW-S@@-3,R+C(R,B`Q.#$N,C(R(#4V-2XW-S@@,C`P+C`P
XM,"`U-S,N-34V(#(Q."XP,#`@-3(T+C0T-"`R,S8N-S<X(#4S,BXR,C(@,C(Q
XM+C(R,B`U-C4N-S<X(#(T,"XP,#`@-3<S+C4U-B`R-3@N,#`P(#4R-"XT-#0@
XM,C<V+C<W."`U,S(N,C(R(#(V,2XR,C(@-38U+C<W."`R.#`N,#`P(#4W,RXU
XM-38@,CDX+C`P,"`U,C0N-#0T(#,Q-BXW-S@@-3,R+C(R,B`S,#$N,C(R(#4V
XM-2XW-S@@,S(P+C`P,"`U-S,N-34V(#,S."XP,#`@-3(T+C0T-"`S-38N-S<X
XM(#4S,BXR,C(@,S0Q+C(R,B`U-C4N-S<X(#,V,"XP,#`@-3<S+C4U-B`S-S@N
XM,#`P(#4R-"XT-#0@,SDV+C<W."`U,S(N,C(R(#,X,2XR,C(@-38U+C<W."`S
XM.3<N,C4P(#4W,BXT,3<@-#`W+C(U,"`U-C(N-#$W(#,P+C`P,"`M,S`N,#`P
XM"C,@,B`P(#$@+3$@,"`P(#`@,"XP,#`@,"`P"@D@,3`T(#4S-"`Q,#0@-3<T
XM(#$T-"`U,S0@,30T(#4W-"`Q.#0@-3,T(#$X-"`U-S0@,C(T(#4S-"`R,C0@
XM-3<T(#(V-"`U,S0@,C8T(#4W-"`S,#0@-3,T(#,P-"`U-S0@,S0T(#4S-"`S
XM-#0@-3<T(#,X-"`U,S0@,S@T(#4W-"`T,C0@-3,T(#DY.3D@.3DY.0H)(#(U
XM+C`P,"`M,C4N,#`P(#DX+C$V-B`U-C$N-3@T(#DX+C$V-B`U-S$N-3@T(#$Q
XM-2XP,#`@-3<X+C4U-B`Q,S,N,#`P(#4R.2XT-#0@,34Q+C<W."`U,S<N,C(R
XM(#$S-BXR,C(@-3<P+C<W."`Q-34N,#`P(#4W."XU-38@,3<S+C`P,"`U,CDN
XM-#0T(#$Y,2XW-S@@-3,W+C(R,B`Q-S8N,C(R(#4W,"XW-S@@,3DU+C`P,"`U
XM-S@N-34V(#(Q,RXP,#`@-3(Y+C0T-"`R,S$N-S<X(#4S-RXR,C(@,C$V+C(R
XM,B`U-S`N-S<X(#(S-2XP,#`@-3<X+C4U-B`R-3,N,#`P(#4R.2XT-#0@,C<Q
XM+C<W."`U,S<N,C(R(#(U-BXR,C(@-3<P+C<W."`R-S4N,#`P(#4W."XU-38@
XM,CDS+C`P,"`U,CDN-#0T(#,Q,2XW-S@@-3,W+C(R,B`R.38N,C(R(#4W,"XW
XM-S@@,S$U+C`P,"`U-S@N-34V(#,S,RXP,#`@-3(Y+C0T-"`S-3$N-S<X(#4S
XM-RXR,C(@,S,V+C(R,B`U-S`N-S<X(#,U-2XP,#`@-3<X+C4U-B`S-S,N,#`P
XM(#4R.2XT-#0@,SDQ+C<W."`U,S<N,C(R(#,W-BXR,C(@-3<P+C<W."`S.3(N
XM,C4P(#4W-RXT,3<@-#`R+C(U,"`U-C<N-#$W(#(U+C`P,"`M,C4N,#`P"C,@
XM,B`P(#$@+3$@,"`P(#`@,"XP,#`@,"`P"@D@.3D@-3,Y(#DY(#4W.2`Q,SD@
XM-3,Y(#$S.2`U-SD@,3<Y(#4S.2`Q-SD@-3<Y(#(Q.2`U,SD@,C$Y(#4W.2`R
XM-3D@-3,Y(#(U.2`U-SD@,CDY(#4S.2`R.3D@-3<Y(#,S.2`U,SD@,S,Y(#4W
XM.2`S-SD@-3,Y(#,W.2`U-SD@-#$Y(#4S.2`Y.3DY(#DY.3D*"2`R,"XP,#`@
XM+3(P+C`P,"`Y,RXQ-C8@-38V+C4X-"`Y,RXQ-C8@-3<V+C4X-"`Q,3`N,#`P
XM(#4X,RXU-38@,3(X+C`P,"`U,S0N-#0T(#$T-BXW-S@@-30R+C(R,B`Q,S$N
XM,C(R(#4W-2XW-S@@,34P+C`P,"`U.#,N-34V(#$V."XP,#`@-3,T+C0T-"`Q
XM.#8N-S<X(#4T,BXR,C(@,3<Q+C(R,B`U-S4N-S<X(#$Y,"XP,#`@-3@S+C4U
XM-B`R,#@N,#`P(#4S-"XT-#0@,C(V+C<W."`U-#(N,C(R(#(Q,2XR,C(@-3<U
XM+C<W."`R,S`N,#`P(#4X,RXU-38@,C0X+C`P,"`U,S0N-#0T(#(V-BXW-S@@
XM-30R+C(R,B`R-3$N,C(R(#4W-2XW-S@@,C<P+C`P,"`U.#,N-34V(#(X."XP
XM,#`@-3,T+C0T-"`S,#8N-S<X(#4T,BXR,C(@,CDQ+C(R,B`U-S4N-S<X(#,Q
XM,"XP,#`@-3@S+C4U-B`S,C@N,#`P(#4S-"XT-#0@,S0V+C<W."`U-#(N,C(R
XM(#,S,2XR,C(@-3<U+C<W."`S-3`N,#`P(#4X,RXU-38@,S8X+C`P,"`U,S0N
XM-#0T(#,X-BXW-S@@-30R+C(R,B`S-S$N,C(R(#4W-2XW-S@@,S@W+C(U,"`U
XM.#(N-#$W(#,Y-RXR-3`@-3<R+C0Q-R`R,"XP,#`@+3(P+C`P,`HS(#(@,"`Q
XM("TQ(#`@,"`P(#`N,#`P(#`@,`H)(#DT(#4T-"`Y-"`U.#0@,3,T(#4T-"`Q
XM,S0@-3@T(#$W-"`U-#0@,3<T(#4X-"`R,30@-30T(#(Q-"`U.#0@,C4T(#4T
XM-"`R-30@-3@T(#(Y-"`U-#0@,CDT(#4X-"`S,S0@-30T(#,S-"`U.#0@,S<T
XM(#4T-"`S-S0@-3@T(#0Q-"`U-#0@.3DY.2`Y.3DY"@D@,34N,#`P("TQ-2XP
XM,#`@.#@N,38V(#4W,2XU.#0@.#@N,38V(#4X,2XU.#0@,3`U+C`P,"`U.#@N
XM-34V(#$R,RXP,#`@-3,Y+C0T-"`Q-#$N-S<X(#4T-RXR,C(@,3(V+C(R,B`U
XM.#`N-S<X(#$T-2XP,#`@-3@X+C4U-B`Q-C,N,#`P(#4S.2XT-#0@,3@Q+C<W
XM."`U-#<N,C(R(#$V-BXR,C(@-3@P+C<W."`Q.#4N,#`P(#4X."XU-38@,C`S
XM+C`P,"`U,SDN-#0T(#(R,2XW-S@@-30W+C(R,B`R,#8N,C(R(#4X,"XW-S@@
XM,C(U+C`P,"`U.#@N-34V(#(T,RXP,#`@-3,Y+C0T-"`R-C$N-S<X(#4T-RXR
XM,C(@,C0V+C(R,B`U.#`N-S<X(#(V-2XP,#`@-3@X+C4U-B`R.#,N,#`P(#4S
XM.2XT-#0@,S`Q+C<W."`U-#<N,C(R(#(X-BXR,C(@-3@P+C<W."`S,#4N,#`P
XM(#4X."XU-38@,S(S+C`P,"`U,SDN-#0T(#,T,2XW-S@@-30W+C(R,B`S,C8N
XM,C(R(#4X,"XW-S@@,S0U+C`P,"`U.#@N-34V(#,V,RXP,#`@-3,Y+C0T-"`S
XM.#$N-S<X(#4T-RXR,C(@,S8V+C(R,B`U.#`N-S<X(#,X,BXR-3`@-3@W+C0Q
XM-R`S.3(N,C4P(#4W-RXT,3<@,34N,#`P("TQ-2XP,#`*,R`R(#`@,2`M,2`P
XM(#`@,"`P+C`P,"`P(#`*"2`X.2`U-#D@.#D@-3@Y(#$R.2`U-#D@,3(Y(#4X
XM.2`Q-CD@-30Y(#$V.2`U.#D@,C`Y(#4T.2`R,#D@-3@Y(#(T.2`U-#D@,C0Y
XM(#4X.2`R.#D@-30Y(#(X.2`U.#D@,S(Y(#4T.2`S,CD@-3@Y(#,V.2`U-#D@
XM,S8Y(#4X.2`T,#D@-30Y(#DY.3D@.3DY.0H)(#$P+C`P,"`M,3`N,#`P(#@S
XM+C$V-B`U-S8N-3@T(#@S+C$V-B`U.#8N-3@T(#$P,"XP,#`@-3DS+C4U-B`Q
XM,3@N,#`P(#4T-"XT-#0@,3,V+C<W."`U-3(N,C(R(#$R,2XR,C(@-3@U+C<W
XM."`Q-#`N,#`P(#4Y,RXU-38@,34X+C`P,"`U-#0N-#0T(#$W-BXW-S@@-34R
XM+C(R,B`Q-C$N,C(R(#4X-2XW-S@@,3@P+C`P,"`U.3,N-34V(#$Y."XP,#`@
XM-30T+C0T-"`R,38N-S<X(#4U,BXR,C(@,C`Q+C(R,B`U.#4N-S<X(#(R,"XP
XM,#`@-3DS+C4U-B`R,S@N,#`P(#4T-"XT-#0@,C4V+C<W."`U-3(N,C(R(#(T
XM,2XR,C(@-3@U+C<W."`R-C`N,#`P(#4Y,RXU-38@,C<X+C`P,"`U-#0N-#0T
XM(#(Y-BXW-S@@-34R+C(R,B`R.#$N,C(R(#4X-2XW-S@@,S`P+C`P,"`U.3,N
XM-34V(#,Q."XP,#`@-30T+C0T-"`S,S8N-S<X(#4U,BXR,C(@,S(Q+C(R,B`U
XM.#4N-S<X(#,T,"XP,#`@-3DS+C4U-B`S-3@N,#`P(#4T-"XT-#0@,S<V+C<W
XM."`U-3(N,C(R(#,V,2XR,C(@-3@U+C<W."`S-S<N,C4P(#4Y,BXT,3<@,S@W
XM+C(U,"`U.#(N-#$W(#$P+C`P,"`M,3`N,#`P"C,@,B`P(#$@+3$@,"`P(#`@
XM,"XP,#`@,"`P"@D@.#0@-34T(#@T(#4Y-"`Q,C0@-34T(#$R-"`U.30@,38T
XM(#4U-"`Q-C0@-3DT(#(P-"`U-30@,C`T(#4Y-"`R-#0@-34T(#(T-"`U.30@
XM,C@T(#4U-"`R.#0@-3DT(#,R-"`U-30@,S(T(#4Y-"`S-C0@-34T(#,V-"`U
XM.30@-#`T(#4U-"`Y.3DY(#DY.3D*"2`U+C`P,"`M-2XP,#`@-S@N,38V(#4X
XM,2XU.#0@-S@N,38V(#4Y,2XU.#0@.34N,#`P(#4Y."XU-38@,3$S+C`P,"`U
XM-#DN-#0T(#$S,2XW-S@@-34W+C(R,B`Q,38N,C(R(#4Y,"XW-S@@,3,U+C`P
XM,"`U.3@N-34V(#$U,RXP,#`@-30Y+C0T-"`Q-S$N-S<X(#4U-RXR,C(@,34V
XM+C(R,B`U.3`N-S<X(#$W-2XP,#`@-3DX+C4U-B`Q.3,N,#`P(#4T.2XT-#0@
XM,C$Q+C<W."`U-3<N,C(R(#$Y-BXR,C(@-3DP+C<W."`R,34N,#`P(#4Y."XU
XM-38@,C,S+C`P,"`U-#DN-#0T(#(U,2XW-S@@-34W+C(R,B`R,S8N,C(R(#4Y
XM,"XW-S@@,C4U+C`P,"`U.3@N-34V(#(W,RXP,#`@-30Y+C0T-"`R.3$N-S<X
XM(#4U-RXR,C(@,C<V+C(R,B`U.3`N-S<X(#(Y-2XP,#`@-3DX+C4U-B`S,3,N
XM,#`P(#4T.2XT-#0@,S,Q+C<W."`U-3<N,C(R(#,Q-BXR,C(@-3DP+C<W."`S
XM,S4N,#`P(#4Y."XU-38@,S4S+C`P,"`U-#DN-#0T(#,W,2XW-S@@-34W+C(R
XM,B`S-38N,C(R(#4Y,"XW-S@@,S<R+C(U,"`U.3<N-#$W(#,X,BXR-3`@-3@W
XM+C0Q-R`U+C`P,"`M-2XP,#`*,R`R(#`@,2`M,2`P(#`@,"`P+C`P,"`P(#`*
XM"2`W.2`U-3D@-SD@-3DY(#$Q.2`U-3D@,3$Y(#4Y.2`Q-3D@-34Y(#$U.2`U
XM.3D@,3DY(#4U.2`Q.3D@-3DY(#(S.2`U-3D@,C,Y(#4Y.2`R-SD@-34Y(#(W
XM.2`U.3D@,S$Y(#4U.2`S,3D@-3DY(#,U.2`U-3D@,S4Y(#4Y.2`S.3D@-34Y
XM(#DY.3D@.3DY.0H)(#`N,#`P(#`N,#`P(#<S+C$V-B`U.#8N-3@T(#<S+C$V
XM-B`U.38N-3@T(#DP+C`P,"`V,#,N-34V(#$P."XP,#`@-34T+C0T-"`Q,C8N
XM-S<X(#4V,BXR,C(@,3$Q+C(R,B`U.34N-S<X(#$S,"XP,#`@-C`S+C4U-B`Q
XM-#@N,#`P(#4U-"XT-#0@,38V+C<W."`U-C(N,C(R(#$U,2XR,C(@-3DU+C<W
XM."`Q-S`N,#`P(#8P,RXU-38@,3@X+C`P,"`U-30N-#0T(#(P-BXW-S@@-38R
XM+C(R,B`Q.3$N,C(R(#4Y-2XW-S@@,C$P+C`P,"`V,#,N-34V(#(R."XP,#`@
XM-34T+C0T-"`R-#8N-S<X(#4V,BXR,C(@,C,Q+C(R,B`U.34N-S<X(#(U,"XP
XM,#`@-C`S+C4U-B`R-C@N,#`P(#4U-"XT-#0@,C@V+C<W."`U-C(N,C(R(#(W
XM,2XR,C(@-3DU+C<W."`R.3`N,#`P(#8P,RXU-38@,S`X+C`P,"`U-30N-#0T
XM(#,R-BXW-S@@-38R+C(R,B`S,3$N,C(R(#4Y-2XW-S@@,S,P+C`P,"`V,#,N
XM-34V(#,T."XP,#`@-34T+C0T-"`S-C8N-S<X(#4V,BXR,C(@,S4Q+C(R,B`U
XM.34N-S<X(#,V-RXR-3`@-C`R+C0Q-R`S-S<N,C4P(#4Y,BXT,3<@,"XP,#`@
X&,"XP,#`*
X`
Xend
END_OF_FILE
if test 25208 -ne `wc -c <'Examples/test0.fig.uu'`; then
    echo shar: \"'Examples/test0.fig.uu'\" unpacked with wrong size!
fi
# end of 'Examples/test0.fig.uu'
fi
if test -f 'e_break.c' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'e_break.c'\"
else
echo shar: Extracting \"'e_break.c'\" \(2379 characters\)
sed "s/^X//" >'e_break.c' <<'END_OF_FILE'
X/*
X * FIG : Facility for Interactive Generation of figures
X * Copyright (c) 1985 by Supoj Sutanthavibul
X *
X * "Permission to use, copy, modify, distribute, and sell this software and its
X * documentation for any purpose is hereby granted without fee, provided that
X * the above copyright notice appear in all copies and that both that
X * copyright notice and this permission notice appear in supporting
X * documentation, and that the name of M.I.T. not be used in advertising or
X * publicity pertaining to distribution of the software without specific,
X * written prior permission.  M.I.T. makes no representations about the
X * suitability of this software for any purpose.  It is provided "as is"
X * without express or implied warranty."
X *
X */
X
X#include "fig.h"
X#include "resources.h"
X#include "mode.h"
X#include "object.h"
X#include "paintop.h"
X#include "u_search.h"
X#include "u_list.h"
X#include "u_undo.h"
X#include "w_canvas.h"
X#include "w_mousefun.h"
X
Xstatic int	init_break(), init_break_only(), init_break_tag();
X
Xbreak_selected()
X{
X    set_mousefun("break compound", "break and tag", "");
X    canvas_kbd_proc = null_proc;
X    canvas_locmove_proc = null_proc;
X    init_searchproc_left(init_break_only);
X    init_searchproc_middle(init_break_tag);
X    canvas_leftbut_proc = object_search_left;
X    canvas_middlebut_proc = object_search_middle;
X    canvas_rightbut_proc = null_proc;
X    set_cursor(pick15_cursor);
X}
X
Xstatic
Xinit_break_only(p, type, x, y, px, py, loc_tag)
X    char	   *p;
X    int		    type;
X    int		    x, y;
X    int		    px, py;
X    int 	    loc_tag;
X{
X    init_break(p, type, x, y, px, py, 0);
X}
X
Xstatic
Xinit_break_tag(p, type, x, y, px, py, loc_tag)
X    char	   *p;
X    int		    type;
X    int		    x, y;
X    int		    px, py;
X    int 	    loc_tag;
X{
X    init_break(p, type, x, y, px, py, 1);
X}
X
Xstatic
Xinit_break(p, type, x, y, px, py, loc_tag)
X    char	   *p;
X    int		    type;
X    int		    x, y;
X    int		    px, py;
X    int 	    loc_tag;
X{
X    if (type != O_COMPOUND)
X	return;
X
X    cur_c = (F_compound *) p;
X    mask_toggle_compoundmarker(cur_c);
X    clean_up();
X    list_delete_compound(&objects.compounds, cur_c);
X    tail(&objects, &object_tails);
X    append_objects(&objects, cur_c, &object_tails);
X    toggle_markers_in_compound(cur_c);
X    set_tags(cur_c, loc_tag);
X    set_action(F_BREAK);
X    set_latestcompound(cur_c);
X    set_modifiedflag();
X}
END_OF_FILE
if test 2379 -ne `wc -c <'e_break.c'`; then
    echo shar: \"'e_break.c'\" unpacked with wrong size!
fi
# end of 'e_break.c'
fi
if test -f 'f_read.c' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'f_read.c'\"
else
echo shar: Extracting \"'f_read.c'\" \(24558 characters\)
sed "s/^X//" >'f_read.c' <<'END_OF_FILE'
X/*
X * FIG : Facility for Interactive Generation of figures
X * Copyright (c) 1985 by Supoj Sutanthavibul
X *
X * "Permission to use, copy, modify, distribute, and sell this software and its
X * documentation for any purpose is hereby granted without fee, provided that
X * the above copyright notice appear in all copies and that both that
X * copyright notice and this permission notice appear in supporting
X * documentation, and that the name of M.I.T. not be used in advertising or
X * publicity pertaining to distribution of the software without specific,
X * written prior permission.  M.I.T. makes no representations about the
X * suitability of this software for any purpose.  It is provided "as is"
X * without express or implied warranty."
X *
X */
X
X#include "fig.h"
X#include "object.h"
X#include "resources.h"
X#include "u_fonts.h"
X#include "u_create.h"
X#include "version.h"
X#include "w_setup.h"
X#include "w_util.h"
X
X#ifdef NOSTRSTR
Xextern char *strstr();
X#endif
X
X/* file popup information */
Xextern Widget	file_popup;	/* the popup itself */
Xextern Boolean	file_up;
X
X/* so w_file.c can access */
XBoolean	file_msg_is_popped=False;
XWidget	file_msg_popup;
X
Xstatic Widget	file_msg_panel,
X		file_msg_win, file_msg_dismiss;
Xstatic Boolean	first_file_msg;
Xstatic int	file_msg_length=0;
Xstatic char    *read_file_name;
Xstatic char	tmpstr[100];
X
Xstatic char	Err_incomp[] = "Incomplete %s object at line %d.";
X
Xstatic F_ellipse  *read_ellipseobject();
Xstatic F_line	  *read_lineobject();
Xstatic F_text     *read_textobject();
Xstatic F_spline   *read_splineobject();
Xstatic F_arc      *read_arcobject();
Xstatic F_compound *read_compoundobject();
X
X#define		FILL_CONVERT(f) \
X			(((proto>=20) || (f) == UNFILLED || !TFX) \
X				? (f) : 21 - ((f)-1)*5)
X
X#define		BUF_SIZE		1024
X
XDeclareStaticArgs(10);
Xchar		buf[BUF_SIZE];
Xint		line_no;
Xint		num_object;
Xint		proto;		/* file protocol*10 */
Xint		TFX;		/* true for 1.4TFX protocol */
X
Xread_fail_message(file, err)
X    char	   *file;
X    int		    err;
X{
X    if (err == 0)		/* Successful read */
X	return;
X#ifdef ENAMETOOLONG
X    else if (err == ENAMETOOLONG)
X	put_msg("File name \"%s\" is too long", file);
X#endif
X    else if (err == ENOENT)
X	put_msg("File \"%s\" does not exist", file);
X    else if (err == ENOTDIR)
X	put_msg("A name in the path \"%s\" is not a directory", file);
X    else if (err == EACCES)
X	put_msg("Read access to file \"%s\" is blocked", file);
X    else if (err == EISDIR)
X	put_msg("File \"%s\" is a directory", file);
X    else if (err == -2) {
X	put_msg("File \"%s\" is empty", file);
X    } else if (err == -1) {
X	/* Format error; relevant error message is already delivered */
X    } else
X	put_msg("File \"%s\" is not accessable; %s", file, sys_errlist[err]);
X}
X
X/**********************************************************
XRead_fig returns :
X
X     0 : successful read.
X    -1 : File is in incorrect format
X    -2 : File is empty
Xerr_no : if file can not be read for various reasons
X
XThe resolution (ppi) and the coordinate system (coord_sys) are
Xstored in obj->nwcorner.x and obj->nwcorner.y respectively.
XThe coordinate system is 1 for lower left at 0,0 and
X2 for upper left at 0,0
X>>> xfig only uses 2 for the coordinate system. <<<
X**********************************************************/
X
Xread_fig(file_name, obj)
X    char	   *file_name;
X    F_compound	   *obj;
X{
X    FILE	   *fp;
X
X    line_no = 0;
X    read_file_name = file_name;
X    first_file_msg = True;
X    if ((fp = fopen(file_name, "r")) == NULL)
X	return (errno);
X    else {
X	put_msg("reading objects from \"%s\" ...", file_name);
X	return (readfp_fig(fp, obj));
X    }
X}
X
Xreadfp_fig(fp, obj)
X    FILE	   *fp;
X    F_compound	   *obj;
X{
X    int		    status;
X    float	    fproto;
X    char	    tmpstr[10];
X
X    num_object = 0;
X#if defined(SYSV) || defined(SVR4)
X    memset((char *) obj, 0, COMOBJ_SIZE);
X#else
X    bzero((char *) obj, COMOBJ_SIZE);
X#endif
X    if (fgets(buf, BUF_SIZE, fp) == 0)	/* version */
X	return -2;
X    if (strncmp(buf, "#FIG", 4) == 0) { /* versions 1.4/later have #FIG in
X					 * first line */
X	if ((sscanf(index(buf, ' ') + 1, "%f", &fproto)) == 0)	/* assume 1.4 */
X	    proto = 14;
X	else
X	    proto = (fproto + .01) * 10;	/* protocol version*10 */
X	/* if file protocol != current protocol, give message */
X	sprintf(tmpstr,"%.1f",fproto);
X	if (strcmp(tmpstr,PROTOCOL_VERSION) != 0)
X	    file_msg("Converting figure from %s format to %s",tmpstr,PROTOCOL_VERSION);
X	TFX = False;
X	if (strstr(buf, "TFX") != NULL)
X	    TFX = True;
X	status = read_objects(fp, obj);
X    } else {
X	file_msg("Converting figure from 1.3 format to %s",PROTOCOL_VERSION);
X	proto = 13;
X	status = read_1_3_objects(fp, obj);
X    }
X
X    fclose(fp);
X    return (status);
X}
X
Xint
Xread_objects(fp, obj)
X    FILE	   *fp;
X    F_compound	   *obj;
X{
X    F_ellipse	   *e, *le = NULL;
X    F_line	   *l, *ll = NULL;
X    F_text	   *t, *lt = NULL;
X    F_spline	   *s, *ls = NULL;
X    F_arc	   *a, *la = NULL;
X    F_compound	   *c, *lc = NULL;
X    int		    object, ppi, coord_sys;
X
X    line_no++;
X    if (get_line(fp) < 0) {
X	put_msg("File is truncated");
X	return (-1);
X    }
X    if (2 != sscanf(buf, "%d%d\n", &ppi, &coord_sys)) {
X	file_msg("Incomplete data at line %d", line_no);
X	return (-1);
X    }
X    obj->nwcorner.x = ppi;
X    obj->nwcorner.y = coord_sys;
X    while (get_line(fp) > 0) {
X	if (1 != sscanf(buf, "%d", &object)) {
X	    file_msg("Incorrect format at line %d", line_no);
X	    return (-1);
X	}
X	switch (object) {
X	case O_POLYLINE:
X	    if ((l = read_lineobject(fp)) == NULL)
X		return (-1);
X	    if (ll)
X		ll = (ll->next = l);
X	    else
X		ll = obj->lines = l;
X	    num_object++;
X	    break;
X	case O_SPLINE:
X	    if ((s = read_splineobject(fp)) == NULL)
X		return (-1);
X	    if (ls)
X		ls = (ls->next = s);
X	    else
X		ls = obj->splines = s;
X	    num_object++;
X	    break;
X	case O_ELLIPSE:
X	    if ((e = read_ellipseobject()) == NULL)
X		return (-1);
X	    if (le)
X		le = (le->next = e);
X	    else
X		le = obj->ellipses = e;
X	    num_object++;
X	    break;
X	case O_ARC:
X	    if ((a = read_arcobject(fp)) == NULL)
X		return (-1);
X	    if (la)
X		la = (la->next = a);
X	    else
X		la = obj->arcs = a;
X	    num_object++;
X	    break;
X	case O_TEXT:
X	    if ((t = read_textobject(fp)) == NULL)
X		return (-1);
X	    if (lt)
X		lt = (lt->next = t);
X	    else
X		lt = obj->texts = t;
X	    num_object++;
X	    break;
X	case O_COMPOUND:
X	    if ((c = read_compoundobject(fp)) == NULL)
X		return (-1);
X	    if (lc)
X		lc = (lc->next = c);
X	    else
X		lc = obj->compounds = c;
X	    num_object++;
X	    break;
X	default:
X	    file_msg("Incorrect object code at line %d", line_no);
X	    return (-1);
X	}			/* switch */
X    }				/* while */
X    if (feof(fp))
X	return (0);
X    else
X	return (errno);
X}				/* read_objects */
X
Xstatic F_arc   *
Xread_arcobject(fp)
X    FILE	   *fp;
X{
X    F_arc	   *a;
X    int		    n, fa, ba;
X    int		    type, style;
X    float	    thickness, wid, ht;
X
X    if ((a = create_arc()) == NULL)
X	return (NULL);
X
X    a->next = NULL;
X    a->for_arrow = a->back_arrow = NULL;	/* added 8/23/89 B.V.Smith */
X    n = sscanf(buf, "%*d%d%d%d%d%d%d%d%f%d%d%d%f%f%d%d%d%d%d%d\n",
X	       &a->type, &a->style, &a->thickness,
X	       &a->color, &a->depth,
X	       &a->pen, &a->fill_style,
X	       &a->style_val, &a->direction, &fa, &ba,
X	       &a->center.x, &a->center.y,
X	       &a->point[0].x, &a->point[0].y,
X	       &a->point[1].x, &a->point[1].y,
X	       &a->point[2].x, &a->point[2].y);
X    if (n != 19) {
X	file_msg(Err_incomp, "arc", line_no);
X	free((char *) a);
X	return (NULL);
X    }
X    a->fill_style = FILL_CONVERT(a->fill_style);
X    fixdepth(&a->depth);
X    skip_comment(fp);
X    if (fa) {
X	line_no++;
X	if (5 != fscanf(fp, "%d%d%f%f%f", &type, &style, &thickness, &wid, &ht)) {
X	    fprintf(stderr, Err_incomp, "arc", line_no);
X	    return (NULL);
X	}
X	skip_line(fp);
X	a->for_arrow = new_arrow(type, style, thickness, wid, ht);
X	skip_comment(fp);
X    }
X    skip_comment(fp);
X    if (ba) {
X	line_no++;
X	if (5 != fscanf(fp, "%d%d%f%f%f", &type, &style, &thickness, &wid, &ht)) {
X	    fprintf(stderr, Err_incomp, "arc", line_no);
X	    return (NULL);
X	}
X	skip_line(fp);
X	a->back_arrow = new_arrow(type, style, thickness, wid, ht);
X    }
X    return (a);
X}
X
Xstatic F_compound *
Xread_compoundobject(fp)
X    FILE	   *fp;
X{
X    F_arc	   *a, *la = NULL;
X    F_ellipse	   *e, *le = NULL;
X    F_line	   *l, *ll = NULL;
X    F_spline	   *s, *ls = NULL;
X    F_text	   *t, *lt = NULL;
X    F_compound	   *com, *c, *lc = NULL;
X    int		    n, object;
X
X    if ((com = create_compound()) == NULL)
X	return (NULL);
X
X    com->arcs = NULL;
X    com->ellipses = NULL;
X    com->lines = NULL;
X    com->splines = NULL;
X    com->texts = NULL;
X    com->compounds = NULL;
X    com->next = NULL;
X    n = sscanf(buf, "%*d%d%d%d%d\n", &com->nwcorner.x, &com->nwcorner.y,
X	       &com->secorner.x, &com->secorner.y);
X    if (4 != n) {
X	file_msg(Err_incomp, "compound", line_no);
X	free((char *) com);
X	return (NULL);
X    }
X    while (get_line(fp) > 0) {
X	if (1 != sscanf(buf, "%d", &object)) {
X	    file_msg(Err_incomp, "compound", line_no);
X	    free_compound(&com);
X	    return (NULL);
X	}
X	switch (object) {
X	case O_POLYLINE:
X	    if ((l = read_lineobject(fp)) == NULL) {
X		free_line(&l);
X		return (NULL);
X	    }
X	    if (ll)
X		ll = (ll->next = l);
X	    else
X		ll = com->lines = l;
X	    break;
X	case O_SPLINE:
X	    if ((s = read_splineobject(fp)) == NULL) {
X		free_spline(&s);
X		return (NULL);
X	    }
X	    if (ls)
X		ls = (ls->next = s);
X	    else
X		ls = com->splines = s;
X	    break;
X	case O_ELLIPSE:
X	    if ((e = read_ellipseobject()) == NULL) {
X		free_ellipse(&e);
X		return (NULL);
X	    }
X	    if (le)
X		le = (le->next = e);
X	    else
X		le = com->ellipses = e;
X	    break;
X	case O_ARC:
X	    if ((a = read_arcobject(fp)) == NULL) {
X		free_arc(&a);
X		return (NULL);
X	    }
X	    if (la)
X		la = (la->next = a);
X	    else
X		la = com->arcs = a;
X	    break;
X	case O_TEXT:
X	    if ((t = read_textobject(fp)) == NULL) {
X		free_text(&t);
X		return (NULL);
X	    }
X	    if (lt)
X		lt = (lt->next = t);
X	    else
X		lt = com->texts = t;
X	    break;
X	case O_COMPOUND:
X	    if ((c = read_compoundobject(fp)) == NULL) {
X		free_compound(&c);
X		return (NULL);
X	    }
X	    if (lc)
X		lc = (lc->next = c);
X	    else
X		lc = com->compounds = c;
X	    break;
X	case O_END_COMPOUND:
X	    return (com);
X	default:
X	    file_msg("Incorrect object code at line %d", line_no);
X	    return (NULL);
X	}			/* switch */
X    }
X    if (feof(fp))
X	return (com);
X    else
X	return (NULL);
X}
X
Xstatic F_ellipse *
Xread_ellipseobject()
X{
X    F_ellipse	   *e;
X    int		    n;
X
X    if ((e = create_ellipse()) == NULL)
X	return (NULL);
X
X    e->next = NULL;
X    n = sscanf(buf, "%*d%d%d%d%d%d%d%d%f%d%f%d%d%d%d%d%d%d%d\n",
X	       &e->type, &e->style, &e->thickness,
X	       &e->color, &e->depth, &e->pen, &e->fill_style,
X	       &e->style_val, &e->direction, &e->angle,
X	       &e->center.x, &e->center.y,
X	       &e->radiuses.x, &e->radiuses.y,
X	       &e->start.x, &e->start.y,
X	       &e->end.x, &e->end.y);
X    if (n != 18) {
X	file_msg(Err_incomp, "ellipse", line_no);
X	free((char *) e);
X	return (NULL);
X    }
X    e->fill_style = FILL_CONVERT(e->fill_style);
X    fixdepth(&e->depth);
X    return (e);
X}
X
Xstatic F_line  *
Xread_lineobject(fp)
X    FILE	   *fp;
X{
X    F_line	   *l;
X    F_point	   *p, *q;
X    int		    n, x, y, fa, ba;
X    int		    type, style, radius_flag;
X    float	    thickness, wid, ht;
X
X    if ((l = create_line()) == NULL)
X	return (NULL);
X
X    l->points = NULL;
X    l->for_arrow = l->back_arrow = NULL;
X    l->next = NULL;
X
X    sscanf(buf, "%*d%d", &l->type);
X
X    /* 2.1 or later has radius parm for all line objects */
X    /* 2.0 has radius parm only for arc-box objects */
X    radius_flag = ((proto >= 21) || (l->type == T_ARC_BOX && proto == 20));
X    if (radius_flag) {
X	n = sscanf(buf, "%*d%d%d%d%d%d%d%d%f%d%d%d",
X		   &l->type, &l->style, &l->thickness, &l->color, &l->depth,
X	      &l->pen, &l->fill_style, &l->style_val, &l->radius, &fa, &ba);
X    } else {			/* old format uses pen for radius of arc-box
X				 * corners */
X	n = sscanf(buf, "%*d%d%d%d%d%d%d%d%f%d%d",
X		   &l->type, &l->style, &l->thickness, &l->color,
X	       &l->depth, &l->pen, &l->fill_style, &l->style_val, &fa, &ba);
X	if (l->type == T_ARC_BOX) {
X	    l->radius = l->pen;
X	    l->pen = 0;
X	} else
X	    l->radius = 0;
X    }
X    if ((!radius_flag && n != 10) || (radius_flag && n != 11)) {
X	file_msg(Err_incomp, "line", line_no);
X	free((char *) l);
X	return (NULL);
X    }
X    l->fill_style = FILL_CONVERT(l->fill_style);
X    fixdepth(&l->depth);
X    skip_comment(fp);
X    if (fa) {
X	line_no++;
X	if (5 != fscanf(fp, "%d%d%f%f%f", &type, &style, &thickness, &wid, &ht)) {
X	    fprintf(stderr, Err_incomp, "line", line_no);
X	    return (NULL);
X	}
X	skip_line(fp);
X	l->for_arrow = new_arrow(type, style, thickness, wid, ht);
X	skip_comment(fp);
X    }
X    if (ba) {
X	line_no++;
X	if (5 != fscanf(fp, "%d%d%f%f%f", &type, &style, &thickness, &wid, &ht)) {
X	    fprintf(stderr, Err_incomp, "line", line_no);
X	    return (NULL);
X	}
X	skip_line(fp);
X	l->back_arrow = new_arrow(type, style, thickness, wid, ht);
X	skip_comment(fp);
X    }
X    if (l->type == T_EPS_BOX) {
X	line_no++;
X	if ((l->eps = create_eps()) == NULL) {
X	    free((char *) l);
X	    return (NULL);
X	}
X	if (2 != fscanf(fp, "%d %s", &l->eps->flipped, l->eps->file)) {
X	    file_msg(Err_incomp, "Encapsulated Postscript", line_no);
X	    fprintf(stderr, Err_incomp, "Encapsulated Postscript", line_no);
X	    return (NULL);
X	}
X	read_epsf(l->eps);
X    } else
X	l->eps = NULL;
X
X    /* points start on new line */
X    line_no++;
X    if ((p = create_point()) == NULL)
X	return (NULL);
X
X    l->points = p;
X    p->next = NULL;
X
X    /* read first point */
X    if (fscanf(fp, "%d%d", &p->x, &p->y) != 2) {
X	file_msg(Err_incomp, "line", line_no);
X	free_linestorage(l);
X	return (NULL);
X    }
X    /* read subsequent points */
X    for (;;) {
X	if (fscanf(fp, "%d%d", &x, &y) != 2) {
X	    file_msg(Err_incomp, "line", line_no);
X	    free_linestorage(l);
X	    return (NULL);
X	}
X	if (x == 9999)
X	    break;
X	if ((q = create_point()) == NULL) {
X	    free_linestorage(l);
X	    return (NULL);
X	}
X	q->x = x;
X	q->y = y;
X	q->next = NULL;
X	p->next = q;
X	p = q;
X    }
X    skip_line(fp);
X    return (l);
X}
X
Xstatic F_spline *
Xread_splineobject(fp)
X    FILE	   *fp;
X{
X    F_spline	   *s;
X    F_point	   *p, *q;
X    F_control	   *cp, *cq;
X    int		    c, n, x, y, fa, ba;
X    int		    type, style;
X    float	    thickness, wid, ht;
X    float	    lx, ly, rx, ry;
X
X    if ((s = create_spline()) == NULL)
X	return (NULL);
X
X    s->points = NULL;
X    s->controls = NULL;
X    s->for_arrow = s->back_arrow = NULL;
X    s->next = NULL;
X
X    n = sscanf(buf, "%*d%d%d%d%d%d%d%d%f%d%d%d%d%d%d",
X	       &s->type, &s->style, &s->thickness, &s->color,
X	       &s->depth, &s->pen, &s->fill_style, &s->style_val, &fa, &ba);
X    if (n != 10) {
X	file_msg(Err_incomp, "spline", line_no);
X	free((char *) s);
X	return (NULL);
X    }
X    s->fill_style = FILL_CONVERT(s->fill_style);
X    fixdepth(&s->depth);
X    skip_comment(fp);
X    if (fa) {
X	line_no++;
X	if (5 != fscanf(fp, "%d%d%f%f%f", &type, &style, &thickness, &wid, &ht)) {
X	    fprintf(stderr, Err_incomp, "spline", line_no);
X	    return (NULL);
X	}
X	skip_line(fp);
X	s->for_arrow = new_arrow(type, style, thickness, wid, ht);
X	skip_comment(fp);
X    }
X    if (ba) {
X	line_no++;
X	if (5 != fscanf(fp, "%d%d%f%f%f", &type, &style, &thickness, &wid, &ht)) {
X	    fprintf(stderr, Err_incomp, "spline", line_no);
X	    return (NULL);
X	}
X	skip_line(fp);
X	s->back_arrow = new_arrow(type, style, thickness, wid, ht);
X	skip_comment(fp);
X    }
X    line_no++;
X
X    /* Read points */
X    if ((n = fscanf(fp, "%d%d", &x, &y)) != 2) {
X	file_msg(Err_incomp, "spline", line_no);
X	free_splinestorage(s);
X	return (NULL);
X    };
X    if ((p = create_point()) == NULL) {
X	free_splinestorage(s);
X	return (NULL);
X    }
X    s->points = p;
X    p->x = x;
X    p->y = y;
X    for (c = 1;;) {
X	if (fscanf(fp, "%d%d", &x, &y) != 2) {
X	    file_msg(Err_incomp, "spline", line_no);
X	    p->next = NULL;
X	    free_splinestorage(s);
X	    return (NULL);
X	};
X	if (x == 9999)
X	    break;
X	if ((q = create_point()) == NULL) {
X	    free_splinestorage(s);
X	    return (NULL);
X	}
X	q->x = x;
X	q->y = y;
X	p->next = q;
X	p = q;
X	c++;
X    }
X    p->next = NULL;
X    skip_line(fp);
X
X    if (normal_spline(s))
X	return (s);
X
X    line_no++;
X    skip_comment(fp);
X    /* Read controls */
X    if ((n = fscanf(fp, "%f%f%f%f", &lx, &ly, &rx, &ry)) != 4) {
X	file_msg(Err_incomp, "spline", line_no);
X	free_splinestorage(s);
X	return (NULL);
X    };
X    if ((cp = create_cpoint()) == NULL) {
X	free_splinestorage(s);
X	return (NULL);
X    }
X    s->controls = cp;
X    cp->lx = lx;
X    cp->ly = ly;
X    cp->rx = rx;
X    cp->ry = ry;
X    while (--c) {
X	if (fscanf(fp, "%f%f%f%f", &lx, &ly, &rx, &ry) != 4) {
X	    file_msg(Err_incomp, "spline", line_no);
X	    cp->next = NULL;
X	    free_splinestorage(s);
X	    return (NULL);
X	};
X	if ((cq = create_cpoint()) == NULL) {
X	    cp->next = NULL;
X	    free_splinestorage(s);
X	    return (NULL);
X	}
X	cq->lx = lx;
X	cq->ly = ly;
X	cq->rx = rx;
X	cq->ry = ry;
X	cp->next = cq;
X	cp = cq;
X    }
X    cp->next = NULL;
X
X    skip_line(fp);
X    return (s);
X}
X
Xstatic F_text  *
Xread_textobject(fp)
X    FILE	   *fp;
X{
X    F_text	   *t;
X    int		    n;
X    int		    ignore = 0;
X    char	    s[BUF_SIZE], s_temp[BUF_SIZE], junk[2];
X    float	    tx_size, tx_height, tx_length;
X
X    if ((t = create_text()) == NULL)
X	return (NULL);
X
X    t->next = NULL;
X    /*
X     * The text object is terminated by a CONTROL-A, so we read everything up
X     * to the CONTROL-A and then read that character. If we do not find the
X     * CONTROL-A on this line then this must be a multi-line text object and
X     * we will have to read more.
X     * 
X     * We read text size, height and length as floats because TransFig uses
X     * floats for these, but they are rounded to ints internally to xfig.
X     */
X    /* read the leading blanks for the string, but delete the first later */
X    n = sscanf(buf, "%*d%d%d%f%d%d%d%f%d%f%f%d%d%[^\1]%[\1]",
X	       &t->type, &t->font, &tx_size, &t->pen,
X	       &t->color, &t->depth, &t->angle,
X	       &t->flags, &tx_height, &tx_length,
X	       &t->base_x, &t->base_y, s, junk);
X    if (n != 13 && n != 14) {
X	file_msg(Err_incomp, "text", line_no);
X	free((char *) t);
X	return (NULL);
X    }
X    /* now round size, height and length to int */
X    if ((int) tx_size == DEFAULT)	/* just copy DEFAULT */
X	t->size = DEFAULT;
X    else
X	t->size = round(tx_size);
X    t->height = round(tx_height);
X    t->length = round(tx_length);
X    fixdepth(&t->depth);
X    if (n == 13) {
X	/* Read in the remainder of the text object. */
X	do {
X	    /*
X	     * khc 06JUL90 - test for end-of-file or else hangs in loop if no
X	     * ^A is found
X	     */
X	    if (fgets(buf, BUF_SIZE, fp) == NULL)
X		break;
X	    line_no++;		/* As is done in get_line */
X	    n = sscanf(buf, "%[^\1]%[\1]", s_temp, junk);
X	    /* Safety check */
X	    if (strlen(s) + 1 + strlen(s_temp) + 1 > BUF_SIZE) {
X		/* Too many characters.	 Ignore the rest. */
X		if (!ignore)
X		    file_msg("Truncating TEXT object to %d chars in line %d",
X				BUF_SIZE,line_no);
X		ignore = 1;
X	    }
X	    if (!ignore)
X		strcat(s, s_temp);
X	} while (n == 1);
X    }
X    if (t->type > T_RIGHT_JUSTIFIED) {
X	file_msg("Invalid text justification at line %d, setting to LEFT.", line_no);
X	t->type = T_LEFT_JUSTIFIED;
X    }
X
X    if ((proto < 20) && (t->font == 0 || t->font == DEFAULT))
X	t->flags = ((t->flags != DEFAULT) ? t->flags : 0) | SPECIAL_TEXT;
X    else if (proto == 20)
X	t->flags = PSFONT_TEXT;
X
X    if (t->font >= MAXFONT(t)) {
X	file_msg("Invalid text font (%d) at line %d, setting to DEFAULT.",
X		t->font, line_no);
X	t->font = DEFAULT;
X    }
X    if (strlen(s) <= 1)
X	{
X	file_msg("Empty text string at line %d", line_no);
X	return (NULL);
X	}
X    /* skip first blank from input file by starting at s[1] */
X    if ((t->cstring = new_string(strlen(&s[1]) + 1)) == NULL) {
X	free((char *) t);
X	return (NULL);
X    }
X    (void) strcpy(t->cstring, &s[1]);
X
X    return (t);
X}
X
Xget_line(fp)
X    FILE	   *fp;
X{
X    while (1) {
X	if (NULL == fgets(buf, BUF_SIZE, fp)) {
X	    return (-1);
X	}
X	line_no++;
X	if (*buf != '\n' && *buf != '#')	/* Skip empty and comment
X						 * lines */
X	    return (1);
X    }
X}
X
Xskip_comment(fp)
X    FILE	   *fp;
X{
X    char	    c;
X
X    while ((c = fgetc(fp)) == '#')
X	skip_line(fp);
X    if (c != '#')
X	ungetc(c, fp);
X}
X
Xskip_line(fp)
X    FILE	   *fp;
X{
X    while (fgetc(fp) != '\n') {
X	if (feof(fp))
X	    return;
X    }
X}
X
Xfixdepth(depth) 
X    int		  *depth;
X{
X    if (*depth>1000) {
X	    *depth=1000; 
X	    file_msg("Depth > 1000, setting to 1000 in line %d", line_no); 
X	} 
X	else if (*depth<0 || proto<21) { 
X	    *depth=0; 
X	    if (proto>=21) 
X		file_msg("Depth < 0, setting to 0 in line %d", line_no); 
X	}
X}
X
X/* VARARGS1 */
Xfile_msg(format, arg1, arg2, arg3, arg4, arg5)
X    char	   *format;
X    int		    arg1, arg2, arg3, arg4, arg5;
X{
X    XawTextBlock block;
X    popup_file_msg();
X    if (first_file_msg)
X	{
X	first_file_msg = False;
X	file_msg("---------------------");
X	file_msg("File %s:",read_file_name);
X	}
X    sprintf(tmpstr, format, arg1, arg2, arg3, arg4, arg5);
X    strcat(tmpstr,"\n");
X    /* append this message to the file message widget string */
X    block.firstPos = 0;
X    block.ptr = tmpstr;
X    block.length = strlen(tmpstr);
X    block.format = FMT8BIT;
X    /* make editable to add new message */
X    FirstArg(XtNeditType, XawtextEdit);
X    SetValues(file_msg_win);
X    /* insert the new message after the end */
X    (void) XawTextReplace(file_msg_win,file_msg_length,file_msg_length,&block);
X    (void) XawTextSetInsertionPoint(file_msg_win,file_msg_length);
X
X    /* make read-only again */
X    FirstArg(XtNeditType, XawtextRead);
X    SetValues(file_msg_win);
X    file_msg_length += block.length;
X}
X
Xclear_file_message(w, ev)
X    Widget	    w;
X    XButtonEvent   *ev;
X{
X    XawTextBlock	block;
X    int			replcode;
X
X    if (!file_msg_popup)
X	return;
X
X    tmpstr[0]=' ';
X    block.firstPos = 0;
X    block.ptr = tmpstr;
X    block.length = 1;
X    block.format = FMT8BIT;
X
X    /* make editable to clear message */
X    FirstArg(XtNeditType, XawtextEdit);
X    NextArg(XtNdisplayPosition, 0);
X    SetValues(file_msg_win);
X
X    /* replace all messages with one blank */
X    replcode = XawTextReplace(file_msg_win,0,file_msg_length,&block);
X    if (replcode == XawPositionError)
X	fprintf(stderr,"XawTextReplace XawPositionError\n");
X    else if (replcode == XawEditError)
X	fprintf(stderr,"XawTextReplace XawEditError\n");
X
X    /* make read-only again */
X    FirstArg(XtNeditType, XawtextRead);
X    SetValues(file_msg_win);
X    file_msg_length = 0;
X}
X
XXtEventHandler
Xfile_msg_panel_dismiss(w, ev)
X    Widget	    w;
X    XButtonEvent   *ev;
X{
X	XtPopdown(file_msg_popup);
X	file_msg_is_popped=False;
X}
X
Xpopup_file_msg()
X{
X	if (file_msg_popup)
X		{
X		if (!file_msg_is_popped)
X			{
X			if (file_up)
X				XtPopup(file_msg_popup, XtGrabNonexclusive);
X			else
X				XtPopup(file_msg_popup, XtGrabNone);
X			}
X		file_msg_is_popped = True;
X		return;
X		}
X
X	file_msg_is_popped = True;
X	FirstArg(XtNx, 0);
X	NextArg(XtNy, 0);
X	NextArg(XtNtitle, "Xfig: File error messages");
X	file_msg_popup = XtCreatePopupShell("xfig_file_msg",
X					transientShellWidgetClass,
X					tool, Args, ArgCount);
X
X	file_msg_panel = XtCreateManagedWidget("file_msg_panel", formWidgetClass,
X					   file_msg_popup, NULL, ZERO);
X	FirstArg(XtNwidth, 500);
X	NextArg(XtNheight, 200);
X	NextArg(XtNeditType, XawtextRead);
X	NextArg(XtNdisplayCaret, False);
X	NextArg(XtNborderWidth, INTERNAL_BW);
X	NextArg(XtNscrollHorizontal, XawtextScrollNever);
X	NextArg(XtNscrollVertical, XawtextScrollAlways);
X	file_msg_win = XtCreateManagedWidget("file_msg_win", asciiTextWidgetClass,
X					     file_msg_panel, Args, ArgCount);
X
X	FirstArg(XtNlabel, "Dismiss");
X	NextArg(XtNheight, 25);
X	NextArg(XtNborderWidth, INTERNAL_BW);
X	NextArg(XtNfromVert, file_msg_win);
X	file_msg_dismiss = XtCreateManagedWidget("dismiss", commandWidgetClass,
X				       file_msg_panel, Args, ArgCount);
X	XtAddEventHandler(file_msg_dismiss, ButtonReleaseMask, (Boolean) 0,
X			  (XtEventHandler)file_msg_panel_dismiss, (XtPointer) NULL);
X
X	FirstArg(XtNlabel, "Clear");
X	NextArg(XtNheight, 25);
X	NextArg(XtNborderWidth, INTERNAL_BW);
X	NextArg(XtNfromVert, file_msg_win);
X	NextArg(XtNfromHoriz, file_msg_dismiss);
X	file_msg_dismiss = XtCreateManagedWidget("clear", commandWidgetClass,
X				       file_msg_panel, Args, ArgCount);
X	XtAddEventHandler(file_msg_dismiss, ButtonReleaseMask, (Boolean) 0,
X			  (XtEventHandler)clear_file_message, (XtPointer) NULL);
X
X	if (file_up)
X		XtPopup(file_msg_popup, XtGrabNonexclusive);
X	else
X		XtPopup(file_msg_popup, XtGrabNone);
X}
END_OF_FILE
if test 24558 -ne `wc -c <'f_read.c'`; then
    echo shar: \"'f_read.c'\" unpacked with wrong size!
fi
# end of 'f_read.c'
fi
echo shar: End of archive 6 \(of 25\).
cp /dev/null ark6isdone
MISSING=""
for I in 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 ; do
    if test ! -f ark${I}isdone ; then
	MISSING="${MISSING} ${I}"
    fi
done
if test "${MISSING}" = "" ; then
    echo You have unpacked all 25 archives.
    rm -f ark[1-9]isdone ark[1-9][0-9]isdone
else
    echo You still need to unpack the following archives:
    echo "        " ${MISSING}
fi
##  End of shell archive.
exit 0
-- 
Molecular Simulations, Inc.             mail: dcmartin@msi.com
796 N. Pastoria Avenue                  uucp: uunet!dcmartin
Sunnyvale, California 94086             at&t: 408/522-9236
