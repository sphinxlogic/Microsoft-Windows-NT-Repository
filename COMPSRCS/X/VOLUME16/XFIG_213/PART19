Path: uunet!zaphod.mps.ohio-state.edu!mips!msi!dcmartin
From: envbvs@bea.lbl.gov (Brian V. Smith)
Newsgroups: comp.sources.x
Subject: v16i024: Xfig 2.1.3, Part19/25
Message-ID: <1992Feb4.150225.1319@msi.com>
Date: 4 Feb 92 15:02:25 GMT
References: <csx-16i006-xfig-2.1.3@uunet.UU.NET>
Sender: dcmartin@msi.com (David C. Martin - Moderator)
Organization: Molecular Simulations, Inc.
Lines: 1318
Approved: dcmartin@msi.com
Originator: dcmartin@fascet

Submitted-by: envbvs@bea.lbl.gov (Brian V. Smith)
Posting-number: Volume 16, Issue 24
Archive-name: xfig-2.1.3/part19

# This is a shell archive.  Remove anything before this line, then feed it
# into a shell via "sh file" or similar.  To overwrite existing files,
# type "sh file -c".
# The tool that generated this appeared in the comp.sources.unix newsgroup;
# send mail to comp-sources-unix@uunet.uu.net if you want that tool.
# If this archive is complete, you will see the following message at the end:
#		"End of archive 19 (of 25)."
# Contents:  CompKeyDB Doc/TODO Examples/flow.fig.uu
#   Examples/house.fig.uu Examples/houseC.fig.uu d_intspline.c
#   w_print.c
# Wrapped by dcmartin@fascet on Tue Feb  4 06:42:31 1992
PATH=/bin:/usr/bin:/usr/ucb ; export PATH
if test -f 'CompKeyDB' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'CompKeyDB'\"
else
echo shar: Extracting \"'CompKeyDB'\" \(8042 characters\)
sed "s/^X//" >'CompKeyDB' <<'END_OF_FILE'
X:~Ctrl<Key>1: insert-string(1)
X:~Ctrl<Key>2: insert-string(2)
X:~Ctrl<Key>3: insert-string(3)
X:~Ctrl<Key>4: insert-string(4)
X:~Ctrl<Key>A: insert-string(A)
X:~Ctrl<Key>C: insert-string(C)
X:~Ctrl<Key>E: insert-string(E)
X:~Ctrl<Key>D: insert-string(D)
X:~Ctrl<Key>I: insert-string(I)
X:~Ctrl<Key>L: insert-string(L)
X:~Ctrl<Key>N: insert-string(N)
X:~Ctrl<Key>O: insert-string(O)
X:~Ctrl<Key>P: insert-string(P)
X:~Ctrl<Key>R: insert-string(R)
X:~Ctrl<Key>S: insert-string(S)
X:~Ctrl<Key>U: insert-string(U)
X:~Ctrl<Key>X: insert-string(X)
X:~Ctrl<Key>Y: insert-string(Y)
X:~Ctrl<Key>a: insert-string(a)
X:~Ctrl<Key>c: insert-string(c)
X:~Ctrl<Key>d: insert-string(d)
X:~Ctrl<Key>e: insert-string(e)
X:~Ctrl<Key>i: insert-string(i)
X:~Ctrl<Key>n: insert-string(n)
X:~Ctrl<Key>o: insert-string(o)
X:~Ctrl<Key>p: insert-string(p)
X:~Ctrl<Key>s: insert-string(s)
X:~Ctrl<Key>u: insert-string(u)
X:~Ctrl~Meta<Key>y: insert-string(y)
X:<Key>quotedbl: insert-string(0x22)
X:<Key>bar: insert-string(|)
X:<Key>exclam: insert-string(!)
X:<Key>underscore: insert-string(_)
X:<Key>less: insert-string(<)
X:<Key>minus: insert-string(-)
X:<Key>asciicircum: insert-string(^)
X:<Key>plus: insert-string(+)
X:<Key>backslash: insert-string(\)
X:<Key>slash: insert-string(/)
X:<Key>greater: insert-string(>)
X:<Key>question: insert-string(?)
X:<Key>asterisk: insert-string(*)
X:<Key>grave: insert-string(`)
X:<Key>apostrophe: insert-string(')
X:<Key>asciitilde: insert-string(~)
X:<Key>period: insert-string(.)
X:<Key>comma: insert-string(0x2c)
X:<Key>colon: insert-string(:)
X:Ctrl<Key>a: beginning-of-line()
X:Ctrl<Key>e: end-of-line()
X:Ctrl<Key>f: forward-character()
X:Meta<Key>f: forward-word()
X:Ctrl<Key>b: backward-character()
X:Meta<Key>b: backward-word()
X:Meta<Key>]: forward-paragraph()
X:Meta<Key>[: backward-paragraph()
X:Ctrl<Key>d: delete-next-character()
X:Ctrl<Key>h: delete-previous-character()
X:Meta<Key>d: delete-next-word()
X:Meta<Key>h: delete-previous-word()
X:Meta<Key>D: kill-word()
X:Meta<Key>H: backward-kill-word()
X:Ctrl<Key>w: kill-selection()
X:Ctrl<Key>k: kill-to-end-of-line()
X:Meta<Key>k: kill-to-end-of-paragraph()
X:Meta<Key>y: insert-selection(PRIMARY,CUT_BUFFER0)
X:Ctrl<Key>l: redraw-display()
X:Meta<Key>i: insert-file()
X:Ctrl<Key>r: search(backward)
X:Ctrl<Key>s: search(forward)
X:Ctrl<Key>u: multiply(4)
X:Ctrl<Key>g: multiply(Reset)
X:Meta<Key>q: form-paragraph()
X:Ctrl<Key>t: transpose-characters()
X:Ctrl<Key>y: insert-selection(CUT_BUFFER1)
X:<Key>Multi_key,:<Key>exclam,:<Key>exclam: insert-string(0xA1)
X:<Key>Multi_key,:<Key>C,:<Key>slash: insert-string(0xA2)
X:<Key>Multi_key,:<Key>L,:<Key>minus: insert-string(0xA3)
X:<Key>Multi_key,:<Key>O,:<Key>X: insert-string(0xA4)
X:<Key>Multi_key,:<Key>Y,:<Key>minus: insert-string(0xA5)
X:<Key>Multi_key,:<Key>bar,:<Key>bar: insert-string(0xA6)
X:<Key>Multi_key,:<Key>S,:<Key>O: insert-string(0xA7)
X:<Key>Multi_key,:<Key>quotedbl,:<Key>quotedbl: insert-string(0xA8)
X:<Key>Multi_key,:<Key>C,:<Key>O: insert-string(0xA9)
X:<Key>Multi_key,:<Key>underscore,:<Key>a: insert-string(0xAA)
X:<Key>Multi_key,:<Key>less,:<Key>less: insert-string(0xAB)
X:<Key>Multi_key,:<Key>minus,:<Key>bar: insert-string(0xAC)
X:<Key>Multi_key,:<Key>minus,:<Key>minus: insert-string(0xAD)
X:<Key>Multi_key,:<Key>R,:<Key>O: insert-string(0xAE)
X:<Key>Multi_key,:<Key>asciicircum,:<Key>minus: insert-string(0xAF)
X:<Key>Multi_key,:<Key>asciicircum,:<Key>asterisk: insert-string(0xB0)
X:<Key>Multi_key,:<Key>plus,:<Key>minus: insert-string(0xB1)
X:<Key>Multi_key,:<Key>asciicircum,:<Key>2: insert-string(0xB2)
X:<Key>Multi_key,:<Key>asciicircum,:<Key>3: insert-string(0xB3)
X:<Key>Multi_key,:<Key>backslash,:<Key>backslash: insert-string(0xB4)
X:<Key>Multi_key,:<Key>slash,:<Key>u: insert-string(0xB5)
X:<Key>Multi_key,:<Key>P,:<Key>exclam: insert-string(0xB6)
X:<Key>Multi_key,:<Key>asciicircum,:<Key>period: insert-string(0xB7)
X:<Key>Multi_key,:<Key>asciicircum,:<Key>1: insert-string(0xB9)
X:<Key>Multi_key,:<Key>underscore,:<Key>o: insert-string(0xBA)
X:<Key>Multi_key,:<Key>greater,:<Key>greater: insert-string(0xBB)
X:<Key>Multi_key,:<Key>1,:<Key>4: insert-string(0xBC)
X:<Key>Multi_key,:<Key>1,:<Key>2: insert-string(0xBD)
X:<Key>Multi_key,:<Key>3,:<Key>4: insert-string(0xBE)
X:<Key>Multi_key,:<Key>question,:<Key>question: insert-string(0xBF)
X:<Key>Multi_key,:<Key>A,:<Key>grave: insert-string(0xC0)
X:<Key>Multi_key,:<Key>A,:<Key>apostrophe: insert-string(0xC1)
X:<Key>Multi_key,:<Key>A,:<Key>asciicircum: insert-string(0xC2)
X:<Key>Multi_key,:<Key>A,:<Key>asciitilde: insert-string(0xC3)
X:<Key>Multi_key,:<Key>A,:<Key>quotedbl: insert-string(0xC4)
X:<Key>Multi_key,:<Key>A,:<Key>asterisk: insert-string(0xC5)
X:<Key>Multi_key,:<Key>A,:<Key>E: insert-string(0xC6)
X:<Key>Multi_key,:<Key>C,:<Key>comma: insert-string(0xC7)
X:<Key>Multi_key,:<Key>E,:<Key>grave: insert-string(0xC8)
X:<Key>Multi_key,:<Key>E,:<Key>apostrophe: insert-string(0xC9)
X:<Key>Multi_key,:<Key>E,:<Key>asciicircum: insert-string(0xCA)
X:<Key>Multi_key,:<Key>E,:<Key>quotedbl: insert-string(0xCB)
X:<Key>Multi_key,:<Key>I,:<Key>grave: insert-string(0xCC)
X:<Key>Multi_key,:<Key>I,:<Key>apostrophe: insert-string(0xCD)
X:<Key>Multi_key,:<Key>I,:<Key>asciicircum: insert-string(0xCE)
X:<Key>Multi_key,:<Key>I,:<Key>quotedbl: insert-string(0xCF)
X:<Key>Multi_key,:<Key>D,:<Key>minus: insert-string(0xD0)
X:<Key>Multi_key,:<Key>N,:<Key>asciitilde: insert-string(0xD1)
X:<Key>Multi_key,:<Key>O,:<Key>grave: insert-string(0xD2)
X:<Key>Multi_key,:<Key>O,:<Key>apostrophe: insert-string(0xD3)
X:<Key>Multi_key,:<Key>O,:<Key>asciicircum: insert-string(0xD4)
X:<Key>Multi_key,:<Key>O,:<Key>asciitilde: insert-string(0xD5)
X:<Key>Multi_key,:<Key>O,:<Key>quotedbl: insert-string(0xD6)
X:<Key>Multi_key,:<Key>asterisk,:<Key>asterisk: insert-string(0xD7)
X:<Key>Multi_key,:<Key>O,:<Key>slash: insert-string(0xD8)
X:<Key>Multi_key,:<Key>U,:<Key>grave: insert-string(0xD9)
X:<Key>Multi_key,:<Key>U,:<Key>apostrophe: insert-string(0xDA)
X:<Key>Multi_key,:<Key>U,:<Key>asciicircum: insert-string(0xDB)
X:<Key>Multi_key,:<Key>U,:<Key>quotedbl: insert-string(0xDC)
X:<Key>Multi_key,:<Key>Y,:<Key>apostrophe: insert-string(0xDD)
X:<Key>Multi_key,:<Key>P,:<Key>bar: insert-string(0xDE)
X:<Key>Multi_key,:<Key>s,:<Key>s: insert-string(0xDF)
X:<Key>Multi_key,:<Key>a,:<Key>grave: insert-string(0xE0)
X:<Key>Multi_key,:<Key>a,:<Key>apostrophe: insert-string(0xE1)
X:<Key>Multi_key,:<Key>a,:<Key>asciicircum: insert-string(0xE2)
X:<Key>Multi_key,:<Key>a,:<Key>asciitilde: insert-string(0xE3)
X:<Key>Multi_key,:<Key>a,:<Key>quotedbl: insert-string(0xE4)
X:<Key>Multi_key,:<Key>a,:<Key>asterisk: insert-string(0xE5)
X:<Key>Multi_key,:<Key>a,:<Key>e: insert-string(0xE6)
X:<Key>Multi_key,:<Key>c,:<Key>comma: insert-string(0xE7)
X:<Key>Multi_key,:<Key>e,:<Key>grave: insert-string(0xE8)
X:<Key>Multi_key,:<Key>e,:<Key>apostrophe: insert-string(0xE9)
X:<Key>Multi_key,:<Key>e,:<Key>asciicircum: insert-string(0xEA)
X:<Key>Multi_key,:<Key>e,:<Key>quotedbl: insert-string(0xEB)
X:<Key>Multi_key,:<Key>i,:<Key>grave: insert-string(0xEC)
X:<Key>Multi_key,:<Key>i,:<Key>apostrophe: insert-string(0xED)
X:<Key>Multi_key,:<Key>i,:<Key>asciicircum: insert-string(0xEE)
X:<Key>Multi_key,:<Key>i,:<Key>quotedbl: insert-string(0xEF)
X:<Key>Multi_key,:<Key>d,:<Key>minus: insert-string(0xF0)
X:<Key>Multi_key,:<Key>n,:<Key>asciitilde: insert-string(0xF1)
X:<Key>Multi_key,:<Key>o,:<Key>grave: insert-string(0xF2)
X:<Key>Multi_key,:<Key>o,:<Key>apostrophe: insert-string(0xF3)
X:<Key>Multi_key,:<Key>o,:<Key>asciicircum: insert-string(0xF4)
X:<Key>Multi_key,:<Key>o,:<Key>asciitilde: insert-string(0xF5)
X:<Key>Multi_key,:<Key>o,:<Key>quotedbl: insert-string(0xF6)
X:<Key>Multi_key,:<Key>minus,:<Key>colon: insert-string(0xF7)
X:<Key>Multi_key,:<Key>o,:<Key>slash: insert-string(0xF8)
X:<Key>Multi_key,:<Key>u,:<Key>grave: insert-string(0xF9)
X:<Key>Multi_key,:<Key>u,:<Key>apostrophe: insert-string(0xFA)
X:<Key>Multi_key,:<Key>u,:<Key>asciicircum: insert-string(0xFB)
X:<Key>Multi_key,:<Key>u,:<Key>quotedbl: insert-string(0xFC)
X:<Key>Multi_key,:<Key>y,:<Key>apostrophe: insert-string(0xFD)
X:<Key>Multi_key,:<Key>p,:<Key>bar: insert-string(0xFE)
X:<Key>Multi_key,:<Key>y,:<Key>quotedbl: insert-string(0xFF)
END_OF_FILE
if test 8042 -ne `wc -c <'CompKeyDB'`; then
    echo shar: \"'CompKeyDB'\" unpacked with wrong size!
fi
# end of 'CompKeyDB'
fi
if test -f 'Doc/TODO' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'Doc/TODO'\"
else
echo shar: Extracting \"'Doc/TODO'\" \(7748 characters\)
sed "s/^X//" >'Doc/TODO' <<'END_OF_FILE'
XThis file contains some possible things to do in future versions of xfig.
X
Xallow printing of grid in figure
Xbe able to select only certain object parameters for update mode
Xhave arc sub-type 2 for pie wedge-type arcs
Xhave common edit popup for all four splines to allow conversion between all
Xallow fractional text sizes (float)
Xsave modified_flag before file operations and restore if undo used
XShould arrow mode be changed in update mode
XShould arrow size change in update mode when linewidth changes?
Xinvestigate whether eps objects that don't have a preview bitmap
X	are scaled correctly
Xadd ability to add/delete arrows and change arrow size from edit panel
Xchange eps_bitmaps so that background is transparent (needs to work
X	in normal and reverse-video modes).
XMake popup windows come up so that they don't overlap the figure (if possible).
X	An edit popup window should at least not overlap the
X	object being edited (again only if possible).
XPossibly make extension to Fig protocol to handle several line 
X	cap/join styles (e.g. round, butt, miter)
XUse fill pattern (grey-shading) to mimic color objects on monochrome systems.
XExtend smart links to work for SCALE, MOVEPT and perhaps EDIT, UPDATE.
X	Could also extend them to work for arc-type links and for
X	ellipse/circle objects.  Also, at the moment smart-links
X	only work for one end of a link if both ends of the link
X	happen to touch the object being operated on.  To fix this would
X	require changing the F_linkinfo structure to have left_endpt,
X	left_prevpt, right_endpt, right_prevpt fields instead of the current
X	endpt, prevpt and two_pts fields.
XMake xfig resources more consistent with normal use of resources in X clients.
X	e.g. provide support to allow each command button (say) to be
X	a different color.  Ditto for mode buttons, etc.
Xinvestigate if we should be setting initialResourcesPersistent to false for
X	widgets that are created and destroyed as required.
XStill need to think about how point positioning should be utilized with
X	many of the editing commands, e.g. if point positioning is set to
X	large grid and you atr trying to move an object, should:
X	a) it be ignored, b) you can pick up an object anywhere but
X	you must put the 'pick-up' point back on a grid posn,
X	c) you have to pick up and put down objects at grid posns,
X	d) you can pick up and place an object anywhere but when you
X	place it, the point on the object closest the pickup point is
X	automatically rounded to the nearest grid posn, e) you can
X	pick up objects anywhere and movement is multiples of the grid size.
X	The current behaviour is c) and b) can be mimicked by changing the
X	point posn indicator mid-move.  It has the disadvantage that you
X	may not be able to pick up an object which isn't on the grid points.
X	I think e) is the next best but it won't let you mimick b).
XUse clipping rectangles in more places:
X	use the redisplay_* routines as necessary.
Xallow popup menus to be pinned?
Xhave a resource which can be set to keep backups during a save, instead of
X	prompting the user about overwrite etc.
Xmake a keypad label:
X	This should popup in the mousefun window whenever a panel for
X	entering text is entered.  The kbd_ic icon is already there.
Xzooming of text is still a kludge. (It doesn't work properly yet)
Xmake arcs use pw_curve to speed them up.
Xadd bounding box to every F_object definition, useful for:
X	1) faster drawing of rubber objects
X	2) handling the selective redrawing of figures better after they become
X	   the innocent victim during an expose or erasure of another object
Xthings like pan/zoom/resize/iconify will still leave junk on the screen
X	or mess up the figure if you are in the middle of drawing it:
X	One solution is to call canvas_rightbut_proc whenever the
X	action_on flag is set and one of the above functions is called.
X	This forces the operation being performed to be cancelled - probably
X	not a good idea for panning - we might be trying to pan a little
X	bit to place the last point in a large object.
X	Another solution is to have a big case statement which performs
X	a single elastic draw of whatever object is being drawn/moved etc.
X	The function would need to be called before an iconify (or
X	whatever) and again after the operation was completed.  This
X	would allow drawing operations to be continued after window functions
X	had been performed.
X	A third solution is to use a canvas_elasticdraw_save parameter
X	instead of using a case statement - it would need to be set
X	prior to every elastic draw operation.
XGeneralize align mode (like glue mode) to allow arbitrary tagged objects to be
X	aligned rather than just compounds.
XAdditional align mode options for distributing objects evenly within a compound
X	or abutting them together: abutT, abutB, abutL, abutR, distH, distV
XSome facility to provide better support for small screens.
X	e.g. scrollable indicator button list or automatic resizing
X	to have several rows as needed.  Similarly for mode panel.
X	A good test is to limit the total space to 640x480 so that
X	it is still useable on an IBM-PC VGA screen.
XMake a raise/lower depth feature:
X	the raise_ic icon is already in w_icons.c
XMake xfig understand depth better:
X	If you set the depth using the object edit panels, xfig will redraw
X	them correctly, however it would be nice if as you entered new filled
X	objects that they were automatically given an appropriate depth.
X	This would involve finding the depth of all overlapping (filled?)
X	objects and setting the depth to be one less.
X	What about support for negative depth values?
XWhat really needs to be done is a major rework of the list structures used
X	to store xfig objects.  Here are some comments involving the change.
X-------- note about restructuring xfig data structures -------------
XRather than having a depth attribute for objects, you can use the order
Xin which objects are entered to determine their depth:  later objects
Xappear on the top.  A raise/lower depth operation would allow you to
Xchange the ordering.
X
XThe consequences to the current implementation of converting totally to this
Xscheme are non-trivial.  Instead of having separate lists for each object
Xtype, you need to have a single list which has a union of all the different
Xobjects as its type.  This will require changes in many places in the code.
XAt the moment there are many places where each of the lists are traversed
Xseparately.  In many cases the code can be simplified dramatically if there
Xwas only a single list.  For example, to perform a move on an object there
Xare separate routines (one for each object type) to start/cancel/place the
Xobject.  You could replace this by a single routine for start/cancel and
Xplace which worked no matter what type you had.  (Who says you can't use
Xobject-orientation in C :-)).  Another advantage is that the current caching
Xscheme for redrawing would no longer be needed (i.e. redrawing would be
Xgreatly simplified).  Also undo would become simpler (I think).
X
XIf we want to make a smooth transition from the current scheme to the
Xone described above (and I do), here is how I propose we do it:
X
XWe need to change every direct access to the current lists to use functions.
Xi.e. something like
X        for (a=objects.arc; a!=NULL; a=a->next) ...
Xto be something like
X        for (a=first_arc(); a!=NULL; a=next_arc(a)) ...
X
XAt the moment these routines would be simple to implement.
XOnce all occurrences had been changed, it would simply be a matter
Xof changing the underlying list structure and changing the first_arc,
Xnext_arc routines.  Then as we had time we could replace whichever
Xsets of six loops by a single loop which did
X        for (o=first_obj(); o!=NULL; o=next_obj(o)) ...
X-------- end of note about restructuring xfig data structures -------------
END_OF_FILE
if test 7748 -ne `wc -c <'Doc/TODO'`; then
    echo shar: \"'Doc/TODO'\" unpacked with wrong size!
fi
# end of 'Doc/TODO'
fi
if test -f 'Examples/flow.fig.uu' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'Examples/flow.fig.uu'\"
else
echo shar: Extracting \"'Examples/flow.fig.uu'\" \(5801 characters\)
sed "s/^X//" >'Examples/flow.fig.uu' <<'END_OF_FILE'
Xbegin 664 flow.fig
XM(T9)1R`R+C`*.#`@,@HU(#$@,"`Q(#`@,"`P(#`@,"XP,#`@,2`Q(#`@.3(N
XM-#`Y(#(Y-BXY-34@,34Y(#(W-"`Q-#0@,C0Y(#$R-"`R,S0*"3`@,"`Q+C`P
XM,"`T+C`P,"`X+C`P,`HU(#$@,"`Q(#`@,"`P(#`@,"XP,#`@,"`P(#$@,S0T
XM+C(R-R`R-SDN-C@R(#,P-"`R,#D@,S,T(#$Y.2`S-S0@,C`T"@DP(#`@,2XP
XM,#`@-"XP,#`@."XP,#`*-2`Q(#`@,2`P(#`@,"`P(#`N,#`P(#`@,"`Q(#0P
XM,RXX.3$@,S`P+C0Q,R`S,SD@,C8Y(#,U.2`R-#0@,SDT(#(R.0H),"`P(#$N
XM,#`P(#0N,#`P(#@N,#`P"C(@,2`P(#$@,"`P(#`@,"`P+C`P,"`P(#`*"2`R
XM,SD@,3$Y(#,S.2`Q,3D@.3DY.2`Y.3DY"C(@,2`P(#$@,"`P(#`@,"`P+C`P
XM,"`Q(#`*"3`@,"`Q+C`P,"`T+C`P,"`X+C`P,`H)(#$U.2`S-SD@,34Y(#0U
XM.2`Y.3DY(#DY.3D*,B`Q(#`@,2`P(#`@,"`P(#`N,#`P(#$@,`H),"`P(#$N
XM,#`P(#0N,#`P(#@N,#`P"@D@,C@Y(#4Y(#(X.2`Y-"`Y.3DY(#DY.3D*,B`Q
XM(#`@,2`P(#`@,"`P(#`N,#`P(#$@,`H),"`P(#$N,#`P(#0N,#`P(#@N,#`P
XM"@D@,30Y(#4Y(#$T.2`Y-"`Y.3DY(#DY.3D*,B`Q(#`@,2`P(#`@,"`P(#`N
XM,#`P(#`@,0H),"`P(#$N,#`P(#0N,#`P(#@N,#`P"@D@-#(Y(#0Q-"`T,CD@
XM,S<Y(#DY.3D@.3DY.0HR(#$@,"`Q(#`@,"`P(#`@,"XP,#`@,"`P"@D@-#(Y
XM(#DY(#0R.2`U.2`U-3D@-3D@-34Y(#0Y.2`T,CD@-#DY(#0R.2`T-3D@.3DY
XM.2`Y.3DY"C(@,2`P(#$@,"`P(#`@,"`P+C`P,"`Q(#`*"3`@,"`Q+C`P,"`T
XM+C`P,"`X+C`P,`H)(#0R.2`Q,SD@-#(Y(#$W-"`Y.3DY(#DY.3D*,B`Q(#`@
XM,2`P(#`@,"`P(#`N,#`P(#$@,`H),"`P(#$N,#`P(#0N,#`P(#@N,#`P"@D@
XM,C@Y(#$S.2`R.#D@,3<T(#DY.3D@.3DY.0HR(#$@,"`Q(#`@,"`P(#`@,"XP
XM,#`@,2`P"@DP(#`@,2XP,#`@-"XP,#`@."XP,#`*"2`Q-#D@,3,Y(#$T.2`Q
XM-S0@.3DY.2`Y.3DY"C(@,B`P(#$@,"`P(#`@,"`P+C`P,"`P(#`*"2`S-SD@
XM-#$Y(#0W.2`T,3D@-#<Y(#0U.2`S-SD@-#4Y(#,W.2`T,3D@.3DY.2`Y.3DY
XM"C(@,B`P(#$@,"`P(#`@,"`P+C`P,"`P(#`*"2`S-SD@.3D@-#<Y(#DY(#0W
XM.2`Q,SD@,S<Y(#$S.2`S-SD@.3D@.3DY.2`Y.3DY"C(@,B`P(#$@,"`P(#`@
XM,"`P+C`P,"`P(#`*"2`R,SD@.3D@,S,Y(#DY(#,S.2`Q,SD@,C,Y(#$S.2`R
XM,SD@.3D@.3DY.2`Y.3DY"C(@,B`P(#$@,"`P(#`@,"`P+C`P,"`P(#`*"2`Y
XM.2`Y.2`Q.3D@.3D@,3DY(#$S.2`Y.2`Q,SD@.3D@.3D@.3DY.2`Y.3DY"C(@
XM,B`P(#$@,"`P(#`@,"`P+C`P,"`P(#`*"2`W.2`Q-SD@-#DY(#$W.2`T.3D@
XM,S<Y(#<Y(#,W.2`W.2`Q-SD@.3DY.2`Y.3DY"C,@,R`P(#$@,"`P(#`@,"`P
XM+C`P,"`P(#`*"2`R-#D@,C`Y(#(Q-"`R,C0@,C`Y(#(T-"`R,C0@,C8Y(#,Q
XM-"`R-3D@,S$Y(#(R.2`R.30@,C`Y(#(T.2`R,#D@.3DY.2`Y.3DY"@D@,C4Y
XM+C4S-R`R,#8N.#,W(#(T,"XP.#,@,C$P+C@S,"`R,C$N,#,Y(#(Q-2XW,S4@
XM,C$P+C$X.2`R,C@N-#<U(#(P."XQ.#(@,C,X+C4P,2`R,3`N,34W(#(U,2XW
XM-S<@,C$U+C<W,B`R-C0N.3(U(#(T.2XU-30@,C@Q+C8U-B`R.3$N-S`Q(#(X
XM,"XQ,34@,S(Q+C0X.2`R-3$N.3`X(#,R,BXR.3@@,C,W+C8Q.2`S,34N-3(X
XM(#(Q.2XY,C<@,S`Q+C@Q.2`R,3$N-S0S(#(X,RXP,3`@,C`U+C$T-2`R-3DN
XM-3,W(#(P-BXX,S<@,C0P+C`X,R`R,3`N.#,P"C,@,R`P(#$@,"`P(#`@,"`P
XM+C`P,"`P(#`*"2`Q,#D@,C@Y(#$Q-"`S,C0@,3<Y(#,S-"`R,30@,S$T(#(P
XM-"`R-SD@,38Y(#(W-"`Q,#D@,C@Y(#DY.3D@.3DY.0H)(#$R,2XW-#<@,C<P
XM+C`T,B`Q,#$N-S$S(#(Y.2XX,S@@,3`U+C8T-"`S,34N-34T(#$R.2XU-#,@
XM,S,Y+C<Q,2`Q-C(N,C@R(#,S-RXP.3D@,3@Y+C(T."`S,S(N,3`Q(#(P."XW
XM-34@,S(V+C@X,"`R,3@N-S,V(#,P,BXS-CD@,C$R+C8W."`R.#8N-38Y(#$Y
XM-2XU-S$@,C<Q+C8T.2`Q-S<N-#`V(#(W,RXU-C8@,34T+C(Y-B`R-S0N-S4Y
XM(#$R,2XW-#<@,C<P+C`T,B`Q,#$N-S$S(#(Y.2XX,S@*,R`Q(#`@,2`P(#`@
XM,"`P(#`N,#`P(#`@,`H)(#(Y.2`R-CD@,C4T(#(Y.2`R-#0@,S4T(#,S-"`S
XM-3D@-#,T(#,U.2`T-3D@,S`Y(#0R.2`R-SD@,CDY(#(V.2`Y.3DY(#DY.3D*
XM-"`Q(#`@,3(@,"`P(#`@,"XP,#`@,2`Q,B`U,B`R-C0@,C4Y($-H96UI<W1R
XM>0$*-"`Q(#`@,3(@,"`P(#`@,"XP,#`@,2`Q,B`V-"`R-3D@,C0T($%T;6]S
XM<&AE<FEC`0HT(#$@,"`Q,B`P(#`@,"`P+C`P,"`Q(#D@,S(@,C4Y(#(R.2!)
XM;F1O;W(!"C0@,"`P(#$P(#`@,"`P(#`N,#`P(#$@-R`U(#$T,B`T,C`@,P$*
XM-"`P(#`@,3(@,"`P(#`@,"XP,#`@,2`Y(#8@,3,T(#0Q,2!Q`0HT(#`@,"`Q
XM,"`P(#`@,"`P+C`P,"`Q(#<@,R`T-C(@,38V(&D!"C0@,"`P(#$P(#`@,"`P
XM(#`N,#`P(#$@-R`U(#0T-"`Q-C<@,@$*-"`P(#`@,3`@,"`P(#`@,"XP,#`@
XM,2`W(#4@,S(P(#$V-B`P`0HT(#`@,"`Q,"`P(#`@,"`P+C`P,"`Q(#<@-2`S
XM,#,@,38V(#$!"C0@,"`P(#$P(#`@,"`P(#`N,#`P(#$@-R`W(#0Y-R`Q-C4@
XM4@$*-"`P(#`@,3`@,"`P(#`@,"XP,#`@,2`W(#$X(#,U,B`Q-C<@358!"C0@
XM,"`P(#$R(#`@,"`P(#`N,#`P(#$@,3(@-S8@-#,V(#$V,2!Q("`@0R`@("@Q
XM+48@("`@*0$*-"`P(#`@,3(@,"`P(#`@,"XP,#`@,2`Q,B`X,B`R.30@,38Q
XM('$@("!#("`@*#$M1B`@("`@("D!"C0@,"`P(#$P(#`@,"`P(#`N,#`P(#$@
XM-R`V(#(Q,B`Q-C@@10$*-"`P(#`@,3`@,"`P(#`@,"XP,#`@,2`W(#4@,3@Q
XM(#$V-R`P`0HT(#`@,"`Q,"`P(#`@,"`P+C`P,"`Q(#<@-2`Q-C,@,38W(#`!
XM"C0@,"`P(#$R(#`@,"`P(#`N,#`P(#$@,3(@-S,@,34T(#$V,B!Q("`@0R`@
XM("@Q+48@("`I`0HT(#`@,"`Q,"`P(#`@,"`P+C`P,"`Q(#<@,R`T-C0@-#@T
XM(&D!"C0@,"`P(#$P(#`@,"`P(#`N,#`P(#$@-R`U(#0T-R`T.#4@,@$*-"`P
XM(#`@,3`@,"`P(#`@,"XP,#`@,2`W(#4@,S$Y(#@V(#`!"C0@,"`P(#$P(#`@
XM,"`P(#`N,#`P(#$@-R`U(#,P,B`X-B`Q`0HT(#`@,"`Q,"`P(#`@,"`P+C`P
XM,"`Q(#<@-2`Q-SD@.#8@,`$*-"`P(#`@,3`@,"`P(#`@,"XP,#`@,2`W(#4@
XM,38R(#@V(#`!"C0@,"`P(#$R(#`@,"`P(#`N,#`P(#$@,3(@,C,@-#,Y(#0W
XM.2!Q("`@0P$*-"`P(#`@,3(@,"`P(#`@,"XP,#`@,2`Q,B`R,R`R.30@-SD@
XM<2`@($,!"C0@,"`P(#$R(#`@,"`P(#`N,#`P(#$@,3(@,C,@,34T(#<Y('$@
XM("!#`0HT(#$@,"`Q,B`P(#`@,"`P+C`P,"`Q(#D@-#(@,34Y(#4R-"!%>&AA
XM=7-T`0HT(#$@,"`Q,B`P(#`@,"`P+C`P,"`Q(#D@,3$V(#$U.2`U,#0@365C
XM:&%N:6-A;"!696YT:6QA=&EO;@$*-"`Q(#`@,3(@,"`P(#`@,"XP,#`@,2`Q
XM,B`Y-B`Q-3D@-#@T($5X9FEL=')A=&EN9R!!:7(@86YD`0HT(#$@,"`Q,B`P
XM(#`@,"`P+C`P,"`Q(#D@,C`@-#(Y(#0U-"!&86X!"C0@,2`P(#$R(#`@,"`P
XM(#`N,#`P(#$@.2`V-2`T,CD@-#,T(%)E8VER8W5L871I;VX!"C0@,2`P(#$R
XM(#`@,"`P(#`N,#`P(#$@.2`S,2`Q-#D@,3,T($QE86MS`0HT(#$@,"`Q,B`P
XM(#`@,"`P+C`P,"`Q(#$R(#0W(#$T.2`Q,3D@16YV96QO<&4!"C0@,2`P(#$R
XM(#`@,"`P(#`N,#`P(#$@.2`U-2`R.#D@,3,T($EN=&%K92!&86X!"C0@,2`P
XM(#$R(#`@,"`P(#`N,#`P(#$@.2`R."`R.#D@,3$T($9I;'1E<@$*-"`Q(#`@
XM,3(@,"`P(#`@,"XP,#`@,2`Y(#(X(#0R.2`Q,C0@1FEL=&5R`0HT(#$@,"`Q
XM,B`P(#`@,"`P+C`P,"`Q(#D@-S@@-#DT(#0Y(%)E8VER8W5L871E9"!A:7(!
XM"C0@,2`P(#$R(#`@,"`P(#`N,#`P(#$@.2`U-B`R.#D@-30@5F5N=&EL871I
XM;VX!"C0@,2`P(#$R(#`@,"`P(#`N,#`P(#$@.2`U-R`R.#D@,SD@365C:&%N
XM:6-A;`$*-"`Q(#`@,3(@,"`P(#`@,"XP,#`@,2`Q,B`V."`Q-3$@-3$@26YF
XM:6QT<F%T:6YG(&%I<@$*-"`Q(#`@,3(@,"`P(#`@,"XP,#`@,2`Q,B`Q,38@
XM,S,Y(#,S.2!$97!O<VET:6]N(&]N(%-U<F9A8V5S`0HT(#`@,"`Q,B`P(#`@
XM,"`P+C`P,"`Q(#D@,R`S-C0@,S`Y(&D!"C0@,"`P(#$R(#`@,"`P(#`N,#`P
XM(#$@.2`S(#,T.2`S,#D@:0$*-"`P(#`@,3(@,"`P(#`@,"XP,#`@,2`Y(#,@
XM,S(Y(#,P.2!I`0HT(#`@,"`Q-B`P(#`@,"`P+C`P,"`Q(#$S(#0T(#,Q.2`S
XM,#0@:R!!($,!"C0@,"`S,B`R-"`P(#`@,"`P+C`P,"`Q(#$W(#$T(#(Y.2`S
XM,#0@4P$*-"`Q(#`@,3(@,"`P(#`@,"XP,#`@,2`Y(#0P(#$U.2`S,3`@4V]U
X&<F-E<P$*
X`
Xend
END_OF_FILE
if test 5801 -ne `wc -c <'Examples/flow.fig.uu'`; then
    echo shar: \"'Examples/flow.fig.uu'\" unpacked with wrong size!
fi
# end of 'Examples/flow.fig.uu'
fi
if test -f 'Examples/house.fig.uu' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'Examples/house.fig.uu'\"
else
echo shar: Extracting \"'Examples/house.fig.uu'\" \(7604 characters\)
sed "s/^X//" >'Examples/house.fig.uu' <<'END_OF_FILE'
Xbegin 664 house.fig
XM(T9)1R`R+C`*.#`@,@HU(#$@,"`Q(#`@,"`P(#`@,"XP,#`@,2`P(#`@,3`U
XM+C4P,"`T,3(N-3`P(#4T(#0P.2`V.2`T-#D@,3`Y(#0V-`HU(#$@,"`Q(#`@
XM,"`P(#`@,"XP,#`@,"`P(#`@-SDS+C4P,"`T,C,N-3`P(#<S-"`T,C0@-S0Y
XM(#,X-"`W.30@,S8T"C4@,2`P(#$@,"`P(#`@,"`P+C`P,"`P(#`@,"`S.#DN
XM,C$T(#,P.2XR,30@-#`S(#,P."`S.3D@,S$Y(#,X."`S,C,*-2`Q(#`@,2`P
XM(#`@,"`P(#`N,#`P(#$@,"`P(#0V.2XP,#`@,3(T+C`P,"`T,S0@,3$Y(#0T
XM-"`Q-#D@-#<T(#$U.0HU(#$@,"`Q(#`@,"`P(#`@,"XP,#`@,"`P(#`@-3DY
XM+C`P,"`Q,C0N,#`P(#8S-"`Q,3D@-C(T(#$T.2`U.30@,34Y"C4@,2`P(#$@
XM,"`P(#`@,"`P+C`P,"`P(#`@,"`T,3<N-3`P(#,Q-RXU,#`@-#8Y(#,Q-"`T
XM-30@,S4T(#0Q-"`S-CD*-2`Q(#`@,2`P(#`@,"`P(#`N,#`P(#$@,"`P(#$V
XM,RXP,#`@,S8U+C`P,"`R,30@,S8Y(#$Y.2`S,CD@,34Y(#,Q-`HQ(#,@,"`Q
XM(#`@,"`P(#`@,"XP,#`@,2`P+C`P,"`S,#@@,S`R(#<@-R`S,#@@,S`R(#,Q
XM,R`S,#<*,2`S(#`@,2`P(#`@,"`P(#`N,#`P(#$@,"XP,#`@,S,T(#,P,B`U
XM(#4@,S,T(#,P,B`S,SD@,S`R"C$@,R`P(#$@,"`P(#`@,"`P+C`P,"`Q(#`N
XM,#`P(#,S-"`S,3D@-R`W(#,S-"`S,3D@,S,Y(#,R-`HQ(#,@,"`Q(#`@,"`P
XM(#`@,"XP,#`@,2`P+C`P,"`S,#@@,S$Y(#4@-2`S,#@@,S$Y(#,Q,R`S,3D*
XM,2`R(#`@,2`P(#`@,"`P(#`N,#`P(#`@,"XP,#`@-38Q(#$R,2`Q,2`Q-2`U
XM-3(@,3,X(#4W,B`Q,#8*,2`S(#`@,2`P(#`@,"`P(#`N,#`P(#$@,"XP,#`@
XM,C<T(#(Y.2`Q,"`Q,"`R-S0@,CDY(#(X-"`R.3D*,B`R(#`@,2`P(#`@,"`P
XM(#`N,#`P(#`@,`H)(#0Q-"`S-S0@-#,T(#,W-"`T,S0@-#DY(#0Q-"`T.3D@
XM-#$T(#,W-"`Y.3DY(#DY.3D*,B`T(#`@,2`P(#`@,"`P(#`N,#`P(#,@,"`P
XM"@D@,CDT(#(X.2`R.30@,S,T(#,T.2`S,S0@,S0Y(#(X.2`R.30@,C@Y(#DY
XM.3D@.3DY.0HR(#$@,"`Q(#`@,"`P(#`@,"XP,#`@,"`P"@D@,3D@,C(Y(#(Y
XM(#(R.2`Y.3DY(#DY.3D*,B`Q(#`@,2`P(#`@,"`P(#`N,#`P(#`@,`H)(#$Y
XM(#,V.2`R.2`S-CD@.3DY.2`Y.3DY"C(@,2`P(#$@,"`P(#`@,"`P+C`P,"`P
XM(#`*"2`Q.2`R.#D@,CD@,C@Y(#DY.3D@.3DY.0HR(#$@,"`Q(#`@,"`P(#`@
XM,"XP,#`@,"`P"@D@,3D@,S`Y(#(Y(#,P.2`Y.3DY(#DY.3D*,B`Q(#`@,2`P
XM(#`@,"`P(#`N,#`P(#`@,`H)(#(T(#(R.2`R-"`R.#D@.3DY.2`Y.3DY"C(@
XM,2`P(#$@,"`P(#`@,"`P+C`P,"`P(#`*"2`R-"`S,#D@,C0@,S8Y(#DY.3D@
XM.3DY.0HR(#$@,"`R(#`@,"`P(#`@,"XP,#`@,"`P"@D@,3`Y(#0P.2`Q,#D@
XM-#8T(#DY.3D@.3DY.0HR(#$@,"`Q(#`@,"`P(#`@,"XP,#`@,"`P"@D@-34R
XM(#$Q,B`U-3(@,3`S(#DY.3D@.3DY.0HR(#$@,"`Q(#`@,"`P(#`@,"XP,#`@
XM,"`P"@D@-3<P(#$Q,B`U-S`@,3`S(#DY.3D@.3DY.0HR(#0@,"`Q(#`@,"`P
XM(#`@,"XP,#`@,R`P(#`*"2`U-#@@,3`S(#4T."`Y,2`U-S0@.3$@-3<T(#$P
XM,R`U-#@@,3`S(#DY.3D@.3DY.0HR(#,@,"`Q(#`@,"`P(#`@,"XP,#`@,"`P
XM"@D@-SDT(#0R-"`W.30@-#DY(#0Q-"`T.3D@-#$T(#,V.2`T,#0@,S8Y(#0P
XM-"`T.3D@,C4T(#0Y.2`R-30@-#0Y(#(T-"`T-#D@,C0T(#0Y.2`Q-3D@-#DY
XM(#$U.2`S-CD@,30Y(#,V.2`Q-#D@,SDY(#$P.2`S.3D@,3`Y(#0P.2`Q-#D@
XM-#`Y(#$T.2`U,#D@.#`T(#4P.2`X,#0@-#(T(#<Y-"`T,C0@.3DY.2`Y.3DY
XM"C(@,2`P(#$@,"`P(#`@,"`P+C`P,"`P(#`*"2`W-3D@-#DY(#<U.2`U,#D@
XM.3DY.2`Y.3DY"C(@,2`P(#$@,"`P(#`@,"`P+C`P,"`P(#`*"2`V.#D@-#DY
XM(#8X.2`U,#D@.3DY.2`Y.3DY"C(@,2`P(#$@,"`P(#`@,"`P+C`P,"`P(#`*
XM"2`V.#D@-3`T(#<U.2`U,#0@.3DY.2`Y.3DY"C(@,2`P(#$@,"`P(#`@,"`P
XM+C`P,"`P(#`*"2`V-30@-3`Y(#8U-"`U,SD@-34T(#4S.2`U-30@-3`Y(#DY
XM.3D@.3DY.0HR(#$@,"`Q(#`@,"`P(#`@,"XP,#`@,"`P"@D@-3(T(#0Y.2`U
XM,C0@-3`Y(#DY.3D@.3DY.0HR(#$@,"`Q(#`@,"`P(#`@,"XP,#`@,"`P"@D@
XM-#4T(#0Y.2`T-30@-3`Y(#DY.3D@.3DY.0HR(#$@,"`Q(#`@,"`P(#`@,"XP
XM,#`@,"`P"@D@-#4T(#4P-"`U,C0@-3`T(#DY.3D@.3DY.0HR(#$@,"`Q(#`@
XM,"`P(#`@,"XP,#`@,"`P"@D@,S$T(#0Y.2`S,30@-3`Y(#DY.3D@.3DY.0HR
XM(#$@,"`Q(#`@,"`P(#`@,"XP,#`@,"`P"@D@,S<T(#0Y.2`S-S0@-3`Y(#DY
XM.3D@.3DY.0HR(#$@,"`Q(#`@,"`P(#`@,"XP,#`@,"`P"@D@,S$T(#4P-"`S
XM-S0@-3`T(#DY.3D@.3DY.0HR(#$@,"`Q(#`@,"`P(#`@,"XP,#`@,"`P"@D@
XM,C4T(#0U.2`S-CD@-#4Y(#,V.2`S-CD@-#`T(#,V.2`Y.3DY(#DY.3D*,B`T
XM(#`@,2`P(#`@,"`P(#`N,#`P(#,@,"`P"@D@,S`Y(#0V-"`S,#D@-#DT(#,V
XM-"`T.30@,S8T(#0V-"`S,#D@-#8T(#DY.3D@.3DY.0HR(#$@,"`Q(#`@,"`P
XM(#`@,"XP,#`@,"`P"@D@,C4T(#0V.2`R.#0@-#8Y(#(X-"`T.3D@.3DY.2`Y
XM.3DY"C(@,2`P(#$@,"`P(#`@,"`P+C`P,"`P(#`*"2`S-SD@,S8Y(#,W.2`T
XM.3D@.3DY.2`Y.3DY"C(@,2`P(#$@,"`P(#`@,"`P+C`P,"`P(#`*"2`W.3D@
XM,3(Y(#<Y.2`R,#D@.3DY.2`Y.3DY"C(@,2`P(#$@,"`P(#`@,"`P+C`P,"`P
XM(#`*"2`W.30@,C`Y(#@P-"`R,#D@.3DY.2`Y.3DY"C(@,2`P(#$@,"`P(#`@
XM,"`P+C`P,"`P(#`*"2`W.30@,3(Y(#@P-"`Q,CD@.3DY.2`Y.3DY"C(@,2`P
XM(#$@,"`P(#`@,"`P+C`P,"`P(#`*"2`V,30@.#0@-C8Y(#@T(#DY.3D@.3DY
XM.0HR(#$@,"`Q(#`@,"`P(#`@,"XP,#`@,"`P"@D@-C8Y(#<Y(#8V.2`X.2`Y
XM.3DY(#DY.3D*,B`Q(#`@,2`P(#`@,"`P(#`N,#`P(#`@,`H)(#8Q-"`W.2`V
XM,30@.#D@.3DY.2`Y.3DY"C(@,2`P(#$@,"`P(#`@,"`P+C`P,"`P(#`*"2`U
XM,CD@.#0@-38T(#@T(#DY.3D@.3DY.0HR(#$@,"`Q(#`@,"`P(#`@,"XP,#`@
XM,"`P"@D@-38T(#<Y(#4V-"`X.2`Y.3DY(#DY.3D*,B`Q(#`@,2`P(#`@,"`P
XM(#`N,#`P(#`@,`H)(#4R.2`W.2`U,CD@.#D@.3DY.2`Y.3DY"C(@,2`P(#$@
XM,"`P(#`@,"`P+C`P,"`P(#`*"2`S.3D@.#0@-#4T(#@T(#DY.3D@.3DY.0HR
XM(#$@,"`Q(#`@,"`P(#`@,"XP,#`@,"`P"@D@,SDY(#@Y(#,Y.2`W.2`Y.3DY
XM(#DY.3D*,B`Q(#`@,2`P(#`@,"`P(#`N,#`P(#`@,`H)(#0U-"`W.2`T-30@
XM.#D@.3DY.2`Y.3DY"C(@,2`P(#$@,"`P(#`@,"`P+C`P,"`P(#`*"2`R-C0@
XM,3`T(#(V-"`Q-C0@.3DY.2`Y.3DY"C(@,2`P(#$@,"`P(#`@,"`P+C`P,"`P
XM(#`*"2`R-3D@,3`T(#(V.2`Q,#0@.3DY.2`Y.3DY"C(@,2`P(#$@,"`P(#`@
XM,"`P+C`P,"`P(#`*"2`R-3D@,38T(#(V.2`Q-C0@.3DY.2`Y.3DY"C(@,2`P
XM(#(@,"`P(#`@,"`P+C`P,"`P(#`*"2`S.#D@,S`Y(#,X.2`S,C0@.3DY.2`Y
XM.3DY"C(@,2`P(#(@,"`P(#`@,"`P+C`P,"`P(#`*"2`T,S0@,3$Y(#0W-"`Q
XM,3D@.3DY.2`Y.3DY"C(@,R`P(#$@,"`P(#`@,"`P+C`P,"`P(#`*"2`T-S0@
XM,34Y(#0X-"`Q-3D@-#@T(#(P.2`U.#0@,C`Y(#4X-"`Q-3D@-3DT(#$U.2`U
XM.30@,C(T(#4X-"`R,C0@-3@T(#(Q.2`U,SD@,C$Y(#4S.2`R-S0@-3@T(#(W
XM-"`U.#0@,C8Y(#4Y-"`R-CD@-3DT(#(W-"`U.3D@,C<T(#4Y.2`R.#0@-#8Y
XM(#(X-"`T-CD@,C<T(#0W-"`R-S0@-#<T(#(V.2`T.#0@,C8Y(#0X-"`R-S0@
XM-3(Y(#(W-"`U,CD@,C$Y(#0X-"`R,3D@-#@T(#(R-"`T-S0@,C(T(#0W-"`Q
XM-3D@.3DY.2`Y.3DY"C(@,2`P(#$@,"`P(#`@,"`P+C`P,"`P(#`*"2`T.#0@
XM,34Y(#4X-"`Q-3D@.3DY.2`Y.3DY"C(@,R`P(#$@,"`P(#`@,"`P+C`P,"`P
XM(#`*"2`W.30@.#D@-3DT(#@Y(#4Y-"`Q,3D@-3@T(#$Q.2`U.#0@.#D@-#@T
XM(#@Y(#0X-"`Q,3D@-#<T(#$Q.2`T-S0@.#D@,C8Y(#@Y(#(V.2`R-S0@-#$T
XM(#(W-"`T,30@,S$T(#0P-"`S,30@-#`T(#(X-"`S-3D@,C@T(#,U.2`S,#0@
XM,S@Y(#,P-"`S.#D@,S`Y(#,U-"`S,#D@,S4T(#(X-"`R-3D@,C@T(#(U.2`S
XM,#D@,C0Y(#,P.2`R-#D@,C8Y(#$U.2`R-CD@,34Y(#,Q-"`Q-#D@,S$T(#$T
XM.2`R-3D@,C4Y(#(U.2`R-3D@,3<Y(#(Y(#$W.2`R.2`S.3D@-30@,SDY(#4T
XM(#0P.2`Q.2`T,#D@,3D@,38Y(#(U.2`Q-CD@,C4Y(#<Y(#@P-"`W.2`X,#0@
XM,S8T(#<Y-"`S-C0@-SDT(#(X-"`V-30@,C@T(#8U-"`R-S0@-SDT(#(W-"`W
XM.30@.#D@.3DY.2`Y.3DY"C(@-"`P(#$@,"`P(#`@,"`P+C`P,"`V(#`@,`H)
XM(#0X.2`Y-"`T.#D@,3$T(#4Q.2`Q,30@-3$Y(#DT(#0X.2`Y-"`Y.3DY(#DY
XM.3D*,B`T(#`@,2`P(#`@,"`P(#`N,#`P(#D@,"`P"@D@-#@T(#@Y(#0X-"`Q
XM,3D@-3(T(#$Q.2`U,C0@.#D@-#@T(#@Y(#DY.3D@.3DY.0HR(#$@,"`R(#`@
XM,"`P(#`@,"XP,#`@,"`P"@D@-#8Y(#(W-"`T,3D@,C4T(#DY.3D@.3DY.0HR
XM(#$@,"`R(#`@,"`P(#`@,"XP,#`@,"`P"@D@-#4T(#(R-"`T-S0@,C8Y(#DY
XM.3D@.3DY.0HR(#$@,"`R(#`@,"`P(#`@,"XP,#`@,"`P"@D@-C$S(#(R,R`U
XM.30@,C8Y(#DY.3D@.3DY.0HR(#$@,"`R(#`@,"`P(#`@,"XP,#`@,"`P"@D@
XM-3DY(#(W-"`V-#D@,C0Y(#DY.3D@.3DY.0HR(#0@,"`Q(#`@,"`P(#`@,"XP
XM,#`@.2`P(#`*"2`T.#D@,38T(#0X.2`R,#0@-3<Y(#(P-"`U-SD@,38T(#0X
XM.2`Q-C0@.3DY.2`Y.3DY"C(@,2`P(#(@,"`P(#`@,"`P+C`P,"`P(#`*"2`U
XM.30@,3$Y(#8S-"`Q,3D@.3DY.2`Y.3DY"C(@,2`P(#(@,"`P(#`@,"`P+C`P
XM,"`P(#`*"2`W,S0@-#(T(#<Y-"`T,C0@.3DY.2`Y.3DY"C(@,2`P(#(@,"`P
XM(#`@,"`P+C`P,"`P(#`*"2`T,30@,S$T(#0V.2`S,30@.3DY.2`Y.3DY"C(@
XM,2`P(#$@,"`P(#`@,"`P+C`P,"`P(#`*"2`R,30@,3<Y(#(Q-"`R-3D@.3DY
XM.2`Y.3DY"C(@,2`P(#(@,"`P(#`@,"`P+C`P,"`P(#`*"2`R,30@,S8Y(#$U
XM.2`S-CD@.3DY.2`Y.3DY"C(@,2`P(#$@,"`P(#`@,"`P+C`P,"`P(#`*"2`Q
XM.2`T,#D@,3D@-#@Y(#$T.2`T.#D@.3DY.2`Y.3DY"C0@,"`P(#$R(#`@,"`P
XM(#`N,#`P(#$@.2`V(#0Q.2`T,S0@1@$*-"`P(#`@,3(@,"`P(#`@,"XP,#`@
XM,2`Y(#8@-#$Y(#0Q.2!"`0HT(#`@,"`Q,B`P(#`@,"`P+C`P,"`Q(#D@,C0@
XM-3`T(#$S.2!"871H`0HT(#`@,"`Q,B`P(#`@,"`P+C`P,"`Q(#$Q(#8V(#4S
XM.2`S.#0@3&EV:6YG(%)O;VT!"C0@,"`P(#$R(#`@,"`P(#`N,#`P(#$@.2`T
XM,B`V-SD@,3@T($)E9')O;VT!"C0@,"`P(#$R(#`@,"`P(#`N,#`P(#$@.2`T
XM,B`S,S0@,3@T($)E9')O;VT!"C0@,"`P(#$R(#`@,"`P(#`N,#`P(#$@,3$@
XM-#(@-30@,CDT($QA=6YD<GD!"C0@,"`P(#$R(#`@,"`P(#`N,#`P(#$@.2`T
XM,B`R,SD@,SDY($MI=&-H96X!"C0@,"`P(#$R(#`@,"`P(#`N,#`P(#$@,3`@
XM,3@@,S<T(#(Y.2!#3"X!"C0@,"`P(#$R(#`@,"`P(#`N,#`P(#$@,3`@,3@@
XM,C(Y(#(R.2!#3"X!"C0@,"`P(#$R(#`@,"`P(#`N,#`P(#$@,3`@,3@@-34T
XM(#(U-"!#3"X!"C0@,"`P(#$R(#`@,"`P(#`N,#`P(#$@,3`@,3@@-#DT(#(U
X'-"!#3"X!"BX!
X`
Xend
END_OF_FILE
if test 7604 -ne `wc -c <'Examples/house.fig.uu'`; then
    echo shar: \"'Examples/house.fig.uu'\" unpacked with wrong size!
fi
# end of 'Examples/house.fig.uu'
fi
if test -f 'Examples/houseC.fig.uu' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'Examples/houseC.fig.uu'\"
else
echo shar: Extracting \"'Examples/houseC.fig.uu'\" \(7043 characters\)
sed "s/^X//" >'Examples/houseC.fig.uu' <<'END_OF_FILE'
Xbegin 664 houseC.fig
XM(T9)1R`R+C`*.#`@,@HU(#$@,"`Q(#`@,"`P(#`@,"XP,#`@,2`P(#`@,SDT
XM+C8U."`R,CDN-C4X(#,Y-"`R-S0@-#(W(#(V,"`T,SD@,C(Y"C4@,2`P(#$@
XM,"`P(#`@,"`P+C`P,"`Q(#`@,"`R-3<N,#`P(#(P-2XP,#`@,C0T(#(P-"`R
XM-#@@,C$U(#(U.2`R,3D*,2`R(#`@,2`P(#`@,"`P(#`N,#`P(#`@,"XP,#`@
XM,S4V(#$R,2`Q,2`Q-2`S-#<@,3,X(#,V-R`Q,#8*,2`Q(#`@,2`P(#`@,"`P
XM(#`N,#`P(#$@,"XP,#`@-#8S(#$R.2`Q,2`Q-B`T-C,@,3(Y(#0W,R`Q-#0*
XM,2`Q(#`@,2`P(#`@,"`P(#`N,#`P(#$@,"XP,#`@-#8U(#$W,B`Q,2`Q-B`T
XM-C4@,3<R(#0W-2`Q.#<*,B`Q(#`@,2`P(#`@,"`P(#`N,#`P(#`@,`H)(#@Y
XM(#$X-"`Q-CD@,3@T(#DY.3D@.3DY.0HR(#$@,"`Q(#`@,"`P(#`@,"XP,#`@
XM,"`P"@D@.#D@,38Y(#$V.2`Q-CD@.3DY.2`Y.3DY"C(@,2`P(#$@,"`P(#`@
XM,"`P+C`P,"`P(#`*"2`Q-SD@,38Y(#(U.2`Q-CD@.3DY.2`Y.3DY"C(@,2`P
XM(#$@,"`P(#`@,"`P+C`P,"`P(#`*"2`Q-SD@,3@T(#(U.2`Q.#0@.3DY.2`Y
XM.3DY"C(@,2`P(#$@,"`P(#`@,"`P+C`P,"`P(#`*"2`Q-SD@,3DY(#(U.2`Q
XM.3D@.3DY.2`Y.3DY"C(@,2`P(#$@,"`P(#`@,"`P+C`P,"`P(#`*"2`X.2`R
XM.#D@,38Y(#(X.2`Y.3DY(#DY.3D*,B`Q(#`@,2`P(#`@,"`P(#`N,#`P(#`@
XM,`H)(#@Y(#(W-"`Q-CD@,C<T(#DY.3D@.3DY.0HR(#$@,"`Q(#`@,"`P(#`@
XM,"XP,#`@,"`P"@D@.#D@,C4Y(#$V.2`R-3D@.3DY.2`Y.3DY"C(@,2`P(#$@
XM,"`P(#`@,"`P+C`P,"`P(#`*"2`X.2`R-#0@,38Y(#(T-"`Y.3DY(#DY.3D*
XM,B`Q(#`@,2`P(#`@,"`P(#`N,#`P(#`@,`H)(#@Y(#(R.2`Q-CD@,C(Y(#DY
XM.3D@.3DY.0HR(#$@,"`Q(#`@,"`P(#`@,"XP,#`@,"`P"@D@.#D@,C$T(#$V
XM.2`R,30@.3DY.2`Y.3DY"C(@,2`P(#$@,"`P(#`@,"`P+C`P,"`P(#`*"2`X
XM.2`Q.3D@,38Y(#$Y.2`Y.3DY(#DY.3D*,B`Q(#`@,2`P(#`@,"`P(#`N,#`P
XM(#`@,`H)(#,T-R`Q,30@,S0W(#$P,R`Y.3DY(#DY.3D*,B`Q(#`@,2`P(#`@
XM,"`P(#`N,#`P(#`@,`H)(#,V-2`Q,3(@,S8U(#$P,R`Y.3DY(#DY.3D*,B`T
XM(#`@,2`P(#`@,"`P(#`N,#`P(#,@,"`P"@D@,S0S(#$P,R`S-#,@.3$@,S8Y
XM(#DQ(#,V.2`Q,#,@,S0S(#$P,R`Y.3DY(#DY.3D*,B`R(#`@,2`P(#`@,"`P
XM(#`N,#`P(#`@,`H)(#$X-"`S,#,@,3@T(#,R.2`R,#D@,S(Y(#(P.2`S,#,@
XM,3@T(#,P,R`Y.3DY(#DY.3D*,B`T(#`@,2`P(#`@,"`P(#`N,#`P(#0@,"`P
XM"@D@,C`T(#0U.2`S,CD@-#4Y(#,R.2`S-#D@,C`T(#,T.2`R,#0@-#4Y(#DY
XM.3D@.3DY.0HR(#0@,"`Q(#`@,"`P(#`@,"XP,#`@,R`P(#`*"2`R,#0@,S0T
XM(#$X.2`S-#0@,3@Y(#0V-"`R,#0@-#8T(#(P-"`S-#0@.3DY.2`Y.3DY"C(@
XM,2`P(#$@,"`P(#`@,"`P+C`P,"`P(#`*"2`V-3D@-#DY(#8U.2`U,#D@.3DY
XM.2`Y.3DY"C(@,2`P(#$@,"`P(#`@,"`P+C`P,"`P(#`*"2`U.3D@-#DY(#4Y
XM.2`U,#D@.3DY.2`Y.3DY"C(@,2`P(#$@,"`P(#`@,"`P+C`P,"`P(#`*"2`U
XM.3D@-3`T(#8U.2`U,#0@.3DY.2`Y.3DY"C(@,2`P(#$@,"`P(#`@,"`P+C`P
XM,"`P(#`*"2`R,SD@-#DY(#(S.2`U,#D@.3DY.2`Y.3DY"C(@,2`P(#$@,"`P
XM(#`@,"`P+C`P,"`P(#`*"2`R.3D@-#DY(#(Y.2`U,#D@.3DY.2`Y.3DY"C(@
XM,2`P(#$@,"`P(#`@,"`P+C`P,"`P(#`*"2`R,SD@-3`T(#(Y.2`U,#0@.3DY
XM.2`Y.3DY"C(@,2`P(#$@,"`P(#`@,"`P+C`P,"`P(#`*"2`S-C0@-SD@,S8T
XM(#@Y(#DY.3D@.3DY.0HR(#$@,"`Q(#`@,"`P(#`@,"XP,#`@,"`P"@D@-#`Y
XM(#<Y(#0P.2`X.2`Y.3DY(#DY.3D*,B`S(#`@,2`P(#`@,"`P(#`N,#`P(#`@
XM,`H)(#0V-"`S-CD@-#4T(#,V.2`T-30@,S0Y(#4Q.2`S-#D@-3$Y(#0Y.2`W
XM,#0@-#DY(#<P-"`X.2`V,#D@.#D@-C`Y(#(R.2`U-CD@,C(Y(#4V.2`R,3D@
XM-3DY(#(Q.2`U.3D@.#D@-#@Y(#@Y(#0X.2`R,3D@-3$Y(#(Q.2`U,3D@,C(Y
XM(#0S.2`R,CD@-#,Y(#(Q.2`T-SD@,C$Y(#0W.2`X.2`T-CD@.#D@-#8Y(#@T
XM(#0T.2`X-"`T-#D@.#D@,C8Y(#@Y(#(V.2`Q.#D@,S(Y(#$X.2`S,CD@,C$Y
XM(#,Y-"`R,3D@,SDT(#(R.2`S,3D@,C(Y(#(U.2`R,CD@,C4Y(#(Q.2`S,3D@
XM,C$Y(#,Q.2`Q.3D@,C8Y(#$Y.2`R-CD@,C`T(#(U.2`R,#0@,C4Y(#@Y(#$V
XM.2`X.2`Q-CD@-SD@-S$T(#<Y(#<Q-"`U,#D@,38Y(#4P.2`Q-CD@,38Y(#$W
XM.2`Q-CD@,3<Y(#0Y.2`T-30@-#DY(#0U-"`T.#D@-#8T(#0X.2`T-C0@-#DY
XM(#4P.2`T.3D@-3`Y(#,U.2`T-C0@,S4Y(#0V-"`S-CD@.3DY.2`Y.3DY"C(@
XM,2`P(#(@,"`P(#`@,"`P+C`P,"`P(#`*"2`T-C`@-#(T(#0V,"`T.#8@.3DY
XM.2`Y.3DY"C(@,2`P(#(@,"`P(#`@,"`P+C`P,"`P(#`*"2`T-3<@,S<R(#0U
XM-R`T,CD@.3DY.2`Y.3DY"C(@,2`P(#$@,"`P(#`@,"`P+C`P,"`P(#`*"2`Q
XM-CD@-#0T(#$W.2`T-#0@.3DY.2`Y.3DY"C(@,2`P(#$@,"`P(#`@,"`P+C`P
XM,"`P(#`*"2`Q-SD@,S<T(#$V.2`S-S0@.3DY.2`Y.3DY"C(@,2`P(#$@,"`P
XM(#`@,"`P+C`P,"`Q(#`*"3`@,"`Q+C`P,"`T+C`P,"`X+C`P,`H)(#(Q.2`Q
XM.30@,C$Y(#$S.2`R,#0@,3(T(#$T-"`Q,C0@,3(Y(#$S.2`Q,CD@,CDY(#DY
XM.3D@.3DY.0HR(#$@,"`Q(#`@,"`P(#`@,"XP,#`@,"`P"@D@,3$Y(#@T(#$T
XM.2`X-"`Y.3DY(#DY.3D*,B`Q(#`@,2`P(#`@,"`P(#`N,#`P(#`@,`H)(#$T
XM.2`W.2`Q-#D@.#D@.3DY.2`Y.3DY"C(@,2`P(#$@,"`P(#`@,"`P+C`P,"`P
XM(#`*"2`Q,3D@-SD@,3$Y(#@Y(#DY.3D@.3DY.0HR(#$@,"`Q(#`@,"`P(#`@
XM,"XP,#`@,"`P"@D@.#0@.3D@.#0@,3(Y(#DY.3D@.3DY.0HR(#$@,"`Q(#`@
XM,"`P(#`@,"XP,#`@,"`P"@D@-SD@,3(Y(#@Y(#$R.2`Y.3DY(#DY.3D*,B`Q
XM(#`@,2`P(#`@,"`P(#`N,#`P(#`@,`H)(#<Y(#DY(#@Y(#DY(#DY.3D@.3DY
XM.0HR(#$@,"`Q(#`@,"`P(#`@,"XP,#`@,"`P"@D@,S8T(#@T(#0P.2`X-"`Y
XM.3DY(#DY.3D*,B`S(#`@,2`P(#`@,"`P(#`N,#`P(#`@,`H)(#$V.2`W.2`W
XM.2`W.2`W.2`S,3D@,38Y(#,Q.2`Q-CD@,S`Y(#@Y(#,P.2`X.2`X.2`Q-CD@
XM.#D@,38Y(#<Y(#DY.3D@.3DY.0HR(#0@,"`Q(#`@,"`P(#`@,"XP,#`@-R`P
XM(#`*"2`R-S0@.30@,C<T(#$X-"`S,3D@,3@T(#,Q.2`Y-"`R-S0@.30@.3DY
XM.2`Y.3DY"C(@,2`P(#$@,"`P(#`@,"`P+C`P,"`P(#`*"2`S,C0@.#D@,S(T
XM(#$X.2`Y.3DY(#DY.3D*,B`Q(#`@,2`P(#`@,"`P(#`N,#`P(#`@,`H)(#$W
XM-"`S-S0@,3<T(#0T-"`Y.3DY(#DY.3D*,B`R(#`@,2`P(#`@,"`P(#`N,#`P
XM(#`@,`H)(#0T.2`X-"`T-#D@.30@-#8Y(#DT(#0V.2`X-"`T-#D@.#0@.3DY
XM.2`Y.3DY"C(@,2`P(#$@,"`P(#`@,"`P+C`P,"`P(#`*"2`T-#0@.#D@-#0T
XM(#(Q.2`Y.3DY(#DY.3D*,B`Q(#`@,B`P(#`@,"`P(#`N,#`P(#`@,`H)(#,Y
XM-"`R-S0@,SDT(#(R.2`Y.3DY(#DY.3D*,B`Q(#`@,2`P(#`@,"`P(#`N,#`P
XM(#`@,`H)(#4Q.2`R,3D@-3$Y(#$Q.2`U-CD@,3$Y(#4V.2`R,3D@.3DY.2`Y
XM.3DY"C(@,2`P(#$@,"`P(#`@,"`P+C`P,"`P(#`*"2`R-S0@,3DY(#(W-"`R
XM,3D@.3DY.2`Y.3DY"C(@,2`P(#(@,"`P(#`@,"`P+C`P,"`P(#`*"2`R-#0@
XM,C`T(#(U.2`R,#0@.3DY.2`Y.3DY"C(@,B`P(#$@,"`P(#`@,"`P+C`P,"`P
XM(#`*"2`V.3D@.3D@-C4R(#DY(#8U,B`Q,CD@-CDY(#$R.2`V.3D@.3D@.3DY
XM.2`Y.3DY"C(@-"`P(#$@,"`P(#`@,"`P+C`P,"`S(#`@,`H)(#(V-R`R,S$@
XM,C8W(#(V-"`S,S0@,C8T(#,S-"`R,S$@,C8W(#(S,2`Y.3DY(#DY.3D*,B`T
XM(#`@,2`P(#`@,"`P(#`N,#`P(#,@,"`P"@D@,S,U(#(S,2`S,S4@,C8T(#,X
XM.2`R-C0@,S@Y(#(S,2`S,S4@,C,Q(#DY.3D@.3DY.0HR(#(@,"`Q(#`@,"`P
XM(#`@,"XP,#`@,"`P"@D@,S<Y(#0Y-"`T,C<@-#DT(#0R-R`T-S`@,S<Y(#0W
XM,"`S-SD@-#DT(#DY.3D@.3DY.0HR(#(@,"`Q(#`@,"`P(#`@,"XP,#`@,"`P
XM"@D@-#4T(#(R.2`U,30@,C(Y(#4Q-"`R-3D@-#4T(#(U.2`T-30@,C(Y(#DY
XM.3D@.3DY.0HR(#0@,"`Q(#`@,"`P(#`@,"XP,#`@,R`P(#`*"2`V-SD@-#,Y
XM(#8W.2`T.#D@-3<Y(#0X.2`U-SD@-#,Y(#8W.2`T,SD@.3DY.2`Y.3DY"C(@
XM,2`P(#$@,"`P(#`@,"`P+C`P,"`P(#`*"2`W,#D@,S<Y(#<P.2`T,SD@.3DY
XM.2`Y.3DY"C(@,2`P(#$@,"`P(#`@,"`P+C`P,"`P(#`*"2`W,#0@,S<Y(#<Q
XM-"`S-SD@.3DY.2`Y.3DY"C(@,2`P(#$@,"`P(#`@,"`P+C`P,"`P(#`*"2`W
XM,#0@-#,Y(#<Q-"`T,SD@.3DY.2`Y.3DY"C(@,2`P(#$@,"`P(#`@,"`P+C`P
XM,"`P(#`*"2`W,#D@,30Y(#<P.2`R,#D@.3DY.2`Y.3DY"C(@,2`P(#$@,"`P
XM(#`@,"`P+C`P,"`P(#`*"2`W,#0@,C`Y(#<Q-"`R,#D@.3DY.2`Y.3DY"C(@
XM,2`P(#$@,"`P(#`@,"`P+C`P,"`P(#`*"2`W,#0@,30Y(#<Q-"`Q-#D@.3DY
XM.2`Y.3DY"C0@,"`P(#$R(#`@,"`P(#`N,#`P(#$@.2`R-"`R,#`@,C$V($1/
XM5TX!"C0@,"`P(#$R(#`@,"`P(#`N,#`P(#$@.2`V(#$Y,2`S,C$@5`$*-"`P
XM(#`@,3(@,"`P(#`@,"XP,#`@,2`Y(#$X(#(T.2`T,#D@0D5$`0HT(#`@,"`Q
XM,B`P(#`@,"`P+C`P,"`Q(#D@,S`@-C`T(#,P-"!35%5$60$*-"`P(#`@,3(@
XM,"`P(#`@,"XP,#`@,2`Y(#@T(#(V."`S,#4@34%35$52($)%1%)/3TT!"C0@
XM,"`P(#$R(#`@,"`P(#`N,#`P(#$@.2`R-"`S-C0@,30Y($)!5$@!"C0@,"`P
XM(#$R(#`@,"`P(#`N,#`P(#$@,3$@-C`@-3D@,SDY(&AO=7-E0RYF:6<!"C0@
XM,"`P(#$R(#`@,"`P(#`N,#`P(#$@.2`Q,B`R.#D@,C0Y($12`0HT(#`@,"`Q
XM,B`P(#`@,"`P+C`P,"`Q(#D@,3(@,S4Y(#(T.2!$4@$*-"`P(#`@,3(@,"`P
XM(#`@,"XP,#`@,2`Y(#$X(#8V-"`Q,3D@4T57`0HT(#`@,"`Q,B`P(#`@,"`P
XM+C`P,"`Q(#$P(#$X(#4S-"`Q-30@0TPN`0HT(#`@,"`Q,B`P(#`@,"`P+C`P
XM,"`Q(#$P(#$X(#0W-"`T,CD@0TPN`0HT(#`@,"`Q,B`P(#`@,"`P+C`P,"`Q
XM(#D@,3(@-#<T(#(T.2!$4@$*-"`P(#`@,3(@,"`P(#`@,"XP,#`@,2`Y(#$R
XM(#,Y-"`T.#0@1%(!"C0@,"`P(#$R(#`@,"`P(#`N,#`P(#$@.2`R-"`V,30@
XM-#8Y($1%4TL!"C0@,"`P(#$R(#`@,"`P(#`N,#`P(#$@.2`Q,B`R.#D@,C$T
X%($-,`0I%
X`
Xend
END_OF_FILE
if test 7043 -ne `wc -c <'Examples/houseC.fig.uu'`; then
    echo shar: \"'Examples/houseC.fig.uu'\" unpacked with wrong size!
fi
# end of 'Examples/houseC.fig.uu'
fi
if test -f 'd_intspline.c' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'d_intspline.c'\"
else
echo shar: Extracting \"'d_intspline.c'\" \(7475 characters\)
sed "s/^X//" >'d_intspline.c' <<'END_OF_FILE'
X/*
X * FIG : Facility for Interactive Generation of figures
X * Copyright (c) 1985 by Supoj Sutanthavibul
X *
X * "Permission to use, copy, modify, distribute, and sell this software and its
X * documentation for any purpose is hereby granted without fee, provided that
X * the above copyright notice appear in all copies and that both that
X * copyright notice and this permission notice appear in supporting
X * documentation, and that the name of M.I.T. not be used in advertising or
X * publicity pertaining to distribution of the software without specific,
X * written prior permission.  M.I.T. makes no representations about the
X * suitability of this software for any purpose.  It is provided "as is"
X * without express or implied warranty."
X *
X */
X
X#include "fig.h"
X#include "resources.h"
X#include "mode.h"
X#include "object.h"
X#include "paintop.h"
X#include "u_create.h"
X#include "u_elastic.h"
X#include "u_list.h"
X#include "w_canvas.h"
X#include "w_mousefun.h"
X
Xstatic int	create_intsplineobject();
Xstatic int	init_intspline_drawing();
X
Xintspline_drawing_selected()
X{
X    set_mousefun("first point", "", "");
X    canvas_kbd_proc = null_proc;
X    canvas_locmove_proc = null_proc;
X    canvas_leftbut_proc = init_intspline_drawing;
X    canvas_middlebut_proc = null_proc;
X    canvas_rightbut_proc = null_proc;
X    set_cursor(arrow_cursor);
X    reset_action_on();
X}
X
Xstatic
Xinit_intspline_drawing(x, y)
X    int		    x, y;
X{
X    min_num_points = 3;
X    init_trace_drawing(x, y);
X    canvas_middlebut_save = create_intsplineobject;
X    return_proc = intspline_drawing_selected;
X}
X
Xstatic
Xcreate_intsplineobject(x, y)
X    int		    x, y;
X{
X    F_spline	   *spline;
X
X    if (x != fix_x || y != fix_y || num_point < min_num_points) {
X	if (manhattan_mode || mountain_mode)
X	    get_direction(x, y);
X	else if (latexline_mode || latexarrow_mode)
X	    get_latexpoint(x, y);
X	else
X	    get_intermediatepoint(x, y);
X    }
X    elastic_line();
X    if ((spline = create_spline()) == NULL) {
X	if (num_point == 1) {
X	    free((char *) cur_point);
X	    cur_point = NULL;
X	}
X	free((char *) first_point);
X	first_point = NULL;
X	return;
X    }
X    spline->style = cur_linestyle;
X    spline->thickness = cur_linewidth;
X    spline->style_val = cur_styleval * (cur_linewidth + 1) / 2;
X    spline->color = cur_color;
X    spline->depth = 0;
X    spline->fill_style = cur_fillstyle;
X    /*
X     * The current fill style is saved in all intspline objects (but support
X     * for filling may not be available in all fig2dev languages).
X     */
X    spline->pen = 0;
X    spline->points = first_point;
X    spline->controls = NULL;
X    spline->next = NULL;
X    cur_x = cur_y = fix_x = fix_y = 0;	/* used in elastic_moveline */
X    elastic_moveline(spline->points);	/* erase control vector */
X    /* initialize to no arrows - changed below if necessary */
X    spline->for_arrow = NULL;
X    spline->back_arrow = NULL;
X    if (cur_mode == F_CLOSED_INTSPLINE) {
X	spline->type = T_CLOSED_INTERP;
X	num_point++;
X	append_point(first_point->x, first_point->y, &cur_point);
X    } else {
X	spline->type = T_OPEN_INTERP;
X	if (autoforwardarrow_mode)
X	    spline->for_arrow = forward_arrow();
X	if (autobackwardarrow_mode)
X	    spline->back_arrow = backward_arrow();
X    }
X    make_control_points(spline);
X    draw_intspline(spline, PAINT);
X    if (appres.DEBUG) {
X	int		xmin, ymin, xmax, ymax;
X
X	spline_bound(spline, &xmin, &ymin, &xmax, &ymax);
X	elastic_box(xmin, ymin, xmax, ymax);
X    }
X    add_spline(spline);
X    intspline_drawing_selected();
X    draw_mousefun_canvas();
X}
X
X/* Tension : 0 (min) -> 1 (max)	 */
X
Xcreate_control_list(s)
X    F_spline	   *s;
X{
X    F_point	   *p;
X    F_control	   *cp;
X
X    if ((cp = create_cpoint()) == NULL)
X	return (-1);
X
X    s->controls = cp;
X    for (p = s->points->next; p != NULL; p = p->next) {
X	if ((cp->next = create_cpoint()) == NULL)
X	    return (-1);
X	cp = cp->next;
X    }
X    cp->next = NULL;
X    return (1);
X}
X
Xmake_control_points(s)
X    F_spline	   *s;
X{
X    if (-1 == create_control_list(s))
X	return;
X
X    remake_control_points(s);
X}
X
Xremake_control_points(s)
X    F_spline	   *s;
X{
X    if (s->type == T_CLOSED_INTERP)
X	compute_cp(s->points, s->controls, CLOSED_PATH);
X    else
X	compute_cp(s->points, s->controls, OPEN_PATH);
X}
X
X#define		T		0.45
X#define		_2xPI		6.2832
X#define		_1dSQR2		0.7071
X#define		_SQR2		1.4142
X
Xcompute_cp(points, controls, path)
X    F_point	   *points;
X    F_control	   *controls;
X    int		    path;
X{
X    F_control	   *cp, *cpn;
X    F_point	   *p, *p2, *pk;/* Pk is the next-to-last point. */
X    float	    dx, dy;
X    float	    x1, y1, x2, y2, x3, y3;
X    float	    l1, l2, theta1, theta2;
X
X    x1 = points->x;
X    y1 = points->y;
X    pk = p2 = points->next;
X    x2 = p2->x;
X    y2 = p2->y;
X    p = p2->next;
X    x3 = p->x;
X    y3 = p->y;
X
X    dx = x1 - x2;
X    dy = y2 - y1;
X    l1 = sqrt((double) (dx * dx + dy * dy));
X    if (l1 == 0.0)
X	theta1 = 0.0;
X    else
X	theta1 = atan2((double) dy, (double) dx);
X    dx = x3 - x2;
X    dy = y2 - y3;
X    l2 = sqrt((double) (dx * dx + dy * dy));
X    if (l2 == 0.0)
X	theta2 = 0.0;
X    else
X	theta2 = atan2((double) dy, (double) dx);
X    /* -PI <= theta1, theta2 <= PI */
X    if (theta1 < 0)
X	theta1 += _2xPI;
X    if (theta2 < 0)
X	theta2 += _2xPI;
X    /* 0 <= theta1, theta2 < 2PI */
X
X    cp = controls->next;
X    control_points(x2, y2, l1, l2, theta1, theta2, T, cp);
X    /* control points for (x2, y2) */
X    if (path == OPEN_PATH) {
X	controls->lx = 0.0;
X	controls->ly = 0.0;
X	controls->rx = (x1 + 3 * cp->lx) / 4;
X	controls->ry = (y1 + 3 * cp->ly) / 4;
X	cp->lx = (3 * cp->lx + x2) / 4;
X	cp->ly = (3 * cp->ly + y2) / 4;
X    }
X    while (1) {
X	x2 = x3;
X	y2 = y3;
X	l1 = l2;
X	if (theta2 >= M_PI)
X	    theta1 = theta2 - M_PI;
X	else
X	    theta1 = theta2 + M_PI;
X	if ((p = p->next) == NULL)
X	    break;
X	pk = pk->next;
X	x3 = p->x;
X	y3 = p->y;
X	dx = x3 - x2;
X	dy = y2 - y3;
X	l2 = sqrt((double) (dx * dx + dy * dy));
X	if (l2 == 0.0)
X	    theta2 = 0.0;
X	else
X	    theta2 = atan2((double) dy, (double) dx);
X	if (theta2 < 0)
X	    theta2 += _2xPI;
X	cp = cp->next;
X	control_points(x2, y2, l1, l2, theta1, theta2, T, cp);
X    };
X
X    if (path == CLOSED_PATH) {
X	dx = p2->x - x2;
X	dy = y2 - p2->y;
X	l2 = sqrt((double) (dx * dx + dy * dy));
X	theta2 = atan2((double) dy, (double) dx);
X	if (theta2 < 0)
X	    theta2 += _2xPI;
X	cp = cp->next;
X	control_points(x2, y2, l1, l2, theta1, theta2, T, cp);
X	controls->lx = cp->lx;
X	controls->ly = cp->ly;
X	controls->rx = cp->rx;
X	controls->ry = cp->ry;
X    } else {
X	cpn = cp->next;
X	cpn->lx = (3 * cp->rx + x2) / 4;
X	cpn->ly = (3 * cp->ry + y2) / 4;
X	cpn->rx = 0.0;
X	cpn->ry = 0.0;
X	cp->rx = (pk->x + 3 * cp->rx) / 4;
X	cp->ry = (pk->y + 3 * cp->ry) / 4;
X    }
X}
X
X/*
X * The parameter t is the tension.  It must range in [0, 1]. The bigger the
X * value of t, the higher the tension.
X */
X
Xcontrol_points(x, y, l1, l2, theta1, theta2, t, cp)
X    float	    x, y, l1, l2, theta1, theta2, t;
X    F_control	   *cp;
X{
X    float	    s, theta, r = 1 - t;
X
X    /* 0 <= theta1, theta2 < 2PI */
X
X    theta = (theta1 + theta2) / 2;
X
X    if (theta1 > theta2) {
X	s = sin((double) (theta - theta2));
X	theta1 = theta + M_PI_2;
X	theta2 = theta - M_PI_2;
X    } else {
X	s = sin((double) (theta2 - theta));
X	theta1 = theta - M_PI_2;
X	theta2 = theta + M_PI_2;
X    }
X    if (s > _1dSQR2)
X	s = _SQR2 - s;
X    s *= r;
X    l1 *= s;
X    l2 *= s;
X    cp->lx = x + l1 * cos((double) theta1);
X    cp->ly = y - l1 * sin((double) theta1);
X    cp->rx = x + l2 * cos((double) theta2);
X    cp->ry = y - l2 * sin((double) theta2);
X}
END_OF_FILE
if test 7475 -ne `wc -c <'d_intspline.c'`; then
    echo shar: \"'d_intspline.c'\" unpacked with wrong size!
fi
# end of 'd_intspline.c'
fi
if test -f 'w_print.c' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'w_print.c'\"
else
echo shar: Extracting \"'w_print.c'\" \(7453 characters\)
sed "s/^X//" >'w_print.c' <<'END_OF_FILE'
X/*
X * FIG : Facility for Interactive Generation of figures
X * Copyright (c) 1985 by Supoj Sutanthavibul
X *
X * "Permission to use, copy, modify, distribute, and sell this software and its
X * documentation for any purpose is hereby granted without fee, provided that
X * the above copyright notice appear in all copies and that both that
X * copyright notice and this permission notice appear in supporting
X * documentation, and that the name of M.I.T. not be used in advertising or
X * publicity pertaining to distribution of the software without specific,
X * written prior permission.  M.I.T. makes no representations about the
X * suitability of this software for any purpose.  It is provided "as is"
X * without express or implied warranty."
X *
X */
X
X/* IMPORTS */
X
X#include "fig.h"
X#include "mode.h"
X#include "resources.h"
X#include "w_icons.h"
X#include "w_setup.h"
X#include "w_util.h"
X
Xextern String	text_translations;
Xextern Widget	make_popup_menu();
Xextern char    *panel_get_value();
Xextern double	atof();
X
X/* LOCAL */
X
Xstatic char    *orient_items[] = {
X    "portrait ",
X    "landscape"};
X
Xstatic char    *just_items[] = {
X    "flush left",
X    "centered  "};
X
Xstatic void	orient_select();
Xstatic Widget	orient_panel, orient_menu, orient_lab;
X
Xstatic void	just_select();
Xstatic Widget	just_panel, just_menu, just_lab;
X
Xstatic Widget	print_panel, print_popup, cancel, print, printer_text, printer_lab,
X		mag_lab, print_w, mag_text;
Xstatic int	print_centered = 1;
Xstatic Position xposn, yposn;
X
Xstatic void
Xprint_panel_dismiss()
X{
X    XtPopdown(print_popup);
X    XtSetSensitive(print_w, True);
X}
X
Xstatic void
Xprint_panel_cancel(w, ev)
X    Widget	    w;
X    XButtonEvent   *ev;
X{
X    print_panel_dismiss();
X}
X
Xstatic char	print_msg[] = "PRINT";
X
Xvoid
Xdo_print(w)
X    Widget	    w;
X{
X    DeclareArgs(1);
X    float	    mag;
X    char	   *pval;
X
X    if (emptyfigure_msg(print_msg))
X	return;
X
X    if (print_popup) {
X	mag = (float) atof(panel_get_value(mag_text)) / 100.0;
X	if (mag <= 0.0)
X	    mag = 1.0;
X
X	FirstArg(XtNstring, &pval);
X	GetValues(printer_text);
X	print_to_printer(pval, print_centered, mag);
X	print_panel_dismiss();
X    } else {
X	print_to_printer("", 0, 1.0);
X    }
X}
X
Xstatic void
Xorient_select(w, new_orient, garbage)
X    Widget	    w;
X    XtPointer	    new_orient, garbage;
X{
X    DeclareArgs(1);
X
X    FirstArg(XtNlabel, XtName(w));
X    SetValues(orient_panel);
X    print_landscape = (int) new_orient;
X}
X
Xstatic void
Xjust_select(w, new_just, garbage)
X    Widget	    w;
X    XtPointer	    new_just, garbage;
X{
X    DeclareArgs(1);
X
X    FirstArg(XtNlabel, XtName(w));
X    SetValues(just_panel);
X    print_centered = (int) new_just;
X}
X
Xpopup_print_panel(w)
X    Widget	    w;
X{
X    Widget	    image;
X    XtTranslations  popdown_actions;
X    Pixmap	    p;
X
X    DeclareArgs(10);
X
X    if (!print_popup) {
X	print_w = w;
X	XtTranslateCoords(w, (Position) 0, (Position) 0, &xposn, &yposn);
X
X	FirstArg(XtNx, xposn);
X	NextArg(XtNy, yposn + 50);
X	NextArg(XtNtitle, "Xfig: Print menu");
X	print_popup = XtCreatePopupShell("xfig_print_menu",
X					 transientShellWidgetClass,
X					 tool, Args, ArgCount);
X
X	print_panel = XtCreateManagedWidget("print_panel", formWidgetClass,
X					    print_popup, NULL, ZERO);
X	popdown_actions = XtParseTranslationTable(
X						  "<Btn1Up>:\n");
X	XtOverrideTranslations(print_panel, popdown_actions);
X
X	p = XCreateBitmapFromData(tool_d, XtWindow(canvas_sw),
X		      printer_ic.data, printer_ic.width, printer_ic.height);
X
X	FirstArg(XtNlabel, "   ");
X	NextArg(XtNwidth, printer_ic.width);
X	NextArg(XtNheight, printer_ic.height);
X	NextArg(XtNbitmap, p);
X	NextArg(XtNborderWidth, 0);
X	NextArg(XtNinternalWidth, 0);
X	NextArg(XtNinternalHeight, 0);
X	NextArg(XtNresize, False);
X	NextArg(XtNresizable, False);
X	image = XtCreateManagedWidget("printer_image", labelWidgetClass,
X				      print_panel, Args, ArgCount);
X
X	FirstArg(XtNlabel, "  Magnification%:");
X	NextArg(XtNfromVert, image);
X	NextArg(XtNjustify, XtJustifyLeft);
X	NextArg(XtNborderWidth, 0);
X	mag_lab = XtCreateManagedWidget("mag_label", labelWidgetClass,
X					print_panel, Args, ArgCount);
X
X	FirstArg(XtNwidth, 40);
X	NextArg(XtNfromVert, image);
X	NextArg(XtNfromHoriz, mag_lab);
X	NextArg(XtNeditType, "edit");
X	NextArg(XtNstring, "100");
X	NextArg(XtNinsertPosition, 3);
X	NextArg(XtNborderWidth, INTERNAL_BW);
X	mag_text = XtCreateManagedWidget("magnification", asciiTextWidgetClass,
X					 print_panel, Args, ArgCount);
X	XtOverrideTranslations(mag_text,
X			       XtParseTranslationTable(text_translations));
X
X	FirstArg(XtNlabel, "     Orientation:");
X	NextArg(XtNjustify, XtJustifyLeft);
X	NextArg(XtNborderWidth, 0);
X	NextArg(XtNfromVert, mag_text);
X	orient_lab = XtCreateManagedWidget("orient_label", labelWidgetClass,
X					   print_panel, Args, ArgCount);
X
X	FirstArg(XtNfromHoriz, orient_lab);
X	NextArg(XtNfromVert, mag_text);
X	NextArg(XtNborderWidth, INTERNAL_BW);
X	orient_panel = XtCreateManagedWidget(orient_items[print_landscape],
X					     menuButtonWidgetClass,
X					     print_panel, Args, ArgCount);
X	orient_menu = make_popup_menu(orient_items, XtNumber(orient_items),
X				      orient_panel, orient_select);
X
X	FirstArg(XtNlabel, "   Justification:");
X	NextArg(XtNjustify, XtJustifyLeft);
X	NextArg(XtNborderWidth, 0);
X	NextArg(XtNfromVert, orient_panel);
X	just_lab = XtCreateManagedWidget("just_label", labelWidgetClass,
X					 print_panel, Args, ArgCount);
X
X	FirstArg(XtNlabel, just_items[print_centered]);
X	NextArg(XtNfromHoriz, just_lab);
X	NextArg(XtNfromVert, orient_panel);
X	NextArg(XtNborderWidth, INTERNAL_BW);
X	just_panel = XtCreateManagedWidget("justify",
X					   menuButtonWidgetClass,
X					   print_panel, Args, ArgCount);
X	just_menu = make_popup_menu(just_items, XtNumber(just_items),
X				    just_panel, just_select);
X
X
X	FirstArg(XtNlabel, "         Printer:");
X	NextArg(XtNfromVert, just_panel);
X	NextArg(XtNjustify, XtJustifyLeft);
X	NextArg(XtNborderWidth, 0);
X	printer_lab = XtCreateManagedWidget("dir_label", labelWidgetClass,
X					    print_panel, Args, ArgCount);
X
X	/*
X	 * don't SetValue the XtNstring so the user may specify the default
X	 * printer in a resource, e.g.:	 *printer*string: at6
X	 */
X
X	FirstArg(XtNwidth, 225);
X	NextArg(XtNfromVert, just_panel);
X	NextArg(XtNfromHoriz, printer_lab);
X	NextArg(XtNeditType, "edit");
X	NextArg(XtNinsertPosition, 0);
X	NextArg(XtNborderWidth, INTERNAL_BW);
X	printer_text = XtCreateManagedWidget("printer", asciiTextWidgetClass,
X					     print_panel, Args, ArgCount);
X
X	XtOverrideTranslations(printer_text,
X			       XtParseTranslationTable(text_translations));
X
X	FirstArg(XtNlabel, "Cancel");
X	NextArg(XtNfromVert, printer_text);
X	NextArg(XtNvertDistance, 15);
X	NextArg(XtNhorizDistance, 55);
X	NextArg(XtNheight, 25);
X	NextArg(XtNborderWidth, INTERNAL_BW);
X	cancel = XtCreateManagedWidget("cancel", commandWidgetClass,
X				       print_panel, Args, ArgCount);
X	XtAddEventHandler(cancel, ButtonReleaseMask, (Boolean) 0,
X			  (XtEventHandler)print_panel_cancel, (XtPointer) NULL);
X
X	FirstArg(XtNlabel, "Print");
X	NextArg(XtNfromVert, printer_text);
X	NextArg(XtNfromHoriz, cancel);
X	NextArg(XtNheight, 25);
X	NextArg(XtNborderWidth, INTERNAL_BW);
X	NextArg(XtNvertDistance, 15);
X	NextArg(XtNhorizDistance, 25);
X	print = XtCreateManagedWidget("print", commandWidgetClass,
X				      print_panel, Args, ArgCount);
X	XtAddEventHandler(print, ButtonReleaseMask, (Boolean) 0,
X			  (XtEventHandler)do_print, (XtPointer) NULL);
X
X    }
X    XtSetSensitive(print_w, False);
X    XtPopup(print_popup, XtGrabNonexclusive);
X}
END_OF_FILE
if test 7453 -ne `wc -c <'w_print.c'`; then
    echo shar: \"'w_print.c'\" unpacked with wrong size!
fi
# end of 'w_print.c'
fi
echo shar: End of archive 19 \(of 25\).
cp /dev/null ark19isdone
MISSING=""
for I in 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 ; do
    if test ! -f ark${I}isdone ; then
	MISSING="${MISSING} ${I}"
    fi
done
if test "${MISSING}" = "" ; then
    echo You have unpacked all 25 archives.
    rm -f ark[1-9]isdone ark[1-9][0-9]isdone
else
    echo You still need to unpack the following archives:
    echo "        " ${MISSING}
fi
##  End of shell archive.
exit 0
-- 
Molecular Simulations, Inc.             mail: dcmartin@msi.com
796 N. Pastoria Avenue                  uucp: uunet!dcmartin
Sunnyvale, California 94086             at&t: 408/522-9236
