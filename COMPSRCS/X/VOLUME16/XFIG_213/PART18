Path: uunet!zaphod.mps.ohio-state.edu!mips!msi!dcmartin
From: envbvs@bea.lbl.gov (Brian V. Smith)
Newsgroups: comp.sources.x
Subject: v16i023: Xfig 2.1.3, Part18/25
Message-ID: <1992Feb4.150207.1260@msi.com>
Date: 4 Feb 92 15:02:07 GMT
References: <csx-16i006-xfig-2.1.3@uunet.UU.NET>
Sender: dcmartin@msi.com (David C. Martin - Moderator)
Organization: Molecular Simulations, Inc.
Lines: 1506
Approved: dcmartin@msi.com
Originator: dcmartin@fascet

Submitted-by: envbvs@bea.lbl.gov (Brian V. Smith)
Posting-number: Volume 16, Issue 23
Archive-name: xfig-2.1.3/part18

# This is a shell archive.  Remove anything before this line, then feed it
# into a shell via "sh file" or similar.  To overwrite existing files,
# type "sh file -c".
# The tool that generated this appeared in the comp.sources.unix newsgroup;
# send mail to comp-sources-unix@uunet.uu.net if you want that tool.
# If this archive is complete, you will see the following message at the end:
#		"End of archive 18 (of 25)."
# Contents:  Doc/FORMAT2.1 Examples/houseD.fig.uu Examples/lists.fig.uu
#   Examples/roundboxes2.fig.uu e_flip.c resources.c w_file.c
# Wrapped by dcmartin@fascet on Tue Feb  4 06:42:31 1992
PATH=/bin:/usr/bin:/usr/ucb ; export PATH
if test -f 'Doc/FORMAT2.1' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'Doc/FORMAT2.1'\"
else
echo shar: Extracting \"'Doc/FORMAT2.1'\" \(8258 characters\)
sed "s/^X//" >'Doc/FORMAT2.1' <<'END_OF_FILE'
XThe following is the format of fig output (fig 2.1).
X
X(1) The very first line is a comment line containing the name and version:
X	#FIG 2.1
X
X    The character # at the first column of a line indicates that the line
X    is a comment line which will be ignored.
X
X(2) The first non-comment line consists of two numbers :
X
X	int	fig_resolution		(pixels/inch)
X	int	coordinate_system	(1 : origin is at the lower left corner
X					 2 : Upper left)
X
X    Fig_resolution is the resolution fig is using for the current file.
X    It must always be 80 for compatibility with this version of Fig.
X    Pixels are assumed to be square.
X
X(3) The rest of the file contains various objects.  An object can be one
X    of six classes (or types).
X
X	  i)	Arc.
X	 ii)	Ellipse which is a generalization of circle.
X	iii)	Polyline which includes polygon and box.
X	 iv)	Spline which includes closed/open control/interpolated spline.
X	  v)	Text.
X	 vi)	Compound object which is composed of one or more objects.
X
X    In the following elaboration on object formats, every value of fig
X    output are separated by blank characters or new line ('\n').  The
X    value of the not-used parameters will be -1.
X
X    Some fields are described as "enumeration type" or "bit vector"; the 
X    values which these fields can take are defined in the header file object.h.
X    The pen, arrow_type, and arrow_style fields are described as unused.
X    These values may be defined in some future version of Fig.
X
X    The color field is defined as follows:
X
X	-1 = Default
X	 0 = Black
X	 1 = Blue
X	 2 = Green
X	 3 = Cyan
X	 4 = Red
X	 5 = Magenta
X	 6 = Yellow
X	 7 = White
X	 values from 8 to 2^30-1 = reserved for future use
X
X    The depth field is defined as follows:
X
X	 0 ... 2^30-1 where larger value means object is deeper than (under)
X		      objects with smaller depth
X
X    The area fill field is defined as follows:
X	
X	 0 = not filled
X	 1 = white
X	...  values from 2 to 20 are shades of grey, from lighter to darker
X	21 = black
X
X    The style_val field is defined as the length, in pixels, of the on/off dashes
X    for dashed lines, and the distance between the dots, in pixels, for dotted lines
X 
X    (3.1) ARC
X
X    First line :
X	type	name			(brief description)
X	----	----			-------------------
X	int	object_code		(always 5)
X	int	sub_type		(always	1)
X	int	line_style		(enumeration type)
X	int	line_thickness		(pixels)
X	int	color			(enumeration type)
X	int	depth			(no units)
X	int	pen			(not used)
X	int	area_fill		(enumeration type)
X	float	style_val		(pixels)
X	int	direction		(0 : clockwise, 1 : counterclockwise)
X	int	forward_arrow		(0: no forward arrow, 1: on)
X	int	backward_arrow		(0: no forward arrow, 1: on)
X	float	center_x, center_y	(center of the arc)
X	int	x1, y1			(pixels, the 1st point the user entered)
X	int	x2, y2			(pixels, the 2nd point)
X	int	x3, y3			(pixels, the last point)
X
X    Forward arrow line (Optional; absent if forward_arrow is 0) :
X	type	name			(brief description)
X	----	----			-------------------
X	int	arrow_type		(not used)
X	int	arrow_style		(not used)
X	float	arrow_thickness		(pixels)
X	float 	arrow_width		(pixels)
X	float	arrow_height		(pixels)
X
X    Backward arrow line (Optional; absent if backward_arrow is 0) :
X	type	name			(brief description)
X	----	----			-------------------
X	int	arrow_type		(not used)
X	int	arrow_style		(not used)
X	float	arrow_thickness		(pixels)
X	float	arrow_width		(pixels)
X	float	arrow_height		(pixels)
X
X    (3.2) COMPOUND
X
X    A line with object code 6 signifies the start of a compound.
X    There are four more numbers on this line which indicate the
X    upper right corner and the lower left corner of the bounding
X    box of this compound.  A line with object code -6 signifies
X    the end of the compound.  Compound may be nested.
X
X    First line :
X	type	name			(brief description)
X	----	----			-------------------
X	int	object_code		(always 6)
X	int	upperright_corner_x	(pixels)
X	int	upperright_corner_y	(pixels)
X	int	lowerleft_corner_x	(pixels)
X	int	lowerleft_corner_y	(pixels)
X
X    Subsequent lines :
X	objects
X	.
X	.
X
X    Last line :
X	-6
X
X    (3.3) ELLIPSE
X
X    First line :
X	type	name			(brief description)
X	----	----			-------------------
X	int	object_code		(always 1)
X	int	sub_type		(1 : ellipse defined by radiuses
X					 2 : ellipse defined by diameters
X					 3 : circle defined by radius
X					 4 : circle defined by diameter)
X	int	line_style		(enumeration type)
X	int	thickness		(pixels)
X	int	color			(enumeration type)
X	int	depth			(no units)
X	int	pen			(not used)
X	int	area_fill		(enumeration type)
X	float	style_val		(pixels)
X	int	direction		(always 1)
X	float	angle			(radians, the angle of the x-axis)
X	int	center_x, center_y	(pixels)
X	int	radius_x, radius_y	(pixels)
X	int	start_x, start_y	(pixels; the 1st point entered)
X	int	end_x, end_y		(pixels; the last point entered)
X
X    (3.4) POLYLINE
X
X    First line :
X	type	name			(brief description)
X	----	----			-------------------
X	int	object_code		(always 2)
X	int	sub_type		(1 : polyline
X					 2 : box
X					 3 : polygon
X					 4 : arc-box)
X					 5 : imported-eps bounding-box)
X	int	line_style		(enumeration type)
X	int	thickness		(pixels)
X	int	color			(enumeration type)
X	int	depth			(no units)
X	int	pen			(not used)
X	int	area_fill		(enumeration type)
X	float	style_val		(pixels)
X	int	radius			(pixels)
X	int	forward_arrow		(0: off, 1: on)
X	int	backward_arrow		(0: off, 1: on)
X
X    Forward arrow line : same as ARC object
X
X    Backward arrow line : same as ARC object
X
X    Points line :
X	type	name			(brief description)
X	----	----			-------------------
X	int	x1, y1			(pixels)
X	int	x2, y2			(pixels)
X	  .
X	  .
X	int	xn, yn			(this will be the same as the 1st
X					point for polygon and box)
X	int	x, y			(always 9999, 9999; marks the end of
X					point for polygon and box)
X
X    EPS line :
X	type	name			(brief description)
X	----	----			-------------------
X	boolean	flipped			orientation = normal (0) or flipped (1)
X	char	file[]			name of eps file to import
X
X    (3.5) SPLINE
X
X    First line :
X	type	name			(brief description)
X	----	----			-------------------
X	int	object_code		(always 3)
X	int	sub_type		(1 : open spline
X					 2 : closed spline
X					 3 : open interpolated spline
X					 4 : closed interpolated spline)
X	int	line_style		(See the end of this section)
X	int	thickness		(pixels)
X	int	color			(enumeration type)
X	int	depth			(no units)
X	int	pen			(not used)
X	int	area_fill		(enumeration type)
X	float	style_val		(pixels)
X	int	forward_arrow		(0: off, 1: on)
X	int	backward_arrow		(0: off, 1: on)
X
X    Forward arrow line : same as ARC object
X
X    Backward arrow line : same as ARC object
X
X    Points line : same as POLYLINE object
X
X    Control points line (absent if sub_type is 1 or 2) :
X	Control points of interpolated spline.  There are two control
X	points for each knots.  A section i, of the spline is drawn
X	using Bezier cubic with the following four points:
X		(x ,y ), (rx ,ry ), (lx	  , ly   ), (x   , y   ).
X		  i  i	    i	i      i+1    i+1     i+1   i+1
X	For closed interpolated spline the last pair of control points,
X	(lxn,lyn) and (rxn,ryn) (which can be ignored), are the same as
X	(lx1,ly1) and (rx1,ry1) respectively.
X
X	type	name			(brief description)
X	----	----			-------------------
X	float	lx1, ly1		(pixels)
X	float	rx1, ry1		(pixels)
X	float	lx2, ly2		(pixels)
X	float	rx2, ry2		(pixels)
X	  .
X	  .
X	float	lxn, lyn		(pixels)
X	float	rxn, ryn		(pixels)
X
X    (3.6) TEXT
X	type	name			(brief description)
X	----	----			-------------------
X	int	object 			(always 4)
X	int	sub_type		(0 : Left justified
X					 1 : Center justified
X					 2 : Right justified)
X	int	font 			(enumeration type)
X	int	font_size 		(points)
X	int	pen			(not used)
X	int	color			(enumeration type)
X	int	depth			(no units)
X	float	angle			(radians, the angle of the text)
X	int	font_flags		(bit vector)
X	int	height			(pixels)
X	int	length			(pixels)
X	int	x, y			(pixels, coordinate of the origin
X					 of the string.  If sub_type = 0, it is
X					 the lower left corner of the string.
X					 If sub_type = 1, it is the lower
X					 center.  Otherwise it is the lower
X					 right corner of the string.)
X	char	string[]		(ascii characters; starts after a blank
X					character following the last number and
X					ends before the character '\1'.  This
X					character is not part of the string.
X					Note that the string may contain '\n'.)
END_OF_FILE
if test 8258 -ne `wc -c <'Doc/FORMAT2.1'`; then
    echo shar: \"'Doc/FORMAT2.1'\" unpacked with wrong size!
fi
# end of 'Doc/FORMAT2.1'
fi
if test -f 'Examples/houseD.fig.uu' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'Examples/houseD.fig.uu'\"
else
echo shar: Extracting \"'Examples/houseD.fig.uu'\" \(8141 characters\)
sed "s/^X//" >'Examples/houseD.fig.uu' <<'END_OF_FILE'
Xbegin 664 houseD.fig
XM(T9)1R`R+C`*.#`@,@HU(#$@,"`Q(#`@,"`P(#`@,"XP,#`@,2`P(#`@,C8Y
XM+C8U."`R,CDN-C4X(#(V.2`R-S0@,S`R(#(V,"`S,30@,C(Y"C4@,2`P(#$@
XM,"`P(#`@,"`P+C`P,"`P(#`@,"`Q.38N-S`P(#(P,2XW,#`@,C$T(#(P-"`R
XM,3`@,C$S(#$Y.2`R,3D*,2`Q(#`@,2`P(#`@,"`P(#`N,#`P(#$@,"XP,#`@
XM,S,Y(#$W-2`Q,2`Q-B`S,SD@,3<U(#,T.2`Q.3`*,2`Q(#`@,2`P(#`@,"`P
XM(#`N,#`P(#$@,"XP,#`@,S,X(#$S,"`Q,2`Q-B`S,S@@,3,P(#,T."`Q-#4*
XM,2`R(#`@,2`P(#`@,"`P(#`N,#`P(#`@,"XP,#`@,C(V(#$R,2`Q,2`Q-2`R
XM,3<@,3,X(#(S-R`Q,#8*,B`R(#`@,2`P(#`@,"`P(#`N,#`P(#`@,`H)(#8U
XM.2`S.#<@-C4Y(#0S-"`V,CD@-#,T(#8R.2`S.#<@-C4Y(#,X-R`Y.3DY(#DY
XM.3D*,B`R(#$@,2`P(#`@,"`P(#0N,#`P(#`@,`H)(#8R.2`S.#<@-C(Y(#,T
XM,2`V-3D@,S0Q(#8U.2`S.#<@-C(Y(#,X-R`Y.3DY(#DY.3D*,B`R(#`@,2`P
XM(#`@,"`P(#`N,#`P(#`@,`H)(#,R,R`R,S$@,S@S(#(S,2`S.#,@,C8Q(#,R
XM,R`R-C$@,S(S(#(S,2`Y.3DY(#DY.3D*,B`Q(#`@,2`P(#`@,"`P(#`N,#`P
XM(#`@,`H)(#,Y-"`R,3D@,SDT(#$Q.2`T-#0@,3$Y(#0T-"`R,3D@.3DY.2`Y
XM.3DY"C(@,R`P(#$@,"`P(#`@,"`P+C`P,"`P(#`*"2`S-C0@,C$Y(#,Y-"`R
XM,3D@,SDT(#(R.2`S-C0@,C(Y(#,V-"`R,3D@.3DY.2`Y.3DY"C(@,R`P(#$@
XM,"`P(#`@,"`P+C`P,"`P(#`*"2`T.#0@,C(Y(#0T-"`R,CD@-#0T(#(Q.2`T
XM-S0@,C$Y(#0W-"`X.2`T.#0@.#D@-#@T(#(R.2`Y.3DY(#DY.3D*,B`Q(#`@
XM,2`P(#`@,"`P(#`N,#`P(#`@,`H)(#,Y-"`R,3D@,SDT(#$Q.2`T-#0@,3$Y
XM(#0T-"`R,3D@.3DY.2`Y.3DY"C(@,R`P(#$@,"`P(#`@,"`P+C`P,"`P(#`*
XM"2`S-30@.#D@,S8T(#@Y(#,V-"`R,CD@,S$T(#(R.2`S,30@,C$Y(#,U-"`R
XM,3D@,S4T(#@Y(#DY.3D@.3DY.0HR(#$@,"`Q(#`@,"`P(#`@,"XP,#`@,"`P
XM"@D@,S$Y(#@Y(#,Q.2`R,3D@.3DY.2`Y.3DY"C(@,B`P(#$@,"`P(#`@,"`P
XM+C`P,"`P(#`*"2`S,C0@.#0@,S(T(#DT(#,T-"`Y-"`S-#0@.#0@,S(T(#@T
XM(#DY.3D@.3DY.0HR(#$@,"`Q(#`@,"`P(#`@,"XP,#`@,"`P"@D@,3<Y(#$Y
XM.2`Q-SD@,C$Y(#DY.3D@.3DY.0HR(#,@,"`Q(#`@,"`P(#`@,"XP,#`@,"`P
XM"@D@,3,Y(#$X.2`Q.3D@,3@Y(#$Y.2`R,#0@,3@Y(#(P-"`Q.#D@,3DY(#$S
XM.2`Q.3D@,3,Y(#$X.2`Y.3DY(#DY.3D*,B`T(#`@,2`P(#`@,"`P(#`N,#`P
XM(#,@,"`P"@D@,C$Q(#(S,2`R,3$@,C8T(#(V-2`R-C0@,C8U(#(S,2`R,3$@
XM,C,Q(#DY.3D@.3DY.0HR(#0@,"`Q(#`@,"`P(#`@,"XP,#`@,R`P(#`*"2`Q
XM-#(@,C,Q(#$T,B`R-C0@,C`Y(#(V-"`R,#D@,C,Q(#$T,B`R,S$@.3DY.2`Y
XM.3DY"C(@,2`P(#(@,"`P(#`@,"`P+C`P,"`P(#`*"2`R-CD@,C<T(#(V.2`R
XM,CD@.3DY.2`Y.3DY"C(@,2`P(#$@,"`P(#`@,"`P+C`P,"`P(#`*"2`Q.30@
XM.#D@,3DT(#$X.2`Y.3DY(#DY.3D*,B`T(#`@,2`P(#`@,"`P(#`N,#`P(#<@
XM,"`P"@D@,30T(#DT(#$T-"`Q.#0@,3@Y(#$X-"`Q.#D@.30@,30T(#DT(#DY
XM.3D@.3DY.0HR(#$@,"`Q(#`@,"`P(#`@,"XP,#`@,"`P"@D@,C,T(#@T(#(W
XM.2`X-"`Y.3DY(#DY.3D*,B`Q(#`@,2`P(#`@,"`P(#`N,#`P(#`@,`H)(#(W
XM.2`W.2`R-SD@.#D@.3DY.2`Y.3DY"C(@,2`P(#$@,"`P(#`@,"`P+C`P,"`P
XM(#`*"2`R,S0@-SD@,C,T(#@Y(#DY.3D@.3DY.0HR(#0@,"`Q(#`@,"`P(#`@
XM,"XP,#`@,R`P(#`*"2`R,3,@,3`S(#(Q,R`Y,2`R,SD@.3$@,C,Y(#$P,R`R
XM,3,@,3`S(#DY.3D@.3DY.0HR(#$@,"`Q(#`@,"`P(#`@,"XP,#`@,"`P"@D@
XM,C,U(#$Q,B`R,S4@,3`S(#DY.3D@.3DY.0HR(#$@,"`Q(#`@,"`P(#`@,"XP
XM,#`@,"`P"@D@,C$W(#$Q-"`R,3<@,3`S(#DY.3D@.3DY.0HR(#$@,"`Q(#`@
XM,"`P(#`@,"XP,#`@,"`P"@D@-C8T(#$P.2`V-S0@,3`Y(#DY.3D@.3DY.0HR
XM(#$@,"`Q(#`@,"`P(#`@,"XP,#`@,"`P"@D@-C8T(#$T.2`V-S0@,30Y(#DY
XM.3D@.3DY.0HR(#$@,"`Q(#`@,"`P(#`@,"XP,#`@,"`P"@D@-C8Y(#$P.2`V
XM-CD@,30Y(#DY.3D@.3DY.0HR(#$@,"`Q(#`@,"`P(#`@,"XP,#`@,"`P"@D@
XM-C`T(#@T(#8T-"`X-"`Y.3DY(#DY.3D*,B`Q(#`@,2`P(#`@,"`P(#`N,#`P
XM(#`@,`H)(#8T-"`X.2`V-#0@-SD@.3DY.2`Y.3DY"C(@,2`P(#$@,"`P(#`@
XM,"`P+C`P,"`P(#`*"2`V,#0@.#D@-C`T(#<Y(#DY.3D@.3DY.0HR(#(@,"`Q
XM(#`@,"`P(#`@,"XP,#`@,"`P"@D@,30T(#,Q,R`Q-#0@,S,Y(#$V.2`S,SD@
XM,38Y(#,Q,R`Q-#0@,S$S(#DY.3D@.3DY.0HR(#0@,"`Q(#`@,"`P(#`@,"XP
XM,#`@-"`P(#`*"2`Q-C0@-#4Y(#(X.2`T-3D@,C@Y(#,T.2`Q-C0@,S0Y(#$V
XM-"`T-3D@.3DY.2`Y.3DY"C(@-"`P(#$@,"`P(#`@,"`P+C`P,"`S(#`@,`H)
XM(#$V-"`S-#0@,30Y(#,T-"`Q-#D@-#8T(#$V-"`T-C0@,38T(#,T-"`Y.3DY
XM(#DY.3D*,B`Q(#`@,2`P(#`@,"`P(#`N,#`P(#`@,`H)(#4V-"`T.3D@-38T
XM(#4P.2`Y.3DY(#DY.3D*,B`Q(#`@,2`P(#`@,"`P(#`N,#`P(#`@,`H)(#4P
XM-"`T.3D@-3`T(#4P.2`Y.3DY(#DY.3D*,B`Q(#`@,2`P(#`@,"`P(#`N,#`P
XM(#`@,`H)(#4P-"`U,#0@-38T(#4P-"`Y.3DY(#DY.3D*,B`Q(#`@,2`P(#`@
XM,"`P(#`N,#`P(#`@,`H)(#$Y.2`T.3D@,3DY(#4P.2`Y.3DY(#DY.3D*,B`Q
XM(#`@,2`P(#`@,"`P(#`N,#`P(#`@,`H)(#(U.2`T.3D@,C4Y(#4P.2`Y.3DY
XM(#DY.3D*,B`Q(#`@,2`P(#`@,"`P(#`N,#`P(#`@,`H)(#$Y.2`U,#0@,C4Y
XM(#4P-"`Y.3DY(#DY.3D*,B`S(#`@,2`P(#`@,"`P(#`N,#`P(#`@,`H)(#0R
XM-"`S-CD@-#$T(#,V.2`T,30@,S0Y(#0W.2`S-#D@-#<Y(#0Y.2`V-C0@-#DY
XM(#8V-"`X.2`S-#0@.#D@,S0T(#DT(#,R-"`Y-"`S,C0@.#D@,3,Y(#@Y(#$S
XM.2`S-S0@,3(Y(#,W-"`Q,CD@-SD@-C<T(#<Y(#8W-"`U,#D@,3(Y(#4P.2`Q
XM,CD@,S<T(#$S.2`S-S0@,3,Y(#0Y.2`T,30@-#DY(#0Q-"`T.#D@-#(T(#0X
XM.2`T,C0@-#DY(#0V.2`T.3D@-#8Y(#,U.2`T,C0@,S4Y(#0R-"`S-CD@.3DY
XM.2`Y.3DY"C(@,2`P(#(@,"`P(#`@,"`P+C`P,"`P(#`*"2`T,C`@-#(T(#0R
XM,"`T.#8@.3DY.2`Y.3DY"C(@,2`P(#(@,"`P(#`@,"`P+C`P,"`P(#`*"2`T
XM,3<@,S<R(#0Q-R`T,CD@.3DY.2`Y.3DY"C(@,2`P(#$@,"`P(#`@,"`P+C`P
XM,"`P(#`*"2`Q,CD@-#0T(#$S.2`T-#0@.3DY.2`Y.3DY"C(@,2`P(#$@,"`P
XM(#`@,"`P+C`P,"`P(#`*"2`Q,SD@,S<T(#$R.2`S-S0@.3DY.2`Y.3DY"C(@
XM,2`P(#$@,"`P(#`@,"`P+C`P,"`P(#$*"3`@,"`Q+C`P,"`T+C`P,"`X+C`P
XM,`H)(#8W,2`V-"`T,SD@-C0@.3DY.2`Y.3DY"C(@,2`P(#$@,"`P(#`@,"`P
XM+C`P,"`P(#$*"3`@,"`Q+C`P,"`T+C`P,"`X+C`P,`H)(#$S,2`V-"`S.30@
XM-C0@.3DY.2`Y.3DY"C(@,2`P(#$@,"`P(#`@,"`P+C`P,"`P(#`*"2`Q,CD@
XM-30@,3(Y(#<T(#DY.3D@.3DY.0HR(#$@,"`Q(#`@,"`P(#`@,"XP,#`@,"`P
XM"@D@,3,T(#,W-"`Q,S0@-#0T(#DY.3D@.3DY.0HR(#(@,"`Q(#`@,"`P(#`@
XM,"XP,#`@,"`P"@D@,S,Y(#0Y-"`S.#<@-#DT(#,X-R`T-S`@,S,Y(#0W,"`S
XM,SD@-#DT(#DY.3D@.3DY.0HR(#0@,"`Q(#`@,"`P(#`@,"XP,#`@,R`P(#`*
XM"2`U.#0@-#0T(#4X-"`T.30@-#@T(#0Y-"`T.#0@-#0T(#4X-"`T-#0@.3DY
XM.2`Y.3DY"C(@,2`P(#$@,"`P(#`@,"`P+C`P,"`P(#`*"2`V-S0@-30@-C<T
XM(#<T(#DY.3D@.3DY.0HR(#$@,"`Q(#`@,"`P(#`@,"XP,#`@,"`P"@D@-C8Y
XM(#,W.2`V-CD@-#,Y(#DY.3D@.3DY.0HR(#$@,"`Q(#`@,"`P(#`@,"XP,#`@
XM,"`P"@D@-C8T(#,W.2`V-S0@,S<Y(#DY.3D@.3DY.0HR(#$@,"`Q(#`@,"`P
XM(#`@,"XP,#`@,"`P"@D@-C8T(#0S.2`V-S0@-#,Y(#DY.3D@.3DY.0HR(#$@
XM,"`Q(#`@,"`P(#`@,"XP,#`@,"`P"@D@-CDY(#4P.2`V-SD@-3`Y(#DY.3D@
XM.3DY.0HR(#$@,"`Q(#`@,"`P(#`@,"XP,#`@,"`P"@D@-CDY(#<Y(#8W.2`W
XM.2`Y.3DY(#DY.3D*,B`Q(#`@,2`P(#`@,"`P(#`N,#`P(#`@,`H)(#8X.2`X
XM,2`V.#D@,C@T(#DY.3D@.3DY.0HR(#$@,"`Q(#`@,"`P(#`@,"XP,#`@,"`Q
XM"@DP(#`@,2XP,#`@-"XP,#`@."XP,#`*"2`V.#D@-3`V(#8X.2`S,30@.3DY
XM.2`Y.3DY"C(@,R`P(#$@,"`P(#`@,"`P+C`P,"`P(#`*"2`U.#0@,38Y(#4U
XM.2`Q-CD@-34Y(#$W.2`U-S0@,3<Y(#4W-"`S,C0@-C8T(#,R-"`V-C0@,S$T
XM(#4X-"`S,30@-3@T(#$V.2`Y.3DY(#DY.3D*,B`Q(#`@,2`P(#`@,"`P(#`N
XM,#`P(#`@,`H)(#4W.2`X.2`U-SD@,38Y(#DY.3D@.3DY.0HR(#$@,"`Q(#`@
XM,"`P(#`@,"XP,#`@,"`P"@D@-3@T(#$V.2`V-C0@,38Y(#DY.3D@.3DY.0HR
XM(#$@,"`Q(#`@,"`P(#`@,"XP,#`@,"`P"@D@-3@T(#$X-"`V-C0@,3@T(#DY
XM.3D@.3DY.0HR(#$@,"`Q(#`@,"`P(#`@,"XP,#`@,"`P"@D@-3@T(#$Y.2`V
XM-C0@,3DY(#DY.3D@.3DY.0HR(#$@,"`Q(#`@,"`P(#`@,"XP,#`@,"`P"@D@
XM-3@T(#(Q-"`V-C0@,C$T(#DY.3D@.3DY.0HR(#$@,"`Q(#`@,"`P(#`@,"XP
XM,#`@,"`P"@D@-3@T(#(R.2`V-C0@,C(Y(#DY.3D@.3DY.0HR(#$@,"`Q(#`@
XM,"`P(#`@,"XP,#`@,"`P"@D@-3@T(#(T-"`V-C0@,C0T(#DY.3D@.3DY.0HR
XM(#$@,"`Q(#`@,"`P(#`@,"XP,#`@,"`P"@D@-3@T(#(U.2`V-C0@,C4Y(#DY
XM.3D@.3DY.0HR(#$@,"`Q(#`@,"`P(#`@,"XP,#`@,"`P"@D@-3@T(#(W-"`V
XM-C0@,C<T(#DY.3D@.3DY.0HR(#$@,"`Q(#`@,"`P(#`@,"XP,#`@,"`P"@D@
XM-3@T(#(X.2`V-C0@,C@Y(#DY.3D@.3DY.0HR(#$@,"`Q(#`@,"`P(#`@,"XP
XM,#`@,"`P"@D@-38T(#@Y(#4V-"`Q-CD@.3DY.2`Y.3DY"C(@,2`P(#$@,"`P
XM(#`@,"`P+C`P,"`Q(#`*"3`@,"`Q+C`P,"`T+C`P,"`X+C`P,`H)(#4U-"`Q
XM,CD@-C`Y(#$R.2`V,CD@,30T(#8R.2`R.30@.3DY.2`Y.3DY"C(@,2`P(#$@
XM,"`P(#`@,"`P+C`P,"`P(#`*"2`U.#0@,S`T(#8V-"`S,#0@.3DY.2`Y.3DY
XM"C(@,R`P(#$@,"`P(#`@,"`P+C`P,"`P(#`*"2`Q,SD@,C$Y(#(V.2`R,3D@
XM,C8Y(#(R.2`Q,SD@,C(Y(#$S.2`R,3D@.3DY.2`Y.3DY"C(@,2`P(#(@,"`P
XM(#`@,"`P+C`P,"`P(#`*"2`Q.3D@,C`T(#(Q-"`R,#0@.3DY.2`Y.3DY"C0@
XM,"`P(#$R(#`@,"`P(#`N,#`P(#$@.2`Q."`V,S0@-#`Y(%-%5P$*-"`P(#`@
XM,3(@,"`P(#`@,"XP,#`@,2`Y(#$R(#,T-B`R-3`@1%(!"C0@,"`P(#$R(#`@
XM,"`P(#`N,#`P(#$@,3`@,3@@-#`Y(#$U-"!#3"X!"C0@,"`P(#$R(#`@,"`P
XM(#`N,#`P(#$@.2`Q,B`Q-3D@,C$T($-,`0HT(#`@,"`Q,B`P(#`@,"`P+C`P
XM,"`Q(#D@,3(@,C(Y(#(T.2!$4@$*-"`P(#`@,3(@,"`P(#`@,"XP,#`@,2`Y
XM(#$R(#$U.2`R-#D@1%(!"C0@,"`P(#$R(#`@,"`P(#`N,#`P(#$@.2`R-"`R
XM,S0@,30Y($)!5$@!"C0@,"`P(#$R(#`@,"`P(#`N,#`P(#$@.2`V(#$U,2`S
XM,S$@5`$*-"`P(#`@,3(@,"`P(#`@,"XP,#`@,2`Y(#$X(#(P.2`T,#D@0D5$
XM`0HT(#`@,"`Q,B`P(#`@,"`P+C`P,"`Q(#D@,S8@,SDY(#8Y(#(W)R`R(@$*
XM-"`P(#`@,3(@,"`P(#`@,"XP,#`@,2`Y(#,P(#4R.2`S-SD@4U151%D!"C0@
XM,"`P(#$R(#`@,"`P(#`N,#`P(#$@.2`X-"`R,C@@,S`U($U!4U1%4B!"1412
XM3T]-`0HT(#`@,"`Q,B`P(#`@,"`P+C`P,"`Q(#$Q(#8P(#$Y(#,Y.2!H;W5S
XM940N9FEG`0HT(#`@,"`Q,B`P(#`@,"`P+C`P,"`Q(#$P(#$X(#0S-"`T,CD@
XM0TPN`0HT(#`@,"`Q,B`P(#`@,"`P+C`P,"`Q(#D@,3(@,S4T(#0X-"!$4@$*
XM-"`P(#`@,3(@,"`P(#`@,"XP,#`@,2`Y(#(T(#4Q.2`T-CD@1$532P$*-"`P
XM(#`@,3(@,"`P(#`@,"XP,#`@,2`Y(#,V(#8X-"`S,#0@,C$G(#8B`0HT(#`@
XF,"`Q,B`P(#`@,"`P+C`P,"`Q(#D@,C0@-3(T(#$R-"!$3U=.`0HB
X`
Xend
END_OF_FILE
if test 8141 -ne `wc -c <'Examples/houseD.fig.uu'`; then
    echo shar: \"'Examples/houseD.fig.uu'\" unpacked with wrong size!
fi
# end of 'Examples/houseD.fig.uu'
fi
if test -f 'Examples/lists.fig.uu' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'Examples/lists.fig.uu'\"
else
echo shar: Extracting \"'Examples/lists.fig.uu'\" \(8206 characters\)
sed "s/^X//" >'Examples/lists.fig.uu' <<'END_OF_FILE'
Xbegin 664 lists.fig
XM(T9)1R`R+C`*.#`@,@HU(#$@,"`Q(#`@,"`P(#`@,"XP,#`@,"`Q(#`@-30R
XM+C$U-R`T,S$N-3@Q(#4R,2`S.30@-30Y(#,X.2`U-C4@,SDU"@DP(#`@,2XP
XM,#`@-"XP,#`@."XP,#`*-2`Q(#`@,2`P(#`@,"`P(#`N,#`P(#$@,2`P(#4P
XM,"XQ-S@@-#(T+C`Q-B`T-S4@,SDT(#0V,2`T,C0@-#<P(#0T.0H),S0P-S@W
XM,B`Q,S$P-S(@,2XP,#`@-"XP,#`@."XP,#`*-2`Q(#`@,2`P(#`@,"`P(#`N
XM,#`P(#$@,2`P(#4P,"XQ-S@@-#<Y+C`Q-B`T-S4@-#0Y(#0V,2`T-SD@-#<P
XM(#4P-`H),S0P-S@W,B`Q,S$P-S(@,2XP,#`@-"XP,#`@."XP,#`*-2`Q(#`@
XM,2`P(#`@,"`P(#`N,#`P(#`@,2`P(#,P,"XV.3@@-#(Y+C`P-B`R.#`@,SDT
XM(#,P."`S.#D@,S(S(#,Y-0H),"`P(#$N,#`P(#0N,#`P(#@N,#`P"C4@,2`P
XM(#$@,"`P(#`@,"`P+C`P,"`Q(#$@,"`R-38N.#`X(#0R,RXS-S<@,C,S(#,Y
XM-"`R,3D@-#(T(#(R.2`T-#D*"3,T,#<X-S(@,3,Q,#<R(#$N,#`P(#0N,#`P
XM(#@N,#`P"C4@,2`P(#$@,"`P(#`@,"`P+C`P,"`Q(#$@,"`R-38N.#`X(#0W
XM."XS-S<@,C,S(#0T.2`R,3D@-#<Y(#(R.2`U,#0*"3,T,#<X-S(@,3,Q,#<R
XM(#$N,#`P(#0N,#`P(#@N,#`P"C4@,2`P(#$@,"`P(#`@,"`P+C`P,"`Q(#$@
XM,"`R-38N.#`X(#4S,RXS-S<@,C,S(#4P-"`R,3D@-3,T(#(R.2`U-3D*"3,T
XM,#<X-S(@,3,Q,#<R(#$N,#`P(#0N,#`P(#@N,#`P"C4@,2`P(#$@,"`P(#`@
XM,"`P+C`P,"`Q(#$@,"`R-38N.#`X(#4X."XS-S<@,C,S(#4U.2`R,3D@-3@Y
XM(#(R.2`V,30*"3,T,#<X-S(@,3,Q,#<R(#$N,#`P(#0N,#`P(#@N,#`P"C4@
XM,2`P(#$@,"`P(#`@,"`P+C`P,"`Q(#$@,"`S-SDN,3<W(#4S-"XP,38@,S4T
XM(#4P-"`S-#`@-3,T(#,T.2`U-3D*"3,T,#<X-S(@,3,Q,#<R(#$N,#`P(#0N
XM,#`P(#@N,#`P"C4@,2`P(#$@,"`P(#`@,"`P+C`P,"`Q(#$@,"`S-SDN,3<X
XM(#0W.2XP,38@,S4T(#0T.2`S-#`@-#<Y(#,T.2`U,#0*"3,T,#<X-S(@,3,Q
XM,#<R(#$N,#`P(#0N,#`P(#@N,#`P"C4@,2`P(#$@,"`P(#`@,"`P+C`P,"`Q
XM(#$@,"`S-SDN,3<X(#0R-"XP,38@,S4T(#,Y-"`S-#`@-#(T(#,T.2`T-#D*
XM"3,T,#<X-S(@,3,Q,#<R(#$N,#`P(#0N,#`P(#@N,#`P"C4@,2`P(#$@,"`P
XM(#`@,"`P+C`P,"`P(#$@,"`T,C$N,34W(#0S,2XU.#$@-#`P(#,Y-"`T,C@@
XM,S@Y(#0T-"`S.34*"3`@,"`Q+C`P,"`T+C`P,"`X+C`P,`HU(#$@,"`Q(#`@
XM,"`P(#`@,"XP,#`@,2`Q(#`@,3,U+C@P."`U,S,N,S<W(#$Q,B`U,#0@.3@@
XM-3,T(#$P."`U-3D*"3,T,#<X-S(@,3,Q,#<R(#$N,#`P(#0N,#`P(#@N,#`P
XM"C4@,2`P(#$@,"`P(#`@,"`P+C`P,"`Q(#$@,"`Q,S4N.#`X(#0W."XS-S<@
XM,3$R(#0T.2`Y."`T-SD@,3`X(#4P-`H),S0P-S@W,B`Q,S$P-S(@,2XP,#`@
XM-"XP,#`@."XP,#`*-2`Q(#`@,2`P(#`@,"`P(#`N,#`P(#$@,2`P(#$S-2XX
XM,#@@-#(S+C,W-R`Q,3(@,SDT(#DX(#0R-"`Q,#@@-#0Y"@DS-#`W.#<R(#$S
XM,3`W,B`Q+C`P,"`T+C`P,"`X+C`P,`HU(#$@,"`Q(#`@,"`P(#`@,"XP,#`@
XM,2`Q(#`@.#<N.#<X(#,U-2XR.#8@-#<@,S8Y(#8Q(#,X.2`X,B`S.3@*"3`@
XM,"`Q+C`P,"`T+C`P,"`X+C`P,`HU(#$@,"`Q(#`@,"`P(#`@,"XP,#`@,"`Q
XM(#`@,3<Y+C8Y."`T,CDN,#`V(#$U.2`S.30@,3@W(#,X.2`R,#(@,SDU"@DP
XM(#`@,2XP,#`@-"XP,#`@."XP,#`*,B`R(#`@,2`P(#`@,"`P(#`N,#`P(#`@
XM,`H)(#$T-"`U.2`Q-#0@.30@,S(T(#DT(#,R-"`U.2`Q-#0@-3D@.3DY.2`Y
XM.3DY"C(@,B`P(#$@,"`P(#`@,"`P+C`P,"`P(#`*"2`Q-30@,3(T(#$U-"`R
XM,3D@,3<T(#(Q.2`Q-S0@,3(T(#$U-"`Q,C0@.3DY.2`Y.3DY"C(@,2`P(#$@
XM,"`P(#`@,"`P+C`P,"`P(#`*"2`Q-C0@.30@,38T(#$R-"`Y.3DY(#DY.3D*
XM,B`Q(#`@,2`P(#`@,"`P(#`N,#`P(#`@,`H)(#$Y.2`Y-"`Q.3D@,3(T(#DY
XM.3D@.3DY.0HR(#(@,"`Q(#`@,"`P(#`@,"XP,#`@,"`P"@D@,3@Y(#$R-"`Q
XM.#D@,C$Y(#(P.2`R,3D@,C`Y(#$R-"`Q.#D@,3(T(#DY.3D@.3DY.0HR(#(@
XM,"`Q(#`@,"`P(#`@,"XP,#`@,"`P"@D@,C(T(#$R-"`R,C0@,C$Y(#(T-"`R
XM,3D@,C0T(#$R-"`R,C0@,3(T(#DY.3D@.3DY.0HR(#$@,"`Q(#`@,"`P(#`@
XM,"XP,#`@,"`P"@D@,C,T(#DT(#(S-"`Q,C0@.3DY.2`Y.3DY"C(@,2`P(#$@
XM,"`P(#`@,"`P+C`P,"`P(#`*"2`R-CD@.30@,C8Y(#$R-"`Y.3DY(#DY.3D*
XM,B`R(#`@,2`P(#`@,"`P(#`N,#`P(#`@,`H)(#(U.2`Q,C0@,C4Y(#(Q.2`R
XM-SD@,C$Y(#(W.2`Q,C0@,C4Y(#$R-"`Y.3DY(#DY.3D*,B`R(#`@,2`P(#`@
XM,"`P(#`N,#`P(#`@,`H)(#(Y-"`Q,C0@,CDT(#(Q.2`S,30@,C$Y(#,Q-"`Q
XM,C0@,CDT(#$R-"`Y.3DY(#DY.3D*,B`Q(#`@,2`P(#`@,"`P(#`N,#`P(#`@
XM,`H)(#,P-"`Y-"`S,#0@,3(T(#DY.3D@.3DY.0HR(#$@,"`Q(#`@,"`P(#`@
XM,"XP,#`@,"`P"@D@-#@T(#0Y-"`T.#0@-3$Y(#DY.3D@.3DY.0HR(#(@,"`Q
XM(#`@,"`P(#`@,"XP,#`@,"`P"@D@-#0W(#0Y-"`T-#<@-3$Y(#4S,2`U,3D@
XM-3,Q(#0Y-"`T-#<@-#DT(#DY.3D@.3DY.0HR(#(@,"`Q(#`@,"`P(#`@,"XP
XM,#`@,"`P"@D@-38X(#,X-"`U-C@@-#`Y(#8U,2`T,#D@-C4Q(#,X-"`U-C@@
XM,S@T(#DY.3D@.3DY.0HR(#$@,"`Q(#`@,"`P(#`@,"XP,#`@,"`P"@D@-C`U
XM(#,X-"`V,#4@-#`Y(#DY.3D@.3DY.0HR(#$@,"`Q(#`@,"`P(#`@,"XP,#`@
XM,"`P"@D@-#@T(#,X-"`T.#0@-#`Y(#DY.3D@.3DY.0HR(#(@,"`Q(#`@,"`P
XM(#`@,"XP,#`@,"`P"@D@-#0W(#,X-"`T-#<@-#`Y(#4S,2`T,#D@-3,Q(#,X
XM-"`T-#<@,S@T(#DY.3D@.3DY.0HR(#$@,"`Q(#`@,"`P(#`@,"XP,#`@,"`P
XM"@D@-#@T(#0S.2`T.#0@-#8T(#DY.3D@.3DY.0HR(#(@,"`Q(#`@,"`P(#`@
XM,"XP,#`@,"`P"@D@-#0W(#0S.2`T-#<@-#8T(#4S,2`T-C0@-3,Q(#0S.2`T
XM-#<@-#,Y(#DY.3D@.3DY.0HR(#(@,2`Q(#`@,"`P(#`@-"XP,#`@,"`P"@D@
XM,3DQ(#4S-"`S,#@@-3,T(#,P."`U.#0@,3DQ(#4X-"`Q.3$@-3,T(#DY.3D@
XM.3DY.0HR(#$@,"`Q(#`@,"`P(#`@,"XP,#`@,"`P"@D@,C0R(#,X-"`R-#(@
XM-#`Y(#DY.3D@.3DY.0HR(#(@,"`Q(#`@,"`P(#`@,"XP,#`@,"`P"@D@,C`U
XM(#,X-"`R,#4@-#`Y(#(X.2`T,#D@,C@Y(#,X-"`R,#4@,S@T(#DY.3D@.3DY
XM.0HR(#$@,"`Q(#`@,"`P(#`@,"XP,#`@,"`P"@D@,C0R(#0S.2`R-#(@-#8T
XM(#DY.3D@.3DY.0HR(#(@,"`Q(#`@,"`P(#`@,"XP,#`@,"`P"@D@,C`U(#0S
XM.2`R,#4@-#8T(#(X.2`T-C0@,C@Y(#0S.2`R,#4@-#,Y(#DY.3D@.3DY.0HR
XM(#(@,"`Q(#`@,"`P(#`@,"XP,#`@,"`P"@D@,C`U(#0Y-"`R,#4@-3$Y(#(X
XM.2`U,3D@,C@Y(#0Y-"`R,#4@-#DT(#DY.3D@.3DY.0HR(#$@,"`Q(#`@,"`P
XM(#`@,"XP,#`@,"`P"@D@,C0R(#0Y-"`R-#(@-3$Y(#DY.3D@.3DY.0HR(#$@
XM,"`Q(#`@,"`P(#`@,"XP,#`@,"`P"@D@,C0R(#4T.2`R-#(@-3<T(#DY.3D@
XM.3DY.0HR(#(@,"`Q(#`@,"`P(#`@,"XP,#`@,"`P"@D@,C`U(#4T.2`R,#4@
XM-3<T(#(X.2`U-S0@,C@Y(#4T.2`R,#4@-30Y(#DY.3D@.3DY.0HR(#(@,"`Q
XM(#`@,"`P(#`@,"XP,#`@,"`P"@D@,C`U(#8P-"`R,#4@-C(Y(#(X.2`V,CD@
XM,C@Y(#8P-"`R,#4@-C`T(#DY.3D@.3DY.0HR(#$@,"`Q(#`@,"`P(#`@,"XP
XM,#`@,"`P"@D@,C0R(#8P-"`R-#(@-C(Y(#DY.3D@.3DY.0HR(#(@,"`Q(#`@
XM,"`P(#`@,"XP,#`@,"`P"@D@,S(V(#4T.2`S,C8@-3<T(#0Q,"`U-S0@-#$P
XM(#4T.2`S,C8@-30Y(#DY.3D@.3DY.0HR(#$@,"`Q(#`@,"`P(#`@,"XP,#`@
XM,"`P"@D@,S8S(#4T.2`S-C,@-3<T(#DY.3D@.3DY.0HR(#$@,"`Q(#`@,"`P
XM(#`@,"XP,#`@,"`P"@D@,S8S(#0Y-"`S-C,@-3$Y(#DY.3D@.3DY.0HR(#(@
XM,"`Q(#`@,"`P(#`@,"XP,#`@,"`P"@D@,S(V(#0Y-"`S,C8@-3$Y(#0Q,"`U
XM,3D@-#$P(#0Y-"`S,C8@-#DT(#DY.3D@.3DY.0HR(#(@,"`Q(#`@,"`P(#`@
XM,"XP,#`@,"`P"@D@,S(V(#0S.2`S,C8@-#8T(#0Q,"`T-C0@-#$P(#0S.2`S
XM,C8@-#,Y(#DY.3D@.3DY.0HR(#$@,"`Q(#`@,"`P(#`@,"XP,#`@,"`P"@D@
XM,S8S(#0S.2`S-C,@-#8T(#DY.3D@.3DY.0HR(#(@,"`Q(#`@,"`P(#`@,"XP
XM,#`@,"`P"@D@,S(V(#,X-"`S,C8@-#`Y(#0Q,"`T,#D@-#$P(#,X-"`S,C8@
XM,S@T(#DY.3D@.3DY.0HR(#$@,"`Q(#`@,"`P(#`@,"XP,#`@,"`P"@D@,S8S
XM(#,X-"`S-C,@-#`Y(#DY.3D@.3DY.0HR(#$@,"`Q(#`@,"`P(#`@,"XP,#`@
XM,"`P"@D@,3(R(#4T.2`Q,C(@-3<T(#DY.3D@.3DY.0HR(#(@,"`Q(#`@,"`P
XM(#`@,"XP,#`@,"`P"@D@.#0@-30Y(#@T(#4W-"`Q-C@@-3<T(#$V."`U-#D@
XM.#0@-30Y(#DY.3D@.3DY.0HR(#(@,"`Q(#`@,"`P(#`@,"XP,#`@,"`P"@D@
XM.#0@-#DT(#@T(#4Q.2`Q-C@@-3$Y(#$V."`T.30@.#0@-#DT(#DY.3D@.3DY
XM.0HR(#$@,"`Q(#`@,"`P(#`@,"XP,#`@,"`P"@D@,3(R(#0Y-"`Q,C(@-3$Y
XM(#DY.3D@.3DY.0HR(#$@,"`Q(#`@,"`P(#`@,"XP,#`@,"`P"@D@,3(R(#0S
XM.2`Q,C(@-#8T(#DY.3D@.3DY.0HR(#(@,"`Q(#`@,"`P(#`@,"XP,#`@,"`P
XM"@D@.#0@-#,Y(#@T(#0V-"`Q-C@@-#8T(#$V."`T,SD@.#0@-#,Y(#DY.3D@
XM.3DY.0HR(#(@,"`Q(#`@,"`P(#`@,"XP,#`@,"`P"@D@.#0@,S@T(#@T(#0P
XM.2`Q-C@@-#`Y(#$V."`S.#0@.#0@,S@T(#DY.3D@.3DY.0HR(#$@,"`Q(#`@
XM,"`P(#`@,"XP,#`@,"`P"@D@,3(R(#,X-"`Q,C(@-#`Y(#DY.3D@.3DY.0HT
XM(#`@,"`Q,B`P(#`@,"`P+C`P,"`Q(#D@,3`R(#,S-"`Q-CD@4W5B;W)D:6YA
XM=&4@3&ES=',!"C0@,"`P(#$R(#`@,"`P(#`N,#`P(#$@.2`V(#(Y.2`R,SD@
XM-0$*-"`P(#`@,3(@,"`P(#`@,"XP,#`@,2`Y(#8@,C8T(#(S.2`T`0HT(#`@
XM,"`Q,B`P(#`@,"`P+C`P,"`Q(#D@-B`R,CD@,C,Y(#,!"C0@,"`P(#$R(#`@
XM,"`P(#`N,#`P(#$@.2`V(#$Y-"`R,SD@,@$*-"`P(#`@,3(@,"`P(#`@,"XP
XM,#`@,2`Y(#8@,34Y(#(S.2`Q`0HT(#`@,"`Q,B`P(#`@,"`P+C`P,"`Q(#D@
XM-S(@,3@Y(#@T($U!4U1%4B`@3$E35`$*-"`P(#`@,3(@,"`P(#`@,"XP,#`@
XM,2`Y(#$X(#0U,B`U,30@3DE,`0HT(#`@,"`Q,B`P(#`@,"`P+C`P,"`Q(#D@
XM,C0@-#@Y(#4P.2!$051!`0HT(#`@,"`Q,B`P(#`@,"`P+C`P,"`Q(#D@,C0@
XM-C$P(#,Y.2!$051!`0HT(#`@,"`Q,B`P(#`@,"`P+C`P,"`Q(#D@,3@@-3<R
XM(#0P-"!.24P!"C0@,"`P(#$R(#`@,"`P(#`N,#`P(#$@.2`R-"`T.#D@-#4T
XM($1!5$$!"C0@,"`P(#$R(#`@,"`P(#`N,#`P(#$@-R`V(#,Q,B`U.#0@*@$*
XM-"`P(#`@,3(@,"`P(#`@,"XP,#`@,2`Y(#$X(#(Q,"`V,C0@3DE,`0HT(#`@
XM,"`Q,B`P(#`@,"`P+C`P,"`Q(#D@,C0@,C0W(#0U-"!$051!`0HT(#`@,"`Q
XM,B`P(#`@,"`P+C`P,"`Q(#D@,C0@,C0W(#4P.2!$051!`0HT(#`@,"`Q,B`P
XM(#`@,"`P+C`P,"`Q(#D@,C0@,C0W(#4V-"!$051!`0HT(#`@,"`Q,B`P(#`@
XM,"`P+C`P,"`Q(#D@,C0@,C0W(#8Q.2!$051!`0HT(#`@,"`Q,B`P(#`@,"`P
XM+C`P,"`Q(#D@,C0@,S8X(#4V-"!$051!`0HT(#`@,"`Q,B`P(#`@,"`P+C`P
XM,"`Q(#D@,C0@,S8X(#4P.2!$051!`0HT(#`@,"`Q,B`P(#`@,"`P+C`P,"`Q
XM(#D@,C0@,S8X(#0U-"!$051!`0HT(#`@,"`Q,B`P(#`@,"`P+C`P,"`Q(#D@
XM,C0@,3(V(#4V-"!$051!`0HT(#`@,"`Q,B`P(#`@,"`P+C`P,"`Q(#D@,C0@
XM,3(V(#4P.2!$051!`0HT(#`@,"`Q,B`P(#`@,"`P+C`P,"`Q(#D@,C0@,3(V
XM(#0U-"!$051!`0HT(#`@,"`Q,B`P(#`@,"`P+C`P,"`Q(#D@,3@@,3(V(#,Y
XM.2!05%(!"C0@,"`P(#$R(#`@,"`P(#`N,#`P(#$@.2`Q."`X.2`S.3D@4%12
XM`0HT(#`@,"`Q,B`P(#`@,"`P+C`P,"`Q(#D@,3@@.#D@-38Y($Y)3`$*-"`P
XM(#`@,3(@,"`P(#`@,"XP,#`@,2`Y(#<R(#0S(#,U.2!-05-415(@($Q)4U0!
XJ"C0@,"`P(#$R(#`@,"`P(#`N,#`P(#$@.2`Q."`S,S$@-38Y($Y)3`$*
X`
Xend
END_OF_FILE
if test 8206 -ne `wc -c <'Examples/lists.fig.uu'`; then
    echo shar: \"'Examples/lists.fig.uu'\" unpacked with wrong size!
fi
# end of 'Examples/lists.fig.uu'
fi
if test -f 'Examples/roundboxes2.fig.uu' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'Examples/roundboxes2.fig.uu'\"
else
echo shar: Extracting \"'Examples/roundboxes2.fig.uu'\" \(8142 characters\)
sed "s/^X//" >'Examples/roundboxes2.fig.uu' <<'END_OF_FILE'
Xbegin 664 roundboxes2.fig
XM(T9)1R`R+C`*.#`@,@HR(#0@,"`Q(#`@,"`P(#`@,"XP,#`@,C$@,"`P"@D@
XM-#8Y(#8T(#0V.2`S,#0@-C0T(#,P-"`V-#0@-C0@-#8Y(#8T(#DY.3D@.3DY
XM.0HR(#0@,"`Q(#`@,"`P(#`@,"XP,#`@,C$@,"`P"@D@-S`Y(#0X-"`W,#D@
XM,S`Y(#0V.2`S,#D@-#8Y(#0X-"`W,#D@-#@T(#DY.3D@.3DY.0HR(#0@,"`Q
XM(#`@,"`P(#`@,"XP,#`@,C$@,"`P"@D@,C@Y(#,P.2`R.#D@-30Y(#0V-"`U
XM-#D@-#8T(#,P.2`R.#D@,S`Y(#DY.3D@.3DY.0HR(#0@,"`Q(#`@,"`P(#`@
XM,"XP,#`@,C$@,"`P"@D@-#8T(#,P.2`T-C0@,3,T(#(R-"`Q,S0@,C(T(#,P
XM.2`T-C0@,S`Y(#DY.3D@.3DY.0HR(#0@,"`Q(#`@,"`P(#`@,"XP,#`@,C`@
XM,"`P"@D@,C(Y(#$S.2`R,CD@,S`T(#0U.2`S,#0@-#4Y(#$S.2`R,CD@,3,Y
XM(#DY.3D@.3DY.0HR(#0@,"`Q(#`@,"`P(#`@,"XP,#`@,C`@,"`P"@D@,CDT
XM(#,Q-"`R.30@-30T(#0U.2`U-#0@-#4Y(#,Q-"`R.30@,S$T(#DY.3D@.3DY
XM.0HR(#0@,"`Q(#`@,"`P(#`@,"XP,#`@."`P(#`*"2`S-30@-#@T(#,Y.2`T
XM.#0@,SDY(#,W-"`S-30@,S<T(#,U-"`T.#0@.3DY.2`Y.3DY"C(@-"`P(#$@
XM,"`P(#`@,"`P+C`P,"`X(#`@,`H)(#(X.2`Q.3D@,C@Y(#(T-"`S.3D@,C0T
XM(#,Y.2`Q.3D@,C@Y(#$Y.2`Y.3DY(#DY.3D*,B`T(#`@,2`P(#`@,"`P(#`N
XM,#`P(#D@,"`P"@D@-#`T(#(T.2`T,#0@,3DT(#(X-"`Q.30@,C@T(#(T.2`T
XM,#0@,C0Y(#DY.3D@.3DY.0HR(#0@,"`Q(#`@,"`P(#`@,"XP,#`@,3`@,"`P
XM"@D@,C<Y(#$X.2`R-SD@,C4T(#0P.2`R-30@-#`Y(#$X.2`R-SD@,3@Y(#DY
XM.3D@.3DY.0HR(#0@,"`Q(#`@,"`P(#`@,"XP,#`@,3$@,"`P"@D@,C<T(#$X
XM-"`R-S0@,C4Y(#0Q-"`R-3D@-#$T(#$X-"`R-S0@,3@T(#DY.3D@.3DY.0HR
XM(#0@,"`Q(#`@,"`P(#`@,"XP,#`@,3(@,"`P"@D@-#$Y(#(V-"`T,3D@,3<Y
XM(#(V.2`Q-SD@,C8Y(#(V-"`T,3D@,C8T(#DY.3D@.3DY.0HR(#0@,"`Q(#`@
XM,"`P(#`@,"XP,#`@,3,@,"`P"@D@-#(T(#(V.2`T,C0@,3<T(#(V-"`Q-S0@
XM,C8T(#(V.2`T,C0@,C8Y(#DY.3D@.3DY.0HR(#0@,"`Q(#`@,"`P(#`@,"XP
XM,#`@,30@,"`P"@D@-#(Y(#(W-"`T,CD@,38Y(#(U.2`Q-CD@,C4Y(#(W-"`T
XM,CD@,C<T(#DY.3D@.3DY.0HR(#0@,"`Q(#`@,"`P(#`@,"XP,#`@,34@,"`P
XM"@D@-#,T(#(W.2`T,S0@,38T(#(U-"`Q-C0@,C4T(#(W.2`T,S0@,C<Y(#DY
XM.3D@.3DY.0HR(#0@,"`Q(#`@,"`P(#`@,"XP,#`@,38@,"`P"@D@-#,Y(#(X
XM-"`T,SD@,34Y(#(T.2`Q-3D@,C0Y(#(X-"`T,SD@,C@T(#DY.3D@.3DY.0HR
XM(#0@,"`Q(#`@,"`P(#`@,"XP,#`@,3<@,"`P"@D@-#0T(#(X.2`T-#0@,34T
XM(#(T-"`Q-30@,C0T(#(X.2`T-#0@,C@Y(#DY.3D@.3DY.0HR(#0@,"`Q(#`@
XM,"`P(#`@,"XP,#`@,3@@,"`P"@D@,C,Y(#$T.2`R,SD@,CDT(#0T.2`R.30@
XM-#0Y(#$T.2`R,SD@,30Y(#DY.3D@.3DY.0HR(#0@,"`Q(#`@,"`P(#`@,"XP
XM,#`@,3D@,"`P"@D@-#4T(#(Y.2`T-30@,30T(#(S-"`Q-#0@,C,T(#(Y.2`T
XM-30@,CDY(#DY.3D@.3DY.0HR(#0@,"`Q(#`@,"`P(#`@,"XP,#`@,3D@,"`P
XM"@D@,CDY(#,Q.2`R.3D@-3,Y(#0U-"`U,SD@-#4T(#,Q.2`R.3D@,S$Y(#DY
XM.3D@.3DY.0HR(#0@,"`Q(#`@,"`P(#`@,"XP,#`@,3@@,"`P"@D@,S`T(#4S
XM-"`T-#D@-3,T(#0T.2`S,C0@,S`T(#,R-"`S,#0@-3,T(#DY.3D@.3DY.0HR
XM(#0@,"`Q(#`@,"`P(#`@,"XP,#`@,3<@,"`P"@D@-#0T(#,R.2`S,#D@,S(Y
XM(#,P.2`U,CD@-#0T(#4R.2`T-#0@,S(Y(#DY.3D@.3DY.0HR(#0@,"`Q(#`@
XM,"`P(#`@,"XP,#`@,38@,"`P"@D@-#,Y(#,S-"`S,30@,S,T(#,Q-"`U,C0@
XM-#,Y(#4R-"`T,SD@,S,T(#DY.3D@.3DY.0HR(#0@,"`Q(#`@,"`P(#`@,"XP
XM,#`@,34@,"`P"@D@-#,T(#,S.2`S,3D@,S,Y(#,Q.2`U,3D@-#,T(#4Q.2`T
XM,S0@,S,Y(#DY.3D@.3DY.0HR(#0@,"`Q(#`@,"`P(#`@,"XP,#`@,30@,"`P
XM"@D@-#(Y(#,T-"`S,C0@,S0T(#,R-"`U,30@-#(Y(#4Q-"`T,CD@,S0T(#DY
XM.3D@.3DY.0HR(#0@,"`Q(#`@,"`P(#`@,"XP,#`@,3,@,"`P"@D@-#(T(#,T
XM.2`S,CD@,S0Y(#,R.2`U,#D@-#(T(#4P.2`T,C0@,S0Y(#DY.3D@.3DY.0HR
XM(#0@,"`Q(#`@,"`P(#`@,"XP,#`@,3(@,"`P"@D@-#$Y(#,U-"`S,S0@,S4T
XM(#,S-"`U,#0@-#$Y(#4P-"`T,3D@,S4T(#DY.3D@.3DY.0HR(#0@,"`Q(#`@
XM,"`P(#`@,"XP,#`@,3$@,"`P"@D@,S,Y(#0Y.2`T,30@-#DY(#0Q-"`S-3D@
XM,S,Y(#,U.2`S,SD@-#DY(#DY.3D@.3DY.0HR(#0@,"`Q(#`@,"`P(#`@,"XP
XM,#`@,3`@,"`P"@D@,S0T(#0Y-"`T,#D@-#DT(#0P.2`S-C0@,S0T(#,V-"`S
XM-#0@-#DT(#DY.3D@.3DY.0HR(#0@,"`Q(#`@,"`P(#`@,"XP,#`@.2`P(#`*
XM"2`T,#0@,S8Y(#,T.2`S-CD@,S0Y(#0X.2`T,#0@-#@Y(#0P-"`S-CD@.3DY
XM.2`Y.3DY"C(@-"`P(#$@,"`P(#`@,"`P+C`P,"`W(#`@,`H)(#(Y-"`R,#0@
XM,CDT(#(S.2`S.30@,C,Y(#,Y-"`R,#0@,CDT(#(P-"`Y.3DY(#DY.3D*,B`T
XM(#`@,2`P(#`@,"`P(#`N,#`P(#8@,"`P"@D@,CDY(#(P.2`R.3D@,C,T(#,X
XM.2`R,S0@,S@Y(#(P.2`R.3D@,C`Y(#DY.3D@.3DY.0HR(#0@,"`Q(#`@,"`P
XM(#`@,"XP,#`@-2`P(#`*"2`S.#0@,C(Y(#,X-"`R,30@,S`T(#(Q-"`S,#0@
XM,C(Y(#,X-"`R,CD@.3DY.2`Y.3DY"C(@-"`P(#$@,"`P(#`@,"`P+C`P,"`S
XM(#`@,`H)(#,W.2`R,C0@,S<Y(#(Q.2`S,#D@,C$Y(#,P.2`R,C0@,S<Y(#(R
XM-"`Y.3DY(#DY.3D*,B`T(#`@,2`P(#`@,"`P(#`N,#`P(#<@,"`P"@D@,SDT
XM(#,W.2`S-3D@,S<Y(#,U.2`T-SD@,SDT(#0W.2`S.30@,S<Y(#DY.3D@.3DY
XM.0HR(#0@,"`Q(#`@,"`P(#`@,"XP,#`@-B`P(#`*"2`S.#D@,S@T(#,V-"`S
XM.#0@,S8T(#0W-"`S.#D@-#<T(#,X.2`S.#0@.3DY.2`Y.3DY"C(@-"`P(#$@
XM,"`P(#`@,"`P+C`P,"`U(#`@,`H)(#,V.2`T-CD@,S@T(#0V.2`S.#0@,S@Y
XM(#,V.2`S.#D@,S8Y(#0V.2`Y.3DY(#DY.3D*,B`T(#`@,2`P(#`@,"`P(#`N
XM,#`P(#,@,"`P"@D@,S<T(#0V-"`S-SD@-#8T(#,W.2`S.30@,S<T(#,Y-"`S
XM-S0@-#8T(#DY.3D@.3DY.0HR(#0@,"`Q(#`@,"`P(#`@,"XP,#`@-R`P(#`*
XM"2`U,SD@,S<Y(#4S.2`T,30@-C,Y(#0Q-"`V,SD@,S<Y(#4S.2`S-SD@.3DY
XM.2`Y.3DY"C(@-"`P(#$@,"`P(#`@,"`P+C`P,"`V(#`@,`H)(#4T-"`S.#0@
XM-30T(#0P.2`V,S0@-#`Y(#8S-"`S.#0@-30T(#,X-"`Y.3DY(#DY.3D*,B`T
XM(#`@,2`P(#`@,"`P(#`N,#`P(#4@,"`P"@D@-C(Y(#0P-"`V,CD@,S@Y(#4T
XM.2`S.#D@-30Y(#0P-"`V,CD@-#`T(#DY.3D@.3DY.0HR(#0@,"`Q(#`@,"`P
XM(#`@,"XP,#`@,R`P(#`*"2`V,C0@,SDY(#8R-"`S.30@-34T(#,Y-"`U-30@
XM,SDY(#8R-"`S.3D@.3DY.2`Y.3DY"C(@-"`P(#$@,"`P(#`@,"`P+C`P,"`Q
XM.2`P(#`*"2`T-SD@,S$Y(#0W.2`T-S0@-CDY(#0W-"`V.3D@,S$Y(#0W.2`S
XM,3D@.3DY.2`Y.3DY"C(@-"`P(#$@,"`P(#`@,"`P+C`P,"`Q."`P(#`*"2`V
XM.30@-#8Y(#8Y-"`S,C0@-#@T(#,R-"`T.#0@-#8Y(#8Y-"`T-CD@.3DY.2`Y
XM.3DY"C(@-"`P(#$@,"`P(#`@,"`P+C`P,"`Q-R`P(#`*"2`T.#D@,S(Y(#0X
XM.2`T-C0@-C@Y(#0V-"`V.#D@,S(Y(#0X.2`S,CD@.3DY.2`Y.3DY"C(@-"`P
XM(#$@,"`P(#`@,"`P+C`P,"`Q-B`P(#`*"2`T.30@,S,T(#0Y-"`T-3D@-C@T
XM(#0U.2`V.#0@,S,T(#0Y-"`S,S0@.3DY.2`Y.3DY"C(@-"`P(#$@,"`P(#`@
XM,"`P+C`P,"`Q-2`P(#`*"2`T.3D@,S,Y(#0Y.2`T-30@-C<Y(#0U-"`V-SD@
XM,S,Y(#0Y.2`S,SD@.3DY.2`Y.3DY"C(@-"`P(#$@,"`P(#`@,"`P+C`P,"`Q
XM-"`P(#`*"2`U,#0@,S0T(#4P-"`T-#D@-C<T(#0T.2`V-S0@,S0T(#4P-"`S
XM-#0@.3DY.2`Y.3DY"C(@-"`P(#$@,"`P(#`@,"`P+C`P,"`Q,R`P(#`*"2`U
XM,#D@,S0Y(#4P.2`T-#0@-C8Y(#0T-"`V-CD@,S0Y(#4P.2`S-#D@.3DY.2`Y
XM.3DY"C(@-"`P(#$@,"`P(#`@,"`P+C`P,"`Q,B`P(#`*"2`U,30@,S4T(#4Q
XM-"`T,SD@-C8T(#0S.2`V-C0@,S4T(#4Q-"`S-30@.3DY.2`Y.3DY"C(@-"`P
XM(#$@,"`P(#`@,"`P+C`P,"`Q,2`P(#`*"2`V-3D@-#,T(#8U.2`S-3D@-3$Y
XM(#,U.2`U,3D@-#,T(#8U.2`T,S0@.3DY.2`Y.3DY"C(@-"`P(#$@,"`P(#`@
XM,"`P+C`P,"`Q,"`P(#`*"2`V-30@-#(Y(#8U-"`S-C0@-3(T(#,V-"`U,C0@
XM-#(Y(#8U-"`T,CD@.3DY.2`Y.3DY"C(@-"`P(#$@,"`P(#`@,"`P+C`P,"`Y
XM(#`@,`H)(#4R.2`S-CD@-3(Y(#0R-"`V-#D@-#(T(#8T.2`S-CD@-3(Y(#,V
XM.2`Y.3DY(#DY.3D*,B`T(#`@,2`P(#`@,"`P(#`N,#`P(#@@,"`P"@D@-C0T
XM(#0Q.2`V-#0@,S<T(#4S-"`S-S0@-3,T(#0Q.2`V-#0@-#$Y(#DY.3D@.3DY
XM.0HR(#0@,"`Q(#`@,"`P(#`@,"XP,#`@-R`P(#`*"2`V,SD@-#$T(#8S.2`S
XM-SD@-3,Y(#,W.2`U,SD@-#$T(#8S.2`T,30@.3DY.2`Y.3DY"C(@-"`P(#$@
XM,"`P(#`@,"`P+C`P,"`R,"`P(#`*"2`T-S0@,S$T(#0W-"`T-SD@-S`T(#0W
XM.2`W,#0@,S$T(#0W-"`S,30@.3DY.2`Y.3DY"C(@-"`P(#$@,"`P(#`@,"`P
XM+C`P,"`W(#`@,`H)(#4W-"`Q,S0@-3,Y(#$S-"`U,SD@,C,T(#4W-"`R,S0@
XM-3<T(#$S-"`Y.3DY(#DY.3D*,B`T(#`@,2`P(#`@,"`P(#`N,#`P(#8@,"`P
XM"@D@-38Y(#$S.2`U-#0@,3,Y(#4T-"`R,CD@-38Y(#(R.2`U-CD@,3,Y(#DY
XM.3D@.3DY.0HR(#0@,"`Q(#`@,"`P(#`@,"XP,#`@-2`P(#`*"2`U-#D@,C(T
XM(#4V-"`R,C0@-38T(#$T-"`U-#D@,30T(#4T.2`R,C0@.3DY.2`Y.3DY"C(@
XM-"`P(#$@,"`P(#`@,"`P+C`P,"`S(#`@,`H)(#4U-"`R,3D@-34Y(#(Q.2`U
XM-3D@,30Y(#4U-"`Q-#D@-34T(#(Q.2`Y.3DY(#DY.3D*,B`T(#`@,2`P(#`@
XM,"`P(#`N,#`P(#@@,"`P"@D@-3<Y(#$R."`U,S0@,3(X(#4S-"`R,S@@-3<Y
XM(#(S."`U-SD@,3(X(#DY.3D@.3DY.0HR(#0@,"`Q(#`@,"`P(#`@,"XP,#`@
XM.2`P(#`*"2`U,CD@,C0T(#4X-"`R-#0@-3@T(#$R-"`U,CD@,3(T(#4R.2`R
XM-#0@.3DY.2`Y.3DY"C(@-"`P(#$@,"`P(#`@,"`P+C`P,"`Q,"`P(#`*"2`U
XM.#D@,3$Y(#4R-"`Q,3D@-3(T(#(T.2`U.#D@,C0Y(#4X.2`Q,3D@.3DY.2`Y
XM.3DY"C(@-"`P(#$@,"`P(#`@,"`P+C`P,"`Q,2`P(#`*"2`U.30@,3$T(#4Q
XM.2`Q,30@-3$Y(#(U-"`U.30@,C4T(#4Y-"`Q,30@.3DY.2`Y.3DY"C(@-"`P
XM(#$@,"`P(#`@,"`P+C`P,"`Q,B`P(#`*"2`U,30@,C4Y(#4Y.2`R-3D@-3DY
XM(#$P.2`U,30@,3`Y(#4Q-"`R-3D@.3DY.2`Y.3DY"C(@-"`P(#$@,"`P(#`@
XM,"`P+C`P,"`Q,R`P(#`*"2`U,#D@,C8T(#8P-"`R-C0@-C`T(#$P-"`U,#D@
XM,3`T(#4P.2`R-C0@.3DY.2`Y.3DY"C(@-"`P(#$@,"`P(#`@,"`P+C`P,"`Q
XM-"`P(#`*"2`U,#0@,C8Y(#8P.2`R-CD@-C`Y(#DY(#4P-"`Y.2`U,#0@,C8Y
XM(#DY.3D@.3DY.0HR(#0@,"`Q(#`@,"`P(#`@,"XP,#`@,34@,"`P"@D@-#DY
XM(#(W-"`V,30@,C<T(#8Q-"`Y-"`T.3D@.30@-#DY(#(W-"`Y.3DY(#DY.3D*
XM,B`T(#`@,2`P(#`@,"`P(#`N,#`P(#$V(#`@,`H)(#0Y-"`R-SD@-C$Y(#(W
XM.2`V,3D@.#D@-#DT(#@Y(#0Y-"`R-SD@.3DY.2`Y.3DY"C(@-"`P(#$@,"`P
XM(#`@,"`P+C`P,"`Q-R`P(#`*"2`T.#D@,C@T(#8R-"`R.#0@-C(T(#@T(#0X
XM.2`X-"`T.#D@,C@T(#DY.3D@.3DY.0HR(#0@,"`Q(#`@,"`P(#`@,"XP,#`@
XM,3@@,"`P"@D@-C(Y(#<Y(#0X-"`W.2`T.#0@,C@Y(#8R.2`R.#D@-C(Y(#<Y
XM(#DY.3D@.3DY.0HR(#0@,"`Q(#`@,"`P(#`@,"XP,#`@,3D@,"`P"@D@-#<Y
XM(#(Y-"`V,S0@,CDT(#8S-"`W-"`T-SD@-S0@-#<Y(#(Y-"`Y.3DY(#DY.3D*
XM,B`T(#`@,2`P(#`@,"`P(#`N,#`P(#(P(#`@,`H)(#8S.2`R.3D@-C,Y(#8Y
XB(#0W-"`V.2`T-S0@,CDY(#8S.2`R.3D@.3DY.2`Y.3DY"B`R
X`
Xend
END_OF_FILE
if test 8142 -ne `wc -c <'Examples/roundboxes2.fig.uu'`; then
    echo shar: \"'Examples/roundboxes2.fig.uu'\" unpacked with wrong size!
fi
# end of 'Examples/roundboxes2.fig.uu'
fi
if test -f 'e_flip.c' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'e_flip.c'\"
else
echo shar: Extracting \"'e_flip.c'\" \(8163 characters\)
sed "s/^X//" >'e_flip.c' <<'END_OF_FILE'
X/*
X * FIG : Facility for Interactive Generation of figures
X * Copyright (c) 1985 by Supoj Sutanthavibul
X *
X * "Permission to use, copy, modify, distribute, and sell this software and its
X * documentation for any purpose is hereby granted without fee, provided that
X * the above copyright notice appear in all copies and that both that
X * copyright notice and this permission notice appear in supporting
X * documentation, and that the name of M.I.T. not be used in advertising or
X * publicity pertaining to distribution of the software without specific,
X * written prior permission.  M.I.T. makes no representations about the
X * suitability of this software for any purpose.  It is provided "as is"
X * without express or implied warranty."
X *
X */
X
X#include "fig.h"
X#include "resources.h"
X#include "mode.h"
X#include "object.h"
X#include "paintop.h"
X#include "u_draw.h"
X#include "u_search.h"
X#include "u_create.h"
X#include "u_list.h"
X#include "w_canvas.h"
X#include "w_mousefun.h"
X
Xstatic int	flip_axis;
Xstatic int	copy;
Xstatic int	init_flip();
Xstatic int	init_copynflip();
Xstatic int	init_fliparc();
Xstatic int	init_flipcompound();
Xstatic int	init_flipellipse();
Xstatic int	init_flipline();
Xstatic int	init_flipspline();
Xstatic int	flip_selected();
Xstatic int	flip_search();
X
Xflip_ud_selected()
X{
X    flip_axis = UD_FLIP;
X    flip_selected();
X}
X
Xflip_lr_selected()
X{
X    flip_axis = LR_FLIP;
X    flip_selected();
X}
X
Xstatic
Xflip_selected()
X{
X    set_mousefun("flip", "copy & flip", "");
X    canvas_kbd_proc = null_proc;
X    canvas_locmove_proc = null_proc;
X    init_searchproc_left(init_flip);
X    init_searchproc_middle(init_copynflip);
X    canvas_leftbut_proc = object_search_left;
X    canvas_middlebut_proc = object_search_middle;
X    canvas_rightbut_proc = null_proc;
X    set_cursor(pick15_cursor);
X}
X
Xstatic
Xinit_flip(p, type, x, y, px, py)
X    char	   *p;
X    int		    type;
X    int		    x, y;
X    int		    px, py;
X{
X    copy = 0;
X    flip_search(p, type, x, y, px, py);
X}
X
Xstatic
Xinit_copynflip(p, type, x, y, px, py)
X    char	   *p;
X    int		    type;
X    int		    x, y;
X    int		    px, py;
X{
X    copy = 1;
X    flip_search(p, type, x, y, px, py);
X}
X
Xstatic
Xflip_search(p, type, x, y, px, py)
X    char	   *p;
X    int		    type;
X    int		    x, y;
X    int		    px, py;
X{
X    switch (type) {
X    case O_POLYLINE:
X	cur_l = (F_line *) p;
X	init_flipline(cur_l, px, py);
X	break;
X    case O_ARC:
X	cur_a = (F_arc *) p;
X	init_fliparc(cur_a, px, py);
X	break;
X    case O_ELLIPSE:
X	cur_e = (F_ellipse *) p;
X	init_flipellipse(cur_e, px, py);
X	break;
X    case O_SPLINE:
X	cur_s = (F_spline *) p;
X	init_flipspline(cur_s, px, py);
X	break;
X    case O_COMPOUND:
X	cur_c = (F_compound *) p;
X	init_flipcompound(cur_c, px, py);
X	break;
X    default:
X	return;
X    }
X}
X
Xstatic
Xinit_fliparc(a, px, py)
X    F_arc	   *a;
X    int		    px, py;
X{
X    F_arc	   *arc;
X
X    set_temp_cursor(wait_cursor);
X    arc = copy_arc(a);
X    flip_arc(arc, px, py, flip_axis);
X    if (copy) {
X	add_arc(arc);
X    } else {
X	toggle_arcmarker(a);
X	draw_arc(a, ERASE);
X	change_arc(a, arc);
X    }
X    draw_arc(arc, PAINT);
X    toggle_arcmarker(arc);
X    reset_cursor();
X}
X
Xstatic
Xinit_flipcompound(c, px, py)
X    F_compound	   *c;
X    int		    px, py;
X{
X    F_compound	   *compound;
X
X    set_temp_cursor(wait_cursor);
X    compound = copy_compound(c);
X    flip_compound(compound, px, py, flip_axis);
X    if (copy) {
X	add_compound(compound);
X    } else {
X	toggle_compoundmarker(c);
X	draw_compoundelements(c, ERASE);
X	change_compound(c, compound);
X    }
X    draw_compoundelements(compound, PAINT);
X    toggle_compoundmarker(compound);
X    reset_cursor();
X}
X
Xstatic
Xinit_flipellipse(old_e, px, py)
X    F_ellipse	   *old_e;
X{
X    F_ellipse	   *new_e;
X
X    new_e = copy_ellipse(old_e);
X    flip_ellipse(new_e, px, py, flip_axis);
X    if (copy) {
X	add_ellipse(new_e);
X    } else {
X	toggle_ellipsemarker(old_e);
X	draw_ellipse(old_e, ERASE);
X	change_ellipse(old_e, new_e);
X    }
X    draw_ellipse(new_e, PAINT);
X    toggle_ellipsemarker(new_e);
X}
X
Xstatic
Xinit_flipline(old_l, px, py)
X    F_line	   *old_l;
X    int		    px, py;
X{
X    F_line	   *new_l;
X
X    new_l = copy_line(old_l);
X    flip_line(new_l, px, py, flip_axis);
X    if (copy) {
X	add_line(new_l);
X    } else {
X	toggle_linemarker(old_l);
X	draw_line(old_l, ERASE);
X	change_line(old_l, new_l);
X    }
X    draw_line(new_l, PAINT);
X    toggle_linemarker(new_l);
X}
X
Xstatic
Xinit_flipspline(old_s, px, py)
X    F_spline	   *old_s;
X    int		    px, py;
X{
X    F_spline	   *new_s;
X
X    new_s = copy_spline(old_s);
X    flip_spline(new_s, px, py, flip_axis);
X    if (copy) {
X	add_spline(new_s);
X    } else {
X	toggle_splinemarker(old_s);
X	draw_spline(old_s, ERASE);
X	change_spline(old_s, new_s);
X    }
X    draw_spline(new_s, PAINT);
X    toggle_splinemarker(new_s);
X}
X
Xflip_line(l, x, y, flip_axis)
X    F_line	   *l;
X    int		    x, y, flip_axis;
X{
X    F_point	   *p;
X
X    switch (flip_axis) {
X    case UD_FLIP:		/* x axis  */
X	for (p = l->points; p != NULL; p = p->next)
X	    p->y = y + (y - p->y);
X	break;
X    case LR_FLIP:		/* y axis  */
X	for (p = l->points; p != NULL; p = p->next)
X	    p->x = x + (x - p->x);
X	break;
X    }
X    if (l->type == T_EPS_BOX)
X	l->eps->flipped = 1 - l->eps->flipped;
X}
X
Xflip_spline(s, x, y, flip_axis)
X    F_spline	   *s;
X    int		    x, y, flip_axis;
X{
X    F_point	   *p;
X    F_control	   *cp;
X
X    switch (flip_axis) {
X    case UD_FLIP:		/* x axis  */
X	for (p = s->points; p != NULL; p = p->next)
X	    p->y = y + (y - p->y);
X	for (cp = s->controls; cp != NULL; cp = cp->next) {
X	    cp->ly = y + (y - cp->ly);
X	    cp->ry = y + (y - cp->ry);
X	}
X	break;
X    case LR_FLIP:		/* y axis  */
X	for (p = s->points; p != NULL; p = p->next)
X	    p->x = x + (x - p->x);
X	for (cp = s->controls; cp != NULL; cp = cp->next) {
X	    cp->lx = x + (x - cp->lx);
X	    cp->rx = x + (x - cp->rx);
X	}
X	break;
X    }
X}
X
Xflip_text(t, x, y, flip_axis)
X    F_text	   *t;
X    int		    x, y, flip_axis;
X{
X    switch (flip_axis) {
X    case UD_FLIP:		/* x axis  */
X	t->base_y = y + (y - t->base_y);
X	break;
X    case LR_FLIP:		/* y axis  */
X	t->base_x = x + (x - t->base_x);
X	break;
X    }
X}
X
Xflip_ellipse(e, x, y, flip_axis)
X    F_ellipse	   *e;
X    int		    x, y, flip_axis;
X{
X    switch (flip_axis) {
X    case UD_FLIP:		/* x axis  */
X	e->direction ^= 1;
X	e->center.y = y + (y - e->center.y);
X	e->start.y = y + (y - e->start.y);
X	e->end.y = y + (y - e->end.y);
X	break;
X    case LR_FLIP:		/* y axis  */
X	e->direction ^= 1;
X	e->center.x = x + (x - e->center.x);
X	e->start.x = x + (x - e->start.x);
X	e->end.x = x + (x - e->end.x);
X	break;
X    }
X}
X
Xflip_arc(a, x, y, flip_axis)
X    F_arc	   *a;
X    int		    x, y, flip_axis;
X{
X    switch (flip_axis) {
X    case UD_FLIP:		/* x axis  */
X	a->direction ^= 1;
X	a->center.y = y + (y - a->center.y);
X	a->point[0].y = y + (y - a->point[0].y);
X	a->point[1].y = y + (y - a->point[1].y);
X	a->point[2].y = y + (y - a->point[2].y);
X	break;
X    case LR_FLIP:		/* y axis  */
X	a->direction ^= 1;
X	a->center.x = x + (x - a->center.x);
X	a->point[0].x = x + (x - a->point[0].x);
X	a->point[1].x = x + (x - a->point[1].x);
X	a->point[2].x = x + (x - a->point[2].x);
X	break;
X    }
X}
X
Xflip_compound(c, x, y, flip_axis)
X    F_compound	   *c;
X    int		    x, y, flip_axis;
X{
X    F_line	   *l;
X    F_arc	   *a;
X    F_ellipse	   *e;
X    F_spline	   *s;
X    F_text	   *t;
X    F_compound	   *c1;
X    int		    p, q;
X
X    switch (flip_axis) {
X    case UD_FLIP:		/* x axis  */
X	p = y + (y - c->nwcorner.y);
X	q = y + (y - c->secorner.y);
X	c->nwcorner.y = min2(p, q);
X	c->secorner.y = max2(p, q);
X	break;
X    case LR_FLIP:		/* y axis  */
X	p = x + (x - c->nwcorner.x);
X	q = x + (x - c->secorner.x);
X	c->nwcorner.x = min2(p, q);
X	c->secorner.x = max2(p, q);
X	break;
X    }
X    for (l = c->lines; l != NULL; l = l->next)
X	flip_line(l, x, y, flip_axis);
X    for (a = c->arcs; a != NULL; a = a->next)
X	flip_arc(a, x, y, flip_axis);
X    for (e = c->ellipses; e != NULL; e = e->next)
X	flip_ellipse(e, x, y, flip_axis);
X    for (s = c->splines; s != NULL; s = s->next)
X	flip_spline(s, x, y, flip_axis);
X    for (t = c->texts; t != NULL; t = t->next)
X	flip_text(t, x, y, flip_axis);
X    for (c1 = c->compounds; c1 != NULL; c1 = c1->next)
X	flip_compound(c1, x, y, flip_axis);
X}
END_OF_FILE
if test 8163 -ne `wc -c <'e_flip.c'`; then
    echo shar: \"'e_flip.c'\" unpacked with wrong size!
fi
# end of 'e_flip.c'
fi
if test -f 'resources.c' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'resources.c'\"
else
echo shar: Extracting \"'resources.c'\" \(2097 characters\)
sed "s/^X//" >'resources.c' <<'END_OF_FILE'
X/*
X * FIG : Facility for Interactive Generation of figures
X * Copyright (c) 1985 by Supoj Sutanthavibul
X *
X * "Permission to use, copy, modify, distribute, and sell this software and its
X * documentation for any purpose is hereby granted without fee, provided that
X * the above copyright notice appear in all copies and that both that
X * copyright notice and this permission notice appear in supporting
X * documentation, and that the name of M.I.T. not be used in advertising or
X * publicity pertaining to distribution of the software without specific,
X * written prior permission.  M.I.T. makes no representations about the
X * suitability of this software for any purpose.  It is provided "as is"
X * without express or implied warranty."
X *
X */
X
X#include "fig.h"
X#include "resources.h"
X
Xchar	       *colorNames[] = {"Default", "Black", "Blue", "Green", "Cyan",
X"Red", "Magenta", "Yellow", "White"};
XBoolean		all_colors_available;
X
XappresStruct	appres;
XPIXWIN		canvas_win, msg_win, sideruler_win, topruler_win;
X
XCursor		cur_cursor;
XCursor		arrow_cursor, bull_cursor, buster_cursor, crosshair_cursor,
X		null_cursor, pencil_cursor, pick15_cursor, pick9_cursor,
X		panel_cursor, l_arrow_cursor, lr_arrow_cursor, r_arrow_cursor,
X		u_arrow_cursor, ud_arrow_cursor, d_arrow_cursor, wait_cursor;
X
XTOOL		tool;
XXtAppContext	tool_app;
X
XTOOLSW		canvas_sw, ps_fontmenu, /* printer font menu tool */
X		latex_fontmenu, /* printer font menu tool */
X		msg_panel, cmd_panel, mode_panel, d_label, e_label, mousefun,
X		ind_panel,	/* indicator panel */
X		unitbox_sw, sideruler_sw, topruler_sw;
X
XDisplay	       *tool_d;
XScreen	       *tool_s;
Xint		tool_sn;
X
XGC		gc, bold_gc, button_gc, ind_button_gc, color_gc, mouse_button_gc,
X		blank_gc, ind_blank_gc, mouse_blank_gc, gccache[0x10],
X		fillgc, fill_gc[NUMFILLPATS],	/* fill style gc's */
X		black_fill_gc[NUMFILLPATS],
X		un_fill_gc[NUMFILLPATS],	/* unfill gc's */
X		black_un_fill_gc[NUMFILLPATS];
XPixmap		fill_pm[NUMFILLPATS];
XXColor		x_fg_color, x_bg_color;
Xunsigned long	but_fg, but_bg;
Xunsigned long	ind_but_fg, ind_but_bg;
Xunsigned long	mouse_but_fg, mouse_but_bg;
END_OF_FILE
if test 2097 -ne `wc -c <'resources.c'`; then
    echo shar: \"'resources.c'\" unpacked with wrong size!
fi
# end of 'resources.c'
fi
if test -f 'w_file.c' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'w_file.c'\"
else
echo shar: Extracting \"'w_file.c'\" \(8335 characters\)
sed "s/^X//" >'w_file.c' <<'END_OF_FILE'
X/*
X * FIG : Facility for Interactive Generation of figures
X * Copyright (c) 1985 by Supoj Sutanthavibul
X *
X * "Permission to use, copy, modify, distribute, and sell this software and its
X * documentation for any purpose is hereby granted without fee, provided that
X * the above copyright notice appear in all copies and that both that
X * copyright notice and this permission notice appear in supporting
X * documentation, and that the name of M.I.T. not be used in advertising or
X * publicity pertaining to distribution of the software without specific,
X * written prior permission.  M.I.T. makes no representations about the
X * suitability of this software for any purpose.  It is provided "as is"
X * without express or implied warranty."
X *
X */
X
X#include "fig.h"
X#include "resources.h"
X#include "object.h"
X#include "mode.h"
X#include "w_drawprim.h"		/* for char_height */
X#include "w_dir.h"
X#include "w_util.h"
X#include "w_setup.h"
X
Xextern Boolean	file_msg_is_popped;
Xextern Widget	file_msg_popup;
X
Xextern String	text_translations;
Xstatic char	load_msg[] = "The current figure is modified.\nDo you want to discard it and load the new file?";
Xstatic char	buf[40];
X
XDeclareStaticArgs(12);
Xstatic Widget	file_panel,  file_status, num_objects;
Xstatic Widget	cancel, save, merge, load;
Xstatic Widget	file_w;
Xstatic Position xposn, yposn;
Xstatic String	file_name_translations =
X	"<Key>Return: LoadFile()\n";
Xstatic void	do_load();
Xstatic XtActionsRec	file_name_actions[] =
X{
X    {"LoadFile", (XtActionProc) do_load},
X};
X
X/* Global so w_dir.c can access us */
X
XWidget		file_popup,	/* the popup itself */
X		file_selfile,	/* selected file widget */
X		file_mask,	/* mask widget */
X		file_dir,	/* current directory widget */
X		file_flist,	/* file list wiget */
X		file_dlist;	/* dir list wiget */
X
XBoolean		file_up = False;
X
Xstatic void
Xfile_panel_dismiss()
X{
X    XtPopdown(file_popup);
X    XtSetSensitive(file_w, True);
X    file_up = False;
X}
X
Xstatic void
Xdo_merge(w, ev)
X    Widget	    w;
X    XButtonEvent   *ev;
X{
X    char	    filename[100];
X    char	   *fval, *dval;
X
X    FirstArg(XtNstring, &fval);
X    GetValues(file_selfile);
X    FirstArg(XtNstring, &dval);
X    GetValues(file_dir);
X
X    if (emptyname_msg(fval, "MERGE"))
X	return;
X
X    strcpy(filename, dval);
X    strcat(filename, "/");
X    strcat(filename, fval);
X    if (merge_file(filename) == 0)
X	file_panel_dismiss();
X}
X
Xstatic void
Xdo_load(w, ev)
X    Widget	    w;
X    XButtonEvent   *ev;
X{
X    char	   *fval, *dval;
X
X    FirstArg(XtNstring, &dval);
X    GetValues(file_dir);
X    FirstArg(XtNstring, &fval);
X    GetValues(file_selfile);
X
X    if (emptyname_msg(fval, "LOAD"))
X	return;
X
X    if (!emptyfigure() && figure_modified) {
X	XtSetSensitive(load, False);
X	if (!popup_query(QUERY_YES, load_msg)) {
X	    XtSetSensitive(load, True);
X	    return;
X	}
X	XtSetSensitive(load, True);
X    }
X    if (change_directory(dval) == 0) {
X	if (load_file(fval) == 0)
X	    file_panel_dismiss();
X    }
X}
X
Xvoid
Xdo_save(w)
X    Widget	    w;
X{
X    char	   *fval, *dval;
X
X    if (file_popup) {
X	FirstArg(XtNstring, &fval);
X	GetValues(file_selfile);
X	FirstArg(XtNstring, &dval);
X	GetValues(file_dir);
X
X	if (emptyname_msg(fval, "SAVE"))
X	    return;
X
X	if (change_directory(dval) == 0) {
X	    XtSetSensitive(save, False);
X	    if (write_file(fval) == 0) {
X		strcpy(cur_filename, fval);
X		reset_modifiedflag();
X		file_panel_dismiss();
X	    }
X	    XtSetSensitive(save, True);
X	}
X    } else {
X	if (write_file(cur_filename) == 0)
X	    reset_modifiedflag();
X    }
X}
X
Xstatic void
Xfile_panel_cancel(w, ev)
X    Widget	    w;
X    XButtonEvent   *ev;
X{
X    file_panel_dismiss();
X}
X
Xpopup_file_panel(w)
X    Widget	    w;
X{
X    Widget	    file, dir, beside, below;
X    XtTranslations  popdown_actions;
X    PIX_FONT	    temp_font;
X
X
X    set_temp_cursor(wait_cursor);
X    XtSetSensitive(w, False);
X
X    if (!file_popup) {
X	file_w = w;
X	XtTranslateCoords(w, (Position) 0, (Position) 0, &xposn, &yposn);
X
X	FirstArg(XtNx, xposn);
X	NextArg(XtNy, yposn + 50);
X	NextArg(XtNtitle, "Xfig: File menu");
X	file_popup = XtCreatePopupShell("xfig_file_menu",
X					transientShellWidgetClass,
X					tool, Args, ArgCount);
X
X	file_panel = XtCreateManagedWidget("file_panel", formWidgetClass,
X					   file_popup, NULL, ZERO);
X	popdown_actions = XtParseTranslationTable("<Btn1Up>:\n");
X	XtOverrideTranslations(file_panel, popdown_actions);
X
X	FirstArg(XtNlabel, "");
X	NextArg(XtNwidth, 400);
X	NextArg(XtNjustify, XtJustifyLeft);
X	NextArg(XtNborderWidth, 0);
X	NextArg(XtNresize, False);
X	file_status = XtCreateManagedWidget("file_status", labelWidgetClass,
X					    file_panel, Args, ArgCount);
X
X	FirstArg(XtNlabel, "");
X	NextArg(XtNwidth, 400);
X	NextArg(XtNfromVert, file_status);
X	NextArg(XtNjustify, XtJustifyLeft);
X	NextArg(XtNborderWidth, 0);
X	NextArg(XtNresize, False);
X	num_objects = XtCreateManagedWidget("num_objects", labelWidgetClass,
X					    file_panel, Args, ArgCount);
X
X	FirstArg(XtNlabel, "         Filename:");
X	NextArg(XtNvertDistance, 15);
X	NextArg(XtNfromVert, num_objects);
X	NextArg(XtNborderWidth, 0);
X	file = XtCreateManagedWidget("file_label", labelWidgetClass,
X				     file_panel, Args, ArgCount);
X	FirstArg(XtNfont, &temp_font);
X	GetValues(file);
X
X	FirstArg(XtNwidth, 350);
X	NextArg(XtNheight, char_height(temp_font) * 2 + 4);
X	NextArg(XtNeditType, "edit");
X	NextArg(XtNstring, cur_filename);
X	NextArg(XtNinsertPosition, strlen(cur_filename));
X	NextArg(XtNfromHoriz, file);
X	NextArg(XtNborderWidth, INTERNAL_BW);
X	NextArg(XtNvertDistance, 15);
X	NextArg(XtNfromVert, num_objects);
X	NextArg(XtNscrollHorizontal, XawtextScrollWhenNeeded);
X	file_selfile = XtCreateManagedWidget("file_name", asciiTextWidgetClass,
X					     file_panel, Args, ArgCount);
X	XtOverrideTranslations(file_selfile,
X			   XtParseTranslationTable(text_translations));
X
X	/* add action to load file */
X	XtAppAddActions(tool_app, file_name_actions, XtNumber(file_name_actions));
X
X	/* make <return> in the filename window load the file */
X	XtOverrideTranslations(file_selfile,
X			   XtParseTranslationTable(file_name_translations));
X
X	create_dirinfo(file_panel, file_selfile, &beside, &below,
X		       &file_mask, &file_dir, &file_flist, &file_dlist);
X
X	FirstArg(XtNlabel, "Cancel");
X	NextArg(XtNvertDistance, 15);
X	NextArg(XtNhorizDistance, 25);
X	NextArg(XtNheight, 25);
X	NextArg(XtNfromHoriz, beside);
X	NextArg(XtNfromVert, below);
X	NextArg(XtNborderWidth, INTERNAL_BW);
X	cancel = XtCreateManagedWidget("cancel", commandWidgetClass,
X				       file_panel, Args, ArgCount);
X	XtAddEventHandler(cancel, ButtonReleaseMask, (Boolean) 0,
X			  (XtEventHandler)file_panel_cancel, (XtPointer) NULL);
X
X	FirstArg(XtNlabel, "Save");
X	NextArg(XtNfromHoriz, cancel);
X	NextArg(XtNfromVert, below);
X	NextArg(XtNvertDistance, 15);
X	NextArg(XtNhorizDistance, 25);
X	NextArg(XtNheight, 25);
X	NextArg(XtNborderWidth, INTERNAL_BW);
X	save = XtCreateManagedWidget("save", commandWidgetClass,
X				     file_panel, Args, ArgCount);
X	XtAddEventHandler(save, ButtonReleaseMask, (Boolean) 0,
X			  (XtEventHandler)do_save, (XtPointer) NULL);
X
X	FirstArg(XtNlabel, "Load");
X	NextArg(XtNborderWidth, INTERNAL_BW);
X	NextArg(XtNfromHoriz, save);
X	NextArg(XtNfromVert, below);
X	NextArg(XtNvertDistance, 15);
X	NextArg(XtNhorizDistance, 25);
X	NextArg(XtNheight, 25);
X	load = XtCreateManagedWidget("load", commandWidgetClass,
X				     file_panel, Args, ArgCount);
X	XtAddEventHandler(load, ButtonReleaseMask, (Boolean) 0,
X			  (XtEventHandler)do_load, (XtPointer) NULL);
X
X	FirstArg(XtNlabel, "Merge Read");
X	NextArg(XtNfromHoriz, load);
X	NextArg(XtNfromVert, below);
X	NextArg(XtNborderWidth, INTERNAL_BW);
X	NextArg(XtNvertDistance, 15);
X	NextArg(XtNhorizDistance, 25);
X	NextArg(XtNheight, 25);
X	merge = XtCreateManagedWidget("merge", commandWidgetClass,
X				      file_panel, Args, ArgCount);
X	XtAddEventHandler(merge, ButtonReleaseMask, (Boolean) 0,
X			  (XtEventHandler)do_merge, (XtPointer) NULL);
X    } else {
X	file_up = True;
X	Rescan();
X	file_up = False;
X    }
X    FirstArg(XtNlabel, (figure_modified ? "      File Status: Modified	  " :
X			"      File Status: Not modified"));
X    SetValues(file_status);
X    sprintf(buf, "Number of Objects: %d", object_count(&objects));
X    FirstArg(XtNlabel, buf);
X    SetValues(num_objects);
X    XtPopup(file_popup, XtGrabNonexclusive);
X    if (file_msg_is_popped)
X	XtAddGrab(file_msg_popup, False, False);
X    file_up = True;
X    reset_cursor();
X}
END_OF_FILE
if test 8335 -ne `wc -c <'w_file.c'`; then
    echo shar: \"'w_file.c'\" unpacked with wrong size!
fi
# end of 'w_file.c'
fi
echo shar: End of archive 18 \(of 25\).
cp /dev/null ark18isdone
MISSING=""
for I in 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 ; do
    if test ! -f ark${I}isdone ; then
	MISSING="${MISSING} ${I}"
    fi
done
if test "${MISSING}" = "" ; then
    echo You have unpacked all 25 archives.
    rm -f ark[1-9]isdone ark[1-9][0-9]isdone
else
    echo You still need to unpack the following archives:
    echo "        " ${MISSING}
fi
##  End of shell archive.
exit 0
-- 
Molecular Simulations, Inc.             mail: dcmartin@msi.com
796 N. Pastoria Avenue                  uucp: uunet!dcmartin
Sunnyvale, California 94086             at&t: 408/522-9236
