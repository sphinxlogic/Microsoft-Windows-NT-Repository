Path: uunet!zaphod.mps.ohio-state.edu!mips!msi!dcmartin
From: envbvs@bea.lbl.gov (Brian V. Smith)
Newsgroups: comp.sources.x
Subject: v16i020: Xfig 2.1.3, Part15/25
Message-ID: <1992Feb4.150111.1083@msi.com>
Date: 4 Feb 92 15:01:11 GMT
References: <csx-16i006-xfig-2.1.3@uunet.UU.NET>
Sender: dcmartin@msi.com (David C. Martin - Moderator)
Organization: Molecular Simulations, Inc.
Lines: 1588
Approved: dcmartin@msi.com
Originator: dcmartin@fascet

Submitted-by: envbvs@bea.lbl.gov (Brian V. Smith)
Posting-number: Volume 16, Issue 20
Archive-name: xfig-2.1.3/part15

# This is a shell archive.  Remove anything before this line, then feed it
# into a shell via "sh file" or similar.  To overwrite existing files,
# type "sh file -c".
# The tool that generated this appeared in the comp.sources.unix newsgroup;
# send mail to comp-sources-unix@uunet.uu.net if you want that tool.
# If this archive is complete, you will see the following message at the end:
#		"End of archive 15 (of 25)."
# Contents:  Examples/test2.fig.uu f_readold.c u_create.c
#   w_fontbits.c.Z.uu w_fontbits2.c.Z.uu
# Wrapped by dcmartin@fascet on Tue Feb  4 06:42:30 1992
PATH=/bin:/usr/bin:/usr/ucb ; export PATH
if test -f 'Examples/test2.fig.uu' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'Examples/test2.fig.uu'\"
else
echo shar: Extracting \"'Examples/test2.fig.uu'\" \(7256 characters\)
sed "s/^X//" >'Examples/test2.fig.uu' <<'END_OF_FILE'
Xbegin 644 test2.fig
XM(T9)1R`R+C`*.#`@,@HU(#$@,"`R(#`@,"`P(#`@,"XP,#`@,2`P(#`@,3@U
XM+C0U,2`R-#DN-#`R(#$W,"`Q.#$@,30P(#$Y-B`Q,3D@,C(W"C4@,2`P(#(@
XM,"`P(#`@,"`P+C`P,"`Q(#`@,"`Q,CDN,S4V(#(W-RXT-#<@,3,X(#$V-"`V
XM.2`Q.#$@,S<@,C$Q"C4@,2`P(#(@,"`P(#`@,"`P+C`P,"`Q(#`@,"`Q-34N
XM-CDX(#(Q+C<R-R`T,"`Q,#8@,3`Q(#$U-"`Q-#`@,38T"C4@,2`P(#(@,"`P
XM(#`@,"`P+C`P,"`Q(#`@,"`Q.3`N,S`P(#$P,2XU,C4@,3(R(#$R,R`Q,S4@
XM,30W(#$W,R`Q-S$*,2`R(#`@,2`P(#`@,"`P(#`N,#`P(#$@,"XP,#`@,38S
XM(#0V."`R-2`V(#$S."`T-S0@,3@Y(#0V,@HQ(#$@,"`Q(#`@,"`P(#`@,"XP
XM,#`@,2`P+C`P,"`Q-C,@-30W(#D@,R`Q-C,@-30W(#$U-"`U-#D*,B`Q(#`@
XM,B`P(#`@,"`P(#`N,#`P(#`@,`H)(#(W-"`U.2`V,C0@-3D@.3DY.2`Y.3DY
XM"C(@,B`P(#(@,"`P(#`@,"`P+C`P,"`P(#`*"2`S,30@,S,T(#,W-"`S,S0@
XM,S<T(#,V-"`S,30@,S8T(#,Q-"`S,S0@.3DY.2`Y.3DY"C(@,B`P(#(@,"`P
XM(#`@,"`P+C`P,"`P(#`*"2`R-#D@,3`P(#(X-"`Q,#`@,C@T(#$Q-"`R-#D@
XM,3$T(#(T.2`Q,#`@.3DY.2`Y.3DY"C(@,2`P(#(@,"`P(#`@,"`P+C`P,"`P
XM(#`*"2`R-S4@,3DS(#(W.2`Q.3,@.3DY.2`Y.3DY"C(@,2`P(#(@,"`P(#`@
XM,"`P+C`P,"`P(#`*"2`S-2`R,3`@,3$Y(#(R-R`Y.3DY(#DY.3D*,B`Q(#`@
XM,B`P(#`@,"`P(#`N,#`P(#`@,`H)(#(U-B`Q-#4@,C@Q(#$U,"`Y.3DY(#DY
XM.3D*,B`Q(#`@,B`P(#`@,"`P(#`N,#`P(#`@,`H)(#(W."`Q-C,@,C<X(#$X
XM-"`Y.3DY(#DY.3D*,B`Q(#`@,B`P(#`@,"`P(#`N,#`P(#`@,`H)(#(W."`Q
XM-C,@,C4S(#$U-R`Y.3DY(#DY.3D*,B`Q(#`@,B`P(#`@,"`P(#`N,#`P(#`@
XM,`H)(#(T.2`Q-C<@,C<Y(#$V,R`Y.3DY(#DY.3D*,B`Q(#`@,B`P(#`@,"`P
XM(#`N,#`P(#`@,`H)(#$S."`Q-C0@,3<X(#$W,2`Y.3DY(#DY.3D*,B`Q(#`@
XM,B`P(#`@,"`P(#`N,#`P(#`@,`H)(#$W,R`Q-S$@,C8U(#$U-2`R-SD@,34R
XM(#(X,R`Q-3`@.3DY.2`Y.3DY"C(@,2`P(#(@,"`P(#`@,"`P+C`P,"`P(#`*
XM"2`Q-34@,38S(#(U-B`Q-#4@.3DY.2`Y.3DY"C(@,2`P(#(@,"`P(#`@,"`P
XM+C`P,"`P(#`*"2`Q-S`@,3@Q(#(U,2`Q-C<@.3DY.2`Y.3DY"C(@,2`P(#(@
XM,"`P(#`@,"`P+C`P,"`P(#`*"2`T,"`Q,#8@,3(T(#$R,R`Y.3DY(#DY.3D*
XM,B`Q(#`@,B`P(#`@,"`P(#`N,#`P(#`@,`H)(#(V-2`Q-#8@,C8U(#$T-B`R
XM-C4@,3$T(#DY.3D@.3DY.0HR(#$@,"`R(#`@,"`P(#`@,"XP,#`@,"`P"@D@
XM,C8Y(#$X-"`R.#8@,3@T(#DY.3D@.3DY.0HR(#$@,"`R(#`@,"`P(#`@,"XP
XM,#`@,"`P"@D@,C<Q(#$X."`R.#0@,3@X(#DY.3D@.3DY.0HR(#$@,"`R(#`@
XM,"`P(#`@,"XP,#`@,"`P"@D@,C4S(#,U,B`S,3`@,S4R(#DY.3D@.3DY.0HR
XM(#$@,"`R(#`@,"`P(#`@,"XP,#`@,"`P"@D@,C4W(#,T-2`Y.3DY(#DY.3D*
XM,B`Q(#`@,B`P(#`@,"`P(#`N,#`P(#`@,`H)(#0U(#,U,B`S,30@,S4R(#DY
XM.3D@.3DY.0HR(#$@,"`R(#`@,"`P(#`@,"XP,#`@,"`P"@D@,C4W(#,T-2`R
XM-3<@,C@W(#DY.3D@.3DY.0HR(#$@,"`R(#`@,"`P(#`@,"XP,#`@,"`P"@D@
XM,C4W(#,V,"`R-3<@-#$T(#DY.3D@.3DY.0HR(#$@,"`R(#`@,"`P(#`@,"XP
XM,#`@,"`P"@D@,C4W(#,T-2`S,#@@,S0U(#DY.3D@.3DY.0HR(#$@,"`R(#`@
XM,"`P(#`@,"XP,#`@,"`P"@D@,C4W(#,V,"`S,#,@,S8P(#DY.3D@.3DY.0HR
XM(#$@,"`Q(#`@,"`P(#`@,"XP,#`@,"`P"@D@-3(@-3@V(#4S(#4X-B`Y.3DY
XM(#DY.3D*,B`Q(#`@,2`P(#`@,"`P(#`N,#`P(#`@,`H)(#4S(#4X-B`U,R`U
XM.#<@.3DY.2`Y.3DY"C(@,B`P(#$@,"`P(#`@,"`P+C`P,"`P(#`*"2`Q-#0@
XM-C`V(#$W.2`V,#8@,3<Y(#8Q-B`Q-#0@-C$V(#$T-"`V,#8@.3DY.2`Y.3DY
XM"C(@,2`P(#$@,"`P(#`@,"`P+C`P,"`P(#`*"2`Q-C,@-30U(#$V,R`U-#D@
XM.3DY.2`Y.3DY"C(@,2`P(#$@,"`P(#`@,"`P+C`P,"`P(#`*"2`Q-C,@-3@W
XM(#$V,R`V,#8@.3DY.2`Y.3DY"C(@,2`P(#$@,"`P(#`@,"`P+C`P,"`P(#`*
XM"2`U,B`U.#8@,3DV(#4X-B`Y.3DY(#DY.3D*,B`Q(#`@,2`P(#`@,"`P(#`N
XM,#`P(#`@,`H)(#4R(#4X-R`Q.38@-3@W(#DY.3D@.3DY.0HR(#$@,"`Q(#`@
XM,"`P(#`@,"XP,#`@,"`P"@D@-3(@-3@W(#$Y-B`U.#<@.3DY.2`Y.3DY"C(@
XM,2`P(#$@,"`P(#`@,"`P+C`P,"`P(#`*"2`U,B`U.#<@,3DV(#4X-R`Y.3DY
XM(#DY.3D*,B`Q(#`@,2`P(#`@,"`P(#`N,#`P(#`@,`H)(#4R(#4X-R`Q.38@
XM-3@W(#DY.3D@.3DY.0HR(#$@,"`Q(#`@,"`P(#`@,"XP,#`@,"`P"@D@-3(@
XM-3@W(#$Y-B`U.#<@.3DY.2`Y.3DY"C(@,2`P(#$@,"`P(#`@,"`P+C`P,"`P
XM(#`*"2`Q.38@-3@X(#(U,"`T.3@@.3DY.2`Y.3DY"C(@,2`P(#$@,"`P(#`@
XM,"`P+C`P,"`P(#`*"2`Q.38@-3@W(#(U,2`T.3<@.3DY.2`Y.3DY"C(@,2`P
XM(#$@,"`P(#`@,"`P+C`P,"`P(#`*"2`Q.38@-3@V(#(U,2`T.34@.3DY.2`Y
XM.3DY"C(@,2`P(#$@,"`P(#`@,"`P+C`P,"`P(#`*"2`Q.38@-3@V(#$Y-B`V
XM,#(@.3DY.2`Y.3DY"C(@,2`P(#$@,"`P(#`@,"`P+C`P,"`P(#`*"2`Q.#(@
XM-#DU(#(U,2`T.34@.3DY.2`Y.3DY"C(@,2`P(#$@,"`P(#`@,"`P+C`P,"`P
XM(#`*"2`Q.38@-3@V(#(U,2`T.34@.3DY.2`Y.3DY"C(@,2`P(#$@,"`P(#`@
XM,"`P+C`P,"`P(#`*"2`Q-#0@-#DU(#4S(#4X-B`Y.3DY(#DY.3D*,B`Q(#`@
XM,2`P(#`@,"`P(#`N,#`P(#`@,`H)(#$V,R`U-#<@,3@Y(#0W,"`Y.3DY(#DY
XM.3D*,B`Q(#`@,2`P(#`@,"`P(#`N,#`P(#`@,`H)(#$V,R`U-#<@,3,X(#0W
XM,"`Y.3DY(#DY.3D*,B`Q(#`@,2`P(#`@,"`P(#`N,#`P(#`@,`H)(#$X.2`V
XM,#(@,C`U(#8P,B`Y.3DY(#DY.3D*,B`Q(#`@,2`P(#`@,"`P(#`N,#`P(#`@
XM,`H)(#$Y,2`V,#4@,C`S(#8P-2`Y.3DY(#DY.3D*,B`Q(#`@,2`P(#`@,"`P
XM(#`N,#`P(#`@,`H)(#$Y-"`V,#@@,3DY(#8P."`Y.3DY(#DY.3D*,R`R(#`@
XM,B`P(#`@,"`P(#`N,#`P(#`@,`H)(#0U(#,U,B`T,2`S-C(@-3(@,S@S(#<Y
XM(#,W,"`X-"`S,S<@-S$@,S(S(#4Q(#,T.2`W.2`S.38@,3(S(#,V,R`Q,C4@
XM,S,P(#$P-"`S,34@.3$@,S4P(#$R,"`T,#(@,38W(#,V,B`Q-C8@,S$X(#$T
XM,B`S,#4@,3(Y(#,V,"`Q-CD@-#$P(#(Q."`S-C,@,C(P(#,Q-B`Q.3,@,CDQ
XM(#$W-B`S-3<@,C$U(#0R-R`R-3$@,S<S(#DY.3D@.3DY.0H)("TV-BXX,3,@
XM,3<U+C`Y-"`T,BXR,3<@,S4W+C(Q.2`T,2XP.#@@,S4Y+C0W,B`T,2XP.#@@
XM,S8X+C@S,R`T,RXP-C0@,S@Q+C`V,R`V,RXU-#@@,S@W+C@W."`W-"XS,CD@
XM,S<W+C@R,R`X-2XR-30@,S8R+C4T-2`X-RXP.3<@,S0V+C`T-2`X,BXR,CD@
XM,S,Q+C8Y-2`W-RXT.30@,S(R+CDX,B`U."XV,#@@,S(S+CDR,B`U,"XX,3,@
XM,S,W+C4V-B`T."XY,#D@,S8V+C0T-R`U.2XP-3`@,SDQ+C0Y,B`Y."XY-CD@
XM,SDY+C$X-"`Q,34N,C$S(#,W-BXX.3(@,3(V+CDP,2`S-34N-C`P(#$R."XV
XM-C8@,S,Y+C$Q-R`Q,C$N-3,T(#,R,RXR-#<@,3$R+C,V-B`S,3(N,#0T(#DR
XM+C$Y-B`S,3<N-S,U(#@Y+CDQ,B`S,SDN-C0T(#DR+C`T-B`S-C8N.30X(#DY
XM+C4W,R`S.3@N-3@W(#$T,2XU.#$@-#`U+CDU,"`Q-C`N-3`X(#,W-RXY,3@@
XM,3<R+C,Q,"`S-3`N-#(Y(#$W,2XW,3(@,S(Y+C4V,B`Q-C$N,C<X(#,Q,BXR
XM-#@@,34P+C8S,R`S,#(N,#$X(#$R-2XW-S8@,S$R+C(Y-"`Q,C4N.#,P(#,T
XM,RXY,3<@,3,S+C`Q-2`S-S<N-C,T(#$T-2XW-C,@-#`Y+C<T,2`Q.30N,34V
XM(#0Q,BXV-S4@,C`Y+CDX,"`S.#`N,#@X(#(R,BXR-#8@,S4R+C0Q-2`R,C0N
XM-#<U(#,R."XX,C@@,C$U+C4P-"`S,#<N,#@W(#(P,BXQ-3$@,C@X+C@P-"`Q
XM-S0N,S,T(#(Y-RXR-S$@,3<T+C$W-2`S,SDN-#@P(#$W.2XS,C`@,S<X+C`T
XM,"`Q.3(N,3<W(#0R-2XY.#4@,C(X+C@Q,2`T,C<N-38U(#(S-RXX-#$@-#$T
XM+C`T."`M-C8N.#$S(#$W-2XP.30*,R`R(#`@,B`P(#`@,"`P(#`N,#`P(#`@
XM,`H)(#0W(#,U,"`T-"`S-C`@-30@,S@R(#@R(#,V.2`X-B`S,S4@-S(@,S(R
XM(#4R(#,T-2`X,B`S.30@,3(U(#,V,B`Q,C<@,S(X(#$P-B`S,3(@.3,@,S0Y
XM(#$R,R`T,#`@,38Y(#,V,"`Q-C<@,S$V(#$T-"`S,#,@,3,Q(#,U-R`Q-S(@
XM-#`Y(#(R,"`S-C(@,C(R(#,Q-2`Q.34@,C@Y(#$W.2`S-34@,C$X(#0R-2`R
XM-3,@,S<P(#DY.3D@.3DY.0H)("TV-"XU-38@,3<R+C@T,2`T-"XT-S0@,S4T
XM+CDV-B`T,RXS-#4@,S4W+C(Q.2`T,RXS-#8@,S8V+C4X,"`T-2XS,C$@,S<X
XM+C@Q,"`V-2XX,#8@,S@U+C8R-2`W-BXU.#8@,S<U+C4W,2`X-RXU,3(@,S8P
XM+C(Y,B`X.2XS-30@,S0S+C<Y,B`X-"XT.#8@,S(Y+C0T,B`W.2XW-3$@,S(P
XM+C<R.2`V,"XX-C8@,S(Q+C8V.2`U,RXP-S`@,S,U+C,Q,R`U,2XQ-C<@,S8T
XM+C$Y-"`V,2XS,#<@,S@Y+C(S.2`Q,#$N,C(W(#,Y-BXY,S$@,3$W+C0W,"`S
XM-S0N-C0P(#$R.2XQ-3@@,S4S+C,T-R`Q,S`N.3(S(#,S-BXX-C0@,3(S+C<Y
XM,2`S,C`N.3DT(#$Q-"XV,C,@,S`Y+C<Y,B`Y-"XT-30@,S$U+C0X,B`Y,BXQ
XM-CD@,S,W+C,Y,2`Y-"XS,#,@,S8T+C8Y-2`Q,#$N.#,P(#,Y-BXS,S0@,30S
XM+C@S."`T,#,N-CDW(#$V,BXW-C8@,S<U+C8V-2`Q-S0N-38W(#,T."XQ-S8@
XM,3<S+CDV.2`S,C<N,S`Y(#$V,RXU,S4@,S`Y+CDY-2`Q-3(N.#DP(#(Y.2XW
XM-C4@,3(X+C`S-"`S,3`N,#0Q(#$R."XP.#<@,S0Q+C8V-"`Q,S4N,C<R(#,W
XM-2XS.#(@,30X+C`R,2`T,#<N-#@X(#$Y-BXT,3,@-#$P+C0R,B`R,3(N,C,W
XM(#,W-RXX,S4@,C(T+C4P,R`S-3`N,38R(#(R-BXW,S(@,S(V+C4W-2`R,3<N
XM-S8R(#,P-"XX,S0@,C`T+C0P."`R.#8N-34Q(#$W-BXU.3$@,CDU+C`Q."`Q
XM-S8N-#,R(#,S-RXR,C<@,3@Q+C4W-R`S-S4N-S@W(#$Y-"XT,S0@-#(S+C<S
XM,B`R,S$N,#8X(#0R-2XS,3(@,C0P+C`Y."`T,3$N-SDU("TV-"XU-38@,3<R
XM+C@T,0HT(#`@,"`R,B`P(#`@,"`P+C`P,"`Q(#(R(#,T.2`R-S0@-30@0F%S
XM:6,@56QT<F$M=VED96)A;F0@06YT96YN82!3:&%P97,!"C0@,"`P(#$X(#`@
XM,"`P(#`N,#`P(#$@,3<@,34Y(#(W.2`U,SD@8V]N92!O;B!G<F]U;F0@<&QA
XM;F4!"C0@,"`P(#$X(#`@,"`P(#`N,#`P(#$@,3<@.3D@,C<Y(#0Q.2!C;VYI
XM8V%L('-P:7)A;`$*-"`P(#`@,3@@,"`P(#`@,"XP,#`@,2`Q,R`Q,C<@,3@T
XM(#(Q.2!F;&%R960@5$5-(&AO<FX!"C0@,"`P(#$X(#`@,"`P(#`N,#`P(#$@
X;,3<@.#0@-#`T(#8S-"!&:6=U<F4@24DM,P$*
X`
Xend
END_OF_FILE
if test 7256 -ne `wc -c <'Examples/test2.fig.uu'`; then
    echo shar: \"'Examples/test2.fig.uu'\" unpacked with wrong size!
fi
# end of 'Examples/test2.fig.uu'
fi
if test -f 'f_readold.c' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'f_readold.c'\"
else
echo shar: Extracting \"'f_readold.c'\" \(11085 characters\)
sed "s/^X//" >'f_readold.c' <<'END_OF_FILE'
X/*
X * FIG : Facility for Interactive Generation of figures
X * Copyright (c) 1985 by Supoj Sutanthavibul
X *
X * "Permission to use, copy, modify, distribute, and sell this software and its
X * documentation for any purpose is hereby granted without fee, provided that
X * the above copyright notice appear in all copies and that both that
X * copyright notice and this permission notice appear in supporting
X * documentation, and that the name of M.I.T. not be used in advertising or
X * publicity pertaining to distribution of the software without specific,
X * written prior permission.  M.I.T. makes no representations about the
X * suitability of this software for any purpose.  It is provided "as is"
X * without express or implied warranty."
X *
X */
X
X/*******************************************************************/
X/***************       Read version 1.3 format	     ***************/
X/*******************************************************************/
X#include "fig.h"
X#include "object.h"
X#include "u_create.h"
X
X/*******    Fig 1.3 subtype of objects	  *******/
X#define			DRAW_ELLIPSE_BY_RAD	1
X#define			DRAW_ELLIPSE_BY_DIA	2
X#define			DRAW_CIRCLE_BY_RAD	3
X#define			DRAW_CIRCLE_BY_DIA	4
X#define			DRAW_CIRCULAR_ARC	5
X#define			DRAW_POLYLINE		6
X#define			DRAW_BOX		7
X#define			DRAW_POLYGON		8
X#define			DRAW_TEXT		9
X#define			DRAW_SPLINE		10
X#define			DRAW_CLOSEDSPLINE	11
X#define			DRAW_COMPOUND		13
X
Xstatic F_ellipse *read_1_3_ellipseobject();
Xstatic F_line  *read_1_3_lineobject();
Xstatic F_text  *read_1_3_textobject();
Xstatic F_spline *read_1_3_splineobject();
Xstatic F_arc   *read_1_3_arcobject();
Xstatic F_compound *read_1_3_compoundobject();
X
Xextern int	line_no;
Xextern int	num_object;
X
Xint
Xread_1_3_objects(fp, obj)
X    FILE	   *fp;
X    F_compound	   *obj;
X{
X    F_ellipse	   *e, *le = NULL;
X    F_line	   *l, *ll = NULL;
X    F_text	   *t, *lt = NULL;
X    F_spline	   *s, *ls = NULL;
X    F_arc	   *a, *la = NULL;
X    F_compound	   *c, *lc = NULL;
X    int		    n;
X    int		    object, pixperinch, canvaswid, canvasht, coord_sys;
X
X    n = fscanf(fp, "%d%d%d%d\n", &pixperinch, &coord_sys, &canvaswid, &canvasht);
X    if (n != 4) {
X	put_msg("Incorrect format in the first line in input file");
X	return (-1);
X    }
X    obj->nwcorner.x = pixperinch;
X    obj->nwcorner.y = coord_sys;
X    while (fscanf(fp, "%d", &object) == 1) {
X	switch (object) {
X	case O_POLYLINE:
X	    if ((l = read_1_3_lineobject(fp)) == NULL)
X		return (-1);
X	    if (ll)
X		ll = (ll->next = l);
X	    else
X		ll = obj->lines = l;
X	    num_object++;
X	    break;
X	case O_SPLINE:
X	    if ((s = read_1_3_splineobject(fp)) == NULL)
X		return (-1);
X	    if (ls)
X		ls = (ls->next = s);
X	    else
X		ls = obj->splines = s;
X	    num_object++;
X	    break;
X	case O_ELLIPSE:
X	    if ((e = read_1_3_ellipseobject(fp)) == NULL)
X		return (-1);
X	    if (le)
X		le = (le->next = e);
X	    else
X		le = obj->ellipses = e;
X	    num_object++;
X	    break;
X	case O_ARC:
X	    if ((a = read_1_3_arcobject(fp)) == NULL)
X		return (-1);
X	    if (la)
X		la = (la->next = a);
X	    else
X		la = obj->arcs = a;
X	    num_object++;
X	    break;
X	case O_TEXT:
X	    if ((t = read_1_3_textobject(fp)) == NULL)
X		return (-1);
X	    if (lt)
X		lt = (lt->next = t);
X	    else
X		lt = obj->texts = t;
X	    num_object++;
X	    break;
X	case O_COMPOUND:
X	    if ((c = read_1_3_compoundobject(fp)) == NULL)
X		return (-1);
X	    if (lc)
X		lc = (lc->next = c);
X	    else
X		lc = obj->compounds = c;
X	    num_object++;
X	    break;
X	default:
X	    put_msg("Incorrect object code %d", object);
X	    return (-1);
X	}			/* switch */
X    }				/* while */
X    if (feof(fp))
X	return (0);
X    else
X	return (errno);
X}
X
Xstatic F_arc   *
Xread_1_3_arcobject(fp)
X    FILE	   *fp;
X{
X    F_arc	   *a;
X    int		    f, b, h, w, n;
X
X    if ((a = create_arc()) == NULL)
X	return (NULL);
X
X    a->type = T_3_POINTS_ARC;
X    a->color = BLACK;
X    a->depth = 0;
X    a->pen = 0;
X    a->for_arrow = NULL;
X    a->back_arrow = NULL;
X    a->next = NULL;
X    n = fscanf(fp, " %d %d %d %f %d %d %d %d %d %f %f %d %d %d %d %d %d\n",
X	       &a->type, &a->style, &a->thickness,
X	       &a->style_val, &a->direction, &f, &b,
X	       &h, &w, &a->center.x, &a->center.y,
X	       &a->point[0].x, &a->point[0].y,
X	       &a->point[1].x, &a->point[1].y,
X	       &a->point[2].x, &a->point[2].y);
X    if (n != 17) {
X	put_msg("incomplete arc data");
X	free((char *) a);
X	return (NULL);
X    }
X    if (f) {
X	a->for_arrow = forward_arrow();
X	a->for_arrow->wid = w;
X	a->for_arrow->ht = h;
X    }
X    if (b) {
X	a->back_arrow = backward_arrow();
X	a->back_arrow->wid = w;
X	a->back_arrow->ht = h;
X    }
X    return (a);
X}
X
Xstatic F_compound *
Xread_1_3_compoundobject(fp)
X    FILE	   *fp;
X{
X    F_arc	   *a, *la = NULL;
X    F_ellipse	   *e, *le = NULL;
X    F_line	   *l, *ll = NULL;
X    F_spline	   *s, *ls = NULL;
X    F_text	   *t, *lt = NULL;
X    F_compound	   *com, *c, *lc = NULL;
X    int		    n, object;
X
X    if ((com = create_compound()) == NULL)
X	return (NULL);
X
X    com->arcs = NULL;
X    com->ellipses = NULL;
X    com->lines = NULL;
X    com->splines = NULL;
X    com->texts = NULL;
X    com->compounds = NULL;
X    com->next = NULL;
X    n = fscanf(fp, " %d %d %d %d\n", &com->nwcorner.x, &com->nwcorner.y,
X	       &com->secorner.x, &com->secorner.y);
X    if (n != 4) {
X	put_msg("Incorrect compound object format");
X	return (NULL);
X    }
X    while (fscanf(fp, "%d", &object) == 1) {
X	switch (object) {
X	case O_POLYLINE:
X	    if ((l = read_1_3_lineobject(fp)) == NULL) {
X		free_line(&l);
X		return (NULL);
X	    }
X	    if (ll)
X		ll = (ll->next = l);
X	    else
X		ll = com->lines = l;
X	    break;
X	case O_SPLINE:
X	    if ((s = read_1_3_splineobject(fp)) == NULL) {
X		free_spline(&s);
X		return (NULL);
X	    }
X	    if (ls)
X		ls = (ls->next = s);
X	    else
X		ls = com->splines = s;
X	    break;
X	case O_ELLIPSE:
X	    if ((e = read_1_3_ellipseobject(fp)) == NULL) {
X		free_ellipse(&e);
X		return (NULL);
X	    }
X	    if (le)
X		le = (le->next = e);
X	    else
X		le = com->ellipses = e;
X	    break;
X	case O_ARC:
X	    if ((a = read_1_3_arcobject(fp)) == NULL) {
X		free_arc(&a);
X		return (NULL);
X	    }
X	    if (la)
X		la = (la->next = a);
X	    else
X		la = com->arcs = a;
X	    break;
X	case O_TEXT:
X	    if ((t = read_1_3_textobject(fp)) == NULL) {
X		free_text(&t);
X		return (NULL);
X	    }
X	    if (lt)
X		lt = (lt->next = t);
X	    else
X		lt = com->texts = t;
X	    break;
X	case O_COMPOUND:
X	    if ((c = read_1_3_compoundobject(fp)) == NULL) {
X		free_compound(&c);
X		return (NULL);
X	    }
X	    if (lc)
X		lc = (lc->next = c);
X	    else
X		lc = com->compounds = c;
X	    break;
X	case O_END_COMPOUND:
X	    return (com);
X	}			/* switch */
X    }
X    if (feof(fp))
X	return (com);
X    else {
X	put_msg("Format error: %s", sys_errlist[errno]);
X	return (NULL);
X    }
X}
X
Xstatic F_ellipse *
Xread_1_3_ellipseobject(fp)
X    FILE	   *fp;
X{
X    F_ellipse	   *e;
X    int		    n, t;
X
X    if ((e = create_ellipse()) == NULL)
X	return (NULL);
X
X    e->color = BLACK;
X    e->angle = 0.0;
X    e->depth = 0;
X    e->pen = 0;
X    e->fill_style = NULL;
X    e->next = NULL;
X    n = fscanf(fp, " %d %d %d %f %d %d %d %d %d %d %d %d %d\n",
X	       &t, &e->style,
X	       &e->thickness, &e->style_val, &e->direction,
X	       &e->center.x, &e->center.y,
X	       &e->radiuses.x, &e->radiuses.y,
X	       &e->start.x, &e->start.y,
X	       &e->end.x, &e->end.y);
X    if (n != 13) {
X	put_msg("incomplete ellipse data");
X	free((char *) e);
X	return (NULL);
X    }
X    if (t == DRAW_ELLIPSE_BY_RAD)
X	e->type = T_ELLIPSE_BY_RAD;
X    else if (t == DRAW_ELLIPSE_BY_DIA)
X	e->type = T_ELLIPSE_BY_DIA;
X    else if (t == DRAW_CIRCLE_BY_RAD)
X	e->type = T_CIRCLE_BY_RAD;
X    else
X	e->type = T_CIRCLE_BY_DIA;
X    return (e);
X}
X
Xstatic F_line  *
Xread_1_3_lineobject(fp)
X    FILE	   *fp;
X{
X    F_line	   *l;
X    F_point	   *p, *q;
X    int		    f, b, h, w, n, t, x, y;
X
X    if ((l = create_line()) == NULL)
X	return (NULL);
X
X    l->color = BLACK;
X    l->depth = 0;
X    l->pen = 0;
X    l->fill_style = NULL;
X    l->for_arrow = NULL;
X    l->back_arrow = NULL;
X    l->next = NULL;
X    if ((p = create_point()) == NULL) {
X	free((char *) l);
X	return (NULL);
X    }
X    l->points = p;
X    n = fscanf(fp, " %d %d %d %f %d %d %d %d %d %d", &t,
X	       &l->style, &l->thickness, &l->style_val,
X	       &f, &b, &h, &w, &p->x, &p->y);
X    if (n != 10) {
X	put_msg("incomplete line data");
X	free((char *) l);
X	return (NULL);
X    }
X    if (t == DRAW_POLYLINE)
X	l->type = T_POLYLINE;
X    else if (t == DRAW_POLYGON)
X	l->type = T_POLYGON;
X    else
X	l->type = T_BOX;
X    if (f) {
X	l->for_arrow = forward_arrow();
X	l->for_arrow->wid = w;
X	l->for_arrow->ht = h;
X    }
X    if (b) {
X	l->back_arrow = backward_arrow();
X	l->back_arrow->wid = w;
X	l->back_arrow->ht = h;
X    }
X    for (;;) {
X	if (fscanf(fp, " %d %d", &x, &y) != 2) {
X	    put_msg("incomplete line object");
X	    free_linestorage(l);
X	    return (NULL);
X	}
X	if (x == 9999)
X	    break;
X	if ((q = create_point()) == NULL)
X	    return (NULL);
X	q->x = x;
X	q->y = y;
X	q->next = NULL;
X	p->next = q;
X	p = q;
X    }
X    return (l);
X}
X
Xstatic F_spline *
Xread_1_3_splineobject(fp)
X    FILE	   *fp;
X{
X    F_spline	   *s;
X    F_point	   *p, *q;
X    int		    f, b, h, w, n, t, x, y;
X
X    if ((s = create_spline()) == NULL)
X	return (NULL);
X
X    s->color = BLACK;
X    s->depth = 0;
X    s->pen = 0;
X    s->fill_style = NULL;
X    s->for_arrow = NULL;
X    s->back_arrow = NULL;
X    s->controls = NULL;
X    s->next = NULL;
X    if ((p = create_point()) == NULL) {
X	free((char *) s);
X	return (NULL);
X    }
X    s->points = p;
X    n = fscanf(fp, " %d %d %d %f %d %d %d %d %d %d",
X	       &t, &s->style, &s->thickness, &s->style_val,
X	       &f, &b,
X	       &h, &w, &p->x, &p->y);
X    if (n != 10) {
X	put_msg("incomplete spline data");
X	free((char *) s);
X	return (NULL);
X    }
X    if (t == DRAW_CLOSEDSPLINE)
X	s->type = T_CLOSED_NORMAL;
X    else
X	s->type = T_OPEN_NORMAL;
X    if (f) {
X	s->for_arrow = forward_arrow();
X	s->for_arrow->wid = w;
X	s->for_arrow->ht = h;
X    }
X    if (b) {
X	s->back_arrow = backward_arrow();
X	s->back_arrow->wid = w;
X	s->back_arrow->ht = h;
X    }
X    for (;;) {
X	if (fscanf(fp, " %d %d", &x, &y) != 2) {
X	    put_msg("incomplete spline object");
X	    free_splinestorage(s);
X	    return (NULL);
X	};
X	if (x == 9999)
X	    break;
X	if ((q = create_point()) == NULL) {
X	    free_splinestorage(s);
X	    return (NULL);
X	}
X	q->x = x;
X	q->y = y;
X	q->next = NULL;
X	p->next = q;
X	p = q;
X    }
X    return (s);
X}
X
Xstatic F_text  *
Xread_1_3_textobject(fp)
X    FILE	   *fp;
X{
X    F_text	   *t;
X    int		    n;
X    char	    buf[128];
X
X    if ((t = create_text()) == NULL)
X	return (NULL);
X
X    t->type = T_LEFT_JUSTIFIED;
X    t->flags = RIGID_TEXT;
X    t->color = BLACK;
X    t->depth = 0;
X    t->pen = 0;
X    t->angle = 0.0;
X    t->next = NULL;
X    n = fscanf(fp, " %d %d %d %d %d %d %d %[^\n]", &t->font,
X	       &t->size, &t->flags, &t->height, &t->length,
X	       &t->base_x, &t->base_y, buf);
X    if (n != 8) {
X	put_msg("incomplete text data");
X	free((char *) t);
X	return (NULL);
X    }
X    if ((t->cstring = new_string(strlen(buf) + 1)) == NULL) {
X	free((char *) t);
X	return (NULL);
X    }
X    strcpy(t->cstring, buf);
X    if (t->size == 0)
X	t->size = 18;
X    return (t);
X}
END_OF_FILE
if test 11085 -ne `wc -c <'f_readold.c'`; then
    echo shar: \"'f_readold.c'\" unpacked with wrong size!
fi
# end of 'f_readold.c'
fi
if test -f 'u_create.c' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'u_create.c'\"
else
echo shar: Extracting \"'u_create.c'\" \(11402 characters\)
sed "s/^X//" >'u_create.c' <<'END_OF_FILE'
X/*
X * FIG : Facility for Interactive Generation of figures
X * Copyright (c) 1985 by Supoj Sutanthavibul
X *
X * "Permission to use, copy, modify, distribute, and sell this software and its
X * documentation for any purpose is hereby granted without fee, provided that
X * the above copyright notice appear in all copies and that both that
X * copyright notice and this permission notice appear in supporting
X * documentation, and that the name of M.I.T. not be used in advertising or
X * publicity pertaining to distribution of the software without specific,
X * written prior permission.  M.I.T. makes no representations about the
X * suitability of this software for any purpose.  It is provided "as is"
X * without express or implied warranty."
X *
X */
X
X/*
X * This file contains routines for creating the objects and sub-object
X * parts used by xfig.	The file is divided into the following parts:
X *
X * DECLARATIONS, ARROWS, POINTS,
X * ARCS, ELLIPSES, LINES, SPLINES, TEXTS, COMPOUNDS
X */
X
X/**************** DECLARATIONS ******************/
X
X/* IMPORTS */
X
X#include "fig.h"
X#include "object.h"
X#include "u_create.h"
X
Xextern int	cur_linewidth;
X
X/* LOCAL */
X
Xstatic float	forward_arrow_wid = 4;
Xstatic float	forward_arrow_ht = 8;
Xstatic int	forward_arrow_type = 0;
Xstatic int	forward_arrow_style = 0;
Xstatic float	forward_arrow_thickness = 1;
X
Xstatic float	backward_arrow_wid = 4;
Xstatic float	backward_arrow_ht = 8;
Xstatic int	backward_arrow_type = 0;
Xstatic int	backward_arrow_style = 0;
Xstatic float	backward_arrow_thickness = 1;
X
Xstatic F_arrow *create_arrow();
Xstatic char	Err_mem[] = "Running out of memory.";
X
X/****************** ARROWS ****************/
X
Xstatic F_arrow *
Xcreate_arrow()
X{
X    F_arrow	   *a;
X
X    if ((a = (F_arrow *) malloc(ARROW_SIZE)) == NULL)
X	put_msg(Err_mem);
X    return (a);
X}
X
XF_arrow	       *
Xforward_arrow()
X{
X    F_arrow	   *a;
X
X    if ((a = create_arrow()) == NULL)
X	return (NULL);
X
X    a->type = forward_arrow_type;
X    a->style = forward_arrow_style;
X    a->thickness = forward_arrow_thickness = (float) cur_linewidth;
X    a->wid = forward_arrow_thickness * forward_arrow_wid;
X    a->ht = forward_arrow_thickness * forward_arrow_ht;
X    return (a);
X}
X
XF_arrow	       *
Xbackward_arrow()
X{
X    F_arrow	   *a;
X
X    if ((a = create_arrow()) == NULL)
X	return (NULL);
X
X    a->type = backward_arrow_type;
X    a->style = backward_arrow_style;
X    a->thickness = backward_arrow_thickness = (float) cur_linewidth;
X    a->wid = backward_arrow_thickness * backward_arrow_wid;
X    a->ht = backward_arrow_thickness * backward_arrow_ht;
X    return (a);
X}
X
XF_arrow	       *
Xnew_arrow(type, style, thickness, wid, ht)
X    int		    type, style;
X    float	    thickness, wid, ht;
X{
X    F_arrow	   *a;
X
X    if ((a = create_arrow()) == NULL)
X	return (NULL);
X
X    a->type = type;
X    a->style = style;
X    a->thickness = thickness;
X    a->wid = wid;
X    a->ht = ht;
X    return (a);
X}
X
X/************************ SMART LINKS *************************/
X
XF_linkinfo     *
Xnew_link(l, ep, pp)
X    F_line	   *l;
X    F_point	   *ep, *pp;
X{
X    F_linkinfo	   *k;
X
X    if ((k = (F_linkinfo *) malloc(LINKINFO_SIZE)) == NULL) {
X	put_msg(Err_mem);
X	return (NULL);
X    }
X    k->line = l;
X    k->endpt = ep;
X    k->prevpt = pp;
X    k->next = NULL;
X    return (k);
X}
X
X/************************ POINTS *************************/
X
XF_point	       *
Xcreate_point()
X{
X    F_point	   *p;
X
X    if ((p = (F_point *) malloc(POINT_SIZE)) == NULL)
X	put_msg(Err_mem);
X    return (p);
X}
X
XF_control      *
Xcreate_cpoint()
X{
X    F_control	   *cp;
X
X    if ((cp = (F_control *) malloc(CONTROL_SIZE)) == NULL)
X	put_msg(Err_mem);
X    return (cp);
X}
X
XF_point	       *
Xcopy_points(orig_pt)
X    F_point	   *orig_pt;
X{
X    F_point	   *new_pt, *prev_pt, *first_pt;
X
X    if ((new_pt = create_point()) == NULL)
X	return (NULL);
X
X    first_pt = new_pt;
X    *new_pt = *orig_pt;
X    new_pt->next = NULL;
X    prev_pt = new_pt;
X    for (orig_pt = orig_pt->next; orig_pt != NULL; orig_pt = orig_pt->next) {
X	if ((new_pt = create_point()) == NULL) {
X	    free_points(first_pt);
X	    return (NULL);
X	}
X	prev_pt->next = new_pt;
X	*new_pt = *orig_pt;
X	new_pt->next = NULL;
X	prev_pt = new_pt;
X    }
X    return (first_pt);
X}
X
X/************************ ARCS *************************/
X
XF_arc	       *
Xcreate_arc()
X{
X    F_arc	   *a;
X
X    if ((a = (F_arc *) malloc(ARCOBJ_SIZE)) == NULL)
X	put_msg(Err_mem);
X    a->tagged = 0;
X    return (a);
X}
X
XF_arc	       *
Xcopy_arc(a)
X    F_arc	   *a;
X{
X    F_arc	   *arc;
X    F_arrow	   *arrow;
X
X    if ((arc = create_arc()) == NULL)
X	return (NULL);
X
X    *arc = *a;
X    arc->next = NULL;
X    if (a->for_arrow) {
X	if ((arrow = create_arrow()) == NULL) {
X	    free((char *) arc);
X	    return (NULL);
X	}
X	arc->for_arrow = arrow;
X	*arrow = *a->for_arrow;
X    }
X    if (a->back_arrow) {
X	if ((arrow = create_arrow()) == NULL) {
X	    free((char *) arc);
X	    return (NULL);
X	}
X	arc->back_arrow = arrow;
X	*arrow = *a->back_arrow;
X    }
X    return (arc);
X}
X
X/************************ ELLIPSES *************************/
X
XF_ellipse      *
Xcreate_ellipse()
X{
X    F_ellipse	   *e;
X
X    if ((e = (F_ellipse *) malloc(ELLOBJ_SIZE)) == NULL)
X	put_msg(Err_mem);
X    e->tagged = 0;
X    return (e);
X}
X
XF_ellipse      *
Xcopy_ellipse(e)
X    F_ellipse	   *e;
X{
X    F_ellipse	   *ellipse;
X
X    if ((ellipse = create_ellipse()) == NULL)
X	return (NULL);
X
X    *ellipse = *e;
X    ellipse->next = NULL;
X    return (ellipse);
X}
X
X/************************ LINES *************************/
X
XF_line	       *
Xcreate_line()
X{
X    F_line	   *l;
X
X    if ((l = (F_line *) malloc(LINOBJ_SIZE)) == NULL)
X	put_msg(Err_mem);
X    l->tagged = 0;
X    l->eps = NULL;
X    l->next = NULL;
X    l->for_arrow = NULL;
X    l->back_arrow = NULL;
X    l->points = NULL;
X    l->radius = DEFAULT;
X    return (l);
X}
X
XF_eps	       *
Xcreate_eps()
X{
X    F_eps	   *e;
X
X    if ((e = (F_eps *) malloc(EPS_SIZE)) == NULL)
X	put_msg(Err_mem);
X    return (e);
X}
X
XF_line	       *
Xcopy_line(l)
X    F_line	   *l;
X{
X    F_line	   *line;
X    F_arrow	   *arrow;
X    int		    nbytes;
X
X    if ((line = create_line()) == NULL)
X	return (NULL);
X
X    *line = *l;
X    line->next = NULL;
X    if (l->for_arrow) {
X	if ((arrow = create_arrow()) == NULL) {
X	    free((char *) line);
X	    return (NULL);
X	}
X	line->for_arrow = arrow;
X	*arrow = *l->for_arrow;
X    }
X    if (l->back_arrow) {
X	if ((arrow = create_arrow()) == NULL) {
X	    free((char *) line);
X	    return (NULL);
X	}
X	line->back_arrow = arrow;
X	*arrow = *l->back_arrow;
X    }
X    line->points = copy_points(l->points);
X    if (NULL == line->points) {
X	put_msg(Err_mem);
X	free_linestorage(line);
X	return (NULL);
X    }
X    if (l->eps != NULL) {
X	if ((line->eps = create_eps()) == NULL) {
X	    free((char *) line);
X	    return (NULL);
X	}
X	bcopy(l->eps, line->eps, EPS_SIZE);
X	if (l->eps->bitmap != NULL) {
X	    nbytes = (line->eps->bit_size.x + 7) / 8 * line->eps->bit_size.y;
X	    line->eps->bitmap = (unsigned char *) malloc(nbytes);
X	    if (line->eps->bitmap == NULL)
X		fprintf(stderr, "xfig: out of memory in function copy_line");
X	    bcopy(l->eps->bitmap, line->eps->bitmap, nbytes);
X	    line->eps->pix_width = 0;
X	    line->eps->pix_height = 0;
X	    line->eps->pixmap = 0;
X	}
X    }
X    return (line);
X}
X
X/************************ SPLINES *************************/
X
XF_spline       *
Xcreate_spline()
X{
X    F_spline	   *s;
X
X    if ((s = (F_spline *) malloc(SPLOBJ_SIZE)) == NULL)
X	put_msg(Err_mem);
X    s->tagged = 0;
X    return (s);
X}
X
XF_spline       *
Xcopy_spline(s)
X    F_spline	   *s;
X{
X    F_spline	   *spline;
X    F_control	   *new_cp, *orig_cp, *last_cp;
X    F_arrow	   *arrow;
X
X    if ((spline = create_spline()) == NULL)
X	return (NULL);
X
X    *spline = *s;
X    spline->next = NULL;
X    if (s->for_arrow) {
X	if ((arrow = create_arrow()) == NULL) {
X	    free((char *) spline);
X	    return (NULL);
X	}
X	spline->for_arrow = arrow;
X	*arrow = *s->for_arrow;
X    }
X    if (s->back_arrow) {
X	if ((arrow = create_arrow()) == NULL) {
X	    free((char *) spline);
X	    return (NULL);
X	}
X	spline->back_arrow = arrow;
X	*arrow = *s->back_arrow;
X    }
X    spline->points = copy_points(s->points);
X    if (NULL == spline->points) {
X	put_msg(Err_mem);
X	free_splinestorage(spline);
X	return (NULL);
X    }
X    spline->controls = NULL;
X    if (s->controls == NULL)
X	return (spline);
X
X    if ((new_cp = create_cpoint()) == NULL) {
X	free_splinestorage(spline);
X	return (NULL);
X    }
X    new_cp->next = NULL;
X    last_cp = spline->controls = new_cp;
X    orig_cp = s->controls;
X    *new_cp = *orig_cp;
X    for (orig_cp = orig_cp->next; orig_cp != NULL; orig_cp = orig_cp->next) {
X	if ((new_cp = create_cpoint()) == NULL) {
X	    free_splinestorage(spline);
X	    return (NULL);
X	}
X	last_cp->next = new_cp;
X	new_cp->next = NULL;
X	*new_cp = *orig_cp;
X	last_cp = new_cp;
X    }
X    return (spline);
X}
X
X/************************ TEXTS *************************/
X
XF_text	       *
Xcreate_text()
X{
X    F_text	   *t;
X
X    if ((t = (F_text *) malloc(TEXOBJ_SIZE)) == NULL)
X	put_msg(Err_mem);
X    t->tagged = 0;
X    return (t);
X}
X
Xchar	       *
Xnew_string(len)
X    int		    len;
X{
X    char	   *c;
X
X    if ((c = (char *) calloc((unsigned) len, sizeof(char))) == NULL)
X	put_msg(Err_mem);
X    return (c);
X}
X
XF_text	       *
Xcopy_text(t)
X    F_text	   *t;
X{
X    F_text	   *text;
X
X    if ((text = create_text()) == NULL)
X	return (NULL);
X
X    *text = *t;
X    if ((text->cstring = new_string(strlen(t->cstring) + 1)) == NULL) {
X	free((char *) text);
X	return (NULL);
X    }
X    strcpy(text->cstring, t->cstring);
X    text->next = NULL;
X    return (text);
X}
X
X/************************ COMPOUNDS *************************/
X
XF_compound     *
Xcreate_compound()
X{
X    F_compound	   *c;
X
X    if ((c = (F_compound *) malloc(COMOBJ_SIZE)) == NULL)
X	put_msg(Err_mem);
X    c->tagged = 0;
X    return (c);
X}
X
XF_compound     *
Xcopy_compound(c)
X    F_compound	   *c;
X{
X    F_ellipse	   *e, *ee;
X    F_arc	   *a, *aa;
X    F_line	   *l, *ll;
X    F_spline	   *s, *ss;
X    F_text	   *t, *tt;
X    F_compound	   *cc, *ccc, *compound;
X
X    if ((compound = create_compound()) == NULL)
X	return (NULL);
X
X    compound->nwcorner = c->nwcorner;
X    compound->secorner = c->secorner;
X    compound->arcs = NULL;
X    compound->ellipses = NULL;
X    compound->lines = NULL;
X    compound->splines = NULL;
X    compound->texts = NULL;
X    compound->compounds = NULL;
X    compound->next = NULL;
X    for (e = c->ellipses; e != NULL; e = e->next) {
X	if (NULL == (ee = copy_ellipse(e))) {
X	    put_msg(Err_mem);
X	    return (NULL);
X	}
X	list_add_ellipse(&compound->ellipses, ee);
X    }
X    for (a = c->arcs; a != NULL; a = a->next) {
X	if (NULL == (aa = copy_arc(a))) {
X	    put_msg(Err_mem);
X	    return (NULL);
X	}
X	list_add_arc(&compound->arcs, aa);
X    }
X    for (l = c->lines; l != NULL; l = l->next) {
X	if (NULL == (ll = copy_line(l))) {
X	    put_msg(Err_mem);
X	    return (NULL);
X	}
X	list_add_line(&compound->lines, ll);
X    }
X    for (s = c->splines; s != NULL; s = s->next) {
X	if (NULL == (ss = copy_spline(s))) {
X	    put_msg(Err_mem);
X	    return (NULL);
X	}
X	list_add_spline(&compound->splines, ss);
X    }
X    for (t = c->texts; t != NULL; t = t->next) {
X	if (NULL == (tt = copy_text(t))) {
X	    put_msg(Err_mem);
X	    return (NULL);
X	}
X	list_add_text(&compound->texts, tt);
X    }
X    for (cc = c->compounds; cc != NULL; cc = cc->next) {
X	if (NULL == (ccc = copy_compound(cc))) {
X	    put_msg(Err_mem);
X	    return (NULL);
X	}
X	list_add_compound(&compound->compounds, ccc);
X    }
X    return (compound);
X}
END_OF_FILE
if test 11402 -ne `wc -c <'u_create.c'`; then
    echo shar: \"'u_create.c'\" unpacked with wrong size!
fi
# end of 'u_create.c'
fi
if test -f 'w_fontbits.c.Z.uu' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'w_fontbits.c.Z.uu'\"
else
echo shar: Extracting \"'w_fontbits.c.Z.uu'\" \(10291 characters\)
sed "s/^X//" >'w_fontbits.c.Z.uu' <<'END_OF_FILE'
Xbegin 666 w_fontbits.c.Z
XM'YV0+U0H *$"A)$D1T#H,!AF3!HV:>CD 6'FC1P02=S0*2.G(9TT=LJ .%+&
XM#<<P']^X ?'&#,4T9^K(*3-G8,$A;^#DD0,3#1T0*,:D !$C!XX:(,1,G%('
XMSALU()C2":,131@[:<3486/3H,J?8<B0B9A&Y9R%.'7R/.,3J%"B1G,DG2B$
XM)U405EQ$;1,1#5 Q=N;PI8,&"!LQ;%R<>6,GA<VN(J!PY#MG3MF5=-Z J#.G
XM# L08W+F^=SFS5@SHT&,G4.'I]:-GZF2 =&9#1L0A-/,H=V2SITP,T'(!A&Q
XM)D'5;\;4:5-R:LJ5%2]2G0A'IM/.Q'>CX5A&*8@S'366F7VG[YLZ/\V4\0P"
XMCAS&:<B,QVV53E?"(L.(82PRM-J>/[GQQD=CY <''&4 1]Q*8=@&6DYIT"2<
XM&[,1AE)2 _IEH7W'^;<3@" (2&!^%-*G6WN3Z6:92B$.F$:!PAV8X$5IK#1'
XM4T[)\9$;9W1%1G++-8?29;&5N"%](KD1!G,LN=2$"TFX0(5>(B8E$F?SU2@<
XM&2'IJ%N-9[ D1U?5(?9B1-1Q-%6-8.*FV6JM987>94TBR9L9O@$G4GF$G??3
XM' @Z9,:++'1U!T]T;+22>V5=A* <E*WHAEX@/!GEE""T$<8:$@H(PDSNT23D
XM<[OIYR>27=T8D7X/H5EG;KO-T=MOP44W(776O=$9I4G\=*)[\,DWFPAA[*:;
XM"(::AQX(9> 1:F5B$M<&'!#-1VMX$KF +$$VO:"  @&!0,5VV.EIIQ@1:0K'
XM;K;B1]%7F9941WM42:B"M^ 6! 5P/\50YPP$X3M"C6.P48=\(/" 10PQO( %
XM1&*X@(8/"@SL1L$'BR1"'5]4I-$<$B.K &M#C@&:57(D$(0=5-%Q!'#R?2'$
XM&V^L\829<=11QA?HTC''%EV T ,(>PP$PM$PX $##)\EO7332C,-@M-24PWU
XMTU-'?7756F>-M=5>,VTTTEV#;7;9:'^=-M=JM\VVV$>3[?;6=(==]]ESVZVW
XMU6/OO?;=?_N=-]YO%QJWX(4C#OC@@1-N>-R.*RYYY)3_W7?EC&>>..:%7][X
XMYYHOOKGEAW,N^NF3@PXWY*JC;KK7,;BNM>=MXP"U&;:GGCD-@./ ]@UTTSXZ
XM##) 70;;,UQ=?-8R#.]\\*6WKOOS6?M^=>R*"[]X[D[;<+WL;?/NM_5>VZZ]
XM[LLG'0/W2HOO=/IX-*\\^*O+3?WK^.-! ]O8\QU]Z.7[GM?@!T"GN0]MUO-<
XM#.Z7-@(>$ ;L(Q[4Y#? TYTO?P647M+V][T+:A /.'@@VT0(/@+6+VL<S-H"
XMZ2? ]T%MA;![X?,\F,$:,E!M\O,<#?H'0JZ9@6LT>"![DI8#,\B.!D;,V@P.
XM.(,Q0&T,Q:-=\E#(-1@FK8E/1%X+E08_*^)A!F20X1-CYSD93#%I..#A\;9H
XM0Q;:38% A%\*G>;$K(T!>"KD81 !-P:NW8!M==Q@\CPW P(&4G]L8]\8SOA%
XM0$)MAUO, =<6*49"\E &ATSC"R/HO>FYT7^LJ]TCX4=!%Z+P@*74'PF9!T2N
XMA?!Q9".?TW)P-46Z$H]H3&0MH38#'L* AY*$6@*CYT48T#)KP:S>"*^V2@QV
XM[G_#8Q\.2,DV.5)SE(!+90ZC-\W%'5-]7$LE#B+(MF_B(9FSC.0)SX8#<T(0
XM:NA$)#-WZ<GL05-V9L@D(XMYR6NB$'ZX>^$@HY=*&ICP=F',&AF2F#09X!(/
XM-1A>#>"YS!AZ+IYJ:^<\D=G*VPU1:0S]X--H>$/X=3. ,61>%^,(/=;%P)\;
XM/*C7)NJW5$9T<30EHA9IIT=R"M.=!XSG'+GXR=G=LYYXX^$KO?; ?HKQG[#T
XMVTLGR%)E;O1L-G5E1=%HOO\1L*?"=&4$#T@#]@U5@IXD:5';YLL'YI2H>:PD
XM-WT93AYZ49-61:G3V'=7:>I2AV.=GQT/*$M5TG.#[$LE#!Y(0K4B%8'#>R C
XM<=!)]9'Q?Q'DX1AX:(,J2E.-=N7D4]%X0!M<UJ5FK:S2 HM"1IKVD0=<GS _
XM.@-'>FV@H;RA;L'75*C=H*LN]65F>?G1PL;@H;^$YT?7F-*D_?!JN"5;#)8+
XM1+OZ,+%5_.@>L\9<I[U5!B%]KF.=N=89'I6\CVWC>$6Z6\$U]KSL+2\+U]O&
XM])HWM_*U+V^CBM[^QI>^[?7OW "<7P&+S<#TZ\,.1N:<%YT,."ICF49>)H>8
XM$:$,?.%9<8 F-*(16+\@!J7]"AS?M,*WO@BV)WY#7&+3?3C%Y'UQBV<\TA,'
XMF,;W'3&+4=PZ&?/XQ^O$,8D9-P/@ZEC C+S!1W\<W=3=(*1,EJ^/;PQD_G[1
XMIRS& 2/- &6Z6O!_C&0<E]EXPS#G>,=4WJT';W#(*MN1D92\[9=7[#0S\S',
XM=D:SE=T,8]+1&6TV.&1M><DU+&9-#'!^Z!B@[$K7 H^0JC5TTN+L-.1JL7IA
XM#ND,Q' U*-MYRD-6LXT!%VC?%II]8\Z:&> <TC(PVGB/CMZ3B7N[\.[SU7+F
XM[D-G$-Z0QL#3>TYSJ.=\Y ^.0;6=W>03'WJ#?1[2!I^.7G?Q\-NK??2.OG7V
XMXAA9ADBSKPR[IJ44AZWG-X[ZL<>&6K*1*4U&SF"?[(-VL$U-[^JI5LLOY+02
XMA^=N9$^RR5>\=)^K#.K489N[P&PS#]^M;,_)6]7LF\%#UXU&U297U?I.FA@T
XM#6Q5JW;6GJ-T(Z%+[AB?N\^IGK12%<Y+@.-!MEE[N',C/G%76IR'9L@X'C;.
XMRXX[UWN>F_6;"4WR<KOXY$+V6\KQL%EALIR0\#9>GJ]8<V'>/-_@<[G$[TST
XM7 _\F7_F\^<*>W$T3C;6K,.W$J,^=+\UN]X5%Z:[=3Y@,&>;Z_LN^M?G;?0/
XMDEVI+H>!HG?-]DG#F=M)%JT=F:UM#XJ\#.Y6I+L%+N2"[]V._-LS<K>LZ<*#
XMD//&XZ'0NU?KV[G\UX!;>AD6'E*1#]KK_T6ZV'G<1[Z3'O:2_J+G89#DXG+-
XM!LB-M!-#'F9+^S:D9&_]Y/7>8]D+6\^63_K1P_[\O4=_]F>^O/6=7_+84[_[
XM!.=^W]4K?NWWV/QN4S"#2_;@E*VL912V,(;3<#.(Y&QG/?M9T(96M/)+W_O%
XMAGW#=GW5UWS?-W["1H#@!W8!6( "J( (V%(-N(!2YG\":&('.'!+)FJL\WJ3
XM1GD9!'.5DT]D9GMH(X)X\%R8!S@H" ,6QX$3&(%>LX'$YC<>F()L@VN5TX*C
XM0X)>@W8Q>#8HZ(.&QX**-WU!^'^9HX-&E8$CIT1MUF8,Q(.+,WS_\X)KI7Q&
XM.%\6Z(## V5 %STBEP,Z=P/FQ&97<T@H* :') :@]4+F-%T2Z#51^$++Y6UI
XMR'SIID(?U8*N942T<V_%1X'C4T7B=H6F!T^]YEMMIEI#&%XX9TY%U',FZ().
XM1XFJ]E&C!T(L%W.1!F6'1$E!!X92UVF$R$Y!5A16QTN2&(J[=V__YEMV%8J>
XM$71>YC6J-0:'= -*]5$RQXE;U&VRF(>> WEPIS0?IVTR*&(KJ$+2Y(B2J$BA
XMQ7R%A5=7Y$M6R#JZJ&[#DXO/9G/JIEE2:#S^MF?/YEIL$VF[YX4F6'O.^$1U
XMR&YCI&QMES0+%5:\=%IRHUIEL(LAM8F6R%W^N(HQ)XZD%H:L0W%*(VCH>#6J
XME7,OQ(3DYX33AGIV%(]$)(WT6(0*A7Q!UDL.:3P#F34 R8\?AWS(9I#FEI -
XM28<MUW5F=SMQ*)'9]T'3QFOJAI%,]XUY"'O;&'*>%9(Q1X."XUI86(]/.&D(
XM66P,%W/@J$0+UVAP6(%.2&2%]GLZ62#<V)-U9F5:R5U!B8OJ9GQ%J6Y3QW3+
XM%W*PF(_'2%ELJ43M-I48F(09=(-VR5>A&%(*"0/9N(_+=CO36#W+M6M8QI%)
XM8XQP^41:]Y2'*7H+]XS#"(6*R8K6-H?FAX)W>3N*E%!)DVRT<TCJ(7=0<X_O
XMJ&JAZ(A,N'3NJ#Z *(;+9V_'=SM5A)*AQTL/M71FX$M N(PG&'%AZ5R3U)=.
XMR94I6)A,YVOL4VVP^8. @Y-613N*]IJWISX?)0:_0Y JAW7(M%SZV%Q*R(X0
XMB'Y!=H'^187A^9V6B9X1>)[D^7)&QIL/V(6GZ&=TR8[ZI0#BN37J1S($TGX1
XM!G\PLS,S4S,:YC,<QG_L:9_,F)_0)Y_PR8 /.H .RJ +JI[;5Y4*"H 1VJ 8
XM.I^ADZ#=MTT=^E@S0)08U)VH:(J/54P).*$62I^LU'TGE9WW^3^WF$NC]4$L
XMRH4C2J$P>C8WU7<&M3@WVH0!6*2%I5A3"(,;BF#K%:1]-J2"XV7TA:3A=&,[
XMNI+UZ:$UF4'C]$@=I6I 9$XX$%+@U3M!AD0O% :T9D>ZB8\Q"I;,AX8JM$P@
XMNIXN^J54!*;$^97@-$$'Y7!^Q)A,MW"!B:-UNI$+*9IQ13LRY:,?ZJ+A(TR7
XMM%7Z<TC:%$7PE4H*.:,]]$+6!:>L>5BKU4'$Y$M%VIZ1VJ,B15B5*EB(1556
XM)@./^G)A&E/>)*MYU5"6&DP>E .UJJI=FJ%J$YJPQS"PJC_OR:N >CMJR$A#
XM):5G8P;FY)Q$%%)GQ3L7-3HU$*S$"J&06DW)BJP5!%BZVE"U.E5["E6"XTY:
XMQ:>T$U2C<P/>2H%W>J)7I31LZJB/A%W8)%5Z5%5XXZ[XJ$.].CK RJ65^*W@
XMTU9[QJ9,]4B8*K!H(P.<Y4HF546AZCF%=581-%QQY9WAQZK"*JI&JE?M0YPT
XM\%'B!#]--YPDB;'S")56AH))^IN+BFF@FJP3N:5-"EF5R%K ^4CFI%CP4Z(F
XMJZ85I$2U*(9ONJLOUVJ41Z=_&K%S^;,CZ[/AFIXERZ%:^Z*K^K5=ZSCWBIYE
XM&Y\DR[ J)K9J2[;ANI\-9C)C@#(),*!KH"EN\ 47EF'Y=Z >)JEM>[);6Z-I
XMJ[!:BK4M6KB(N["&BX2+2[ALV[B""[;@";CS.4RLLW1E]SFK^:*82S::FZJ!
XM6W>*N[4>I+ED.:T,>[I0EKJ?,VU9^[@F5Y5+1I.R*:&TJZ+Y [M,.KBS*[9+
XM9J)HP[L\"KR5&:%G6[FEJS2UBXDS5YLD>4C]Z%N<YCDJB$8+QYEITX>T]5%D
XM@&J*-JR2V[-]9ZQHQ&SA);W*Z%RMF;GI6XHD*9%].)+.]5&X2:66B[SY.ZW%
XME62,E /J6YD7U6H/%0/2RWB+\U$ #+]7=&V0R+BR^Z.4>[R3]E"K1\%X &Z:
XM-UL,G,&3Q&RLA\$+K&J^%HJ[V9CCV[L3+#C7QIT"+&W(]5 XL%Q;ID@@[+S,
XMJUS,9\!>:<&BF\(0#*DM7)NT,YBZ"T(T_$(F')EX4UQ+=GI+C'! ?+B^"SK%
XMU;YD\W;(%,!\R,'<M;Y,=\,L+$Q8K&M*_)=2O+C)2V)CQK'HZZR)*)D=>3NW
XMJ;VN=CMTYT-E7&FQ>6C+96LEZ+41[*5!IKGN%EZH9DYFH+VDZ5RWJ7/FFX(Z
XMITG6ZW-?5)VMMHBP%[M53+Z=K,)C6WG[.\%K+,B?7+R##,JCF[B1J\:C7+*E
XM[*2OO+IONV#\Z6!S"V%VB[=Z.W^]TB O4J#ZUV']M[RA7&/&O,I!O,*.>\I7
XMZ\S-S,RBG,P*&\O3W,JF.\M%%<F\Q[5<0[R\281*$VVL&E#IY;IAF\JIMV0G
XM_#GF[*/B# -[;)/7!9-HT[DXL'DU",V?P\/0*3M_)+E%MF?"RSC3%M")68B,
XMVI54+,V<_')MALZ#6LW1,] J-(XD&G'&27;DC,T./9ZN5%S(]8^[6$722UO:
XM>[U*D]+MK#8\?-%M:H^[6(:GYE&:B9UHZ95/R\_(G(21+'(66;_'F /V^X^(
XM_$3S'+IG#-/Q6WHDS(B\A&KVFTGMO&K0ZS2VJ[_EG,0)7<&4Z9.:.(M[UGK(
XM)=9;?'=G_<7':-'JDTE-JXV*YIC$><P@O5::^%!B('E0(P;NI%DW7,3"%)V^
XM%8>'1 :[2*9<?45X^<)I)]AIK-A S)[,AM=ZK6I]_9=!YTXBW<%FB,%^&K5>
XM[%R1=\: 73V.C<)=3<K:S)PD2=F3>6CNY'(:G-HPL-EJ/<9VM&2:%=917;-M
XM9MN&F<&/.=>L_+/Y[%L/-<*'V7C<9,&C+9AHC-I-C-3A&-W4AJ(0O=1\O'B<
XM7=,S2)4>G4&=JWJ9%IL*U(:M5L-P/,>/_7E.?;Y][-76BW/::ZU?%%Y_3,=Q
XMO-W13-=9]-Y,=YV$-+\Z?-M)@]#/F]LSB[T OKFH%W(^[%L1YVN:&,7+?=7C
XMO,\?#=[J_,P;#KD=WM_*#.(\+;XA+L'^3>(?_KLGGLXEKN$I'F.UO'[]F<LI
XML\M4\05, "#"[+?%'-[*;,T/'>,:^N)KV^(F;N052N2,4UAM;*, ';B=*\_+
XM_-))1='4K-5^N<FCLY>K:W>E*83&N;EH"^18'H 6=Y1GX^6X&X">U[DVFWFF
XMO.)%#CII+CMLKN*9<Y85Z5>!+.)3#.BZ<^<J=-0PJW&@J7-R2))O339Y?37H
XM#,:Y][T=+'BHK.0H3F6"^)9H]&S8:-T@27S'R)?;IJ@V@(?+Z30_+.3%C7+7
XM=K%"V9EAEHN+^=H!1]P[7-GJ YDB6]=([LW@EXOE*)8QAV=>*9TX:,^D7I9A
XMGM/-[I86M=H7:N:##H];2>P7/FY(>8.??8,XH(:6C(+"^.Q+V>N!GNGCZXW7
XM3GK%..NVGI3.?NLNR>SJ<X;(:670KNKG3KK4+F#J/IR!:)9]BNRN9UOLM$^Q
XM7;.\KN_JS.K@<V_E?HV76)"*6O"PINP8'=RR]<_D?C5Y?.:_#K5/'DJW=M-B
XMNM<'/-A[K8EQ>&UZ;&6YIV2\U&:M"_*8SN\A3[9(!Y$-+^UFZ_-EGCK5B*HV
XM3^>>;/2J7%0B!\M K[S]KMI9?N %W>I(?^E5[^%,KF8S?LMR2[<XGK<[SA9T
XM\,L0,08]OG]_&_50__1,K_9MS_9?[O9Q#_?VVO3XI-O 'K/SF7L&[>M[=<1D
XM?IUX*O=#UF:!U^6!BX)L#I15B-.!KVYJ7N=9#S[".9V?D^=]IOA^+T^"DTE7
XMYS>GSN$W#ZXY:_E6.9\;CW28CXQ/%/EM<Y8X/_IY;_EJA]50G7<7"4_:V\U9
XM4P/V:WR?>8SOC <V8%(<M]\@5, (?/(-/?E8/SKY+MP5OVNN%%XRG(PZS%/$
XMV:F)_7*[3^O&8]("7SV5KS0_W/-;7=VX'Y.'IE2&VOK5S;&?3T?*CFRO^.X(
XM[IXO*?]_7O77IXY[S97P$#) I@J-9HEXQ(]0W8#=)V@H3U/:=;$NWL$[HP#S
XM? GL&W%+S@%%&M5BG2B53#)9H2YZA+XX%7=($@-4=N[F4&6X8M=PN$G$L8#[
XM;O/-GGX3 #T@;)M'"B3>$#S8%VD@%ON3>"BK]A$_[&:S!$W"<V6$C]Y]D>2F
XMD<Y:R%&!OXBM2<"VX8AT#E!S)_K$RKR69O?9_%#1(W)"\!=9N0P6>$*1HE,D
XM.H<-O3NT4@*31@TP)V$ &DV0\I<#7,O"@1]WK/?Y0*;C^J@>&'QYS8B/#;@^
XMY8@6'O&386$&YV@:'J(&5<@A0BU/Y-IP&V!2K41/QI-\&! 3QD TM<R<7P;<
XMA$=.]C6T*9<)7=S5$W2RCV--DE*8Y$XANLMYDRNC^)$+^ 59H=7SA ;H:RTZ
XMT[7UXI9_P@DR(4+( 9GQ!M@ &3A[Q,SAZ3E;^/Q H<Y+@M,.%L8^5V@*<6$U
XM9(:HD!J2/FO8"KGA[-.&W] ;-C\IYP<9".SB-G-/&FY#!B(?2 PIA'&K$(>I
XMC7,8_MJ<.@R'T \0YJ?UTKD $K_Y;\O0&;["_%%8+ACS.W!<@ZA=/(C#M5I/
XMER$U6^8?*I2IAP\%8D_K.YUKO.VB_U74/B#C4R*:C*&MN2UC^)B/YEJ'%A$E
XM8L3AX8L*&/M0B$^P'NH].282T89]JVV0;J&1P8KXZZS9.\1VQ*\0$C2 V)E^
XMC_ACB(4NOK$^H"@$FXXR9'%5["=:OM"7 R-@YSIHH,CDC2JD%)!HG\MY6:G0
XM[AF<;J0%A2)0O(I^)"L:''<GEC@6G#E_V0P:SIC"XA3_1TO4;DOQ \E$O'$)
XMU<;2:W2L[0?N1/1']_K.YWIJIJF#\9RFAA2]&DAL</&PJ5DO+K85V5?_"WJB
XM\!,RK=L5"'=.&3)T_.V^0<;_1DC"RS>;3:,)[PV^PA@-,V,LQ(:Y\!Z.PY3(
XM$U_<4]2$]_ V'CUQ^ Q9X\^3BP^H%[(?&Y< @"%/X C$T!C6GS1P?Y A@A*+
XML@PX.CW9J!G#HG2TAZ[Q(F9'&0@;IR%O'(C@<#8JP6/FD?;,9*$\*HT*UKWK
XMZ&0B2$=++[0P=9S$Q3'/JM'9,8ED<<Y]1VYV^,Z=4FM^EQ QV3Z?E Y=XW$K
XM1FKDN=FC5D/T-J,?8SX917IA-]Y'_TA2<OI?@D9[943*TP@KH])H9T$M/%8H
XM(4BM%B)D0XP7KGJ('OR6$\='^2N1@3$OIB#: DR2DUZ*C#5QZ3PX,;1KLEI<
XMC"5RKJU%0GLV!IOB&Z)M6,AZ]:'=MV1R40&+1AUL]0E!8U05N<O'Z8Z;[^_T
XMJ09(G.BB9L%9XH68L,AY5R&]HES*2 LN ?:.KP@%A]V/%'I!4D:6FF:W[!"5
XM=$M!]\YZH4:=%2/KI'M3D6<2#U"ZSGB#M*,$G'*@*<GXR&OV6+0D4!R!$/ L
XMGL;2$_R$WB!BBF^QXH6BJX3O)@FL(Y,I2%&N1X]&%\/,761JEJ]S>:83TQ=C
XMD=>H>7PR19[(2>.+L)NW\Y1,#!BMG5$9SMZ7@=LY1NVF03@<-A\[(VZBC* -
XM1:8@-=+.-E$DRTUD3"F*L]GF(7=CX$):C3' [;7/:&6&WW%[C,K2+Z9%K>C!
XM(E)J)&+2QJ[8+_OE2_32/[)AYK(9YD;HR"C-3Z$LA[11/%I'WZ@V[N4MQ)+P
XM,%]61VE&M6+C=NR$ %,W^I%6B3 WH<+\EP)S=@C'&D>WC*,P_ ++L3GV+;3W
XMXZCC:XR8AO([>D> &0I%)'@4F=R1-CY,>;DO/6;(O#%DAUB5/XZ6HR;?RHQF
XMOH_$Q$P2(X=HQYA;*9&-7CZTP@*23MQA!()_3W#4J]7H,C=?YU)205,;72E2
XMU3:69G3DE].Q<IP5/^*;B-,#I#;O*D921?@2K;Y9,S%_&"S_ 1]%Q?=29D_T
XM/U SU<4/78)"]N!0V4O+ZIR<S8)217J+R)(FAP22)*K6TC )(XN)FZ:DH0B7
XM"#A41)1T,7C%:8)@*\A)YA:GU=H@&VNN@$RWF3\0)]H,608D67$0/1DO0V=-
XMN54I2V19SL09/[";GK*,;U,N>DX'Y[#*%4&I(I$EFTS-I<7@W(LPT52L0YR,
XM.5MHS8:*MPM5;1'*D4!;M3AJE?&465!K4G$LF*(K3]EMA'.*!&C2CK>RN;0)
XMY:Q5V!/^1<_Q=$"@R+G25^IO'PK-?-@BKTCYFS;;Z%6N-QHE&$.D+&R?7P22
XM!9EO>45"2H?4EH[0#O'*@WDS#>8'V9JU<',63NOIHA HTR2@ZU/T_1\'>C6;
XMY@+U?SXO/<+%DTDR!R;*O* V<V+BLHIY'H[C,-R8R3""!L1YR1XK* 1MH?72
XM9(Y,!5I KR$-5:%048:JQ);Y0I\>[.*>5$9;X5#<R$-?5 OJ@S#N;'K#&MH-
XMB970,J ?5%_J4!#J@ B+X"M"GN/1;3)FDYRNZ&_$FMB1&I*5O\)-X,=>8BS"
XMI'S231<Z1:6H-40EJ0AZ,BO?R3OUQP:UH2P4C.X8(1H\<>?O/)^3*A,]DCNZ
XM0Z<H$TVBY_.N4,] RCHI* =5F4/46I(J&1!;Y.C<7!P/1(XT44@*0X?<Z$!!
XMTJI4V9%%:JF6"N:LC>#PD);,##)MK-&'1'D?,%:*1@MYNSA>$8VB'K2#?LP\
XM:D%5:6_LI9$TZ?'2'@I,.RF^'*9M-)=R4CWJI&9<OO@.9> GP %^ 0)D0,"H
X5& 3#8" ,$7 '.L97R#\RP 6, 60!
X 
Xend
END_OF_FILE
if test 10291 -ne `wc -c <'w_fontbits.c.Z.uu'`; then
    echo shar: \"'w_fontbits.c.Z.uu'\" unpacked with wrong size!
fi
# end of 'w_fontbits.c.Z.uu'
fi
if test -f 'w_fontbits2.c.Z.uu' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'w_fontbits2.c.Z.uu'\"
else
echo shar: Extracting \"'w_fontbits2.c.Z.uu'\" \(11516 characters\)
sed "s/^X//" >'w_fontbits2.c.Z.uu' <<'END_OF_FILE'
Xbegin 666 w_fontbits2.c.Z
XM'YV0+U0H *$"A)$D1T#H,!AF3!HV:>CD 6'FC1P02=S0*2.G(9TT=LJ .%+&
XM#<<P']^X ?'&#,4T9^K(*3-G8,$A;^#DD0,3#1T0*,:D !$C!XX:(,1,G%('
XMSALU()C2":,131@[:<3486/3H,J?8<B0B9A&Y9R%.'7R/.,3J%"B1G,DG2B$
XM)U405EQ$;1,1#5 Q=N;PI8,&"!LQ;%R<>6,GA<VN(J!PY#MG3MF5=-Z J#.G
XM# L08W+F^=SFS5@SHT&,G4.'I]:-GZF2 =&9#1L0A-/,H=V2SITP,T'(!A&Q
XM)D'5;\;4:5-R:LJ5%2]2G0A'IM/.Q'>CX5A&*8@S'366F7VG[YLZ/\V4\0P"
XMCAS&:<B,QVV53E?"(L.(82PRM-J>/[GQQD=CY <''&4 1]Q*8=@&6DYIT"2<
XM&[,1AE)2 _IEH7W'^;<3@" (2&!^%-*G6WN3Z6:92B$.F$:!PAV8X$5IK#1'
XM4T[)\9$;9W1%1G++-8?29;&5N"%](KD1!G,LN=2$"TFX0(5>(B8E$F?SU2@<
XM&2'IJ%N-9[ D1U?5(?9B1-1Q-%6-8.*FV6JM987>94TBR9L9O@$G4GF$G??3
XM' @Z9,:++'1U!T]T;+22>V5=A* <E*WHAEX@/!GEE""T$<8:$@H(PDSNT23D
XM<[OIYR>27=T8D7X/H5EG;KO-T=MOP44W(776O=$9I4G\=*)[\,DWFPAA[*:;
XM"(::AQX(9> 1:F5B$M<&'!#-1VMX$KF +$$VO:"  @&!0,5VV.EIIQ@1:0K'
XM;K;B1]%7F9941WM42:B"M^%" =Q/,M0Y T'>*L#:D&. 9I4<"2!1!ALA$1C&
XM%T*\P0897Z!+QQQ;= %"#R#L,1 ((,. !PPP?"8RR2:/7#(()Z_<<LHHLZPR
XMS"[/+'/,+]]<\L<AVYSSSSX'C;/0-0]M=-$[@]SST30WK;/30#/]]-0O\TPU
XMT5!C?;7442-=J-);>QUVUEQKW?772I\]]MIJMXVUU6Z7+;?8<7L-M]EXSTTV
XMW6^#7??>@+.==])I#Q[XWX(S?3<.->,P \R/R\PXY(?C,4;1,51^.=H]QV!&
XMUI/?'+G(,^!0N=YCWXTZXJP;KGKCC8\^LNRAGRQ[V6/< '/FJ?MM><TW?'YU
XM[;.G7/KI?"ON^^J&)YZ\W<OS3;SCE$M>].W)Z]Y[X4-O+K,9O --/ RR'^\\
XMX*\CK_[YVR_]?,K3WT[[]:=K7W7T67LO<AGA!SU^^:9CW_VX]SX!-N]OZ3-@
XM_.!'._OA809B@!E[1(8#X8F,#)^[VQCZ-X;;.5!_>.!?RD!(/9EUT'@1/%\"
XM6\>\%D*/@.L37^Q25@;:6?"!*119@5*6@PSZ#H,I Q\-;PB#&X+P!OTS0^-N
XM6$/C$?&%[HOA :>H/!@:L&S$,P,399>#,:!PA)ZYVPQR,$('(I&&$\1##+QH
XM0N#=\ :-2V,3938#-@XPBE<L( NAF$<I9O&-7 R@R&[PN+N5P8$SJ%GNC$?&
XMJ\4@C2#4HO$$B8<NIHR0D^1<'S>Y1TUVDI-X6.#WN.C#PF%29H=T8AD9";^:
XM =&$3.S?&'EH1SQ@4HR4=*$4=;E"*NH1;Z(4F1D*Z;L>7E)VJ:2C$1'92!VZ
XMD@PC-*(LFUE)+][ME*3+Y2]UJ4+\@9*;,F2@)VTY/QHB$WNKI",URU"S-8Y0
XMD=,<IR5EALT':G.7V^3C)_<YQ<DM[IRT-.<(RT?-1=*S?^M)V2/?2</,7;-_
XM.)!C^6H)3E^.LZ(8S><X@QE"4@YTA+*\X2N%B= ;Q@":;1RG)+^W1($J$Y_J
XMZV5&8=J^X<U0<@W\Z,WZ5\24R0>D.A792<<)PAD8\:8Z+%\.+5I3?LZTFU9T
XMJD:ABD>ITO1L,IVJ59O*U*TBT)M>[6K?HBK6IV(5K&75JNO0:M:T-DT!89U;
XM'W8@,.>\R&# 2=C"&O:BAT5L8D\P4QSJ4(:*%2=C&^M85J_JUJ<M]IMJK6)5
XM&QM7PDVVK9BU+&09J[?'5A:FGJ5LT-PI,])&+8QLS9X4S4!1=-XLC7!4*?UN
XMALA<.C"S;TTM9W]I6C525+,G2V/9>@N#V_Z2M3 SK@3'&=OO492(M4WN;G-+
XM5MP:L+?NE*EP^49<M1)7N:J#;<UF(%SA1G>SCM4M>IV*6NYM5[J)>^\5S7O1
XMHITWN $5G4)_"UKU?K:/X5WNS=[HP-Y6,&5B,*+L#'JR)RY7=;>](0X0N=3B
XMYI=T2YUG4GF(TOW)3HGUG>YZ9Z9=,"J4P#ZMI3%EEN @(M.D#EX<)&7G.1HB
XM$KH7MN4--8R'8?)PBRJE*$\C2V3J7K9FZADB*^GIP(2J$WZP7:H-:AD#T_5R
XMI?N+Y_<<*(;6YCB9(N/Q#3+<WI[-,<S"=>U_SUI=OF$YA%RF9#V=G,UTDHZ:
XM*+M;C:_VYC/C00QRYJ*794:&6OIYAT_6(&PAFF81?[7-]0LBEP$I:56:L,#0
XMU& [;VA4^)DQSE^4&8_)9V)4<K#,I>VPY18=1"*J6;1Y]B\5'6B&21^STB^]
XM]#B'BLIVUK+3M+TDJ.F8X4'K4(X.]1VBA:KJ9=LRB:YV-(EEC=%/M]+%M[8>
XM46FLZAO88+_7UB^3<PQ!'C9:UP\M-;.53$_;2CO6D 8E1^M9Z"#V[XQWX[&?
XM>WN#VZ9QW@[\Z9,'O$I#FG&=#M0W(FO)X)$-.:;4+K*V<>K2"\9RG"(4-1-I
XM34D?$WSBP@0R+.T-LU+VK,_EVW@0*0GF!]XPR3N%>+S7'$JD6F[!NC,D!^UK
XMXR#6+./X!7F/I1G4$";;O4$T=-'D:$9%4OB2_.6J=3\;VJE;M.H2/YERJ3IB
XMJ\/[R.\N,M89^S^9@[WK8H]XV,V.]LJ57>I9A[4^Y;[VL;==A30_VESK2C"\
XM(DQA#"N#P[[@!."\YPX0DQC%+(8QC7',8VJ_^Z//GG>-VKWRZ(L\YN&^]LU>
XMGNY<W[Q5/^_U]Y$^[KS4/.C#B4IBDK6[^<.<V\_-9LH'#;DQ[W6X;=??F:^^
XMG\#M:-9@?[6&P^#APZ/]M'U?-MSS7O=")W7H?X_;Q?W\U<0'FO&1#[0<-/KT
XM61LU,F%7O=I+GNZ]))Z?AY9]H6W=;=Z_Z*LK*GX:DE_<=SQ_]66M?@"F^)*,
XM%DT-17(QEV]IY'$B(P;]0P;4= .4- ;?=C,J9FC(E$3T W[Z-W?,TW]0]W\'
XM]6,"^#U)%$&J(SMB<(!+A8 ]1DW.9SD1>#(32( >MG+RUWFCIWI#\T=HE&,*
XM&&HZQ$SR5&$FF$8YD(*RXX#J%D)$=("_QG(Y5TS&1GV6AX/2@V1&](+5A&!+
XM-0,<](2%,TLIA7\A-&/95F<F)$>J!@-8V(*S9' Y)GVB-U:V5U$<^#U$6$MB
XML(4FIVL#)TS LU1TUF-'Z']G2$.J9@98:$EB!(@)%X6E9V09N'O"9X?@)FHD
XMZ#O ]H-+EH!RME3.EH=E:$]): :'^&WY]FN,^(;SAWK!]X@V57$CDT;954S1
XMQH=WQD.YM&!$N%3U9#['AF"9MCR-Z(-PIHIU1X725H>_J&<JQFDXMXF5)(1)
XM6(2AZ(NK-DYB@&>"1HPM5W^>AXSGQX%WTX+$E4:9:#DO-X+E%THH6(U6YCLM
XM"&CKV((JZ&=FD(N]-X>LZ$?!YV=(6%H4)8N0A&P "%\4!%M'Z(4]8XW_R(GS
XM:&@(=6^S-7F1^(W,MX\ !HYQ^'45>8,7:8-K]9$=*8<C.5,8N)&MB)%4AY)[
XM-S $XG=Z%7B#5WAR<'B)!UB"15B&=3&(]7@G*860B)+Y6))I)Y)"F5Y&"92<
XM1Y1L1W/?97]-&8N5TUQ"%77\Q$XE%V+!!I#&0V6U1)6^-5T_R3Q/"7WF9X9!
XMYS9@V7X5A95ZYF!;696M5HF#Y&M#>91R&9<AI('CE4OR!31K:957YSM8R95;
XM,XRH5&!?:9?3YXIN4Y;[DY)98XW, V*&V4F]5)AY&36(N6&I=DE3F)2.R8X"
XME6ZV:$L-^&\?=%L<EX0-9P-8V$1Z1DTS<(2-4TL35G1C0'3TQ&E^B6 *24\3
XM!9(;B&K"-(AVUF/=!DE-1D0OQW*0I'+C2&-;:)M)>&"M%X(Z!&V9)#G&^6>4
XM1D]_J93Y)TSFR(O/6(B768PR,V4")DR49 ,#B7$$A6 FE8(_UYGDY)H<Q&ED
XMI&@(UH"R8P/O!Y17)HOH24-8"(%TR9Y1<T/R2' :='%T1$DM5EKXV7.B]I7(
XM)$>*])U@^(LL)J I8P.K*);\=X#A*3*P.9?KV6]0^3T0^HZ%4P9&1*&;^6>T
XMQHOW=H?<Z*%$A84A.H8(UG%'")<>J8_)28K0Z&V7)&$("9I!9(I0*&P**J7K
XM66OL=HOBZ8%<NC]46J-.IU"JUG)D8*&TB:2#*9IC^ID5:CSTY9W5V(KZ.0--
XMUG0YIH(]]:9=JIZWZ(;TE)\-:J9XJ(UW*5H-EP.J-J1U5*(.%%&W)D98:&'K
XM::<:6I<Y5D^4BI:V]$$@6E '=ZEAF9A>^F>+>J)(J:0&U'!F0)O4Q&]$^)WV
XMR)H-JJ6D&J@T^(%Z>8\]IT&TUH66-D@FQ7 !QVG&FGEL*D6L*DN4U%N->HI%
XMMWZR:&A-)EX^AZ5:1X,:M& 5"#.3RFE+96 )QVD%]EYCJ9(DB9=KJJIY-YX<
XMJ:ZIEZQ,>:[O9JX:29[+QZ[X*EE,.5]:":^F=Z^C^:[[*G8L25<N>5=C<# Q
XMR5=C\# T:9.!!1&#55B,UY.*);#HRJ\ &Y4#6Y3Z^K%!6;"'*K(9*:]Q15%8
XM: .267QJ54(GPWTA.5F:>7,,=3.3NK$MV[$2Z*WCQ+*:(YA8=#LRR[%X8YF:
XM&(8GD[,HBK+[:DW+L[*_- 9"*SU$BZSZ6F4CM*!%P[0G&[(ZB[4XNXY FSA5
XM*XG&QY>[5$ONJ;1N1:^1*%.Q:8*RU#\+U9M=J5#_ID@UD+=WT[9AYHD)ETL\
XMM;)LVV3ELZ"3ZGI@2YQJNS5K:(+E$U)/>DGF*&%\RURP54LCA8ZXN#L^BTIL
XM^W+ETV1ANC0%:K)G.44P)U1+)09<1)O]TZ+M63X+%GR BP>TFZ,$.D*<*[0#
XMRK:H:#S!23J3ZK4=^Y-O!@/41(VB1IOCM;C&$WP@E+ME2T%8* ,<]+MD,YPL
XM1E'!6#@Q$*ZW@[PD"[<4]&&JYKPZM*@0>K5W<X+):0-RAIM"NKTI4P,"N8XS
XM@(5==E&J-KY!5&&I&[;HZS_JRT.>Z+X(QKB2TS^PFYP-J;N/>K^^>TEAH+?\
XM>[K?"S,!G(($[+C_^GLP.S+K^X!]FZHL]F%V&Y\U(P;C!5$6;$(T0(Q&X\"D
XM8X*3JFK8*51X9L :ZW;P!#_@6W#%1$DYP((M7*(O',-%ETA;"XT$BP-"2DT"
XMIT.X&<"&:I&-*V]#[%PP [6%<T*2LV-+U;GG>+U_YD9%A[0V6UHT.EFMVV.4
XM1 8I6$M,^CUX5K0!Z[1M13P;=$EQW+,4)SD%ME0]_$ .I,90W)X*%J/;N6OW
XM1$^<6\?4%*$)J,0E&[9<W*^8&<2OF'N?[,><7)XD^[4C"4+QVL5"><"/Z,I3
XM&YJL?+Z@C'FP7'<'RW<ON;!Y!7@."[&&]P:(=[&.E[&D+,*WW';)3'6U;*#-
XM_,K/#,3''+?1?(S3;,O5K,QLI;),+,2@*SA4#+K+C'[9S,S,Q\WM^4M&\<UN
XM$\ZJP\<BO)0\N[HMA,XLJLZ$*[8'R<ZG3,^E_+8":\^ZRUN3;,HY*%SP3,W7
XM[,P+#0,,M[+<*L@(AL='=W)\$W\BZ%.4U+\:3$?RX['_;)+E/#*&MK(?]&%X
XM*,8GQX)[;&Y!Q-)P&JP/]-'RW,\S.Y(M"*/M28:%F&_-N[XMS6*)Z*I05HTT
XM;= A#;*>W&._MLALR\'8RT-XQL.R)]3P8[?4%,[M*4L?/<[[U]"1A<<KNX<L
XMNH9$.-6Y.DCKM(:OFM4K*TLR<%$)G;PCC5%B_;,WM+L]=M8>/-&7M-; J%!N
XM7:(538FB;--&J[I4I-)T)+5Y.[:BEDL\+&11+#E:##]0K;NGQL^*3;"=+<N$
XM/$B&^]C[_+P<-D)IR$$+>MF+@X7U1+7Q[,^QO:Y;4]*.JE =AX<=QX)I2#MK
XM&+Z=4V%":D1GJ\U@;<US^- E2F-R9J$==V_X*#F9?0.O*MP=C<7(7-?[Z-7;
XMK=U-.\LBR]W?O=2K3-Z@/<\WC=Z=E<L)6S"\_'=[)7A]]043FP85NY.-EUB0
XM=]S&#=Y)/<*?K<^(?=X##M*S7=[JS5V#+%0%/3+F.S2-W#JJ?%N9'>'%8]XC
XM&^#3I[5P3#;F2SQ<N%J;=E%".I$%+MZ=##0<SN >#CI5W3K'HV>Y5.('_K@)
XMGN')0U' &WLEVX3KN.*TS-_F'+(Z?MUJA,AK>,A&_JQL98Y_^+D9W9Y8".1W
XM2Y$W7M/U3,0R+<"HM* [MM%DK6,M3D=6".7"1$V]&]DRG=C_C<IAU8*[:3QV
XMRXL?5,GC%.*U.^:DTZ9AUJRJEN87M-$/A^))>GYSW' P+-C&$[Q$)9@3?,-F
XM_L;8'=HS?<%D#N!M;N7[&IN)N&,L>(F% ^BZ*YCG> /*M\XFA+^0G<,TQ-A"
XMI:8:CM0'OK)82#Q)O&MH7C.Y"^)'>.H,I^I+N^@_6]QT+>141.O7=C<,B-O3
XM6Z(,Y\2'J>5;;>E1K6=2YJZ9GJ\8OC4#BL.6@\?-NM$#NJ!4UN!J*,&SF]D,
XM6EIH?EO$3L[&CEG>?FAOA&2!=J4C5UIJ>N@I][-F_=+XWF#9'>_=S3T1;4+E
XM@V2ZKDBU3IU9PZLII6=II-?_JZLZ)+W]O>V:'NOI#7R<+<W^/? AK]"SK,H@
XMK_$=S_&=U<PF/]Y7+MLHS^8U'E/L;5?NS;"^+-\/B]\8N]\CC\T$[_(%WIC9
XMCN!#O_%%3^ JW\<_S]!-#\U!G^)E5;Z2>'R5H\:>G?0&'O,V/O6A2T$OCC<F
XMBNDSC^5:;_:<1?71!\\E6/9([_8I'])J#_8?#^"HVLK>+?6=[=N>INBM/;_/
XM>:V'_=5/?_+JO6"U'N9%4=D"G^=@/*+K*-)17^@O/W2WG6_-BN93'I^T0V5;
XM/,J%C]Q<__!A+NJH3CJSR]S+_?4U%_E,/_IH/_IMW^4@2$<(16-Y/?<]9N(R
XM#_NR[OO:'C7C+HEXSJ*O-O:K+HIBF/5PO_*3#]#,-_Q"I[V$G37('^P=KE^$
XM#OVAG_$LA$R)R'(1R>R.3T&>7X/ S_SIO[-4A/BU'\ENNV<L2FNN_F>??_3!
XMC__.__1\;\A %7V+++-!/#_D^F;>]I-\W6_(K3\<U_Q>7^7K?0^0_2T]!K@ 
XM#Z#!*E@MR>;!)"=0!N[ $&@.,B$/3(&%=1C6P$U:/(>EF/F\!:C"(B %=($6
XM<),U0 $W 6-?ZY!_MN3==8^:00/"G&)S8S"@PA2-,%>S9@!5,TBWA\KL.^YB
XMKXP=>>E.K0/$7)/(8NX(VGO*?S  DHR7'X8$A\8$:U17HV:QG_HWFFX E2%P
XM$PSK;1,=F./"&(#3@E*,YUR-+]C@Q&#P84OHBAPYP*"1!L,:9R&#Y@X.]B'W
XMDS7H8-9P2V@%#TH;,U##2DO7@W"UA 9$%FPGX!3A:[E97XH0SL&-=D\,"7=A
XM@XRE##1"H5+8!DG]>G\N)V5(0HG6;DZ,3%LQ^T.D +?3E,=B5DQ#)3PMDR'!
XME@.';$FSJG\#<"]!,C62AOZ9*-PUNDB*F:-B.(ID24"Z@HLDWR RE 8_5E0E
XM84Y_K4&E+6VU/* 4++)&5<[IT3"%DE.(S14T@J##C!"BM"25?)54$R??HX[E
XM-9Z"#0>A-9(!X,5W&$*]U'*P"R@D>O!C%*J11Z4.71H=$4RY23A!P7:X/.JA
XM+909-*#)N!(B0@^3$Z/::,5K]V7#5L@/%5.#0H")0R#BP#=33S :Z8B$94XA
XMOJD <PE/D]6#B+=%(-:;P><0'PAM6G!BCJ5L1%.X"SWB>C)Z+40DXABSA)I8
XMH<A8A7HIMN"2*Y@%D]-+%!DR0+C(Q'S6$I/6G\)$':= 3;!'=Z<:E"7\?2Q$
XM),:I_1'7Z$D#HB0R@.=<D[+(J6A >7&*_2,JND%"0TEH0$5$-YCH)HJJI^@+
XMC>+(Z(KK21&ZLFD%#1.>X-MS%R5*\:FC&*O@HE?$36SK=GRGAD/=M.%M.4(;
XM#3=)E(48#M5?6,&!0"X8%A5%THH"7SSL0 <1-<;"'X?'!.*F4B/?"18J(9^"
XMR)H3$FQ!>PH^'4:C8SQFH0ML@39-E55!LB?[\A[EPW^J+(6!1?WW",\>S$-O
XM92<&NCGF2 .=8]R;@:FCYO6=]Y8 .* '!(%R0 220#%@ O\*&>@5#>)%\#P5
XM*!U!'PM<CC40/EI'"$@=@6-\3%=XHV;A )Y2P!X>16&+^+&M $$N^'$(8&K4
XM/>],$BVOHL5$D Q/N7LCPP?&LL@'(7-0+9*/C*4<D0T@M1*53=CK'D/QM&!"
XMWCCXY@ZD6GY\0Y5=+7 F!WE/: %+=FTNBD@$B15')%^TD%UPZ8Q(H&,Y>$HI
XM]!_*!W>T2(>C.2[0\IAKM@3U2,4-B7'ZDHV468GL-1H-09AE@$J"W!J4T&5U
XM022Y.6;?0U1+<:<SND8ZA:U&561R.Q=2$YY)&CG&?"39Z(]7 RDV/@J"4,S(
XMCRP#DPJB"*I!2(Y4#N2;=GW*E(7#E@.69F*57$^ [+;PE!!)I,:1PNM[;FI_
XM/"K^F#7DY#6L?B:D_IT17,C/U!ALHR>+ZA<NJ3_W8;Y3"2M^/<9.DK9)1#KV
XM5N6*?Y0D-XTC"S0,U5@X?$T\13"I,9.8)!M=01)=_ PL?<I!L@[-I.7@,DN%
XM!G@[. >$\MT@L5O4*D!50U'%(V.<LFDRM)(H!B9TQQ1K1EKT:TO13ST;&D(5
XM.96SV92<JK=LGW&"#X=A/WQ JK*T,)U(E\@HH[>S1BVG9KFQ(B@J3].0.G=7
XMXUO&+Q]WJSA5&2B7RL\JCDM$28:N)%1\5 "RY0"R^E054R7K R$GY)J8()9C
XMG3@BIEJ,62@[@4RC]2U/H\E<DP;3-2:1=>(D&29]&C[")6(^JNNS$)OBN*F8
XM75+9("<6PS'+Y%9LF:5M!HU,]E<R#:3!!)HNB)\-*7X);@"4R%1QRL?/**.$
XM29I4(F,D*HID9X89"N0SY0S2/)%"L\Z$%@OGQBS<NA,FC^K@(4;:QS/'20W 
XM0W)$",K(4'+2(IV?$0,93')\I1\)!IT)++(!$(7A\"(YTX"@G<@( TP$U"TD
XM  DP =//>9Q7#19Y00Y9):])9OPRJ0N/9;7&@;AV8E^<@H.*C;FM$I80)672
XMV8TU2Q$1)FQ9]^95,\-ZC%.I_48,61R-G1A$DO3Q/GK&^D@[PTK+ X@5T#AR
XMO_>(!>>CZ=&.NXQA><</J!%"X A$ R7P"Z!'B# &UJ-^:X^T;7863^SX''GG
XM]@R>SP\DTISQ0:NFC_P:28].(B4[?5A.4.2J'"[_L'=2G]L2.T<6(,.=<4>K
XM?<F!-L*NG]# /L,Q^SV?[MG9TE#]["4@Q%)BD0_Y2W#  ?4=:G#U<;OADTL$
XM$Y#KA;M3Y1E0XGC/5&$#9:!NYT<.C0A:_OXG!9V;[*<3"L^*LOA41_V\&FI,
XM@5:AUDG/CA_?J$W=ZX12NA3*0?&?/_$=BZ^0F4XUY]$>7LW@,2KH' U+6^(;
XMU8B[(8JHLG3^&8A",<7'K\EKD_'7%4#763A G*X#=DY4V V/6E(#"@J-TYO,
XM)5R-%Y-BH3K?KXQJ[4DY"@W[Q5P"IYQC?>$-K7A13#GI6!P=>:'F#QJ=S0<2
XM?'" %KT9N8W\$4MIA_H8J>Z:/_5/?VHV1XHJ&Z<X;&<+[XZ:D,UG/ !ITA2@
XM25.,W*;_=S)83M'X-:.4W5%2N^4#E5LZ<Z1!%.CI*Q!2!%/?W)P! -)2ZC6M
XM];<XJ72+G#=#CJHR5$KMPB@:O1E-U&@L*,/X2U6I]Q,KEC*29%)*ARHMY4)1
XM'9%1D7Y2NB<YY.CX*'>,SYAB-QFGYR0=(0VG%U1VBI9H.EYT707EHWA 8$:M
XMOE9"@=PV%*)X0(%2F;QY\9B=!O&E46.9-KM-JDUAP)BLCM+&4A(/-68#!"(.
XMX*?\4Y0Z4H=6HC*,%3-?9(Q%+3%G>D$J'( <I#7 W-6ZUW51.RG,\*09%%WI
XM1])8=/"-[Q@?;^2=LLV/V4>#AETT<FZ,ERH;B$1*S^G68)2BSMGPR!LI 8WG
XM"\17AG3KP< 5JDXY'@TX6]@3*!I5&VC3*%-1Y9[?<ZF&SZ8Z5;$*\E18RK,#
XM,D\ZX#S'HPF4 F] 4[@!Z^F3F*H,!)\)$-[%5<)'/%,J5K6K!F2" 4$D23QZ
XM8 ]M*V8P6-X?#(,U^=D1@76&[_?$4+6""$U)MI.D?#&"BI'VN3^[1X7DJB"I
XM9LE0 6?A2"C0\*SMKU.R/QRZ]D#'BCR.BDVSLCVT8N$V*PQ%/? +@MY0RDHD
XMA\=IS9[X+PSP0'026H"<:_VLL+5_SM:J!R5OZ_X#?D4SGRY+X"$/%8K</)#[
XMXP#9K3+%1/;F16F0\#0W_IERJ-;RQ^VRB,ET6.V@$@F2Y&GAH 'A3Y/"($4'
XM0Q-1-@6E@W2'W(WD:NH&*IAJ4/4DJ986F97&1NET:E R8!NYSV>:7-WB+;T=
XMYZ_X(%@)ZD?[Z>*P6TDD\Y4H@%KIB.C)()#&K]EA/G@*Y/PG11VPJ-5;\L B
XM5T)S $1-IT7GPV;8#O=/)5$,V#G.M9N!4M+:YV"&',6!&1,3'='XM%$[Z Z]
XMK @U8-:,D'HZ2^R);7#+*YN24X*Z-2K,G).Q#;;"UEB]1+ RJD^=LAI5FP;6
XM'_M6W09]E:D^5F244?N:3WE?_?.?]O3!.=D8^TIG;"#I:PAT<D4ZP*E-/:PC
XMVH,5A;Z>TA$"(-'EE2VSX@2;,EAQNDV%!L9S725*)(J[SS6;3"LT.GV3U,)&
XMVO4*8K.J6$FNMO(!'2&$TDZ#U-STGS, HMY3[$=!$$FZT[+>3K\V4MM:41TI
XMG96T?E;%7CCY65&"H:5T8_LQ9237'RJ^WHB*J8E"A%,./@!9"X7A* &7Q60U
XM#3 ;J6QIH?=:C:*&OD15I5?T\.=?-:K35JGB*ZRW6K=JE_6>>#4.V<&CJCNO
XM:NV<JP4/W8JE7 8N"L(9$#ST0D> @']Q+Q3 "*@18X -U 'Y  )$ .*I"!J!
X(\<P %S &D 6E
X 
Xend
END_OF_FILE
if test 11516 -ne `wc -c <'w_fontbits2.c.Z.uu'`; then
    echo shar: \"'w_fontbits2.c.Z.uu'\" unpacked with wrong size!
fi
# end of 'w_fontbits2.c.Z.uu'
fi
echo shar: End of archive 15 \(of 25\).
cp /dev/null ark15isdone
MISSING=""
for I in 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 ; do
    if test ! -f ark${I}isdone ; then
	MISSING="${MISSING} ${I}"
    fi
done
if test "${MISSING}" = "" ; then
    echo You have unpacked all 25 archives.
    rm -f ark[1-9]isdone ark[1-9][0-9]isdone
else
    echo You still need to unpack the following archives:
    echo "        " ${MISSING}
fi
##  End of shell archive.
exit 0
-- 
Molecular Simulations, Inc.             mail: dcmartin@msi.com
796 N. Pastoria Avenue                  uucp: uunet!dcmartin
Sunnyvale, California 94086             at&t: 408/522-9236
