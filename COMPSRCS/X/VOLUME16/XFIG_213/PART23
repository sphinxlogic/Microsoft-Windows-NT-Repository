Path: uunet!zaphod.mps.ohio-state.edu!mips!msi!dcmartin
From: envbvs@bea.lbl.gov (Brian V. Smith)
Newsgroups: comp.sources.x
Subject: v16i028: Xfig 2.1.3, Part23/25
Message-ID: <1992Feb4.150339.1556@msi.com>
Date: 4 Feb 92 15:03:39 GMT
References: <csx-16i006-xfig-2.1.3@uunet.UU.NET>
Sender: dcmartin@msi.com (David C. Martin - Moderator)
Organization: Molecular Simulations, Inc.
Lines: 1641
Approved: dcmartin@msi.com
Originator: dcmartin@fascet

Submitted-by: envbvs@bea.lbl.gov (Brian V. Smith)
Posting-number: Volume 16, Issue 28
Archive-name: xfig-2.1.3/part23

# This is a shell archive.  Remove anything before this line, then feed it
# into a shell via "sh file" or similar.  To overwrite existing files,
# type "sh file -c".
# The tool that generated this appeared in the comp.sources.unix newsgroup;
# send mail to comp-sources-unix@uunet.uu.net if you want that tool.
# If this archive is complete, you will see the following message at the end:
#		"End of archive 23 (of 25)."
# Contents:  Examples/deltat.fig.uu Examples/resistor.fig.uu
#   Examples/roundboxes.fig.uu Examples/splinefill.fig.uu
#   Examples/window2.fig.uu Fig-color.ad d_epsobj.c d_regpoly.c
#   e_move.c f_epsobj.c fig.icon.X mode.c u_free.c u_translate.c
#   w_canvas.h
# Wrapped by dcmartin@fascet on Tue Feb  4 06:42:33 1992
PATH=/bin:/usr/bin:/usr/ucb ; export PATH
if test -f 'Examples/deltat.fig.uu' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'Examples/deltat.fig.uu'\"
else
echo shar: Extracting \"'Examples/deltat.fig.uu'\" \(3451 characters\)
sed "s/^X//" >'Examples/deltat.fig.uu' <<'END_OF_FILE'
Xbegin 664 deltat.fig
XM(T9)1R`R+C`*.#`@,@HR(#$@,"`Q(#`@,"`P(#`@,"XP,#`@,"`P"@D@,S4T
XM(#$V-"`T,SD@,38T(#DY.3D@.3DY.0HR(#$@,"`Q(#`@,"`P(#`@,"XP,#`@
XM,"`P"@D@,C`T(#,Q-"`Q,C0@,S$T(#DY.3D@.3DY.0HR(#$@,"`Q(#`@,"`P
XM(#`@,"XP,#`@,"`P"@D@,C`T(#$S-"`R,3D@,3$Y(#DY.3D@.3DY.0HR(#$@
XM,"`Q(#`@,"`P(#`@,"XP,#`@,"`P"@D@,S(T(#,V.2`S-30@,S,Y(#DY.3D@
XM.3DY.0HR(#$@,"`Q(#`@,"`P(#`@,"XP,#`@,"`P"@D@,C@Y(#,T.2`S-30@
XM,C@T(#DY.3D@.3DY.0HR(#$@,"`Q(#`@,"`P(#`@,"XP,#`@,"`P"@D@,C@Y
XM(#$V.2`S,SD@,3$Y(#DY.3D@.3DY.0HR(#$@,"`Q(#`@,"`P(#`@,"XP,#`@
XM,"`P"@D@,C@Y(#(R.2`S-30@,38T(#DY.3D@.3DY.0HR(#$@,"`Q(#`@,"`P
XM(#`@,"XP,#`@,"`P"@D@,C@Y(#(X.2`S-30@,C(T(#DY.3D@.3DY.0HR(#$@
XM,"`Q(#`@,"`P(#`@,"XP,#`@,"`P"@D@,C<T(#,V-"`R-CD@,S8Y(#DY.3D@
XM.3DY.0HR(#$@,"`Q(#`@,"`P(#`@,"XP,#`@,"`P"@D@,C<T(#,P-"`R,#D@
XM,S8Y(#DY.3D@.3DY.0HR(#$@,"`Q(#`@,"`P(#`@,"XP,#`@,"`P"@D@,C<T
XM(#(T-"`R,#0@,S$T(#DY.3D@.3DY.0HR(#$@,"`Q(#`@,"`P(#`@,"XP,#`@
XM,"`P"@D@,C<T(#$X-"`R,#0@,C4T(#DY.3D@.3DY.0HR(#$@,"`Q(#`@,"`P
XM(#`@,"XP,#`@,"`P"@D@,C<T(#$R-"`R,#0@,3DT(#DY.3D@.3DY.0HR(#$@
XM,"`Q(#`@,"`P(#`@,"XP,#`@,"`P"@D@,S4T(#$Q.2`S-30@,S8Y(#DY.3D@
XM.3DY.0HR(#$@,"`R(#`@,"`P(#`@,"XP,#`@,2`P"@DP(#`@,2XP,#`@-"XP
XM,#`@."XP,#`*"2`Q-#D@,C8Y(#0P.2`R-CD@.3DY.2`Y.3DY"C(@,2`P(#(@
XM,"`P(#`@,"`P+C`P,"`Q(#`*"3`@,"`Q+C`P,"`T+C`P,"`X+C`P,`H)(#$T
XM.2`S-CD@-#4Y(#,V.2`Y.3DY(#DY.3D*,B`Q(#`@,B`P(#`@,"`P(#`N,#`P
XM(#$@,`H),"`P(#$N,#`P(#0N,#`P(#@N,#`P"@D@,C`T(#0S-"`R,#0@,3`Y
XM(#DY.3D@.3DY.0HR(#$@,"`Q(#`@,"`P(#`@,"XP,#`@,"`P"@D@,C<T(#$Q
XM.2`R-S0@,S8Y(#DY.3D@.3DY.0HR(#$@,"`Q(#`@,"`P(#`@,"XP,#`@,"`P
XM"@D@,C@Y(#$Q.2`R.#D@,S8Y(#DY.3D@.3DY.0HR(#$@,"`Q(#`@,"`P(#`@
XM,"XP,#`@,"`P"@D@,C<T(#$U.2`R.#D@,34Y(#DY.3D@.3DY.0HR(#$@,"`Q
XM(#`@,"`P(#`@,"XP,#`@,"`P"@D@,C<T(#,U-"`R.#D@,S4T(#DY.3D@.3DY
XM.0HR(#$@,"`Q(#`@,"`P(#`@,"XP,#`@,"`P"@D@,C<T(#,S.2`R.#D@,S,Y
XM(#DY.3D@.3DY.0HR(#$@,"`Q(#`@,"`P(#`@,"XP,#`@,"`P"@D@,C<T(#,R
XM-"`R.#D@,S(T(#DY.3D@.3DY.0HR(#$@,"`Q(#`@,"`P(#`@,"XP,#`@,"`P
XM"@D@,C<T(#,P.2`R.#D@,S`Y(#DY.3D@.3DY.0HR(#$@,"`Q(#`@,"`P(#`@
XM,"XP,#`@,"`P"@D@,C<T(#(Y-"`R.#D@,CDT(#DY.3D@.3DY.0HR(#$@,"`Q
XM(#`@,"`P(#`@,"XP,#`@,"`P"@D@,C<T(#(W.2`R.#D@,C<Y(#DY.3D@.3DY
XM.0HR(#$@,"`Q(#`@,"`P(#`@,"XP,#`@,"`P"@D@,C<T(#(V-"`R.#D@,C8T
XM(#DY.3D@.3DY.0HR(#$@,"`Q(#`@,"`P(#`@,"XP,#`@,"`P"@D@,C<T(#(T
XM.2`R.#D@,C0Y(#DY.3D@.3DY.0HR(#$@,"`Q(#`@,"`P(#`@,"XP,#`@,"`P
XM"@D@,C<T(#(S-"`R.#D@,C,T(#DY.3D@.3DY.0HR(#$@,"`Q(#`@,"`P(#`@
XM,"XP,#`@,"`P"@D@,C<T(#(Q.2`R.#D@,C$Y(#DY.3D@.3DY.0HR(#$@,"`Q
XM(#`@,"`P(#`@,"XP,#`@,"`P"@D@,C<T(#(P-"`R.#D@,C`T(#DY.3D@.3DY
XM.0HR(#$@,"`Q(#`@,"`P(#`@,"XP,#`@,"`P"@D@,C<T(#$X.2`R.#D@,3@Y
XM(#DY.3D@.3DY.0HR(#$@,"`Q(#`@,"`P(#`@,"XP,#`@,"`P"@D@,C<T(#$W
XM-"`R.#D@,3<T(#DY.3D@.3DY.0HR(#$@,"`Q(#`@,"`P(#`@,"XP,#`@,"`P
XM"@D@,C<T(#$T-"`R.#D@,30T(#DY.3D@.3DY.0HR(#$@,"`Q(#`@,"`P(#`@
XM,"XP,#`@,"`P"@D@,C<T(#$R.2`R.#D@,3(Y(#DY.3D@.3DY.0HT(#`@,"`Q
XM,B`P(#`@,"`P+C`P,"`Q(#<@-"`Q.#D@,3$T('0!"C0@,"`P(#$R(#`@,"`P
XM(#`N,#`P(#$@.2`S(#0U,B`Q-S,@:0$*-"`P(#`@,3(@,"`P(#`@,"XP,#`@
XM,2`V(#8@,3$T(#,R-"!O`0HT(#`@,"`Q,B`P(#`@,"`P+C`P,"`Q(#<@-"`T
XM-#0@,38Y('0!"C0@,"`P(#$R(#`@,"`P(#`N,#`P(#$@-R`T(#$P.2`S,3D@
XM=`$*-"`Q(#`@,3(@,"`P(#`@,"XP,#`@,2`V(#8@,S8R(#,X."!O`0HT(#$@
XM,"`Q,B`P(#`@,"`P+C`P,"`Q(#D@."`S-30@,S@T(%(!"C0@,2`P(#$R(#`@
XM,"`P(#`N,#`P(#$@.2`Q-"`R-SD@,S@T(&12`0HT(#$@,"`Q-"`P(#`@,"`P
XM+C`P,"`Q(#(@,R`T,C0@,C8T("X!"C0@,"`P(#$R(#`@,"`P(#`N,#`P(#$@
XM,3$@-C`@-#4T(#<Q.2!C<F%C:RYF:6<V`0HT(#`@,"`Q,B`P(#`@,"`P+C`P
XM,"`Q(#D@-B`T-30@,S@T(%(!"C0@,2`P(#$R(#`@,"`P(#`N,#`P(#$@-B`Y
XM(#0R-"`R-S0@;0$*-"`P(#`@,3(@,"`P(#`@,"XP,#`@,2`Y(#$R(#(W-"`Q
X',#D@9%(!"C0@
X`
Xend
END_OF_FILE
if test 3451 -ne `wc -c <'Examples/deltat.fig.uu'`; then
    echo shar: \"'Examples/deltat.fig.uu'\" unpacked with wrong size!
fi
# end of 'Examples/deltat.fig.uu'
fi
if test -f 'Examples/resistor.fig.uu' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'Examples/resistor.fig.uu'\"
else
echo shar: Extracting \"'Examples/resistor.fig.uu'\" \(3465 characters\)
sed "s/^X//" >'Examples/resistor.fig.uu' <<'END_OF_FILE'
Xbegin 664 resistor.fig
XM(T9)1R`R+C`*.#`@,@HQ(#,@,"`Q(#`@,"`P(#`@,"XP,#`@,2`P+C`P,"`R
XM-#D@,30Y(#$Q(#$Q(#(T.2`Q-#D@,C4Y(#$U-`HQ(#0@,"`Q(#`@,"`P(#(Q
XM(#`N,#`P(#$@,"XP,#`@,C0Y(#(R.2`S(#,@,C0W(#(R.2`R-3(@,C(Y"C$@
XM-"`P(#$@,"`P(#`@,C$@,"XP,#`@,2`P+C`P,"`Q-3D@,C(Y(#,@,R`Q-3<@
XM,C(Y(#$V,B`R,CD*,2`T(#`@,2`P(#`@,"`R,2`P+C`P,"`Q(#`N,#`P(#,S
XM.2`R,CD@,R`S(#,S-R`R,CD@,S0R(#(R.0HQ(#0@,"`Q(#`@,"`P(#(Q(#`N
XM,#`P(#$@,"XP,#`@,C0Y(#<Y(#,@,R`R-#<@-SD@,C4R(#<Y"C(@,2`P(#$@
XM,"`P(#`@,"`P+C`P,"`P(#`*"2`S-S8@,S$Y(#,X,2`S,3D@.3DY.2`Y.3DY
XM"C(@,2`P(#$@,"`P(#`@,"`P+C`P,"`P(#`*"2`S-S0@,S$T(#,X-"`S,30@
XM.3DY.2`Y.3DY"C(@,2`P(#$@,"`P(#`@,"`P+C`P,"`P(#`*"2`S-CD@,S`Y
XM(#,X.2`S,#D@.3DY.2`Y.3DY"C(@,2`P(#$@,"`P(#`@,"`P+C`P,"`P(#`*
XM"2`Q,#0@,S`Y(#$R-"`S,#D@.3DY.2`Y.3DY"C(@,2`P(#$@,"`P(#`@,"`P
XM+C`P,"`P(#`*"2`Q,#D@,S$T(#$Q.2`S,30@.3DY.2`Y.3DY"C(@,2`P(#$@
XM,"`P(#`@,"`P+C`P,"`P(#`*"2`Q,3$@,S$Y(#$Q-B`S,3D@.3DY.2`Y.3DY
XM"C(@,2`P(#(@,"`P(#`@,"`P+C`P,"`P(#$*"3`@,"`Q+C`P,"`T+C`P,"`X
XM+C`P,`H)(#(T.2`Q-#0@,C0Y(#$U-B`Y.3DY(#DY.3D*,B`Q(#`@,2`P(#`@
XM,"`P(#`N,#`P(#`@,`H)(#,S.2`W.2`S,SD@,3(T(#,S-"`Q,CD@,S0T(#$S
XM-"`S,S0@,3,Y(#,T-"`Q-#0@,S,T(#$T.2`S-#0@,34T(#,S-"`Q-3D@,S0T
XM(#$V-"`S,SD@,38Y(#,S.2`R,CD@.3DY.2`Y.3DY"C(@,2`P(#$@,"`P(#`@
XM,"`P+C`P,"`P(#`*"2`Q-3D@-SD@,S,Y(#<Y(#DY.3D@.3DY.0HR(#$@,"`Q
XM(#`@,"`P(#`@,"XP,#`@,"`P"@D@,C0Y(#<Y(#(T.2`Q,SD@.3DY.2`Y.3DY
XM"C(@,2`P(#$@,"`P(#`@,"`P+C`P,"`P(#`*"2`R-#D@,34Y(#(T.2`R,CD@
XM.3DY.2`Y.3DY"C(@,2`P(#$@,"`P(#`@,"`P+C`P,"`P(#`*"2`Q-3D@,C(Y
XM(#$U.2`R.#D@,C(Y(#(X.2`R,S0@,CDT(#(S.2`R.#0@,C0T(#(Y-"`R-#D@
XM,C@T(#(U-"`R.30@,C4Y(#(X-"`R-C0@,CDT(#(V.2`R.#0@,C<T(#(X.2`S
XM,SD@,C@Y(#,S.2`R,CD@.3DY.2`Y.3DY"C(@,2`P(#$@,"`P(#`@,"`P+C`P
XM,"`P(#`*"2`Q-3D@,C(Y(#$W.2`R,CD@,3@T(#(S-"`Q.#D@,C(T(#$Y-"`R
XM,S0@,3DY(#(R-"`R,#0@,C,T(#(P.2`R,C0@,C$T(#(S-"`R,3D@,C(T(#(R
XM-"`R,CD@,C0Y(#(R.2`Y.3DY(#DY.3D*,B`Q(#`@,2`P(#`@,"`P(#`N,#`P
XM(#`@,`H)(#,S.2`R,CD@,S<Y(#(R.2`S-SD@,C0Y(#,W-"`R-30@,S@T(#(U
XM.2`S-S0@,C8T(#,X-"`R-CD@,S<T(#(W-"`S.#0@,C<Y(#,W-"`R.#0@,S@T
XM(#(X.2`S-SD@,CDT(#,W.2`S,#D@.3DY.2`Y.3DY"C(@,2`P(#$@,"`P(#`@
XM,"`P+C`P,"`P(#`*"2`Q-3D@,C(Y(#$Q-"`R,CD@,3$T(#(T.2`Q,#D@,C4T
XM(#$Q.2`R-3D@,3`Y(#(V-"`Q,3D@,C8Y(#$P.2`R-S0@,3$Y(#(W.2`Q,#D@
XM,C@T(#$Q.2`R.#D@,3$T(#(Y-"`Q,30@,S`Y(#DY.3D@.3DY.0HR(#$@,"`Q
XM(#`@,"`P(#`@,"XP,#`@,"`P"@D@,34Y(#<Y(#$U.2`Q,C0@,34T(#$R.2`Q
XM-C0@,3,T(#$U-"`Q,SD@,38T(#$T-"`Q-30@,30Y(#$V-"`Q-30@,34T(#$U
XM.2`Q-C0@,38T(#$U.2`Q-CD@,34Y(#(R.2`Y.3DY(#DY.3D*,B`Q(#`@,2`P
XM(#`@,"`P(#`N,#`P(#`@,`H)(#(T.2`R,CD@,C8Y(#(R.2`R-S0@,C,T(#(W
XM.2`R,C0@,C@T(#(S-"`R.#D@,C(T(#(Y-"`R,S0@,CDY(#(R-"`S,#0@,C,T
XM(#,P.2`R,C0@,S$T(#(R.2`S,SD@,C(Y(#DY.3D@.3DY.0HT(#$@,"`Q-B`P
XM(#`@,"`P+C`P,"`Q(#$W(#(V,R`R-#0@,S4@0G5I;&1I;F<@06ER9FQO=R!2
XM97-I<W1I=F4@3F5T=V]R:P$*-"`Q(#`@,3(@,"`P(#`@,"XP,#`@,2`Y(#@@
XM,C@T(#(U-"!2`0HT(#`@,"`Q,"`P(#`@,"`P+C`P,"`Q(#<@,S$@,C@Y(#(U
XM.2!R971U<FXQ`0HT(#$@,"`Q,B`P(#`@,"`P+C`P,"`Q(#D@."`Q.#0@,C4T
XM(%(!"C0@,"`P(#$P(#`@,"`P(#`N,#`P(#$@-R`S,R`Q.#D@,C4Y(')E='5R
XM;B`R`0HT(#$@,"`Q,B`P(#`@,"`P+C`P,"`Q(#D@."`S.3D@,C8Y(%(!"C0@
XM,"`P(#$P(#`@,"`P(#`N,#`P(#$@.2`T,2`T,#0@,C<T(&5N=F5L;W!E,0$*
XM-"`Q(#`@,3(@,"`P(#`@,"XP,#`@,2`Y(#@@,S8T(#$T.2!2`0HT(#`@,"`Q
XM,"`P(#`@,"`P+C`P,"`Q(#D@,S,@,S8Y(#$U-"!S=7!P;'DQ`0HT(#$@,"`Q
XM,B`P(#`@,"`P+C`P,"`Q(#D@."`Y.2`Q-#D@4@$*-"`P(#`@,3`@,"`P(#`@
XM,"XP,#`@,2`Y(#,S(#$P-"`Q-30@<W5P<&QY,@$*-"`P(#`@,3`@,"`P(#`@
XM,"XP,#`@,2`Y(#0Q(#0Y(#(W-"!E;G9E;&]P93(!"C0@,2`P(#$R(#`@,"`P
XM(#`N,#`P(#$@.2`X(#0T(#(V.2!2`0HT(#$@,"`Q,B`P(#`@,"`P+C`P,"`Q
XM(#D@."`R,CD@,S$Y(%(!"C0@,"`P(#$P(#`@,"`P(#`N,#`P(#$@-R`S.2`R
X2,S0@,S(T(&EN=&5R>F]N90$*
X`
Xend
END_OF_FILE
if test 3465 -ne `wc -c <'Examples/resistor.fig.uu'`; then
    echo shar: \"'Examples/resistor.fig.uu'\" unpacked with wrong size!
fi
# end of 'Examples/resistor.fig.uu'
fi
if test -f 'Examples/roundboxes.fig.uu' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'Examples/roundboxes.fig.uu'\"
else
echo shar: Extracting \"'Examples/roundboxes.fig.uu'\" \(3355 characters\)
sed "s/^X//" >'Examples/roundboxes.fig.uu' <<'END_OF_FILE'
Xbegin 664 roundboxes.fig
XM(T9)1R`R+C`*.#`@,@HR(#0@,"`Q(#`@,"`P(#(Q(#`N,#`P(#(S(#`@,`H)
XM(#,Y(#0T(#,Y(#(U.2`W,3D@,C4Y(#<Q.2`T-"`S.2`T-"`Y.3DY(#DY.3D*
XM,B`T(#`@,2`P(#`@,"`R,"`P+C`P,"`R,B`P(#`*"2`T.2`U-"`T.2`R-3D@
XM-S`Y(#(U.2`W,#D@-30@-#D@-30@.3DY.2`Y.3DY"C(@-"`P(#$@,"`P(#`@
XM,3D@,"XP,#`@,C$@,"`P"@D@-CDY(#(U.2`V.3D@-C0@-3D@-C0@-3D@,C4Y
XM(#8Y.2`R-3D@.3DY.2`Y.3DY"C(@-"`P(#$@,"`P(#`@,3@@,"XP,#`@,C`@
XM,"`P"@D@-CD@-S0@-CD@,C4Y(#8X.2`R-3D@-C@Y(#<T(#8Y(#<T(#DY.3D@
XM.3DY.0HR(#0@,"`Q(#`@,"`P(#$W(#`N,#`P(#$Y(#`@,`H)(#<Y(#@T(#<Y
XM(#(U.2`V-SD@,C4Y(#8W.2`X-"`W.2`X-"`Y.3DY(#DY.3D*,B`T(#`@,2`P
XM(#`@,"`Q-B`P+C`P,"`Q."`P(#`*"2`X.2`Y-"`X.2`R-3D@-C8Y(#(U.2`V
XM-CD@.30@.#D@.30@.3DY.2`Y.3DY"C(@-"`P(#$@,"`P(#`@,34@,"XP,#`@
XM,3<@,"`P"@D@.3D@,3`T(#DY(#(U.2`V-3D@,C4Y(#8U.2`Q,#0@.3D@,3`T
XM(#DY.3D@.3DY.0HR(#0@,"`Q(#`@,"`P(#$T(#`N,#`P(#$V(#`@,`H)(#$P
XM.2`Q,30@,3`Y(#(U.2`V-#D@,C4Y(#8T.2`Q,30@,3`Y(#$Q-"`Y.3DY(#DY
XM.3D*,B`T(#`@,2`P(#`@,"`Q,R`P+C`P,"`Q-2`P(#`*"2`Q,3D@,3(T(#$Q
XM.2`R-3D@-C,Y(#(U.2`V,SD@,3(T(#$Q.2`Q,C0@.3DY.2`Y.3DY"C(@-"`P
XM(#$@,"`P(#`@,3(@,"XP,#`@,30@,"`P"@D@,3(Y(#$S-"`Q,CD@,C4Y(#8R
XM.2`R-3D@-C(Y(#$S-"`Q,CD@,3,T(#DY.3D@.3DY.0HR(#0@,"`Q(#`@,"`P
XM(#$Q(#`N,#`P(#$S(#`@,`H)(#$S.2`Q-#0@,3,Y(#(U.2`V,3D@,C4Y(#8Q
XM.2`Q-#0@,3,Y(#$T-"`Y.3DY(#DY.3D*,B`T(#`@,2`P(#`@,"`Q,"`P+C`P
XM,"`Q,B`P(#`*"2`Q-#D@,34T(#$T.2`R-3D@-C`Y(#(U.2`V,#D@,34T(#$T
XM.2`Q-30@.3DY.2`Y.3DY"C(@-"`P(#$@,"`P(#`@.2`P+C`P,"`Q,2`P(#`*
XM"2`Q-3D@,38T(#$U.2`R-3D@-3DY(#(U.2`U.3D@,38T(#$U.2`Q-C0@.3DY
XM.2`Y.3DY"C(@-"`P(#$@,"`P(#`@."`P+C`P,"`Q,"`P(#`*"2`Q-CD@,3<T
XM(#$V.2`R-3D@-3@Y(#(U.2`U.#D@,3<T(#$V.2`Q-S0@.3DY.2`Y.3DY"C(@
XM-"`P(#$@,"`P(#`@-R`P+C`P,"`Y(#`@,`H)(#$W.2`Q.#0@,3<Y(#(U.2`U
XM-SD@,C4Y(#4W.2`Q.#0@,3<Y(#$X-"`Y.3DY(#DY.3D*,B`T(#`@,2`P(#`@
XM,"`V(#`N,#`P(#@@,"`P"@D@,3@Y(#$Y-"`Q.#D@,C4Y(#4V.2`R-3D@-38Y
XM(#$Y-"`Q.#D@,3DT(#DY.3D@.3DY.0HR(#0@,"`Q(#`@,"`P(#4@,"XP,#`@
XM-R`P(#`*"2`Q.3D@,C`T(#$Y.2`R-3D@-34Y(#(U.2`U-3D@,C`T(#$Y.2`R
XM,#0@.3DY.2`Y.3DY"C(@-"`P(#$@,"`P(#`@-"`P+C`P,"`V(#`@,`H)(#(P
XM.2`R,30@,C`Y(#(U.2`U-#D@,C4Y(#4T.2`R,30@,C`Y(#(Q-"`Y.3DY(#DY
XM.3D*,B`T(#`@,2`P(#`@,"`S(#`N,#`P(#4@,"`P"@D@,C$Y(#(R-"`R,3D@
XM,C4Y(#4S.2`R-3D@-3,Y(#(R-"`R,3D@,C(T(#DY.3D@.3DY.0HR(#0@,"`Q
XM(#`@,"`P(#(@,"XP,#`@-"`P(#`*"2`R,CD@,C,T(#(R.2`R-3D@-3(Y(#(U
XM.2`U,CD@,C,T(#(R.2`R,S0@.3DY.2`Y.3DY"C(@-"`P(#$@,"`P(#`@,2`P
XM+C`P,"`S(#`@,`H)(#(S.2`R-#0@,C,Y(#(U.2`U,3D@,C4Y(#4Q.2`R-#0@
XM,C,Y(#(T-"`Y.3DY(#DY.3D*,B`T(#`@,2`P(#`@,"`U(#`N,#`P(#$T(#`@
XM,`H)(#,Y.2`T-3D@,SDY(#4W.2`U,3D@-3<Y(#4Q.2`T-3D@,SDY(#0U.2`Y
XM.3DY(#DY.3D*,B`T(#`@,2`P(#`@,"`U(#`N,#`P(#$T(#`@,`H)(#,Y.2`R
XM.3D@,SDY(#0Q.2`U,3D@-#$Y(#4Q.2`R.3D@,SDY(#(Y.2`Y.3DY(#DY.3D*
XM,B`T(#`@,2`P(#`@,"`U(#`N,#`P(#$T(#`@,`H)(#(S.2`T-3D@,C,Y(#4W
XM.2`S-3D@-3<Y(#,U.2`T-3D@,C,Y(#0U.2`Y.3DY(#DY.3D*,B`T(#`@,2`P
XM(#`@,"`U(#`N,#`P(#$T(#`@,`H)(#(S.2`R.3D@,C,Y(#0Q.2`S-3D@-#$Y
XM(#,U.2`R.3D@,C,Y(#(Y.2`Y.3DY(#DY.3D*,B`T(#`@,2`P(#`@,"`W(#`N
XM,#`P(#$R(#`@,`H)(#,U-"`T,30@,S4T(#0V-"`T,#0@-#8T(#0P-"`T,30@
XM,S4T(#0Q-"`Y.3DY(#DY.3D*,B`T(#`@,2`P(#`@,"`P(#`N,#`P(#$P(#`@
XM,`H)(#(S.2`T,C0@,C,Y(#0U-"`S-#D@-#4T(#,T.2`T,C0@,C,Y(#0R-"`Y
XM.3DY(#DY.3D*,B`T(#`@,2`P(#`@,"`P(#`N,#`P(#$P(#`@,`H)(#,V-"`R
XM.3D@,S8T(#0P.2`S.30@-#`Y(#,Y-"`R.3D@,S8T(#(Y.2`Y.3DY(#DY.3D*
XM,B`T(#`@,2`P(#`@,"`P(#`N,#`P(#$P(#`@,`H)(#0P.2`T,C0@-#`Y(#0U
XM-"`U,3D@-#4T(#4Q.2`T,C0@-#`Y(#0R-"`Y.3DY(#DY.3D*,B`T(#`@,2`P
XM(#`@,"`P(#`N,#`P(#$P(#`@,`H)(#,V-"`T-CD@,S8T(#4W.2`S.30@-3<Y
X;(#,Y-"`T-CD@,S8T(#0V.2`Y.3DY(#DY.3D*
X`
Xend
END_OF_FILE
if test 3355 -ne `wc -c <'Examples/roundboxes.fig.uu'`; then
    echo shar: \"'Examples/roundboxes.fig.uu'\" unpacked with wrong size!
fi
# end of 'Examples/roundboxes.fig.uu'
fi
if test -f 'Examples/splinefill.fig.uu' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'Examples/splinefill.fig.uu'\"
else
echo shar: Extracting \"'Examples/splinefill.fig.uu'\" \(3479 characters\)
sed "s/^X//" >'Examples/splinefill.fig.uu' <<'END_OF_FILE'
Xbegin 664 splinefill.fig
XM(T9)1R`R+C$*.#`@,@HS(#,@,2`Q("TQ(#`@,"`P(#0N,#`P(#`@,`H)(#$T
XM,"`U-38@,C,S(#4U-"`R,3@@-3(U(#$U."`T-S0@,3<Q(#4P,R`S,SD@-#,X
XM(#(T."`S,S,@,S`Q(#(W,"`S.#(@,C0X(#(W,B`R,S4@,C8S(#0U-B`R-C0@
XM-C`Q(#$W.2`V,3`@,30P(#4U-B`Y.3DY(#DY.3D*"2`Q,S(N-#$Q(#4W,2XR
XM-#0@,34P+C4Y."`U,S0N-S$R(#(Q.2XQ-S<@-3<W+C(W,B`R,S<N.#4R(#4T
XM-2XX,S(@,C(R+C@T,"`U,S$N,#@W(#(P-BXS,C8@-3$P+C,R,"`Q-C4N-C0Q
XM(#0V."XR-C0@,34T+CDQ-B`T-S8N,S$U(#$U.2XX-C0@-#DX+C0R,2`R,S0N
XM,3(Q(#4R."XY-3,@,S(U+C(T-"`T.3,N,S$P(#,T.2XV,3$@,SDU+C,S-R`R
XM-#@N,S8W(#,X,BXY-38@,C0W+C<X,R`S,#,N-#`P(#(X,RXT-3,@,C@Q+C(P
XM-2`S,3@N.#@Y(#(U."XU-S<@,S@R+C8T-R`R-38N-S4Y(#,X,2XQ-#8@,C,V
XM+C0T,2`S,#,N-#@Y(#(P."XQ-#`@,C`Y+C$R,2`R.#@N-C,V(#(V,RXX-3$@
XM-#`U+C4X-2`R-C(N-#0R(#0X.2XP-3$@,CDY+C<V-B`U-C`N.38Y(#(T,BXY
XM,3<@-C(T+C4Y-R`R,#(N-3<Q(#8R,"XU,C,@,38P+C8S,2`V,#$N-SDY(#$S
XM,BXT,3$@-3<Q+C(T-"`Q-3`N-3DX(#4S-"XW,3(*,R`R(#$@,2`M,2`P(#`@
XM,"`T+C`P,"`P(#`*"2`Q-S0@,C$@,S4@-3@@,30V(#DY(#8Y(#$R,R`Q,3(@
XM,30W(#$P-"`U."`R-38@,C<@,C<S(#$T,"`Q,S@@,C,U(#$X,2`S-S0@.3DY
XM.2`Y.3DY"@D@,"XP,#`@,"XP,#`@-S`N-3@Y(#,P+C@T,"`S-2XX,SD@-#`N
XM,#DP(#,T+C`W.2`W-RXV-#4@,30V+C4T,2`W."XP-#(@,30U+C8S,2`Q,3,N
XM,C@U(#<P+C@P-R`Q,#4N-3DP(#8W+C@Y-B`Q,S,N-C,P(#$P,2XS.#<@,34S
XM+C@X."`Q,S$N,C4X(#$S-"XU,#$@.#0N,S<R(#@T+C,V-"`Q,S@N,#<V(#$R
XM+C(S,2`R,#<N.#4S("TV+C8V,2`R.3$N-#8V(#4Q+C<Y-2`R.#8N.3(U(#$P
XM-RXT,S@@,C4R+C@X,R`Q.#<N,#,Y(#$U-2XW-#D@,3@R+CDW,R`Q,C8N,C8W
XM(#(V.2XS.3,@,3,W+C`Q-R`S,#0N,30S(#`N,#`P(#`N,#`P"C,@,B`Q(#,@
XM+3$@,"`P(#`@."XP,#`@,"`P"@D@-C4R(#,U(#4Y."`T."`V,S$@.3@@-C`U
XM(#$Q,B`U.#`@,38P(#8S-2`R,C0@-C8T(#(Y,2`V,S8@,S,Y(#8R.2`R,#(@
XM-3$P(#$V-B`V-#`@,S(R(#4X,"`T-S@@-3`U(#4V-2`V-#D@-3DS(#<S-B`U
XM-SD@-S@P(#0S-R`W,#,@,CDU(#<T,"`Q,C4@-S8U(#DW(#<W,"`R,S`@-C,W
XM(#(Y."`V,C8@,S0X(#<S-"`T,C(@.3DY.2`Y.3DY"@D@,"XP,#`@,"XP,#`@
XM-C$V+C,R-R`S,BXU,#@@-C`R+C@R-R`S-2XW-3@@-3DQ+C`U."`V-2XV,#8@
XM-C,V+C0S,"`W-BXT,SD@-C(X+C,R,R`Q,#@N-C(X(#8Q,"XR,C@@,3`V+C<P
XM,"`U.34N-#$Y(#$R,2XW,30@-3<X+C`P,"`Q-#(N-C<P(#4X,RXQ,3@@,3@W
XM+C`R,B`V,C0N-3(R(#(P-RXR-3@@-C0T+C`V-2`R,S@N-#@T(#8V-2XR-3(@
XM,C<P+C`X,R`V-C,N,#0W(#,P-BXY,C$@-C0T+C0X,"`S-#$N,#8R(#8Q-2XP
XM-C<@,S,S+CDQ,2`V-38N-S(V(#(S-RXT,C@@-C`S+C@W,B`Q-CDN.#DQ(#4R
XM,"XX,S<@,30Y+C8S-2`T.3(N,S`P(#$Y,BXW,CD@-C(Y+CDT.2`R-C$N,3@X
XM(#8T."XR-S,@,S<R+C`U-"`V,#`N,C4Q(#0T-"XQ-C(@-38V+C`X,R`U,#$N
XM,C4U(#0Y-"XV,3<@-3,U+C`T-B`U,3@N,C8P(#8P,RXR-34@-C$T+C,T,B`U
XM.3(N-#,W(#8V.2XX,3D@-3DS+C,S."`W,34N,S0P(#4Y-BXY,S8@-S<P+C@U
XM-"`U-#@N-S0R(#<X,RXY-#D@-#<W+C`X-2`W-S4N-S`Y(#,Y,RXT-#0@-S`X
XM+CDV-2`S,S8N.3,U(#8Y-BXU-S8@,C0Y+C@S-"`W,C`N-38T(#$V,RXQ,30@
XM-S0T+C$Y,R`Q,38N-S<W(#<U-RXW,S<@.30N,S@U(#<Y,"XW-3(@,3`V+C(W
XM,R`W.3$N,30V(#$Y,RXY,S,@-S0V+C(V-R`R-S`N-#@P(#8V,BXU.3$@,C8T
XM+C@T-2`V,C@N,C(Y(#,P.2XS-C,@-C$Y+CDS."`S,S(N-C@P(#8S-RXV,C8@
XM,S<W+C,X,B`V-C0N-C(V(#,Y-2XX.#(@,"XP,#`@,"XP,#`*,R`P(#(@,2`M
XM,2`P(#`@,"`T+C`P,"`P(#`*"2`V,C$@-#0X(#4Q,R`U,#@@-3DW(#4V,2`W
XM,SD@-#DW(#DY.3D@.3DY.0HS(#$@,2`Q("TQ(#`@,"`P(#0N,#`P(#`@,`H)
XM(#0S-R`U,S$@,C<X(#4P-"`R-3,@-3(S(#,X-R`U-#8@,S8X(#4Q,2`S-C4@
XM,SDY(#0V,B`T,SD@,S<S(#0X."`R,S(@-#DT(#(X,"`V,#8@-#8R(#4V-2`T
XM,C8@-#8S(#,S-R`S.#8@-3,Y(#,P-B`V,#`@,C<X(#0P-B`Q,SD@-#(U(#,U
XM-2`R-3D@-3$P(#0X-"`U-C4@-#$Y(#4P-R`S-3$@,S`Y(#4U-"`R,#<@-#,W
XM(#4S,2`Y.3DY(#DY.3D*,R`Q(#$@,2`M,2`P(#`@,"`T+C`P,"`P(#`*"2`T
XM-3(@,38X(#0Q,R`R-C@@-3`V(#(X-"`S-C,@,S8X(#,P.2`S,S<@-#0U(#(Q
XM,R`U.3<@,C4W(#4P-2`Q-S@@,S8P(#DV(#0U,B`Q-C@@.3DY.2`Y.3DY"C,@
XM,2`P(#$@+3$@,"`P(#$X(#`N,#`P(#`@,`H)(#$T-B`Q,SD@.3D@,C$P(#(U
XM-"`S,34@,3DR(#,W-2`Q,SD@-#0V(#@T(#,W,"`R,#@@,S4Y(#,S-"`S,34@
X:,C@Y(#$V,R`Q-#8@,3,Y(#DY.3D@.3DY.0HW
X`
Xend
END_OF_FILE
if test 3479 -ne `wc -c <'Examples/splinefill.fig.uu'`; then
    echo shar: \"'Examples/splinefill.fig.uu'\" unpacked with wrong size!
fi
# end of 'Examples/splinefill.fig.uu'
fi
if test -f 'Examples/window2.fig.uu' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'Examples/window2.fig.uu'\"
else
echo shar: Extracting \"'Examples/window2.fig.uu'\" \(3468 characters\)
sed "s/^X//" >'Examples/window2.fig.uu' <<'END_OF_FILE'
Xbegin 664 window2.fig
XM(T9)1R`R+C`*.#`@,@HU(#$@,"`Q(#`@,"`P(#`@,"XP,#`@,"`Q(#`@,30R
XM+C$Q.2`S,C$N,S8W(#$X.2`R,3D@,C,Y(#(V-"`R-30@,S,T"@DP(#`@,2XP
XM,#`@-"XP,#`@."XP,#`*-2`Q(#`@,2`P(#`@,"`P(#`N,#`P(#`@,2`P(#$U
XM,2XU,#`@-3$T+C`P,"`R-C0@-3,Y(#(S.2`U.#D@,3DY(#8Q.0H),"`P(#$N
XM,#`P(#0N,#`P(#@N,#`P"C(@,2`P(#$@,"`P(#`@,"`P+C`P,"`Q(#`*"3`@
XM,"`Q+C`P,"`T+C`P,"`X+C`P,`H)(#0R.2`T-#0@,SDY(#0T-"`S.#D@-#4T
XM(#DY.3D@.3DY.0HR(#$@,"`Q(#`@,"`P(#`@,"XP,#`@,2`P"@DP(#`@,2XP
XM,#`@-"XP,#`@."XP,#`*"2`R,SD@-#0T(#(V.2`T-#0@,C<Y(#0U-"`Y.3DY
XM(#DY.3D*,B`Q(#`@,2`P(#`@,"`P(#`N,#`P(#`@,0H),"`P(#$N,#`P(#0N
XM,#`P(#@N,#`P"@D@,C8Y(#(U.2`T,#D@,C4Y(#DY.3D@.3DY.0HR(#$@,"`R
XM(#`@,"`P(#`@,"XP,#`@,"`P"@D@-#`T(#4R-"`T-#0@-3(T(#DY.3D@.3DY
XM.0HR(#$@,"`R(#`@,"`P(#`@,"XP,#`@,"`P"@D@,C8T(#,V-"`R,C0@,S8T
XM(#DY.3D@.3DY.0HR(#,@,"`R(#`@,"`P(#$Q(#`N,#`P(#`@,`H)(#(T-"`V
XM,C0@-#(T(#8R-"`T,C0@-CDY(#0Q.2`W,#0@-#`Y(#<P-"`S.3D@-S`T(#,X
XM."`W,#`@,S@T(#8Y-2`S-S<@-CDW(#,V,2`W,#`@,S4T(#8Y,"`S,S0@-CDU
XM(#,S,R`V.34@,S,P(#8Y."`S,C<@-S`S(#,Q-R`W,#,@,S`W(#8Y,R`S,#,@
XM-CDP(#,P,R`V.3`@,S`S(#8Y,"`R.34@-CDT(#(X-"`W,#(@,C<U(#<P,R`R
XM-CD@-CDV(#(V,B`V.3,@,C4T(#8Y-2`R-#<@-CDT(#(T-2`V.#0@,C0T(#8R
XM-"`Y.3DY(#DY.3D*,B`S(#`@,B`P(#`@,"`Q,2`P+C`P,"`P(#`*"2`R-#0@
XM,30T(#(T-"`R,#0@-#(T(#(P-"`T,C0@,3,T(#0Q,R`Q,S,@,SDX(#$S,B`S
XM.#@@,3(T(#,W.2`Q,S,@,S8T(#$S,"`S-34@,3(X(#,T,R`Q,S$@,S,V(#$R
XM."`S,S$@,3(T(#,R-2`Q,C8@,S(P(#$R.2`S,3`@,3,T(#,P,2`Q,S0@,CDV
XM(#$R."`R.#$@,3(T(#(W,B`Q,C4@,C8X(#$S,"`R-C`@,3,U(#(U-B`Q,S,@
XM,C0Y(#$S-2`R-#<@,3,Y(#(T-"`Q-#0@.3DY.2`Y.3DY"C(@,B`P(#(@,"`P
XM(#`@,"`P+C`P,"`P(#`*"2`R-SD@,C`T(#(W.2`R,#D@,CDT(#(P.2`R.30@
XM,C`T(#(W.2`R,#0@.3DY.2`Y.3DY"C(@,B`P(#(@,"`P(#`@,"`P+C`P,"`P
XM(#`*"2`R-SD@-C$Y(#(W.2`V,C0@,CDT(#8R-"`R.30@-C$Y(#(W.2`V,3D@
XM.3DY.2`Y.3DY"C(@,B`P(#$@,"`P(#`@,"`P+C`P,"`P(#`*"2`R.#0@,C`Y
XM(#(X.2`R,#D@,C@Y(#8Q.2`R.#0@-C$Y(#(X-"`R,#D@.3DY.2`Y.3DY"C(@
XM,B`P(#(@,"`P(#`@,"`P+C`P,"`P(#`*"2`S-S0@,C`T(#,W-"`R,#D@,S@Y
XM(#(P.2`S.#D@,C`T(#,W-"`R,#0@.3DY.2`Y.3DY"C(@,B`P(#(@,"`P(#`@
XM,"`P+C`P,"`P(#`*"2`S-S0@-C$Y(#,W-"`V,C0@,S@Y(#8R-"`S.#D@-C$Y
XM(#,W-"`V,3D@.3DY.2`Y.3DY"C(@,B`P(#$@,"`P(#`@,"`P+C`P,"`P(#`*
XM"2`S-SD@,C`Y(#,X-"`R,#D@,S@T(#8Q.2`S-SD@-C$Y(#,W.2`R,#D@.3DY
XM.2`Y.3DY"C,@,"`P(#(@,"`P(#`@,"`P+C`P,"`P(#`*"2`R-C0@,S8T(#(W
XM-"`S-CD@,C@P(#0P-"`R.3,@-#`S(#(Y-"`T,C$@,CDW(#0U,R`S-S0@-#4Q
XM(#,W-"`T.#0@,S@X(#0X,R`S.3`@-#DP(#,X.2`U,3D@-#`T(#4R-"`Y.3DY
XM(#DY.3D*,R`P(#`@,2`P(#`@,"`P(#`N,#`P(#$@,`H),"`P(#$N,#`P(#0N
XM,#`P(#@N,#`P"@D@,CDY(#,V-"`R.3D@,CDT(#,P-"`R,SD@,S$Y(#(Q-"`S
XM-#0@,C$T(#,V-"`R,S0@,S8Y(#(Y-"`S-CD@,S0T(#DY.3D@.3DY.0HS(#`@
XM,"`Q(#`@,"`P(#`@,"XP,#`@,2`P"@DP(#`@,2XP,#`@-"XP,#`@."XP,#`*
XM"2`S-CD@-3$Y(#,V.2`U-CD@,S4Y(#4Y.2`S,C0@-C`T(#(Y.2`U.#0@,CDY
XM(#0Y-"`Y.3DY(#DY.3D*-"`P(#`@,3(@,"`P(#`@,"XP,#`@,2`W(#(Y(#,Y
XM.2`T-#`@<W1O<FT!"C0@,B`P(#$R(#`@,"`P(#`N,#`P(#$@,3(@,C@@,C8Y
XM(#0S-R!P<FEM90$*-"`Q(#`@,30@,"`P(#`@,"XP,#`@,2`R(#,@-#$X(#(U
XM-B`N`0HT(#$@,"`Q,B`P(#`@,"`P+C`P,"`Q(#8@.2`T,3@@,C8T(&T!"C0@
XM,"`P(#$R(#`@,"`P(#`N,#`P(#$@-B`V(#,S-2`T-#D@80$*-"`P(#`@,3(@
XM,"`P(#`@,"XP,#`@,2`X(#8@,S(X(#0T-"!T`0HT(#`@,"`Q,B`P(#`@,"`P
XM+C`P,"`Q(#8@-B`T,C<@-3(Q(&\!"C0@,"`P(#$R(#`@,"`P(#`N,#`P(#$@
XM."`V(#0R,"`U,3<@=`$*-"`P(#`@,3(@,"`P(#`@,"XP,#`@,2`Y(#,@,C,S
XM(#,U."!I`0HT(#`@,"`Q,B`P(#`@,"`P+C`P,"`Q(#@@-B`R,C<@,S4U('0!
XM"C0@,"`P(#$P(#`@,"`P(#`N,#`P(#$@-R`U(#0P,B`R,S$@,@$*-"`P(#`@
XM,3(@,"`P(#`@,"XP,#`@,2`X(#8@,SDU(#(R-B!T`0HT(#`@,"`Q,"`P(#`@
XM,"`P+C`P,"`Q(#<@-2`S,#`@,C,R(#$!"C0@,"`P(#$R(#`@,"`P(#`N,#`P
XM(#$@."`V(#(Y-"`R,C<@=`$*-"`P(#`@,3(@,"`P(#`@,"XP,#`@,2`Q,2`V
X5,"`U-"`W,CD@8W)A8VLN9FEG-`$*
X`
Xend
END_OF_FILE
if test 3468 -ne `wc -c <'Examples/window2.fig.uu'`; then
    echo shar: \"'Examples/window2.fig.uu'\" unpacked with wrong size!
fi
# end of 'Examples/window2.fig.uu'
fi
if test -f 'Fig-color.ad' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'Fig-color.ad'\"
else
echo shar: Extracting \"'Fig-color.ad'\" \(3339 characters\)
sed "s/^X//" >'Fig-color.ad' <<'END_OF_FILE'
X! Some interesting colors for the different parts of xfig
X! if you are using a COLOR workstation.
X
X#include "Fig"
X
X#ifdef COLOR
X	Fig*ind_panel.button.background: yellow
X	Fig*ind_panel.button.foreground: blue
X	Fig*mode_panel.button.background: cyan
X	Fig*mode_panel.button.foreground: red
X	Fig*mouse_panel.background: green
X	Fig*mouse_panel.foreground: black
X! Edit popup
X	Fig*xfig_edit_panel.form.done.background: green
X	Fig*xfig_edit_panel.form.apply.background: yellow
X	Fig*xfig_edit_panel.form.cancel.background: red
X! make a light grey background so you can see the color "white" in the edit menu
X	Fig*xfig_edit_panel.form.colors.menu.background: grey90
X! File popup
X	Fig*file_panel*background:		orchid
X	Fig*file_panel*Text*background:		white
X	Fig*file_panel*Text*foreground:		black
X	Fig*file_panel*List*background:		white
X	Fig*file_panel*List*foreground:		black
X	Fig*file_panel*Scrollbar*background:	lightskyblue
X	Fig*file_panel*Scrollbar*foreground:	red
X	Fig*file_panel.rescan.foreground:	black
X	Fig*file_panel.rescan.background:	lightskyblue
X	Fig*file_panel.cancel.foreground:	black
X	Fig*file_panel.cancel.background:	red
X	Fig*file_panel.save.foreground:		black
X	Fig*file_panel.save.background:		yellow
X	Fig*file_panel.load.foreground:		black
X	Fig*file_panel.load.background:		green
X	Fig*file_panel.merge.foreground:	black
X	Fig*file_panel.merge.background:	lightskyblue
X! Export popup
X	Fig*export_panel*background:		orchid
X	Fig*export_panel*Text*background:	white
X	Fig*export_panel*Text*foreground:	black
X	Fig*export_panel*List*background:	white
X	Fig*export_panel*List*foreground:	black
X	Fig*export_panel*Scrollbar*background:	lightskyblue
X	Fig*export_panel*Scrollbar*foreground:	red
X	Fig*export_panel*MenuButton*background:	white
X	Fig*export_panel*MenuButton*foreground:	black
X	Fig*export_panel*landscape.menu.background: yellow
X	Fig*export_panel*landscape.menu.foreground: black
X	Fig*export_panel.rescan.foreground:	black
X	Fig*export_panel.rescan.background:	lightskyblue
X	Fig*export_panel.cancel.foreground:	black
X	Fig*export_panel.cancel.background:	red
X	Fig*export_panel.export.foreground:	black
X	Fig*export_panel.export.background:	green
X! Print popup
X	Fig*print_panel*Background:		orchid
X	Fig*print_panel*Text*background:	white
X	Fig*print_panel*Text*foreground:	black
X	Fig*print_panel*MenuButton*background:	white
X	Fig*print_panel*MenuButton*foreground:	black
X	Fig*print_panel*printer_image*foreground: white
X	Fig*print_panel*landscape.menu.background: yellow
X	Fig*print_panel*landscape.menu.foreground: black
X	Fig*print_panel*flush left.menu.background: orange
X	Fig*print_panel*flush left.menu.foreground: black
X	Fig*print_panel.cancel.background:	red
X	Fig*print_panel.cancel.foreground:	black
X	Fig*print_panel.print.background:	green
X	Fig*print_panel.print.foreground:	black
X	Fig*print_panel.output_printer.background: yellow
X	Fig*print_panel.output_printer.foreground: black
X	Fig*print_panel.output_file.background:	yellow
X	Fig*print_panel.output_file.foreground:	black
X! File message popup
X	Fig*file_msg_panel.background:		orchid
X	Fig*file_msg_panel.file_msg_win*background: lightskyblue
X	Fig*file_msg_panel.file_msg_win*foreground: red
X	Fig*file_msg_panel.dismiss.background:	green
X	Fig*file_msg_panel.dismiss.foreground:	black
X	Fig*file_msg_panel.clear.background:	red
X	Fig*file_msg_panel.clear.foreground:	black
X#endif
END_OF_FILE
if test 3339 -ne `wc -c <'Fig-color.ad'`; then
    echo shar: \"'Fig-color.ad'\" unpacked with wrong size!
fi
# end of 'Fig-color.ad'
fi
if test -f 'd_epsobj.c' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'d_epsobj.c'\"
else
echo shar: Extracting \"'d_epsobj.c'\" \(3081 characters\)
sed "s/^X//" >'d_epsobj.c' <<'END_OF_FILE'
X/*
X * FIG : Facility for Interactive Generation of figures
X * Copyright (c) 1985 by Supoj Sutanthavibul
X *
X * "Permission to use, copy, modify, distribute, and sell this software and its
X * documentation for any purpose is hereby granted without fee, provided that
X * the above copyright notice appear in all copies and that both that
X * copyright notice and this permission notice appear in supporting
X * documentation, and that the name of M.I.T. not be used in advertising or
X * publicity pertaining to distribution of the software without specific,
X * written prior permission.  M.I.T. makes no representations about the
X * suitability of this software for any purpose.  It is provided "as is"
X * without express or implied warranty."
X *
X */
X
X#include "fig.h"
X#include "resources.h"
X#include "mode.h"
X#include "object.h"
X#include "paintop.h"
X#include "u_create.h"
X#include "u_elastic.h"
X#include "u_list.h"
X#include "w_canvas.h"
X#include "w_mousefun.h"
X
X/*************************** local declarations *********************/
X
Xstatic
X		init_epsobj_drawing(), create_epsobj(),
X		cancel_epsobj();
X
Xepsobj_drawing_selected()
X{
X    set_mousefun("corner point", "", "");
X    canvas_kbd_proc = null_proc;
X    canvas_locmove_proc = null_proc;
X    canvas_leftbut_proc = init_epsobj_drawing;
X    canvas_middlebut_proc = null_proc;
X    canvas_rightbut_proc = null_proc;
X    set_cursor(arrow_cursor);
X    reset_action_on();
X}
X
Xstatic
Xinit_epsobj_drawing(x, y)
X    int		    x, y;
X{
X    init_box_drawing(x, y);
X    canvas_leftbut_proc = create_epsobj;
X    canvas_rightbut_proc = cancel_epsobj;
X}
X
Xstatic
Xcancel_epsobj()
X{
X    elastic_box(fix_x, fix_y, cur_x, cur_y);
X    epsobj_drawing_selected();
X    draw_mousefun_canvas();
X}
X
Xstatic
Xcreate_epsobj(x, y)
X    int		    x, y;
X{
X    F_line	   *box;
X    F_point	   *point;
X
X    elastic_box(fix_x, fix_y, cur_x, cur_y);
X
X    if ((point = create_point()) == NULL)
X	return;
X
X    point->x = fix_x;
X    point->y = fix_y;
X    point->next = NULL;
X
X    if ((box = create_line()) == NULL) {
X	free((char *) point);
X	return;
X    }
X    box->type = T_EPS_BOX;
X    box->style = SOLID_LINE;
X    box->thickness = 1;
X    box->color = cur_color;
X    box->depth = 0;
X    box->pen = 0;
X    box->fill_style = 0;
X    box->style_val = 0;
X    box->radius = 0;
X
X    if ((box->eps = create_eps()) == NULL) {
X	free((char *) point);
X	free((char *) box);
X	return;
X    }
X    box->eps->file[0] = '\0';
X    box->eps->bitmap = NULL;
X    box->eps->bit_size.x = 0;
X    box->eps->bit_size.y = 0;
X    box->eps->flipped = 0;
X    box->eps->hw_ratio = 0.0;
X    box->eps->pixmap = 0;
X    box->eps->pix_width = 0;
X    box->eps->pix_height = 0;
X    box->eps->pix_rotation = 0;
X    box->eps->pix_flipped = 0;
X
X    box->points = point;
X    append_point(fix_x, y, &point);
X    append_point(x, y, &point);
X    append_point(x, fix_y, &point);
X    append_point(fix_x, fix_y, &point);
X    draw_line(box, PAINT);
X    add_line(box);
X    put_msg("Please enter name of EPS file in EDIT window");
X    edit_item((char *) box, O_POLYLINE);
X    epsobj_drawing_selected();
X    draw_mousefun_canvas();
X}
END_OF_FILE
if test 3081 -ne `wc -c <'d_epsobj.c'`; then
    echo shar: \"'d_epsobj.c'\" unpacked with wrong size!
fi
# end of 'd_epsobj.c'
fi
if test -f 'd_regpoly.c' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'d_regpoly.c'\"
else
echo shar: Extracting \"'d_regpoly.c'\" \(3574 characters\)
sed "s/^X//" >'d_regpoly.c' <<'END_OF_FILE'
X/*
X * FIG : Facility for Interactive Generation of figures
X * Copyright (c) 1985 by Supoj Sutanthavibul
X *
X * "Permission to use, copy, modify, distribute, and sell this software and its
X * documentation for any purpose is hereby granted without fee, provided that
X * the above copyright notice appear in all copies and that both that
X * copyright notice and this permission notice appear in supporting
X * documentation, and that the name of M.I.T. not be used in advertising or
X * publicity pertaining to distribution of the software without specific,
X * written prior permission.  M.I.T. makes no representations about the
X * suitability of this software for any purpose.  It is provided "as is"
X * without express or implied warranty."
X *
X */
X
X#include "fig.h"
X#include "resources.h"
X#include "mode.h"
X#include "object.h"
X#include "paintop.h"
X#include "u_create.h"
X#include "u_elastic.h"
X#include "u_list.h"
X#include "w_canvas.h"
X#include "w_mousefun.h"
X
Xextern float	compute_angle();
X
X/*************************** local declarations *********************/
X
Xstatic		init_regpoly_drawing(), create_regpoly(), cancel_regpoly();
X
Xregpoly_drawing_selected()
X{
X    set_mousefun("center point", "", "");
X    canvas_kbd_proc = null_proc;
X    canvas_locmove_proc = null_proc;
X    canvas_leftbut_proc = init_regpoly_drawing;
X    canvas_middlebut_proc = null_proc;
X    canvas_rightbut_proc = null_proc;
X    set_cursor(arrow_cursor);
X    reset_action_on();
X}
X
Xstatic
Xinit_regpoly_drawing(x, y)
X    int		    x, y;
X{
X    cur_x = fix_x = x;
X    cur_y = fix_y = y;
X    work_numsides = cur_numsides;
X    set_mousefun("final point", "", "cancel");
X    draw_mousefun_canvas();
X    canvas_locmove_proc = resizing_poly;
X    canvas_leftbut_proc = create_regpoly;
X    canvas_middlebut_proc = null_proc;
X    canvas_rightbut_proc = cancel_regpoly;
X    elastic_poly(fix_x, fix_y, cur_x, cur_y, work_numsides);
X    set_temp_cursor(null_cursor);
X    set_action_on();
X}
X
Xstatic
Xcancel_regpoly()
X{
X    elastic_poly(fix_x, fix_y, cur_x, cur_y, work_numsides);
X    regpoly_drawing_selected();
X    draw_mousefun_canvas();
X}
X
Xstatic
Xcreate_regpoly(x, y)
X    int		    x, y;
X{
X    register float  angle;
X    register int    nx, ny, dx, dy, i;
X    float	    init_angle, mag;
X    F_line	   *poly;
X    F_point	   *point;
X
X    elastic_poly(fix_x, fix_y, cur_x, cur_y, work_numsides);
X    if (fix_x == x && fix_y == y)
X	return;			/* 0 size */
X
X    if ((point = create_point()) == NULL)
X	return;
X
X    point->x = x;
X    point->y = y;
X    point->next = NULL;
X
X    if ((poly = create_line()) == NULL) {
X	free((char *) point);
X	return;
X    }
X    poly->type = T_POLYGON;
X    poly->style = cur_linestyle;
X    poly->thickness = cur_linewidth;
X    poly->color = cur_color;
X    poly->depth = 0;
X    poly->pen = 0;
X    poly->fill_style = cur_fillstyle;
X    /* scale dash length by line thickness */
X    poly->style_val = cur_styleval * (cur_linewidth + 1) / 2;
X    poly->radius = 0;
X    poly->points = point;
X
X    dx = x - fix_x;
X    dy = y - fix_y;
X    mag = sqrt((double) (dx * dx + dy * dy));
X    init_angle = compute_angle((float) dx, (float) dy);
X
X    /* now append cur_numsides points */
X    for (i = 1; i < cur_numsides; i++) {
X	angle = init_angle - 2.0 * M_PI * (float) i / (float) cur_numsides;
X	if (angle < 0)
X	    angle += 2.0 * M_PI;
X	nx = fix_x + round(mag * cos((double) angle));
X	ny = fix_y + round(mag * sin((double) angle));
X	append_point(nx, ny, &point);
X    }
X    append_point(x, y, &point);
X
X    draw_line(poly, PAINT);
X    add_line(poly);
X    regpoly_drawing_selected();
X    draw_mousefun_canvas();
X}
END_OF_FILE
if test 3574 -ne `wc -c <'d_regpoly.c'`; then
    echo shar: \"'d_regpoly.c'\" unpacked with wrong size!
fi
# end of 'd_regpoly.c'
fi
if test -f 'e_move.c' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'e_move.c'\"
else
echo shar: Extracting \"'e_move.c'\" \(3599 characters\)
sed "s/^X//" >'e_move.c' <<'END_OF_FILE'
X/*
X * FIG : Facility for Interactive Generation of figures
X * Copyright (c) 1985 by Supoj Sutanthavibul
X *
X * "Permission to use, copy, modify, distribute, and sell this software and its
X * documentation for any purpose is hereby granted without fee, provided that
X * the above copyright notice appear in all copies and that both that
X * copyright notice and this permission notice appear in supporting
X * documentation, and that the name of M.I.T. not be used in advertising or
X * publicity pertaining to distribution of the software without specific,
X * written prior permission.  M.I.T. makes no representations about the
X * suitability of this software for any purpose.  It is provided "as is"
X * without express or implied warranty."
X *
X */
X
X#include "fig.h"
X#include "resources.h"
X#include "object.h"
X#include "paintop.h"
X#include "u_draw.h"
X#include "u_elastic.h"
X#include "u_list.h"
X#include "u_search.h"
X#include "w_canvas.h"
X#include "w_mousefun.h"
X
Xstatic		init_move(), init_arb_move(), init_constrained_move();
X
Xmove_selected()
X{
X    set_mousefun("move object", "horiz/vert move", "");
X    canvas_kbd_proc = null_proc;
X    canvas_locmove_proc = null_proc;
X    init_searchproc_left(init_arb_move);
X    init_searchproc_middle(init_constrained_move);
X    canvas_leftbut_proc = object_search_left;
X    canvas_middlebut_proc = object_search_middle;
X    canvas_rightbut_proc = null_proc;
X    return_proc = move_selected;
X    set_cursor(pick9_cursor);
X    reset_action_on();
X}
X
Xstatic
Xinit_arb_move(p, type, x, y, px, py)
X    char	   *p;
X    int		    type;
X    int		    x, y, px, py;
X{
X    constrained = MOVE_ARB;
X    init_move(p, type, x, y, px, py);
X    canvas_middlebut_proc = null_proc;
X    set_mousefun("place object", "", "cancel");
X    draw_mousefun_canvas();
X}
X
Xstatic
Xinit_constrained_move(p, type, x, y, px, py)
X    char	   *p;
X    int		    type;
X    int		    x, y, px, py;
X{
X    constrained = MOVE_HORIZ_VERT;
X    init_move(p, type, x, y, px, py);
X    canvas_middlebut_proc = canvas_leftbut_proc;
X    canvas_leftbut_proc = null_proc;
X    set_mousefun("", "place object", "cancel");
X    draw_mousefun_canvas();
X}
X
Xstatic
Xinit_move(p, type, x, y, px, py)
X    char	   *p;
X    int		    type;
X    int		    x, y, px, py;
X{
X    switch (type) {
X    case O_COMPOUND:
X	set_temp_cursor(wait_cursor);
X	cur_c = (F_compound *) p;
X	list_delete_compound(&objects.compounds, cur_c);
X	redisplay_compound(cur_c);
X	set_temp_cursor(null_cursor);
X	init_compounddragging(cur_c, px, py);
X	break;
X    case O_POLYLINE:
X	set_temp_cursor(wait_cursor);
X	cur_l = (F_line *) p;
X	list_delete_line(&objects.lines, cur_l);
X	redisplay_line(cur_l);
X	set_temp_cursor(null_cursor);
X	init_linedragging(cur_l, px, py);
X	break;
X    case O_TEXT:
X	set_temp_cursor(wait_cursor);
X	cur_t = (F_text *) p;
X	list_delete_text(&objects.texts, cur_t);
X	redisplay_text(cur_t);
X	set_temp_cursor(null_cursor);
X	init_textdragging(cur_t, x, y);
X	break;
X    case O_ELLIPSE:
X	set_temp_cursor(wait_cursor);
X	cur_e = (F_ellipse *) p;
X	list_delete_ellipse(&objects.ellipses, cur_e);
X	redisplay_ellipse(cur_e);
X	set_temp_cursor(null_cursor);
X	init_ellipsedragging(cur_e, px, py);
X	break;
X    case O_ARC:
X	set_temp_cursor(wait_cursor);
X	cur_a = (F_arc *) p;
X	list_delete_arc(&objects.arcs, cur_a);
X	redisplay_arc(cur_a);
X	set_temp_cursor(null_cursor);
X	init_arcdragging(cur_a, px, py);
X	break;
X    case O_SPLINE:
X	set_temp_cursor(wait_cursor);
X	cur_s = (F_spline *) p;
X	list_delete_spline(&objects.splines, cur_s);
X	redisplay_spline(cur_s);
X	set_temp_cursor(null_cursor);
X	init_splinedragging(cur_s, px, py);
X	break;
X    default:
X	return;
X    }
X}
END_OF_FILE
if test 3599 -ne `wc -c <'e_move.c'`; then
    echo shar: \"'e_move.c'\" unpacked with wrong size!
fi
# end of 'e_move.c'
fi
if test -f 'f_epsobj.c' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'f_epsobj.c'\"
else
echo shar: Extracting \"'f_epsobj.c'\" \(3628 characters\)
sed "s/^X//" >'f_epsobj.c' <<'END_OF_FILE'
X/*
X * FIG : Facility for Interactive Generation of figures
X * Copyright (c) 1985 by Supoj Sutanthavibul
X *
X * "Permission to use, copy, modify, distribute, and sell this software and its
X * documentation for any purpose is hereby granted without fee, provided that
X * the above copyright notice appear in all copies and that both that
X * copyright notice and this permission notice appear in supporting
X * documentation, and that the name of M.I.T. not be used in advertising or
X * publicity pertaining to distribution of the software without specific,
X * written prior permission.  M.I.T. makes no representations about the
X * suitability of this software for any purpose.  It is provided "as is"
X * without express or implied warranty."
X *
X */
X
X#include "fig.h"
X#include "resources.h"
X#include "object.h"
X#include "paintop.h"
X#include "u_create.h"
X#include "u_elastic.h"
X#include "w_canvas.h"
X#include "mode.h"
X#include <stdio.h>
X
Xread_epsf(eps)
X    F_eps	   *eps;
X{
X    int		    nbitmap;
X    int		    bitmapz;
X    char	   *cp;
X    unsigned char  *mp;
X    int		    n;
X    int		    flag;
X    char	    buf[300];
X    int		    llx, lly, urx, ury;
X    FILE	   *epsf;
X    register unsigned char *last;
X
X    epsf = fopen(eps->file, "r");
X    if (epsf == NULL) {
X	put_msg("Cannot open file: %s", eps->file);
X	return 0;
X    }
X    while (fgets(buf, 300, epsf) != NULL) {
X	lower(buf);
X	if (!strncmp(buf, "%%boundingbox", 13)) {
X	    if (sscanf(buf, "%%%%boundingbox: %d %d %d %d",
X		       &llx, &lly, &urx, &ury) < 4) {
X		put_msg("Bad EPS file: %s", eps->file);
X		fclose(epsf);
X		return 0;
X	    }
X	    break;
X	}
X    }
X
X    eps->hw_ratio = (float) (ury - lly) / (float) (urx - llx);
X    eps->size_x = urx - llx;
X    eps->size_y = ury - lly;
X
X    eps->bitmap = NULL;
X    eps->bit_size.x = 0;
X    eps->bit_size.y = 0;
X
X    eps->pixmap = 0;
X    eps->pix_flipped = 0;
X    eps->pix_rotation = 0;
X    eps->pix_width = 0;
X    eps->pix_height = 0;
X
X    if (ury - lly <= 0 || urx - llx <= 0) {
X	put_msg("Bad values in EPS bounding box");
X    }
X    bitmapz = 0;
X
X    /* look for a preview bitmap */
X    n = 1;
X    while (fgets(buf, 300, epsf) != NULL) {
X	lower(buf);
X	if (!strncmp(buf, "%%beginpreview", 14)) {
X	    sscanf(buf, "%%%%beginpreview: %d %d %d",
X		   &eps->bit_size.x, &eps->bit_size.y, &bitmapz);
X	    n = 0;
X	    break;
X	}
X    }
X
X    if (n) {
X	put_msg("EPS object read OK, but no preview bitmap found");
X	return;
X    }
X
X    if (eps->bit_size.x > 0 && eps->bit_size.y > 0 && bitmapz == 1) {
X	nbitmap = (eps->bit_size.x + 7) / 8 * eps->bit_size.y;
X	eps->bitmap = (unsigned char *) malloc(nbitmap);
X	if (eps->bitmap == NULL)
X	    fprintf(stderr, "could not allocate %d bytes of memory\n", nbitmap);
X    }
X    /* read for a preview bitmap */
X    if (eps->bitmap != NULL) {
X	mp = eps->bitmap;
X	bzero(mp, nbitmap);	/* init bitmap to zero */
X	last = eps->bitmap + nbitmap;
X	flag = True;
X	while (fgets(buf, 300, epsf) != NULL && mp < last) {
X	    lower(buf);
X	    if (!strncmp(buf, "%%endpreview", 12) ||
X		!strncmp(buf, "%%endimage", 10))
X		break;
X	    cp = buf;
X	    if (*cp != '%')
X		break;
X	    cp++;
X	    while (*cp != NULL) {
X		if (isxdigit(*cp)) {
X		    n = hex(*cp);
X		    if (flag) {
X			flag = False;
X			*mp = n << 4;
X		    } else {
X			flag = True;
X			*mp = *mp + n;
X			mp++;
X			if (mp >= last)
X			    break;
X		    }
X		}
X		cp++;
X	    }
X	}
X    }
X    put_msg("EPS object read OK");
X    fclose(epsf);
X    return 1;
X}
X
Xint
Xhex(c)
X    char	    c;
X{
X    if (isdigit(c))
X	return (c - 48);
X    else
X	return (c - 87);
X}
X
Xlower(buf)
X    char	   *buf;
X{
X    while (*buf) {
X	if (isupper(*buf))
X	    *buf = (char) tolower(*buf);
X	buf++;
X    }
X}
END_OF_FILE
if test 3628 -ne `wc -c <'f_epsobj.c'`; then
    echo shar: \"'f_epsobj.c'\" unpacked with wrong size!
fi
# end of 'f_epsobj.c'
fi
if test -f 'fig.icon.X' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'fig.icon.X'\"
else
echo shar: Extracting \"'fig.icon.X'\" \(3314 characters\)
sed "s/^X//" >'fig.icon.X' <<'END_OF_FILE'
X#define fig_width 64
X#define fig_height 64
X#define fig_x_hot -1
X#define fig_y_hot -1
Xstatic char fig_bits[] = {
X   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x80, 0x01, 0x00, 0x00, 0x00, 0x00, 0x80, 0x01, 0x80,
X   0x01, 0x7f, 0x8e, 0x0f, 0x00, 0x60, 0x03, 0x80, 0x01, 0x42, 0x44, 0x08,
X   0x00, 0x10, 0x04, 0x80, 0x01, 0x12, 0x44, 0x00, 0x00, 0x18, 0x08, 0x80,
X   0x01, 0x1e, 0x44, 0x1e, 0x00, 0x04, 0x08, 0x80, 0x01, 0x12, 0x44, 0x08,
X   0x00, 0x04, 0x10, 0x80, 0x01, 0x02, 0x44, 0x08, 0x00, 0x03, 0x10, 0x80,
X   0x01, 0x02, 0x44, 0x0c, 0x00, 0x01, 0x10, 0x80, 0x01, 0x07, 0x8e, 0x0b,
X   0x80, 0x00, 0x10, 0x80, 0x01, 0x00, 0x00, 0x00, 0x80, 0x00, 0x08, 0x83,
X   0x01, 0x00, 0x00, 0x00, 0x40, 0x00, 0x88, 0x8c, 0x61, 0x00, 0x00, 0x00,
X   0x40, 0x00, 0x48, 0xf0, 0x81, 0x07, 0x00, 0x00, 0x40, 0x40, 0x38, 0xc0,
X   0x01, 0x78, 0x00, 0x00, 0x38, 0x20, 0x00, 0x80, 0x01, 0x80, 0x07, 0xfc,
X   0x47, 0x20, 0x00, 0x80, 0xe1, 0x00, 0xf8, 0x03, 0x40, 0x10, 0x00, 0x81,
X   0x01, 0x0f, 0x00, 0x00, 0x0e, 0x0c, 0xd0, 0x80, 0x01, 0xf0, 0xe0, 0xe0,
X   0x87, 0x00, 0x06, 0x80, 0x01, 0x00, 0xbf, 0xff, 0x40, 0xf1, 0x00, 0x80,
X   0x01, 0x00, 0x90, 0x38, 0xa0, 0x06, 0x00, 0x80, 0x01, 0x00, 0x58, 0x08,
X   0x80, 0x08, 0x00, 0x80, 0x01, 0x00, 0x48, 0x08, 0x18, 0x11, 0x00, 0x80,
X   0x01, 0x00, 0x4c, 0x08, 0x04, 0x21, 0xe0, 0x83, 0x01, 0x00, 0x22, 0x04,
X   0x03, 0x41, 0x10, 0x82, 0x01, 0x00, 0x21, 0x02, 0x00, 0x01, 0x10, 0x84,
X   0x01, 0x00, 0x11, 0x01, 0x00, 0x81, 0xe1, 0xe4, 0x01, 0x80, 0x90, 0x00,
X   0x1c, 0x00, 0x01, 0x99, 0x01, 0x80, 0x90, 0x80, 0x23, 0x01, 0x02, 0x82,
X   0x01, 0x40, 0x90, 0x81, 0x38, 0x01, 0x02, 0x82, 0x01, 0x20, 0x10, 0x7f,
X   0x04, 0x01, 0x04, 0x84, 0x01, 0x10, 0x20, 0x00, 0x82, 0x00, 0x04, 0x84,
X   0x01, 0x08, 0x20, 0x80, 0x81, 0x00, 0x00, 0x88, 0x01, 0x08, 0x40, 0x40,
X   0x80, 0x00, 0x08, 0x90, 0x01, 0x04, 0x40, 0x40, 0x40, 0x00, 0x00, 0x90,
X   0x01, 0x02, 0x80, 0x40, 0x20, 0x0c, 0x10, 0x90, 0x01, 0x01, 0x80, 0x20,
X   0x10, 0x12, 0x10, 0xa0, 0x01, 0x01, 0x00, 0x21, 0x00, 0x11, 0x10, 0xa0,
X   0x81, 0x20, 0x00, 0x31, 0x00, 0x09, 0x10, 0xa0, 0x81, 0x10, 0x00, 0x12,
X   0x00, 0x09, 0x00, 0xa0, 0x41, 0x00, 0x00, 0x12, 0x00, 0x05, 0x20, 0xa0,
X   0x41, 0x08, 0x00, 0x12, 0x80, 0x04, 0x00, 0xa0, 0x21, 0x00, 0x00, 0x12,
X   0x40, 0x04, 0x20, 0xa0, 0x21, 0x04, 0x00, 0x14, 0x20, 0x04, 0x20, 0xa0,
X   0x11, 0x00, 0x00, 0x24, 0x18, 0x04, 0x00, 0xa0, 0x11, 0x04, 0x00, 0xc4,
X   0x07, 0x04, 0x00, 0xa0, 0x11, 0x00, 0x00, 0x04, 0x00, 0x04, 0x00, 0x90,
X   0x09, 0x04, 0x00, 0x08, 0x00, 0x04, 0x00, 0x90, 0x09, 0x00, 0x00, 0x08,
X   0x00, 0x04, 0x00, 0x98, 0x09, 0x08, 0x00, 0x08, 0x00, 0x08, 0x00, 0x88,
X   0x11, 0x00, 0x00, 0x08, 0x00, 0x18, 0x00, 0x88, 0x11, 0x00, 0x00, 0x08,
X   0x00, 0x10, 0x00, 0x84, 0x11, 0x00, 0x00, 0x04, 0x00, 0x20, 0x00, 0x86,
X   0x11, 0xe0, 0x00, 0x04, 0x00, 0x60, 0x00, 0x81, 0x21, 0x20, 0x01, 0x02,
X   0x00, 0x80, 0x81, 0x80, 0x21, 0xc0, 0x00, 0x01, 0x00, 0x00, 0xc1, 0x80,
X   0x41, 0x00, 0x80, 0x00, 0x00, 0x00, 0x62, 0x80, 0x81, 0x00, 0xc0, 0x00,
X   0x00, 0x00, 0x1c, 0x80, 0x01, 0x01, 0x70, 0x00, 0x00, 0x00, 0x00, 0x80,
X   0x01, 0x0e, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x80, 0x01, 0xf8, 0x01, 0x00,
X   0x00, 0x00, 0x00, 0x80, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80,
X   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff};
END_OF_FILE
if test 3314 -ne `wc -c <'fig.icon.X'`; then
    echo shar: \"'fig.icon.X'\" unpacked with wrong size!
fi
# end of 'fig.icon.X'
fi
if test -f 'mode.c' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'mode.c'\"
else
echo shar: Extracting \"'mode.c'\" \(3292 characters\)
sed "s/^X//" >'mode.c' <<'END_OF_FILE'
X/*
X * FIG : Facility for Interactive Generation of figures
X * Copyright (c) 1985 by Supoj Sutanthavibul
X *
X * "Permission to use, copy, modify, distribute, and sell this software and its
X * documentation for any purpose is hereby granted without fee, provided that
X * the above copyright notice appear in all copies and that both that
X * copyright notice and this permission notice appear in supporting
X * documentation, and that the name of M.I.T. not be used in advertising or
X * publicity pertaining to distribution of the software without specific,
X * written prior permission.  M.I.T. makes no representations about the
X * suitability of this software for any purpose.  It is provided "as is"
X * without express or implied warranty."
X *
X */
X
X#include "fig.h"
X#include "mode.h"
X#include "object.h"
X
Xint		cur_mode = F_NULL;
Xint		cur_halign = NONE;
Xint		cur_valign = NONE;
Xint		manhattan_mode = 0;
Xint		mountain_mode = 0;
Xint		latexline_mode = 0;
Xint		latexarrow_mode = 0;
Xint		autoforwardarrow_mode = 0;
Xint		autobackwardarrow_mode = 0;
Xint		cur_gridmode = GRID_0;
Xint		cur_pointposn = P_MAGNET;
Xint		posn_rnd[P_GRID2 + 1];
Xint		posn_hlf[P_GRID2 + 1];
Xint		grid_fine[P_GRID2 + 1];
Xint		grid_coarse[P_GRID2 + 1];
Xchar	       *grid_name[P_GRID2 + 1];
Xint		cur_rotnangle = 90;
Xint		cur_linkmode = 0;
Xint		cur_numsides = 6;
Xint		action_on = 0;
Xint		highlighting = 0;
Xint		aborting = 0;
Xint		anypointposn = 0;
Xint		figure_modified = 0;
X
X/**********************	 global mode variables	************************/
X
Xint		num_point;
Xint		min_num_points;
X
X/***************************  Print Settings  ****************************/
X
Xint		print_landscape = 0;	/* def. orientation for printer */
Xint		cur_exp_lang = LANG_EPS;
X
Xchar	       *lang_items[] = {
X    "box     ", "latex   ", "epic    ", "eepic   ", "eepicemu",
X    "pictex  ", "ibmgl   ", "eps     ", "ps      ", "pstex   ",
X    "pstex_t ", "textyl  ", "tpic    ", "pic     ", "xbm     "};
X
Xchar	       *lang_texts[] = {
X    "LaTeX box (figure boundary)    ",
X    "LaTeX picture                  ",
X    "LaTeX picture + epic macros    ",
X    "LaTeX picture + eepic macros   ",
X    "LaTeX picture + eepicemu macros",
X    "PiCTeX macros                  ",
X    "IBMGL (or HPGL)                ",
X    "Encapsulated Postscript        ",
X    "Postscript                     ",
X    "Combined PS/LaTeX (PS part)    ",
X    "Combined PS/LaTeX (LaTeX part) ",
X    "Textyl \\special commands       ",
X    "TPIC                           ",
X    "PIC                            ",
X    "X11 Bitmap                     "};
X
X/***************************  Mode Settings  ****************************/
X
Xint		cur_objmask = M_NONE;
X
X/***************************  Text Settings  ****************************/
X
Xint		hidden_text_length;
Xfloat		cur_textstep = 1.2;
X
X/***************************  File Settings  ****************************/
X
Xchar		cur_dir[1024];
Xchar		cur_filename[200] = "";
Xchar		save_filename[200] = "";	/* to undo load */
Xchar		cut_buf_name[100];
Xchar		file_header[32] = "#FIG ";
X
X/*************************** routines ***********************/
X
Xvoid
Xreset_modifiedflag()
X{
X    figure_modified = 0;
X}
X
Xvoid
Xset_modifiedflag()
X{
X    figure_modified = 1;
X}
X
Xvoid
Xset_action_on()
X{
X    action_on = 1;
X}
X
Xvoid
Xreset_action_on()
X{
X    action_on = 0;
X}
END_OF_FILE
if test 3292 -ne `wc -c <'mode.c'`; then
    echo shar: \"'mode.c'\" unpacked with wrong size!
fi
# end of 'mode.c'
fi
if test -f 'u_free.c' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'u_free.c'\"
else
echo shar: Extracting \"'u_free.c'\" \(3275 characters\)
sed "s/^X//" >'u_free.c' <<'END_OF_FILE'
X/*
X * FIG : Facility for Interactive Generation of figures
X * Copyright (c) 1985 by Supoj Sutanthavibul
X *
X * "Permission to use, copy, modify, distribute, and sell this software and its
X * documentation for any purpose is hereby granted without fee, provided that
X * the above copyright notice appear in all copies and that both that
X * copyright notice and this permission notice appear in supporting
X * documentation, and that the name of M.I.T. not be used in advertising or
X * publicity pertaining to distribution of the software without specific,
X * written prior permission.  M.I.T. makes no representations about the
X * suitability of this software for any purpose.  It is provided "as is"
X * without express or implied warranty."
X *
X */
X
X#include "fig.h"
X#include "object.h"
X#include "resources.h"
X
Xfree_arc(list)
X    F_arc	  **list;
X{
X    F_arc	   *a, *arc;
X
X    for (a = *list; a != NULL;) {
X	arc = a;
X	a = a->next;
X	if (arc->for_arrow)
X	    free((char *) arc->for_arrow);
X	if (arc->back_arrow)
X	    free((char *) arc->back_arrow);
X	free((char *) arc);
X    }
X    *list = NULL;
X}
X
Xfree_compound(list)
X    F_compound	  **list;
X{
X    F_compound	   *c, *compound;
X
X    for (c = *list; c != NULL;) {
X	compound = c;
X	c = c->next;
X	free_arc(&compound->arcs);
X	free_compound(&compound->compounds);
X	free_ellipse(&compound->ellipses);
X	free_line(&compound->lines);
X	free_spline(&compound->splines);
X	free_text(&compound->texts);
X	free((char *) compound);
X    }
X    *list = NULL;
X}
X
Xfree_ellipse(list)
X    F_ellipse	  **list;
X{
X    F_ellipse	   *e, *ellipse;
X
X    for (e = *list; e != NULL;) {
X	ellipse = e;
X	e = e->next;
X	free((char *) ellipse);
X    }
X    *list = NULL;
X}
X
Xfree_line(list)
X    F_line	  **list;
X{
X    F_line	   *l, *line;
X
X    for (l = *list; l != NULL;) {
X	line = l;
X	l = l->next;
X	free_linestorage(line);
X    }
X    *list = NULL;
X}
X
Xfree_text(list)
X    F_text	  **list;
X{
X    F_text	   *t, *text;
X
X    for (t = *list; t != NULL;) {
X	text = t;
X	t = t->next;
X	cfree(text->cstring);
X	free((char *) text);
X    }
X    *list = NULL;
X}
X
Xfree_spline(list)
X    F_spline	  **list;
X{
X    F_spline	   *s, *spline;
X
X    for (s = *list; s != NULL;) {
X	spline = s;
X	s = s->next;
X	free_splinestorage(spline);
X    }
X    *list = NULL;
X}
X
Xfree_splinestorage(s)
X    F_spline	   *s;
X{
X    F_control	   *a, *b;
X
X    free_points(s->points);
X    for (a = s->controls; a != NULL; a = b) {
X	b = a->next;
X	free((char *) a);
X    }
X    if (s->for_arrow)
X	free((char *) s->for_arrow);
X    if (s->back_arrow)
X	free((char *) s->back_arrow);
X    free((char *) s);
X}
X
Xfree_linestorage(l)
X    F_line	   *l;
X{
X    free_points(l->points);
X    if (l->for_arrow)
X	free((char *) l->for_arrow);
X    if (l->back_arrow)
X	free((char *) l->back_arrow);
X    if (l->eps) {
X	if (l->eps->bitmap)
X	    free((char *) l->eps->bitmap);
X	if (l->eps->pixmap != 0)
X	    XFreePixmap(tool_d, l->eps->pixmap);
X	free((char *) l->eps);
X    }
X    free((char *) l);
X}
X
Xfree_points(first_point)
X    F_point	   *first_point;
X{
X    F_point	   *p, *q;
X
X    for (p = first_point; p != NULL; p = q) {
X	q = p->next;
X	free((char *) p);
X    }
X}
X
Xfree_linkinfo(list)
X    F_linkinfo	  **list;
X{
X    F_linkinfo	   *l, *link;
X
X    for (l = *list; l != NULL;) {
X	link = l;
X	l = l->next;
X	free((char *) link);
X    }
X    *list = NULL;
X}
END_OF_FILE
if test 3275 -ne `wc -c <'u_free.c'`; then
    echo shar: \"'u_free.c'\" unpacked with wrong size!
fi
# end of 'u_free.c'
fi
if test -f 'u_translate.c' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'u_translate.c'\"
else
echo shar: Extracting \"'u_translate.c'\" \(3628 characters\)
sed "s/^X//" >'u_translate.c' <<'END_OF_FILE'
X/*
X * FIG : Facility for Interactive Generation of figures
X * Copyright (c) 1985 by Supoj Sutanthavibul
X *
X * "Permission to use, copy, modify, distribute, and sell this software and its
X * documentation for any purpose is hereby granted without fee, provided that
X * the above copyright notice appear in all copies and that both that
X * copyright notice and this permission notice appear in supporting
X * documentation, and that the name of M.I.T. not be used in advertising or
X * publicity pertaining to distribution of the software without specific,
X * written prior permission.  M.I.T. makes no representations about the
X * suitability of this software for any purpose.  It is provided "as is"
X * without express or implied warranty."
X *
X */
X
X#include "fig.h"
X#include "object.h"
X
Xtranslate_ellipse(ellipse, dx, dy)
X    F_ellipse	   *ellipse;
X    int		    dx, dy;
X{
X    ellipse->center.x += dx;
X    ellipse->center.y += dy;
X    ellipse->start.x += dx;
X    ellipse->start.y += dy;
X    ellipse->end.x += dx;
X    ellipse->end.y += dy;
X}
X
Xtranslate_arc(arc, dx, dy)
X    F_arc	   *arc;
X    int		    dx, dy;
X{
X    arc->center.x += (float) dx;
X    arc->center.y += (float) dy;
X    arc->point[0].x += dx;
X    arc->point[0].y += dy;
X    arc->point[1].x += dx;
X    arc->point[1].y += dy;
X    arc->point[2].x += dx;
X    arc->point[2].y += dy;
X}
X
Xtranslate_line(line, dx, dy)
X    F_line	   *line;
X    int		    dx, dy;
X{
X    F_point	   *point;
X
X    for (point = line->points; point != NULL; point = point->next) {
X	point->x += dx;
X	point->y += dy;
X    }
X}
X
Xtranslate_text(text, dx, dy)
X    F_text	   *text;
X    int		    dx, dy;
X{
X    text->base_x += dx;
X    text->base_y += dy;
X}
X
Xtranslate_spline(spline, dx, dy)
X    F_spline	   *spline;
X    int		    dx, dy;
X{
X    F_point	   *point;
X    F_control	   *cp;
X
X    for (point = spline->points; point != NULL; point = point->next) {
X	point->x += dx;
X	point->y += dy;
X    }
X    for (cp = spline->controls; cp != NULL; cp = cp->next) {
X	cp->lx += dx;
X	cp->ly += dy;
X	cp->rx += dx;
X	cp->ry += dy;
X    }
X}
X
Xtranslate_compound(compound, dx, dy)
X    F_compound	   *compound;
X    int		    dx, dy;
X{
X    compound->nwcorner.x += dx;
X    compound->nwcorner.y += dy;
X    compound->secorner.x += dx;
X    compound->secorner.y += dy;
X
X    translate_lines(compound->lines, dx, dy);
X    translate_splines(compound->splines, dx, dy);
X    translate_ellipses(compound->ellipses, dx, dy);
X    translate_arcs(compound->arcs, dx, dy);
X    translate_texts(compound->texts, dx, dy);
X    translate_compounds(compound->compounds, dx, dy);
X}
X
Xtranslate_arcs(arcs, dx, dy)
X    F_arc	   *arcs;
X    int		    dx, dy;
X{
X    F_arc	   *a;
X
X    for (a = arcs; a != NULL; a = a->next)
X	translate_arc(a, dx, dy);
X}
X
Xtranslate_compounds(compounds, dx, dy)
X    F_compound	   *compounds;
X    int		    dx, dy;
X{
X    F_compound	   *c;
X
X    for (c = compounds; c != NULL; c = c->next)
X	translate_compound(c, dx, dy);
X}
X
Xtranslate_ellipses(ellipses, dx, dy)
X    F_ellipse	   *ellipses;
X    int		    dx, dy;
X{
X    F_ellipse	   *e;
X
X    for (e = ellipses; e != NULL; e = e->next)
X	translate_ellipse(e, dx, dy);
X}
X
Xtranslate_lines(lines, dx, dy)
X    F_line	   *lines;
X    int		    dx, dy;
X{
X    F_line	   *l;
X
X    for (l = lines; l != NULL; l = l->next)
X	translate_line(l, dx, dy);
X}
X
Xtranslate_splines(splines, dx, dy)
X    F_spline	   *splines;
X    int		    dx, dy;
X{
X    F_spline	   *s;
X
X    for (s = splines; s != NULL; s = s->next)
X	translate_spline(s, dx, dy);
X}
X
Xtranslate_texts(texts, dx, dy)
X    F_text	   *texts;
X    int		    dx, dy;
X{
X    F_text	   *t;
X
X    for (t = texts; t != NULL; t = t->next)
X	translate_text(t, dx, dy);
X}
END_OF_FILE
if test 3628 -ne `wc -c <'u_translate.c'`; then
    echo shar: \"'u_translate.c'\" unpacked with wrong size!
fi
# end of 'u_translate.c'
fi
if test -f 'w_canvas.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'w_canvas.h'\"
else
echo shar: Extracting \"'w_canvas.h'\" \(1231 characters\)
sed "s/^X//" >'w_canvas.h' <<'END_OF_FILE'
X/*
X * FIG : Facility for Interactive Generation of figures
X * Copyright (c) 1985 by Supoj Sutanthavibul
X *
X * "Permission to use, copy, modify, distribute, and sell this software and its
X * documentation for any purpose is hereby granted without fee, provided that
X * the above copyright notice appear in all copies and that both that
X * copyright notice and this permission notice appear in supporting
X * documentation, and that the name of M.I.T. not be used in advertising or
X * publicity pertaining to distribution of the software without specific,
X * written prior permission.  M.I.T. makes no representations about the
X * suitability of this software for any purpose.  It is provided "as is"
X * without express or implied warranty."
X *
X */
X
X/************** DECLARE EXPORTS ***************/
X
Xextern int	(*canvas_kbd_proc) ();
Xextern int	(*canvas_locmove_proc) ();
Xextern int	(*canvas_leftbut_proc) ();
Xextern int	(*canvas_middlebut_proc) ();
Xextern int	(*canvas_middlebut_save) ();
Xextern int	(*canvas_rightbut_proc) ();
Xextern int	(*return_proc) ();
Xextern int	null_proc();
Xextern int	clip_xmin, clip_ymin, clip_xmax, clip_ymax;
Xextern int	clip_width, clip_height;
Xextern int	cur_x, cur_y;
X
Xextern String	local_translations;
END_OF_FILE
if test 1231 -ne `wc -c <'w_canvas.h'`; then
    echo shar: \"'w_canvas.h'\" unpacked with wrong size!
fi
# end of 'w_canvas.h'
fi
echo shar: End of archive 23 \(of 25\).
cp /dev/null ark23isdone
MISSING=""
for I in 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 ; do
    if test ! -f ark${I}isdone ; then
	MISSING="${MISSING} ${I}"
    fi
done
if test "${MISSING}" = "" ; then
    echo You have unpacked all 25 archives.
    rm -f ark[1-9]isdone ark[1-9][0-9]isdone
else
    echo You still need to unpack the following archives:
    echo "        " ${MISSING}
fi
##  End of shell archive.
exit 0
-- 
Molecular Simulations, Inc.             mail: dcmartin@msi.com
796 N. Pastoria Avenue                  uucp: uunet!dcmartin
Sunnyvale, California 94086             at&t: 408/522-9236
