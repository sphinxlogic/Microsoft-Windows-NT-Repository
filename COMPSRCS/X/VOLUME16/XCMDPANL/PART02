Newsgroups: comp.sources.x
Path: uunet!usc!zaphod.mps.ohio-state.edu!mips!msi!dcmartin
From: erlkonig@gnu.ai.mit.edu (Christopher Alex. North-Keys)
Subject: v16i099: xcmdpanel - command panel interface for X, Part02/02
Message-ID: <1992Mar4.162620.18194@msi.com>
Originator: dcmartin@fascet
Sender: dcmartin@msi.com (David C. Martin - Moderator)
Organization: Molecular Simulations, Inc.
References: <csx-16i098-xcmdpanel-1.1@uunet.UU.NET>
Date: Wed, 4 Mar 1992 16:26:20 GMT
Approved: dcmartin@msi.com
Lines: 1003

Submitted-by: erlkonig@gnu.ai.mit.edu (Christopher Alex. North-Keys)
Posting-number: Volume 16, Issue 99
Archive-name: xcmdpanel-1.1/part02

# This is part 02 of a multipart archive
# ============= xcmdpanel.txt ==============
if test -f 'xcmdpanel.txt' -a X"$1" != X"-c"; then
	echo 'x - skipping xcmdpanel.txt (File already exists)'
else
echo 'x - extracting xcmdpanel.txt (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'xcmdpanel.txt' &&
X
X
X
XXCMDPANEL(1)             USER COMMANDS               XCMDPANEL(1)
X
X
X
NAME
X     xcmdpanel - command panel utility for X
X
SYNOPSIS
X     xcmdpanel [-help] [-debug] [-ghost|-noghost] [-boxed|-paned]
X     [_f_i_l_e_n_a_m_e]
X
DESCRIPTION
X     The _x_c_m_d_p_a_n_e_l  program  allows  the  user  to  run  a  user-
X     configured command panel on a workstation display running X.
X     Each xcmdpanel is composed of buttons, each of which may  be
X     configured  to  run  a  shell command using the Bourne shell
X     sh(1).  Buttons without associated commands are merely  used
X     as labels.
X
OPTIONS
X     The various options may appear in any order:
X
X     _f_i_l_e_n_a_m_e
X          A file containing the label/command pairs and  comments
X          used to configure an invocation of xcmdpanel.  Defaults
X          to .xcmdpanel in the current directory or  ~/.xcmdpanel
X          in the home directory if .xcmdpanel is unavailable.
X
X     -help
X          Print a usage message and exit.
X
X     -ghost
X          Allow each button to be activated only once, whereafter
X          that  button  will be _g_h_o_s_t_e_d to indicate that it is no
X          longer valid.
X
X     -noghost
X          Don't use ghosting, instead allow multiple use  of  all
X          command buttons (the default).
X
X     -boxed
X          Use the boxedWidget to manage the buttons.  This causes
X          the buttons to appear in a tray-style arrangement.
X
X     -paned
X          Use  the  panedWidget  to  manage  the   buttons   (the
X          default).   This causes the buttons to appear in a sin-
X          gle column.
X
X     xcmdpanel will also accept the standard X  Toolkit  options;
X     see the xterm(1) manual page, subsection RESOURCES.
X
USAGE
X     The xcmdpanel has been used to ease project  management,  to
X     pop  up  automatically  generated  menus, and to handle menu
X     hierarchies.  It is characterized  by  small,  project-  and
X
X
X
XX Version 11         Last change: Release 5                     1
X
X
X
X
X
X
XXCMDPANEL(1)             USER COMMANDS               XCMDPANEL(1)
X
X
X
X     directory-specific  menus, generally run at need rather than
X     from xinit(1) or the like.
X
X     Output from a particular invocation of xcmdpanel  will  gen-
X     erally  show  up  in the xterm(1) from which it was invoked.
X     Hence the parent terminal is often used as a display  window
X     for ls(1) and make(1) output.
X
X     The configuration file is composed of labels and commands in
X     parentheses, and comments (any not in parentheses).  Nesting
X     of parentheses is observed unless a parenthesis  is  escaped
X     with  a  backslash,  which  itself  may  be  so escaped (see
X     SCRIPTS).
X
X     All text outside of parentheses is ignored.
X
X     Parenthesized strings  are  automatically  paired,  ignoring
X     newlines.  Any _l_a_b_e_l associated with an empty _c_o_m_m_a_n_d string
X     is considered to be a text button rather than a  title  but-
X     ton, and is automatically ghosted.  _L_a_b_e_ls may also be empty
X     strings, and will produce blank text boxes in the  resulting
X     menu.
X
EXAMPLES
X     To use the underlying X Toolkit options to select a particu-
X     lar font:
X
X          xcmdpanel -fn '*sony*24*'
X
X     Another example using explicit resources:
X
X          xcmdpanel -xrm '*font: *sony*24*'
X
X     To get the same effect through an X RESOURCES file,  include
X     the following line in your resources file:
X
X          xcmdpanel*font: *sony*24*
X
SCRIPTS
X     A project menu:
X
X
X              Label   Command
X
X          (Title)         ()
X          ( ( \) ) )      ()     a test label showing parens
X          ()              ()
X          (Clear)         (clear &)
X          (Make)          (make &)
X          (Edit File)     (${EDITOR} `ifc .` &)   InterViews only
X          (Run a.out)     (a.out &)               execute
X          (List)          (echo listing ; ls -Flasg &)
X
X
X
XX Version 11         Last change: Release 5                     2
X
X
X
X
X
X
XXCMDPANEL(1)             USER COMMANDS               XCMDPANEL(1)
X
X
X
X          (Du)            (du . &)
X          (Update Menu)   (xcmdpanel -debug &)
X          (Time Test)     (sleep 5)
X
X     Generating an audio menu on a Sun SPARC in csh(1):
X
X
X          rm .xcmdpanel
X          foreach file ( *.au )
X              echo -n "(`expr $file : '\(.*\).au'`)" >> .xcmdpanel
X              echo    "(cat $file > /dev/audio)"     >> .xcmdpanel
X          end
X          xcmdpanel -boxed &
X
X     Generating an audio menu on a Sun SPARC in sh(1):
X
X
X          for file in *.au
X          do
X              echo -n "(`expr $file : '\(.*\).au'`)"
X              echo    "(cat $file > /dev/audio)"
X          done > .xcmdpanel
X          xcmdpanel -boxed &
X
XX RESOURCES
X     xcmdpanel uses the following X resources:
X
X     paned (class Paned)
X                   Indicates  whether  to  use  the  panedWidget.
X                   Defaults  to  true.  If false, the boxedWidget
X                   is used instead.
X
X     ghost (class Ghost)
X                   Indicates whether buttons are  to  be  ghosted
X                   after selection.  Defaults to false.
X
X     debug (class Debug)
X                   Whether or not to do debugging.   Defaults  to
X                   false.
X
X     xcmdpanel also uses the resources of its subwidgets, includ-
X     ing   the   commandWidget,   panedWidget,   boxWidget,   and
X     textWidget.
X
FILES
X     .xcmdpanel          The usual  configuration  file  (in  the
X                         current   dir)   for  an  invocation  of
X                         xcmdpanel.
X     ~/.xcmdpanel        Default configuration file to be read by
X                         xcmdpanel when no other appropriate file
X                         is available.
X
X
X
X
XX Version 11         Last change: Release 5                     3
X
X
X
X
X
X
XXCMDPANEL(1)             USER COMMANDS               XCMDPANEL(1)
X
X
X
SEE ALSO
X     X(1), xinit(1), sh(1), system(3)
X
BUGS
X     Probably.
X
COPYRIGHT
X     Copyright (c) 1990, Christopher Alexander North-Keys
X
X     Author's  credit  must  be  retained  in  binaries,   manual
X     entries, sources, and derived code.
X
X     This software may be freely copied,  distributed,  compiled,
X     altered,  and  sold,  provided  the  above  restrictions are
X     observed.
X
X     This software is provided "as is", with no warranty, guaran-
X     tee,  support,  maintenance, update schedule, claims to fit-
X     ness for any purpose, or anything else from  the  author  or
X     the  author's  employer(s).   See  the source code for addi-
X     tional copyright and limitation information.
X
AUTHOR
X     Christopher Alexander North-Keys
X     <erlkonig@gnu.ai.mit.edu>
X
X     Director/Instructor of OS and Software Design
X     RDA Computer Training
X
NOTES
X     The xcmdpanel program was produced  under  the  auspices  of
X     Group  Talisman.  I'd also like to thank Mic Kaczmarczik for
X     his aid in documentation.
X     if test 5490 -ne `wc -c <'xcmdpanel.man'`; then
X         echo shar: fi # end of 'xcmdpanel.man'  fi  if  test  -f
X     'xcmdpanel.txt' -a "${1}" != "-c" ; then
X       echo shar: Will not clobber existing file else echo  shar:
X     Extracting sed "s/^X//" >'xcmdpanel.txt' <<'END_OF_FILE'
X
X
X
X     XCMDPANEL(1)                        USER            COMMANDS
X     XCMDPANEL(1)
X
X
X
X     NAME
X          xcmdpanel - command panel utility for X
X
X     SYNOPSIS
X          xcmdpanel [-help] [-debug] [-ghost|-noghost]  [-boxed|-
X     paned]
X
X
X
XX Version 11         Last change: Release 5                     4
X
X
X
X
X
X
XXCMDPANEL(1)             USER COMMANDS               XCMDPANEL(1)
X
X
X
X          [filename]
X
X     DESCRIPTION
X          The xcmdpanel  program  allows  the  user  to   run   a
X     user-
X          configured command panel on a workstation display  run-
X     ning X.
X          Each xcmdpanel is composed of buttons,  each  of  which
X     may  be
X          configured  to  run  a  shell command using the  Bourne
X     shell
X          sh(1).  Buttons without associated commands are  merely
X     used
X          as labels.
X
X     OPTIONS
X          The various options may appear in any order:
X
X          filename
X               A file  containing  the  label/command  pairs  and
X     comments
X               used to  configure  an  invocation  of  xcmdpanel.
X     Defaults
X               to  .xcmdpanel  in  the   current   directory   or
X     ~/.xcmdpanel
X               in the home directory if  .xcmdpanel  is  unavail-
X     able.
X
X          -help
X               Print a usage message and exit.
X
X          -ghost
X               Allow each  button  to  be  activated  only  once,
X     whereafter
X               that  button  will be ghosted to indicate that  it
X     is no
X               longer valid.
X
X          -noghost
X               Don't use ghosting, instead allow multiple use  of
X     all
X               command buttons (the default).
X
X          -boxed
X               Use the boxedWidget to manage the  buttons.   This
X     causes
X               the buttons to appear in a tray-style arrangement.
X
X          -paned
X               Use  the  panedWidget  to  manage   the    buttons
X     (the
X               default).   This causes the buttons to appear in a
X
X
X
XX Version 11         Last change: Release 5                     5
X
X
X
X
X
X
XXCMDPANEL(1)             USER COMMANDS               XCMDPANEL(1)
X
X
X
X     sin-
X               gle column.
X
X          xcmdpanel will also  accept  the  standard  X   Toolkit
X     options;
X          see the xterm(1) manual page, subsection RESOURCES.
X
X     USAGE
X          The xcmdpanel has been used to  ease  project   manage-
X     ment,  to
X          pop  up  automatically  generated  menus, and to handle
X     menu
X          hierarchies.  It is characterized  by  small,  project-
X     and
X
X
X
X     X   Version    11            Last    change:    Release    5
X     1
X
X
X
X
X
X
X     XCMDPANEL(1)                        USER            COMMANDS
X     XCMDPANEL(1)
X
X
X
X          directory-specific  menus, generally run at need rather
X     than
X          from xinit(1) or the like.
X
X          Output from a particular invocation of xcmdpanel   will
X     gen-
X          erally  show  up  in the xterm(1)  from  which  it  was
X     invoked.
X          Hence the parent terminal is often used  as  a  display
X     window
X          for ls(1) and make(1) output.
X
X          The configuration file is composed of labels  and  com-
X     mands in
X          parentheses, and comments  (any  not  in  parentheses).
X     Nesting
X          of parentheses is observed  unless  a  parenthesis   is
X     escaped
X          with  a  backslash,  which  itself  may  be  so escaped
X     (see
X          SCRIPTS).
X
X
X
X
XX Version 11         Last change: Release 5                     6
X
X
X
X
X
X
XXCMDPANEL(1)             USER COMMANDS               XCMDPANEL(1)
X
X
X
X          All text outside of parentheses is ignored.
X
X          Parenthesized  strings   are   automatically    paired,
X     ignoring
X          newlines.  Any label associated with an  empty  command
X     string
X          is considered to be a text button rather than a   title
X     but-
X          ton, and is automatically ghosted.  Labels may also  be
X     empty
X          strings, and will  produce  blank  text  boxes  in  the
X     resulting
X          menu.
X
X     EXAMPLES
X          To use the underlying X Toolkit  options  to  select  a
X     particu-
X          lar font:
X
X               xcmdpanel -fn '*sony*24*'
X
X          Another example using explicit resources:
X
X               xcmdpanel -xrm '*font: *sony*24*'
X
X          To get the same effect through  an  X  RESOURCES  file,
X     include
X          the following line in your resources file:
X
X               xcmdpanel*font: *sony*24*
X
X     SCRIPTS
X          A project menu:
X
X
X                   Label   Command
X
X               (Title)         ()
X               ( ( ) ) )      ()     a test label showing parens
X               ()              ()
X               (Clear)         (clear &)
X               (Make)          (make &)
X               (Edit File)     (${EDITOR} `ifc .` &)   InterViews
X     only
X               (Run a.out)     (a.out &)               execute
X               (List)          (echo listing ; ls -Flasg &)
X
X
X
X     X   Version    11            Last    change:    Release    5
X     2
X
X
X
X
XX Version 11         Last change: Release 5                     7
X
X
X
X
X
X
XXCMDPANEL(1)             USER COMMANDS               XCMDPANEL(1)
X
X
X
X     XCMDPANEL(1)                        USER            COMMANDS
X     XCMDPANEL(1)
X
X
X
X               (Du)            (du . &)
X               (Update Menu)   (xcmdpanel -debug &)
X               (Time Test)     (sleep 5)
X
X          Generating an audio menu on a Sun SPARC in csh(1):
X
X
X               rm .xcmdpanel
X               foreach file ( *.au )
X                   echo  -n  "(`expr   $file   :   ').au'`)"   >>
X     .xcmdpanel
X                   echo     "(cat  $file  >  /dev/audio)"      >>
X     .xcmdpanel
X               end
X               xcmdpanel -boxed &
X
X          Generating an audio menu on a Sun SPARC in sh(1):
X
X
X               for file in *.au
X               do
X                   echo -n "(`expr $file : ').au'`)"
X                   echo    "(cat $file > /dev/audio)"
X               done > .xcmdpanel
X               xcmdpanel -boxed &
X
X     X RESOURCES
X          xcmdpanel uses the following X resources:
X
X          paned (class Paned)
X                        Indicates    whether    to    use     the
X     panedWidget.
X                        Defaults  to  true.  If false,  the  box-
X     edWidget
X                        is used instead.
X
X          ghost (class Ghost)
X                        Indicates whether  buttons  are   to   be
X     ghosted
X                        after selection.  Defaults to false.
X
X          debug (class Debug)
X                        Whether   or   not   to   do   debugging.
X     Defaults  to
X                        false.
X
X          xcmdpanel also uses the resources  of  its  subwidgets,
X
X
X
XX Version 11         Last change: Release 5                     8
X
X
X
X
X
X
XXCMDPANEL(1)             USER COMMANDS               XCMDPANEL(1)
X
X
X
X     includ-
X          ing   the   commandWidget,   panedWidget,    boxWidget,
X     and
X          textWidget.
X
X     FILES
X          .xcmdpanel          The usual  configuration  file  (in
X     the
X                              current   dir)   for   an   invoca-
X     tion  of
X                              xcmdpanel.
X          ~/.xcmdpanel        Default configuration  file  to  be
X     read by
X                              xcmdpanel when no other appropriate
X     file
X                              is available.
X
X
X
X
X     X   Version    11            Last    change:    Release    5
X     3
X
X
X
X
X
X
X     XCMDPANEL(1)                        USER            COMMANDS
X     XCMDPANEL(1)
X
X
X
X     SEE ALSO
X          X(1), xinit(1), sh(1), system(3)
X
X     BUGS
X          Probably.
X
X     COPYRIGHT
X          Copyright (c) 1990, Christopher Alexander North-Keys
X
X          Author's  credit  must   be   retained   in   binaries,
X     manual
X          entries, sources, and derived code.
X
X          This software may be freely copied,  distributed,  com-
X     piled,
X          altered,  and  sold,  provided   the   above   restric-
X     tions are
X          observed.
X
X
X
X
XX Version 11         Last change: Release 5                     9
X
X
X
X
X
X
XXCMDPANEL(1)             USER COMMANDS               XCMDPANEL(1)
X
X
X
X          This software is provided "as is",  with  no  warranty,
X     guaran-
X          tee,  support,  maintenance, update schedule, claims to
X     fit-
X          ness for  any  purpose,  or  anything  else  from   the
X     author  or
X          the  author's  employer(s).   See  the source code  for
X     addi-
X          tional copyright and limitation information.
X
X     AUTHOR
X          Christopher Alexander North-Keys
X          <erlkonig@gnu.ai.mit.edu>
X
X          Director/Instructor of OS and Software Design
X          RDA Computer Training
X
X     NOTES
X          The  xcmdpanel  program  was   produced    under    the
X     auspices  of
X          Group   Talisman.   I'd  also   like   to   thank   Mic
X     Kaczmarczik for
X          his aid in documentation.
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X     X   Version    11            Last    change:    Release    5
X     4
X
X
X
X
X
X
X
X
XX Version 11         Last change: Release 5                    10
X
X
X
SHAR_EOF
chmod 0644 xcmdpanel.txt ||
echo 'restore of xcmdpanel.txt failed'
Wc_c="`wc -c < 'xcmdpanel.txt'`"
test 16364 -eq "$Wc_c" ||
	echo 'xcmdpanel.txt: original size 16364, current size' "$Wc_c"
fi
# ============= Makefile.std ==============
if test -f 'Makefile.std' -a X"$1" != X"-c"; then
	echo 'x - skipping Makefile.std (File already exists)'
else
echo 'x - extracting Makefile.std (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'Makefile.std' &&
# Makefile generated by imake - do not edit!
# $XConsortium: imake.c,v 1.51 89/12/12 12:37:30 jim Exp $
#
# The cpp used on this machine replaces all newlines and multiple tabs and
# spaces in a macro expansion with a single space.  Imake tries to compensate
# for this, but is not always successful.
#
X
###########################################################################
# Makefile generated from "Imake.tmpl" and <Imakefile>
# $XConsortium: Imake.tmpl,v 1.77 89/12/18 17:01:37 jim Exp $
#
# Platform-specific parameters may be set in the appropriate .cf
# configuration files.  Site-wide parameters may be set in the file
# site.def.  Full rebuilds are recommended if any parameters are changed.
#
# If your C preprocessor doesn't define any unique symbols, you'll need
# to set BOOTSTRAPCFLAGS when rebuilding imake (usually when doing
# "make Makefile", "make Makefiles", or "make World").
#
# If you absolutely can't get imake to work, you'll need to set the
# variables at the top of each Makefile as well as the dependencies at the
# bottom (makedepend will do this automatically).
#
X
###########################################################################
# platform-specific configuration parameters - edit sun.cf to change
X
# platform:  $XConsortium: sun.cf,v 1.38 89/12/23 16:10:10 jim Exp $
# operating system:  SunOS 4.0.3
X
###########################################################################
# site-specific configuration parameters - edit site.def to change
X
# site:  $XConsortium: site.def,v 1.21 89/12/06 11:46:50 jim Exp $
X
X            SHELL = /bin/sh
X
X              TOP = .
X      CURRENT_DIR = .
X
X               AR = ar cq
X  BOOTSTRAPCFLAGS =
X               CC = cc
X
X         COMPRESS = compress
X              CPP = /lib/cpp $(STD_CPP_DEFINES)
X    PREPROCESSCMD = cc -E $(STD_CPP_DEFINES)
X          INSTALL = install
X               LD = ld
X             LINT = lint
X      LINTLIBFLAG = -C
X         LINTOPTS = -axz
X               LN = ln -s
X             MAKE = make
X               MV = mv
X               CP = cp
X           RANLIB = ranlib
X  RANLIBINSTFLAGS =
X               RM = rm -f
X     STD_INCLUDES =
X  STD_CPP_DEFINES =
X      STD_DEFINES =
X EXTRA_LOAD_FLAGS =
X  EXTRA_LIBRARIES =
X             TAGS = ctags
X
X    SHAREDCODEDEF = -DSHAREDCODE
X         SHLIBDEF = -DSUNSHLIB
X
X    PROTO_DEFINES =
X
X     INSTPGMFLAGS =
X
X     INSTBINFLAGS = -m 0755
X     INSTUIDFLAGS = -m 4755
X     INSTLIBFLAGS = -m 0664
X     INSTINCFLAGS = -m 0444
X     INSTMANFLAGS = -m 0444
X     INSTDATFLAGS = -m 0444
X    INSTKMEMFLAGS = -m 4755
X
X          DESTDIR =
X
X     TOP_INCLUDES = -I$(INCROOT)
X
X      CDEBUGFLAGS = -O
X        CCOPTIONS =
X      COMPATFLAGS =
X
X      ALLINCLUDES = $(STD_INCLUDES) $(TOP_INCLUDES) $(INCLUDES) $(EXTRA_INCLUDES)
X       ALLDEFINES = $(ALLINCLUDES) $(STD_DEFINES) $(PROTO_DEFINES) $(DEFINES) $(COMPATFLAGS)
X           CFLAGS = $(CDEBUGFLAGS) $(CCOPTIONS) $(ALLDEFINES)
X        LINTFLAGS = $(LINTOPTS) -DLINT $(ALLDEFINES)
X           LDLIBS = $(SYS_LIBRARIES) $(EXTRA_LIBRARIES)
X        LDOPTIONS = $(CDEBUGFLAGS) $(CCOPTIONS)
X   LDCOMBINEFLAGS = -X -r
X
X        MACROFILE = sun.cf
X           RM_CMD = $(RM) *.CKP *.ln *.BAK *.bak *.o core errs ,* *~ *.a .emacs_* tags TAGS make.log MakeOut
X
X    IMAKE_DEFINES =
X
X         IRULESRC = $(CONFIGDIR)
X        IMAKE_CMD = $(IMAKE) -DUseInstalled -I$(IRULESRC) $(IMAKE_DEFINES)
X
X     ICONFIGFILES = $(IRULESRC)/Imake.tmpl $(IRULESRC)/Imake.rules \
X			$(IRULESRC)/Project.tmpl $(IRULESRC)/site.def \
X			$(IRULESRC)/$(MACROFILE) $(EXTRA_ICONFIGFILES)
X
###########################################################################
# X Window System Build Parameters
# $XConsortium: Project.tmpl,v 1.63 89/12/18 16:46:44 jim Exp $
X
###########################################################################
# X Window System make variables; this need to be coordinated with rules
# $XConsortium: Project.tmpl,v 1.63 89/12/18 16:46:44 jim Exp $
X
X          PATHSEP = /
X        USRLIBDIR = $(DESTDIR)/usr/lib
X           BINDIR = $(DESTDIR)/usr/bin/X11
X          INCROOT = $(DESTDIR)/usr/include
X     BUILDINCROOT = $(TOP)
X      BUILDINCDIR = $(BUILDINCROOT)/X11
X      BUILDINCTOP = ..
X           INCDIR = $(INCROOT)/X11
X           ADMDIR = $(DESTDIR)/usr/adm
X           LIBDIR = $(USRLIBDIR)/X11
X        CONFIGDIR = $(LIBDIR)/config
X       LINTLIBDIR = $(USRLIBDIR)/lint
X
X          FONTDIR = $(LIBDIR)/fonts
X         XINITDIR = $(LIBDIR)/xinit
X           XDMDIR = $(LIBDIR)/xdm
X           AWMDIR = $(LIBDIR)/awm
X           TWMDIR = $(LIBDIR)/twm
X           GWMDIR = $(LIBDIR)/gwm
X          MANPATH = $(DESTDIR)/usr/man
X    MANSOURCEPATH = $(MANPATH)/man
X           MANDIR = $(MANSOURCEPATH)n
X        LIBMANDIR = $(MANSOURCEPATH)3
X      XAPPLOADDIR = $(LIBDIR)/app-defaults
X
X        SOXLIBREV = 4.2
X          SOXTREV = 4.0
X         SOXAWREV = 4.0
X        SOOLDXREV = 4.0
X         SOXMUREV = 4.0
X        SOXEXTREV = 4.0
X
X       FONTCFLAGS = -t
X
X     INSTAPPFLAGS = $(INSTDATFLAGS)
X
X            IMAKE = imake
X           DEPEND = makedepend
X              RGB = rgb
X            FONTC = bdftosnf
X        MKFONTDIR = mkfontdir
X        MKDIRHIER = /bin/sh $(BINDIR)/mkdirhier.sh
X
X        CONFIGSRC = $(TOP)/config
X        CLIENTSRC = $(TOP)/clients
X          DEMOSRC = $(TOP)/demos
X           LIBSRC = $(TOP)/lib
X          FONTSRC = $(TOP)/fonts
X       INCLUDESRC = $(TOP)/X11
X        SERVERSRC = $(TOP)/server
X          UTILSRC = $(TOP)/util
X        SCRIPTSRC = $(UTILSRC)/scripts
X       EXAMPLESRC = $(TOP)/examples
X       CONTRIBSRC = $(TOP)/../contrib
X           DOCSRC = $(TOP)/doc
X           RGBSRC = $(TOP)/rgb
X        DEPENDSRC = $(UTILSRC)/makedepend
X         IMAKESRC = $(CONFIGSRC)
X         XAUTHSRC = $(LIBSRC)/Xau
X          XLIBSRC = $(LIBSRC)/X
X           XMUSRC = $(LIBSRC)/Xmu
X       TOOLKITSRC = $(LIBSRC)/Xt
X       AWIDGETSRC = $(LIBSRC)/Xaw
X       OLDXLIBSRC = $(LIBSRC)/oldX
X      XDMCPLIBSRC = $(LIBSRC)/Xdmcp
X      BDFTOSNFSRC = $(FONTSRC)/bdftosnf
X     MKFONTDIRSRC = $(FONTSRC)/mkfontdir
X     EXTENSIONSRC = $(TOP)/extensions
X
X  DEPEXTENSIONLIB = $(USRLIBDIR)/libXext.a
X     EXTENSIONLIB =  -lXext
X
X          DEPXLIB = $(DEPEXTENSIONLIB)
X             XLIB = $(EXTENSIONLIB) -lX11
X
X      DEPXAUTHLIB = $(USRLIBDIR)/libXau.a
X         XAUTHLIB =  -lXau
X
X        DEPXMULIB =
X           XMULIB = -lXmu
X
X       DEPOLDXLIB =
X          OLDXLIB = -loldX
X
X      DEPXTOOLLIB =
X         XTOOLLIB = -lXt
X
X        DEPXAWLIB =
X           XAWLIB = -lXaw
X
X LINTEXTENSIONLIB = $(USRLIBDIR)/llib-lXext.ln
X         LINTXLIB = $(USRLIBDIR)/llib-lX11.ln
X          LINTXMU = $(USRLIBDIR)/llib-lXmu.ln
X        LINTXTOOL = $(USRLIBDIR)/llib-lXt.ln
X          LINTXAW = $(USRLIBDIR)/llib-lXaw.ln
X
X          DEPLIBS = $(DEPXAWLIB) $(DEPXMULIB) $(DEPXTOOLLIB) $(DEPXLIB)
X
X         DEPLIBS1 = $(DEPLIBS)
X         DEPLIBS2 = $(DEPLIBS)
X         DEPLIBS3 = $(DEPLIBS)
X
###########################################################################
# Imake rules for building libraries, programs, scripts, and data files
# rules:  $XConsortium: Imake.rules,v 1.67 89/12/18 17:14:15 jim Exp $
X
###########################################################################
# start of Imakefile
X
LOCAL_LIBRARIES = $(XAWLIB) $(XMULIB) $(XTOOLLIB) $(XLIB)
X        DEPLIBS = $(DEPXAWLIB) $(DEPXMULIB) $(DEPXTOOLLIB) $(DEPXLIB)
X           SRCS = xcmdpanel.c
X
X OBJS = xcmdpanel.o
X SRCS = xcmdpanel.c
X
X PROGRAM = xcmdpanel
X
all:: xcmdpanel
X
xcmdpanel: $(OBJS) $(DEPLIBS)
X	$(RM) $@
X	$(CC) -o $@ $(OBJS) $(LDOPTIONS) $(LOCAL_LIBRARIES) $(LDLIBS) $(EXTRA_LOAD_FLAGS)
X
saber_xcmdpanel:
X	#load $(ALLDEFINES) $(SRCS) $(LOCAL_LIBRARIES) $(SYS_LIBRARIES) $(EXTRA_LIBRARIES)
X
osaber_xcmdpanel:
X	#load $(ALLDEFINES) $(OBJS) $(LOCAL_LIBRARIES) $(SYS_LIBRARIES) $(EXTRA_LIBRARIES)
X
install:: xcmdpanel
X	$(INSTALL) -c $(INSTPGMFLAGS)   xcmdpanel $(BINDIR)
X
install.man:: xcmdpanel.man
X	$(INSTALL) -c $(INSTMANFLAGS) xcmdpanel.man $(MANDIR)/xcmdpanel.n
X
depend::
X	$(DEPEND) -s "# DO NOT DELETE" -- $(ALLDEFINES) -- $(SRCS)
X
lint:
X	$(LINT) $(LINTFLAGS) $(SRCS) $(LINTLIBS)
lint1:
X	$(LINT) $(LINTFLAGS) $(FILE) $(LINTLIBS)
X
clean::
X	$(RM) $(PROGRAM)
X
###########################################################################
# common rules for all Makefiles - do not edit
X
emptyrule::
X
clean::
X	$(RM_CMD) \#*
X
Makefile::
X	-@if [ -f Makefile ]; then \
X	echo "	$(RM) Makefile.bak; $(MV) Makefile Makefile.bak"; \
X	$(RM) Makefile.bak; $(MV) Makefile Makefile.bak; \
X	else exit 0; fi
X	$(IMAKE_CMD) -DTOPDIR=$(TOP) -DCURDIR=$(CURRENT_DIR)
X
tags::
X	$(TAGS) -w *.[ch]
X	$(TAGS) -xw *.[ch] > TAGS
X
saber:
X	#load $(ALLDEFINES) $(SRCS)
X
osaber:
X	#load $(ALLDEFINES) $(OBJS)
X
###########################################################################
# empty rules for directories that do not have SUBDIRS - do not edit
X
install::
X	@echo "install in $(CURRENT_DIR) done"
X
install.man::
X	@echo "install.man in $(CURRENT_DIR) done"
X
Makefiles::
X
includes::
X
###########################################################################
# dependencies generated by makedepend
X
SHAR_EOF
chmod 0644 Makefile.std ||
echo 'restore of Makefile.std failed'
Wc_c="`wc -c < 'Makefile.std'`"
test 8988 -eq "$Wc_c" ||
	echo 'Makefile.std: original size 8988, current size' "$Wc_c"
fi
exit 0
-- 
--
Molecular Simulations, Inc.			mail: dcmartin@msi.com
796 N. Pastoria Avenue				uucp: uunet!dcmartin
Sunnyvale, California 94086			at&t: 408/522-9236
