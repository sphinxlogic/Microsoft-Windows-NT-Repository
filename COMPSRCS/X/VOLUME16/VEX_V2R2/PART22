Path: uunet!zaphod.mps.ohio-state.edu!mips!msi!dcmartin
From: dcc@Athena.MIT.EDU (David Carver)
Newsgroups: comp.sources.x
Subject: v16i073: Video Extension for X (v2r2), Part22/29
Message-ID: <1992Feb6.145910.963@msi.com>
Date: 6 Feb 92 14:59:10 GMT
References: <csx-16i052-vex.v2r2@uunet.UU.NET>
Sender: dcmartin@msi.com (David C. Martin - Moderator)
Organization: Molecular Simulations, Inc.
Lines: 2260
Approved: dcmartin@msi.com
Originator: dcmartin@fascet

Submitted-by: dcc@Athena.MIT.EDU (David Carver)
Posting-number: Volume 16, Issue 73
Archive-name: vex.v2r2/part22

# This is a shell archive.  Remove anything before this line, then feed it
# into a shell via "sh file" or similar.  To overwrite existing files,
# type "sh file -c".
# The tool that generated this appeared in the comp.sources.unix newsgroup;
# send mail to comp-sources-unix@uunet.uu.net if you want that tool.
# If this archive is complete, you will see the following message at the end:
#		"End of archive 22 (of 29)."
# Contents:  extensions/xv/doc/xv-lib-v2.PS.ai
#   extensions/xv/include/Makefile extensions/xv/lib/Makefile
#   extensions/xv/man/man3/XvUngrabPort.3X server/ddx/dec/tx/pmagro.h
#   server/ddx/dec/tx/xfbscrinit.c
# Wrapped by dcmartin@fascet on Thu Feb  6 06:52:49 1992
PATH=/bin:/usr/bin:/usr/ucb ; export PATH
if test -f 'extensions/xv/doc/xv-lib-v2.PS.ai' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'extensions/xv/doc/xv-lib-v2.PS.ai'\"
else
echo shar: Extracting \"'extensions/xv/doc/xv-lib-v2.PS.ai'\" \(9873 characters\)
sed "s/^X//" >'extensions/xv/doc/xv-lib-v2.PS.ai' <<'END_OF_FILE'
X3999(accept)S
X4283(requests)S
X4640(from)S
X4864(Xv)S
X5016(clients.)S
X720 H
X2616 V
X1650(If)S
X1746(the)S
X1898(display)S
X2217(option)S
X2503(is)S
X2600(not)S
X2758(speci\256ed,)S
X3168(Xv)S
X3320(uses)S
X3522(the)S
X3674(display)S
X3993(screen)S
X4277(speci\256ed)S
X4662(by)S
X4792(your)S
X720 H
X2736 V
X1650(DISPLAY)S
X2102(environment)S
X2637(variable.)S
X3043(The)S
X3228(display)S
X3547(option)S
X3833(has)S
X3996(the)S
X4148(format)S
X4444(hostname:number.)S
X720 H
X2856 V
X1650(Using)S
X1919(two)S
X2099(colons)S
X2390(\(::\))S
X2542(instead)S
X2855(of)S
X2968(one)S
X3142(\(:\))S
X3266(indicates)S
X3651(that)S
X3831(DECnet)S
X4183(is)S
X4280(to)S
X4388(be)S
X4512(used)S
X4725(for)S
X4871(transport.)S
X720 H
X3024 V
X10 I
X900(port)S
X10 R
X1650(Speci\256es)S
X2041(the)S
X2193(port)S
X2384(for)S
X2530(which)S
X2804(video)S
X3056(is)S
X3153(to)S
X3261(be)S
X3385(stopped.)S
X720 H
X3192 V
X10 I
X900(draw)S
X10 R
X1650(Speci\256es)S
X2041(the)S
X2193(drawable)S
X2588(associated)S
X3028(with)S
X3236(the)S
X3388(named)S
X3684(port.)S
X720 H
X3360 V
X9 B
X720(Description)S
X720 H
X3480 V
X10 R
X900(XvStopVideo\(3X\))S
X1668(stops)S
X1904(active)S
X2172(video)S
X2424(for)S
X2570(the)S
X2722(speci\256ed)S
X3107(port)S
X3298(and)S
X3472(drawable.)S
X3922(If)S
X4018(the)S
X4170(port)S
X4361(is)S
X4458(not)S
X4616(processing)S
X5073(video,)S
X720 H
X3600 V
X900(or)S
X1013(if)S
X1104(it)S
X1190(is)S
X1287(processing)S
X1744(video)S
X1996(in)S
X2104(a)S
X2178(di)S
X2256 H
X	(f)show 10 -.5 mul h (f)show
X10 R
X2317(erent)S
X2546(drawable,)S
X2966(the)S
X3118(request)S
X3436(is)S
X3533(ignored.)S
X3923(When)S
X4191(video)S
X4443(is)S
X4540(stopped)S
X4881(a)S
X720 H
X3720 V
X900(XvVideoNotify\(3X\))S
X1745(event)S
X1991(with)S
X2199(detail)S
X2451(XvStopped)S
X2931(is)S
X3028(generated)S
X3445(for)S
X3591(the)S
X3743(associated)S
X4183(drawable.)S
X720 H
X3888 V
X9 B
X720(Examples)S
X720 H
X4008 V
X10 C
X1150(Example)S
X1630(between)S
X2110(.EX)S
X2350(and)S
X2590(.EE)S
X2830(will)S
X3130(show)S
X3430(in)S
X3610(monospace)S
X720 H
X4236 V
X9 B
X720(Returned)S
X1127(Values)S
X720 H
X4356 V
X10 B
X900([Success])S
X720 H
X4476 V
X10 R
X1300(Returns)S
X1641(True)S
X1859(if)S
X1950(XvStopVideo\(3X\))S
X2718(completed)S
X3164(successfully.)S
X720 H
X4644 V
X10 B
X900([XvBadExtension])S
X720 H
X4764 V
X10 R
X1300(Returned)S
X1696(if)S
X1787(the)S
X1939(Xv)S
X2091(extension)S
X2504(is)S
X2601(unavailable.)S
X720 H
X4932 V
X10 B
X900([XvBadAlloc])S
X720 H
X5052 V
X10 R
X1300(Returned)S
X1696(if)S
X1787(XvStopVideo\(3X\))S
X2555(failed)S
X2812(to)S
X2920(allocate)S
X3260(memory)S
X3623(to)S
X3731(process)S
X4060(the)S
X4212(request.)S
X720 H
X5220 V
X9 B
X720(Diagnostics)S
X720 H
X5340 V
X10 B
X900([XvBadPort])S
X720 H
X5460 V
X10 R
X1300(Generated)S
X1739(if)S
X1830(the)S
X1982(requested)S
X2394(port)S
X2585(does)S
X2798(not)S
X2956(exist.)S
X720 H
X5628 V
X10 B
X900([BadDrawable])S
X720 H
X5748 V
X10 R
X1300(Generated)S
X1739(if)S
X1830(the)S
X1982(requested)S
X2394(drawable)S
X2789(does)S
X3002(not)S
X3160(exist.)S
X720 H
X5916 V
X9 B
X720(See)S
X892(Also)S
X720 H
X6036 V
X10 R
X900(XvGetVideo\(3X\),)S
X1653(XvPutVideo\(3X\),)S
X2396(XvVideoNotifyEvent\(3X\))S
X720 H
X7680 V
X5300(27)S
X7920 V
XEP
X%%Page: 28 28
XBP
X/slant 0 def
X/height 1.000000 def
X10 R
X10 R
X72 H
X120 V
X72(|--)S
X720 H
X600 V
X12 HB
X720(XvUngrabPort)S
X1546(\()S
X1606(3X)S
X1773(\))S
X720 H
X1080 V
X9 B
X720(Name)S
X720 H
X1200 V
X10 R
X900(XvUngrabPort)S
X1518(\261)S
X1598(release)S
X1904(port)S
X2095(grabbed)S
X2446(for)S
X2592(video)S
X2844(operation)S
X720 H
X1368 V
X9 B
X720(Syntax)S
X720 H
X1488 V
X10 B
X900(#include)S
X1292(<X11/extensions/Xvlib.h>)S
X720 H
X1728 V
X900(XvUngrabPort\()S
X10 I
X1571(dpy,)S
X1770(port,)S
X1992(time)S
X10 R
X2164(\))S
X720 H
X1968 V
X10 B
X900(Display)S
X10 I
X1253(*dpy)S
X10 R
X1447(;)S
X720 H
X2088 V
X10 B
X900(XvPortID)S
X10 I
X1351(port)S
X10 R
X1518(;)S
X720 H
X2208 V
X10 B
X900(Time)S
X10 I
X1152(time)S
X10 R
X1324(;)S
X720 H
X2376 V
X9 B
X720(Arguments)S
X720 H
X2496 V
X10 I
X900(dpy)S
X10 R
X1650(Speci\256es)S
X2041(the)S
X2193(display)S
X2512(screen)S
X2796(on)S
X2926(which)S
X3200(the)S
X3352(Xv)S
X3504(Server)S
X3794(is)S
X3891(to)S
X3999(accept)S
X4283(requests)S
X4640(from)S
X4864(Xv)S
X5016(clients.)S
X720 H
X2616 V
X1650(If)S
X1746(the)S
X1898(display)S
X2217(option)S
X2503(is)S
X2600(not)S
X2758(speci\256ed,)S
X3168(Xv)S
X3320(uses)S
X3522(the)S
X3674(display)S
X3993(screen)S
X4277(speci\256ed)S
X4662(by)S
X4792(your)S
X720 H
X2736 V
X1650(DISPLAY)S
X2102(environment)S
X2637(variable.)S
X3043(The)S
X3228(display)S
X3547(option)S
X3833(has)S
X3996(the)S
X4148(format)S
X4444(hostname:number.)S
X720 H
X2856 V
X1650(Using)S
X1919(two)S
X2099(colons)S
X2390(\(::\))S
X2542(instead)S
X2855(of)S
X2968(one)S
X3142(\(:\))S
X3266(indicates)S
X3651(that)S
X3831(DECnet)S
X4183(is)S
X4280(to)S
X4388(be)S
X4512(used)S
X4725(for)S
X4871(transport.)S
X720 H
X3024 V
X10 I
X900(port)S
X10 R
X1650(Speci\256es)S
X2041(the)S
X2193(port)S
X2384(to)S
X2492(be)S
X2616(released.)S
X3027(If)S
X3123(the)S
X3275(port)S
X3466(had)S
X3640(not)S
X3798(been)S
X4016(previously)S
X4468(grabbed,)S
X4844(the)S
X4996(request)S
X5314(is)S
X720 H
X3144 V
X1650(ignored.)S
X720 H
X3312 V
X10 I
X900(time)S
X10 R
X1650(Speci\256es)S
X2041(the)S
X2193(request)S
X2511(timestamp.)S
X720 H
X3480 V
X9 B
X720(Description)S
X720 H
X3600 V
X10 R
X900(XvUngrabPort\(3X\))S
X1706(releases)S
X2051(a)S
X2125(grabbed)S
X2476(port.)S
X2722(If)S
X10 I
X2818(time)S
X10 R
X3020(speci\256es)S
X3394(a)S
X3468(time)S
X3676(before)S
X3960(the)S
X4112(last)S
X4281(XvGrabPort\(3X\))S
X4987(was)S
X5172(exe-)S
X720 H
X3720 V
X900(cuted,)S
X1171(the)S
X1323(request)S
X1641(is)S
X1738(ignored.)S
X720 H
X3888 V
X9 B
X720(Examples)S
X720 H
X4008 V
X10 C
X1150(Example)S
X1630(between)S
X2110(.EX)S
X2350(and)S
X2590(.EE)S
X2830(will)S
X3130(show)S
X3430(in)S
X3610(monospace)S
X720 H
X4236 V
X9 B
X720(Returned)S
X1127(Values)S
X720 H
X4356 V
X10 B
X900([Success])S
X720 H
X4476 V
X10 R
X1300(Returns)S
X1641(True)S
X1859(if)S
X1950(XvUngrabPort\(3X\))S
X2756(completed)S
X3202(successfully.)S
X720 H
X4644 V
X10 B
X900([XvBadExtension])S
X720 H
X4764 V
X10 R
X1300(Returned)S
X1696(if)S
X1787(the)S
X1939(Xv)S
X2091(extension)S
X2504(is)S
X2601(unavailable.)S
X720 H
X4932 V
X10 B
X900([XvBadAlloc])S
X720 H
X5052 V
X10 R
X1300(Returned)S
X1696(if)S
X1787(XvUngrabPort\(3X\))S
X2593(failed)S
X2850(to)S
X2958(allocate)S
X3298(memory)S
X3661(to)S
X3769(process)S
X4098(the)S
X4250(request.)S
X720 H
X5220 V
X9 B
X720(Diagnostics)S
X720 H
X5340 V
X10 B
X900([XvBadPort])S
X720 H
X5460 V
X10 R
X1300(Generated)S
X1739(if)S
X1830(the)S
X1982(requested)S
X2394(port)S
X2585(does)S
X2798(not)S
X2956(exist.)S
X720 H
X5628 V
X9 B
X720(See)S
X892(Also)S
X720 H
X5748 V
X10 R
X900(XvGrabPort\(3X\))S
X720 H
X7680 V
X720(28)S
X7920 V
XEP
X%%Page: 29 29
XBP
X/slant 0 def
X/height 1.000000 def
X10 R
X10 R
X72 H
X120 V
X72(|--)S
X720 H
X600 V
X12 HB
X4299(XvVideoNotify)S
X5133(\()S
X5193(3X)S
X5360(\))S
X720 H
X1080 V
X9 B
X720(Name)S
X720 H
X1200 V
X10 R
X900(XvVideoNotify)S
X1557(\261)S
X1637(event)S
X1883(generated)S
X2300(for)S
X2446(video)S
X2698(processing)S
X720 H
X1368 V
X9 B
X720(Syntax)S
X720 H
X1488 V
X10 B
X900(#include)S
X1292(<X11/extensions/Xvlib.h>)S
X720 H
X1908 V
X10 C
X1450(typedef)S
X1930(union)S
X2290({)S
X720 H
X2028 V
X1570(int)S
X1810(type;)S
X720 H
X2148 V
X1570(XvVideoNotifyEvent)S
X2710(xvvideo;)S
X720 H
X2268 V
X1570(XvPortNotifyEvent)S
X2650(xvport;)S
X720 H
X2388 V
X1450(})S
X1570(XvEvent;)S
X720 H
X2628 V
X1450(typedef)S
X1930(struct)S
X2350({)S
X720 H
X2748 V
X1570(int)S
X1810(type;)S
X720 H
X2868 V
X1570(unsigned)S
X2110(long)S
X2410(serial;)S
X720 H
X2988 V
X1570(Bool)S
X1870(send_event;)S
X720 H
X3108 V
X1570(Display)S
X2050(*display;)S
X720 H
X3228 V
X1570(Drawable)S
X2110(drawable;)S
X720 H
X3348 V
X1570(unsigned)S
X2110(long)S
X2410(reason;)S
X720 H
X3468 V
X1570(XvPortID)S
X2110(port_id;)S
X720 H
X3588 V
X1570(Time)S
X1870(time;)S
X720 H
X3708 V
X1450(})S
X1570(XvVideoNotifyEvent;)S
X720 H
X4056 V
X10 I
X900(type)S
X10 R
X1300(Speci\256es)S
X1691(the)S
X1843(type)S
X2045(of)S
X2158(event:)S
X2432(XvVideoNotify\(3X\).)S
X720 H
X4224 V
X10 I
X900(serial)S
X10 R
X1300(Number)S
X1657(of)S
X1770(the)S
X1922(last)S
X2091(request)S
X2409(processed)S
X2832(by)S
X2962(the)S
X3114(server.)S
X720 H
X4392 V
X10 I
X900(send_event)S
X720 H
X4512 V
X10 R
X1300(True)S
X1518(if)S
X1609(the)S
X1761(event)S
X2007(was)S
X2192(generated)S
X2609(by)S
X2739(a)S
X2813(SendEvent)S
X3276(request.)S
X720 H
X4680 V
X10 I
X900(display)S
X10 R
X1300(A)S
X1402(pointer)S
X1715(to)S
X1823(the)S
X1975(display)S
X2294(the)S
X2446(event)S
X2692(was)S
X2877(read)S
X3078(from.)S
X720 H
X4848 V
X10 I
X900(drawable)S
X720 H
X4968 V
X10 R
X1300(The)S
X1485(drawable)S
X1880(for)S
X2026(which)S
X2300(the)S
X2452(event)S
X2698(was)S
X2883(generated.)S
X720 H
X5136 V
X10 I
X900(reason)S
X10 R
X1300(The)S
X1485(reason)S
X1775(the)S
X1927(event)S
X2173(was)S
X2358(generated:)S
X10 B
X2803(XvStarted)S
X10 R
X3241(,)S
X10 B
X3296(XvStopped)S
X10 R
X3769(,)S
X10 B
X3824(XvStill)S
X10 R
X4119(,)S
X10 B
X4174(XvPreempted)S
X10 R
X4761(,)S
X10 B
X4816(XvBusy)S
X10 R
X5150(,)S
X720 H
X5256 V
X10 B
X1300(XvHardError)S
X10 R
X1899(.)S
X720 H
X5424 V
X10 I
X900(port_id)S
X10 R
X1300(The)S
X1485(port)S
X1676(processing)S
X2133(the)S
X2285(video)S
X2537(for)S
X2683(which)S
X2957(the)S
X3109(event)S
X3355(was)S
X3540(generated.)S
X720 H
X5592 V
X9 B
X720(Description)S
X720 H
X5712 V
X10 R
X900(XvVideoNotify\(3X\))S
X1745(events)S
X2030(are)S
X2181(generated)S
X2598(when)S
X2844(video)S
X3096(is)S
X3193(started,)S
X3514(stopped,)S
X3880(displayed)S
X4293(as)S
X4406(a)S
X4480(still)S
X4661(image,)S
X4960(preempted)S
X720 H
X5832 V
X900(by)S
X1030(another)S
X1359(video)S
X1611(request,)S
X1954(ignored)S
X2289(because)S
X2634(the)S
X2786(port)S
X2977(is)S
X3074(grabbed)S
X3425(by)S
X3555(another)S
X3884(client,)S
X4161(or)S
X4274(interruped)S
X4714(because)S
X5059(of)S
X5172(a)S
X720 H
X5952 V
X900(hard)S
X1107(transmission)S
X1643(or)S
X1756(reception)S
X2157(error.)S
X720 H
X6120 V
X9 B
X720(Examples)S
X720 H
X6240 V
X10 C
X1150(Example)S
X1630(between)S
X2110(.EX)S
X2350(and)S
X2590(.EE)S
X2830(will)S
X3130(show)S
X3430(in)S
X3610(monospace)S
X720 H
X6468 V
X9 B
X720(See)S
X892(Also)S
X720 H
X6588 V
X10 R
X900(XvPutVideo\(3X\),)S
X1643(XvPutStill\(3X\),)S
X2310(XvGetVideo\(3X\),)S
X3063(XvGetStill\(3X\),)S
X3740(XvStopVideo\(3X\),)S
X720 H
X6708 V
X900(XvSelectVideoNotify\(3X\))S
X720 H
X7680 V
X5300(29)S
X72 H
X8030 V
X72(|--)S
X8030 V
XEP
X%%Trailer
X%%DocumentFonts: Times-Roman Times-Bold Times-Italic Helvetica Helvetica-Bold Helvetica-Bold Courier Troff
X%%Pages: 29
END_OF_FILE
if test 9873 -ne `wc -c <'extensions/xv/doc/xv-lib-v2.PS.ai'`; then
    echo shar: \"'extensions/xv/doc/xv-lib-v2.PS.ai'\" unpacked with wrong size!
fi
# end of 'extensions/xv/doc/xv-lib-v2.PS.ai'
fi
if test -f 'extensions/xv/include/Makefile' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'extensions/xv/include/Makefile'\"
else
echo shar: Extracting \"'extensions/xv/include/Makefile'\" \(9927 characters\)
sed "s/^X//" >'extensions/xv/include/Makefile' <<'END_OF_FILE'
X# Makefile generated by imake - do not edit!
X# $XConsortium: imake.c,v 1.65 91/07/25 17:50:17 rws Exp $
X
X# -------------------------------------------------------------------------
X# Makefile generated from "Imake.tmpl" and </tmp/IIf.a08526>
X# $XConsortium: Imake.tmpl,v 1.139 91/09/16 08:52:48 rws Exp $
X#
X# Platform-specific parameters may be set in the appropriate <vendor>.cf
X# configuration files.  Site-specific parameters should be set in the file
X# site.def.  Full rebuilds are recommended if any parameters are changed.
X#
X# If your C preprocessor does not define any unique symbols, you will need
X# to set BOOTSTRAPCFLAGS when rebuilding imake (usually when doing
X# "make World" the first time).
X#
X
X# -------------------------------------------------------------------------
X# site-specific configuration parameters that need to come before
X# the platform-specific parameters - edit site.def to change
X
X# site:  $XConsortium: site.def,v 1.2 91/07/30 20:26:44 rws Exp $
X
X# -------------------------------------------------------------------------
X# platform-specific configuration parameters - edit ultrix.cf to change
X
X# platform:  $XConsortium: ultrix.cf,v 1.45 91/07/30 12:12:11 rws Exp $
X
X# operating system:             Ultrix-32 4.2
X
X# -------------------------------------------------------------------------
X# site-specific configuration parameters that go after
X# the platform-specific parameters - edit site.def to change
X
X# site:  $XConsortium: site.def,v 1.2 91/07/30 20:26:44 rws Exp $
X
X            SHELL = 	/bin/sh
X
X              TOP = ../../../.
X      CURRENT_DIR = ./extensions/xv/include
X
X               AR = ar clq
X  BOOTSTRAPCFLAGS =
X               CC = cc
X               AS = as
X
X         COMPRESS = compress
X              CPP = /lib/cpp $(STD_CPP_DEFINES)
X    PREPROCESSCMD = cc -E $(STD_CPP_DEFINES)
X          INSTALL = install
X               LD = ld
X             LINT = lint
X      LINTLIBFLAG = -o
X         LINTOPTS = -ax
X               LN = ln -s
X             MAKE = make
X               MV = mv
X               CP = cp
X
X           RANLIB = ranlib
X  RANLIBINSTFLAGS =
X
X               RM = rm -f
X            TROFF = psroff
X         MSMACROS = -ms
X              TBL = tbl
X              EQN = eqn
X     STD_INCLUDES =
X  STD_CPP_DEFINES =
X      STD_DEFINES =
X EXTRA_LOAD_FLAGS =
X  EXTRA_LIBRARIES =
X             TAGS = ctags
X
X    PROTO_DEFINES = -DFUNCPROTO
X
X     INSTPGMFLAGS =
X
X     INSTBINFLAGS = -m 0755
X     INSTUIDFLAGS = -m 4755
X     INSTLIBFLAGS = -m 0644
X     INSTINCFLAGS = -m 0444
X     INSTMANFLAGS = -m 0444
X     INSTDATFLAGS = -m 0444
X    INSTKMEMFLAGS = -m 4755
X
X     TOP_INCLUDES = -I$(TOP)
X
X      CDEBUGFLAGS = -O
X        CCOPTIONS =
X
X      ALLINCLUDES = $(INCLUDES) $(EXTRA_INCLUDES) $(TOP_INCLUDES) $(STD_INCLUDES)
X       ALLDEFINES = $(ALLINCLUDES) $(STD_DEFINES) $(EXTRA_DEFINES) $(PROTO_DEFINES) $(DEFINES)
X           CFLAGS = $(CDEBUGFLAGS) $(CCOPTIONS) $(ALLDEFINES)
X        LINTFLAGS = $(LINTOPTS) -DLINT $(ALLDEFINES)
X
X           LDLIBS = $(SYS_LIBRARIES) $(EXTRA_LIBRARIES)
X
X        LDOPTIONS = $(CDEBUGFLAGS) $(CCOPTIONS) $(LOCAL_LDFLAGS)
X
X   LDCOMBINEFLAGS = -X -r
X      DEPENDFLAGS =
X
X        MACROFILE = ultrix.cf
X           RM_CMD = $(RM) *.CKP *.ln *.BAK *.bak *.o core errs ,* *~ *.a .emacs_* tags TAGS make.log MakeOut
X
X    IMAKE_DEFINES =
X
X         IRULESRC = $(CONFIGSRC)
X        IMAKE_CMD = $(NEWTOP)$(IMAKE) -I$(NEWTOP)$(IRULESRC) $(IMAKE_DEFINES)
X
X     ICONFIGFILES = $(IRULESRC)/Imake.tmpl $(IRULESRC)/Imake.rules \
X			$(IRULESRC)/Project.tmpl $(IRULESRC)/site.def \
X			$(IRULESRC)/$(MACROFILE) $(EXTRA_ICONFIGFILES)
X
X# -------------------------------------------------------------------------
X# X Window System Build Parameters
X# $XConsortium: Project.tmpl,v 1.138 91/09/10 09:02:12 rws Exp $
X
X# -------------------------------------------------------------------------
X# X Window System make variables; this need to be coordinated with rules
X
X          PATHSEP = /
X        USRLIBDIR = /usr/lib
X           BINDIR = /usr/bin/X11
X          INCROOT = /usr/include
X     BUILDINCROOT = $(TOP)
X      BUILDINCDIR = $(BUILDINCROOT)/X11
X      BUILDINCTOP = ..
X           INCDIR = $(INCROOT)/X11
X           ADMDIR = /usr/adm
X           LIBDIR = $(USRLIBDIR)/X11
X        CONFIGDIR = $(LIBDIR)/config
X       LINTLIBDIR = $(USRLIBDIR)/lint
X
X          FONTDIR = $(LIBDIR)/fonts
X         XINITDIR = $(LIBDIR)/xinit
X           XDMDIR = $(LIBDIR)/xdm
X           TWMDIR = $(LIBDIR)/twm
X          MANPATH = /usr/man
X    MANSOURCEPATH = $(MANPATH)/man
X        MANSUFFIX = n
X     LIBMANSUFFIX = 3
X           MANDIR = $(MANSOURCEPATH)$(MANSUFFIX)
X        LIBMANDIR = $(MANSOURCEPATH)$(LIBMANSUFFIX)
X           NLSDIR = $(LIBDIR)/nls
X        PEXAPIDIR = $(LIBDIR)/PEX
X      XAPPLOADDIR = $(LIBDIR)/app-defaults
X       FONTCFLAGS = -t
X
X     INSTAPPFLAGS = $(INSTDATFLAGS)
X
X            IMAKE = $(IMAKESRC)/imake
X           DEPEND = $(DEPENDSRC)/makedepend
X              RGB = $(RGBSRC)/rgb
X
X            FONTC = $(BDFTOPCFSRC)/bdftopcf
X
X        MKFONTDIR = $(MKFONTDIRSRC)/mkfontdir
X        MKDIRHIER = 	/bin/sh $(SCRIPTSRC)/mkdirhier.sh
X
X        CONFIGSRC = $(TOP)/config
X       DOCUTILSRC = $(TOP)/doc/util
X        CLIENTSRC = $(TOP)/clients
X          DEMOSRC = $(TOP)/demos
X           LIBSRC = $(TOP)/lib
X          FONTSRC = $(TOP)/fonts
X       INCLUDESRC = $(TOP)/X11
X        SERVERSRC = $(TOP)/server
X          UTILSRC = $(TOP)/util
X        SCRIPTSRC = $(UTILSRC)/scripts
X       EXAMPLESRC = $(TOP)/examples
X       CONTRIBSRC = $(TOP)/../contrib
X           DOCSRC = $(TOP)/doc
X           RGBSRC = $(TOP)/rgb
X        DEPENDSRC = $(UTILSRC)/makedepend
X         IMAKESRC = $(CONFIGSRC)
X         XAUTHSRC = $(LIBSRC)/Xau
X          XLIBSRC = $(LIBSRC)/X
X           XMUSRC = $(LIBSRC)/Xmu
X       TOOLKITSRC = $(LIBSRC)/Xt
X       AWIDGETSRC = $(LIBSRC)/Xaw
X       OLDXLIBSRC = $(LIBSRC)/oldX
X      XDMCPLIBSRC = $(LIBSRC)/Xdmcp
X      BDFTOSNFSRC = $(FONTSRC)/bdftosnf
X      BDFTOSNFSRC = $(FONTSRC)/clients/bdftosnf
X      BDFTOPCFSRC = $(FONTSRC)/clients/bdftopcf
X     MKFONTDIRSRC = $(FONTSRC)/clients/mkfontdir
X         FSLIBSRC = $(FONTSRC)/lib/fs
X    FONTSERVERSRC = $(FONTSRC)/server
X     EXTENSIONSRC = $(TOP)/extensions
X         XILIBSRC = $(EXTENSIONSRC)/lib/xinput
X      PHIGSLIBSRC = $(EXTENSIONSRC)/lib/PEX
X
X  DEPEXTENSIONLIB =  $(EXTENSIONSRC)/lib/libXext.a
X     EXTENSIONLIB = 			   $(DEPEXTENSIONLIB)
X
X          DEPXLIB = $(DEPEXTENSIONLIB)  $(XLIBSRC)/libX11.a
X             XLIB = $(EXTENSIONLIB) 			  $(XLIBSRC)/libX11.a
X
X      DEPXAUTHLIB =  $(XAUTHSRC)/libXau.a
X         XAUTHLIB = 			  $(DEPXAUTHLIB)
X      DEPXDMCPLIB =  $(XDMCPLIBSRC)/libXdmcp.a
X         XDMCPLIB = 			  $(DEPXDMCPLIB)
X
X        DEPXMULIB =  $(XMUSRC)/libXmu.a
X           XMULIB = 			  $(DEPXMULIB)
X
X       DEPOLDXLIB =  $(OLDXLIBSRC)/liboldX.a
X          OLDXLIB = 			  $(DEPOLDXLIB)
X
X      DEPXTOOLLIB =  $(TOOLKITSRC)/libXt.a
X         XTOOLLIB = 			  $(DEPXTOOLLIB)
X
X        DEPXAWLIB =  $(AWIDGETSRC)/libXaw.a
X           XAWLIB = 			  $(DEPXAWLIB)
X
X        DEPXILIB =  $(XILIBSRC)/libXi.a
X           XILIB = 			  $(DEPXILIB)
X
X        DEPPHIGSLIB =  $(PHIGSLIBSRC)/libphigs.a
X           PHIGSLIB = 			  $(DEPPHIGSLIB)
X
X       DEPXBSDLIB =  $(LIBSRC)/Berk/libXbsd.a
X          XBSDLIB = 			  $(DEPXBSDLIB)
X
X LINTEXTENSIONLIB =  $(EXTENSIONSRC)/lib/llib-lXext.ln
X         LINTXLIB =  $(XLIBSRC)/llib-lX11.ln
X          LINTXMU =  $(XMUSRC)/llib-lXmu.ln
X        LINTXTOOL =  $(TOOLKITSRC)/llib-lXt.ln
X          LINTXAW =  $(AWIDGETSRC)/llib-lXaw.ln
X           LINTXI =  $(XILIBSRC)/llib-lXi.ln
X        LINTPHIGS =  $(PHIGSLIBSRC)/llib-lphigs.ln
X
X          DEPLIBS = $(LOCAL_LIBRARIES)
X
X         DEPLIBS1 = $(DEPLIBS)
X         DEPLIBS2 = $(DEPLIBS)
X         DEPLIBS3 = $(DEPLIBS)
X
X# -------------------------------------------------------------------------
X# Imake rules for building libraries, programs, scripts, and data files
X# rules:  $XConsortium: Imake.rules,v 1.123 91/09/16 20:12:16 rws Exp $
X
X# -------------------------------------------------------------------------
X# start of Imakefile
X
X# $XConsortium: Imakefile,v 1.22 91/03/24 18:10:05 rws Exp $
X
XHEADERS = Xv.h Xvlib.h
X
XINSTALLFLAGS = $(INSTINCFLAGS)
X
Xall:: includes
X
Xincludes::
X	 @if [ -d $(BUILDINCDIR)/extensions ]; then set +x; \
X		else (set -x; $(MKDIRHIER) $(BUILDINCDIR)/extensions); fi
X	@(set -x; cd $(BUILDINCDIR)/extensions; for i in $(HEADERS); do \
X		$(RM) $$i; \
X		$(LN) $(BUILDINCTOP)/../$(CURRENT_DIR)/$$i .; \
X	done)
X
Xinstall:: $(HEADERS)
X	 @if [ -d $(DESTDIR)$(INCDIR)/extensions ]; then set +x; \
X		else (set -x; $(MKDIRHIER) $(DESTDIR)$(INCDIR)/extensions); fi
X	@case '${MFLAGS}' in *[i]*) set +e;; esac; \
X	for i in $(HEADERS); do \
X		(set -x; $(INSTALL) -c $(INSTALLFLAGS) $$i $(DESTDIR)$(INCDIR)/extensions); \
X	done
X
Xdepend::
X
X# -------------------------------------------------------------------------
X# common rules for all Makefiles - do not edit
X
Xemptyrule::
X
Xclean::
X	$(RM_CMD) "#"*
X
XMakefile:: $(IMAKE)
X
X$(IMAKE):
X	@(cd $(IMAKESRC); if [ -f Makefile ]; then \
X	echo "checking $@ in $(IMAKESRC) first..."; $(MAKE) all; else \
X	echo "bootstrapping $@ from Makefile.ini in $(IMAKESRC) first..."; \
X	$(MAKE) -f Makefile.ini BOOTSTRAPCFLAGS="$(BOOTSTRAPCFLAGS)"; fi; \
X	echo "okay, continuing in $(CURRENT_DIR)")
X
XMakefile::
X	-@if [ -f Makefile ]; then set -x; \
X		$(RM) Makefile.bak; $(MV) Makefile Makefile.bak; \
X	else exit 0; fi
X	$(IMAKE_CMD) -DTOPDIR=$(TOP) -DCURDIR=$(CURRENT_DIR)
X
Xtags::
X	$(TAGS) -w *.[ch]
X	$(TAGS) -xw *.[ch] > TAGS
X
Xsaber:
X	# load $(ALLDEFINES) $(SRCS)
X
Xosaber:
X	# load $(ALLDEFINES) $(OBJS)
X
X# -------------------------------------------------------------------------
X# empty rules for directories that do not have SUBDIRS - do not edit
X
Xinstall::
X	@echo "install in $(CURRENT_DIR) done"
X
Xinstall.man::
X	@echo "install.man in $(CURRENT_DIR) done"
X
XMakefiles::
X
Xincludes::
X
X# -------------------------------------------------------------------------
X# dependencies generated by makedepend
X
END_OF_FILE
if test 9927 -ne `wc -c <'extensions/xv/include/Makefile'`; then
    echo shar: \"'extensions/xv/include/Makefile'\" unpacked with wrong size!
fi
# end of 'extensions/xv/include/Makefile'
fi
if test -f 'extensions/xv/lib/Makefile' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'extensions/xv/lib/Makefile'\"
else
echo shar: Extracting \"'extensions/xv/lib/Makefile'\" \(10117 characters\)
sed "s/^X//" >'extensions/xv/lib/Makefile' <<'END_OF_FILE'
X# Makefile generated by imake - do not edit!
X# $XConsortium: imake.c,v 1.51 89/12/12 12:37:30 jim Exp $
X
X###########################################################################
X# Makefile generated from "Imake.tmpl" and <Imakefile>
X# $XConsortium: Imake.tmpl,v 1.77 89/12/18 17:01:37 jim Exp $
X#
X# Platform-specific parameters may be set in the appropriate .cf
X# configuration files.  Site-wide parameters may be set in the file
X# site.def.  Full rebuilds are recommended if any parameters are changed.
X#
X# If your C preprocessor doesn't define any unique symbols, you'll need
X# to set BOOTSTRAPCFLAGS when rebuilding imake (usually when doing
X# "make Makefile", "make Makefiles", or "make World").
X#
X# If you absolutely can't get imake to work, you'll need to set the
X# variables at the top of each Makefile as well as the dependencies at the
X# bottom (makedepend will do this automatically).
X#
X
X###########################################################################
X# platform-specific configuration parameters - edit ultrix.cf to change
X
X# platform:  $XConsortium: ultrix.cf,v 1.20 89/12/22 15:56:14 rws Exp $
X# operating system:             Ultrix-32 4.0
X
X###########################################################################
X# site-specific configuration parameters - edit site.def to change
X
X# site:  $XConsortium: site.def,v 1.21 89/12/06 11:46:50 jim Exp $
X
XFONTC=	$(FONTSRC)/tools/bdftopcf/bdftopcf
X
X            SHELL = 	/bin/sh
X
X              TOP = ../../../.
X      CURRENT_DIR = ./extensions/xv/lib
X
X               AR = ar cq
X  BOOTSTRAPCFLAGS =
X               CC = cc
X
X         COMPRESS = compress
X              CPP = /lib/cpp $(STD_CPP_DEFINES)
X    PREPROCESSCMD = cc -E $(STD_CPP_DEFINES)
X          INSTALL = install
X               LD = ld
X             LINT = lint
X      LINTLIBFLAG = -C
X         LINTOPTS = -axz
X               LN = ln -s
X             MAKE = make
X               MV = mv
X               CP = cp
X           RANLIB = ranlib
X  RANLIBINSTFLAGS =
X               RM = rm -f
X     STD_INCLUDES =
X  STD_CPP_DEFINES =
X      STD_DEFINES = -DUNIX
X EXTRA_LOAD_FLAGS =
X  EXTRA_LIBRARIES = -ldnet
X             TAGS = ctags
X
X    PROTO_DEFINES =
X
X     INSTPGMFLAGS =
X
X     INSTBINFLAGS = -m 0755
X     INSTUIDFLAGS = -m 4755
X     INSTLIBFLAGS = -m 0664
X     INSTINCFLAGS = -m 0444
X     INSTMANFLAGS = -m 0444
X     INSTDATFLAGS = -m 0444
X    INSTKMEMFLAGS = -m 4755
X
X          DESTDIR =
X
X     TOP_INCLUDES = -I$(TOP)
X
X      CDEBUGFLAGS = -O
X        CCOPTIONS = -Wf,-XNh2000 -Olimit 2000
X      COMPATFLAGS =
X
X      ALLINCLUDES = $(STD_INCLUDES) $(TOP_INCLUDES) $(INCLUDES) $(EXTRA_INCLUDES)
X       ALLDEFINES = $(ALLINCLUDES) $(STD_DEFINES) $(PROTO_DEFINES) $(DEFINES) $(COMPATFLAGS)
X           CFLAGS = $(CDEBUGFLAGS) $(CCOPTIONS) $(ALLDEFINES)
X        LINTFLAGS = $(LINTOPTS) -DLINT $(ALLDEFINES)
X           LDLIBS = $(SYS_LIBRARIES) $(EXTRA_LIBRARIES)
X        LDOPTIONS = $(CDEBUGFLAGS) $(CCOPTIONS)
X   LDCOMBINEFLAGS = -X -r
X
X        MACROFILE = ultrix.cf
X           RM_CMD = $(RM) *.CKP *.ln *.BAK *.bak *.o core errs ,* *~ *.a .emacs_* tags TAGS make.log MakeOut
X
X    IMAKE_DEFINES =
X
X         IRULESRC = $(CONFIGSRC)
X        IMAKE_CMD = $(NEWTOP)$(IMAKE) -I$(NEWTOP)$(IRULESRC) $(IMAKE_DEFINES)
X
X     ICONFIGFILES = $(IRULESRC)/Imake.tmpl $(IRULESRC)/Imake.rules \
X			$(IRULESRC)/Project.tmpl $(IRULESRC)/site.def \
X			$(IRULESRC)/$(MACROFILE) $(EXTRA_ICONFIGFILES)
X
X###########################################################################
X# X Window System Build Parameters
X# $XConsortium: Project.tmpl,v 1.63 89/12/18 16:46:44 jim Exp $
X
X###########################################################################
X# X Window System make variables; this need to be coordinated with rules
X# $XConsortium: Project.tmpl,v 1.63 89/12/18 16:46:44 jim Exp $
X
X          PATHSEP = /
X        USRLIBDIR = $(DESTDIR)/usr/lib
X           BINDIR = $(TOP)/../bin
X          INCROOT = $(DESTDIR)/usr/include
X     BUILDINCROOT = $(TOP)
X      BUILDINCDIR = $(BUILDINCROOT)/X11
X      BUILDINCTOP = ..
X           INCDIR = $(INCROOT)/X11
X           ADMDIR = $(DESTDIR)/usr/adm
X           LIBDIR = $(USRLIBDIR)/X11
X        CONFIGDIR = $(LIBDIR)/config
X       LINTLIBDIR = $(USRLIBDIR)/lint
X
X          FONTDIR = $(LIBDIR)/fonts
X         XINITDIR = $(LIBDIR)/xinit
X           XDMDIR = $(LIBDIR)/xdm
X           AWMDIR = $(LIBDIR)/awm
X           TWMDIR = $(LIBDIR)/twm
X           GWMDIR = $(LIBDIR)/gwm
X          MANPATH = $(DESTDIR)/usr/man
X    MANSOURCEPATH = $(MANPATH)/man
X           MANDIR = $(MANSOURCEPATH)n
X        LIBMANDIR = $(MANSOURCEPATH)3
X      XAPPLOADDIR = /wsl/share/lib/X11/r4app-defaults
X
X       FONTCFLAGS = -t
X
X     INSTAPPFLAGS = $(INSTDATFLAGS)
X
X            IMAKE = $(IMAKESRC)/imake
X           DEPEND = $(DEPENDSRC)/makedepend
X              RGB = $(RGBSRC)/rgb
X            FONTC = $(BDFTOSNFSRC)/bdftosnf
X        MKFONTDIR = $(MKFONTDIRSRC)/mkfontdir
X        MKDIRHIER = 	/bin/sh $(SCRIPTSRC)/mkdirhier.sh
X
X        CONFIGSRC = $(TOP)/config
X        CLIENTSRC = $(TOP)/clients
X          DEMOSRC = $(TOP)/demos
X           LIBSRC = $(TOP)/lib
X          FONTSRC = $(TOP)/fonts
X       INCLUDESRC = $(TOP)/X11
X        SERVERSRC = $(TOP)/server
X          UTILSRC = $(TOP)/util
X        SCRIPTSRC = $(UTILSRC)/scripts
X       EXAMPLESRC = $(TOP)/examples
X       CONTRIBSRC = $(TOP)/../contrib
X           DOCSRC = $(TOP)/doc
X           RGBSRC = $(TOP)/rgb
X        DEPENDSRC = $(UTILSRC)/makedepend
X         IMAKESRC = $(CONFIGSRC)
X         XAUTHSRC = $(LIBSRC)/Xau
X          XLIBSRC = $(LIBSRC)/X
X           XMUSRC = $(LIBSRC)/Xmu
X       TOOLKITSRC = $(LIBSRC)/Xt
X       AWIDGETSRC = $(LIBSRC)/Xaw
X       OLDXLIBSRC = $(LIBSRC)/oldX
X      XDMCPLIBSRC = $(LIBSRC)/Xdmcp
X      BDFTOSNFSRC = $(FONTSRC)/bdftosnf
X     MKFONTDIRSRC = $(FONTSRC)/mkfontdir
X     EXTENSIONSRC = $(TOP)/extensions
X
X  DEPEXTENSIONLIB =  $(EXTENSIONSRC)/lib/libXext.a
X     EXTENSIONLIB = 			   $(DEPEXTENSIONLIB)
X
X          DEPXLIB = $(DEPEXTENSIONLIB)  $(XLIBSRC)/libX11.a
X             XLIB = $(EXTENSIONLIB) 			  $(XLIBSRC)/libX11.a
X
X      DEPXAUTHLIB =  $(XAUTHSRC)/libXau.a
X         XAUTHLIB = 			  $(DEPXAUTHLIB)
X
X        DEPXMULIB =  $(XMUSRC)/libXmu.a
X           XMULIB = 			  $(DEPXMULIB)
X
X       DEPOLDXLIB =  $(OLDXLIBSRC)/liboldX.a
X          OLDXLIB = 			  $(DEPOLDXLIB)
X
X      DEPXTOOLLIB =  $(TOOLKITSRC)/libXt.a
X         XTOOLLIB = 			  $(DEPXTOOLLIB)
X
X        DEPXAWLIB =  $(AWIDGETSRC)/libXaw.a
X           XAWLIB = 			  $(DEPXAWLIB)
X
X LINTEXTENSIONLIB =  $(EXTENSIONSRC)/lib/llib-lXext.ln
X         LINTXLIB =  $(XLIBSRC)/llib-lX11.ln
X          LINTXMU =  $(XMUSRC)/llib-lXmu.ln
X        LINTXTOOL =  $(TOOLKITSRC)/llib-lXt.ln
X          LINTXAW =  $(AWIDGETSRC)/llib-lXaw.ln
X
X          DEPLIBS = $(LOCAL_LIBRARIES)
X
X         DEPLIBS1 = $(DEPLIBS)
X         DEPLIBS2 = $(DEPLIBS)
X         DEPLIBS3 = $(DEPLIBS)
X
X###########################################################################
X# Imake rules for building libraries, programs, scripts, and data files
X# rules:  $XConsortium: Imake.rules,v 1.67 89/12/18 17:14:15 jim Exp $
X
X###########################################################################
X# start of Imakefile
X
XIMAKE_DEFINES = -DDPS -DSHAPE -DMITSHM -DMULTIBUFFER -DMITMISC -DXINPUT $(DGEX) -DXV
X
X TD_DEFINES = -DUNIX -DDPS -DSHAPE -DMITSHM -DMULTIBUFFER -DMITMISC -DXINPUT $(DGEX) -DXV
XCDEBUGFLAGS = -O
X   INCLUDES = -I../include -I$(EXTENSIONSRC)/include -I$(INCLUDESRC) -I$(XLIBSRC)
X       SRCS = Xv.c
X       OBJS = Xv.o
X     LINTLIBS = $(LINTXLIB)
X
X.c.o:
X	$(RM) $@
X	$(CC) -c $(CFLAGS) $*.c
X
Xall:: libXv.a
X
XlibXv.a: $(OBJS)
X	$(RM) $@
X	$(AR) $@ $(OBJS)
X	$(RANLIB) $@
X
Xlintlib:: llib-lXv.ln
X
Xllib-lXv.ln: $(SRCS)
X	$(RM) $@
X	$(LINT) $(LINTLIBFLAG)Xv $(LINTFLAGS) $(SRCS)
X
Xinstall:: libXv.a
X	$(INSTALL) -c $(INSTLIBFLAGS) libXv.a $(USRLIBDIR)
X	$(RANLIB) $(RANLIBINSTFLAGS) $(USRLIBDIR)/libXv.a
X
Xinstall.ln:: llib-lXv.ln
X	$(INSTALL) -c $(INSTLIBFLAGS) llib-lXv.ln $(LINTLIBDIR)
X
Xdepend:: $(DEPEND)
X
X$(DEPEND):
X	@echo "checking $@ over in $(DEPENDSRC) first..."; \
X	cd $(DEPENDSRC); $(MAKE); \
X	echo "okay, continuing in $(CURRENT_DIR)"
X
Xdepend::
X	$(DEPEND) -s "# DO NOT DELETE" -- $(ALLDEFINES) -- $(SRCS)
X
Xlint:
X	$(LINT) $(LINTFLAGS) $(SRCS) $(LINTLIBS)
Xlint1:
X	$(LINT) $(LINTFLAGS) $(FILE) $(LINTLIBS)
X
X###########################################################################
X# common rules for all Makefiles - do not edit
X
Xemptyrule::
X
Xclean::
X	$(RM_CMD) \#*
X
XMakefile:: $(IMAKE)
X
X$(IMAKE):
X	@(cd $(IMAKESRC); if [ -f Makefile ]; then \
X	echo "checking $@ in $(IMAKESRC) first..."; $(MAKE) all; else \
X	echo "bootstrapping $@ from Makefile.ini in $(IMAKESRC) first..."; \
X	$(MAKE) -f Makefile.ini BOOTSTRAPCFLAGS=$(BOOTSTRAPCFLAGS); fi; \
X	echo "okay, continuing in $(CURRENT_DIR)")
X
XMakefile::
X	-@if [ -f Makefile ]; then \
X		echo "	$(RM) Makefile.bak; $(MV) Makefile Makefile.bak"; \
X		$(RM) Makefile.bak; $(MV) Makefile Makefile.bak; \
X	else exit 0; fi
X	$(IMAKE_CMD) -DTOPDIR=$(TOP) -DCURDIR=$(CURRENT_DIR)
X
Xtags::
X	$(TAGS) -w *.[ch]
X	$(TAGS) -xw *.[ch] > TAGS
X
X###########################################################################
X# empty rules for directories that do not have SUBDIRS - do not edit
X
Xinstall::
X	@echo "install in $(CURRENT_DIR) done"
X
Xinstall.man::
X	@echo "install.man in $(CURRENT_DIR) done"
X
XMakefiles::
X
Xincludes::
X
X###########################################################################
X# dependencies generated by makedepend
X
X# DO NOT DELETE
X
XXv.o: ../include/Xvlibint.h ../../.././X11/Xlibint.h /usr/include/sys/types.h
XXv.o: /usr/include/sys/ansi_compat.h ../../.././X11/Xlib.h ../../.././X11/X.h
XXv.o: /usr/include/sys/time.h /usr/include/sys/resource.h
XXv.o: ../../.././X11/Xproto.h ../../.././X11/Xmd.h ../../.././X11/Xprotostr.h
XXv.o: ../../.././X11/Xlibos.h /usr/include/netinet/tcp.h
XXv.o: /usr/include/netinet/in.h /usr/include/sys/ioctl.h
XXv.o: /usr/include/sys/ttydev.h /usr/include/netdb.h /usr/include/sys/uio.h
XXv.o: /usr/include/sys/param.h /usr/include/machine/param.h
XXv.o: /usr/include/sys/signal.h /usr/include/sys/smp_lock.h
XXv.o: /usr/include/errno.h ../include/Xvproto.h ../include/Xvlib.h
XXv.o: ../include/Xv.h ../../.././X11/X.h
END_OF_FILE
if test 10117 -ne `wc -c <'extensions/xv/lib/Makefile'`; then
    echo shar: \"'extensions/xv/lib/Makefile'\" unpacked with wrong size!
fi
# end of 'extensions/xv/lib/Makefile'
fi
if test -f 'extensions/xv/man/man3/XvUngrabPort.3X' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'extensions/xv/man/man3/XvUngrabPort.3X'\"
else
echo shar: Extracting \"'extensions/xv/man/man3/XvUngrabPort.3X'\" \(1440 characters\)
sed "s/^X//" >'extensions/xv/man/man3/XvUngrabPort.3X' <<'END_OF_FILE'
X.TH XvUngrabPort 3X
X.SH Name
XXvUngrabPort \- release port grabbed for video operation
X.\"
X.SH Syntax
X\fB#include <X11/extensions/Xvlib.h>
X.sp 1l
XXvUngrabPort(\fIdpy, port, time\fR)
X.sp 1l
X\fBDisplay \fI*dpy\fR;
X.br
X\fBXvPortID \fIport\fR;
X.br
X\fBTime \fItime\fR;
X.SH Arguments
X.\"
X.IP \fIdpy\fR 15
XSpecifies the display screen on which the
XXv Server is to accept requests from Xv clients.  If the
Xdisplay option is not specified, Xv uses the display screen
Xspecified by your DISPLAY environment variable.  The display
Xoption has the format hostname:number.  Using two colons
X(::) instead of one (:) indicates that DECnet is to be used
Xfor transport.
X.IP \fIport\fR 15
XSpecifies the port to be released.  If the port had not been
Xpreviously grabbed, the request is ignored.
X.IP \fItime\fR 15
XSpecifies the request timestamp.
X.\"
X.SH Description
XXvUngrabPort(3X) releases a grabbed port.  If \fItime\fR specifies a
Xtime before the last XvGrabPort(3X) was executed, the
Xrequest is ignored.
X.\"
X.SH Examples
X.EX
XExample between .EX and .EE will show in monospace
X.EE
X.SH Returned Values
X.IP [Success] 8
XReturns True if XvUngrabPort(3X) completed successfully.
X.IP [XvBadExtension] 8
XReturned if the Xv extension is unavailable.
X.IP [XvBadAlloc] 8
XReturned if XvUngrabPort(3X) failed to allocate memory to process
Xthe request.
X.SH Diagnostics
X.IP [XvBadPort] 8
XGenerated if the requested port does not exist.
X.SH See Also
X.\"
XXvGrabPort(3X)
X.br
END_OF_FILE
if test 1440 -ne `wc -c <'extensions/xv/man/man3/XvUngrabPort.3X'`; then
    echo shar: \"'extensions/xv/man/man3/XvUngrabPort.3X'\" unpacked with wrong size!
fi
# end of 'extensions/xv/man/man3/XvUngrabPort.3X'
fi
if test -f 'server/ddx/dec/tx/pmagro.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'server/ddx/dec/tx/pmagro.h'\"
else
echo shar: Extracting \"'server/ddx/dec/tx/pmagro.h'\" \(9886 characters\)
sed "s/^X//" >'server/ddx/dec/tx/pmagro.h' <<'END_OF_FILE'
X/***********************************************************
XCopyright 1987 by Digital Equipment Corporation, Maynard, Massachusetts,
Xand the Massachusetts Institute of Technology, Cambridge, Massachusetts.
X
X                        All Rights Reserved
X
XPermission to use, copy, modify, and distribute this software and its 
Xdocumentation for any purpose and without fee is hereby granted, 
Xprovided that the above copyright notice appear in all copies and that
Xboth that copyright notice and this permission notice appear in 
Xsupporting documentation, and that the names of Digital or MIT not be
Xused in advertising or publicity pertaining to distribution of the
Xsoftware without specific, written prior permission.  
X
XDIGITAL DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING
XALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO EVENT SHALL
XDIGITAL BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR
XANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,
XWHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION,
XARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS
XSOFTWARE.
X
X******************************************************************/
X#ifndef pmagro_DEFINED
X#define pmagro_DEFINED 1
X#include <sys/types.h>
X
X/*
X *    Offsets in the Turbo Card address space of various components
X */
X
X#define TCO_CURSOR0       0x040010  /* Cursor 0. */
X#define TCO_CURSOR1       0x040020  /* Cursor 1. */
X#define TCO_EIGHT_BIT     0x200000  /* Eight bit frame buffer. */
X#define TCO_FB_REGISTERS  0x040000  /* Frame buffer device registers. */
X#define TCO_MAP_REGISTER  0x040030  /* vid on, int ena, int pend,seg ena,seg */
X#define TCO_PIP_REGISTERS 0x0800C0  /* Pip device registers. */
X#define TCO_SELECTION     0x100000  /* Selection memory. */
X#define TCO_TRUE_COLOR    0x400000  /* True color frame buffer. */
X#define TCO_VIDEO_ENABLE  0xA00000  /* Video enable memory. */
X#define TCO_3MAX_MAP_AREA 0x200000  /* Area in 3MAX slot which is mapped. */
X
X#define TC1_FBC_VIDEO_ON  0x80
X#define TC1_FBC_INT_ENA	  0x40
X#define TC1_FBC_INT_PEND  0x20
X#define TC1_FBC_SEG_ENA	  0x10
X#define TC1_FBC_SEG	  0x0f
X
X/*
X *    Picture in a picture device register layout:
X */
Xtypedef struct {
X    volatile unsigned char    control_status; 	/* 800C0: pip control/status reg 0. */
X    char			pad1[3];			/* ... */
X    volatile unsigned char	control_status1; /* 800C4: pip control/status reg 1. */
X    char			pad2[3];			/* ... */
X    unsigned char			fill1[56];	/* 800C8 - 800FF Unused. */
X
X    volatile unsigned char	x_source_start_hi;  /* 80100: video source start
X							 (high). */
X    unsigned char			pad3[3];			/* ... */
X    volatile unsigned char	x_source_start_low;	/* 80104: video source start
X							 (low). */
X    unsigned char			pad4[3];			/* ... */
X    volatile unsigned char	x_source_end_hi;	/* 80108: video source end
X						 	(high). */
X    unsigned char			pad5[3];			/* ... */
X    volatile unsigned char	x_source_end_low;	/* 8010C: video source end
X							 (low). */
X    unsigned char			pad6[3];			/* ... */
X    volatile unsigned char	x_source_scale_hi;	/* 80110: video source scale
X							 (high). */
X    unsigned char			pad7[3];			/* ... */
X    volatile unsigned char	x_source_scale_low;	/* 80114: video source scale
X							 (low). */
X    unsigned char			pad8[3];			/* ... */
X    unsigned char			fill2[8];	/* 80118 - 8011F Unused. */
X
X    volatile unsigned char	y_source_start_hi;	/* 80120: video source start
X							 (high). */
X    unsigned char			pad9[3];			/* ... */
X    volatile unsigned char	y_source_start_low;	/* 80124: video source start
X							 (low). */
X    unsigned char			pad10[3];			/* ... */
X    volatile unsigned char	y_source_end_hi;	/* 80128: video source end
X							 (high). */
X    unsigned char			pad11[3];			/* ... */
X    volatile unsigned char	y_source_end_low;	/* 8012C: video source end
X							 (low). */
X    unsigned char			pad12[3];			/* ... */
X    volatile unsigned char	y_source_scale_hi;	/* 80130: video source scale
X							 (high). */
X    unsigned char			pad13[3];			/* ... */
X    volatile unsigned char	y_source_scale_low;	/* 80134: video source scale
X							 (low). */
X    unsigned char			pad14[3];			/* ... */
X    volatile unsigned char	fb_pitch_hi;		/* 80138: frame buffer pitch
X							 (high). */
X    unsigned char			pad15[3];			/* ... */
X    volatile unsigned char	fb_pitch_low;		/* 8013C: frame buffer pitch
X							 (low). */
X    unsigned char			pad16[3];			/* ... */
X    unsigned char			fill3[4];	/* 80140 - 80143 Unused. */
X
X    volatile unsigned char	start_offset_hi;	/* 80144: pip starting offset
X							 (high). */
X    unsigned char			pad17[3];			/* ... */
X    volatile unsigned char	start_offset_mid;	/* 80148: pip starting offset
X							 (mid). */
X    unsigned char			pad18[3];			/* ... */
X    volatile unsigned char	start_offset_low;	/* 8014C: pip starting offset
X								 (low). */
X    unsigned char			pad19[3];			/* ... */
X    volatile unsigned char	control_status2;	/* 80150: pip control/status
X								 reg 2. */
X    char			pad20[3];			/* ... */
X}   Pip_Device_Regs;
X
X/*    
X *	Pip Control Status Register 0 definitions:
X */
X#define TC1_CSR0_PIP_ONE_SHOT 0x40 /* Set to 1 to do a one-shot frame capture*/
X
X#define TC1_CSR0_PIP_IS_ON    	  0x40	/* = 1 on read: pip is turned on. 
X					(H/W calls this PIP_BUSY)*/
X
X#define TC1_CSR0_PIP_IS_ACTIVE      0x20	/* = 1 on read: pip is actively
X					 generating images. (H/W PIP_ON)*/
X
X#define TC1_CSR0_TURN_PIP_ON      0x20	/* Set to 1 to make pip active, set to
X					 0 to stop. */
X
X#define TC1_CSR0_PIP_INSTALLED      0x10 /* = 1 if pip present in system. */
X
X#define TC1_CSR0_SOURCE_TYPE_MASK 0x03    /* Mask to get video source value. */
X
X#define TC1_CSR0_COMPOSITE_SOURCE 0x00   /* ... video source is composite 
X						(1 wire.) */
X
X#define TC1_CSR0_S_VIDEO_SOURCE      0x01	/* ... video source is s-video
X						 (2 wire.) */
X#define TC1_CSR0_RGB_SOURCE    	  0x02	/* ... video source is rgb (3 wire.) */
X
X/*    Control Status Register 1 definitions:
X */
X#define TC1_CSR1_I2C_DATA    	  0x80	/* I2C bus interface serial data bit.*/
X#define TC1_CSR1_I2C_CLOCK    	  0x40	/* I2C bus interface clock bit. */
X#define TC1_CSR1_FIELD_ONLY    	  0x10	/* = 1 if compose image with only 1
X					field (1/2 size.) */
X#define TC1_CSR1_NO_PIP		  0x02  /* = 1 if there is no pip present. */
X#define TC1_CSR1_INPUT_CONNECTED  0x01  /* = 1 if pip input connected. */
X
X/*    
X *	Control Status Register 2 definitions:
X */
X#define TC1_CSR2_ALTERNATE_PLL      0x01 /* = 1 to use VCR PLL (slow timing.)*/
X#define TC1_CSR2_COUNT_DOWN  0x02  /* = 1 if address counts down (horizontal
X						 flip.) */
X#define TC1_CSR2_FIELD_INVERT     0x04    /* = 1 to show odd field before even
X						 field. */
X
X/*
X *	Combinations of fields in the device register area.
X */
X#define Start_Offset ( ((pregs->x_start_offset_hi & 0xff) << 16) | \
X	((pregs->start_offset_mid & 0xff) << 8) | \
X	(pregs->start_offset_low & 0xff) )
X
X#define X_Source_End ( ((pregs->x_source_end_hi & 0xff) << 8) | \
X	(pregs->x_source_end_low & 0xff) )
X#define X_Source_Scale ( ((pregs->x_source_scale_hi & 0xff) << 8) | \
X	(pregs->x_source_scale_low & 0xff) )
X#define X_Source_Start ( ((pregs->x_source_start_hi & 0xff) << 8) | \
X	(pregs->x_source_start_low & 0xff) )
X
X#define Y_Source_End ( ((pregs->y_source_end_hi & 0xff) << 8) | \
X	(pregs->y_source_end_low & 0xff) )
X#define Y_Source_Scale ( ((pregs->y_source_scale_hi & 0xff) << 8) | \
X	(pregs->y_source_scale_low & 0xff) )
X#define Y_Source_Start ( ((pregs->y_source_start_hi & 0xff) << 8) | \
X	(pregs->y_source_start_low & 0xff) )
X
X/*    
X *	I-squared C bus device addresses and command definitions:
X */
X#define I2C_ADDR_EEPROM    (u_int)0xa0	/* Address: eeprom to store
X					 configuration. */
X
X/*************************************************************************
X *                                                                        
X *  Layout of EEPROM Storage and Related Structures:                     
X *
X *                                                                             
X *
X ***********************************************************************
X */
Xtypedef struct {                /* PIP Initialization record: */ 
X    u_char      timing_mode;    /* ... timing mode specification. */ 
X     
X    u_char      brightness;     /* ... digital to analog converter brightness
X						 value. */ 
X    u_char      contrast;       /* ... digital to analog converter contrast
X						 value. */ 
X    u_char      saturation;     /* ... digital to analog converter saturation
X						 value. */ 
X    u_char      hue;            /* ... digital to analog converter hue value.*/ 
X     
X    u_char		fill;			/* ... *** UNUSED *** */
X     
X    u_short     x_source_start; /* ... starting pixel of signal in the x
X						 direction. */
X    u_short     x_source_end;   /* ... ending pixel of signal in the x
X						 direction. */
X    u_short     y_source_start; /* ... starting pixel of signal in the y
X					 	direction. */
X    u_short     y_source_end;   /* ... ending pixel of signal in the y
X						 direction. */
X     
X    u_char  rgb_brightness;  /* ... digital to analog converter rgb 
X						brightness. */
X    u_char		rgb_contrast;	/* ... digital to analog converter rgb
X						 brightness. */
X    
X}   Pip_Init_Record;   
X 
X#define EEPROM_FACTORY -1    /* Use factory timing default (i.e., location 0 
X						in eeprom). */
X#define EEPROM_NTSC 0       /* Default timing mode is NTSC. */
X#define EEPROM_PAL  1       /* Default timing mode is PAL. */
X#define EEPROM_NUM_MODES EEPROM_PAL+1
X
Xtypedef struct {                    		/* EEPROM storage layout: */
X    u_char          default_mode;  	   /* ... Default mode selection. */
X    u_char			fill[15];	/* ... *** UNUSED *** */
X    Pip_Init_Record mode[EEPROM_NUM_MODES]; /* ... NTSC, PAL timing mode
X						 defaults. */
X}   EEPROM_Record;
X
X#endif !pmagro_DEFINED
X
END_OF_FILE
if test 9886 -ne `wc -c <'server/ddx/dec/tx/pmagro.h'`; then
    echo shar: \"'server/ddx/dec/tx/pmagro.h'\" unpacked with wrong size!
fi
# end of 'server/ddx/dec/tx/pmagro.h'
fi
if test -f 'server/ddx/dec/tx/xfbscrinit.c' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'server/ddx/dec/tx/xfbscrinit.c'\"
else
echo shar: Extracting \"'server/ddx/dec/tx/xfbscrinit.c'\" \(10223 characters\)
sed "s/^X//" >'server/ddx/dec/tx/xfbscrinit.c' <<'END_OF_FILE'
X/***********************************************************
XCopyright 1987 by Digital Equipment Corporation, Maynard, Massachusetts,
Xand the Massachusetts Institute of Technology, Cambridge, Massachusetts.
X
X                        All Rights Reserved
X
XPermission to use, copy, modify, and distribute this software and its 
Xdocumentation for any purpose and without fee is hereby granted, 
Xprovided that the above copyright notice appear in all copies and that
Xboth that copyright notice and this permission notice appear in 
Xsupporting documentation, and that the names of Digital or MIT not be
Xused in advertising or publicity pertaining to distribution of the
Xsoftware without specific, written prior permission.  
X
XDIGITAL DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING
XALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO EVENT SHALL
XDIGITAL BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR
XANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,
XWHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION,
XARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS
XSOFTWARE.
X
X******************************************************************/
X
X#include "X.h"
X#include "Xmd.h"
X#include "servermd.h"
X#include "scrnintstr.h"
X#include "pixmapstr.h"
X#include "resource.h"
X#include "colormap.h"
X#include "colormapst.h"
X#include "cfb.h"
X#include "xfbstruct.h"
X#include "mi.h"
X#include "mistruct.h"
X#include "dix.h"
X#include "tfb.h"
X#include "tfbdraw.h"
X#include "mibstore.h"
X#include "xfbxorfix.h"
X#include "xfbbanksw.h"
X
X#ifdef DECWINDOWS
X#include "cfbcmap.h"  /* exists in dec/cfb only, not needed for MIT cfb */
X#endif DECWINDOWS
X
Xextern RegionPtr mfbPixmapToRegion();
Xextern RegionPtr xfbCopyPlane();
Xextern Bool mfbAllocatePrivates();
X
Xextern int defaultColorVisualClass;
X
X#define CFBPSZ 8  /* cfb pixel size */
X#define _BP 8
X#define _RZ ((CFBPSZ + 2) / 3)
X#define _RS 0
X#define _RM ((1 << _RZ) - 1)
X#define _GZ ((CFBPSZ - _RZ + 1) / 2)
X#define _GS _RZ
X#define _GM (((1 << _GZ) - 1) << _GS)
X#define _BZ (CFBPSZ - _RZ - _GZ)
X#define _BS (_RZ + _GZ)
X#define _BM (((1 << _BZ) - 1) << _BS)
X#define _CE (1 << _RZ)
X
Xstatic VisualRec visuals[] = {
X/* vid  class        bpRGB cmpE nplan rMask gMask bMask oRed oGreen oBlue */
X#ifndef STATIC_COLOR
X    0,  PseudoColor, _BP,  1<<CFBPSZ,   CFBPSZ,  0,   0,   0,   0,   0,   0,
X    0,  GrayScale,   _BP,  1<<CFBPSZ,   CFBPSZ,  0,   0,   0,   0,   0,   0,
X    0,  StaticGray,  _BP,  1<<CFBPSZ,   CFBPSZ,  0,   0,   0,   0,   0,   0,
X#endif
X    0,  StaticColor, _BP,  1<<CFBPSZ,   CFBPSZ,  _RM, _GM, _BM, _RS, _GS, _BS,
X    0,  TrueColor,   _BP, _CE,       _RZ,  _RM, _GM, _BM, _RS, _GS, _BS,
X    /* 24-bit depth visuals: */
X    0,  TrueColor,   _BP, 1<<8,       8,  255, 255<<8, 255<<16, 0, 8, 16,
X    0,  DirectColor, _BP, 1<<8,       8,  255, 255<<8, 255<<16, 0, 8, 16
X};
X
X#define	NUMVISUALS	((sizeof visuals)/(sizeof visuals[0]))
X#define	NUMVISUALS24	2
X#define	NUMVISUALS8	NUMVISUALS - NUMVISUALS24
X
Xstatic  VisualID VIDs[NUMVISUALS];
X
Xstatic DepthRec depths[] = {
X/* depth	numVid		vids */
X    1,		0,		NULL,
X    8,		NUMVISUALS8,	VIDs,
X    24,		NUMVISUALS24,	&VIDs[NUMVISUALS8]
X};
X
X#define NUMDEPTHS	((sizeof depths)/(sizeof depths[0]))
X
Xstatic unsigned long xfbGeneration = 0;
X
Xint xfbWindowPrivateIndex;
Xint xfbGCPrivateIndex;
X
X
X/* mi backing store support functions */
XmiBSFuncRec xfbBSFuncRec = {
X    xfbSaveAreas,
X    xfbRestoreAreas,
X    (void (*)()) 0,
X    (PixmapPtr (*)()) 0,
X    (PixmapPtr (*)()) 0,
X};
X
X
Xstatic Bool
XxfbCloseScreen (index, pScreen)
X    int		index;
X    ScreenPtr	pScreen;
X{
X    tfbDrawClose(pScreen);
X    cfbDrawClose(pScreen);
X    return TRUE;
X}
X
X/*
XGeneral purpose function to do equivalent of XMatchVisualInfo().
X*/
Xstatic VisualPtr
XxfbMatchVisual(pScreen, depth, visualClass)
X    ScreenPtr pScreen;
X    int depth, visualClass;
X{
X    int i, j;
X    DepthPtr pDepth;
X    VisualPtr pVisual;
X    unsigned long vid;
X
X    pDepth = pScreen->allowedDepths;
X    for (i = 0; i < pScreen->numDepths; i++) {
X	if (pDepth->depth == depth) {
X	    for (j = 0; j < pDepth->numVids; j++) {
X		vid = pDepth->vids[j];
X		for (pVisual = pScreen->visuals; pVisual->vid != vid; pVisual++)
X		    ;
X		if (pVisual->class == visualClass) {
X		    return (pVisual);
X		}
X	    }
X	    return (NULL);
X	}
X	pDepth++;
X    }
X    return (NULL);
X}
X
XBool
XxfbScreenInit(pScreen, fb8, xsize, ysize, dpix, dpiy, width, fb24,
X    defDepth, defVisualClass, useBankSw, useXorFix, useBStore)
X    ScreenPtr pScreen;
X    pointer fb8;		/* pointer to 8-bit depth framebuffer */
X    int xsize, ysize;		/* in pixels */
X    int dpix, dpiy;		/* dots per inch */
X    int width;			/* pixel width of frame buffer */
X    pointer fb24;		/* pointer to 24-bit depth framebuffer */
X    int defDepth;		/* root depth */
X    int defVisualClass;		/* root visual class */
X    Bool useBankSw;		/* whether bank switching is turned on */
X    Bool useXorFix;		/* whether XorFix is turned on */
X    Bool useBStore;		/* whether mi backing store is init-ed */
X{
X    int	i;
X    VisualPtr pVisual;
X
X#ifdef DPS
X    {   /* XXX temp crock until server can do per-screen extension init */
X	extern void cfbCreateDDXMarkProcs();
X	XMIRegisterDDXMarkProcsProcs(pScreen, cfbCreateDDXMarkProcs);
X    }
X#endif DPS
X
X    if (xfbGeneration != serverGeneration)
X    {
X	/*  Set up the visual IDs */
X	for (i = 0; i < NUMVISUALS; i++) {
X	    visuals[i].vid = FakeClientID(0);
X	    VIDs[i] = visuals[i].vid;
X	}
X	xfbGeneration = serverGeneration;
X    }
X
X    /* init mfb drawing routines: */
X    if (!mfbAllocatePrivates(pScreen,
X			     &xfbWindowPrivateIndex, &xfbGCPrivateIndex))
X	return FALSE;
X
X    /* init cfb drawing routines: */
X    if (!cfbDrawInit(pScreen, fb8, xsize, ysize, width,
X	xfbWindowPrivateIndex, xfbGCPrivateIndex)) {
X	return FALSE;
X    }
X
X    /* init tfb drawing routines (alloc window and GC privates also) */
X    if (!tfbDrawInit(pScreen, fb24, xsize, ysize, width,
X	xfbWindowPrivateIndex, xfbGCPrivateIndex)) {
X	return FALSE;
X    }
X
X    /* dts * (inch/dot) * (25.4 mm / inch) = mm */
X    pScreen->width = xsize;
X    pScreen->height = ysize;
X    pScreen->mmWidth = (xsize * 254) / (dpix * 10);
X    pScreen->mmHeight = (ysize * 254) / (dpiy * 10);
X    pScreen->numDepths = NUMDEPTHS;
X    pScreen->allowedDepths = depths;
X
X    pScreen->minInstalledCmaps = 1;
X    pScreen->maxInstalledCmaps = 2;
X    pScreen->backingStoreSupport = Always;
X    pScreen->saveUnderSupport = NotUseful;
X    /* let CreateDefColormap do whatever it wants */ 
X    pScreen->blackPixel = pScreen->whitePixel = (Pixel) 0;
X
X    /* cursmin and cursmax are device specific */
X
X    pScreen->numVisuals = NUMVISUALS;
X    pScreen->visuals = visuals;
X
X    /* anything that xfb doesn't know about is assumed to be done
X       elsewhere.  (we put in no-op only for things that we KNOW
X       are really no-op.
X    */
X    pScreen->CreateWindow = xfbCreateWindow;
X    pScreen->DestroyWindow = xfbDestroyWindow;
X    pScreen->PositionWindow = xfbPositionWindow;
X    pScreen->ChangeWindowAttributes = xfbChangeWindowAttributes;
X    pScreen->RealizeWindow = xfbMapWindow;
X    pScreen->UnrealizeWindow = xfbUnmapWindow;
X
X    pScreen->RealizeFont = mfbRealizeFont;
X    pScreen->UnrealizeFont = mfbUnrealizeFont;
X    pScreen->CloseScreen = xfbCloseScreen;
X    pScreen->QueryBestSize = mfbQueryBestSize;
X    pScreen->GetImage = xfbGetImage;
X    pScreen->GetSpans = xfbGetSpans;
X    pScreen->SourceValidate = (void (*)()) 0;
X    pScreen->CreateGC = xfbCreateGC;
X    pScreen->CreatePixmap = xfbCreatePixmap;
X    pScreen->DestroyPixmap = xfbDestroyPixmap;
X    pScreen->ValidateTree = miValidateTree;
X
X#ifdef	STATIC_COLOR
X    pScreen->InstallColormap = cfbInstallColormap;
X    pScreen->UninstallColormap = cfbUninstallColormap;
X    pScreen->ListInstalledColormaps = cfbListInstalledColormaps;
X    pScreen->StoreColors = NoopDDA;
X#endif
X    pScreen->ResolveColor = cfbResolveColor;
X
X    pScreen->RegionCreate = miRegionCreate;
X    pScreen->RegionInit = miRegionInit;
X    pScreen->RegionCopy = miRegionCopy;
X    pScreen->RegionDestroy = miRegionDestroy;
X    pScreen->RegionUninit = miRegionUninit;
X    pScreen->Intersect = miIntersect;
X    pScreen->Inverse = miInverse;
X    pScreen->Union = miUnion;
X    pScreen->Subtract = miSubtract;
X    pScreen->RegionReset = miRegionReset;
X    pScreen->TranslateRegion = miTranslateRegion;
X    pScreen->RectIn = miRectIn;
X    pScreen->PointInRegion = miPointInRegion;
X    pScreen->WindowExposures = xfbWindowExposures;
X    pScreen->PaintWindowBackground = xfbPaintWindow;
X    pScreen->PaintWindowBorder = xfbPaintWindow;
X    pScreen->CopyWindow = xfbCopyWindow;
X    pScreen->ClearToBackground = miClearToBackground;
X    pScreen->ClipNotify = (void (*)()) 0;
X
X    pScreen->RegionNotEmpty = miRegionNotEmpty;
X    pScreen->RegionEmpty = miRegionEmpty;
X    pScreen->RegionExtents = miRegionExtents;
X    pScreen->RegionAppend = miRegionAppend;
X    pScreen->RegionValidate = miRegionValidate;
X    pScreen->BitmapToRegion = mfbPixmapToRegion;
X    pScreen->RectsToRegion = miRectsToRegion;
X    pScreen->SendGraphicsExpose = miSendGraphicsExpose;
X
X    pScreen->BlockHandler = NoopDDA;
X    pScreen->WakeupHandler = NoopDDA;
X    pScreen->blockData = (pointer)0;
X    pScreen->wakeupData = (pointer)0;
X
X    pScreen->CreateColormap = cfbInitializeColormap;
X    pScreen->DestroyColormap = NoopDDA;
X
X    pScreen->defColormap = FakeClientID(0);
X
X    if (pVisual = xfbMatchVisual(pScreen, defDepth, defVisualClass)) {
X	pScreen->rootDepth = defDepth;
X	pScreen->rootVisual = pVisual->vid;
X    } else {
X	pScreen->rootDepth = 8;
X	pScreen->rootVisual = visuals[0].vid;
X    }
X
X    /* bank switched segment is mapped to fb8 address */
X    if (useBankSw && !xfbBankSwitchInit(pScreen, fb8)) {
X	ErrorF("xfbBankSwitchInit() failed\n");
X	return (FALSE);
X    }
X
X    if (useXorFix && !xfbXorFixInit(pScreen)) {
X	ErrorF("xfbXorFixInit() failed\n");
X	return (FALSE);
X    }
X
X    if (useBStore) {
X	if (useBankSw) {
X	    /* init bank switched bstore here when we get it to work */
X	} else {
X	    miInitializeBackingStore(pScreen, &xfbBSFuncRec);
X	}
X    }
X
X/* do this later
X    mfbRegisterCopyPlaneProc (pScreen, xfbCopyPlane);
X*/
X#ifdef MITSHM
X    ShmRegisterFbFuncs(pScreen);
X#endif
X
X    return (TRUE);
X}
X
END_OF_FILE
if test 10223 -ne `wc -c <'server/ddx/dec/tx/xfbscrinit.c'`; then
    echo shar: \"'server/ddx/dec/tx/xfbscrinit.c'\" unpacked with wrong size!
fi
# end of 'server/ddx/dec/tx/xfbscrinit.c'
fi
echo shar: End of archive 22 \(of 29\).
cp /dev/null ark22isdone
MISSING=""
for I in 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 ; do
    if test ! -f ark${I}isdone ; then
	MISSING="${MISSING} ${I}"
    fi
done
if test "${MISSING}" = "" ; then
    echo You have unpacked all 29 archives.
    rm -f ark[1-9]isdone ark[1-9][0-9]isdone
else
    echo You still need to unpack the following archives:
    echo "        " ${MISSING}
fi
##  End of shell archive.
exit 0
-- 
Molecular Simulations, Inc.             mail: dcmartin@msi.com
796 N. Pastoria Avenue                  uucp: uunet!dcmartin
Sunnyvale, California 94086             at&t: 408/522-9236
