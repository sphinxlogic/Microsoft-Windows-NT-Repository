Newsgroups: comp.sources.x
From: rr@sco.com (Ronald Joe Record)
Subject: v21i006:  lyap - Calculate Lyapunov fractals, Part03/03
Message-ID: <1993Oct7.174723.3784@sparky.sterling.com>
X-Md4-Signature: 645f6c1fd7082b9c7e68ee78b3e6e994
Sender: chris@sparky.sterling.com (Chris Olson)
Organization: Sterling Software
Date: Thu, 7 Oct 1993 17:47:23 GMT
Approved: chris@sterling.com

Submitted-by: rr@sco.com (Ronald Joe Record)
Posting-number: Volume 21, Issue 6
Archive-name: lyap/part03
Environment: X11
Supersedes: lyapunov-xlib: Volume 17, Issue 48-49

#! /bin/sh
# This is a shell archive.  Remove anything before this line, then feed it
# into a shell via "sh file" or similar.  To overwrite existing files,
# type "sh file -c".
# Contents:  lyap/Imakefile lyap/Makefile.std lyap/Package lyap/README
#   lyap/TAGS lyap/lib/Imakefile lyap/lib/Makefile.std
#   lyap/lib/Package lyap/lib/TAGS lyap/lib/hls2rgb.c
#   lyap/lib/libXrr.h lyap/lib/tags lyap/lyap.map
#   lyap/params/asharpe.1 lyap/params/asharpe.2 lyap/params/asharpe.3
#   lyap/params/asharpe.4 lyap/params/asharpe.5 lyap/params/asharpe.6
#   lyap/params/asharpe.7 lyap/params/asharpe.8 lyap/params/asharpe.9
#   lyap/params/bigbug lyap/params/catsup lyap/params/circle-12
#   lyap/params/circle-12test lyap/params/circle-2
#   lyap/params/circle-8 lyap/params/manray lyap/params/period-12
#   lyap/params/period-2 lyap/params/period-4 lyap/params/period-8
#   lyap/params/skewed-12 lyap/params/skewed-2 lyap/params/skewed-4
#   lyap/params/skewed-8 lyap/params/tbug lyap/params/zity
#   lyap/patchlevel.h lyap/tags
# Wrapped by chris@sparky on Thu Oct  7 12:38:40 1993
PATH=/bin:/usr/bin:/usr/ucb:/usr/local/bin:/usr/lbin ; export PATH
echo If this archive is complete, you will see the following message:
echo '          "shar: End of archive 3 (of 3)."'
if test -f 'lyap/Imakefile' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'lyap/Imakefile'\"
else
  echo shar: Extracting \"'lyap/Imakefile'\" \(1868 characters\)
  sed "s/^X//" >'lyap/Imakefile' <<'END_OF_FILE'
X#
X#   @(#) Imakefile 9.3 93/08/03
X#
X#*************************************************************************
X#*                                                                       *
X#*     Copyright (c) 1992-1993                  Ronald Joe Record        *
X#*                                                                       *
X#*  All rights reserved. No part of this program or publication may be   *
X#*  reproduced, transmitted, transcribed, stored in a retrieval system,  *
X#*  or translated into any language or computer language, in any form or *
X#*  by any means, electronic, mechanical, magnetic, optical, chemical,   *
X#*  biological, or otherwise, without the prior written permission of:   *
X#*                                                                       *
X#*              Ronald Joe Record                        (408) 458-3718  *
X#*              212 Owen St., Santa Cruz, California 95062 USA           *
X#*                                                                       *
X#*************************************************************************
X
X#
X#        Imakefile for lyap, by Ron Record
X#
X
X#define IHaveSubdirs
X#define PassCDebugFlags 'CDEBUGFLAGS=$(CDEBUGFLAGS)'
X
X        SUBDIRS = lib
X
X        DEPLIBS = $(DEPXLIB)
X#    Uncomment the following line if your system doesn't support prototypes 
X#    PROTODEFINE = -D_NO_PROTO
X#    -DMAPS includes code to support "Function forcing". See lyap.man (-F)
X      MAPDEFINE = -DMAPS
X        DEFINES = $(MAPDEFINE) $(PROTODEFINE)
X       INCLUDES = -I. -Ilib
X         CFLAGS = -O $(DEFINES) $(INCLUDES) $(CDEBUGFLAGS)
XLOCAL_LIBRARIES = lib/libXrr.a $(XLIB) 
X  SYS_LIBRARIES = -lm $(NAPLIB)
X           SRCS = lyap.c
X           OBJS = lyap.o
X
XMakeSubdirs($(SUBDIRS))
XDependSubdirs($(SUBDIRS))
XComplexProgramTarget(lyap)
X
XInstallProgram(lyap, $(BINDIR))
XInstallManPage(lyap, $(MANDIR))
END_OF_FILE
  if test 1868 -ne `wc -c <'lyap/Imakefile'`; then
    echo shar: \"'lyap/Imakefile'\" unpacked with wrong size!
  fi
  # end of 'lyap/Imakefile'
fi
if test -f 'lyap/Makefile.std' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'lyap/Makefile.std'\"
else
  echo shar: Extracting \"'lyap/Makefile.std'\" \(787 characters\)
  sed "s/^X//" >'lyap/Makefile.std' <<'END_OF_FILE'
XCC = cc 
X#DEBUG =  -g
X##
X## Compiler Defines
X## 
XDEFINES = -DMAPS
X
XCFLAGS = -O $(DEBUG) $(DEFINES) -I. -Ilib
X##
X## Libraries
X## X11 	X11 graphics library
X##
X##
XLIBS 	= lib/libXrr.a -lX11 -lm -lsocket
X
X.o:.c
X
Xall: lyap
X
Xcp install:	all
X	-mkdir -p $(ROOT)/usr/local/bin
X	cp lyap $(ROOT)/usr/local/bin/lyap
X	-mkdir -p $(ROOT)/usr/man/cat.LOCAL
X	cp lyap.LOCAL $(ROOT)/usr/man/cat.LOCAL
X	-mkdir -p $(ROOT)/usr/local/lib/lyap
X	cp params/* $(ROOT)/usr/local/lib/lyap
X	-mkdir -p $(ROOT)/usr/local/lib/lyap/pics
X	cp pics/* $(ROOT)/usr/local/lib/lyap/pics
X
Xclean:
X	rm -f *.o
X
Xclobber:	clean
X	rm -f lyap
X
Xlyap : lib/libXrr.a lyap.o
X	$(CC) $(CFLAGS) -o $@ $@.o $(LIBS)
X
Xlyap.o: lyap.c lyap.h
X
Xlib/libXrr.a: lib
X	(cd lib; make -f Makefile.std)
X
Xlyap.LOCAL:	lyap.man
X	nroff -man lyap.man > lyap.LOCAL
END_OF_FILE
  if test 787 -ne `wc -c <'lyap/Makefile.std'`; then
    echo shar: \"'lyap/Makefile.std'\" unpacked with wrong size!
  fi
  # end of 'lyap/Makefile.std'
fi
if test -f 'lyap/Package' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'lyap/Package'\"
else
  echo shar: Extracting \"'lyap/Package'\" \(279 characters\)
  sed "s/^X//" >'lyap/Package' <<'END_OF_FILE'
Xecho "Making tags files"
Xmake tags
Xecho "Backing up previous shar file, if any"
X[ -f lyap.shar ] && mv lyap.shar lyap.shar-
Xecho "Creating new shar file"
Xshar README Imakefile Makefile.std Package *.c *.h lib/* lyap.man lyap.map tags TAGS params/* testit > lyap.shar
Xecho "Done"
END_OF_FILE
  if test 279 -ne `wc -c <'lyap/Package'`; then
    echo shar: \"'lyap/Package'\" unpacked with wrong size!
  fi
  chmod +x 'lyap/Package'
  # end of 'lyap/Package'
fi
if test -f 'lyap/README' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'lyap/README'\"
else
  echo shar: Extracting \"'lyap/README'\" \(3330 characters\)
  sed "s/^X//" >'lyap/README' <<'END_OF_FILE'
X
X
XWritten by Ronald Joe Record (rr@sco) 03 Sep 1991
X
XINTRO
X-----
X
XThe idea here is to calculate the Lyapunov exponent for a periodically
Xforced logistic map (later i added several other nonlinear maps of the unit
Xinterval). In order to turn the 1-dimensional parameter space of the
Xlogistic map into a 2-dimensional parameter space, select two parameter
Xvalues (a and b) then alternate the iterations of the logistic map using
Xfirst a then b as the parameter. This program accepts an argument to 
Xspecify a forcing function, so instead of just alternating a and b, you
Xcan use a as the parameter for say 6 iterations, then b for 6 iterations
Xand so on. An interesting forcing function to look at is abbabaab (the
XMorse-Thue sequence, an aperiodic self-similar, self-generating sequence).
XAnyway, you step through all the values of a and b in the ranges you want,
Xcalculating the Lyapunov exponent for each pair of values. The exponent
Xis calculated by iterating out a ways (specified by the variable "settle")
Xthen on subsequent iterations calculating an average of the logarithm of
Xthe absolute value of the derivative at that point. Points in parameter
Xspace with a negative Lyapunov exponent are colored one way (using the
Xvalue of the exponent to index into a color map) while points with a
Xnon-negative exponent are colored differently. 
X
XACKNOWLEDGEMENTS
X----------------
X
XThe algorithm was taken from the September 1991 Scientific American article
Xby A. K. Dewdney who gives credit to Mario Markus of the Max Planck Institute
Xfor its creation. Additional information and ideas were gleaned from the
Xdiscussion on alt.fractals involving Stephen Hall, Ed Kubaitis, Dave Platt
Xand Baback Moghaddam. Assistance with colormaps and spinning color wheels
Xand X was gleaned from Hiram Clawson. Rubber band code was adapted from 
XStacey Campbell's xmandel source.
X
XBUILD
X-----
X
XTo build the lyap binary, either use the Imakefile or the sample 
Xmakefile - Makefile.std. It is recommended that you use the Imakefile
Xif possible as that is what is most conscientiously maintained as well
Xas being the more portable of the two. You may need to alter the file
Xlib/Imakefile if your system doesn't have itimers or the Imakefile if
Xyour system does not support prototypes. 
X
XTo build using the Imakefile, type :
X
X$ xmkmf
X$ make Makefiles
X$ make
X
XTo build using the Makefile.std, type "make -f Makefile.std".
X
XThe manual page can be formatted by typing "nroff -man lyap.man > lyap.doc".
X
XINSTALL
X-------
X
XTo install lyap, copy the lyap binary to the desired location (the sample
Xmakefile puts it in /usr/local/bin, while the Imakefile will put it in
X/usr/bin/X11). A sample colormap file has been provided for you. I can't
Xrecall where i got this. I think it was part of the fractint distribution.
XAnyway, you can copy the file lyap.map to $HOME/.lyapmap and it will act
Xas an additional colormap (several colormaps are provided internal to lyap).
XCopy the formatted man page to wherever you keep your local doc (i use
X/usr/man/cat.LOCAL for imaging software), then add that location
Xto your MANPATH.
X
XSome "interesting" runs of lyap are included as simple shell scripts in the
X"params" subdirectory.
X
X
XIdeas, comments, additions, deletions, suggestions, bug reports, code review,...
Xe-mail Ronald Record at rr@sco.com or ...uunet!sco!rr.
X
END_OF_FILE
  if test 3330 -ne `wc -c <'lyap/README'`; then
    echo shar: \"'lyap/README'\" unpacked with wrong size!
  fi
  # end of 'lyap/README'
fi
if test -f 'lyap/TAGS' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'lyap/TAGS'\"
else
  echo shar: Extracting \"'lyap/TAGS'\" \(3239 characters\)
  sed "s/^X//" >'lyap/TAGS' <<'END_OF_FILE'
XABS               41 lyap.h           #define ABS(a)	(((a)<0) ? (0-(a)) : (a) )
XCleanup           59 lyap.c           Cleanup() {
XClear           1181 lyap.c           Clear() 
XCreateXorGC     1202 lyap.c           CreateXorGC()
XCycle_frames     623 lyap.c           Cycle_frames()
XDestroy_frame   1390 lyap.c           Destroy_frame()
XEndRubberBand   1276 lyap.c           void 
XGetkey           632 lyap.c           Getkey(event)
XMax               43 lyap.h           #define Max(x,y) ((x > y)?x:y)
XMin               42 lyap.h           #define Min(x,y) ((x < y)?x:y)
XRedraw           944 lyap.c           Redraw() 
XSetupCorners    1231 lyap.c           SetupCorners(corners, data)
XStartRubberBand 1214 lyap.c           void 
XTrackRubberBand 1247 lyap.c           void 
Xcheck_params     558 lyap.c           check_params(mapnum, parnum)
Xcircle           312 lyap.c           circle(x, r)            /* sin() hump or sorta like the circle map */
Xcomplyap         175 lyap.c           complyap()
Xdcircle          321 lyap.c           dcircle(x, r)            /* derivative of the "sin() hump" */
Xddoublelog       371 lyap.c           ddoublelog(x, r)        /* derivative of the double logistic */
Xdleftlog         340 lyap.c           dleftlog(x, r)            /* derivative of the left skewed logistic */
Xdlogistic        305 lyap.c           dlogistic(x, r)            /* the derivative of logistic map */
Xdoublelog        361 lyap.c           doublelog(x, r)            /* double logistic */
Xdrightlog        354 lyap.c           drightlog(x, r)            /* derivative of the right skewed logistic */
Xfreemem         1463 lyap.c           freemem()
Xgo_back         1350 lyap.c           go_back() 
Xgo_down         1339 lyap.c           go_down() 
Xgo_init         1382 lyap.c           go_init() 
Xinit_canvas      412 lyap.c           init_canvas()
Xinit_data        381 lyap.c           init_data()
Xjumpwin         1360 lyap.c           jumpwin()
Xleftlog          330 lyap.c           leftlog(x, r)            /* left skewed logistic */
Xlogistic         298 lyap.c           logistic(x, r)            /* the familiar logistic map */
Xmain              63 lyap.c           main(ac, av)
Xmain_event       145 lyap.c           main_event()
Xparseargs        434 lyap.c           parseargs(ac, av)
Xprint_help      1407 lyap.c           print_help() 
Xprint_values    1435 lyap.c           print_values() 
Xrecalc          1166 lyap.c           recalc() 
Xredisplay        864 lyap.c           void 
Xredraw           914 lyap.c           redraw(exparray, index, cont)
Xresize           878 lyap.c           resize()
Xrestor_params   1086 lyap.c           restor_params() 
Xrestor_picture  1128 lyap.c           restor_picture() {
Xrightlog         347 lyap.c           rightlog(x, r)            /* right skewed logistic */
Xsave_to_file    1010 lyap.c           save_to_file() 
Xsendpoint        819 lyap.c           sendpoint(expo)
Xset_new_params  1312 lyap.c           set_new_params(w, data)
Xsetforcing      1483 lyap.c           setforcing()
Xsetupmem        1470 lyap.c           setupmem()
Xshow_defaults   1190 lyap.c           show_defaults() 
Xstore_to_file    958 lyap.c           store_to_file() 
Xusage            584 lyap.c           usage()
END_OF_FILE
  if test 3239 -ne `wc -c <'lyap/TAGS'`; then
    echo shar: \"'lyap/TAGS'\" unpacked with wrong size!
  fi
  # end of 'lyap/TAGS'
fi
if test -f 'lyap/lib/Imakefile' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'lyap/lib/Imakefile'\"
else
  echo shar: Extracting \"'lyap/lib/Imakefile'\" \(580 characters\)
  sed "s/^X//" >'lyap/lib/Imakefile' <<'END_OF_FILE'
X
X#	Uncomment the following line if you want to delay when color spinning
X          DELAY = -DUSE_DELAY
X# If you are using the delay functionality (above line uncommented), then
X# comment out the next line if you want to use nap() rather than itimers
X          SLEEP = -DHAS_ITIMER
X# and uncomment the next line if you're using nap() on an SCO system
X#        NAPLIB = -lx
X
X DEFINES = $(DELAY) $(SLEEP)
XINCLUDES = -I.
X
X    SRCS = buffer.c hls2rgb.c init_color.c spin.c
X
X    OBJS = buffer.o hls2rgb.o init_color.o spin.o
X
XNormalLibraryObjectRule()
XNormalLibraryTarget(Xrr, $(OBJS))
END_OF_FILE
  if test 580 -ne `wc -c <'lyap/lib/Imakefile'`; then
    echo shar: \"'lyap/lib/Imakefile'\" unpacked with wrong size!
  fi
  # end of 'lyap/lib/Imakefile'
fi
if test -f 'lyap/lib/Makefile.std' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'lyap/lib/Makefile.std'\"
else
  echo shar: Extracting \"'lyap/lib/Makefile.std'\" \(325 characters\)
  sed "s/^X//" >'lyap/lib/Makefile.std' <<'END_OF_FILE'
XCC = cc 
X#DEBUG =  -g
X##
X## Compiler Defines
X## 
XDEFINES = -DUSE_DELAY -DHAS_ITIMER
X
XCFLAGS = -O $(DEBUG) $(DEFINES)
X
XOBJS = bezier.o bspline.o buffer.o clip.o hls2rgb.o init_color.o spin.o
X
X.o:.c
X
Xall: libXrr.a
X
Xcp install:	all
X
Xclean:
X	rm -f *.o
X
Xclobber:	clean
X	rm -f libXrr.a
X
XlibXrr.a : $(OBJS)
X	ar rv libXrr.a $(OBJS)
X
END_OF_FILE
  if test 325 -ne `wc -c <'lyap/lib/Makefile.std'`; then
    echo shar: \"'lyap/lib/Makefile.std'\" unpacked with wrong size!
  fi
  # end of 'lyap/lib/Makefile.std'
fi
if test -f 'lyap/lib/Package' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'lyap/lib/Package'\"
else
  echo shar: Extracting \"'lyap/lib/Package'\" \(227 characters\)
  sed "s/^X//" >'lyap/lib/Package' <<'END_OF_FILE'
Xecho "Making tags files"
Xmake tags
Xecho "Backing up previous shar file, if any"
X[ -f lib.shar ] && mv lib.shar lib.shar-
Xecho "Creating new shar file"
Xshar Imakefile Package *.c *.h tags TAGS colormaps/* > lib.shar
Xecho "Done"
END_OF_FILE
  if test 227 -ne `wc -c <'lyap/lib/Package'`; then
    echo shar: \"'lyap/lib/Package'\" unpacked with wrong size!
  fi
  # end of 'lyap/lib/Package'
fi
if test -f 'lyap/lib/TAGS' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'lyap/lib/TAGS'\"
else
  echo shar: Extracting \"'lyap/lib/TAGS'\" \(1148 characters\)
  sed "s/^X//" >'lyap/lib/TAGS' <<'END_OF_FILE'
XBufferInPixmap    19 buffer.c         BufferInPixmap(display, pixmap, contexts, points, col, x, y)
XBufferPoint       38 buffer.c         BufferPoint(display, window, pixmap, contexts, points, col, x, y)
XDemoSpin         103 spin.c           DemoSpin(display, colormap, colors, start_color, num_colors, delay, factor)
XFlushBuffer       89 buffer.c         FlushBuffer(display, window, pixmap, contexts, points, mincolor, maxcolor)
XFlushPixmap       71 buffer.c         FlushPixmap(display, pixmap, contexts, points, mincolor, maxcolor)
XInitBuffer        60 buffer.c         InitBuffer(points, maxcolor)
XSpin              72 spin.c           Spin(display, colormap, colors, start_color, num_colors, delay, dir)
XTimer             30 spin.c           void Timer(n)   /* waits for 'n' milliseconds (from xv-2.21 source) */
Xhls2rgb           39 hls2rgb.c        void hls2rgb( hue_light_sat, rgb )
Xhue_value         97 hls2rgb.c        static double hue_value( n1, n2, hue )
Xinit_color        26 init_color.c     init_color(display, win, cmap, Colors, s_col, min, n_cols, wheel, prog, res, n)
Xonalarm           25 spin.c           static void onalarm() {
END_OF_FILE
  if test 1148 -ne `wc -c <'lyap/lib/TAGS'`; then
    echo shar: \"'lyap/lib/TAGS'\" unpacked with wrong size!
  fi
  # end of 'lyap/lib/TAGS'
fi
if test -f 'lyap/lib/hls2rgb.c' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'lyap/lib/hls2rgb.c'\"
else
  echo shar: Extracting \"'lyap/lib/hls2rgb.c'\" \(3436 characters\)
  sed "s/^X//" >'lyap/lib/hls2rgb.c' <<'END_OF_FILE'
X/*************************************************************************
X *                                                                       *
X *  Copyright (c) 1992, 1993 Ronald Joe Record                           *
X *                                                                       *
X *  All rights reserved. No part of this program or publication may be   *
X *  reproduced, transmitted, transcribed, stored in a retrieval system,  *
X *  or translated into any language or computer language, in any form or *
X *  by any means, electronic, mechanical, magnetic, optical, chemical,   *
X *  biological, or otherwise, without the prior written permission of:   *
X *                                                                       *
X *      Ronald Joe Record (408) 458-3718                                 *
X *      212 Owen St., Santa Cruz, California 95062 USA                   *
X *                                                                       *
X *************************************************************************/
X
X/* From colorwheel.c which is part of color3 by Hiram Clawson (hiramc@sco.com)*/
X
X#include	<X11/Xlib.h>
X#include	<X11/Xutil.h>
X
X#ifdef _NO_PROTO
Xstatic double hue_value();
X#else
Xstatic double hue_value( double, double, double );
X#endif
X
X/***********************************************************************
X * NAME: hls2rgb() from foley and van dam, fundamentals of interactive ...
X *		page 619
X *
X * PURPOSE: Convert hls[0..3600][0..1000][0..1000] space to rgb space
X *	That is the Hue, Lightness, Saturation color model.
X *	Which is two cones, base to base, the bottom tip is black, the
X *	top tip is white, the middle (bases) around the outside is a color
X *	wheel.  The axis of this solid is Lightness.  Hue is the angular
X *	measure around the cones, and the saturation is the radius from the
X *	axis towards the surface of the cones.
X ***********************************************************************/
Xvoid hls2rgb( hue_light_sat, rgb )
Xint hue_light_sat[3];
Xint rgb[3];		/*	Each in range [0..65535]	*/
X{
X	double r, g, b, h, l, s;
X	double m1, m2;
X
X	h = (double) hue_light_sat[0] / 10.0;
X	l = (double) hue_light_sat[1] / 1000.0;
X	s = (double) hue_light_sat[2] / 1000.0;
X
X	if ( l < 0.5 )
X	{
X		m2 = l * ( 1.0 + s );
X	}
X	else
X	{
X		m2 = l + s - (l * s);
X	}
X	m1 = (2.0 * l) - m2;
X	if ( (s + 1.0) == 1.0 )
X	{
X		if ( (h + 1.0) < 1.0 )
X		{
X			r = g = b = l;
X		}
X		else
X		{
X			r = g = b = 0.0;
X		}
X	}
X	else
X	{
X		r = hue_value( m1, m2, h - 120.0 );	/* changed this so that 0 is blue */
X		g = hue_value( m1, m2, h );			/* 120 is green, and -120 is red */
X		b = hue_value( m1, m2, h + 120.0 );	/* rr@sco.com 15-Feb-93 */
X	}
X	rgb[0] = 65535.0 * r;
X	rgb[1] = 65535.0 * g;
X	rgb[2] = 65535.0 * b;
X	if ( rgb[0] > 65535 )
X		rgb[0] = 65535;
X	else if ( rgb[0] < 0 )
X		rgb[0] = 0;
X
X	if ( rgb[1] > 65535 )
X		rgb[1] = 65535;
X	else if ( rgb[1] < 0 )
X		rgb[1] = 0;
X
X	if ( rgb[2] > 65535 )
X		rgb[2] = 65535;
X	else if ( rgb[2] < 0 )
X		rgb[2] = 0;
X
X	return;
X}	/* end of void hls2rgb( hue_light_sat, rgb )	*/
X
Xstatic double hue_value( n1, n2, hue )
Xdouble n1;
Xdouble n2;
Xdouble hue;
X{
X	if ( hue > 360.0 )
X		hue -= 360.0;
X	if ( hue < 0.0 )
X		hue += 360.0;
X	if ( hue < 60.0 )
X		return  ( n1 + ((n2 - n1)*hue/60.0));
X	else if ( hue < 180.0 )
X		return ( n2 );
X	else if ( hue < 240.0 )
X		return ( n1 + ((n2 - n1)*(240.0 - hue)/60.0));
X	else
X		return( n1 );
X}	/* end of double hue_value( n1, n2, hue )	*/
END_OF_FILE
  if test 3436 -ne `wc -c <'lyap/lib/hls2rgb.c'`; then
    echo shar: \"'lyap/lib/hls2rgb.c'\" unpacked with wrong size!
  fi
  # end of 'lyap/lib/hls2rgb.c'
fi
if test -f 'lyap/lib/libXrr.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'lyap/lib/libXrr.h'\"
else
  echo shar: Extracting \"'lyap/lib/libXrr.h'\" \(1305 characters\)
  sed "s/^X//" >'lyap/lib/libXrr.h' <<'END_OF_FILE'
X/*************************************************************************
X *                                                                       *
X *  Copyright (c) 1992, 1993 Ronald Joe Record                           *
X *                                                                       *
X *  All rights reserved. No part of this program or publication may be   *
X *  reproduced, transmitted, transcribed, stored in a retrieval system,  *
X *  or translated into any language or computer language, in any form or *
X *  by any means, electronic, mechanical, magnetic, optical, chemical,   *
X *  biological, or otherwise, without the prior written permission of:   *
X *                                                                       *
X *      Ronald Joe Record (408) 458-3718                                 *
X *      212 Owen St., Santa Cruz, California 95062 USA                   *
X *                                                                       *
X *************************************************************************/
X
X#ifndef LIBXRR_H
X
X#include <X11/Xlib.h>
X
X#define MAXWHEELS 15
X#define RGB_MAX 65000
X#define MAXPOINTS  1024
X#define MAXCOLOR 256
X
Xtypedef struct points_t {
X	XPoint data[MAXCOLOR][MAXPOINTS];
X	int npoints[MAXCOLOR];
X	} points_t;
X
X#define LIBXRR_H
X#endif
END_OF_FILE
  if test 1305 -ne `wc -c <'lyap/lib/libXrr.h'`; then
    echo shar: \"'lyap/lib/libXrr.h'\" unpacked with wrong size!
  fi
  # end of 'lyap/lib/libXrr.h'
fi
if test -f 'lyap/lib/tags' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'lyap/lib/tags'\"
else
  echo shar: Extracting \"'lyap/lib/tags'\" \(800 characters\)
  sed "s/^X//" >'lyap/lib/tags' <<'END_OF_FILE'
XBufferInPixmap	buffer.c	?^BufferInPixmap(display, pixmap, contexts, points, ?
XBufferPoint	buffer.c	?^BufferPoint(display, window, pixmap, contexts, poi?
XDemoSpin	spin.c	?^DemoSpin(display, colormap, colors, start_color, n?
XFlushBuffer	buffer.c	?^FlushBuffer(display, window, pixmap, contexts, poi?
XFlushPixmap	buffer.c	?^FlushPixmap(display, pixmap, contexts, points, min?
XInitBuffer	buffer.c	?^InitBuffer(points, maxcolor)$?
XSpin	spin.c	?^Spin(display, colormap, colors, start_color, num_c?
XTimer	spin.c	?^void Timer(n)   /* waits for 'n' milliseconds (fro?
Xhls2rgb	hls2rgb.c	?^void hls2rgb( hue_light_sat, rgb )$?
Xhue_value	hls2rgb.c	?^static double hue_value( n1, n2, hue )$?
Xinit_color	init_color.c	?^init_color(display, win, cmap, Colors, s_col, min,?
Xonalarm	spin.c	?^static void onalarm() {$?
END_OF_FILE
  if test 800 -ne `wc -c <'lyap/lib/tags'`; then
    echo shar: \"'lyap/lib/tags'\" unpacked with wrong size!
  fi
  # end of 'lyap/lib/tags'
fi
if test -f 'lyap/lyap.map' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'lyap/lyap.map'\"
else
  echo shar: Extracting \"'lyap/lyap.map'\" \(3072 characters\)
  sed "s/^X//" >'lyap/lyap.map' <<'END_OF_FILE'
X  0   0   0
X  0   0 120
X  0  80 152
X  0 108 184
X 60 144 180
X124 180 176
X188 216 172
X252 252 168
X252 252   0
X252 168   0
X252  84   0
X252   0   0
X168   0   0
X 84   0   0
X252 252  84
X252  84   0
X240  40  20
X244 108  16
X248 180   8
X252 252   0
X252 248  40
X252 244  84
X252 240 124
X252 236 168
X252 232 212
X236 216 196
X216 200 180
X196 180 164
X176 164 148
X156 144 132
X136 128 116
X120 108 100
X100  92  84
X 80  72  68
X 60  56  52
X 40  36  36
X 20  20  20
X  0   0   0
X 48   0   0
X100   0   0
X148   0   0
X200   0   0
X252   0   0
X192   0   0
X128   0   0
X 64   0   0
X  0   0   0
X 16  12  16
X 48  44  28
X 80  80  40
X116 112  52
X148 148  68
X184 180  80
X216 216  92
X252 252 108
X248 244 120
X244 236 132
X236 228 144
X232 220 156
X228 208 172
X220 200 184
X216 192 196
X228 212 208
X240 232 224
X252 252 240
X168 168 160
X 84  84  80
X  0   0   0
X  0   4  12
X  4   8  28
X  8  16  44
X  8  16  52
X 12  16  60
X 12  16  68
X 16  16  76
X 20  20  88
X 20  64 108
X 20 112 128
X 24 156 148
X 24 204 168
X 28 252 192
X 28 216 152
X 28 180 156
X 28 144 156
X 28 108 160
X 28  72 160
X 24  32 164
X 12  16 148
X  0   0 132
X 40  40 152
X 84  84 172
X124 124 192
X168 168 212
X208 208 232
X252 252 252
X252 228 232
X252 204 212
X252 180 188
X252 156 168
X252 132 144
X252 108 124
X252  84 100
X216  72  88
X180  60  72
X144  48  60
X108  36  44
X 72  24  32
X 36  12  16
X  0   0   0
X 20  20  20
X 44  44  44
X 68  68  68
X 88  88  88
X112 112 112
X136 136 136
X160 160 160
X180 180 180
X204 204 204
X228 228 228
X252 252 252
X252 252 216
X252 252 180
X252 252 144
X252 252 108
X252 252  72
X252 252  36
X252 252   0
X252 232  40
X252 208  80
X252 188 120
X252 164 164
X252 140 140
X252 116 116
X252  92  92
X252  72  72
X252  48  48
X252  24  24
X252  76  24
X252 128  28
X252 180  32
X252 232  36
X252 236  88
X252 240 144
X252 244 196
X252 252 252
X248 236 228
X244 220 204
X240 204 180
X236 184 152
X232 168 128
X228 152 104
X224 132  76
X220 116  52
X216 100  28
X212  80   0
X192  76  28
X172  72  56
X148  68  84
X128  60 116
X108  56 144
X 84  52 172
X 64  48 200
X 40  40 232
X 84  80 232
X124 120 236
X168 160 236
X208 200 236
X252 240 240
X228 216 216
X200 188 192
X172 164 164
X148 136 140
X120 112 112
X 92  84  88
X 68  60  60
X 40  32  36
X 12   4   8
X 28   8  20
X 44  12  32
X 60  16  40
X 72  20  52
X 88  24  64
X104  28  72
X120  32  84
X252 252  96
X252 236 108
X252 216 124
X252 196 136
X252 180 152
X252 160 164
X252 140 180
X252 152 172
X252 168 164
X252 184 156
X252 200 148
X252 216 140
X252 232 132
X252 240 192
X252 252 252
X 24  28 248
X 52  56 244
X 80  84 236
X104 112 232
X132 140 228
X160 168 220
X172 180 224
X188 196 228
X204 208 236
X220 224 240
X236 236 244
X252 252 252
X252 252 232
X252 252 208
X252 252 188
X252 252 164
X252 252 144
X252 252 120
X252 224 108
X248 192  92
X244 160  76
X240 128  60
X236  96  48
X232  64  32
X228  32  16
X224   0   0
X200   0   0
X176   0   0
X152   0   0
X128   0   0
X100   0   0
X 76   0   0
X 52   0   0
X 28   0   0
X  0   0   0
X240 220 112
X240 224 136
X240 228 156
X240 236 180
X240 240 200
X252 252 212
X232 192 180
X204 144 152
X176  96 120
X148  48  92
X120   0  60
X152  40  84
X184  80 112
X216 120 136
X252 160 164
X  0   0   0
X240 240 240
X  0   0   0
X120 120 120
X140  80  52
X212 120  80
X252 224 140
END_OF_FILE
  if test 3072 -ne `wc -c <'lyap/lyap.map'`; then
    echo shar: \"'lyap/lyap.map'\" unpacked with wrong size!
  fi
  # end of 'lyap/lyap.map'
fi
if test -f 'lyap/params/asharpe.1' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'lyap/params/asharpe.1'\"
else
  echo shar: Extracting \"'lyap/params/asharpe.1'\" \(76 characters\)
  sed "s/^X//" >'lyap/params/asharpe.1' <<'END_OF_FILE'
Xlyap -a3.75 -b3.299999 -w0.05 -h0.05 -D200 -S100 -fabaabbaaabbb -H480 -W640
END_OF_FILE
  if test 76 -ne `wc -c <'lyap/params/asharpe.1'`; then
    echo shar: \"'lyap/params/asharpe.1'\" unpacked with wrong size!
  fi
  # end of 'lyap/params/asharpe.1'
fi
if test -f 'lyap/params/asharpe.2' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'lyap/params/asharpe.2'\"
else
  echo shar: Extracting \"'lyap/params/asharpe.2'\" \(42 characters\)
  sed "s/^X//" >'lyap/params/asharpe.2' <<'END_OF_FILE'
Xlyap -a3.8 -b3.2 -h.05 -w.05 -fbbbbbaaaaa
END_OF_FILE
  if test 42 -ne `wc -c <'lyap/params/asharpe.2'`; then
    echo shar: \"'lyap/params/asharpe.2'\" unpacked with wrong size!
  fi
  # end of 'lyap/params/asharpe.2'
fi
if test -f 'lyap/params/asharpe.3' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'lyap/params/asharpe.3'\"
else
  echo shar: Extracting \"'lyap/params/asharpe.3'\" \(71 characters\)
  sed "s/^X//" >'lyap/params/asharpe.3' <<'END_OF_FILE'
Xlyap -a 3.4 -b 3.04 -w .5 -h .5 -f abbbbbbbbb -W640 -H480 -S500 -D1000
END_OF_FILE
  if test 71 -ne `wc -c <'lyap/params/asharpe.3'`; then
    echo shar: \"'lyap/params/asharpe.3'\" unpacked with wrong size!
  fi
  # end of 'lyap/params/asharpe.3'
fi
if test -f 'lyap/params/asharpe.4' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'lyap/params/asharpe.4'\"
else
  echo shar: Extracting \"'lyap/params/asharpe.4'\" \(64 characters\)
  sed "s/^X//" >'lyap/params/asharpe.4' <<'END_OF_FILE'
Xlyap -a3.5 -b3.0 -w0.2 -h0.2 -D600 -S300 -faaabbbab -H480 -W640
END_OF_FILE
  if test 64 -ne `wc -c <'lyap/params/asharpe.4'`; then
    echo shar: \"'lyap/params/asharpe.4'\" unpacked with wrong size!
  fi
  # end of 'lyap/params/asharpe.4'
fi
if test -f 'lyap/params/asharpe.5' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'lyap/params/asharpe.5'\"
else
  echo shar: Extracting \"'lyap/params/asharpe.5'\" \(58 characters\)
  sed "s/^X//" >'lyap/params/asharpe.5' <<'END_OF_FILE'
Xlyap -a3.55667 -b3.2 -h.05 -w.05 -fbbbbbaaaaa -H480 -W640
END_OF_FILE
  if test 58 -ne `wc -c <'lyap/params/asharpe.5'`; then
    echo shar: \"'lyap/params/asharpe.5'\" unpacked with wrong size!
  fi
  # end of 'lyap/params/asharpe.5'
fi
if test -f 'lyap/params/asharpe.6' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'lyap/params/asharpe.6'\"
else
  echo shar: Extracting \"'lyap/params/asharpe.6'\" \(62 characters\)
  sed "s/^X//" >'lyap/params/asharpe.6' <<'END_OF_FILE'
Xlyap -a3.79 -b3.22 -h.02999 -w.02999 -fbbbbbaaaaa -H480 -W640
END_OF_FILE
  if test 62 -ne `wc -c <'lyap/params/asharpe.6'`; then
    echo shar: \"'lyap/params/asharpe.6'\" unpacked with wrong size!
  fi
  # end of 'lyap/params/asharpe.6'
fi
if test -f 'lyap/params/asharpe.7' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'lyap/params/asharpe.7'\"
else
  echo shar: Extracting \"'lyap/params/asharpe.7'\" \(76 characters\)
  sed "s/^X//" >'lyap/params/asharpe.7' <<'END_OF_FILE'
Xlyap -a3.7999 -b3.299999 -w0.2 -h0.2 -D300 -S150 -fabaabbaaabbb -H480 -W640
END_OF_FILE
  if test 76 -ne `wc -c <'lyap/params/asharpe.7'`; then
    echo shar: \"'lyap/params/asharpe.7'\" unpacked with wrong size!
  fi
  # end of 'lyap/params/asharpe.7'
fi
if test -f 'lyap/params/asharpe.8' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'lyap/params/asharpe.8'\"
else
  echo shar: Extracting \"'lyap/params/asharpe.8'\" \(73 characters\)
  sed "s/^X//" >'lyap/params/asharpe.8' <<'END_OF_FILE'
Xlyap -a3.89 -b3.22 -h.028 -w.02999 -fbbbbbaaaaa -S600 -D1000 -H480 -W640
END_OF_FILE
  if test 73 -ne `wc -c <'lyap/params/asharpe.8'`; then
    echo shar: \"'lyap/params/asharpe.8'\" unpacked with wrong size!
  fi
  # end of 'lyap/params/asharpe.8'
fi
if test -f 'lyap/params/asharpe.9' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'lyap/params/asharpe.9'\"
else
  echo shar: Extracting \"'lyap/params/asharpe.9'\" \(54 characters\)
  sed "s/^X//" >'lyap/params/asharpe.9' <<'END_OF_FILE'
Xlyap -a3.2 -b3.7 -w0.05 -h.005 -f abbbbaa -H700 -W800
END_OF_FILE
  if test 54 -ne `wc -c <'lyap/params/asharpe.9'`; then
    echo shar: \"'lyap/params/asharpe.9'\" unpacked with wrong size!
  fi
  # end of 'lyap/params/asharpe.9'
fi
if test -f 'lyap/params/bigbug' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'lyap/params/bigbug'\"
else
  echo shar: Extracting \"'lyap/params/bigbug'\" \(99 characters\)
  sed "s/^X//" >'lyap/params/bigbug' <<'END_OF_FILE'
Xlyap -f abbba -D 800 -S 800 -W 640 -H 480 -M -0.85 -a 3.813906 -w 0.050135 -b 3.815211 -h 0.049336
END_OF_FILE
  if test 99 -ne `wc -c <'lyap/params/bigbug'`; then
    echo shar: \"'lyap/params/bigbug'\" unpacked with wrong size!
  fi
  # end of 'lyap/params/bigbug'
fi
if test -f 'lyap/params/catsup' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'lyap/params/catsup'\"
else
  echo shar: Extracting \"'lyap/params/catsup'\" \(95 characters\)
  sed "s/^X//" >'lyap/params/catsup' <<'END_OF_FILE'
Xlyap -f aaaaaabbbbbb -D 500 -S 500 -M -0.85 -a 3.318053 -w 0.108585 -b 3.692203 -h 0.064125 $*
END_OF_FILE
  if test 95 -ne `wc -c <'lyap/params/catsup'`; then
    echo shar: \"'lyap/params/catsup'\" unpacked with wrong size!
  fi
  # end of 'lyap/params/catsup'
fi
if test -f 'lyap/params/circle-12' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'lyap/params/circle-12'\"
else
  echo shar: Extracting \"'lyap/params/circle-12'\" \(64 characters\)
  sed "s/^X//" >'lyap/params/circle-12' <<'END_OF_FILE'
X
Xlyap -f aaaaaabbbbbb -m 1 -D 400 -S 200 -W 256 -H 256 -M -0.85
END_OF_FILE
  if test 64 -ne `wc -c <'lyap/params/circle-12'`; then
    echo shar: \"'lyap/params/circle-12'\" unpacked with wrong size!
  fi
  # end of 'lyap/params/circle-12'
fi
if test -f 'lyap/params/circle-12test' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'lyap/params/circle-12test'\"
else
  echo shar: Extracting \"'lyap/params/circle-12test'\" \(64 characters\)
  sed "s/^X//" >'lyap/params/circle-12test' <<'END_OF_FILE'
X
Xlyap -f aaaaaabbbbbb -m 1 -D 400 -S 200 -W 256 -H 256 -M -0.85
END_OF_FILE
  if test 64 -ne `wc -c <'lyap/params/circle-12test'`; then
    echo shar: \"'lyap/params/circle-12test'\" unpacked with wrong size!
  fi
  # end of 'lyap/params/circle-12test'
fi
if test -f 'lyap/params/circle-2' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'lyap/params/circle-2'\"
else
  echo shar: Extracting \"'lyap/params/circle-2'\" \(48 characters\)
  sed "s/^X//" >'lyap/params/circle-2' <<'END_OF_FILE'
X
Xlyap -m 1 -D 400 -S 200 -W 256 -H 256 -M -0.85
END_OF_FILE
  if test 48 -ne `wc -c <'lyap/params/circle-2'`; then
    echo shar: \"'lyap/params/circle-2'\" unpacked with wrong size!
  fi
  # end of 'lyap/params/circle-2'
fi
if test -f 'lyap/params/circle-8' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'lyap/params/circle-8'\"
else
  echo shar: Extracting \"'lyap/params/circle-8'\" \(60 characters\)
  sed "s/^X//" >'lyap/params/circle-8' <<'END_OF_FILE'
X
Xlyap -f abbabaab -m 1 -D 400 -S 200 -W 256 -H 256 -M -0.85
END_OF_FILE
  if test 60 -ne `wc -c <'lyap/params/circle-8'`; then
    echo shar: \"'lyap/params/circle-8'\" unpacked with wrong size!
  fi
  # end of 'lyap/params/circle-8'
fi
if test -f 'lyap/params/manray' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'lyap/params/manray'\"
else
  echo shar: Extracting \"'lyap/params/manray'\" \(102 characters\)
  sed "s/^X//" >'lyap/params/manray' <<'END_OF_FILE'
Xlyap -f abbabaab -D 800 -S 200 -W 400 -H 350 -M -0.85 -I 0.05 -a 3.91 -w 0.0899999999 -b 3.28 -h 0.35
END_OF_FILE
  if test 102 -ne `wc -c <'lyap/params/manray'`; then
    echo shar: \"'lyap/params/manray'\" unpacked with wrong size!
  fi
  # end of 'lyap/params/manray'
fi
if test -f 'lyap/params/period-12' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'lyap/params/period-12'\"
else
  echo shar: Extracting \"'lyap/params/period-12'\" \(59 characters\)
  sed "s/^X//" >'lyap/params/period-12' <<'END_OF_FILE'
X
Xlyap -f aaaaaabbbbbb -D 400 -S 200 -W 256 -H 256 -M -0.85
END_OF_FILE
  if test 59 -ne `wc -c <'lyap/params/period-12'`; then
    echo shar: \"'lyap/params/period-12'\" unpacked with wrong size!
  fi
  # end of 'lyap/params/period-12'
fi
if test -f 'lyap/params/period-2' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'lyap/params/period-2'\"
else
  echo shar: Extracting \"'lyap/params/period-2'\" \(43 characters\)
  sed "s/^X//" >'lyap/params/period-2' <<'END_OF_FILE'
X
Xlyap -D 400 -S 200 -W 256 -H 256 -M -0.85
END_OF_FILE
  if test 43 -ne `wc -c <'lyap/params/period-2'`; then
    echo shar: \"'lyap/params/period-2'\" unpacked with wrong size!
  fi
  # end of 'lyap/params/period-2'
fi
if test -f 'lyap/params/period-4' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'lyap/params/period-4'\"
else
  echo shar: Extracting \"'lyap/params/period-4'\" \(51 characters\)
  sed "s/^X//" >'lyap/params/period-4' <<'END_OF_FILE'
X
Xlyap -f abbb -D 400 -S 200 -W 256 -H 256 -M -0.85
END_OF_FILE
  if test 51 -ne `wc -c <'lyap/params/period-4'`; then
    echo shar: \"'lyap/params/period-4'\" unpacked with wrong size!
  fi
  # end of 'lyap/params/period-4'
fi
if test -f 'lyap/params/period-8' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'lyap/params/period-8'\"
else
  echo shar: Extracting \"'lyap/params/period-8'\" \(55 characters\)
  sed "s/^X//" >'lyap/params/period-8' <<'END_OF_FILE'
X
Xlyap -f abbabaab -D 400 -S 200 -W 256 -H 256 -M -0.85
END_OF_FILE
  if test 55 -ne `wc -c <'lyap/params/period-8'`; then
    echo shar: \"'lyap/params/period-8'\" unpacked with wrong size!
  fi
  # end of 'lyap/params/period-8'
fi
if test -f 'lyap/params/skewed-12' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'lyap/params/skewed-12'\"
else
  echo shar: Extracting \"'lyap/params/skewed-12'\" \(64 characters\)
  sed "s/^X//" >'lyap/params/skewed-12' <<'END_OF_FILE'
X
Xlyap -m 2 -f aaaaaabbbbbb -D 400 -S 200 -W 256 -H 256 -M -0.85
END_OF_FILE
  if test 64 -ne `wc -c <'lyap/params/skewed-12'`; then
    echo shar: \"'lyap/params/skewed-12'\" unpacked with wrong size!
  fi
  # end of 'lyap/params/skewed-12'
fi
if test -f 'lyap/params/skewed-2' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'lyap/params/skewed-2'\"
else
  echo shar: Extracting \"'lyap/params/skewed-2'\" \(48 characters\)
  sed "s/^X//" >'lyap/params/skewed-2' <<'END_OF_FILE'
X
Xlyap -m 2 -D 400 -S 200 -W 256 -H 256 -M -0.85
END_OF_FILE
  if test 48 -ne `wc -c <'lyap/params/skewed-2'`; then
    echo shar: \"'lyap/params/skewed-2'\" unpacked with wrong size!
  fi
  # end of 'lyap/params/skewed-2'
fi
if test -f 'lyap/params/skewed-4' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'lyap/params/skewed-4'\"
else
  echo shar: Extracting \"'lyap/params/skewed-4'\" \(56 characters\)
  sed "s/^X//" >'lyap/params/skewed-4' <<'END_OF_FILE'
X
Xlyap -m 2 -f abbb -D 400 -S 200 -W 256 -H 256 -M -0.85
END_OF_FILE
  if test 56 -ne `wc -c <'lyap/params/skewed-4'`; then
    echo shar: \"'lyap/params/skewed-4'\" unpacked with wrong size!
  fi
  # end of 'lyap/params/skewed-4'
fi
if test -f 'lyap/params/skewed-8' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'lyap/params/skewed-8'\"
else
  echo shar: Extracting \"'lyap/params/skewed-8'\" \(61 characters\)
  sed "s/^X//" >'lyap/params/skewed-8' <<'END_OF_FILE'
X
Xlyap -m 2 -f abbabaab  -D 400 -S 200 -W 256 -H 256 -M -0.85
END_OF_FILE
  if test 61 -ne `wc -c <'lyap/params/skewed-8'`; then
    echo shar: \"'lyap/params/skewed-8'\" unpacked with wrong size!
  fi
  # end of 'lyap/params/skewed-8'
fi
if test -f 'lyap/params/tbug' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'lyap/params/tbug'\"
else
  echo shar: Extracting \"'lyap/params/tbug'\" \(103 characters\)
  sed "s/^X//" >'lyap/params/tbug' <<'END_OF_FILE'
Xlyap -f aaaaaabbbbbbbbb -D 1600 -S 1600 -W 640 -H 480 -M -0.85 -a 3.82 -w 0.050135 -b 3.82 -h 0.049336
END_OF_FILE
  if test 103 -ne `wc -c <'lyap/params/tbug'`; then
    echo shar: \"'lyap/params/tbug'\" unpacked with wrong size!
  fi
  # end of 'lyap/params/tbug'
fi
if test -f 'lyap/params/zity' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'lyap/params/zity'\"
else
  echo shar: Extracting \"'lyap/params/zity'\" \(86 characters\)
  sed "s/^X//" >'lyap/params/zity' <<'END_OF_FILE'
Xlyap -f aaaaaabbbbbb -D 800 -S 400 -W 400 -H 350 -M -0.85 -a 2.5 -w 1.0 -b 3.0 -h 1.0
END_OF_FILE
  if test 86 -ne `wc -c <'lyap/params/zity'`; then
    echo shar: \"'lyap/params/zity'\" unpacked with wrong size!
  fi
  # end of 'lyap/params/zity'
fi
if test -f 'lyap/patchlevel.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'lyap/patchlevel.h'\"
else
  echo shar: Extracting \"'lyap/patchlevel.h'\" \(1183 characters\)
  sed "s/^X//" >'lyap/patchlevel.h' <<'END_OF_FILE'
X/*************************************************************************
X *                                                                       *
X *  Copyright (c) 1992, 1993 Ronald Joe Record                           *
X *                                                                       *
X *  All rights reserved. No part of this program or publication may be   *
X *  reproduced, transmitted, transcribed, stored in a retrieval system,  *
X *  or translated into any language or computer language, in any form or *
X *  by any means, electronic, mechanical, magnetic, optical, chemical,   *
X *  biological, or otherwise, without the prior written permission of:   *
X *                                                                       *
X *      Ronald Joe Record (408) 458-3718                                 *
X *      212 Owen St., Santa Cruz, California 95062 USA                   *
X *                                                                       *
X *************************************************************************/
X
X#ifndef PATCHLEVEL_H
X#define PATCHLEVEL_H
X
X#define LYAP_PATCHLEVEL 1
X
X#define LYAP_VERSION "@(#) patchlevel.h 9.3 93/08/23"
X#endif
END_OF_FILE
  if test 1183 -ne `wc -c <'lyap/patchlevel.h'`; then
    echo shar: \"'lyap/patchlevel.h'\" unpacked with wrong size!
  fi
  # end of 'lyap/patchlevel.h'
fi
if test -f 'lyap/tags' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'lyap/tags'\"
else
  echo shar: Extracting \"'lyap/tags'\" \(2233 characters\)
  sed "s/^X//" >'lyap/tags' <<'END_OF_FILE'
XABS	lyap.h	?^#define ABS(a)	(((a)<0) ? (0-(a)) : (a) )$?
XCleanup	lyap.c	?^Cleanup() {$?
XClear	lyap.c	?^Clear() $?
XCreateXorGC	lyap.c	?^CreateXorGC()$?
XCycle_frames	lyap.c	?^Cycle_frames()$?
XDestroy_frame	lyap.c	?^Destroy_frame()$?
XEndRubberBand	lyap.c	?^void $?
XGetkey	lyap.c	?^Getkey(event)$?
XMax	lyap.h	?^#define Max(x,y) ((x > y)?x:y)$?
XMin	lyap.h	?^#define Min(x,y) ((x < y)?x:y)$?
XMlyap	lyap.c	?^main(ac, av)$?
XRedraw	lyap.c	?^Redraw() $?
XSetupCorners	lyap.c	?^SetupCorners(corners, data)$?
XStartRubberBand	lyap.c	?^void $?
XTrackRubberBand	lyap.c	?^void $?
Xcheck_params	lyap.c	?^check_params(mapnum, parnum)$?
Xcircle	lyap.c	?^circle(x, r)            /* sin() hump or sorta lik?
Xcomplyap	lyap.c	?^complyap()$?
Xdcircle	lyap.c	?^dcircle(x, r)            /* derivative of the "sin?
Xddoublelog	lyap.c	?^ddoublelog(x, r)        /* derivative of the doubl?
Xdleftlog	lyap.c	?^dleftlog(x, r)            /* derivative of the lef?
Xdlogistic	lyap.c	?^dlogistic(x, r)            /* the derivative of lo?
Xdoublelog	lyap.c	?^doublelog(x, r)            /* double logistic */$?
Xdrightlog	lyap.c	?^drightlog(x, r)            /* derivative of the ri?
Xfreemem	lyap.c	?^freemem()$?
Xgo_back	lyap.c	?^go_back() $?
Xgo_down	lyap.c	?^go_down() $?
Xgo_init	lyap.c	?^go_init() $?
Xinit_canvas	lyap.c	?^init_canvas()$?
Xinit_data	lyap.c	?^init_data()$?
Xjumpwin	lyap.c	?^jumpwin()$?
Xleftlog	lyap.c	?^leftlog(x, r)            /* left skewed logistic *?
Xlogistic	lyap.c	?^logistic(x, r)            /* the familiar logistic?
Xmain_event	lyap.c	?^main_event()$?
Xparseargs	lyap.c	?^parseargs(ac, av)$?
Xprint_help	lyap.c	?^print_help() $?
Xprint_values	lyap.c	?^print_values() $?
Xrecalc	lyap.c	?^recalc() $?
Xredisplay	lyap.c	?^void $?
Xredraw	lyap.c	?^redraw(exparray, index, cont)$?
Xresize	lyap.c	?^resize()$?
Xrestor_params	lyap.c	?^restor_params() $?
Xrestor_picture	lyap.c	?^restor_picture() {$?
Xrightlog	lyap.c	?^rightlog(x, r)            /* right skewed logistic?
Xsave_to_file	lyap.c	?^save_to_file() $?
Xsendpoint	lyap.c	?^sendpoint(expo)$?
Xset_new_params	lyap.c	?^set_new_params(w, data)$?
Xsetforcing	lyap.c	?^setforcing()$?
Xsetupmem	lyap.c	?^setupmem()$?
Xshow_defaults	lyap.c	?^show_defaults() $?
Xstore_to_file	lyap.c	?^store_to_file() $?
Xusage	lyap.c	?^usage()$?
END_OF_FILE
  if test 2233 -ne `wc -c <'lyap/tags'`; then
    echo shar: \"'lyap/tags'\" unpacked with wrong size!
  fi
  # end of 'lyap/tags'
fi
echo shar: End of archive 3 \(of 3\).
cp /dev/null ark3isdone
MISSING=""
for I in 1 2 3 ; do
    if test ! -f ark${I}isdone ; then
	MISSING="${MISSING} ${I}"
    fi
done
if test "${MISSING}" = "" ; then
    echo You have unpacked all 3 archives.
    rm -f ark[1-9]isdone
else
    echo You still must unpack the following archives:
    echo "        " ${MISSING}
fi
exit 0
exit 0 # Just in case...
-- 
  // chris@Sterling.COM           | Send comp.sources.x submissions to:
\X/  Amiga - The only way to fly! |    sources-x@sterling.com
 "It's intuitively obvious to the |
  most casual observer..."        | GCS d+/-- p+ c++ l+ m+ s++/+ g+ w+ t+ r+ x+
