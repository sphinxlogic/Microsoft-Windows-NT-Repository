Newsgroups: comp.sources.x
From: jch@okimicro.oki.com (Jan Hardenbergh)
Subject: v20i017:  pexdraw - A PEX drawing program, Part07/14
Message-ID: <1993Jun8.150144.19020@sparky.imd.sterling.com>
X-Md4-Signature: 31736ee9e704f437b67729d71cd94f89
Sender: chris@sparky.imd.sterling.com (Chris Olson)
Organization: Sterling Software
Date: Tue, 8 Jun 1993 15:01:44 GMT
Approved: chris@sparky.imd.sterling.com

Submitted-by: jch@okimicro.oki.com (Jan Hardenbergh)
Posting-number: Volume 20, Issue 17
Archive-name: pexdraw/part07
Environment: X11R5, PEX

#! /bin/sh
# This is a shell archive.  Remove anything before this line, then feed it
# into a shell via "sh file" or similar.  To overwrite existing files,
# type "sh file -c".
# Contents:  pexdrawu.1 pexdrawu.4
# Wrapped by chris@sparky on Tue Jun  8 09:46:33 1993
PATH=/bin:/usr/bin:/usr/ucb:/usr/local/bin:/usr/lbin ; export PATH
echo If this archive is complete, you will see the following message:
echo '          "shar: End of archive 7 (of 14)."'
if test -f 'pexdrawu.1' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'pexdrawu.1'\"
else
  echo shar: Extracting \"'pexdrawu.1'\" \(32120 characters\)
  sed "s/^X//" >'pexdrawu.1' <<'END_OF_FILE'
X!		"@(#)pexdraw.uil	1.8 Stardent 93/05/24"
X!	This file is under sccs control at Stardent in:
X!	/nfs/sole/root/sccs1.p/X11R5/mit/demos/pexdraw/s.pexdraw.uil
X!
X!			Copyright (c) 1992 by
X!			Oki Electric Industry Co., Ltd.
X!			All Rights Reserved
X!
X! Permission to use, copy, modify, and distribute this software and its
X! documentation for any purpose and without fee is hereby granted,
X! provided that the above copyright notice appear in all copies and that
X! both that copyright notice and this permission notice appear in
X! supporting documentation, and that the name of Oki not be
X! used in advertising or publicity pertaining to distribution of the
X! software without specific, written prior permission. Oki
X! makes no representations about the suitability of this software for any
X! purpose.  It is provided "as is" without express or implied warranty.
X!
Xmodule pexdraw
X    version = 'v1.0'
X    names = case_sensitive
X
Xprocedure
X    proc_pexdraw_exit();
X    proc_pexdraw_create(integer);	
X    proc_pexdraw_expose();	
X    proc_pexdraw_resize();	
X    proc_pexdraw_input();	
X    proc_pexdraw_activate(integer);
X    proc_pexdraw_file();
X	
Xvalue
X    k_drawing_area      :  0;
X    k_view_set     	:  1;
X    k_apply_vs     	:  2;
X    k_reset_vs     	:  3;
X    k_dismiss_vs   	:  4;
X    k_view_ref_pt_x	:  5;
X    k_view_ref_pt_y	:  6;
X    k_view_ref_pt_z	:  7;
X    k_view_pl_norm_x    :  8;
X    k_view_pl_norm_y    :  9;
X    k_view_pl_norm_z    : 10;
X    k_view_up_vect_x    : 11;
X    k_view_up_vect_y    : 12;
X    k_view_up_vect_z    : 13;
X    k_proj_ref_pt_x     : 14;
X    k_proj_ref_pt_y     : 15;
X    k_proj_ref_pt_z     : 16;
X    k_view_window_minx  : 17;
X    k_view_window_maxx  : 18;
X    k_view_window_miny  : 19;
X    k_view_window_maxy  : 20;
X    k_view_plane_dist   : 21;
X    k_view_plane_back   : 22;
X    k_view_plane_front  : 23;
X    k_proj_vp_minx      : 24;
X    k_proj_vp_maxx      : 25;
X    k_proj_vp_miny      : 26;
X    k_proj_vp_maxy      : 27;
X    k_proj_vp_minz      : 28;
X    k_proj_vp_maxz      : 29;
X    k_proj_type_para    : 30;
X    k_proj_type_persp   : 31;
X    k_dump_strux        : 32;
X    k_refresh           : 33;
X    k_tool_pointer      : 34;
X    k_tool_line         : 35;
X    k_tool_view         : 36;
X    k_tool_tristrip     : 37;
X    k_delete            : 38;
X    k_light		: 39;
X    k_light_on1		: 40;
X    k_light_on2		: 41;
X    k_light_on3		: 42;
X    k_light_on4		: 43;
X    k_light_on5		: 44;
X    k_light_on6		: 45;
X    k_light_on7		: 46;
X    k_light_on8		: 47;
X    k_light_edit1		: 48;
X    k_light_edit2		: 49;
X    k_light_edit3		: 50;
X    k_light_edit4		: 51;
X    k_light_edit5		: 52;
X    k_light_edit6		: 53;
X    k_light_edit7		: 54;
X    k_light_edit8		: 55;
X    k_light_type_ambient	: 56;
X    k_light_type_directional	: 57;
X    k_light_type_positional	: 58;
X    k_light_type_spot		: 59;
X    k_light_pos_x		: 60;
X    k_light_pos_y		: 61;
X    k_light_pos_z		: 62;
X    k_light_color_red		: 63;
X    k_light_color_green		: 64;
X    k_light_color_blue		: 65;
X    k_light_direction_x		: 66;
X    k_light_direction_y		: 67;
X    k_light_direction_z		: 68;
X    k_light_coeff_const		: 69;
X    k_light_coeff_dist		: 70;
X    k_light_conc_exp		: 71;
X    k_light_spread_angle	: 72;
X    k_apply_light		: 73;
X    k_reset_light		: 74;
X    k_dismiss_light		: 75;
X    k_surface 			: 76;
X    k_tool_mclip		: 77;
X    k_reset_model               : 78;
X    k_spin_slowly               : 79;
X    k_save                      : 80;
X    k_read                      : 81;
X    k_file                      : 82;
X    k_undo                      : 83;
X    k_file_help                 : 84;
X    k_delete_all                : 85;
X    k_face_cull                 : 86;
X    k_sphere                    : 87;
X    k_dismiss_surface : 88;
X    k_reset_surface : 89;
X    k_apply_surface : 90;
X    k_surface_refl_transparency : 91;
X    k_surface_refl_specexp : 92;
X    k_surface_refl_specular : 93;
X    k_surface_refl_diffuse : 94;
X    k_surface_refl_ambient : 95;
X    k_sstyle_empty : 96;
X    k_sstyle_solid : 97;
X    k_sstyle_hollow : 98;
X    k_sshade_flat : 99;
X    k_sshade_gouraud : 100;
X    k_sshade_dot : 101;
X    k_sshade_phong : 102;
X    k_cull_none : 103;
X    k_cull_back : 104;
X    k_cull_front : 105;
X    k_tool_zoom : 106;
X    k_tool_nurbc : 107;
X    k_tool_text : 108;
X    k_tool_pgon : 109;
X    k_tool_circle : 110;
X    k_spin_form : 111;
X    k_spinf_strux : 112;
X    k_spinf_px : 113;
X    k_spinf_py : 114;
X    k_spinf_pz : 115;
X    k_spinf_ox : 116;
X    k_spinf_oy : 117;
X    k_spinf_oz : 118;
X    k_spinf_xang : 119;
X    k_spinf_yang : 120;
X    k_spinf_zang : 121;
X    k_spinf_dx : 122;
X    k_spinf_dy : 123;
X    k_spinf_dz : 124;
X    k_spinf_stop : 125;
X    k_spinf_scale : 126;
X    k_apply_spin : 127;
X    k_dismiss_spin : 128;
X    k_reset_spin : 129;
X    k_color_form : 130;
X    k_color_red : 131;
X    k_color_green : 132;
X    k_color_blue : 133;
X    k_apply_color : 134;
X    k_dismiss_color : 135;
X    k_reset_color : 136;
X    k_color_strux : 137;
X    k_color_elem : 138;
X    k_delete_strux : 139;
X    k_exec_strux : 140;
X    k_unpost_strux : 141;
X
X
Xvalue
X        yellow                          : color('yellow', foreground);
X        red                             : color('red', background);
X        green                           : color('green', foreground);
X        magenta                         : color('magenta', background);
X        gold                            : color('gold', foreground);
X        lightblue                       : color('lightblue', background);
X
X!************************************************************************
X! Main Window
X!************************************************************************
X
Xobject
X    pexdraw_obj_main : XmMainWindow {
X       controls {
X            XmMenuBar     pexdraw_obj_bar ;
X            XmForm        pexdraw_obj_form ;
X       };
X    };
X
Xobject
X    pexdraw_obj_form : XmForm {
X	arguments { 
X	    XmNdefaultButton = pexdraw_tool_line;
X	};
X	controls {
X	    XmRowColumn		pexdraw_tool_palette;
X	    XmSeparator		pexdraw_obj_sep;
X	    XmDrawingArea    	pexdraw_pex_area;
X	};
X    };
X
X!************************************************************************
X! the top menu bar
X!************************************************************************
X
Xobject
X    pexdraw_obj_bar : XmMenuBar {
X        arguments { 
X            XmNorientation = XmHORIZONTAL;
X        };
X        controls {                              
X            XmCascadeButton file_menu_entry;
X            XmCascadeButton edit_menu_entry;
X            XmCascadeButton misc_menu_entry;
X        };
X    };
X
Xobject
X        file_menu_entry : XmCascadeButton {
X            arguments {
X                XmNlabelString = compound_string('File') ;
X		XmNmnemonic = keysym("F");
X            };                                            
X            controls {
X                XmPulldownMenu file_menu;
X            };
X        };
X
Xobject
X        file_menu : XmPulldownMenu {
X            controls {
X                XmPushButton pexdraw_obj_read;
X!*                XmPushButton pexdraw_obj_save;
X                XmPushButton pexdraw_obj_quit;
X            };
X        };
X
Xobject
X    pexdraw_obj_quit : XmPushButton {
X	arguments { 
X	    XmNlabelString = compound_string('Quit');
X	    XmNaccelerator = "Ctrl<Key>z:";
X	    XmNacceleratorText = "Ctrl/z";
X 	    XmNmnemonic = keysym("Q");
X	};
X	callbacks { 
X	    XmNactivateCallback = procedure proc_pexdraw_exit();
X	};
X    };
X
Xobject
X    pexdraw_obj_read : XmPushButton {
X	arguments { 
X	    XmNlabelString = compound_string('Execute');
X 	    XmNmnemonic = keysym("X");
X	};
X	callbacks { 
X	    XmNactivateCallback = procedure proc_pexdraw_activate(k_read);
X	};
X    };
X
Xobject
X    pexdraw_obj_save : XmPushButton {
X	arguments { 
X	    XmNlabelString = compound_string('Save');
X 	    XmNmnemonic = keysym("S");
X	};
X	callbacks { 
X	    XmNactivateCallback = procedure proc_pexdraw_activate(k_save);
X	};
X    };
X
X!************************************************************************
X! Edit Menu
X!************************************************************************
X
Xobject
X        edit_menu_entry : XmCascadeButton {
X            arguments {
X                XmNlabelString = compound_string('Edit') ;
X		XmNmnemonic = keysym("E");
X            };                                            
X            controls {
X                XmPulldownMenu edit_menu;
X            };
X        };
X
Xobject
X        edit_menu : XmPulldownMenu {
X            controls {
X                XmPushButton pexdraw_edit_undo;
X                XmPushButton pexdraw_edit_exec_strux;
X                XmPushButton pexdraw_edit_unpost_strux;
X                XmPushButton pexdraw_edit_delete_strux;
X                XmPushButton pexdraw_edit_delete;
X                XmPushButton pexdraw_edit_delete_all;
X            };
X        };
X
Xobject
X    pexdraw_edit_delete : XmPushButton {
X	arguments { 
X	    XmNlabelString = compound_string('Delete');
X	    XmNmnemonic = keysym("D");
X	    XmNaccelerator = "Ctrl<Key>d:";
X	    XmNacceleratorText = "Ctrl/d";
X	};
X	callbacks { 
X	    XmNactivateCallback = procedure proc_pexdraw_activate(k_delete);
X	};
X    };
X
Xobject
X    pexdraw_edit_undo : XmPushButton {
X	arguments { 
X	    XmNlabelString = compound_string('Undo');
X	    XmNmnemonic = keysym("U");
X	};
X	callbacks { 
X	    XmNactivateCallback = procedure proc_pexdraw_activate(k_undo);
X	};
X    };
X
Xobject
X    pexdraw_edit_delete_all : XmPushButton {
X	arguments { 
X	    XmNlabelString = compound_string('Delete All');
X	    XmNmnemonic = keysym("A");
X	};
X	callbacks { 
X	    XmNactivateCallback = procedure proc_pexdraw_activate(k_delete_all);
X	};
X    };
X
Xobject
X    pexdraw_edit_exec_strux : XmPushButton {
X	arguments { 
X	    XmNlabelString = compound_string('Execute Strux');
X	    XmNmnemonic = keysym("X");
X	};
X	callbacks { 
X	    XmNactivateCallback = procedure proc_pexdraw_activate(k_exec_strux);
X	};
X    };
X
Xobject
X    pexdraw_edit_unpost_strux : XmPushButton {
X	arguments { 
X	    XmNlabelString = compound_string('Unpost Strux');
X	    XmNmnemonic = keysym("U");
X	};
X	callbacks { 
X	    XmNactivateCallback = procedure proc_pexdraw_activate(k_unpost_strux);
X	};
X    };
X
Xobject
X    pexdraw_edit_delete_strux : XmPushButton {
X	arguments { 
X	    XmNlabelString = compound_string('Delete Strux');
X	    XmNmnemonic = keysym("S");
X	};
X	callbacks { 
X	    XmNactivateCallback = procedure proc_pexdraw_activate(k_delete_strux);
X	};
X    };
X
X
X!************************************************************************
X! miscellaneous menu
X!************************************************************************
Xobject
X        misc_menu_entry : XmCascadeButton {
X            arguments {
X                XmNlabelString = compound_string('Options') ;
X		XmNmnemonic = keysym("O");
X            };                                            
X            controls {
X                XmPulldownMenu misc_menu;
X            };
X        };
X
Xobject
X        misc_menu : XmPulldownMenu {
X            controls {
X                XmPushButton pexdraw_misc_view_set;
X                XmPushButton pexdraw_misc_light;
X                XmPushButton pexdraw_misc_dump_strux;
X                XmPushButton pexdraw_misc_refresh;
X                XmPushButton pexdraw_misc_surface;
X                XmPushButton pexdraw_misc_reset_model;
X                XmPushButton pexdraw_misc_spin_slowly;
X                XmPushButton pexdraw_misc_spin_form;
X                XmPushButton pexdraw_misc_color_form;
X                XmPushButton pexdraw_misc_sphere;
X            };
X        };
X
Xobject
X    pexdraw_misc_view_set : XmPushButton {
X	arguments { 
X	    XmNlabelString = compound_string('Set View');
X  	    XmNmnemonic = keysym("V");
X	};
X	callbacks { 
X	    XmNactivateCallback = procedure proc_pexdraw_activate(k_view_set);
X	};
X    };
X
Xobject
X    pexdraw_misc_light : XmPushButton {
X	arguments { 
X	    XmNlabelString = compound_string('Light');
X	    XmNmnemonic = keysym("L");
X	};
X	callbacks { 
X	    XmNactivateCallback = procedure proc_pexdraw_activate(k_light);
X	};
X    };
X
X
Xobject
X    pexdraw_misc_dump_strux : XmPushButton {
X	arguments { 
X	    XmNlabelString = compound_string('Dump Strux');
X	    XmNmnemonic = keysym("D");
X	};
X	callbacks { 
X	    XmNactivateCallback = procedure proc_pexdraw_activate(k_dump_strux);
X	};
X    };
X
Xobject
X    pexdraw_misc_refresh : XmPushButton {
X	arguments { 
X	    XmNlabelString = compound_string('Refresh');
X	    XmNmnemonic = keysym("R");
X	};
X	callbacks { 
X	    XmNactivateCallback = procedure proc_pexdraw_activate(k_refresh);
X	};
X    };
Xobject
X    pexdraw_misc_surface : XmPushButton {
X	arguments { 
X	    XmNlabelString = compound_string('Surface Attr');
X	    XmNmnemonic = keysym("S");
X	};
X	callbacks { 
X	    XmNactivateCallback = procedure proc_pexdraw_activate(k_surface);
X	};
X    };
X
X
Xobject
X    pexdraw_misc_reset_model : XmPushButton {
X	arguments { 
X	    XmNlabelString = compound_string('Reset Model');
X	    XmNmnemonic = keysym("l");
X	};
X	callbacks { 
X	    XmNactivateCallback = procedure proc_pexdraw_activate(k_reset_model);
X	};
X    };
X
Xobject
X    pexdraw_misc_spin_slowly : XmPushButton {
X	arguments { 
X	    XmNlabelString = compound_string('Spin Slow');
X	    XmNmnemonic = keysym("w");
X	};
X	callbacks { 
X	    XmNactivateCallback = procedure proc_pexdraw_activate(k_spin_slowly);
X	};
X    };
X
Xobject
X    pexdraw_misc_spin_form : XmPushButton {
X	arguments { 
X	    XmNlabelString = compound_string('Spin Options');
X	    XmNmnemonic = keysym("O");
X	};
X	callbacks { 
X	    XmNactivateCallback = procedure proc_pexdraw_activate(k_spin_form);
X	};
X    };
X
Xobject
X    pexdraw_misc_color_form : XmPushButton {
X	arguments { 
X	    XmNlabelString = compound_string('Change Color');
X	    XmNmnemonic = keysym("C");
X	};
X	callbacks { 
X	    XmNactivateCallback = procedure proc_pexdraw_activate(k_color_form);
X	};
X    };
X
X
Xobject
X    pexdraw_misc_sphere : XmPushButton {
X	arguments { 
X	    XmNlabelString = compound_string('Sphere');
X	    XmNmnemonic = keysym("h");
X	};
X	callbacks { 
X	    XmNactivateCallback = procedure proc_pexdraw_activate(k_sphere);
X	};
X    };
X
X!************************************************************************
X! tool palette RowColumn
X!************************************************************************
X
Xvalue
X        button_ct                       : color_table(
X                                                yellow='o'
X                                                ,red='.'
X                                                ,background color=' ');
X
Xvalue
X        pointer_icon: icon(color_table=button_ct,
X                        '                        ',
X                        ' ...................... ',
X                        ' .....o................ ',
X                        ' .....oo............... ',
X                        ' .....ooo.............. ',
X                        ' .....oooo............. ',
X                        ' .....oo.oo............ ',
X                        ' .....oo..oo........... ',
X                        ' .....oo...oo.......... ',
X                        ' .....oo....oo......... ',
X                        ' .....oo.....oo........ ',
X                        ' .....oo......oo....... ',
X                        ' .....ooooooooooo...... ',
X                        ' .....oooooooooooo..... ',
X                        ' ..........ooo......... ',
X                        ' ...........ooo........ ',
X                        ' ...........oooo....... ',
X                        ' ............oooo...... ',
X                        ' ...................... ',
X                        '                        ');
X
Xvalue
X        line_icon: icon(color_table=button_ct,
X                        '                        ',
X                        ' ...................... ',
X                        ' .................oo... ',
X                        ' ................ooo... ',
X                        ' ...............ooo.... ',
X                        ' ..............ooo..... ',
X                        ' .............ooo...... ',
X                        ' ............ooo....... ',
X                        ' ...........ooo........ ',
X                        ' ..........ooo......... ',
X                        ' .........ooo.......... ',
X                        ' ........ooo........... ',
X                        ' .......ooo............ ',
X                        ' ......ooo............. ',
X                        ' .....ooo.............. ',
X                        ' ....ooo............... ',
X                        ' ...ooo................ ',
X                        ' ...oo................. ',
X                        ' ...................... ',
X                        '                        ');
X
Xvalue
X        tristrip_icon: icon(color_table=button_ct,
X                        '                        ',
X                        ' ...................... ',
X                        ' ..................oo.. ',
X                        ' ................oooo.. ',
X                        ' ..............oo..oo.. ',
X                        ' ............oo....oo.. ',
X                        ' ..........oo......oo.. ',
X                        ' ........oo........oo.. ',
X                        ' ......oo..........oo.. ',
X                        ' ....oo........oooooo.. ',
X                        ' ..oo....oooooo....oo.. ',
X                        ' ..oooooo........oo.... ',
X                        ' ..oo..........oo...... ',
X                        ' ..oo........oo........ ',
X                        ' ..oo......oo.......... ',
X                        ' ..oo....oo............ ',
X                        ' ..oo..oo.............. ',
X                        ' ..oooo................ ',
X                        ' ..oo.................. ',
X                        '                        ');
X
Xvalue
X        nurbc_icon: icon(color_table=button_ct,
X                        '                        ',
X                        ' ...................... ',
X                        ' ...................... ',
X                        ' ...................... ',
X                        ' ..................oo.. ',
X                        ' ..................oo.. ',
X                        ' .................oo... ',
X                        ' ................oo.... ',
X                        ' .............ooo...... ',
X                        ' ..........ooo......... ',
X                        ' .......ooo............ ',
X                        ' ....ooo............... ',
X                        ' ...oo................. ',
X                        ' ..oo.................. ',
X                        ' ..oo.................. ',
X                        ' ...oo................. ',
X                        ' ....oo................ ',
X                        ' ...................... ',
X                        ' ...................... ',
X                        '                        ');
Xvalue
X        text_icon: icon(color_table=button_ct,
X                        '                        ',
X                        ' ...................... ',
X                        ' ..oooooooooooooooooo.. ',
X                        ' ..oooooooooooooooooo.. ',
X                        ' .........oo........... ',
X                        ' .........oo........... ',
X                        ' .........oo........... ',
X                        ' .........oo........... ',
X                        ' .........oo........... ',
X                        ' .........oo........... ',
X                        ' .........oo........... ',
X                        ' .........oo........... ',
X                        ' .........oo........... ',
X                        ' .........oo........... ',
X                        ' .........oo........... ',
X                        ' .........oo........... ',
X                        ' .........oo........... ',
X                        ' ...................... ',
X                        ' ...................... ',
X                        '                        ');
Xvalue
X        view_icon: icon(color_table=button_ct,
X                        '                        ',
X                        ' ...................... ',
X                        ' ...................... ',
X                        ' ...................... ',
X                        ' ...................... ',
X                        ' ......oooooooooo...... ',
X                        ' ....o....oooo....o.... ',
X                        ' ..o.....oooooo.....o.. ',
X                        ' .o.....oooooooo.....o. ',
X                        ' .o.....oooooooo.....o. ',
X                        ' .o.....oooooooo.....o. ',
X                        ' ..o.....oooooo.....o.. ',
X                        ' ....o....oooo....o.... ',
X                        ' ......oooooooooo...... ',
X                        ' ...................... ',
X                        ' ...................... ',
X                        ' ...................... ',
X                        ' ...................... ',
X                        ' ...................... ',
X                        '                        ');
X
Xvalue
X        zoom_icon: icon(color_table=button_ct,
X                        '                        ',
X                        ' ...................... ',
X                        ' ..oooooooooooooooooo.. ',
X                        ' ..oooooooooooooooooo.. ',
X                        ' ..oo..............oo.. ',
X                        ' ..oo..............oo.. ',
X                        ' ..oo..............oo.. ',
X                        ' ..oo..............oo.. ',
X                        ' ..oo..............oo.. ',
X                        ' ..oo..............oo.. ',
X                        ' ..oo..............oo.. ',
X                        ' ..oo..............oo.. ',
X                        ' ..oo..............oo.. ',
X                        ' ..oo..............oo.. ',
X                        ' ..oo..............oo.. ',
X                        ' ..oooooooooooooooooo.. ',
X                        ' ..oooooooooooooooooo.. ',
X                        ' ...................... ',
X                        ' ...................... ',
X                        '                        ');
X
Xvalue
X        circle_icon: icon(color_table=button_ct,
X                        '                        ',
X                        ' ...................... ',
X                        ' ........oooooo........ ',
X                        ' .....ooooo..ooooo..... ',
X                        ' ....oo..........oo.... ',
X                        ' ...oo............oo... ',
X                        ' ..oo..............oo.. ',
X                        ' ..oo..............oo.. ',
X                        ' .oo................oo. ',
X                        ' .oo................oo. ',
X                        ' .oo................oo. ',
X                        ' ..oo..............oo.. ',
X                        ' ..oo..............oo.. ',
X                        ' ...oo............oo... ',
X                        ' ...ooo..........ooo... ',
X                        ' .....ooooo...oooo..... ',
X                        ' ........ooooooo....... ',
X                        ' ...................... ',
X                        ' ...................... ',
X                        '                        ');
X
Xvalue
X        star_icon: icon(color_table=button_ct,
X                        '                        ',
X                        ' .........o............ ',
X                        ' .........oo........... ',
X                        ' ........oooo.......... ',
X                        ' .......oooooo......... ',
X                        ' ......oooooooo........ ',
X                        ' .oooooooooooooooooooo. ',
X                        ' ..ooooooo....ooooooo.. ',
X                        ' ...ooooo......ooooo... ',
X                        ' ....ooo........ooo.... ',
X                        ' ....ooo........oo..... ',
X                        ' .....oo........o...... ',
X                        ' .....ooo.....ooo...... ',
X                        ' ....oooooo.ooooo...... ',
X                        ' ...oooooooooooooo..... ',
X                        ' ...oooooo..oooooo..... ',
X                        ' ..ooooo......ooooo.... ',
X                        ' .ooo............ooo... ',
X                        ' ...................... ',
X                        '                        ');
X
Xvalue
X        mclip_icon: icon(color_table=button_ct,
X                        '                        ',
X                        ' ...................... ',
X                        ' ...................... ',
X                        ' ...................... ',
X                        ' ..oo.....oo....ooo.... ',
X                        ' ..ooo...ooo...ooooo... ',
X                        ' ..oooo.oooo..oo...oo.. ',
X                        ' ..oo.ooo.oo..oo....... ',
X                        ' ..oo..o..oo..oo....... ',
X                        ' ..oo.....oo..oo....... ',
X                        ' ..oo.....oo..oo....... ',
X                        ' ..oo.....oo..oo....... ',
X                        ' ..oo.....oo..oo....... ',
X                        ' ..oo.....oo..oo...oo.. ',
X                        ' ..oo.....oo...ooooo... ',
X                        ' ..oo.....oo....ooo.... ',
X                        ' ...................... ',
X                        ' ...................... ',
X                        ' ...................... ',
X                        '                        ');
X
X
Xobject 
X    pexdraw_tool_palette : XmRowColumn {
X        arguments {
X            XmNorientation = XmVERTICAL;
X	    XmNleftAttachment =  XmATTACH_FORM;
X	    XmNbottomAttachment =  XmATTACH_FORM;
X	    XmNtopAttachment =  XmATTACH_FORM;
X            XmNborderWidth = 2;
X            };
X        controls {                                                  
X	    XmPushButton	pexdraw_tool_pointer;
X	    XmPushButton	pexdraw_tool_line;
X	    XmPushButton	pexdraw_tool_tristrip;
X	    XmPushButton	pexdraw_tool_nurbc;
X	    XmPushButton	pexdraw_tool_text;
X	    XmPushButton	pexdraw_tool_pgon;
X	    XmPushButton	pexdraw_tool_circle;
X	    XmPushButton	pexdraw_tool_view;
X	    XmPushButton	pexdraw_tool_zoom;
X	    XmPushButton	pexdraw_tool_mclip;
X            };
X        };
X
X
Xobject
X    pexdraw_tool_pointer : XmPushButton {
X	arguments { 
X            XmNlabelType = XmPIXMAP;
X            XmNlabelPixmap = pointer_icon;
X	};
X	callbacks { 
X	   XmNactivateCallback = procedure proc_pexdraw_activate(k_tool_pointer);
X	};
X    };
X
Xobject
X    pexdraw_tool_line : XmPushButton {
X	arguments { 
X            XmNlabelType = XmPIXMAP;
X            XmNlabelPixmap = line_icon;
X	};
X	callbacks { 
X	    XmNactivateCallback = procedure proc_pexdraw_activate(k_tool_line);
X	};
X    };
X
Xobject
X    pexdraw_tool_view : XmPushButton {
X	arguments { 
X            XmNlabelType = XmPIXMAP;
X            XmNlabelPixmap = view_icon;
X	};
X	callbacks { 
X	    XmNactivateCallback = procedure proc_pexdraw_activate(k_tool_view);
X	};
X    };
X
Xobject
X    pexdraw_tool_tristrip : XmPushButton {
X	arguments { 
X            XmNlabelType = XmPIXMAP;
X            XmNlabelPixmap = tristrip_icon;
X	};
X	callbacks { 
X	    XmNactivateCallback = procedure proc_pexdraw_activate(k_tool_tristrip);
X	};
X    };
X
Xobject
X    pexdraw_tool_zoom : XmPushButton {
X	arguments { 
X            XmNlabelType = XmPIXMAP;
X            XmNlabelPixmap = zoom_icon;
X	};
X	callbacks { 
X	    XmNactivateCallback = procedure proc_pexdraw_activate(k_tool_zoom);
X	};
X    };
X
Xobject
X    pexdraw_tool_nurbc : XmPushButton {
X	arguments { 
X            XmNlabelType = XmPIXMAP;
X            XmNlabelPixmap = nurbc_icon;
X	};
X	callbacks { 
X	    XmNactivateCallback = procedure proc_pexdraw_activate(k_tool_nurbc);
X	};
X    };
X
Xobject
X    pexdraw_tool_text : XmPushButton {
X	arguments { 
X            XmNlabelType = XmPIXMAP;
X            XmNlabelPixmap = text_icon;
X	};
X	callbacks { 
X	    XmNactivateCallback = procedure proc_pexdraw_activate(k_tool_text);
X	};
X    };
X
Xobject
X    pexdraw_tool_pgon : XmPushButton {
X	arguments { 
X            XmNlabelType = XmPIXMAP;
X            XmNlabelPixmap = star_icon;
X	};
X	callbacks { 
X	    XmNactivateCallback = procedure proc_pexdraw_activate(k_tool_pgon);
X	};
X    };
X
Xobject
X    pexdraw_tool_circle : XmPushButton {
X	arguments { 
X            XmNlabelType = XmPIXMAP;
X            XmNlabelPixmap = circle_icon;
X	};
X	callbacks { 
X	    XmNactivateCallback = procedure proc_pexdraw_activate(k_tool_circle);
X	};
X    };
X
Xobject
X    pexdraw_tool_mclip : XmPushButton {
X	arguments { 
X            XmNlabelType = XmPIXMAP;
X            XmNlabelPixmap = mclip_icon;
X	};
X	callbacks { 
X	    XmNactivateCallback = procedure proc_pexdraw_activate(k_tool_mclip);
X	};
X    };
X
X!************************************************************************
X! how do I get this attached to the right most box???
X!************************************************************************
Xobject
X    pexdraw_obj_sep : XmSeparator {
X	arguments {
X	    XmNbottomAttachment = XmATTACH_FORM ;
X	    XmNtopAttachment = XmATTACH_FORM ;
X	    XmNleftAttachment = XmATTACH_WIDGET ;
X	    XmNleftWidget = pexdraw_tool_palette ;
X	};
X    };
X
X
X!************************************************************************
X! The PHIGS Workstation drawing Area
X!************************************************************************
X
X
Xobject
X    pexdraw_pex_area : XmDrawingArea {
X	arguments { 
X	    XmNrightAttachment = XmATTACH_FORM ;
X	    XmNtopAttachment = XmATTACH_FORM ;
X	    XmNbottomAttachment = XmATTACH_FORM ;
X	    XmNleftAttachment = XmATTACH_WIDGET ;
X	    XmNleftWidget = XmSeparator pexdraw_obj_sep ;
X	    XmNwidth = 500 ;
X	    XmNheight = 500 ;
X	};
X	callbacks {
X	    MrmNcreateCallback = procedure proc_pexdraw_create(0);
X	    XmNresizeCallback = procedure proc_pexdraw_resize();
X	    XmNexposeCallback = procedure proc_pexdraw_expose();
X	    XmNinputCallback = procedure proc_pexdraw_input();
X	};
X    };
X
X!************************************************************************
X! The Set View Form
X!************************************************************************
X
Xobject
X    view_set_dialog : XmFormDialog {
X        arguments {
X            XmNdialogTitle = "PHIGS Style Viewing Options";
X            XmNdialogStyle = XmDIALOG_MODELESS;
X	    XmNheight = 400;
X	    XmNwidth = 360;
X!	    XmNmwmDecorations = 30;
X            XmNbackground = lightblue;
X        };
X        controls {
X            XmLabel     view_ref_pt_label;
X            XmTextField view_ref_pt_x;
X            XmTextField view_ref_pt_y;
X            XmTextField view_ref_pt_z;
X	    XmSeparator view_pl_norm_sep;
X            XmLabel     view_pl_norm_label;
X            XmTextField view_pl_norm_x;
X            XmTextField view_pl_norm_y;
X            XmTextField view_pl_norm_z;
X	    XmSeparator view_up_vect_sep;
X            XmLabel     view_up_vect_label;
X            XmTextField view_up_vect_x;
X            XmTextField view_up_vect_y;
X            XmTextField view_up_vect_z;
X	    XmSeparator  proj_ref_pt_sep;
X	    XmLabel  proj_ref_pt_label;
X	    XmTextField  proj_ref_pt_x;
X	    XmTextField  proj_ref_pt_y;
X	    XmTextField  proj_ref_pt_z;
X	    XmSeparator  view_window_sep;
X	    XmLabel  view_window_label;
X	    XmTextField  view_window_minx;
X	    XmTextField  view_window_maxx;
X	    XmTextField  view_window_miny;
X	    XmTextField  view_window_maxy;
X	    XmSeparator  view_plane_sep;
X	    XmLabel  view_plane_label;
X	    XmTextField  view_plane_dist;
X	    XmTextField  view_plane_back;
X	    XmTextField  view_plane_front;
X	    XmSeparator  proj_vp_sep;
X	    XmLabel  proj_vp_label;
X	    XmTextField  proj_vp_minx;
X	    XmTextField  proj_vp_maxx;
X	    XmTextField  proj_vp_miny;
X	    XmTextField  proj_vp_maxy;
X	    XmTextField  proj_vp_minz;
X	    XmTextField  proj_vp_maxz;
X	    XmSeparator  proj_type_sep;
X	    XmLabel  proj_type_label;
X	    XmRadioBox  proj_type_box;
X            XmRowColumn 	button_box;
X            };
X
X        callbacks {
X            MrmNcreateCallback = procedure proc_pexdraw_create (k_view_set);
X            };
X    };
X
X!****************************** View Reference Point ********************
X
Xobject
X    view_ref_pt_label : XmLabel {
X        arguments {
X	    XmNtopAttachment = XmATTACH_FORM ;
X	    XmNleftAttachment = XmATTACH_FORM ;
X	    XmNunitType = XmPIXELS;
END_OF_FILE
  if test 32120 -ne `wc -c <'pexdrawu.1'`; then
    echo shar: \"'pexdrawu.1'\" unpacked with wrong size!
  fi
  # end of 'pexdrawu.1'
fi
if test -f 'pexdrawu.4' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'pexdrawu.4'\"
else
  echo shar: Extracting \"'pexdrawu.4'\" \(24026 characters\)
  sed "s/^X//" >'pexdrawu.4' <<'END_OF_FILE'
X
Xobject
X    surface_dismiss_button : XmPushButton widget {
X        arguments {
X            XmNlabelString = "dismiss";
X            XmNforeground = yellow;
X            XmNbackground = red;
X            XmNhighlightColor = magenta;
X            XmNborderColor = green;
X        };
X        callbacks {
X            MrmNcreateCallback = procedure proc_pexdraw_create (k_dismiss_surface);
X            XmNactivateCallback = procedure proc_pexdraw_activate (k_dismiss_surface);
X        };
X    };
X
X!************************************************************************
X! end of Surface Form
X!************************************************************************
X
X!************************************************************************
X! The Spin Form
X!************************************************************************
X
Xobject
X    spin_dialog : XmFormDialog {
X        arguments {
X            XmNdialogTitle = "Spin Options";
X            XmNdialogStyle = XmDIALOG_MODELESS;
X	    XmNheight = 400;
X	    XmNwidth = 360;
X!	    XmNmwmDecorations = 30;
X            XmNbackground = lightblue;
X        };
X        controls {
X            XmLabel     strux_label;
X            XmTextField strux_id;
X	    XmSeparator spinf_pnt_sep;
X            XmLabel     spinf_pnt_label;
X            XmTextField spinf_pnt_x;
X            XmTextField spinf_pnt_y;
X            XmTextField spinf_pnt_z;
X	    XmSeparator spinf_offset_sep;
X            XmLabel     spinf_offset_label;
X            XmTextField spinf_offset_x;
X            XmTextField spinf_offset_y;
X            XmTextField spinf_offset_z;
X	    XmSeparator  spinf_ang_sep;
X	    XmLabel  spinf_ang_label;
X	    XmTextField  spinf_ang_x;
X	    XmTextField  spinf_ang_y;
X	    XmTextField  spinf_ang_z;
X	    XmSeparator  spinf_delta_sep;
X	    XmLabel  spinf_delta_label;
X	    XmTextField  spinf_delta_x;
X	    XmTextField  spinf_delta_y;
X	    XmTextField  spinf_delta_z;
X	    XmSeparator  spinf_scale_sep;
X	    XmLabel  spinf_scale_label;
X	    XmTextField  spinf_scale;
X	    XmSeparator  spinf_stop_sep;
X	    XmLabel  spinf_stop_label;
X	    XmRadioBox  spinf_stop_box;
X            XmRowColumn spin_button_box;
X            };
X
X        callbacks {
X            MrmNcreateCallback = procedure proc_pexdraw_create (k_view_set);
X            };
X    };
X
X!****************************** View Reference Point ********************
X
Xobject
X    strux_label : XmLabel {
X        arguments {
X	    XmNtopAttachment = XmATTACH_FORM ;
X	    XmNleftAttachment = XmATTACH_FORM ;
X	    XmNunitType = XmPIXELS;
X            XmNlabelString = "Strux ID";
X            };
X        };
X
Xobject
X    strux_id : XmTextField {
X        arguments {
X	    XmNtopAttachment = XmATTACH_FORM;
X	    XmNleftAttachment = XmATTACH_WIDGET;
X	    XmNleftWidget = XmLabel strux_label;
X            XmNwidth = 100;
X            XmNmaxLength = 12;
X            XmNvalue = "0";
X            };
X        callbacks {
X	    MrmNcreateCallback = procedure proc_pexdraw_create(k_spinf_strux);
X            };
X        };
X
X
X!****************************** Spin Point  ********************
X
Xobject
X    spinf_pnt_sep : XmSeparator {
X	arguments {
X	    XmNleftAttachment =  XmATTACH_FORM;
X	    XmNrightAttachment =  XmATTACH_FORM;
X	    XmNtopAttachment = XmATTACH_WIDGET;
X	    XmNtopWidget = XmTextField strux_id;
X	};
X    };
X
X
Xobject
X    spinf_pnt_label : XmLabel {
X        arguments {
X	    XmNtopAttachment = XmATTACH_WIDGET ;
X	    XmNtopWidget = XmSeparator spinf_pnt_sep;
X	    XmNleftAttachment = XmATTACH_FORM ;
X            XmNlabelString = "Spin Point";
X            };
X        };
X
Xobject
X    spinf_pnt_x : XmTextField {
X        arguments {
X	    XmNtopAttachment = XmATTACH_WIDGET ;
X	    XmNtopWidget = XmSeparator spinf_pnt_sep;
X	    XmNleftAttachment = XmATTACH_WIDGET;
X	    XmNleftWidget = XmLabel spinf_pnt_label;
X            XmNwidth = 80;
X            XmNmaxLength = 8;
X            XmNvalue = "0";
X            };
X        callbacks {
X	    MrmNcreateCallback = procedure proc_pexdraw_create(k_spinf_px);
X            };
X        };
X
Xobject
X    spinf_pnt_y : XmTextField {
X        arguments {
X	    XmNtopAttachment = XmATTACH_WIDGET ;
X	    XmNtopWidget = XmSeparator spinf_pnt_sep;
X	    XmNleftAttachment = XmATTACH_WIDGET;
X	    XmNleftWidget = XmTextField spinf_pnt_x;
X            XmNwidth = 80;
X            XmNmaxLength = 8;
X            XmNvalue = "0";
X            };
X        callbacks {
X	    MrmNcreateCallback = procedure proc_pexdraw_create(k_spinf_py);
X            };
X        };
X
Xobject
X    spinf_pnt_z : XmTextField {
X        arguments {
X	    XmNtopAttachment = XmATTACH_WIDGET ;
X	    XmNtopWidget = XmSeparator spinf_pnt_sep;
X	    XmNleftAttachment = XmATTACH_WIDGET;
X	    XmNleftWidget = XmTextField spinf_pnt_y;
X            XmNwidth = 80;
X            XmNmaxLength = 8;
X            XmNvalue = "1";
X            };
X        callbacks {
X	    MrmNcreateCallback = procedure proc_pexdraw_create(k_spinf_pz);
X            };
X        };
X
X!****************************** View Up Vector  ********************
X
Xobject
X    spinf_offset_sep : XmSeparator {
X	arguments {
X	    XmNleftAttachment =  XmATTACH_FORM;
X	    XmNrightAttachment =  XmATTACH_FORM;
X	    XmNtopAttachment = XmATTACH_WIDGET;
X	    XmNtopWidget = XmTextField spinf_pnt_y;
X	};
X    };
X
X
Xobject
X    spinf_offset_label : XmLabel {
X        arguments {
X	    XmNtopAttachment = XmATTACH_WIDGET ;
X	    XmNtopWidget = XmSeparator spinf_offset_sep;
X	    XmNleftAttachment = XmATTACH_FORM ;
X            XmNlabelString = "Offset";
X            };
X        };
X
Xobject
X    spinf_offset_x : XmTextField {
X        arguments {
X	    XmNtopAttachment = XmATTACH_WIDGET ;
X	    XmNtopWidget = XmSeparator spinf_offset_sep;
X	    XmNleftAttachment = XmATTACH_WIDGET;
X	    XmNleftWidget = XmLabel spinf_offset_label;
X            XmNwidth = 80;
X            XmNmaxLength = 8;
X            XmNvalue = "0";
X            };
X        callbacks {
X	    MrmNcreateCallback = procedure proc_pexdraw_create(k_spinf_ox);
X            };
X        };
X
Xobject
X    spinf_offset_y : XmTextField {
X        arguments {
X	    XmNtopAttachment = XmATTACH_WIDGET ;
X	    XmNtopWidget = XmSeparator spinf_offset_sep;
X	    XmNleftAttachment = XmATTACH_WIDGET;
X	    XmNleftWidget = XmTextField spinf_offset_x;
X            XmNwidth = 80;
X            XmNmaxLength = 8;
X            XmNvalue = "1";
X            };
X        callbacks {
X	    MrmNcreateCallback = procedure proc_pexdraw_create(k_spinf_oy);
X            };
X        };
X
Xobject
X    spinf_offset_z : XmTextField {
X        arguments {
X	    XmNtopAttachment = XmATTACH_WIDGET ;
X	    XmNtopWidget = XmSeparator spinf_offset_sep;
X	    XmNleftAttachment = XmATTACH_WIDGET;
X	    XmNleftWidget = XmTextField spinf_offset_y;
X            XmNwidth = 80;
X            XmNmaxLength = 8;
X            XmNvalue = "0";
X            };
X        callbacks {
X	    MrmNcreateCallback = procedure proc_pexdraw_create(k_spinf_oz);
X            };
X        };
X
X!****************************** angles
X
Xobject
X    spinf_ang_sep : XmSeparator {
X	arguments {
X	    XmNleftAttachment =  XmATTACH_FORM;
X	    XmNrightAttachment =  XmATTACH_FORM;
X	    XmNtopAttachment = XmATTACH_WIDGET;
X	    XmNtopWidget = XmTextField spinf_offset_y;
X	};
X    };
X
X
Xobject
X    spinf_ang_label : XmLabel {
X        arguments {
X	    XmNtopAttachment = XmATTACH_WIDGET ;
X	    XmNtopWidget = XmSeparator spinf_ang_sep;
X	    XmNleftAttachment = XmATTACH_FORM ;
X            XmNlabelString = "Current Angles";
X            };
X        };
X
Xobject
X    spinf_ang_x : XmTextField {
X        arguments {
X	    XmNtopAttachment = XmATTACH_WIDGET ;
X	    XmNtopWidget = XmSeparator spinf_ang_sep;
X	    XmNleftAttachment = XmATTACH_WIDGET;
X	    XmNleftWidget = XmLabel spinf_ang_label;
X            XmNwidth = 80;
X            XmNmaxLength = 8;
X            XmNvalue = "0";
X            };
X        callbacks {
X	    MrmNcreateCallback = procedure proc_pexdraw_create(k_spinf_xang);
X            };
X        };
X
Xobject
X    spinf_ang_y : XmTextField {
X        arguments {
X	    XmNtopAttachment = XmATTACH_WIDGET ;
X	    XmNtopWidget = XmSeparator spinf_ang_sep;
X	    XmNleftAttachment = XmATTACH_WIDGET;
X	    XmNleftWidget = XmTextField spinf_ang_x;
X            XmNwidth = 80;
X            XmNmaxLength = 8;
X            XmNvalue = "0";
X            };
X        callbacks {
X	    MrmNcreateCallback = procedure proc_pexdraw_create(k_spinf_yang);
X            };
X        };
X
Xobject
X    spinf_ang_z : XmTextField {
X        arguments {
X	    XmNtopAttachment = XmATTACH_WIDGET ;
X	    XmNtopWidget = XmSeparator spinf_ang_sep;
X	    XmNleftAttachment = XmATTACH_WIDGET;
X	    XmNleftWidget = XmTextField spinf_ang_y;
X            XmNwidth = 80;
X            XmNmaxLength = 8;
X            XmNvalue = "10";
X            };
X        callbacks {
X	    MrmNcreateCallback = procedure proc_pexdraw_create(k_spinf_zang);
X            };
X        };
X
X!****************************** Spin Deltas
X
Xobject
X    spinf_delta_sep : XmSeparator {
X	arguments {
X	    XmNleftAttachment =  XmATTACH_FORM;
X	    XmNrightAttachment =  XmATTACH_FORM;
X	    XmNtopAttachment = XmATTACH_WIDGET;
X	    XmNtopWidget = XmTextField spinf_ang_y;
X	};
X    };
X
X
Xobject
X    spinf_delta_label : XmLabel {
X        arguments {
X	    XmNtopAttachment = XmATTACH_WIDGET ;
X	    XmNtopWidget = XmSeparator spinf_delta_sep;
X	    XmNleftAttachment = XmATTACH_FORM ;
X            XmNlabelString = "Delta Angles for spin";
X            };
X        };
X
Xobject
X    spinf_delta_x : XmTextField {
X        arguments {
X	    XmNtopAttachment = XmATTACH_WIDGET ;
X	    XmNtopWidget = XmSeparator spinf_delta_sep;
X	    XmNleftAttachment = XmATTACH_WIDGET;
X	    XmNleftWidget = XmLabel spinf_delta_label;
X            XmNwidth = 80;
X            XmNmaxLength = 8;
X            XmNvalue = "0";
X            };
X        callbacks {
X	    MrmNcreateCallback = procedure proc_pexdraw_create(k_spinf_dx);
X            };
X        };
X
Xobject
X    spinf_delta_y : XmTextField {
X        arguments {
X	    XmNtopAttachment = XmATTACH_WIDGET ;
X	    XmNtopWidget = XmSeparator spinf_delta_sep;
X	    XmNleftAttachment = XmATTACH_WIDGET;
X	    XmNleftWidget = XmTextField spinf_delta_x;
X            XmNwidth = 80;
X            XmNmaxLength = 8;
X            XmNvalue = "0";
X            };
X        callbacks {
X	    MrmNcreateCallback = procedure proc_pexdraw_create(k_spinf_dy);
X            };
X        };
X
Xobject
X    spinf_delta_z : XmTextField {
X        arguments {
X	    XmNtopAttachment = XmATTACH_WIDGET ;
X	    XmNtopWidget = XmSeparator spinf_delta_sep;
X	    XmNleftAttachment = XmATTACH_WIDGET;
X	    XmNleftWidget = XmTextField spinf_delta_y;
X            XmNwidth = 80;
X            XmNmaxLength = 8;
X            XmNvalue = "5";
X            };
X        callbacks {
X	    MrmNcreateCallback = procedure proc_pexdraw_create(k_spinf_dz);
X            };
X        };
X
X!* scale
X
Xobject
X    spinf_scale_sep : XmSeparator {
X	arguments {
X	    XmNleftAttachment =  XmATTACH_FORM;
X	    XmNrightAttachment =  XmATTACH_FORM;
X	    XmNtopAttachment = XmATTACH_WIDGET;
X	    XmNtopWidget = XmTextField spinf_delta_y;
X	};
X    };
X
X
Xobject
X    spinf_scale_label : XmLabel {
X        arguments {
X	    XmNtopAttachment = XmATTACH_WIDGET ;
X	    XmNtopWidget = XmSeparator spinf_scale_sep;
X	    XmNleftAttachment = XmATTACH_FORM ;
X            XmNlabelString = "Scale for strux";
X            };
X        };
X
Xobject
X    spinf_scale : XmTextField {
X        arguments {
X	    XmNtopAttachment = XmATTACH_WIDGET ;
X	    XmNtopWidget = XmSeparator spinf_scale_sep;
X	    XmNleftAttachment = XmATTACH_WIDGET;
X	    XmNleftWidget = XmLabel spinf_scale_label;
X            XmNwidth = 80;
X            XmNmaxLength = 8;
X            XmNvalue = "0";
X            };
X        callbacks {
X	    MrmNcreateCallback = procedure proc_pexdraw_create(k_spinf_scale);
X            };
X        };
X
X!********************************* Projection type
X
X
Xobject
X    spinf_stop_sep : XmSeparator {
X	arguments {
X	    XmNleftAttachment =  XmATTACH_FORM;
X	    XmNrightAttachment =  XmATTACH_FORM;
X	    XmNtopAttachment = XmATTACH_WIDGET;
X	    XmNtopWidget = XmTextField spinf_scale;
X	};
X    };
X
Xobject
X    spinf_stop_label : XmLabel {
X        arguments {
X	    XmNleftAttachment =  XmATTACH_FORM;
X	    XmNtopAttachment = XmATTACH_WIDGET;
X	    XmNtopWidget =  XmSeparator spinf_stop_sep;
X            XmNlabelString = "Projection Type";
X            };
X    };
X
Xobject
X    spinf_stop_box : XmRadioBox {
X        arguments {
X            XmNorientation = XmHORIZONTAL;
X	    XmNleftAttachment =  XmATTACH_WIDGET;
X	    XmNleftWidget = XmLabel spinf_stop_label;
X	    XmNtopAttachment = XmATTACH_WIDGET;
X	    XmNtopWidget =  XmSeparator spinf_stop_sep;
X            XmNborderWidth = 0;
X	    XmNisHomogeneous = false;
X            };
X        controls {
X            XmToggleButton   spinf_stop_spin;
X            XmToggleButton   spinf_stop_stop;
X            };
X        };
X                                                                                                              
Xobject
X    spinf_stop_spin : XmToggleButton {
X        arguments {
X            XmNlabelString = "Spin";
X            XmNset = on;   ! A radio box requires one toggle to be set.
X            XmNindicatorOn = on;   ! A radio box requires one toggle to be set.
X            };                                                             
X        };
X
Xobject
X    spinf_stop_stop : XmToggleButton {
X        arguments {
X            XmNlabelString = "Stop";
X            };
X        callbacks {
X            MrmNcreateCallback = procedure proc_pexdraw_create (k_spinf_stop);
X            };
X        };
X
X!*****************************  Bottom Buttons ******************************
X
Xobject
X    spin_button_box : XmRowColumn {
X        arguments {
X            XmNorientation = XmHORIZONTAL;
X	    XmNleftAttachment =  XmATTACH_FORM;
X	    XmNrightAttachment =  XmATTACH_FORM;
X	    XmNbottomAttachment =  XmATTACH_FORM;
X            XmNborderWidth = 2;
X            XmNentryBorder = 3;
X            };
X        controls {                                                  
X            XmPushButton     spin_apply_button;
X            XmPushButton     spin_dismiss_button;
X            XmPushButton     spin_can_button;
X            };
X        };
X
Xobject
X    spin_apply_button : XmPushButton widget { ! The menu positions the buttons
X        arguments {                     !  automatically.
X            XmNlabelString = "apply";
X            XmNforeground = yellow;
X            XmNbackground = red;
X            XmNhighlightColor = magenta;
X            XmNborderColor = green;
X	    XmNaccelerator = "Ctrl <key>a";
X	    XmNacceleratorText = " ^a";
X            };
X        callbacks {
X            MrmNcreateCallback = procedure proc_pexdraw_create (k_apply_spin);
X            XmNactivateCallback = procedure proc_pexdraw_activate (k_apply_spin);
X        };
X    };
X
Xobject
X    spin_can_button : XmPushButton widget {                       
X        arguments {
X            XmNlabelString = "fetch";
X            XmNforeground = yellow;
X            XmNbackground = red;
X            XmNhighlightColor = magenta;
X            XmNborderColor = green;
X            };
X        callbacks {
X            XmNactivateCallback = procedure proc_pexdraw_activate (k_reset_spin);
X        };
X    };
X
Xobject
X    spin_dismiss_button : XmPushButton widget {
X        arguments {
X            XmNlabelString = "dismiss";
X            XmNforeground = yellow;
X            XmNbackground = red;
X            XmNhighlightColor = magenta;
X            XmNborderColor = green;
X        };
X        callbacks {
X            MrmNcreateCallback = procedure proc_pexdraw_create (k_dismiss_spin);
X            XmNactivateCallback = procedure proc_pexdraw_activate (k_dismiss_spin);
X        };
X    };
X
X!************************************************************************
X! end of Spin Form
X!************************************************************************
X
X!************************************************************************
X! The Color Form
X!************************************************************************
X
Xobject
X    color_dialog : XmFormDialog {
X        arguments {
X            XmNdialogTitle = "Color Editor";
X            XmNdialogStyle = XmDIALOG_MODELESS;
X	    XmNheight = 400;
X	    XmNwidth = 360;
X!	    XmNmwmDecorations = 30;
X            XmNbackground = lightblue;
X        };
X        controls {
X            XmLabel     color_strux_label;
X            XmTextField color_strux_id;
X            XmLabel     color_elem_label;
X            XmTextField color_elem;
X	    XmSeparator color_red_sep;
X            XmLabel     color_red_label;
X	    XmScale     color_red;
X	    XmSeparator color_green_sep;
X            XmLabel     color_green_label;
X	    XmScale     color_green;
X	    XmSeparator color_blue_sep;
X            XmLabel     color_blue_label;
X	    XmScale     color_blue;
X            XmRowColumn color_button_box;
X            };
X
X        callbacks {
X            MrmNcreateCallback = procedure proc_pexdraw_create (k_color_form);
X            };
X    };
X
X
Xobject
X    color_strux_label : XmLabel {
X        arguments {
X	    XmNtopAttachment = XmATTACH_FORM ;
X	    XmNleftAttachment = XmATTACH_FORM ;
X	    XmNunitType = XmPIXELS;
X            XmNlabelString = "Strux ID";
X            };
X        };
X
Xobject
X    color_strux_id : XmTextField {
X        arguments {
X	    XmNtopAttachment = XmATTACH_FORM;
X	    XmNleftAttachment = XmATTACH_WIDGET;
X	    XmNleftWidget = XmLabel color_strux_label;
X            XmNwidth = 100;
X            XmNmaxLength = 12;
X            XmNvalue = "0";
X            };
X        callbacks {
X	    MrmNcreateCallback = procedure proc_pexdraw_create(k_color_strux);
X            };
X        };
X
X
Xobject
X    color_elem_label : XmLabel {
X        arguments {
X	    XmNtopAttachment = XmATTACH_FORM ;
X	    XmNleftAttachment = XmATTACH_WIDGET;
X	    XmNleftWidget = XmTextField color_strux_id;
X	    XmNunitType = XmPIXELS;
X            XmNlabelString = "Element";
X            };
X        };
X
Xobject
X    color_elem : XmTextField {
X        arguments {
X	    XmNtopAttachment = XmATTACH_FORM;
X	    XmNleftAttachment = XmATTACH_WIDGET;
X	    XmNleftWidget = XmLabel color_elem_label;
X            XmNwidth = 100;
X            XmNmaxLength = 12;
X            XmNvalue = "0";
X            };
X        callbacks {
X	    MrmNcreateCallback = procedure proc_pexdraw_create(k_color_elem);
X            };
X        };
X
X!****************************** Color Sliders
X
Xobject
X    color_red_sep : XmSeparator {
X	arguments {
X	    XmNleftAttachment = XmATTACH_FORM;
X	    XmNrightAttachment =  XmATTACH_FORM;
X	    XmNtopAttachment =  XmATTACH_WIDGET;
X	    XmNtopWidget = XmTextField color_strux_id;
X	};
X    };
X
Xobject
X    color_red_label : XmLabel {
X        arguments {
X	    XmNtopAttachment = XmATTACH_WIDGET ;
X	    XmNtopWidget = XmSeparator color_red_sep;
X	    XmNleftAttachment = XmATTACH_FORM ;
X	    XmNunitType = XmPIXELS;
X            XmNwidth = 75;
X            XmNlabelString = "Red";
X            };
X        };
X
Xobject
X    color_red : XmScale {
X        arguments {
X	    XmNtopAttachment = XmATTACH_WIDGET ;
X	    XmNtopWidget = XmSeparator color_red_sep;
X	    XmNleftAttachment = XmATTACH_WIDGET;
X	    XmNleftWidget = XmLabel color_red_label;
X	    XmNrightAttachment =  XmATTACH_FORM;
X            XmNorientation = XmHORIZONTAL;
X	    XmNminimum = 000;
X	    XmNmaximum = 100;
X            XmNvalue = 100;
X            XmNshowValue = on;
X	    XmNdecimalPoints = 2;
X            };
X        callbacks {
X	    MrmNcreateCallback = procedure proc_pexdraw_create(k_color_red);
X            XmNvalueChangedCallback = procedure proc_pexdraw_activate (k_apply_color);
X            };
X        };
X
Xobject
X    color_green_sep : XmSeparator {
X	arguments {
X	    XmNleftAttachment = XmATTACH_FORM;
X	    XmNrightAttachment =  XmATTACH_FORM;
X	    XmNtopAttachment =  XmATTACH_WIDGET;
X	    XmNtopWidget = XmScale color_red;
X	};
X    };
X
Xobject
X    color_green_label : XmLabel {
X        arguments {
X	    XmNtopAttachment = XmATTACH_WIDGET ;
X	    XmNtopWidget = XmSeparator color_green_sep;
X	    XmNleftAttachment = XmATTACH_FORM ;
X	    XmNunitType = XmPIXELS;
X            XmNwidth = 75;
X            XmNlabelString = "Green";
X            };
X        };
X
Xobject
X    color_green : XmScale {
X        arguments {
X	    XmNtopAttachment = XmATTACH_WIDGET ;
X	    XmNtopWidget = XmSeparator color_green_sep;
X	    XmNleftAttachment = XmATTACH_WIDGET;
X	    XmNleftWidget = XmLabel color_green_label;
X	    XmNrightAttachment =  XmATTACH_FORM;
X            XmNorientation = XmHORIZONTAL;
X	    XmNminimum = 000;
X	    XmNmaximum = 100;
X            XmNvalue = 100;
X            XmNshowValue = on;
X	    XmNdecimalPoints = 2;
X            };
X        callbacks {
X	    MrmNcreateCallback = procedure proc_pexdraw_create(k_color_green);
X            XmNvalueChangedCallback = procedure proc_pexdraw_activate (k_apply_color);
X            };
X        };
X
Xobject
X    color_blue_sep : XmSeparator {
X	arguments {
X	    XmNleftAttachment = XmATTACH_FORM;
X	    XmNrightAttachment =  XmATTACH_FORM;
X	    XmNtopAttachment =  XmATTACH_WIDGET;
X	    XmNtopWidget = XmScale color_green;
X	};
X    };
X
Xobject
X    color_blue_label : XmLabel {
X        arguments {
X	    XmNtopAttachment = XmATTACH_WIDGET ;
X	    XmNtopWidget = XmSeparator color_blue_sep;
X	    XmNleftAttachment = XmATTACH_FORM ;
X	    XmNunitType = XmPIXELS;
X            XmNwidth = 75;
X            XmNlabelString = "Blue";
X            };
X        };
X
Xobject
X    color_blue : XmScale {
X        arguments {
X	    XmNtopAttachment = XmATTACH_WIDGET ;
X	    XmNtopWidget = XmSeparator color_blue_sep;
X	    XmNleftAttachment = XmATTACH_WIDGET;
X	    XmNleftWidget = XmLabel color_blue_label;
X	    XmNrightAttachment =  XmATTACH_FORM;
X            XmNorientation = XmHORIZONTAL;
X	    XmNminimum = 000;
X	    XmNmaximum = 100;
X            XmNvalue = 100;
X            XmNshowValue = on;
X	    XmNdecimalPoints = 2;
X            };
X        callbacks {
X	    MrmNcreateCallback = procedure proc_pexdraw_create(k_color_blue);
X            XmNvalueChangedCallback = procedure proc_pexdraw_activate (k_apply_color);
X            };
X        };
X
X!*****************************  Bottom Buttons ******************************
X
Xobject
X    color_button_box : XmRowColumn {
X        arguments {
X            XmNorientation = XmHORIZONTAL;
X	    XmNleftAttachment =  XmATTACH_FORM;
X	    XmNrightAttachment =  XmATTACH_FORM;
X	    XmNbottomAttachment =  XmATTACH_FORM;
X            XmNborderWidth = 2;
X            XmNentryBorder = 3;
X            };
X        controls {                                                  
X            XmPushButton     color_apply_button;
X            XmPushButton     color_dismiss_button;
X            XmPushButton     color_can_button;
X            };
X        };
X
Xobject
X    color_apply_button : XmPushButton widget { ! The menu positions the buttons
X        arguments {                     !  automatically.
X            XmNlabelString = "apply";
X            XmNforeground = yellow;
X            XmNbackground = red;
X            XmNhighlightColor = magenta;
X            XmNborderColor = green;
X	    XmNaccelerator = "Ctrl <key>a";
X	    XmNacceleratorText = " ^a";
X            };
X        callbacks {
X            XmNactivateCallback = procedure proc_pexdraw_activate (k_apply_color);
X        };
X    };
X
Xobject
X    color_can_button : XmPushButton widget {                       
X        arguments {
X            XmNlabelString = "fetch";
X            XmNforeground = yellow;
X            XmNbackground = red;
X            XmNhighlightColor = magenta;
X            XmNborderColor = green;
X            };
X        callbacks {
X            XmNactivateCallback = procedure proc_pexdraw_activate (k_reset_color);
X        };
X    };
X
Xobject
X    color_dismiss_button : XmPushButton widget {
X        arguments {
X            XmNlabelString = "dismiss";
X            XmNforeground = yellow;
X            XmNbackground = red;
X            XmNhighlightColor = magenta;
X            XmNborderColor = green;
X        };
X        callbacks {
X            XmNactivateCallback = procedure proc_pexdraw_activate (k_dismiss_color);
X        };
X    };
X
X!************************************************************************
X! end of Color Form
X!************************************************************************
X
Xend module;
X
X
END_OF_FILE
  if test 24026 -ne `wc -c <'pexdrawu.4'`; then
    echo shar: \"'pexdrawu.4'\" unpacked with wrong size!
  fi
  # end of 'pexdrawu.4'
fi
echo shar: End of archive 7 \(of 14\).
cp /dev/null ark7isdone
MISSING=""
for I in 1 2 3 4 5 6 7 8 9 10 11 12 13 14 ; do
    if test ! -f ark${I}isdone ; then
	MISSING="${MISSING} ${I}"
    fi
done
if test "${MISSING}" = "" ; then
    echo You have unpacked all 14 archives.
    rm -f ark[1-9]isdone ark[1-9][0-9]isdone
    echo "concatentating pexdraw.c ..."
    cat pexdrawc.? > pexdraw.c
    rm pexdrawc.?
    echo "concatentating pexdraw.uil ..."
    cat pexdrawu.? > pexdraw.uil
    rm pexdrawu.?
    echo "concatentating teapot.c ..."
    rm teapotc.?
else
    echo You still must unpack the following archives:
    echo "        " ${MISSING}
fi
exit 0
exit 0 # Just in case...
-- 
  // chris@IMD.Sterling.COM       | Send comp.sources.x submissions to:
\X/  Amiga - The only way to fly! |    sources-x@imd.sterling.com
 "It's intuitively obvious to the |
  most casual observer..."        | GCS d+/-- p+ c++ l+ m+ s++/+ g+ w+ t+ r+ x+
