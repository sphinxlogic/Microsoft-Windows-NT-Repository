Newsgroups: comp.sources.x
From: jch@okimicro.oki.com (Jan Hardenbergh)
Subject: v20i013:  pexdraw - A PEX drawing program, Part03/14
Message-ID: <1993Jun8.150048.18719@sparky.imd.sterling.com>
X-Md4-Signature: 3172cfb31690f255fbb267fa1ec067f0
Sender: chris@sparky.imd.sterling.com (Chris Olson)
Organization: Sterling Software
Date: Tue, 8 Jun 1993 15:00:48 GMT
Approved: chris@sparky.imd.sterling.com

Submitted-by: jch@okimicro.oki.com (Jan Hardenbergh)
Posting-number: Volume 20, Issue 13
Archive-name: pexdraw/part03
Environment: X11R5, PEX

#! /bin/sh
# This is a shell archive.  Remove anything before this line, then feed it
# into a shell via "sh file" or similar.  To overwrite existing files,
# type "sh file -c".
# Contents:  XMU/StdCmap.c teapotc.1
# Wrapped by chris@sparky on Tue Jun  8 09:46:31 1993
PATH=/bin:/usr/bin:/usr/ucb:/usr/local/bin:/usr/lbin ; export PATH
echo If this archive is complete, you will see the following message:
echo '          "shar: End of archive 3 (of 14)."'
if test -f 'XMU/StdCmap.c' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'XMU/StdCmap.c'\"
else
  echo shar: Extracting \"'XMU/StdCmap.c'\" \(7209 characters\)
  sed "s/^X//" >'XMU/StdCmap.c' <<'END_OF_FILE'
X#ifdef SCCS
Xstatic char sccsid[]="@(#)StdCmap.c	1.2 Oki 92/11/30";
X#endif
X/*
X	This file is under sccs control at Oki in:
X	/nfs/sole/root/sccs1.p/X11R5/mit/lib/Xmu/s.StdCmap.c
X*/
X/* $XConsortium: StdCmap.c,v 1.13 92/11/24 14:16:21 rws Exp $ 
X * 
X * Copyright 1989 by the Massachusetts Institute of Technology
X *
X * Permission to use, copy, modify, and distribute this software and its
X * documentation for any purpose and without fee is hereby granted, provided 
X * that the above copyright notice appear in all copies and that both that 
X * copyright notice and this permission notice appear in supporting 
X * documentation, and that the name of M.I.T. not be used in advertising
X * or publicity pertaining to distribution of the software without specific, 
X * written prior permission. M.I.T. makes no representations about the 
X * suitability of this software for any purpose.  It is provided "as is"
X * without express or implied warranty.
X *
X * M.I.T. DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING ALL
X * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO EVENT SHALL M.I.T.
X * BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
X * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION
X * OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN
X * CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
X *
X * Author:  Donna Converse, MIT X Consortium
X */
X
X#include <stdio.h>
X#include <X11/Xlib.h>
X#include <X11/Xatom.h>
X#include <X11/Xutil.h>
X#include <X11/Xmu/StdCmap.h>
X
X#define lowbit(x) ((x) & (~(x) + 1))
X
Xstatic Status valid_args();		/* argument restrictions */
X
X/*
X * To create any one standard colormap, use XmuStandardColormap().
X *
X * Create a standard colormap for the given screen, visualid, and visual
X * depth, with the given red, green, and blue maximum values, with the
X * given standard property name.  Return a pointer to an XStandardColormap
X * structure which describes the newly created colormap, upon success.
X * Upon failure, return NULL.
X * 
X * XmuStandardColormap() calls XmuCreateColormap() to create the map.
X *
X * Resources created by this function are not made permanent; that is the
X * caller's responsibility.
X */
X
XXStandardColormap *XmuStandardColormap(dpy, screen, visualid, depth, property,
X				       cmap, red_max, green_max, blue_max)
X    Display		*dpy;		/* specifies X server connection */
X    int			screen; 	/* specifies display screen */
X    VisualID		visualid;	/* identifies the visual type */
X    unsigned int	depth;		/* identifies the visual type */
X    Atom		property;	/* a standard colormap property */
X    Colormap		cmap;		/* specifies colormap ID or None */
X    unsigned long	red_max, green_max, blue_max;	/* allocations */
X{
X    XStandardColormap	*stdcmap;
X    Status		status;
X    XVisualInfo		vinfo_template, *vinfo;
X    long		vinfo_mask;
X    int			n;
X
X    /* Match the required visual information to an actual visual */
X    vinfo_template.visualid = visualid;	
X    vinfo_template.screen = screen;
X    vinfo_template.depth = depth;
X    vinfo_mask = VisualIDMask | VisualScreenMask | VisualDepthMask;
X    if ((vinfo = XGetVisualInfo(dpy, vinfo_mask, &vinfo_template, &n)) == NULL)
X	return 0;
X
X    /* Check the validity of the combination of visual characteristics,
X     * allocation, and colormap property.  Create an XStandardColormap
X     * structure.
X     */
X
X    if (! valid_args(vinfo, red_max, green_max, blue_max, property)
X	|| ((stdcmap = XAllocStandardColormap()) == NULL)) {
X	XFree((char *) vinfo);
X	return 0;
X    }
X
X    /* Fill in the XStandardColormap structure */
X
X    if (cmap == DefaultColormap(dpy, screen)) {
X	/* Allocating out of the default map, cannot use XFreeColormap() */
X	Window win = XCreateWindow(dpy, RootWindow(dpy, screen), 1, 1, 1, 1,
X				   0, 0, InputOnly, vinfo->visual,
X				   (unsigned long) 0,
X				   (XSetWindowAttributes *)NULL);
X	stdcmap->killid  = (XID) XCreatePixmap(dpy, win, 1, 1, depth);
X	XDestroyWindow(dpy, win);
X	stdcmap->colormap = cmap;
X    } else {
X	stdcmap->killid = ReleaseByFreeingColormap;
X	stdcmap->colormap = XCreateColormap(dpy, RootWindow(dpy, screen),
X					    vinfo->visual, AllocNone);
X    }
X    stdcmap->red_max = red_max;
X    stdcmap->green_max = green_max;
X    stdcmap->blue_max = blue_max;
X    if (property == XA_RGB_GRAY_MAP) 
X	stdcmap->red_mult = stdcmap->green_mult = stdcmap->blue_mult = 1;
X    else if (vinfo->class == TrueColor || vinfo->class == DirectColor) {
X	stdcmap->red_mult = lowbit(vinfo->red_mask);
X	stdcmap->green_mult = lowbit(vinfo->green_mask);
X	stdcmap->blue_mult = lowbit(vinfo->blue_mask);
X    } else {
X	stdcmap->red_mult = (red_max > 0)
X	    ? (green_max + 1) * (blue_max + 1) : 0;
X	stdcmap->green_mult = (green_max > 0) ? blue_max + 1 : 0;
X	stdcmap->blue_mult = (blue_max > 0) ? 1 : 0;
X    }
X    stdcmap->base_pixel = 0;			/* base pixel may change */
X    stdcmap->visualid = vinfo->visualid;
X
X    /* Make the colormap */
X
X    status = XmuCreateColormap(dpy, stdcmap);
X
X    /* Clean up */
X
X    XFree((char *) vinfo);
X    if (!status) {
X
X	/* Free the colormap or the pixmap, if we created one */
X	if (stdcmap->killid == ReleaseByFreeingColormap)
X	    XFreeColormap(dpy, stdcmap->colormap);
X	else if (stdcmap->killid != None)
X	    XFreePixmap(dpy, stdcmap->killid);
X	
X	XFree((char *) stdcmap);
X	return (XStandardColormap *) NULL;
X    }
X    return stdcmap;
X}
X
X/****************************************************************************/
Xstatic Status valid_args(vinfo, red_max, green_max, blue_max, property)
X    XVisualInfo		*vinfo;		/* specifies visual */
X    unsigned long	red_max, green_max, blue_max;	/* specifies alloc */
X    Atom		property;	/* specifies property name */
X{
X    unsigned long	ncolors;	/* number of colors requested */
X
X    /* Determine that the number of colors requested is <= map size */
X
X    if ((vinfo->class == DirectColor) || (vinfo->class == TrueColor)) {
X	unsigned long mask;
X
X	mask = vinfo->red_mask;
X	while (!(mask & 1))
X	    mask >>= 1;
X	if (red_max > mask)
X	    return 0;
X	mask = vinfo->green_mask;
X	while (!(mask & 1))
X	    mask >>= 1;
X	if (green_max > mask)
X	    return 0;
X	mask = vinfo->blue_mask;
X	while (!(mask & 1))
X	    mask >>= 1;
X	if (blue_max > mask)
X	    return 0;
X    } else if (property == XA_RGB_GRAY_MAP) {
X	ncolors = red_max + green_max + blue_max + 1;
X	if (ncolors > vinfo->colormap_size)
X	    return 0;
X    } else {
X	ncolors = (red_max + 1) * (green_max + 1) * (blue_max + 1);
X	if (ncolors > vinfo->colormap_size)
X	    return 0;
X    }
X    
X    /* Determine that the allocation and visual make sense for the property */
X
X    switch (property)
X    {
X      case XA_RGB_DEFAULT_MAP:
X	if (red_max == 0 || green_max == 0 || blue_max == 0)
X	    return 0;
X	break;
X      case XA_RGB_RED_MAP:
X	if (red_max == 0)
X	    return 0;
X	break;
X      case XA_RGB_GREEN_MAP:
X	if (green_max == 0)
X	    return 0;
X	break;
X      case XA_RGB_BLUE_MAP:	
X	if (blue_max == 0)
X	    return 0;
X	break;
X      case XA_RGB_BEST_MAP:
X	if (red_max == 0 || green_max == 0 || blue_max == 0)
X	    return 0;
X	break;
X      case XA_RGB_GRAY_MAP:
X	if (red_max == 0 || blue_max == 0 || green_max == 0)
X	    return 0;
X	break;
X      default:
X	return 0;
X    }
X    return 1;
X}
END_OF_FILE
  if test 7209 -ne `wc -c <'XMU/StdCmap.c'`; then
    echo shar: \"'XMU/StdCmap.c'\" unpacked with wrong size!
  fi
  # end of 'XMU/StdCmap.c'
fi
if test -f 'teapotc.1' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'teapotc.1'\"
else
  echo shar: Extracting \"'teapotc.1'\" \(50546 characters\)
  sed "s/^X//" >'teapotc.1' <<'END_OF_FILE'
X/*
X * teapot.c - RGB Cube
X cc -o teapot teapot.c -lPEX5 -lm -lX11                    -lnsl
X
X			Copyright (c) 1993 by 
X			Oki Electric Industry Co., Ltd.
X			All Rights Reserved
X	
X * Permission to use, copy, modify, and distribute this software and its
X * documentation for any purpose and without fee is hereby granted,
X * provided that the above copyright notice appear in all copies and that
X * both that copyright notice and this permission notice appear in
X * supporting documentation, and that the name of Oki not be
X * used in advertising or publicity pertaining to distribution of the
X * software without specific, written prior permission. Oki
X * makes no representations about the suitability of this software for any
X * purpose.  It is provided "as is" without express or implied warranty.
X*/
X#include <X11/Xlib.h>
X#include <X11/PEX5/PEXlib.h>
X
XPEXVertexNormal pt1[] = {
X{{1.5,0,0.425},
X{0.90286,0,0.429934}},
X{{1.4715,0,0.473214},
X{0.804835,0,0.593498}},
X{{1.44191,0,0.505357},
X{0.639613,0,0.768697}},
X{{1.41472,0,0.521429},
X{0.308043,0,0.951372}},
X{{1.39344,0,0.521429},
X{-0.42399,0,0.905667}},
X{{1.38156,0,0.505357},
X{-0.970272,0,0.242018}},
X{{1.38258,0,0.473214},
X{-0.977666,0,-0.210166}},
X{{1.4,0,0.425},
X{-0.90286,0,-0.429934}},
X{{1.46099,-0.34758,0.425},
X{0.879821,-0.201972,0.430258}},
X{{1.43323,-0.340976,0.473224},
X{0.784168,-0.179963,0.59388}},
X{{1.40441,-0.334119,0.50537},
X{0.623016,-0.142928,0.769041}},
X{{1.37793,-0.32782,0.521441},
X{0.299878,-0.068729,0.951499}},
X{{1.3572,-0.322888,0.521438},
X{-0.412996,0.0948877,0.905776}},
X{{1.34563,-0.320135,0.505362},
X{-0.945617,0.217088,0.242242}},
X{{1.34662,-0.320372,0.473216},
X{-0.952836,0.21873,-0.210382}},
X{{1.36359,-0.324408,0.425},
X{-0.879785,0.201963,-0.430336}},
X{{1.34956,-0.664723,0.425},
X{0.812441,-0.393393,0.430327}},
X{{1.32392,-0.652094,0.473288},
X{0.724043,-0.350366,0.594143}},
X{{1.2973,-0.63898,0.505459},
X{0.574997,-0.27801,0.769473}},
X{{1.27284,-0.626933,0.521527},
X{0.276213,-0.13325,0.951815}},
X{{1.25369,-0.617501,0.521502},
X{-0.381749,0.185206,0.90552}},
X{{1.243,-0.612236,0.505398},
X{-0.873183,0.422858,0.24237}},
X{{1.24392,-0.612689,0.473227},
X{-0.879852,0.42602,-0.210636}},
X{{1.25959,-0.620408,0.425},
X{-0.812174,0.393263,-0.43095}},
X{{1.17411,-0.943032,0.425},
X{0.705562,-0.563871,0.429222}},
X{{1.1518,-0.925115,0.473462},
X{0.629043,-0.502133,0.593437}},
X{{1.12864,-0.906511,0.505701},
X{0.499435,-0.398063,0.769488}},
X{{1.10736,-0.889419,0.521759},
X{0.238926,-0.189642,0.952339}},
X{{1.0907,-0.876039,0.521676},
X{-0.333154,0.267192,0.904222}},
X{{1.0814,-0.86857,0.505495},
X{-0.757916,0.605853,0.241879}},
X{{1.0822,-0.869212,0.473256},
X{-0.763682,0.610283,-0.21058}},
X{{1.09584,-0.880163,0.425},
X{-0.704781,0.563248,-0.431318}},
X{{0.943032,-1.17411,0.425},
X{0.564712,-0.706614,0.426378}},
X{{0.925115,-1.1518,0.473802},
X{0.50411,-0.629487,0.591286}},
X{{0.906511,-1.12864,0.506173},
X{0.400344,-0.498551,0.768877}},
X{{0.889419,-1.10736,0.522212},
X{0.190212,-0.235108,0.953176}},
X{{0.876039,-1.0907,0.522016},
X{-0.269373,0.339151,0.90134}},
X{{0.86857,-1.0814,0.505684},
X{-0.605833,0.758381,0.240467}},
X{{0.869212,-1.0822,0.473312},
X{-0.610415,0.763719,-0.210063}},
X{{0.880163,-1.09584,0.425},
X{-0.563247,0.704781,-0.431319}},
X{{0.664723,-1.34956,0.425},
X{0.395224,-0.816224,0.421398}},
X{{0.652094,-1.32392,0.474362},
X{0.353826,-0.727883,0.587362}},
X{{0.63898,-1.2973,0.506951},
X{0.28142,-0.575922,0.76754}},
X{{0.626933,-1.27284,0.522959},
X{0.132539,-0.267308,0.954453}},
X{{0.617501,-1.25369,0.522576},
X{-0.191407,0.399883,0.896358}},
X{{0.612236,-1.243,0.505995},
X{-0.423025,0.87432,0.237938}},
X{{0.612689,-1.24392,0.473406},
X{-0.426254,0.880127,-0.209005}},
X{{0.620408,-1.25959,0.425},
X{-0.393263,0.812174,-0.43095}},
X{{0.34758,-1.46099,0.425},
X{0.203657,-0.887166,0.414078}},
X{{0.340976,-1.43323,0.475197},
X{0.183696,-0.792542,0.581492}},
X{{0.334119,-1.40441,0.508111},
X{0.147086,-0.626421,0.765481}},
X{{0.32782,-1.37793,0.524072},
X{0.0692139,-0.284013,0.956319}},
X{{0.322888,-1.3572,0.523411},
X{-0.0998522,0.447353,0.888766}},
X{{0.320135,-1.34563,0.506459},
X{-0.217118,0.947631,0.234212}},
X{{0.320372,-1.34662,0.473545},
X{-0.218981,0.953431,-0.207406}},
X{{0.324408,-1.36359,0.425},
X{-0.201963,0.879785,-0.430336}},
X{{0,-1.5,0.425},
X{0,-0.914478,0.404637}},
X{{0,-1.4715,0.476363},
X{0.00219289,-0.818921,0.573902}},
X{{0,-1.44191,0.50973},
X{0.00413234,-0.646388,0.762998}},
X{{0,-1.41472,0.525627},
X{0.00508175,-0.283466,0.958969}},
X{{0,-1.39344,0.524577},
X{0.00354364,0.478261,0.878211}},
X{{0,-1.38156,0.507106},
X{0.000518805,0.973318,0.229458}},
X{{0,-1.38258,0.473739},
X{-0.000139255,0.978665,-0.205461}},
X{{0,-1.4,0.425},
X{0,0.90286,-0.429934}}
X};
X
XPEXVertexNormal pt2[] = {
X{{0,-1.5,0.425},{0,-0.914478,0.404637}},
X{{0,-1.4715,0.476363},{-0.00219289,-0.818921,0.573902}},
X{{0,-1.44191,0.50973},{-0.00413234,-0.646388,0.762998}},
X{{0,-1.41472,0.525627},{-0.00508175,-0.283466,0.958969}},
X{{0,-1.39344,0.524577},{-0.00354364,0.478261,0.878211}},
X{{0,-1.38156,0.507106},{-0.000518805,0.973318,0.229458}},
X{{0,-1.38258,0.473739},{0.000139255,0.978665,-0.205461}},
X{{0,-1.4,0.425},{0,0.90286,-0.429934}},
X{{-0.34758,-1.46099,0.425},{-0.203658,-0.887166,0.414078}},
X{{-0.340976,-1.43323,0.475197},{-0.183697,-0.792542,0.581492}},
X{{-0.334119,-1.40441,0.508111},{-0.147086,-0.626421,0.765481}},
X{{-0.32782,-1.37793,0.524072},{-0.0692139,-0.284013,0.956319}},
X{{-0.322888,-1.3572,0.523411},{0.0998522,0.447353,0.888766}},
X{{-0.320135,-1.34563,0.506459},{0.217118,0.947631,0.234212}},
X{{-0.320372,-1.34662,0.473545},{0.218981,0.953431,-0.207406}},
X{{-0.324408,-1.36359,0.425},{0.201963,0.879785,-0.430336}},
X{{-0.664723,-1.34956,0.425},{-0.395224,-0.816224,0.421398}},
X{{-0.652094,-1.32392,0.474362},{-0.353826,-0.727883,0.587362}},
X{{-0.63898,-1.2973,0.506951},{-0.28142,-0.575922,0.76754}},
X{{-0.626933,-1.27284,0.522959},{-0.132539,-0.267308,0.954453}},
X{{-0.617501,-1.25369,0.522576},{0.191407,0.399883,0.896358}},
X{{-0.612236,-1.243,0.505995},{0.423025,0.87432,0.237938}},
X{{-0.612689,-1.24392,0.473406},{0.426254,0.880127,-0.209005}},
X{{-0.620408,-1.25959,0.425},{0.393263,0.812174,-0.43095}},
X{{-0.943032,-1.17411,0.425},{-0.564712,-0.706613,0.426378}},
X{{-0.925115,-1.1518,0.473802},{-0.50411,-0.629486,0.591287}},
X{{-0.906511,-1.12864,0.506173},{-0.400344,-0.498551,0.768877}},
X{{-0.889419,-1.10736,0.522212},{-0.190212,-0.235108,0.953176}},
X{{-0.876039,-1.0907,0.522016},{0.269374,0.339151,0.90134}},
X{{-0.86857,-1.0814,0.505684},{0.605833,0.758381,0.240467}},
X{{-0.869212,-1.0822,0.473312},{0.610415,0.763719,-0.210063}},
X{{-0.880163,-1.09584,0.425},{0.563248,0.704781,-0.431318}},
X{{-1.17411,-0.943032,0.425},{-0.705562,-0.563871,0.429222}},
X{{-1.1518,-0.925115,0.473462},{-0.629043,-0.502133,0.593437}},
X{{-1.12864,-0.906511,0.505701},{-0.499435,-0.398062,0.769488}},
X{{-1.10736,-0.889419,0.521759},{-0.238926,-0.189642,0.952339}},
X{{-1.0907,-0.876039,0.521676},{0.333154,0.267192,0.904222}},
X{{-1.0814,-0.86857,0.505495},{0.757916,0.605853,0.241879}},
X{{-1.0822,-0.869212,0.473256},{0.763682,0.610283,-0.210581}},
X{{-1.09584,-0.880163,0.425},{0.704781,0.563247,-0.431319}},
X{{-1.34956,-0.664723,0.425},{-0.812441,-0.393393,0.430327}},
X{{-1.32392,-0.652094,0.473288},{-0.724043,-0.350366,0.594143}},
X{{-1.2973,-0.63898,0.505459},{-0.574997,-0.27801,0.769473}},
X{{-1.27284,-0.626933,0.521527},{-0.276213,-0.13325,0.951815}},
X{{-1.25369,-0.617501,0.521502},{0.381749,0.185206,0.90552}},
X{{-1.243,-0.612236,0.505398},{0.873183,0.422858,0.24237}},
X{{-1.24392,-0.612689,0.473227},{0.879852,0.42602,-0.210636}},
X{{-1.25959,-0.620408,0.425},{0.812174,0.393263,-0.43095}},
X{{-1.46099,-0.34758,0.425},{-0.879821,-0.201972,0.430258}},
X{{-1.43323,-0.340976,0.473224},{-0.784168,-0.179963,0.59388}},
X{{-1.40441,-0.334119,0.50537},{-0.623016,-0.142928,0.769041}},
X{{-1.37793,-0.32782,0.521441},{-0.299878,-0.068729,0.951498}},
X{{-1.3572,-0.322888,0.521438},{0.412996,0.0948877,0.905776}},
X{{-1.34563,-0.320135,0.505362},{0.945617,0.217088,0.242242}},
X{{-1.34662,-0.320372,0.473216},{0.952836,0.21873,-0.210382}},
X{{-1.36359,-0.324408,0.425},{0.879785,0.201963,-0.430336}},
X{{-1.5,0,0.425},{-0.90286,0,0.429934}},
X{{-1.4715,0,0.473214},{-0.804835,0,0.593498}},
X{{-1.44191,0,0.505357},{-0.639613,0,0.768697}},
X{{-1.41472,0,0.521429},{-0.308043,0,0.951372}},
X{{-1.39344,0,0.521429},{0.42399,0,0.905667}},
X{{-1.38156,0,0.505357},{0.970272,0,0.242018}},
X{{-1.38258,0,0.473214},{0.977666,0,-0.210166}},
X{{-1.4,0,0.425},{0.90286,0,-0.429934}}};
X
XPEXVertexNormal pt3[] = {
X{{-1.5,0,0.425},{-0.90286,0,0.429934}},
X{{-1.4715,0,0.473214},{-0.804835,0,0.593498}},
X{{-1.44191,0,0.505357},{-0.639613,0,0.768697}},
X{{-1.41472,0,0.521429},{-0.308043,0,0.951372}},
X{{-1.39344,0,0.521429},{0.42399,0,0.905667}},
X{{-1.38156,0,0.505357},{0.970272,0,0.242018}},
X{{-1.38258,0,0.473214},{0.977666,0,-0.210166}},
X{{-1.4,0,0.425},{0.90286,0,-0.429934}},
X{{-1.46099,0.34758,0.425},{-0.879785,0.201963,0.430336}},
X{{-1.43323,0.340976,0.473214},{-0.784115,0.180001,0.593939}},
X{{-1.40441,0.334119,0.505357},{-0.622976,0.14301,0.769058}},
X{{-1.37793,0.32782,0.521429},{-0.299922,0.06885,0.951476}},
X{{-1.3572,0.322888,0.521429},{0.412853,-0.0947744,0.905853}},
X{{-1.34563,0.320135,0.505357},{0.94561,-0.217074,0.24228}},
X{{-1.34662,0.320372,0.473214},{0.952833,-0.218732,-0.210396}},
X{{-1.36359,0.324408,0.425},{0.879785,-0.201963,-0.430336}},
X{{-1.34956,0.664723,0.425},{-0.812174,0.393263,0.43095}},
X{{-1.32392,0.652094,0.473214},{-0.723644,0.350396,0.594611}},
X{{-1.2973,0.63898,0.505357},{-0.574691,0.278272,0.769607}},
X{{-1.27284,0.626933,0.521429},{-0.276525,0.133896,0.951633}},
X{{-1.25369,0.617501,0.521429},{0.380702,-0.18434,0.906137}},
X{{-1.243,0.612236,0.505357},{0.873134,-0.422781,0.242679}},
X{{-1.24392,0.612689,0.473214},{0.879825,-0.42602,-0.210748}},
X{{-1.25959,0.620408,0.425},{0.812174,-0.393263,-0.43095}},
X{{-1.17411,0.943032,0.425},{-0.704781,0.563247,0.431319}},
X{{-1.1518,0.925115,0.473214},{-0.627846,0.501763,0.595015}},
X{{-1.12864,0.906511,0.505357},{-0.498488,0.398382,0.769937}},
X{{-1.10736,0.889419,0.521429},{-0.239779,0.191627,0.951728}},
X{{-1.0907,0.876039,0.521429},{0.330142,-0.263843,0.906308}},
X{{-1.0814,0.86857,0.505357},{0.757782,-0.605605,0.242919}},
X{{-1.0822,0.869212,0.473214},{0.7636,-0.610254,-0.21096}},
X{{-1.09584,0.880163,0.425},{0.704781,-0.563248,-0.431318}},
X{{-0.943032,1.17411,0.425},{-0.563247,0.704782,0.431318}},
X{{-0.925115,1.1518,0.473214},{-0.501763,0.627846,0.595015}},
X{{-0.906511,1.12864,0.505357},{-0.398382,0.498488,0.769937}},
X{{-0.889419,1.10736,0.521429},{-0.191626,0.239779,0.951728}},
X{{-0.876039,1.0907,0.521429},{0.263843,-0.330142,0.906308}},
X{{-0.86857,1.0814,0.505357},{0.605604,-0.757782,0.242919}},
X{{-0.869212,1.0822,0.473214},{0.610254,-0.7636,-0.21096}},
X{{-0.880163,1.09584,0.425},{0.563247,-0.704781,-0.431319}},
X{{-0.664723,1.34956,0.425},{-0.393263,0.812174,0.43095}},
X{{-0.652094,1.32392,0.473214},{-0.350396,0.723644,0.594612}},
X{{-0.63898,1.2973,0.505357},{-0.278272,0.574691,0.769607}},
X{{-0.626933,1.27284,0.521429},{-0.133896,0.276525,0.951633}},
X{{-0.617501,1.25369,0.521429},{0.18434,-0.380702,0.906137}},
X{{-0.612236,1.243,0.505357},{0.422781,-0.873134,0.242679}},
X{{-0.612689,1.24392,0.473214},{0.42602,-0.879825,-0.210748}},
X{{-0.620408,1.25959,0.425},{0.393263,-0.812174,-0.43095}},
X{{-0.34758,1.46099,0.425},{-0.201963,0.879785,0.430336}},
X{{-0.340976,1.43323,0.473214},{-0.180001,0.784115,0.593939}},
X{{-0.334119,1.40441,0.505357},{-0.14301,0.622976,0.769058}},
X{{-0.32782,1.37793,0.521429},{-0.06885,0.299922,0.951476}},
X{{-0.322888,1.3572,0.521429},{0.0947743,-0.412853,0.905853}},
X{{-0.320135,1.34563,0.505357},{0.217074,-0.94561,0.24228}},
X{{-0.320372,1.34662,0.473214},{0.218732,-0.952833,-0.210396}},
X{{-0.324408,1.36359,0.425},{0.201963,-0.879785,-0.430336}},
X{{0,1.5,0.425},{0,0.90286,0.429934}},
X{{0,1.4715,0.473214},{0,0.804835,0.593498}},
X{{0,1.44191,0.505357},{0,0.639613,0.768697}},
X{{0,1.41472,0.521429},{0,0.308043,0.951372}},
X{{0,1.39344,0.521429},{0,-0.42399,0.905667}},
X{{0,1.38156,0.505357},{0,-0.970272,0.242018}},
X{{0,1.38258,0.473214},{0,-0.977666,-0.210166}},
X{{0,1.4,0.425},{0,-0.90286,-0.429934}}
X};
X
XPEXVertexNormal pt4[] = {
X{{0,1.5,0.425},{0,0.90286,0.429934}},
X{{0,1.4715,0.473214},{0,0.804835,0.593498}},
X{{0,1.44191,0.505357},{0,0.639613,0.768697}},
X{{0,1.41472,0.521429},{0,0.308043,0.951372}},
X{{0,1.39344,0.521429},{0,-0.42399,0.905667}},
X{{0,1.38156,0.505357},{0,-0.970272,0.242018}},
X{{0,1.38258,0.473214},{0,-0.977666,-0.210166}},
X{{0,1.4,0.425},{0,-0.90286,-0.429934}},
X{{0.34758,1.46099,0.425},{0.201963,0.879785,0.430336}},
X{{0.340976,1.43323,0.473214},{0.180001,0.784115,0.593939}},
X{{0.334119,1.40441,0.505357},{0.14301,0.622976,0.769058}},
X{{0.32782,1.37793,0.521429},{0.06885,0.299922,0.951476}},
X{{0.322888,1.3572,0.521429},{-0.0947744,-0.412853,0.905853}},
X{{0.320135,1.34563,0.505357},{-0.217074,-0.94561,0.24228}},
X{{0.320372,1.34662,0.473214},{-0.218732,-0.952833,-0.210396}},
X{{0.324408,1.36359,0.425},{-0.201963,-0.879785,-0.430336}},
X{{0.664723,1.34956,0.425},{0.393263,0.812174,0.43095}},
X{{0.652094,1.32392,0.473214},{0.350396,0.723644,0.594611}},
X{{0.63898,1.2973,0.505357},{0.278272,0.574691,0.769607}},
X{{0.626933,1.27284,0.521429},{0.133896,0.276525,0.951633}},
X{{0.617501,1.25369,0.521429},{-0.18434,-0.380702,0.906137}},
X{{0.612236,1.243,0.505357},{-0.422781,-0.873134,0.242679}},
X{{0.612689,1.24392,0.473214},{-0.42602,-0.879825,-0.210748}},
X{{0.620408,1.25959,0.425},{-0.393263,-0.812174,-0.43095}},
X{{0.943032,1.17411,0.425},{0.563247,0.704781,0.431319}},
X{{0.925115,1.1518,0.473214},{0.501763,0.627846,0.595015}},
X{{0.906511,1.12864,0.505357},{0.398382,0.498488,0.769937}},
X{{0.889419,1.10736,0.521429},{0.191627,0.239779,0.951728}},
X{{0.876039,1.0907,0.521429},{-0.263843,-0.330142,0.906308}},
X{{0.86857,1.0814,0.505357},{-0.605605,-0.757782,0.242919}},
X{{0.869212,1.0822,0.473214},{-0.610254,-0.7636,-0.21096}},
X{{0.880163,1.09584,0.425},{-0.563248,-0.704781,-0.431318}},
X{{1.17411,0.943032,0.425},{0.704782,0.563247,0.431318}},
X{{1.1518,0.925115,0.473214},{0.627846,0.501763,0.595015}},
X{{1.12864,0.906511,0.505357},{0.498488,0.398382,0.769937}},
X{{1.10736,0.889419,0.521429},{0.239779,0.191626,0.951728}},
X{{1.0907,0.876039,0.521429},{-0.330142,-0.263843,0.906308}},
X{{1.0814,0.86857,0.505357},{-0.757782,-0.605604,0.242919}},
X{{1.0822,0.869212,0.473214},{-0.7636,-0.610254,-0.21096}},
X{{1.09584,0.880163,0.425},{-0.704781,-0.563247,-0.431319}},
X{{1.34956,0.664723,0.425},{0.812174,0.393263,0.43095}},
X{{1.32392,0.652094,0.473214},{0.723644,0.350396,0.594612}},
X{{1.2973,0.63898,0.505357},{0.574691,0.278272,0.769607}},
X{{1.27284,0.626933,0.521429},{0.276525,0.133896,0.951633}},
X{{1.25369,0.617501,0.521429},{-0.380702,-0.18434,0.906137}},
X{{1.243,0.612236,0.505357},{-0.873134,-0.422781,0.242679}},
X{{1.24392,0.612689,0.473214},{-0.879825,-0.42602,-0.210748}},
X{{1.25959,0.620408,0.425},{-0.812174,-0.393263,-0.43095}},
X{{1.46099,0.34758,0.425},{0.879785,0.201963,0.430336}},
X{{1.43323,0.340976,0.473214},{0.784115,0.180001,0.593939}},
X{{1.40441,0.334119,0.505357},{0.622976,0.14301,0.769058}},
X{{1.37793,0.32782,0.521429},{0.299922,0.06885,0.951476}},
X{{1.3572,0.322888,0.521429},{-0.412853,-0.0947743,0.905853}},
X{{1.34563,0.320135,0.505357},{-0.94561,-0.217074,0.24228}},
X{{1.34662,0.320372,0.473214},{-0.952833,-0.218732,-0.210396}},
X{{1.36359,0.324408,0.425},{-0.879785,-0.201963,-0.430336}},
X{{1.5,0,0.425},{0.90286,0,0.429934}},
X{{1.4715,0,0.473214},{0.804835,0,0.593498}},
X{{1.44191,0,0.505357},{0.639613,0,0.768697}},
X{{1.41472,0,0.521429},{0.308043,0,0.951372}},
X{{1.39344,0,0.521429},{-0.42399,0,0.905667}},
X{{1.38156,0,0.505357},{-0.970272,0,0.242018}},
X{{1.38258,0,0.473214},{-0.977666,0,-0.210166}},
X{{1.4,0,0.425},{-0.90286,0,-0.429934}}
X};
X
XPEXVertexNormal pt5[] = {
X{{2,0,-1.075},{1,0,0}},
X{{1.98542,0,-0.87777},{0.990185,0,0.139765}},
X{{1.94461,0,-0.672668},{0.969783,0,0.243971}},
X{{1.88192,0,-0.461006},{0.94781,0,0.318835}},
X{{1.80175,0,-0.244096},{0.928732,0,0.370751}},
X{{1.70845,0,-0.0232507},{0.914478,0,0.404636}},
X{{1.60641,0,0.200219},{0.905777,0,0.423755}},
X{{1.5,0,0.425},{0.902861,0,0.429934}},
X{{1.94799,-0.46344,-1.075},{0.974649,-0.22374,0}},
X{{1.93379,-0.460062,-0.87777},{0.965061,-0.221539,0.139923}},
X{{1.89404,-0.450604,-0.672668},{0.945133,-0.216964,0.244234}},
X{{1.83298,-0.43608,-0.461006},{0.923674,-0.212038,0.319164}},
X{{1.75489,-0.417502,-0.244096},{0.905045,-0.207762,0.371118}},
X{{1.66403,-0.395883,-0.0232507},{0.891127,-0.204567,0.405024}},
X{{1.56464,-0.372238,0.200219},{0.882632,-0.202617,0.424154}},
X{{1.46099,-0.34758,0.425},{0.879785,-0.201963,0.430335}},
X{{1.79942,-0.886297,-1.075},{0.900039,-0.435809,0}},
X{{1.7863,-0.879838,-0.87777},{0.891155,-0.431506,0.140163}},
X{{1.74958,-0.86175,-0.672668},{0.872692,-0.422567,0.244636}},
X{{1.69318,-0.833972,-0.461006},{0.852815,-0.412942,0.319666}},
X{{1.62105,-0.798443,-0.244096},{0.835562,-0.404588,0.371679}},
X{{1.53711,-0.7571,-0.0232507},{0.822675,-0.398348,0.405617}},
X{{1.4453,-0.71188,0.200219},{0.81481,-0.39454,0.424763}},
X{{1.34956,-0.664723,0.425},{0.812174,-0.393263,0.43095}},
X{{1.56548,-1.25738,-1.075},{0.781181,-0.624305,0}},
X{{1.55407,-1.24821,-0.87777},{0.773454,-0.618129,0.140307}},
X{{1.52212,-1.22255,-0.672668},{0.757397,-0.605297,0.244878}},
X{{1.47306,-1.18314,-0.461006},{0.740113,-0.591484,0.319967}},
X{{1.4103,-1.13274,-0.244096},{0.725113,-0.579496,0.372015}},
X{{1.33728,-1.07409,-0.0232507},{0.71391,-0.570543,0.405973}},
X{{1.25741,-1.00993,0.200219},{0.707073,-0.565079,0.425129}},
X{{1.17411,-0.943032,0.425},{0.704781,-0.563248,0.431318}},
X{{1.25738,-1.56548,-1.075},{0.624304,-0.781181,0}},
X{{1.24821,-1.55407,-0.87777},{0.618129,-0.773454,0.140307}},
X{{1.22255,-1.52212,-0.672668},{0.605297,-0.757397,0.244878}},
X{{1.18314,-1.47306,-0.461006},{0.591484,-0.740113,0.319967}},
X{{1.13274,-1.4103,-0.244096},{0.579496,-0.725113,0.372015}},
X{{1.07408,-1.33728,-0.0232507},{0.570543,-0.71391,0.405973}},
X{{1.00993,-1.25741,0.200219},{0.565079,-0.707073,0.425129}},
X{{0.943032,-1.17411,0.425},{0.563247,-0.704782,0.431318}},
X{{0.886297,-1.79942,-1.075},{0.435809,-0.900039,0}},
X{{0.879837,-1.7863,-0.87777},{0.431506,-0.891155,0.140163}},
X{{0.86175,-1.74958,-0.672668},{0.422566,-0.872692,0.244636}},
X{{0.833972,-1.69318,-0.461006},{0.412942,-0.852815,0.319666}},
X{{0.798443,-1.62105,-0.244096},{0.404588,-0.835562,0.371679}},
X{{0.757099,-1.53711,-0.0232507},{0.398348,-0.822675,0.405617}},
X{{0.71188,-1.4453,0.200219},{0.39454,-0.81481,0.424763}},
X{{0.664723,-1.34956,0.425},{0.393263,-0.812174,0.43095}},
X{{0.46344,-1.94799,-1.075},{0.22374,-0.974649,0}},
X{{0.460062,-1.93379,-0.87777},{0.221539,-0.965061,0.139923}},
X{{0.450604,-1.89404,-0.672668},{0.216964,-0.945133,0.244234}},
X{{0.43608,-1.83298,-0.461006},{0.212038,-0.923674,0.319164}},
X{{0.417501,-1.75489,-0.244096},{0.207762,-0.905045,0.371118}},
X{{0.395883,-1.66403,-0.0232507},{0.204567,-0.891127,0.405024}},
X{{0.372238,-1.56464,0.200219},{0.202617,-0.882632,0.424154}},
X{{0.34758,-1.46099,0.425},{0.201963,-0.879785,0.430335}},
X{{0,-2,-1.075},{0,-1,0}},
X{{0,-1.98542,-0.87777},{0,-0.990185,0.139765}},
X{{0,-1.94461,-0.672668},{0,-0.969783,0.243971}},
X{{0,-1.88192,-0.461006},{0,-0.94781,0.318835}},
X{{0,-1.80175,-0.244096},{0,-0.928732,0.370751}},
X{{0,-1.70845,-0.0232507},{0,-0.914478,0.404636}},
X{{0,-1.60641,0.200219},{0,-0.905777,0.423755}},
X{{0,-1.5,0.425},{0,-0.902861,0.429934}}
X};
X
XPEXVertexNormal pt6[] = {
X{{0,-2,-1.075},{0,-1,0}},
X{{0,-1.98542,-0.87777},{0,-0.990185,0.139765}},
X{{0,-1.94461,-0.672668},{0,-0.969783,0.243971}},
X{{0,-1.88192,-0.461006},{0,-0.94781,0.318835}},
X{{0,-1.80175,-0.244096},{0,-0.928732,0.370751}},
X{{0,-1.70845,-0.0232507},{0,-0.914478,0.404636}},
X{{0,-1.60641,0.200219},{0,-0.905777,0.423755}},
X{{0,-1.5,0.425},{0,-0.902861,0.429934}},
X{{-0.46344,-1.94799,-1.075},{-0.22374,-0.974649,0}},
X{{-0.460062,-1.93379,-0.87777},{-0.221539,-0.965061,0.139923}},
X{{-0.450604,-1.89404,-0.672668},{-0.216964,-0.945133,0.244234}},
X{{-0.43608,-1.83298,-0.461006},{-0.212038,-0.923674,0.319164}},
X{{-0.417502,-1.75489,-0.244096},{-0.207762,-0.905045,0.371118}},
X{{-0.395883,-1.66403,-0.0232507},{-0.204567,-0.891127,0.405024}},
X{{-0.372238,-1.56464,0.200219},{-0.202617,-0.882632,0.424154}},
X{{-0.34758,-1.46099,0.425},{-0.201963,-0.879785,0.430335}},
X{{-0.886297,-1.79942,-1.075},{-0.435809,-0.900039,0}},
X{{-0.879838,-1.7863,-0.87777},{-0.431506,-0.891155,0.140163}},
X{{-0.86175,-1.74958,-0.672668},{-0.422567,-0.872692,0.244636}},
X{{-0.833972,-1.69318,-0.461006},{-0.412942,-0.852815,0.319666}},
X{{-0.798443,-1.62105,-0.244096},{-0.404588,-0.835562,0.371679}},
X{{-0.7571,-1.53711,-0.0232507},{-0.398348,-0.822675,0.405617}},
X{{-0.71188,-1.4453,0.200219},{-0.39454,-0.81481,0.424763}},
X{{-0.664723,-1.34956,0.425},{-0.393263,-0.812174,0.43095}},
X{{-1.25738,-1.56548,-1.075},{-0.624305,-0.781181,0}},
X{{-1.24821,-1.55407,-0.87777},{-0.618129,-0.773454,0.140307}},
X{{-1.22255,-1.52212,-0.672668},{-0.605297,-0.757397,0.244878}},
X{{-1.18314,-1.47306,-0.461006},{-0.591484,-0.740113,0.319967}},
X{{-1.13274,-1.4103,-0.244096},{-0.579496,-0.725113,0.372015}},
X{{-1.07409,-1.33728,-0.0232507},{-0.570543,-0.71391,0.405973}},
X{{-1.00993,-1.25741,0.200219},{-0.565079,-0.707073,0.425129}},
X{{-0.943032,-1.17411,0.425},{-0.563248,-0.704781,0.431318}},
X{{-1.56548,-1.25738,-1.075},{-0.781181,-0.624304,0}},
X{{-1.55407,-1.24821,-0.87777},{-0.773454,-0.618129,0.140307}},
X{{-1.52212,-1.22255,-0.672668},{-0.757397,-0.605297,0.244878}},
X{{-1.47306,-1.18314,-0.461006},{-0.740113,-0.591484,0.319967}},
X{{-1.4103,-1.13274,-0.244096},{-0.725113,-0.579496,0.372015}},
X{{-1.33728,-1.07408,-0.0232507},{-0.71391,-0.570543,0.405973}},
X{{-1.25741,-1.00993,0.200219},{-0.707073,-0.565079,0.425129}},
X{{-1.17411,-0.943032,0.425},{-0.704782,-0.563247,0.431318}},
X{{-1.79942,-0.886297,-1.075},{-0.900039,-0.435809,0}},
X{{-1.7863,-0.879837,-0.87777},{-0.891155,-0.431506,0.140163}},
X{{-1.74958,-0.86175,-0.672668},{-0.872692,-0.422566,0.244636}},
X{{-1.69318,-0.833972,-0.461006},{-0.852815,-0.412942,0.319666}},
X{{-1.62105,-0.798443,-0.244096},{-0.835562,-0.404588,0.371679}},
X{{-1.53711,-0.757099,-0.0232507},{-0.822675,-0.398348,0.405617}},
X{{-1.4453,-0.71188,0.200219},{-0.81481,-0.39454,0.424763}},
X{{-1.34956,-0.664723,0.425},{-0.812174,-0.393263,0.43095}},
X{{-1.94799,-0.46344,-1.075},{-0.974649,-0.22374,0}},
X{{-1.93379,-0.460062,-0.87777},{-0.965061,-0.221539,0.139923}},
X{{-1.89404,-0.450604,-0.672668},{-0.945133,-0.216964,0.244234}},
X{{-1.83298,-0.43608,-0.461006},{-0.923674,-0.212038,0.319164}},
X{{-1.75489,-0.417501,-0.244096},{-0.905045,-0.207762,0.371118}},
X{{-1.66403,-0.395883,-0.0232507},{-0.891127,-0.204567,0.405024}},
X{{-1.56464,-0.372238,0.200219},{-0.882632,-0.202617,0.424154}},
X{{-1.46099,-0.34758,0.425},{-0.879785,-0.201963,0.430335}},
X{{-2,0,-1.075},{-1,0,0}},
X{{-1.98542,0,-0.87777},{-0.990185,0,0.139765}},
X{{-1.94461,0,-0.672668},{-0.969783,0,0.243971}},
X{{-1.88192,0,-0.461006},{-0.94781,0,0.318835}},
X{{-1.80175,0,-0.244096},{-0.928732,0,0.370751}},
X{{-1.70845,0,-0.0232507},{-0.914478,0,0.404636}},
X{{-1.60641,0,0.200219},{-0.905777,0,0.423755}},
X{{-1.5,0,0.425},{-0.902861,0,0.429934}}
X};
X
XPEXVertexNormal pt7[] = {
X{{-2,0,-1.075},{-1,0,0}},
X{{-1.98542,0,-0.87777},{-0.990185,0,0.139765}},
X{{-1.94461,0,-0.672668},{-0.969783,0,0.243971}},
X{{-1.88192,0,-0.461006},{-0.94781,0,0.318835}},
X{{-1.80175,0,-0.244096},{-0.928732,0,0.370751}},
X{{-1.70845,0,-0.0232507},{-0.914478,0,0.404636}},
X{{-1.60641,0,0.200219},{-0.905777,0,0.423755}},
X{{-1.5,0,0.425},{-0.902861,0,0.429934}},
X{{-1.94799,0.46344,-1.075},{-0.974649,0.22374,0}},
X{{-1.93379,0.460062,-0.87777},{-0.965061,0.221539,0.139923}},
X{{-1.89404,0.450604,-0.672668},{-0.945133,0.216964,0.244234}},
X{{-1.83298,0.43608,-0.461006},{-0.923674,0.212038,0.319164}},
X{{-1.75489,0.417502,-0.244096},{-0.905045,0.207762,0.371118}},
X{{-1.66403,0.395883,-0.0232507},{-0.891127,0.204567,0.405024}},
X{{-1.56464,0.372238,0.200219},{-0.882632,0.202617,0.424154}},
X{{-1.46099,0.34758,0.425},{-0.879785,0.201963,0.430335}},
X{{-1.79942,0.886297,-1.075},{-0.900039,0.435809,0}},
X{{-1.7863,0.879838,-0.87777},{-0.891155,0.431506,0.140163}},
X{{-1.74958,0.86175,-0.672668},{-0.872692,0.422567,0.244636}},
X{{-1.69318,0.833972,-0.461006},{-0.852815,0.412942,0.319666}},
X{{-1.62105,0.798443,-0.244096},{-0.835562,0.404588,0.371679}},
X{{-1.53711,0.7571,-0.0232507},{-0.822675,0.398348,0.405617}},
X{{-1.4453,0.71188,0.200219},{-0.81481,0.39454,0.424763}},
X{{-1.34956,0.664723,0.425},{-0.812174,0.393263,0.43095}},
X{{-1.56548,1.25738,-1.075},{-0.781181,0.624305,0}},
X{{-1.55407,1.24821,-0.87777},{-0.773454,0.618129,0.140307}},
X{{-1.52212,1.22255,-0.672668},{-0.757397,0.605297,0.244878}},
X{{-1.47306,1.18314,-0.461006},{-0.740113,0.591484,0.319967}},
X{{-1.4103,1.13274,-0.244096},{-0.725113,0.579496,0.372015}},
X{{-1.33728,1.07409,-0.0232507},{-0.71391,0.570543,0.405973}},
X{{-1.25741,1.00993,0.200219},{-0.707073,0.565079,0.425129}},
X{{-1.17411,0.943032,0.425},{-0.704781,0.563248,0.431318}},
X{{-1.25738,1.56548,-1.075},{-0.624304,0.781181,0}},
X{{-1.24821,1.55407,-0.87777},{-0.618129,0.773454,0.140307}},
X{{-1.22255,1.52212,-0.672668},{-0.605297,0.757397,0.244878}},
X{{-1.18314,1.47306,-0.461006},{-0.591484,0.740113,0.319967}},
X{{-1.13274,1.4103,-0.244096},{-0.579496,0.725113,0.372015}},
X{{-1.07408,1.33728,-0.0232507},{-0.570543,0.71391,0.405973}},
X{{-1.00993,1.25741,0.200219},{-0.565079,0.707073,0.425129}},
X{{-0.943032,1.17411,0.425},{-0.563247,0.704782,0.431318}},
X{{-0.886297,1.79942,-1.075},{-0.435809,0.900039,0}},
X{{-0.879837,1.7863,-0.87777},{-0.431506,0.891155,0.140163}},
X{{-0.86175,1.74958,-0.672668},{-0.422566,0.872692,0.244636}},
X{{-0.833972,1.69318,-0.461006},{-0.412942,0.852815,0.319666}},
X{{-0.798443,1.62105,-0.244096},{-0.404588,0.835562,0.371679}},
X{{-0.757099,1.53711,-0.0232507},{-0.398348,0.822675,0.405617}},
X{{-0.71188,1.4453,0.200219},{-0.39454,0.81481,0.424763}},
X{{-0.664723,1.34956,0.425},{-0.393263,0.812174,0.43095}},
X{{-0.46344,1.94799,-1.075},{-0.22374,0.974649,0}},
X{{-0.460062,1.93379,-0.87777},{-0.221539,0.965061,0.139923}},
X{{-0.450604,1.89404,-0.672668},{-0.216964,0.945133,0.244234}},
X{{-0.43608,1.83298,-0.461006},{-0.212038,0.923674,0.319164}},
X{{-0.417501,1.75489,-0.244096},{-0.207762,0.905045,0.371118}},
X{{-0.395883,1.66403,-0.0232507},{-0.204567,0.891127,0.405024}},
X{{-0.372238,1.56464,0.200219},{-0.202617,0.882632,0.424154}},
X{{-0.34758,1.46099,0.425},{-0.201963,0.879785,0.430335}},
X{{0,2,-1.075},{0,1,0}},
X{{0,1.98542,-0.87777},{0,0.990185,0.139765}},
X{{0,1.94461,-0.672668},{0,0.969783,0.243971}},
X{{0,1.88192,-0.461006},{0,0.94781,0.318835}},
X{{0,1.80175,-0.244096},{0,0.928732,0.370751}},
X{{0,1.70845,-0.0232507},{0,0.914478,0.404636}},
X{{0,1.60641,0.200219},{0,0.905777,0.423755}},
X{{0,1.5,0.425},{0,0.902861,0.429934}}
X};
X
XPEXVertexNormal pt8[] = {
X{{0,2,-1.075},{0,1,0}},
X{{0,1.98542,-0.87777},{0,0.990185,0.139765}},
X{{0,1.94461,-0.672668},{0,0.969783,0.243971}},
X{{0,1.88192,-0.461006},{0,0.94781,0.318835}},
X{{0,1.80175,-0.244096},{0,0.928732,0.370751}},
X{{0,1.70845,-0.0232507},{0,0.914478,0.404636}},
X{{0,1.60641,0.200219},{0,0.905777,0.423755}},
X{{0,1.5,0.425},{0,0.902861,0.429934}},
X{{0.46344,1.94799,-1.075},{0.22374,0.974649,0}},
X{{0.460062,1.93379,-0.87777},{0.221539,0.965061,0.139923}},
X{{0.450604,1.89404,-0.672668},{0.216964,0.945133,0.244234}},
X{{0.43608,1.83298,-0.461006},{0.212038,0.923674,0.319164}},
X{{0.417502,1.75489,-0.244096},{0.207762,0.905045,0.371118}},
X{{0.395883,1.66403,-0.0232507},{0.204567,0.891127,0.405024}},
X{{0.372238,1.56464,0.200219},{0.202617,0.882632,0.424154}},
X{{0.34758,1.46099,0.425},{0.201963,0.879785,0.430335}},
X{{0.886297,1.79942,-1.075},{0.435809,0.900039,0}},
X{{0.879838,1.7863,-0.87777},{0.431506,0.891155,0.140163}},
X{{0.86175,1.74958,-0.672668},{0.422567,0.872692,0.244636}},
X{{0.833972,1.69318,-0.461006},{0.412942,0.852815,0.319666}},
X{{0.798443,1.62105,-0.244096},{0.404588,0.835562,0.371679}},
X{{0.7571,1.53711,-0.0232507},{0.398348,0.822675,0.405617}},
X{{0.71188,1.4453,0.200219},{0.39454,0.81481,0.424763}},
X{{0.664723,1.34956,0.425},{0.393263,0.812174,0.43095}},
X{{1.25738,1.56548,-1.075},{0.624305,0.781181,0}},
X{{1.24821,1.55407,-0.87777},{0.618129,0.773454,0.140307}},
X{{1.22255,1.52212,-0.672668},{0.605297,0.757397,0.244878}},
X{{1.18314,1.47306,-0.461006},{0.591484,0.740113,0.319967}},
X{{1.13274,1.4103,-0.244096},{0.579496,0.725113,0.372015}},
X{{1.07409,1.33728,-0.0232507},{0.570543,0.71391,0.405973}},
X{{1.00993,1.25741,0.200219},{0.565079,0.707073,0.425129}},
X{{0.943032,1.17411,0.425},{0.563248,0.704781,0.431318}},
X{{1.56548,1.25738,-1.075},{0.781181,0.624304,0}},
X{{1.55407,1.24821,-0.87777},{0.773454,0.618129,0.140307}},
X{{1.52212,1.22255,-0.672668},{0.757397,0.605297,0.244878}},
X{{1.47306,1.18314,-0.461006},{0.740113,0.591484,0.319967}},
X{{1.4103,1.13274,-0.244096},{0.725113,0.579496,0.372015}},
X{{1.33728,1.07408,-0.0232507},{0.71391,0.570543,0.405973}},
X{{1.25741,1.00993,0.200219},{0.707073,0.565079,0.425129}},
X{{1.17411,0.943032,0.425},{0.704782,0.563247,0.431318}},
X{{1.79942,0.886297,-1.075},{0.900039,0.435809,0}},
X{{1.7863,0.879837,-0.87777},{0.891155,0.431506,0.140163}},
X{{1.74958,0.86175,-0.672668},{0.872692,0.422566,0.244636}},
X{{1.69318,0.833972,-0.461006},{0.852815,0.412942,0.319666}},
X{{1.62105,0.798443,-0.244096},{0.835562,0.404588,0.371679}},
X{{1.53711,0.757099,-0.0232507},{0.822675,0.398348,0.405617}},
X{{1.4453,0.71188,0.200219},{0.81481,0.39454,0.424763}},
X{{1.34956,0.664723,0.425},{0.812174,0.393263,0.43095}},
X{{1.94799,0.46344,-1.075},{0.974649,0.22374,0}},
X{{1.93379,0.460062,-0.87777},{0.965061,0.221539,0.139923}},
X{{1.89404,0.450604,-0.672668},{0.945133,0.216964,0.244234}},
X{{1.83298,0.43608,-0.461006},{0.923674,0.212038,0.319164}},
X{{1.75489,0.417501,-0.244096},{0.905045,0.207762,0.371118}},
X{{1.66403,0.395883,-0.0232507},{0.891127,0.204567,0.405024}},
X{{1.56464,0.372238,0.200219},{0.882632,0.202617,0.424154}},
X{{1.46099,0.34758,0.425},{0.879785,0.201963,0.430335}},
X{{2,0,-1.075},{1,0,0}},
X{{1.98542,0,-0.87777},{0.990185,0,0.139765}},
X{{1.94461,0,-0.672668},{0.969783,0,0.243971}},
X{{1.88192,0,-0.461006},{0.94781,0,0.318835}},
X{{1.80175,0,-0.244096},{0.928732,0,0.370751}},
X{{1.70845,0,-0.0232507},{0.914478,0,0.404636}},
X{{1.60641,0,0.200219},{0.905777,0,0.423755}},
X{{1.5,0,0.425},{0.902861,0,0.429934}}
X};
X
XPEXVertexNormal pt9[] = {
X{{1.5,0,-1.825},{1,0,0}},
X{{1.5277,0,-1.78345},{0.6981,0,-0.716}},
X{{1.59913,0,-1.72223},{0.632922,0,-0.774216}},
X{{1.69679,0,-1.64001},{0.663783,0,-0.747925}},
X{{1.80321,0,-1.5355},{0.741834,0,-0.670584}},
X{{1.90087,0,-1.40736},{0.84874,0,-0.52881}},
X{{1.9723,0,-1.2543},{0.953469,0,-0.301492}},
X{{2,0,-1.075},{1,0,0}},
X{{1.46099,-0.34758,-1.825},{0.974649,-0.22374,0}},
X{{1.48797,-0.353998,-1.78345},{0.680002,-0.156101,-0.7164}},
X{{1.55754,-0.370549,-1.72223},{0.616452,-0.141513,-0.774571}},
X{{1.65267,-0.393181,-1.64001},{0.646541,-0.14842,-0.748303}},
X{{1.75631,-0.417839,-1.5355},{0.722654,-0.165892,-0.671007}},
X{{1.85144,-0.440471,-1.40736},{0.826958,-0.189836,-0.529247}},
X{{1.92101,-0.457022,-1.2543},{0.9292,-0.213307,-0.301807}},
X{{1.94799,-0.46344,-1.075},{0.974649,-0.22374,0}},
X{{1.34956,-0.664723,-1.825},{0.900039,-0.435809,0}},
X{{1.37448,-0.676997,-1.78345},{0.627384,-0.303786,-0.71701}},
X{{1.43875,-0.70865,-1.72223},{0.568665,-0.275354,-0.775113}},
X{{1.52662,-0.751932,-1.64001},{0.596463,-0.288814,-0.748878}},
X{{1.62236,-0.799089,-1.5355},{0.666809,-0.322876,-0.671653}},
X{{1.71023,-0.84237,-1.40736},{0.76328,-0.369588,-0.529914}},
X{{1.7745,-0.874024,-1.2543},{0.857933,-0.41542,-0.302287}},
X{{1.79942,-0.886297,-1.075},{0.900039,-0.435809,0}},
X{{1.17411,-0.943032,-1.825},{0.781181,-0.624305,0}},
X{{1.19579,-0.960445,-1.78345},{0.544238,-0.434944,-0.717376}},
X{{1.2517,-1.00535,-1.72223},{0.493256,-0.394201,-0.775438}},
X{{1.32815,-1.06675,-1.64001},{0.517389,-0.413488,-0.749224}},
X{{1.41144,-1.13365,-1.5355},{0.578476,-0.462307,-0.67204}},
X{{1.48789,-1.19506,-1.40736},{0.662286,-0.529286,-0.530314}},
X{{1.5438,-1.23996,-1.2543},{0.744564,-0.595041,-0.302576}},
X{{1.56548,-1.25738,-1.075},{0.781181,-0.624305,0}},
X{{0.943032,-1.17411,-1.825},{0.624304,-0.781181,0}},
X{{0.960445,-1.19579,-1.78345},{0.434944,-0.544238,-0.717376}},
X{{1.00535,-1.2517,-1.72223},{0.394201,-0.493256,-0.775438}},
X{{1.06675,-1.32815,-1.64001},{0.413487,-0.517389,-0.749224}},
X{{1.13365,-1.41144,-1.5355},{0.462307,-0.578476,-0.67204}},
X{{1.19506,-1.48789,-1.40736},{0.529286,-0.662286,-0.530314}},
X{{1.23996,-1.5438,-1.2543},{0.595041,-0.744564,-0.302576}},
X{{1.25738,-1.56548,-1.075},{0.624304,-0.781181,0}},
X{{0.664723,-1.34956,-1.825},{0.435809,-0.900039,0}},
X{{0.676997,-1.37448,-1.78345},{0.303786,-0.627384,-0.71701}},
X{{0.70865,-1.43875,-1.72223},{0.275354,-0.568665,-0.775113}},
X{{0.751932,-1.52662,-1.64001},{0.288813,-0.596463,-0.748879}},
X{{0.799089,-1.62236,-1.5355},{0.322876,-0.666809,-0.671653}},
X{{0.84237,-1.71023,-1.40736},{0.369588,-0.76328,-0.529914}},
X{{0.874024,-1.7745,-1.2543},{0.41542,-0.857933,-0.302287}},
X{{0.886297,-1.79942,-1.075},{0.435809,-0.900039,0}},
X{{0.34758,-1.46099,-1.825},{0.22374,-0.974649,0}},
X{{0.353998,-1.48797,-1.78345},{0.156101,-0.680002,-0.7164}},
X{{0.370549,-1.55754,-1.72223},{0.141513,-0.616452,-0.774571}},
X{{0.393181,-1.65267,-1.64001},{0.14842,-0.646541,-0.748303}},
X{{0.417839,-1.75631,-1.5355},{0.165892,-0.722654,-0.671007}},
X{{0.440471,-1.85144,-1.40736},{0.189836,-0.826958,-0.529247}},
X{{0.457022,-1.92101,-1.2543},{0.213307,-0.9292,-0.301807}},
X{{0.46344,-1.94799,-1.075},{0.22374,-0.974649,0}},
X{{0,-1.5,-1.825},{0,-1,0}},
X{{0,-1.5277,-1.78345},{0,-0.6981,-0.716}},
X{{0,-1.59913,-1.72223},{0,-0.632922,-0.774216}},
X{{0,-1.69679,-1.64001},{0,-0.663783,-0.747925}},
X{{0,-1.80321,-1.5355},{0,-0.741834,-0.670584}},
X{{0,-1.90087,-1.40736},{0,-0.84874,-0.52881}},
X{{0,-1.9723,-1.2543},{0,-0.953469,-0.301492}},
X{{0,-2,-1.075},{0,-1,0}}
X};
X
XPEXVertexNormal pt10[] = {
X{{0,-1.5,-1.825},{0,-1,0}},
X{{0,-1.5277,-1.78345},{0,-0.6981,-0.716}},
X{{0,-1.59913,-1.72223},{0,-0.632922,-0.774216}},
X{{0,-1.69679,-1.64001},{0,-0.663783,-0.747925}},
X{{0,-1.80321,-1.5355},{0,-0.741834,-0.670584}},
X{{0,-1.90087,-1.40736},{0,-0.84874,-0.52881}},
X{{0,-1.9723,-1.2543},{0,-0.953469,-0.301492}},
X{{0,-2,-1.075},{0,-1,0}},
X{{-0.34758,-1.46099,-1.825},{-0.22374,-0.974649,0}},
X{{-0.353998,-1.48797,-1.78345},{-0.156101,-0.680002,-0.7164}},
X{{-0.370549,-1.55754,-1.72223},{-0.141513,-0.616452,-0.774571}},
X{{-0.393181,-1.65267,-1.64001},{-0.14842,-0.646541,-0.748303}},
X{{-0.417839,-1.75631,-1.5355},{-0.165892,-0.722654,-0.671007}},
X{{-0.440471,-1.85144,-1.40736},{-0.189836,-0.826958,-0.529247}},
X{{-0.457022,-1.92101,-1.2543},{-0.213307,-0.9292,-0.301807}},
X{{-0.46344,-1.94799,-1.075},{-0.22374,-0.974649,0}},
X{{-0.664723,-1.34956,-1.825},{-0.435809,-0.900039,0}},
X{{-0.676997,-1.37448,-1.78345},{-0.303786,-0.627384,-0.71701}},
X{{-0.70865,-1.43875,-1.72223},{-0.275354,-0.568665,-0.775113}},
X{{-0.751932,-1.52662,-1.64001},{-0.288814,-0.596463,-0.748878}},
X{{-0.799089,-1.62236,-1.5355},{-0.322876,-0.666809,-0.671653}},
X{{-0.84237,-1.71023,-1.40736},{-0.369588,-0.76328,-0.529914}},
X{{-0.874024,-1.7745,-1.2543},{-0.41542,-0.857933,-0.302287}},
X{{-0.886297,-1.79942,-1.075},{-0.435809,-0.900039,0}},
X{{-0.943032,-1.17411,-1.825},{-0.624305,-0.781181,0}},
X{{-0.960445,-1.19579,-1.78345},{-0.434944,-0.544238,-0.717376}},
X{{-1.00535,-1.2517,-1.72223},{-0.394201,-0.493256,-0.775438}},
X{{-1.06675,-1.32815,-1.64001},{-0.413488,-0.517389,-0.749224}},
X{{-1.13365,-1.41144,-1.5355},{-0.462307,-0.578476,-0.67204}},
X{{-1.19506,-1.48789,-1.40736},{-0.529286,-0.662286,-0.530314}},
X{{-1.23996,-1.5438,-1.2543},{-0.595041,-0.744564,-0.302576}},
X{{-1.25738,-1.56548,-1.075},{-0.624305,-0.781181,0}},
X{{-1.17411,-0.943032,-1.825},{-0.781181,-0.624304,0}},
X{{-1.19579,-0.960445,-1.78345},{-0.544238,-0.434944,-0.717376}},
X{{-1.2517,-1.00535,-1.72223},{-0.493256,-0.394201,-0.775438}},
X{{-1.32815,-1.06675,-1.64001},{-0.517389,-0.413487,-0.749224}},
X{{-1.41144,-1.13365,-1.5355},{-0.578476,-0.462307,-0.67204}},
X{{-1.48789,-1.19506,-1.40736},{-0.662286,-0.529286,-0.530314}},
X{{-1.5438,-1.23996,-1.2543},{-0.744564,-0.595041,-0.302576}},
X{{-1.56548,-1.25738,-1.075},{-0.781181,-0.624304,0}},
X{{-1.34956,-0.664723,-1.825},{-0.900039,-0.435809,0}},
X{{-1.37448,-0.676997,-1.78345},{-0.627384,-0.303786,-0.71701}},
X{{-1.43875,-0.70865,-1.72223},{-0.568665,-0.275354,-0.775113}},
X{{-1.52662,-0.751932,-1.64001},{-0.596463,-0.288813,-0.748879}},
X{{-1.62236,-0.799089,-1.5355},{-0.666809,-0.322876,-0.671653}},
X{{-1.71023,-0.84237,-1.40736},{-0.76328,-0.369588,-0.529914}},
X{{-1.7745,-0.874024,-1.2543},{-0.857933,-0.41542,-0.302287}},
X{{-1.79942,-0.886297,-1.075},{-0.900039,-0.435809,0}},
X{{-1.46099,-0.34758,-1.825},{-0.974649,-0.22374,0}},
X{{-1.48797,-0.353998,-1.78345},{-0.680002,-0.156101,-0.7164}},
X{{-1.55754,-0.370549,-1.72223},{-0.616452,-0.141513,-0.774571}},
X{{-1.65267,-0.393181,-1.64001},{-0.646541,-0.14842,-0.748303}},
X{{-1.75631,-0.417839,-1.5355},{-0.722654,-0.165892,-0.671007}},
X{{-1.85144,-0.440471,-1.40736},{-0.826958,-0.189836,-0.529247}},
X{{-1.92101,-0.457022,-1.2543},{-0.9292,-0.213307,-0.301807}},
X{{-1.94799,-0.46344,-1.075},{-0.974649,-0.22374,0}},
X{{-1.5,0,-1.825},{-1,0,0}},
X{{-1.5277,0,-1.78345},{-0.6981,0,-0.716}},
X{{-1.59913,0,-1.72223},{-0.632922,0,-0.774216}},
X{{-1.69679,0,-1.64001},{-0.663783,0,-0.747925}},
X{{-1.80321,0,-1.5355},{-0.741834,0,-0.670584}},
X{{-1.90087,0,-1.40736},{-0.84874,0,-0.52881}},
X{{-1.9723,0,-1.2543},{-0.953469,0,-0.301492}},
X{{-2,0,-1.075},{-1,0,0}}
X};
X
XPEXVertexNormal pt11[] = {
X{{-1.5,0,-1.825},{-1,0,0}},
X{{-1.5277,0,-1.78345},{-0.6981,0,-0.716}},
X{{-1.59913,0,-1.72223},{-0.632922,0,-0.774216}},
X{{-1.69679,0,-1.64001},{-0.663783,0,-0.747925}},
X{{-1.80321,0,-1.5355},{-0.741834,0,-0.670584}},
X{{-1.90087,0,-1.40736},{-0.84874,0,-0.52881}},
X{{-1.9723,0,-1.2543},{-0.953469,0,-0.301492}},
X{{-2,0,-1.075},{-1,0,0}},
X{{-1.46099,0.34758,-1.825},{-0.974649,0.22374,0}},
X{{-1.48797,0.353998,-1.78345},{-0.680002,0.156101,-0.7164}},
X{{-1.55754,0.370549,-1.72223},{-0.616452,0.141513,-0.774571}},
X{{-1.65267,0.393181,-1.64001},{-0.646541,0.14842,-0.748303}},
X{{-1.75631,0.417839,-1.5355},{-0.722654,0.165892,-0.671007}},
X{{-1.85144,0.440471,-1.40736},{-0.826958,0.189836,-0.529247}},
X{{-1.92101,0.457022,-1.2543},{-0.9292,0.213307,-0.301807}},
X{{-1.94799,0.46344,-1.075},{-0.974649,0.22374,0}},
X{{-1.34956,0.664723,-1.825},{-0.900039,0.435809,0}},
X{{-1.37448,0.676997,-1.78345},{-0.627384,0.303786,-0.71701}},
X{{-1.43875,0.70865,-1.72223},{-0.568665,0.275354,-0.775113}},
X{{-1.52662,0.751932,-1.64001},{-0.596463,0.288814,-0.748878}},
X{{-1.62236,0.799089,-1.5355},{-0.666809,0.322876,-0.671653}},
X{{-1.71023,0.84237,-1.40736},{-0.76328,0.369588,-0.529914}},
X{{-1.7745,0.874024,-1.2543},{-0.857933,0.41542,-0.302287}},
X{{-1.79942,0.886297,-1.075},{-0.900039,0.435809,0}},
X{{-1.17411,0.943032,-1.825},{-0.781181,0.624305,0}},
X{{-1.19579,0.960445,-1.78345},{-0.544238,0.434944,-0.717376}},
X{{-1.2517,1.00535,-1.72223},{-0.493256,0.394201,-0.775438}},
X{{-1.32815,1.06675,-1.64001},{-0.517389,0.413488,-0.749224}},
X{{-1.41144,1.13365,-1.5355},{-0.578476,0.462307,-0.67204}},
X{{-1.48789,1.19506,-1.40736},{-0.662286,0.529286,-0.530314}},
X{{-1.5438,1.23996,-1.2543},{-0.744564,0.595041,-0.302576}},
X{{-1.56548,1.25738,-1.075},{-0.781181,0.624305,0}},
X{{-0.943032,1.17411,-1.825},{-0.624304,0.781181,0}},
X{{-0.960445,1.19579,-1.78345},{-0.434944,0.544238,-0.717376}},
X{{-1.00535,1.2517,-1.72223},{-0.394201,0.493256,-0.775438}},
X{{-1.06675,1.32815,-1.64001},{-0.413487,0.517389,-0.749224}},
X{{-1.13365,1.41144,-1.5355},{-0.462307,0.578476,-0.67204}},
X{{-1.19506,1.48789,-1.40736},{-0.529286,0.662286,-0.530314}},
X{{-1.23996,1.5438,-1.2543},{-0.595041,0.744564,-0.302576}},
X{{-1.25738,1.56548,-1.075},{-0.624304,0.781181,0}},
X{{-0.664723,1.34956,-1.825},{-0.435809,0.900039,0}},
X{{-0.676997,1.37448,-1.78345},{-0.303786,0.627384,-0.71701}},
X{{-0.70865,1.43875,-1.72223},{-0.275354,0.568665,-0.775113}},
X{{-0.751932,1.52662,-1.64001},{-0.288813,0.596463,-0.748879}},
X{{-0.799089,1.62236,-1.5355},{-0.322876,0.666809,-0.671653}},
X{{-0.84237,1.71023,-1.40736},{-0.369588,0.76328,-0.529914}},
X{{-0.874024,1.7745,-1.2543},{-0.41542,0.857933,-0.302287}},
X{{-0.886297,1.79942,-1.075},{-0.435809,0.900039,0}},
X{{-0.34758,1.46099,-1.825},{-0.22374,0.974649,0}},
X{{-0.353998,1.48797,-1.78345},{-0.156101,0.680002,-0.7164}},
X{{-0.370549,1.55754,-1.72223},{-0.141513,0.616452,-0.774571}},
X{{-0.393181,1.65267,-1.64001},{-0.14842,0.646541,-0.748303}},
X{{-0.417839,1.75631,-1.5355},{-0.165892,0.722654,-0.671007}},
X{{-0.440471,1.85144,-1.40736},{-0.189836,0.826958,-0.529247}},
X{{-0.457022,1.92101,-1.2543},{-0.213307,0.9292,-0.301807}},
X{{-0.46344,1.94799,-1.075},{-0.22374,0.974649,0}},
X{{0,1.5,-1.825},{0,1,0}},
X{{0,1.5277,-1.78345},{0,0.6981,-0.716}},
X{{0,1.59913,-1.72223},{0,0.632922,-0.774216}},
X{{0,1.69679,-1.64001},{0,0.663783,-0.747925}},
X{{0,1.80321,-1.5355},{0,0.741834,-0.670584}},
X{{0,1.90087,-1.40736},{0,0.84874,-0.52881}},
X{{0,1.9723,-1.2543},{0,0.953469,-0.301492}},
X{{0,2,-1.075},{0,1,0}}
X};
X
XPEXVertexNormal pt12[] = {
X{{0,1.5,-1.825},{0,1,0}},
X{{0,1.5277,-1.78345},{0,0.6981,-0.716}},
X{{0,1.59913,-1.72223},{0,0.632922,-0.774216}},
X{{0,1.69679,-1.64001},{0,0.663783,-0.747925}},
X{{0,1.80321,-1.5355},{0,0.741834,-0.670584}},
X{{0,1.90087,-1.40736},{0,0.84874,-0.52881}},
X{{0,1.9723,-1.2543},{0,0.953469,-0.301492}},
X{{0,2,-1.075},{0,1,0}},
X{{0.34758,1.46099,-1.825},{0.22374,0.974649,0}},
X{{0.353998,1.48797,-1.78345},{0.156101,0.680002,-0.7164}},
X{{0.370549,1.55754,-1.72223},{0.141513,0.616452,-0.774571}},
X{{0.393181,1.65267,-1.64001},{0.14842,0.646541,-0.748303}},
X{{0.417839,1.75631,-1.5355},{0.165892,0.722654,-0.671007}},
X{{0.440471,1.85144,-1.40736},{0.189836,0.826958,-0.529247}},
X{{0.457022,1.92101,-1.2543},{0.213307,0.9292,-0.301807}},
X{{0.46344,1.94799,-1.075},{0.22374,0.974649,0}},
X{{0.664723,1.34956,-1.825},{0.435809,0.900039,0}},
X{{0.676997,1.37448,-1.78345},{0.303786,0.627384,-0.71701}},
X{{0.70865,1.43875,-1.72223},{0.275354,0.568665,-0.775113}},
X{{0.751932,1.52662,-1.64001},{0.288814,0.596463,-0.748878}},
X{{0.799089,1.62236,-1.5355},{0.322876,0.666809,-0.671653}},
X{{0.84237,1.71023,-1.40736},{0.369588,0.76328,-0.529914}},
X{{0.874024,1.7745,-1.2543},{0.41542,0.857933,-0.302287}},
X{{0.886297,1.79942,-1.075},{0.435809,0.900039,0}},
X{{0.943032,1.17411,-1.825},{0.624305,0.781181,0}},
X{{0.960445,1.19579,-1.78345},{0.434944,0.544238,-0.717376}},
X{{1.00535,1.2517,-1.72223},{0.394201,0.493256,-0.775438}},
X{{1.06675,1.32815,-1.64001},{0.413488,0.517389,-0.749224}},
X{{1.13365,1.41144,-1.5355},{0.462307,0.578476,-0.67204}},
X{{1.19506,1.48789,-1.40736},{0.529286,0.662286,-0.530314}},
X{{1.23996,1.5438,-1.2543},{0.595041,0.744564,-0.302576}},
X{{1.25738,1.56548,-1.075},{0.624305,0.781181,0}},
X{{1.17411,0.943032,-1.825},{0.781181,0.624304,0}},
X{{1.19579,0.960445,-1.78345},{0.544238,0.434944,-0.717376}},
X{{1.2517,1.00535,-1.72223},{0.493256,0.394201,-0.775438}},
X{{1.32815,1.06675,-1.64001},{0.517389,0.413487,-0.749224}},
X{{1.41144,1.13365,-1.5355},{0.578476,0.462307,-0.67204}},
X{{1.48789,1.19506,-1.40736},{0.662286,0.529286,-0.530314}},
X{{1.5438,1.23996,-1.2543},{0.744564,0.595041,-0.302576}},
X{{1.56548,1.25738,-1.075},{0.781181,0.624304,0}},
X{{1.34956,0.664723,-1.825},{0.900039,0.435809,0}},
X{{1.37448,0.676997,-1.78345},{0.627384,0.303786,-0.71701}},
X{{1.43875,0.70865,-1.72223},{0.568665,0.275354,-0.775113}},
X{{1.52662,0.751932,-1.64001},{0.596463,0.288813,-0.748879}},
X{{1.62236,0.799089,-1.5355},{0.666809,0.322876,-0.671653}},
X{{1.71023,0.84237,-1.40736},{0.76328,0.369588,-0.529914}},
X{{1.7745,0.874024,-1.2543},{0.857933,0.41542,-0.302287}},
X{{1.79942,0.886297,-1.075},{0.900039,0.435809,0}},
X{{1.46099,0.34758,-1.825},{0.974649,0.22374,0}},
X{{1.48797,0.353998,-1.78345},{0.680002,0.156101,-0.7164}},
X{{1.55754,0.370549,-1.72223},{0.616452,0.141513,-0.774571}},
X{{1.65267,0.393181,-1.64001},{0.646541,0.14842,-0.748303}},
X{{1.75631,0.417839,-1.5355},{0.722654,0.165892,-0.671007}},
X{{1.85144,0.440471,-1.40736},{0.826958,0.189836,-0.529247}},
X{{1.92101,0.457022,-1.2543},{0.9292,0.213307,-0.301807}},
X{{1.94799,0.46344,-1.075},{0.974649,0.22374,0}},
X{{1.5,0,-1.825},{1,0,0}},
X{{1.5277,0,-1.78345},{0.6981,0,-0.716}},
X{{1.59913,0,-1.72223},{0.632922,0,-0.774216}},
X{{1.69679,0,-1.64001},{0.663783,0,-0.747925}},
X{{1.80321,0,-1.5355},{0.741834,0,-0.670584}},
X{{1.90087,0,-1.40736},{0.84874,0,-0.52881}},
X{{1.9723,0,-1.2543},{0.953469,0,-0.301492}},
X{{2,0,-1.075},{1,0,0}}
X};
X
XPEXVertexNormal pt13[] = {
X{{-2.7,0,-0.175},{1,0,0}},
X{{-2.6758,0,-0.091691},{0.827306,0,-0.561751}},
X{{-2.60437,0,-0.031997},{0.461935,0,-0.886914}},
X{{-2.48746,0,0.00801757},{0.220826,0,-0.975313}},
X{{-2.32682,0,0.0322887},{0.0968977,0,-0.995294}},
X{{-2.1242,0,0.0447523},{0.0352722,0,-0.999378}},
X{{-1.88134,0,0.0493441},{0.00749979,0,-0.999972}},
X{{-1.6,0,0.0500001},{0,0,-1}},
X{{-2.71662,-0.110204,-0.175},{0.945946,-0.324324,0}},
X{{-2.69206,-0.110204,-0.0870762},{0.794376,-0.31593,-0.518801}},
X{{-2.61951,-0.110204,-0.0240756},{0.456597,-0.280534,-0.844286}},
X{{-2.50059,-0.110204,0.0181556},{0.220914,-0.256648,-0.940919}},
X{{-2.33698,-0.110204,0.0437712},{0.0971565,-0.248665,-0.963705}},
X{{-2.13032,-0.110204,0.0569251},{0.0353359,-0.247624,-0.968212}},
X{{-1.88226,-0.110204,0.0617713},{0.00750076,-0.248486,-0.968606}},
X{{-1.59446,-0.110204,0.0624636},{0,-0.249041,-0.968493}},
X{{-2.75948,-0.183673,-0.175},{0.724138,-0.689655,0}},
X{{-2.73401,-0.183673,-0.0751749},{0.626857,-0.683268,-0.374427}},
X{{-2.65853,-0.183673,-0.00364661},{0.390464,-0.63934,-0.662406}},
X{{-2.53445,-0.183673,0.0443009},{0.197832,-0.59947,-0.775563}},
X{{-2.36318,-0.183673,0.0733838},{0.0881788,-0.582885,-0.807756}},
X{{-2.1461,-0.183673,0.0883183},{0.0320735,-0.579404,-0.814409}},
X{{-1.88464,-0.183673,0.0938205},{0.00678072,-0.580338,-0.814347}},
X{{-1.58017,-0.183673,0.0946065},{0,-0.581238,-0.813734}},
X{{-2.81808,-0.220408,-0.175},{0.28,-0.96,0}},
X{{-2.79135,-0.220408,-0.0589017},{0.247993,-0.959477,-0.133803}},
X{{-2.71189,-0.220408,0.0242869},{0.168707,-0.950882,-0.259541}},
X{{-2.58075,-0.220408,0.0800507},{0.0923455,-0.939588,-0.329617}},
X{{-2.399,-0.220408,0.113875},{0.0425506,-0.933382,-0.356353}},
X{{-2.16769,-0.220408,0.131244},{0.015576,-0.931614,-0.363114}},
X{{-1.88788,-0.220408,0.137643},{0.00327935,-0.931724,-0.363153}},
X{{-1.56064,-0.220408,0.138557},{0,-0.932005,-0.362446}},
X{{-2.88192,-0.220408,-0.175},{-0.28,-0.96,0}},
X{{-2.85384,-0.220408,-0.0411712},{-0.25104,-0.960045,0.123661}},
X{{-2.77003,-0.220408,0.0547219},{-0.175592,-0.952824,0.247578}},
X{{-2.6312,-0.220408,0.119002},{-0.0982819,-0.941359,0.322776}},
X{{-2.43803,-0.220408,0.157991},{-0.0457409,-0.934177,0.353866}},
X{{-2.1912,-0.220408,0.178013},{-0.0167692,-0.931799,0.362588}},
X{{-1.89142,-0.220408,0.185389},{-0.00352105,-0.931729,0.363138}},
X{{-1.53936,-0.220408,0.186443},{0,-0.932005,0.362447}},
X{{-2.94052,-0.183673,-0.175},{-0.724138,-0.689655,0}},
X{{-2.91118,-0.183673,-0.024898},{-0.656426,-0.691533,0.301475}},
X{{-2.82339,-0.183673,0.0826554},{-0.452303,-0.663043,0.596487}},
X{{-2.6775,-0.183673,0.154752},{-0.242795,-0.61742,0.748226}},
X{{-2.47385,-0.183673,0.198482},{-0.109809,-0.590208,0.799748}},
X{{-2.21279,-0.183673,0.220938},{-0.0398036,-0.581055,0.81289}},
X{{-1.89466,-0.183673,0.229212},{-0.00833174,-0.580386,0.814299}},
X{{-1.51983,-0.183673,0.230394},{0,-0.581238,0.813734}},
X{{-2.98338,-0.110204,-0.175},{-0.945946,-0.324324,0}},
X{{-2.95313,-0.110204,-0.0129967},{-0.865413,-0.326552,0.380031}},
X{{-2.86242,-0.110204,0.103084},{-0.590694,-0.306411,0.746453}},
X{{-2.71136,-0.110204,0.180897},{-0.307876,-0.273973,0.911126}},
X{{-2.50005,-0.110204,0.228095},{-0.136556,-0.25537,0.957151}},
X{{-2.22857,-0.110204,0.252332},{-0.0491037,-0.249116,0.967228}},
X{{-1.89704,-0.110204,0.261261},{-0.0102524,-0.248529,0.96857}},
X{{-1.50554,-0.110204,0.262536},{0,-0.249041,0.968493}},
X{{-3,0,-0.175},{-1,0,0}},
X{{-2.96939,0,-0.00838195},{-0.917969,0,0.396653}},
X{{-2.87755,0,0.111006},{-0.626391,0,0.779509}},
X{{-2.72449,0,0.191035},{-0.324324,0,0.945946}},
X{{-2.5102,0,0.239577},{-0.143153,0,0.989701}},
X{{-2.23469,0,0.264504},{-0.0513607,0,0.99868}},
X{{-1.89796,0,0.273688},{-0.0107137,0,0.999943}},
X{{-1.5,0,0.275},{0,0,1}}
X};
X
XPEXVertexNormal pt14[] = {
X{{-3,0,-0.175},{-1,0,0}},
X{{-2.96939,0,-0.00838195},{-0.917969,0,0.396653}},
X{{-2.87755,0,0.111006},{-0.626391,0,0.779509}},
X{{-2.72449,0,0.191035},{-0.324324,0,0.945946}},
X{{-2.5102,0,0.239577},{-0.143153,0,0.989701}},
X{{-2.23469,0,0.264504},{-0.0513607,0,0.99868}},
X{{-1.89796,0,0.273688},{-0.0107137,0,0.999943}},
X{{-1.5,0,0.275},{0,0,1}},
X{{-2.98338,0.110204,-0.175},{-0.945946,0.324324,0}},
X{{-2.95313,0.110204,-0.0129967},{-0.865413,0.326552,0.380031}},
X{{-2.86242,0.110204,0.103084},{-0.590694,0.306411,0.746453}},
X{{-2.71136,0.110204,0.180897},{-0.307876,0.273973,0.911126}},
X{{-2.50005,0.110204,0.228095},{-0.136556,0.25537,0.957151}},
X{{-2.22857,0.110204,0.252332},{-0.0491037,0.249116,0.967228}},
X{{-1.89704,0.110204,0.261261},{-0.0102524,0.248529,0.96857}},
X{{-1.50554,0.110204,0.262536},{0,0.249041,0.968493}},
X{{-2.94052,0.183673,-0.175},{-0.724138,0.689655,0}},
X{{-2.91118,0.183673,-0.024898},{-0.656426,0.691533,0.301475}},
X{{-2.82339,0.183673,0.0826554},{-0.452303,0.663043,0.596487}},
X{{-2.6775,0.183673,0.154752},{-0.242795,0.61742,0.748226}},
X{{-2.47385,0.183673,0.198482},{-0.109809,0.590208,0.799748}},
X{{-2.21279,0.183673,0.220938},{-0.0398036,0.581055,0.81289}},
X{{-1.89466,0.183673,0.229212},{-0.00833174,0.580386,0.814299}},
X{{-1.51983,0.183673,0.230394},{0,0.581238,0.813734}},
X{{-2.88192,0.220408,-0.175},{-0.28,0.96,0}},
X{{-2.85384,0.220408,-0.0411712},{-0.25104,0.960045,0.123661}},
X{{-2.77003,0.220408,0.0547219},{-0.175592,0.952824,0.247577}},
X{{-2.6312,0.220408,0.119002},{-0.0982818,0.941359,0.322775}},
X{{-2.43803,0.220408,0.157991},{-0.0457408,0.934177,0.353866}},
X{{-2.1912,0.220408,0.178013},{-0.0167692,0.931799,0.362588}},
X{{-1.89142,0.220408,0.185389},{-0.00352105,0.931729,0.363138}},
X{{-1.53936,0.220408,0.186443},{0,0.932005,0.362446}},
X{{-2.81808,0.220408,-0.175},{0.28,0.96,0}},
X{{-2.79135,0.220408,-0.0589017},{0.247993,0.959477,-0.133803}},
X{{-2.71189,0.220408,0.0242869},{0.168707,0.950882,-0.259541}},
X{{-2.58075,0.220408,0.0800507},{0.0923455,0.939588,-0.329617}},
X{{-2.399,0.220408,0.113875},{0.0425506,0.933382,-0.356353}},
X{{-2.16769,0.220408,0.131244},{0.015576,0.931614,-0.363115}},
X{{-1.88788,0.220408,0.137643},{0.00327935,0.931723,-0.363154}},
X{{-1.56064,0.220408,0.138557},{0,0.932005,-0.362447}},
X{{-2.75948,0.183673,-0.175},{0.724138,0.689655,0}},
X{{-2.73401,0.183673,-0.0751749},{0.626857,0.683268,-0.374427}},
X{{-2.65853,0.183673,-0.00364661},{0.390464,0.63934,-0.662406}},
X{{-2.53445,0.183673,0.0443009},{0.197832,0.59947,-0.775563}},
END_OF_FILE
  if test 50546 -ne `wc -c <'teapotc.1'`; then
    echo shar: \"'teapotc.1'\" unpacked with wrong size!
  fi
  # end of 'teapotc.1'
fi
echo shar: End of archive 3 \(of 14\).
cp /dev/null ark3isdone
MISSING=""
for I in 1 2 3 4 5 6 7 8 9 10 11 12 13 14 ; do
    if test ! -f ark${I}isdone ; then
	MISSING="${MISSING} ${I}"
    fi
done
if test "${MISSING}" = "" ; then
    echo You have unpacked all 14 archives.
    rm -f ark[1-9]isdone ark[1-9][0-9]isdone
    echo "concatentating pexdraw.c ..."
    cat pexdrawc.? > pexdraw.c
    rm pexdrawc.?
    echo "concatentating pexdraw.uil ..."
    cat pexdrawu.? > pexdraw.uil
    rm pexdrawu.?
    echo "concatentating teapot.c ..."
    rm teapotc.?
else
    echo You still must unpack the following archives:
    echo "        " ${MISSING}
fi
exit 0
exit 0 # Just in case...
-- 
  // chris@IMD.Sterling.COM       | Send comp.sources.x submissions to:
\X/  Amiga - The only way to fly! |    sources-x@imd.sterling.com
 "It's intuitively obvious to the |
  most casual observer..."        | GCS d+/-- p+ c++ l+ m+ s++/+ g+ w+ t+ r+ x+
