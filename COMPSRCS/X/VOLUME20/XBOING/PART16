Newsgroups: comp.sources.x
From: jck@kimba.catt.citri.edu.au (Justin Kibell)
Subject: v20i123:  xboing - a simple blockout type game, Part16/26
Message-ID: <1993Sep3.123421.8010@sparky.sterling.com>
X-Md4-Signature: 94fc5c49fbfb8771d9ffca189f68180a
Sender: chris@sparky.sterling.com (Chris Olson)
Organization: Sterling Software
Date: Fri, 3 Sep 1993 12:34:21 GMT
Approved: chris@sterling.com

Submitted-by: jck@kimba.catt.citri.edu.au (Justin Kibell)
Posting-number: Volume 20, Issue 123
Archive-name: xboing/part16
Environment: X11, xpm, color

#! /bin/sh
# This is a shell archive.  Remove anything before this line, then feed it
# into a shell via "sh file" or similar.  To overwrite existing files,
# type "sh file -c".
# Contents:  INSTALL Makefile.std sounds/shoot.au.uue stage.c
# Wrapped by chris@sparky on Fri Sep  3 07:14:47 1993
PATH=/bin:/usr/bin:/usr/ucb:/usr/local/bin:/usr/lbin ; export PATH
echo If this archive is complete, you will see the following message:
echo '          "shar: End of archive 16 (of 26)."'
if test -f 'INSTALL' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'INSTALL'\"
else
  echo shar: Extracting \"'INSTALL'\" \(9988 characters\)
  sed "s/^X//" >'INSTALL' <<'END_OF_FILE'
X                              XBoing Installation
X                              ===================
X
X                                 6th August 1993
X
XRequirements
X------------
X
X- You must be using X11R4 or X11R5. It may work on X11R3 but cannot test it!
X- You must have the XPM pixmap library. The XPM library can be obtained from
X  the following sites:-
X
X  avahi.inria.fr (138.96.24.30)     - Latest revision. (Europe)     V3.2g
X	- in /pub/xpm
X  export.lcs.mit.edu (18.30.0.238)  - Latest revision. (America)    V3.2g
X	- in /contrib
X  archie.au (139.130.4.6)           - Latest revision. (Australia)  V3.2g
X	- in /X11/contrib
X
X  I have been successfully using version 3.2f, or version 3.2g. I haven't
X  tried any lower versions. The author of XPM is lehors@sophia.inria.fr
X  I suggest you use 3.2g as it has had the best reports. Any lower?
X
X- v1.6 has now been compiled and works on the following machines :-
X
X	+ SunOS 4.1.2 5 sun4c/sun4m
X	+ SunOS Solaris 2.2 LX
X	+ IRIX 4.0.5G 12171207 IP7
X	+ SGI 310/GTX
X	+ HP 9000/720 HP-UX 8.07
X	+ DEC 2100
X	+ DEC OSF/1 AXP
X	+ DECstation 5000/133 ULTRIX 4.2 0 RISC
X	+ AIX 3.2.3e rs6000/350
X	+ NetBSD on i486
X	+ Linux on i486.
X	+ Intel 486 ESIX 4.0.4 X11R4
X
X- You must have a colour display. Sorry to all those B&W dudes.
X
X- An ANSI compiler would be nicer however I spent ages changing code with
X  all those lovely #ifdefs so you can use a non-ansi compiler. :-)
X
X- This game DOES NOT need Motif or Xt or anything except pure XLib.
X
X- The xnews Sun X server is not the quickest with this game. Be warned.
X
X
XMakefiles
X---------
X
XIncluded in this package is an Imakefile which generates a Makefile that will
Xcompile XBoing using your system setup. For those people without imake, or
Xwho can't get it to compile, a Makefile.std is also included. 
X
X
XCompilation
X-----------
X
XEdit the Imakefile or the Makefile.std and change the default compiler to
Xyour compiler. Also change the compiler flags if necessary. 
X
XGo into the bitmaps directory and uudecode earth.xpm.Z.uue and then 
Xuncompress the resultant file.
X
XChange the $(XBOING_DIR) to point to the place where xboing is to be 
Xinstalled. In that directory xboing will create the highscore file and also
Xplace the level data and sound data.
X
XNOTE: The user can now specify the sounds, level and highscore file locations
X	  as environment variables. They are :-
X
XXBOING_SCORE_FILE = the highscore file to be used.
XXBOING_LEVELS_DIR = the directory containing the levels.
XXBOING_SOUND_DIR  = the directory containing the sounds.
X
XAlso set the AUDIO_AVAILABLE flag to True or False to enable the audio in
Xthe game if possible. 
X
XCopy the desired audio code from audio directory to audio.c as listed below:-
X	LINUXaudio.c - SoundBlaster support on Linux for PC
X	SUNaudio.c - Sun workstation audio 
X	NCDaudio.c - NCD xterminal sound server support
X	HPaudio.c - HP audio which is .au format?
X	NOaudio.c - Default - no audio support file.
X
XThe default will be no audio at all. ie: NOaudio.c
X
XPlease work on NOaudio.c if you have another machine that you want to post
Xthe sound too. Note that I am not going to support and other file format than
X.au as I'll have sound files everywhere. :-)
X
XIf you are on a Sun SparcStation and you want sound then copy SUNaudio.c to
Xaudio.c and the sound routines should work. I hope.
X
XIf you have imake, type:
X
X    xmkmf
X    make depend
X    make all
X
XX11R5 users can type 'xmkmf -a ; make all' if they like.
X
XIf you do not have imake, type:
X
X    cp Makefile.std Makefile
X	make depend
X    make all
X
X
XInstallation
X------------
X
XTry 'xboing -setup' and see if the compilation has gone as you planned.
XThis option will print out useful information about where xboing will look
Xfor its data files.
X
XPlease note that you must be root to install the game. If you are not root
Xthen you can just run XBoing from your own account.
X
XDon't forget to set the $(XBOING_DIR) in the Makefile/Imakefile and re-compile
Xif you don't like where it will be installed.
X
XFor imake users, type:
X
X    make install             - install XBoing binary.
X    make install.man         - install the manual page.
X
XIf you do not have imake then you must first edit the Makefile.std to check
Xthat where you want the program to be installed.
X
X    make install             - install XBoing binary.
X    make install.man         - install the manual page.
X	
XYou should now have XBoing installed and it's manual page. If not, then please
Xread Troubleshooting.
X
X
XHighScore File
X--------------
X
XIt is automatically created and chmoded to 0666. There will also be a personal
Xhighscore file saved in each users account home directory. This keeps their
Xpersonal highscores. If you have problems then touch one and chmod it to
Xsomething that will work for you. ie: rw for all.
X
XNOTE: **** The highscore file format has changed since v1.5. Any old ones 
X		   will barf! Global files have one entry now. Just erase them please.
X
XTroubleshooting
X---------------
X
XI was hoping you wouldn't be reading this but anyway ...
X
Xmake depend
X
X	Some header files in xboing were not found. Check the includes and see
X	if the Imakefile/Makefile.std includes in the correct directory. If all
X	else fails then xmkmf/cp Ma..std Makefile again and forget it.
X
Xxpm.h
X
X    You must have the Xpm library as explained in the requirements section.
X    XBoing uses the Xpm library extensively. If you have it then please check
X    that the XPMINCLUDE dir is set correctly in the Imakefile/Makefile.std
X
XHeader Files  
X
X    Maybe you have the X11 header files in another place. Please check the 
X    Imakefile or Makefile.std and change the -I directories to your site. 
X    If you are using imake then tell your sysop that imake didn't look
X    in the correct place for the X11 header files. 
X
XHighscore file is corrupt
X
X	I have changed the highscore file format since v1.5. Sorry but it is 
X	much better now and will save times etc. Just delete the old one and 
X	start again. The file locking will not work over NFS.
X
XStrange libraries needed
X
X	Check the Imakefile or Makefile.std and make sure the sysop has installed
X	the Imake.rules correctly. If all else fails just remove them one by one
X	until it compiles.
X
XCrashes with bad drawable
X
X	Make sure that the program is not compiled with -ansi as ansi trigraphs
X	may have been found during compilation and that stuffs up the pixmap data.
X
XColourmap is all black
X
X	Don't use the -pointergrab option as some window managers barf when the
X	pointer is grabbed :-(
X
XSound not working & Levels not working
X
X	Check your sound directory and make sure that you don't have any ENV vars
X	set that will be used first.
X
XAnsi trigraphs
X
X	Try not to use -ansi as it can cause ANSI trigraphs in the data files and
X	that converts a few characters to one causing an XPM error. Bummer.
X
XIf you cannot get it working still and you have tried hard email at the
Xaddress supplied and sen along 'xboing -setup' output, obviously if you have
Xgot it compiled!!
X
XCopyright
X---------
X
XXBoing: 
X
X/*****************************************************************************
X 
X          (c) Copyright 1993, Justin C. Kibell, All Rights Reserved
X                           email: jck@citri.edu.au
X
X  Permission to use, copy, modify, and distribute this software and its
X  documentation without written agreement is hereby granted. You cannot sell 
X  this software without written permission from the author. This entire 
X  copyright notice must appear in all copies of this software.
X
X  IN NO EVENT SHALL THE AUTHOR BE LIABLE TO ANY PARTY FOR DIRECT, INDIRECT, 
X  SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OF 
X  THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF THE AUTHOR HAS BEEN ADVISED 
X  OF THE POSSIBILITY OF SUCH DAMAGE.
X
X  THE AUTHOR SPECIFICALLY DISCLAIMS ANY WARRANTIES, INCLUDING, BUT NOT LIMITED 
X  TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR 
X  PURPOSE.  THE SOFTWARE PROVIDED HEREUNDER IS ON AN "AS IS" BASIS, AND THE 
X  AUTHOR HAS NO OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT, UPDATES, 
X  ENHANCEMENTS, OR MODIFICATIONS.
X
X *****************************************************************************/
X
XXpm:
X  ----------------------------------------------------------------------------
X/*
X * Copyright 1990-93 GROUPE BULL
X *
X * Permission to use, copy, modify, and distribute this software and its
X * documentation for any purpose and without fee is hereby granted, provided
X * that the above copyright notice appear in all copies and that both that
X * copyright notice and this permission notice appear in supporting
X * documentation, and that the name of GROUPE BULL not be used in advertising
X * or publicity pertaining to distribution of the software without specific,
X * written prior permission.  GROUPE BULL makes no representations about the
X * suitability of this software for any purpose.  It is provided "as is"
X * without express or implied warranty.
X *
X * GROUPE BULL disclaims all warranties with regard to this software,
X * including all implied warranties of merchantability and fitness,
X * in no event shall GROUPE BULL be liable for any special,
X * indirect or consequential damages or any damages
X * whatsoever resulting from loss of use, data or profits,
X * whether in an action of contract, negligence or other tortious
X * action, arising out of or in connection with the use
X * or performance of this software.
X *
X */
X
XArnaud LE HORS      BULL Research FRANCE -- Koala Project
X                    (XPM - X PixMap format version 2 & 3)
X    Internet:       lehors@sophia.inria.fr
XSurface Mail:       Arnaud LE HORS, INRIA - Sophia Antipolis,
X                    2004, route des Lucioles, 06565 Valbonne Cedex -- FRANCE
X Voice phone:       (33) 93.65.77.71, Fax: (33) 93 65 77 66, Telex: 97 00 50 F
X  ----------------------------------------------------------------------------
X
X-------------------------------------------------------------------------------
XJustin Kibell - jck@citri.edu.au - +61 3 282 2456 - Vic - Australia
END_OF_FILE
  if test 9988 -ne `wc -c <'INSTALL'`; then
    echo shar: \"'INSTALL'\" unpacked with wrong size!
  fi
  # end of 'INSTALL'
fi
if test -f 'Makefile.std' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'Makefile.std'\"
else
  echo shar: Extracting \"'Makefile.std'\" \(13670 characters\)
  sed "s/^X//" >'Makefile.std' <<'END_OF_FILE'
X# Makefile generated by imake - do not edit!
X# $XConsortium: imake.c,v 1.65 91/07/25 17:50:17 rws Exp $
X#
X# The cpp used on this machine replaces all newlines and multiple tabs and
X# spaces in a macro expansion with a single space.  Imake tries to compensate
X# for this, but is not always successful.
X#
X
X# -------------------------------------------------------------------------
X# Makefile generated from "Imake.tmpl" and </tmp/IIf.a14933>
X# $XConsortium: Imake.tmpl,v 1.139 91/09/16 08:52:48 rws Exp $
X#
X# Platform-specific parameters may be set in the appropriate <vendor>.cf
X# configuration files.  Site-specific parameters should be set in the file
X# site.def.  Full rebuilds are recommended if any parameters are changed.
X#
X# If your C preprocessor does not define any unique symbols, you will need
X# to set BOOTSTRAPCFLAGS when rebuilding imake (usually when doing
X# "make World" the first time).
X#
X
X# -------------------------------------------------------------------------
X# site-specific configuration parameters that need to come before
X# the platform-specific parameters - edit site.def to change
X
X# site:  $XConsortium: site.def,v 1.2 91/07/30 20:26:44 rws Exp $
X
X# -------------------------------------------------------------------------
X# platform-specific configuration parameters - edit sun.cf to change
X
X# platform:  $XConsortium: sun.cf,v 1.72.1.1 92/03/18 13:13:37 rws Exp $
X
X# operating system:  SunOS 4.1.2
X
X# $XConsortium: sunLib.rules,v 1.7 91/12/20 11:19:47 rws Exp $
X
X# -------------------------------------------------------------------------
X# site-specific configuration parameters that go after
X# the platform-specific parameters - edit site.def to change
X
X# site:  $XConsortium: site.def,v 1.2 91/07/30 20:26:44 rws Exp $
X
X            SHELL = /bin/sh
X
X              TOP = .
X      CURRENT_DIR = .
X
X               AR = ar clq
X  BOOTSTRAPCFLAGS =
X               CC = cc
X               AS = as
X
X         COMPRESS = compress
X              CPP = /lib/cpp $(STD_CPP_DEFINES)
X    PREPROCESSCMD = cc -E $(STD_CPP_DEFINES)
X          INSTALL = install
X               LD = ld
X             LINT = lint
X      LINTLIBFLAG = -C
X         LINTOPTS = -axz
X               LN = ln -s
X             MAKE = make
X               MV = mv
X               CP = cp
X
X           RANLIB = ranlib
X  RANLIBINSTFLAGS =
X
X               RM = rm -f
X            TROFF = psroff
X         MSMACROS = -ms
X              TBL = tbl
X              EQN = eqn
X     STD_INCLUDES =
X  STD_CPP_DEFINES =
X      STD_DEFINES =
X EXTRA_LOAD_FLAGS =
X  EXTRA_LIBRARIES =
X             TAGS = ctags
X
X    SHAREDCODEDEF = -DSHAREDCODE
X         SHLIBDEF = -DSUNSHLIB
X
X    PROTO_DEFINES =
X
X     INSTPGMFLAGS =
X
X     INSTBINFLAGS = -m 0755
X     INSTUIDFLAGS = -m 4755
X     INSTLIBFLAGS = -m 0644
X     INSTINCFLAGS = -m 0444
X     INSTMANFLAGS = -m 0444
X     INSTDATFLAGS = -m 0444
X    INSTKMEMFLAGS = -g kmem -m 2755
X
X      CDEBUGFLAGS = -O
X        CCOPTIONS = -pipe
X
X      ALLINCLUDES = $(INCLUDES) $(EXTRA_INCLUDES) $(TOP_INCLUDES) $(STD_INCLUDES)
X       ALLDEFINES = $(ALLINCLUDES) $(STD_DEFINES) $(EXTRA_DEFINES) $(PROTO_DEFINES) $(DEFINES)
X           CFLAGS = $(CDEBUGFLAGS) $(CCOPTIONS) $(ALLDEFINES)
X        LINTFLAGS = $(LINTOPTS) -DLINT $(ALLDEFINES)
X
X           LDLIBS = $(SYS_LIBRARIES) $(EXTRA_LIBRARIES)
X
X        LDOPTIONS = $(CDEBUGFLAGS) $(CCOPTIONS) $(LOCAL_LDFLAGS)
X
X   LDCOMBINEFLAGS = -X -r
X      DEPENDFLAGS =
X
X        MACROFILE = sun.cf
X           RM_CMD = $(RM) *.CKP *.ln *.BAK *.bak *.o core errs ,* *~ *.a .emacs_* tags TAGS make.log MakeOut
X
X    IMAKE_DEFINES =
X
X         IRULESRC = $(CONFIGDIR)
X        IMAKE_CMD = $(IMAKE) -DUseInstalled -I$(IRULESRC) $(IMAKE_DEFINES)
X
X     ICONFIGFILES = $(IRULESRC)/Imake.tmpl $(IRULESRC)/Imake.rules \
X			$(IRULESRC)/Project.tmpl $(IRULESRC)/site.def \
X			$(IRULESRC)/$(MACROFILE) $(EXTRA_ICONFIGFILES)
X
X# -------------------------------------------------------------------------
X# X Window System Build Parameters
X# $XConsortium: Project.tmpl,v 1.138.1.1 92/11/11 09:49:19 rws Exp $
X
X# -------------------------------------------------------------------------
X# X Window System make variables; this need to be coordinated with rules
X
X          PATHSEP = /
X        USRLIBDIR = /usr/lib
X           BINDIR = /usr/bin/X11
X          INCROOT = /usr/include
X     BUILDINCROOT = $(TOP)
X      BUILDINCDIR = $(BUILDINCROOT)/X11
X      BUILDINCTOP = ..
X           INCDIR = $(INCROOT)/X11
X           ADMDIR = /usr/adm
X           LIBDIR = $(USRLIBDIR)/X11
X        CONFIGDIR = $(LIBDIR)/config
X       LINTLIBDIR = $(USRLIBDIR)/lint
X
X          FONTDIR = $(LIBDIR)/fonts
X         XINITDIR = $(LIBDIR)/xinit
X           XDMDIR = $(LIBDIR)/xdm
X           TWMDIR = $(LIBDIR)/twm
X          MANPATH = /usr/man
X    MANSOURCEPATH = $(MANPATH)/man
X        MANSUFFIX = n
X     LIBMANSUFFIX = 3
X           MANDIR = $(MANSOURCEPATH)$(MANSUFFIX)
X        LIBMANDIR = $(MANSOURCEPATH)$(LIBMANSUFFIX)
X           NLSDIR = $(LIBDIR)/nls
X        PEXAPIDIR = $(LIBDIR)/PEX
X      XAPPLOADDIR = $(LIBDIR)/app-defaults
X       FONTCFLAGS = -t
X
X     INSTAPPFLAGS = $(INSTDATFLAGS)
X
X            IMAKE = imake
X           DEPEND = makedepend
X              RGB = rgb
X
X            FONTC = bdftopcf
X
X        MKFONTDIR = mkfontdir
X        MKDIRHIER = /bin/sh $(BINDIR)/mkdirhier
X
X        CONFIGSRC = $(TOP)/config
X       DOCUTILSRC = $(TOP)/doc/util
X        CLIENTSRC = $(TOP)/clients
X          DEMOSRC = $(TOP)/demos
X           LIBSRC = $(TOP)/lib
X          FONTSRC = $(TOP)/fonts
X       INCLUDESRC = $(TOP)/X11
X        SERVERSRC = $(TOP)/server
X          UTILSRC = $(TOP)/util
X        SCRIPTSRC = $(UTILSRC)/scripts
X       EXAMPLESRC = $(TOP)/examples
X       CONTRIBSRC = $(TOP)/../contrib
X           DOCSRC = $(TOP)/doc
X           RGBSRC = $(TOP)/rgb
X        DEPENDSRC = $(UTILSRC)/makedepend
X         IMAKESRC = $(CONFIGSRC)
X         XAUTHSRC = $(LIBSRC)/Xau
X          XLIBSRC = $(LIBSRC)/X
X           XMUSRC = $(LIBSRC)/Xmu
X       TOOLKITSRC = $(LIBSRC)/Xt
X       AWIDGETSRC = $(LIBSRC)/Xaw
X       OLDXLIBSRC = $(LIBSRC)/oldX
X      XDMCPLIBSRC = $(LIBSRC)/Xdmcp
X      BDFTOSNFSRC = $(FONTSRC)/bdftosnf
X      BDFTOSNFSRC = $(FONTSRC)/clients/bdftosnf
X      BDFTOPCFSRC = $(FONTSRC)/clients/bdftopcf
X     MKFONTDIRSRC = $(FONTSRC)/clients/mkfontdir
X         FSLIBSRC = $(FONTSRC)/lib/fs
X    FONTSERVERSRC = $(FONTSRC)/server
X     EXTENSIONSRC = $(TOP)/extensions
X         XILIBSRC = $(EXTENSIONSRC)/lib/xinput
X        PEXLIBSRC = $(EXTENSIONSRC)/lib/PEXlib
X      PHIGSLIBSRC = $(EXTENSIONSRC)/lib/PEX
X
X# $XConsortium: sunLib.tmpl,v 1.14.1.2 92/11/11 09:55:02 rws Exp $
X
XSHLIBLDFLAGS = -assert pure-text
XPICFLAGS = -pic
X
X  DEPEXTENSIONLIB =
X     EXTENSIONLIB = -lXext
X
X          DEPXLIB = $(DEPEXTENSIONLIB)
X             XLIB = $(EXTENSIONLIB) -lX11
X
X        DEPXMULIB = $(USRLIBDIR)/libXmu.sa.$(SOXMUREV)
X       XMULIBONLY = -lXmu
X           XMULIB = -lXmu
X
X       DEPOLDXLIB =
X          OLDXLIB = -loldX
X
X      DEPXTOOLLIB = $(USRLIBDIR)/libXt.sa.$(SOXTREV)
X         XTOOLLIB = -lXt
X
X        DEPXAWLIB = $(USRLIBDIR)/libXaw.sa.$(SOXAWREV)
X           XAWLIB = -lXaw
X
X        DEPXILIB =
X           XILIB = -lXi
X
X        DEPPEXLIB =
X           PEXLIB = -lPEX5
X
X        SOXLIBREV = 4.10
X          SOXTREV = 4.10
X         SOXAWREV = 5.0
X        SOOLDXREV = 4.10
X         SOXMUREV = 4.10
X        SOXEXTREV = 4.10
X      SOXINPUTREV = 4.10
X         SOPEXREV = 1.0
X
X      DEPXAUTHLIB = $(USRLIBDIR)/libXau.a
X         XAUTHLIB =  -lXau
X      DEPXDMCPLIB = $(USRLIBDIR)/libXdmcp.a
X         XDMCPLIB =  -lXdmcp
X
X        DEPPHIGSLIB = $(USRLIBDIR)/libphigs.a
X           PHIGSLIB =  -lphigs
X
X       DEPXBSDLIB = $(USRLIBDIR)/libXbsd.a
X          XBSDLIB =  -lXbsd
X
X LINTEXTENSIONLIB = $(LINTLIBDIR)/llib-lXext.ln
X         LINTXLIB = $(LINTLIBDIR)/llib-lX11.ln
X          LINTXMU = $(LINTLIBDIR)/llib-lXmu.ln
X        LINTXTOOL = $(LINTLIBDIR)/llib-lXt.ln
X          LINTXAW = $(LINTLIBDIR)/llib-lXaw.ln
X           LINTXI = $(LINTLIBDIR)/llib-lXi.ln
X          LINTPEX = $(LINTLIBDIR)/llib-lPEX5.ln
X        LINTPHIGS = $(LINTLIBDIR)/llib-lphigs.ln
X
X          DEPLIBS = $(DEPXAWLIB) $(DEPXMULIB) $(DEPXTOOLLIB) $(DEPXLIB)
X
X         DEPLIBS1 = $(DEPLIBS)
X         DEPLIBS2 = $(DEPLIBS)
X         DEPLIBS3 = $(DEPLIBS)
X
X# -------------------------------------------------------------------------
X# Imake rules for building libraries, programs, scripts, and data files
X# rules:  $XConsortium: Imake.rules,v 1.123 91/09/16 20:12:16 rws Exp $
X
X# -------------------------------------------------------------------------
X# start of Imakefile
X
X#*****************************************************************************
X#
X#          (c) Copyright 1993, Justin C. Kibell, All Rights Reserved
X#                           email: jck@citri.edu.au
X#
X#  Permission to use, copy, modify, and distribute this software and its
X#  documentation without written agreement is hereby granted. You cannot sell
X#  this software without written permission from the author. This entire
X#  copyright notice must appear in all copies of this software.
X#
X#  IN 0 EVENT SHALL THE AUTHOR BE LIABLE TO ANY PARTY FOR DIRECT, INDIRECT,
X#  SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OF
X#  THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF THE AUTHOR HAS BEEN ADVISED
X#  OF THE POSSIBILITY OF SUCH DAMAGE.
X#
X#  THE AUTHOR SPECIFICALLY DISCLAIMS ANY WARRANTIES, INCLUDING, BUT NOT LIMITED
X#  TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
X#  PURPOSE.  THE SOFTWARE PROVIDED HEREUNDER IS ON AN "AS IS" BASIS, AND THE
X#  AUTHOR HAS 0 OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT, UPDATES,
X#  ENHANCEMENTS, OR MODIFICATIONS.
X#
X#*****************************************************************************
X
X# Imakefile for xboing version 1.6 - 6th August 1993
X
X# This is the directory where the highscore and level data will be placed.
XXBOING_DIR			= .
X
XCC					= cc
XCCOPTIONS			= -Bstatic
X
X#CC					= gcc
X#CCOPTIONS			= -static -DFUNCPROTO -Wall
X
XXPMLIB				= -L/usr/lib -lXpm
XXPMINCLUDE			= -I/usr/include/X11
XLEVEL_INSTALL_DIR 	= $(XBOING_DIR)/levels
XSOUNDS_DIR 			= $(XBOING_DIR)/sounds
XHIGH_SCORE_FILE 	= $(XBOING_DIR)/xboing.scores
XAUDIO_AVAILABLE		= False
X
XAUDIO_AVAILABLE	= True
X
XAUDIO_INCLUDE = -I/usr/demo/SOUND/multimedia
XAUDIO_LIB     = -L/usr/demo/SOUND -laudio
X
XEXTRA_INCLS = $(XPMINCLUDE) $(AUDIO_INCLUDE)
X
XDEFINES	= $(EXTRA_INCLS) \
X	-DHIGH_SCORE_FILE=\"$(HIGH_SCORE_FILE)\" \
X	-DLEVEL_INSTALL_DIR=\"$(LEVEL_INSTALL_DIR)\" \
X	-DAUDIO_AVAILABLE=\"$(AUDIO_AVAILABLE)\" \
X	-DSOUNDS_DIR=\"$(SOUNDS_DIR)\"
X
XLOCAL_LIBRARIES = $(AUDIO_LIB) $(XPMLIB) $(XLIB) -lm
X
XDEPLIBS = $(DEPXLIB)
X
XSRCS1=	version.c main.c score.c error.c ball.c blocks.c init.c \
X		stage.c level.c paddle.c mess.c intro.c bonus.c sfx.c \
X		highscore.c misc.c inst.c gun.c keys.c audio.c special.c \
X		presents.c
X
XOBJS1=	version.o main.o score.o error.o ball.o blocks.o init.o \
X		stage.o level.o paddle.o mess.o intro.o bonus.o sfx.o  \
X		highscore.o misc.o inst.o gun.o keys.o audio.o special.o \
X		presents.o
X
XPROGRAMS = xboing
X
Xall::	$(PROGRAMS)
X		@$(RM) version.c
X		@echo "xboing built successfully."
X
Xversion.c:
X		@./version.sh $(PROGRAMS)
X
X OBJS = $(OBJS1) $(OBJS2) $(OBJS3)
X SRCS = $(SRCS1) $(SRCS2) $(SRCS3)
X
Xall:: $(PROGRAMS)
X
X$(PROGRAMS): $(OBJS1) $(DEPLIBS1)
X	$(RM) $@
X	$(CC) -o $@ $(LDOPTIONS) $(OBJS1)  $(LOCAL_LIBRARIES) $(LDLIBS)   $(EXTRA_LOAD_FLAGS)
X
Xinstall:: $(PROGRAMS)
X	@if [ -d $(DESTDIR)$(BINDIR) ]; then set +x; \
X	else (set -x; $(MKDIRHIER) $(DESTDIR)$(BINDIR)); fi
X	$(INSTALL) -c $(INSTPGMFLAGS)  $(PROGRAMS) $(DESTDIR)$(BINDIR)
X
Xinstall.man:: $(PROGRAMS).man
X	@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
X	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
X	$(INSTALL) -c $(INSTMANFLAGS) $(PROGRAMS).man $(DESTDIR)$(MANDIR)/$(PROGRAMS).$(MANSUFFIX)
X
Xdepend::
X	$(DEPEND) $(DEPENDFLAGS) -s "# DO NOT DELETE" -- $(ALLDEFINES) -- $(SRCS)
X
Xlint:
X	$(LINT) $(LINTFLAGS) $(SRCS) $(LINTLIBS)
Xlint1:
X	$(LINT) $(LINTFLAGS) $(FILE) $(LINTLIBS)
X
Xclean::
X	$(RM) $(PROGRAMS)
X
Xinstall:: $(PROGRAMS)
X	@echo "XBoing directory is " $(XBOING_DIR)
X
X	@echo "Creating directory " $(XBOING_DIR)
X	@if [ ! -d $(XBOING_DIR) ]; then mkdir $(XBOING_DIR); fi
X
X	@echo "Creating directory " $(LEVEL_INSTALL_DIR)
X	@if [ ! -d $(LEVEL_INSTALL_DIR) ]; then mkdir $(LEVEL_INSTALL_DIR); fi
X
X	@echo "Copying level data into directory " $(LEVEL_INSTALL_DIR)
X	@cd ./levels; set -x; for file in *.data; do					\
X		$(INSTALL) -c $(INSTDATFLAGS) $$file $(LEVEL_INSTALL_DIR);	\
X	done
X
X	if [ $(AUDIO_AVAILABLE) ]
X		@echo "Creating directory " $(SOUNDS_DIR)
X		@if [ ! -d $(SOUNDS_DIR) ]; then mkdir $(SOUNDS_DIR); fi
X
X		@echo "Copying sound files into directory " $(SOUNDS_DIR)
X		@cd ./sounds; set -x; for file in *.au; do						\
X			$(INSTALL) -c $(INSTDATFLAGS) $$file $(SOUNDS_DIR);			\
X		done
X	fi
X
X	@echo "Creating a highscore file " $(HIGH_SCORE_FILE)
X	@touch $(HIGH_SCORE_FILE);
X	@chmod a+rw $(HIGH_SCORE_FILE);
X
X# End of the XBoing Imakefile :-)
X
X# -------------------------------------------------------------------------
X# common rules for all Makefiles - do not edit
X
Xemptyrule::
X
Xclean::
X	$(RM_CMD) "#"*
X
XMakefile::
X	-@if [ -f Makefile ]; then set -x; \
X	$(RM) Makefile.bak; $(MV) Makefile Makefile.bak; \
X	else exit 0; fi
X	$(IMAKE_CMD) -DTOPDIR=$(TOP) -DCURDIR=$(CURRENT_DIR)
X
Xtags::
X	$(TAGS) -w *.[ch]
X	$(TAGS) -xw *.[ch] > TAGS
X
X# -------------------------------------------------------------------------
X# empty rules for directories that do not have SUBDIRS - do not edit
X
Xinstall::
X	@echo "install in $(CURRENT_DIR) done"
X
Xinstall.man::
X	@echo "install.man in $(CURRENT_DIR) done"
X
XMakefiles::
X
Xincludes::
X
X# -------------------------------------------------------------------------
X# dependencies generated by makedepend
X
END_OF_FILE
  if test 13670 -ne `wc -c <'Makefile.std'`; then
    echo shar: \"'Makefile.std'\" unpacked with wrong size!
  fi
  # end of 'Makefile.std'
fi
if test -f 'sounds/shoot.au.uue' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'sounds/shoot.au.uue'\"
else
  echo shar: Extracting \"'sounds/shoot.au.uue'\" \(13537 characters\)
  sed "s/^X//" >'sounds/shoot.au.uue' <<'END_OF_FILE'
Xbegin 664 shoot.au
XM+G-N9    "   "8M     0  'T     !          "HJZVQ2T1K03@N-V/H
XMP'4V/U-YO+S5748Q.#,J/L_,MJG&W+]'2-._VSWJT35"LK/"YC9"ML='0<^W
XMM[C01#I*T<"XO/Y).RDI/%H]*B[HO,*[JJFU64CBS4PY1\_&/SS0N;\_+SE?
XMV%_(JZ.L7BTI/\C?Y\;(SLU8.2HL/[VMO,JZM+].+S1AKZW3T<#<3>YJ-24@
XM*T[D7;RPO,]1*RS)OTQ*MZ>Z7KRYQ["_2'3&N[[13STO+#U*/3I5SE@]4]'$
XMO>;.KJ]A.3\^-RX_641=>5I*O+>^LM-4Q;NKI+*[L,+=P,]&.BXI+BPJ+2<?
XM)"])^L6SLJN?HZN\1S<_T[6XNK2OLG$K)RPM+CA6O;.ZNTLO,S]AQ\JZLJVT
XMQ-_S.[Z_+TJ^OL'+/RDJ+C(U.EO*L[&\[-O*RT0P+375KJNMN<K>2SWA^\.U
XMN]<X.SHO.^Z_P[FRN_=23$M>04LP*3=!47/C=EGGOZVMK*NOQF<N+U)&/SI*
XM2#(U5+V[NKROJJ^YO=92VS8O.#8V+2LXR:NOO>7/8S0OQKC.;D8V-$C*O\;8
XMW=:^KK783\K?1S@T,D-./SE<R\R[JZ:EK*VV[2\W3DM;53XH(2@N/]OL3LBS
XML;G-M[J_U^8V+VM<+BI(T>[$P["NML!I2%7)8G=*2%NYKN)3U=D^)2(VO:ZV
XMS?73W&KCNJ^TP5(N(R0TP+/#T];"Q$4O-TU:5$_?N[N^NKJZLJZRS2T?*3]5
XM7/38U%]-XKFMLL%H/C@Y1]S1:67*O\]I03@T+BDF*3/9JZ2KO]:ZJ*B^Y,JY
XMN^9BQ[K..2LN*24U_-WJ3TC<N:ZMO=' M;MT27K*83H]7GTY*28H+C(N.=JY
XMO$XQ1[.FJ[:PI)ZBMU9VQ=A!-TG8WU-'244^25I..3-)T-] +RLM/'S\0D1A
XMT\*WK*FMM\I,-#9:NJ^OK*VSP&(R+#IMR+ZZP>U#/4,_,BLM0,['3RTX5SXY
XM+S/2LKW\;\[#Q;S!MZRNKW&]NL.O1E*YRT5%0C7YW6GL/"\R/TI<S[VNK;=.
XM(API2#4NV+J^7C,P/K&?I=IUJZS!,R_&JK<Z3;6TK[3(3BT^/NBLPEXZ/DE!
XM."4F+D))/\2NL\4]/2T@.,JON6S6ZZ^GM+J_LKJOI;Y1+SF[SM[.7S$F+V:U
XML\IE/39%;L7-2#$@*MUE/BU Q.G3TK2DJ:BLPV\O.FE)/R@J/CIJMJBDK*VX
XMS,M(V\LV+R4G4_S7S+RKQU^_P<E *"8M2<:XL,U)0&&OL[FUQMDR("Y21T9<
XMQG<[.#G+L[*GK\R[P%(U+39,W+F]:3(U3DK%S->KK;+*05+T0DGSTKJSL+'!
XM4BXD'1DF.SO)QMS"S+FSP[*EI*UV.VO87S@L,S9/QKZHIK!?+"HN*RU6OKQN
XMW+&QNCXH0MI//B]!KZ2JL;ZWL5@T/7[9W<[_/B\D(2Y"OJ2EK,4Y/<_=/3,]
XMQ=1!.BQDKK&Z.3RUL;Y63<.TM]!M5D] .DE=NZFU^40W25](6$PU*"$B,65<
XMR*RFI\'*KJRY0C; J*SO-4G PT@Y0%U@/#$M+"XJ,>9FX[_$K:*CJ<-6:U]&
XM,2HM4EUKQ3I"L+:OJ;?$23?8M[6]X6!-,R@K-$K_6=Z_O;;#1N[-3B\D*3,Y
XM/5S.Q;R_NJ^ZQ;RSHJ&LJ*VZS3@J*S4[+B0D,CU!0#4Z,BHU4,NFH*2EJ[/%
XM23I"4OG,NJBBJ\LN'BE<Y]9$*2XR*3/+JJ:N>#,Q/M"[KJJUSTDN3+G.]SDX
XMO*^\S-I&+BHK.=>VK;' TC<G+"U+J:BT3C([WKRWK[K*P_A+33D[12]&O-[ 
XMK\KLR<?&P-=;1#,N+S9".CATS,2VO+ZOK[K$;4A,0#DX,R\M+T_:4[VGIJ&?
XMJ\=?.3W+_4[=W>-'+"0C+4#<TUI'/3Y204:]IZ"NW<&QM]HR+#-$W]&ZM<&T
XMM\O00CG5O<G'R]]?.RPI)R<M.D//M:^LN5M1/#([+"[&KZZGJ:^\[<>LK,E#
XM-#?-M+W.."4M-31;[4Q).BXR0\>RQ,RQLLM?4<RMJ\-46U1"+B$LU,I?5,"L
XML,AJ\]Q7X[JYO<]+/C$M/%7EOL!23EU+1T R+E:TKZVMM\)'*BLV3K"IN+W+
XM=,W>.5>YT#DK+TNZO4H]2M:WO,B]T#LM*BM5O]3$OL_(NKK"Q<]D4SLN.V+9
XMN[Y5X[FPK[7A1DPZ*2H]5V9,-SE7S+*LO73/R-]\/$FPJ+E&-SE0SF)'Y6I#
XM3C\N+B\N;KJ[IZ.VQ+O#N:^WO-0P)C0\,#I:35I:-UNRO75<0T[)X^V_LK.T
XMOD<R,2LG.^)BUKW$O+MR[\].1<NWK:BNR$$U+S[*QNI^3BXJ*RI%N,'=VD7;
XMK:V]QL]2U<A.0O!L16YJ.C]?0E7#9GVUO7V\R3_9O> Y/U[IP5<N.<&_T;]R
XM1M+&RK2V4#U&1$AN0TV\O%4V0VC2SS<J/,_BO[#:5[^\QK]>.%'(UFW;8^:R
XML==KP=!#/3<O/4P^3DTP,6?7]L+%S[NZREU23]RNK;RSK+/"R4<O,RPD,EHX
XM,U/;<]-M1,:OP$O?N[VYOE$Z038N;+2QK*[/7] Y*S[&Q.=..$^[OE9,?T<Y
XM038N6+NZL+/@7\_W06W3>+^UQUOK6#SMOU<O,T51P+?J:\;L1NU--FBYQT8_
XM/$NVKM!,TMA/P[7835$V*T%5/7FYP+VOT43-K[6_OU) U-HT*S<^/=SD15;:
XM8/Z]ZC@];FYA_$QKN*^\X61"/<J[:U/8=E#,TT5IM[;!PEL[5LSB/T%".W[#
XM9C]29$34LLA3Y=CGO+?G2FYB040Z+"]/Q]GOQ][7LK3L;\EG/&[,3FV[M[S+
XM02\Z]K^VM=TU-6[@/SM.U;O"/BPZQ<%S3$ Z/$EVOZ^TP]/3P,KM3%:[K;1=
XM2-7 P=1!+C7^TFU40C@[5FM11C\^5\[.55#4Y&G*O^UTN:^YOL)71';.SM)-
XM+RT^Q;S@:%)/S\)=/%?"OL"^Z3@W3$U!7<*YO,'J0$Y=-"]-QLY*4MC:Q;;!
XM4/#(=&/ P$ S3KZSNE\U.%C;SL+#0BDM;["SO<Q,2M'&6DM6/TV\N$4K-=JW
XML]H[5+:NR34Y[-[PR[W>/3H^0<NLK\K.RDI*WT@O,5;(X]2ZQ>O5R%XO*"<M
XMTZNMT#P_5LFPL_%#:-KHR+C!5DS*KJVY8R\K.>-U/4565VI/.S$^Q+&OKKU/
XM2\JXP,3%6#4L-WAI1T,[._;&8T%KQ=#4O;B]O;&URLO+7D522"HB,UE'2LJY
XMVS\_0=BNJK\W,WZTK:RQ^3<\4$9;TFI/;,N\QEH],"] VM1+9<+,Z-"_S$(Q
XM+C7YM[7*RK6SOU0Z.S]$_[[)85M&0-.PL,CY2SY?N:Z\2#E%>]1>,B,C,\ZX
XMO\Q;/$/,M<#<U=O"L:[%.3%#<,:QK[Y./V'G83XQ+S;<KZJPS3TJ)S?,RE/5
XMN]_OL:[,-BLN/\"QMLU015#LUNY-163#L+'79/-.4-_72S@[/S_:M[U<-C4]
XM2'K.O[.NL+UA-"XN+CS'J:BRN,Q 3L*_72\N-3[/NK]D0%+.NK:^;#HS/.O"
XM^$]>/#58O<<_0L[+QKC 7S]/TV?MO[BWR$<X1_)W2CY)WKFNN<WO.2XYYLE6
XM3FQ/3MK53C8Q.U"_K:VUS41 RK*[VTLU,46_M<YB[5Q*XK[$9T)*2TAXVM]M
XM3$E:R+O$7CDS.FZ_W%!813Y0PK[DR+.OL:^SS$8U.C<U3./H3D)(\[>NM,=8
XM0T1>WT8P,S,L+S[9O+V\P_W*KJVXVV+?W\['V4PV,C[4M\#.R/UEWLG#4SD\
XM-RX[R;B^_V-;25M/1%'^X^/6Q;W [4<_0%>_O]S55C]6P;"\1#M66E[3\THX
XM-4K2MZVRRU!/?<J_R^3_1SDZ6;>MN^A+,B]*W6 U*BXO+#O%L[.]P[V]M:^]
XM7#L_?;VLK\3(;3T\6;W%/CI.2%+%PU8O*#!$9+^TO,UG/S4]U+O"\TQ+>[RM
XML<Q^3CY4O[; 33U#/#O+KJ[!1C8W/.N^SS\O-T)=Q<3F5S\[2<:LJ\#5S5!%
XMS[:[>CDW.3=-QL;L2D%&2\^TMM%(0E#EN[+*4$M%4M&_N]P\.4%"1/[1S,U^
XM2SL[UK.WRMO6:D_5P,Y$+RXY2="[S>_)P]7HQ[>XXS\]/4C/O=9%-S<^1<ZR
XMLL-=/C,R8;*OMLY'/D!NP<E80T(_2<>VOO9-<-G?Q+*RRCPK*S9FO\1--SUY
XMQ<"ZO>;5QM#.R<'$8CL[/SQ ^\WN3SU 4E/-L[;-2CU 4M>^PUHZ-D-LU;ZV
XMP\^[OFQ5TKFX>C](2D%/R\Q=/31!55W7T6-&/#]8U+.NRUS+R?U@V+J^8S\_
XM/S<\\,7.34!0:]N_N\M:45Q62V'(OL#=54Y4YL#4/#_/QF9<R[:X5C,Y2E+2
XMOMM#,R\]?=K!M\-41%!WS;>NMMU!.#I#;[RNM-5<3#HR0L>WOTHS-TK<O[[Z
XM04)8]E5(_L7!T59/[="\M,I,3%%(267$M;Y<2TT_/E_584(W-D%3SK&IKVI,
XMWWO7;76SN]5&.C@UU,#*2SEM8EK4O[G-/3,[3$E2O[[923U.X,N_M+]--S-$
XMV+ZOKL=,1U[2P[^]O%4S-ST]4L[ T4Q"3&CJX<V^RT\Y,3,Y1\2TR6-07,B^
XMNK*Z<CPX/%;&N*^TXS\]1U3QQ+[T/#(X1F;9QK[)_$E#2$1'>MAG4$YET<F_
XMM*VWTE<_/#YBQ;_A."]#;VW1O+O*6#HY4=W!N+G'[UY?YN[>PLM&.T5&2$U1
XM;.9--2\__LVVK:NRXSQ"^=;5\&5H65YFY,K%Q])8/3,N,C_:M*^\Y5M714?.
XMM[&Z7#@X.3<_S+2UQDX[/_^]L;7/5%),0CQ%S;>[>$$]/TUEVL._WTI!.30X
XM3L:VN-!19\B_O[>URT@Z.TOHQ;>WRTHO*2@M/].]T5#DQM3[W+ZMJKQ02M;(
XMSL?)]$ N+#A\P[N[P^A$,BLN/$_-O,GKXE-&>,RUK;EK5^=51VW(N[C8.C0^
XM6NS$L;*]5"\K,4C6NK3!WDDW-3M,S[W$?4Y%/T%5P:^LNDTY2-K.S,&]O]P]
XM+BPV;KVRK[G51#8Y3>7$NLCV3CTZ0^;!OM%%.CL^0E?2N[&W^CU [+ZXM;.X
XMQ5,R+2\^;\[%S.=+.#A&[\W&Q.!+/D!)_+RSL+3'2#H]0#Y,U;NRN^9(3MS)
XMR<2\R%4Q*2T^\\*WNLU-/#X_3]K&OLA_4T@].$'5MZNLP$Y 4.;9T=3>5S@P
XM,T;-O;J[QFM'/SQ)W+ZXM[]Q1D=+6-W-O+*[:CLU.3]+7.G,U$(N+D#>P[JT
XMN<A6.#9'S[NQK[G=0S@Z3\B[NKS@/S(O,D#1N[2ROUD\/4Q=V\K'P<Y+/#M/
XMRKS RM!K3CTV/$WKRL+33#HS,CMFOZZKKL)L7UWXR[^]N+G:1CY&5$M4S;_#
XMZ#DI)RX[4GCDT-Y9143EN[:SLK[>74Y.]<.YLZZZ23=#3E!B[=7*V4 N*C!-
XMX\J_Q-IE0#(V8KJNKK7%<$I /UW&NK:]YD4Y-#$\]\"VM<5%.$!9_-6_M[6\
XMY#8J+S]QU<JZP/Y%.#I[N;2RN=A-."\S/&#(O[J^Z4Q-1D7TQ,&^N\Y#.D96
XM<=?'O\'/5#@Q/MB]OL#"U5!".SE0QKVYO=Q724$]0V#,Q,O)6SH]1$!(WLK(
XMQ=1',SA\NK.ZN+C)74$\0-N[N[F]V$H[-30Y4]?5P<M%/#Y"3.C#N;2VQT0U
XM.4)<S\.ZMKS/3T!%:,O#Q,?<13DR,3[OQ+[%\4= /T1>U;^_Q[_403M-<]F^
XMM;2UNNHT+3=-\-##QM9T03$O/M*\N+O$UV5/0SU4P[R_P,Q=13\^/4OIV,S"
XMU#XR.UGKXL6YP,S52#="S[FVN[S![4]!.3WVOKN]Q7M&-S,^3>+.S,?@0S8V
XM.T5DX,K'QKW(6D;OR,G+O[K"TTXX.E#1O[V^R&A-2#DS0O/&OL/45SXZ1F?<
XMR+_'UN,]+"\^?LC N<?#M'0]/\VYS[O Q\Q42C8W2=>^OLQG5DP^/$+XPKZ_
XMR&9 .CQ$1%+?X=[;[DHZ/]F[N[>WN[[*Y$P^6;^XP<WA2#HW-3,[;\G"O\=D
XM/3] -S_:O[_&SEQ%[K[!Q+S"R<G-:#DR.#U5SM/NZMO;3CM'Z,FYM+[0W-SE
XM75A0:LK%T6=&/3T]/#Y)>,S#O<);/D!9[?#&N<M_7$,X/'BZK[7 UUM(/3D]
XM2%CRR[Z\O+["R=MF[=SLZ-5A/#<X0$]G9T$W0%1'0>N[L;"XRF!5?5<]0]&\
XMM[.ZR/!(-RXJ+5.^LK"[V4\_.#E,V,"XM;G 73@T/%O3V]_*O[[70C0X]+O.
XM7=C/Y-MJ/CU>QKS(7T=/1SY*0C_[N["PN<Y(/%E?.CYH:NG"RT<U._S(R<"V
XMM[^[O%<W.DEH[%]?97O5[4\[/]_ N[S!RV=/4E)=77/?].GN2#L^1CT]6]G)
XMO+K7/3M3VK_ >T_FS=;O65;.M:ZROLO,?TPW+"XS3\O%REI<>5!%1D]>^]K1
XMW=G8:W!I3E[AS,==5\:[OL.[OLYG14KRS]Q2/CM$4D](/3U(1&;9Y;ZYQMK7
XMU^9L24KNZ^G4RL/*R>U-44_;P]A'1_/L>?Q-1&3/S/U*1D _3U]<6<NQKK'!
XM4T)+4E-=?<>[O\[_2CHZ/#]-8/UG8%YHYO/CX/#+P\'#SL[Q6&E02=^^M[O>
XM13@R.$)"062_P,WP67;JX\&WPL?*Z&E913<Z0$7HUFGDUO77S^1(.TS8Q,36
XM55/N=FU:3U=>R+6WQ-;H64]@3$W4O\#*:E;?:5973UMYWEI*2$!*1SE!U;Z_
XMS_I-3M_-XVGEVL*\YTQ9:EA43DE"3\##^VGBSL*]R,B[N;S"UUY)/#,O,#WN
XMR]I..SM$4VO\?VGUW>I31E;'L["TL;.]S6 \-T)CO[._Z=_/ZT] -C5#2DA1
XM3CXY1E]<V\3 R\^]OMMJ5DI'4%913UK<R]E>;]K,S<K,Y.72P+V_T5%?V>%X
XM[\_9W_Y(/T-(/C]&1$I-55=!.D=S=6C=Q+W Q,7.TNW?P+Z_P[ZWP%(^04_W
XM>_1-/$!HYTA$8V=<6U555$M>Y6EF341,5MK)Q[^^O\#"PL?.SL_,TOUB03@[
XM/DM/3$Q.?&A-1D58TK^ZN[R[OK[#UFQ065UR\?A80CP[/#E,5#]%36C,P,3(
XMR>5K^6UY_MS(Q,3%QLC"R7IV]%-+3$M)1T)"2VG2Q\?67DQ)0$A\Q+F[P-'>
XM9T=)14%)Y[[@1N_>_-[C3C]'25GFZ<N\OLK8<'K9RK_'Q,/)R6\_-#=)6$Y.
XM2SL^5%YS[OI75G)<;<R_O<O=X=3.R[_(W=7,V4=$<$]7SNQ*.CW?S&M12D5L
XMV<BWL[]6.SE*Z]3 O-%)2%X^.$_.Q<W/QN1&04MB9UY87?;;V=;4R\/$QF<Z
XM2=?PTK_><F=-4TQ /E[+SM_9TWUDU,;]1V7+S^AW[.!6.SQ+/T'AP\KK^=/?
XM9-W-Q,71P[BZQ,O/33I 23P^5$E!2#\[7=]+0W#-<=JZO</*TE]%3TY\OLEJ
XM;=;+S/3XSLG!O\/H1T99Y&]+0D-YT6+OR?M37DX^-C4]1$EFVLN]P=;+Q=]5
XM?<G2W\?'Y7+1PK_%R\/>65I"/T];3$=,149.3%Y=15#WX^A;VK[*XO+[7E!1
XM2CP_\<N^M+*WP<3!R=/A;%KES.%M7$U&1#XS,#(V3-W;TM!>37!E4FO2QLO)
XMSLFWNKW!R>7]RN)+/ST_153URL;/TE=354%*0#YD;E)BR\W/UOG9V=GI8G%Y
XMULO.U=G0T/!43DE-55=J;M_=Y.MNX=3<VLO-?%=./SY074$V/\S&S;B\W-3+
XM[DY785?:R,;*8$IOUE1&V]Y1Y'1-8&E=6%Y^;G?%OL_@WVY)3NS>6U7=X'O=
XM\VE40E!H7-3'<%+/S6Y=6$E*?N[<VM+.O[C-5TE"/4S.S]G+S=YB34Y-7NCP
XMT,O,Q<G@955#/SX[.4+^V]OG8.S/:V#?X^G/P+V\O,9O9.#6YN]^5U_9UV=.
XM2SX[2DY"4_M[WM#1Y6154D(\>+R_R;^[S%]64U%<X-W8O\CBY%].0#M%04'L
XMU=_$O<K,SF9DW]W2Y=[.?N#65D]3/#MA\^3.W5X^/$1+5TU27E;*N,+ N,/C
XM?=]H1E/\5_O3WEU)6FEYR+Z[R-_+U?UD2T8]/4=-_N)SV]199\G974Y/65_M
XMUN/G2D;9>&K6U-/*U.+/6D1T;DA_S._8PL[1>57F6$A<5UEI35#9Q,/-X&9F
XM8''7;UKNX_3?U-OJ6E;\759[?EA-[^98[E="34P^0G+>S<;3U\"_T^G6P^-W
XMN[O9]EM'1T_]749#4OI*7,//34M4251A9GAH7.O4S\7.UM?;Q;N^R=Y.2$]=
XM5D9'2DI8WMO@YE-'8L_8:.GA7$M6S.CLR'E8<^+B7TYQT<_-YEA?>/7DTL7:
XM7=K/UM'?6TI#25=;7EQ:5DA$4O=E8<K+<>/9XM3/T-I,2LS'V\K QM#-T5[L
XM:T-:ZE504DYK6T=04$$]1TY(3^O6U<N_Q/K?Y77E_<G&W<S#Q,7*WVM7255D
XM3UYV7V[L3$W:;$Y/?69(3%UF3EY@0ES,U^#8T=GC],J[S<W#U]?&Q=]V94-$
XM3DQ%1%A94.3,UMK<7$YEW^)PU\I=4M7,R]ID54Q*6&1.3E[J[F-O9$],3^?0
XM?OC9SLC7V,[;Z-S0S\>\SF+,QMUN4TL[065/255WXG=32D=46%M;1EK2U\K*
XMU=#9W.5T>O??QKS(S,];7'?T>D<]1EAG:7/V:%)/6O5;3VCDU]W8R\YW7<_'
XMUD])44;LO\S-QFU9UMY>]NYF;O=;2TIXUE=9=T]-7M?J6_IT5&!O45_JYM?#
XMNKW#R,O*S=/4Z$U&1TA03D0^1TP_2EI16M'(UM#B6?W5^EOY6D-=R+V^T.+)
XMR-3/V&Q3^<_@W]=N3%-63E)/2D9*7>C:WG9K_5]/7?=;8//TW]+>9>_F>VSD
XMR<C+SW]LWGW5Q.-2659,9GY77&9@8V_W:%M=86C[V];N6UYTZ^]C6V[NY\_-
XMVL_/Y^WD;4]I>5)HYVUI\-K/XE!*145834)%5=;-S<C4S\YK:LO$Y>W#S7?F
XMT_I&6]Q22]_.V]+52C]6;N_V6DQ#1&#>T\7'VG-K7%QZ;UM-45].1TONU.S<
XMT^;1P,#!O[['R]E82DQ1249244E*2$I:?F%.8>C@V_I<:.C/RLG:?M;;R\'&
XMQMI^V.5E;UQ+2EU@3$Y/2$M06FYA55%\W>W?T<_=Z]O/V?+C:%[6QLKEYL[-
XMTN!@4TI)3TH^.C]+34]>75M]=-3 P<&^O[Z^Q,7%RM;YZ&509&-)/T=36DQ'
XM6UQ)3%A455E>9U)4Y-_DU<7#V-3:;6WTU<G-W-/6<55FZF!32$E-2%SEX^39
XMT]WOY]?7[V%876GSU^1O;UYCWMS<VGUWV=SZ]]Q^34Y;6UEJ7T]48N;8[W9T
XM[M/;;%!9YL[+Y6UN?-S2]5SZ^UMI;6+AYE5'0DM:44=@U,[#OK[!PKW$T]=C
XM6%U17%1)24M,3UE75%59<>7:T,[/TMWN]NS^9%-+4EA7>VI335_>W-+6W='$
XMO;_%Q^AMYNY>5EY.14M+45]/3$A'4%UU7UK=V?S:RLW/U>3?SLO3UMK4UNW:
XMW-C877-I1T]W7%)N^$Y#2EEC7V!;3V'7[UUQ?=;+U-O5T=_NYNC=VWI[Y.'E
XM76W:>EQ/46WDT=9>2E%/4/MS]&M?YM_9UM39\-+,[G7O</SJ]EY*14I(251/
XM1U;4SL_&Q\>^OLK/QLWHT^!=8E5*3D]$.3U,2DU72TYUX];-U>;DV\W-U-?1
XMR,S.Q]5Q?^YK6E]=4U-65$U+2TY356GTZ7Q@;=[6W<[+UNGYW]_N^WKM[O+C
XMZ'+NW79O[G#[XNWOY6!LX&Y>7UM,3F)N=VMB<FUN=/?C\W?WW-K;U-?AY][?
XMY77NU_1<2TI[X.Y[6%)78OQF65U867CV6%[.T^33W=[8[_K>[NW6Q<G6S>[\
XMV7MN=%1/4$Q+3$M,55]=7V)\Y]_5SMOY_U[^W_7]7EUR:VWEV=_FW=WX9V7V
XMS<[BYM+29F?:V.5M65576VEF6F!53U586E597V-N_FCSS\W1SLG3YM#)S^MK
XM<7-L=.=[3D1)55536E13<.SEULK,VL_-V=C7?UMM:E%?X/-J:F=N<75K8FMB
XM<&_T:_+/\/WE_&U=7%I38%MFV=Y^Z=#*S=GI_'!\;&[=T]_W]N#:>DU,75Q3
XM4E=.5WQD:&E<6^[5VGOCT>3GX6]?Y=/9V]?3WO;5T.YN5U)P\5M=^/YO[O5?
XM9VY81D9.7?AO8&?NU<[,S\S-WWW_7TY>Z/_CUM7DY^%X_N#F6$=17&3>54[V
XMX?%F95U04>/1V]_F[>1]7^G<W-G\;?+JY^#>]'[W[-G4W>GM7%5?7FM^6$Q-
XM2TYA[_'NY.O\Z]Y]:._=UMC=WNK^:F-G:OGS:5Q/6'M\[-_W_=O8V])]9-#;
XM;^O;U-GFU-7O9DM(4TQ,4TQ.7UY:^]_MZ>]C<MK;XM[S]N#EW]77Z/SD[NGF
XM<'WJ[WAE6UU;9N_[[/=B7/;:X?U\_6[M\7)J:_/U\_YM7V/R:EM::=]Z5VKP
XMZ]+2X]W.R]EQ7E]<6V5F96]I7EU16FYA>.OMW-#::'3=U]/2V7IA:V963E96
XM7?3Z?/G=Y/O?YGS@V-O4UO5O^WY[;6EH7UU65E).5W!I9^W[;?#2T^?9U=K;
XM[/UL:^O>X>IT_>;N;U]<76!>6EE9_O5?:VIJZ>;GX.EG8^KU>O9S:FSIV^'E
XM\O37SMQT?.GIYNAY;W)S6F#J:E=NYFQP_FQU^VMM74U;>&%A97?RZ-CBV]+;
XMW.'?W5U4\MWDZ/1L86ES_7MM<&%L[6!46%]B;^+<U]GB[._DXOES<W-M;O%T
XM8&_IZ^?=_%9=ZU]>YMW6X%]87&[KX^MZ\>MV:&QL:G7KY.WHVMU^;7UL8V)=
XM7%I,3OEM7FIVX]/,S-39V./BXN_O[_'^[>IM;75K<'1X>V9?75%.5E9/56WG
XMZ]_;V\_9[>1_>^YO7UY@6UY]Z^WTW]C@W-[XV]'4T=OL]&!O[UA/7&5U>&!6
XM35[=<UQ\X^ML<W-K_>C;W?]K:GKK=G+V]G9A8O#D>W'M=67HW^#L8WG?VNMC
XM:&5M=7/K95QN;N[E[^WQY=[9S=;@W?)_Y^EY9E]<6%553TY34U!465MLZN[K
XMW]_CX-?8VMO<U]C;U]ODXMS>Z_EW;6-:6%E<65A@75E?[?-J=7UX=&QE]N=X
XM<N_?VN=S__MJ:N_U;_KMY.?=W?1V]^'N^.3T=?-[_'[\XOAN=&=@9'!B6UY8
XM6%Q?_NK?Y6]WY_EG</STZMS<Y=O/UNC:UMC@95I>8V%E9&)>7F5C;OEQ:61R
XM_^W?>F]R9''IX?)^:UUE9G[N>W%O\.;HXN+>V^Q_W,W,V.?=YO3S=GIQ75I=
XM6E135E=56U]>8VII8EQ=;.KEZ=G7U=7BV='6ZGGP]>;=['[KY6ID^?US]'QA
XM96-I;77V:O9P4U)36VEJ:VY\>WWI?G'W<VGUW=WO[=;8YM[;Y/AY<^[J\]K>
XM^NCI\7ET?EY@<V5>6UI85E-996AO[^#;V^WTX>#H[OMN=^SI;WS1U&MC[>MY
XM?/!Y;O9V;')[]_!W;FUE:'!M:_7[9'SS9F-H:_/U>/OFV]OS=>KQ]N3E[_[O
XMY^?W;5Y<8&%S[?YL_.OL^GGX\.7BY.9\9&%B8&IN8&9W\^/;Y7EO9&9M^WUO
XM^O;Z;55/5VGU_'Q\[.#;W.ONZ^S:WNSAY-K:W]G9ZGU^8EI@:5M.3U5:^NGM
XM[/+]:6)D7%]<77?CV-[Z[^#?W.?Y_FG]X.C^_.=\:69E]NOCX^WZ9V!XY^;F
XM[WMP8FUZ_&UI>V]J=VUQ[^_]<'AM<NOCW-O?WO-I95A.355F=N?<U,[5X_)E
XM8F9_U]/>ZFE98FEK=71E;75OZ=_B]65@7V!G=.3CY=G:W-[O75=@6$]7[][<
XMWWUL<FED?>OU=W5_;%Y;8/+>X>K<T]O]8EM=7VGH['%[_GM^[]#$Q\[:ZWQ:
XM3VOC?%I77%M97&!L9V=Q8516:6]D_=S6T-38WN+O9V9SYMOAXG)85%!9;N#1
XMU-?5VOQ?;&-05%U>6%UT].K<W._XZ?)W\.3DY.OL[NKQ^>SFW=SG?G5Q6U%>
XM;6ML:%]>75E<76%L:&-I;WSMY-#*RLG,S]OP\GML7UEK\G-H7%5566%>6GGL
XM<VA=77/[?7SW].[N[M_<U,S3X_YK>/+H\6UL>')E9&=J_?5]\^5Y6%UQ:F5I
XM;7UN75]>77-L8>G/R\O.U-[CWMO@ZW!=7FIN<WA;3E->5U9JX=C=V][Z8EU<
XM7?SCWM_P=.K7YUA,5F=74FS2RM#9VN9H5E=>7&)[_/IT]=7)Q<G2X7A=7%U5
XM3TQ*2D_]RL'$S^Y=6&!C\]78YV!,24M-4V#OW-K>\^S6V?ID9W1K:&G\VM'/
XMS]ON<EM65E9=^-[C[-C.TMS>YV9.1D$_1$I/8MW*Q,3%R=/N8EAB>/'AU\S-
XMY7I]74U(3%5<9_S=V.+LYW!76WKJX.AQ9EU24F?SX]C3TMSCVN1H7%=?[-[<
XMV-WO;UY766GO]>C>Z._[?7W_?/IM6%=A[]W?[7):4$U,6>K2R\S1V?!G6E5H
XM\G=S;_KFW]K8U]O=Z?;S_VQ<44A&2$I4;N?4RL2^O;_*WUQ+2DM+4%MD7%!-
XM3E1BZ=/+Q\?+U=OX7EI634I.4UEA8E]H?.+1S,K(SMWO?_WGX.'D[W]D5$M.
XM6V'MTL[8X>EK65QH_WML<F5=651.2T]<[=C5S<?(SM?8V^ID5U1/5&OKY]_5
XMUM_L>7-L7EM?74]*355G_F_WX=[BU\W*RM'8[F1:6EUL\.GQ<&UO<G-N9UUC
XM:FMP?.[_>OUT<F5VY./K>FAA;/I]?>/:WN+GWM?:W^SZ>V-;55-<8V9L>_QA
XM6%UL[]_7U];:['AK965M=FMI?N39V-G<Y/EI8V)E75ID<&-<9V]Q^.OF[N[L
XH].[X<6MI>?#EZ_?GX>7W:FEG9FMV_?+IZ.?DY/;O]?;N[GEB7U]P=>OF
X 
Xend
END_OF_FILE
  if test 13537 -ne `wc -c <'sounds/shoot.au.uue'`; then
    echo shar: \"'sounds/shoot.au.uue'\" unpacked with wrong size!
  fi
  # end of 'sounds/shoot.au.uue'
fi
if test -f 'stage.c' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'stage.c'\"
else
  echo shar: Extracting \"'stage.c'\" \(13726 characters\)
  sed "s/^X//" >'stage.c' <<'END_OF_FILE'
X#include "copyright.h"
X
X/*
X *  Include file dependencies:
X */
X
X#include <stdio.h>
X#include <stdlib.h>
X#include <stddef.h>
X#include <X11/Xlib.h>
X#include <X11/Xutil.h>
X#include <X11/Xos.h>
X#include <xpm.h>
X
X#include "bitmaps/mainbackground.xpm"
X#include "bitmaps/background.xpm"
X#include "bitmaps/background2.xpm"
X#include "bitmaps/background3.xpm"
X#include "bitmaps/background4.xpm"
X#include "bitmaps/background5.xpm"
X#include "bitmaps/background6.xpm"
X#include "bitmaps/background7.xpm"
X#include "bitmaps/background8.xpm"
X#include "bitmaps/background9.xpm"
X#include "bitmaps/background10.xpm"
X#include "bitmaps/background11.xpm"
X#include "bitmaps/icon.xpm"
X
X#include "error.h"
X#include "blocks.h"
X#include "sfx.h"
X#include "ball.h"
X#include "paddle.h"
X#include "version.h"
X#include "init.h"
X
X#include "stage.h"
X
X/*
X *  Internal macro definitions:
X */
X
X#define LEFT_OFFSET	    10
X#define RIGHT_OFFSET    10
X#define TOP_OFFSET      10
X#define MIDDLE_OFFSET   10
X
X/*
X *  Internal type declarations:
X */
X
X#if NeedFunctionPrototypes
Xstatic Window SetWMIcon(Display *display);
X#else
Xstatic Window SetWMIcon();
X#endif
X
X/*
X *  Internal variable declarations:
X */
X
XWindow iconWindow;
XWindow mainWindow;
XWindow scoreWindow;
XWindow levelWindow;
XWindow playWindow;
XWindow messWindow;
XWindow specialWindow;
XWindow timeWindow;
XPixmap	mainBackPixmap, iconPixmap;
XPixmap  back1Pixmap, back2Pixmap, back3Pixmap, back4Pixmap, back5Pixmap;
XPixmap  back6Pixmap, back7Pixmap, back8Pixmap, back9Pixmap, back10Pixmap;
XPixmap  back11Pixmap;
X
X#if NeedFunctionPrototypes
Xvoid InitialiseMainBackPixmap(Display *display, Window window, 
X	Colormap colormap)
X#else
Xvoid InitialiseMainBackPixmap(display, window, colormap)
X	Display *display;
X	Window window;
X	Colormap colormap;
X#endif
X{
X	XpmAttributes   attributes;
X	int		    XpmErrorStatus;
X
X	attributes.valuemask = XpmColormap;
X	attributes.colormap = colormap;
X
X    /* Create the playfield background pixmaps */
X
X	XpmErrorStatus = XpmCreatePixmapFromData(display, window, 
X		mainbackground_xpm, &mainBackPixmap, NULL, &attributes);
X	HandleXPMError(display, XpmErrorStatus, "InitialiseMainBackPixmap()");
X
X	XpmErrorStatus = XpmCreatePixmapFromData(display, window, background_xpm,
X		&back1Pixmap, NULL, &attributes);
X	HandleXPMError(display, XpmErrorStatus, "InitialiseMainBackPixmap()");
X
X	XpmErrorStatus = XpmCreatePixmapFromData(display, window, background2_xpm,
X		&back2Pixmap, NULL, &attributes);
X	HandleXPMError(display, XpmErrorStatus, "InitialiseMainBackPixmap()");
X
X	XpmErrorStatus = XpmCreatePixmapFromData(display, window, background3_xpm,
X		&back3Pixmap, NULL, &attributes);
X	HandleXPMError(display, XpmErrorStatus, "InitialiseMainBackPixmap()");
X
X	XpmErrorStatus = XpmCreatePixmapFromData(display, window, background4_xpm,
X		&back4Pixmap, NULL, &attributes);
X	HandleXPMError(display, XpmErrorStatus, "InitialiseMainBackPixmap()");
X
X	XpmErrorStatus = XpmCreatePixmapFromData(display, window, background5_xpm,
X		&back5Pixmap, NULL, &attributes);
X	HandleXPMError(display, XpmErrorStatus, "InitialiseMainBackPixmap()");
X
X	XpmErrorStatus = XpmCreatePixmapFromData(display, window, background6_xpm,
X		&back6Pixmap, NULL, &attributes);
X	HandleXPMError(display, XpmErrorStatus, "InitialiseMainBackPixmap()");
X
X	XpmErrorStatus = XpmCreatePixmapFromData(display, window, background7_xpm,
X		&back7Pixmap, NULL, &attributes);
X	HandleXPMError(display, XpmErrorStatus, "InitialiseMainBackPixmap()");
X
X	XpmErrorStatus = XpmCreatePixmapFromData(display, window, background8_xpm,
X		&back8Pixmap, NULL, &attributes);
X	HandleXPMError(display, XpmErrorStatus, "InitialiseMainBackPixmap()");
X
X	XpmErrorStatus = XpmCreatePixmapFromData(display, window, background9_xpm,
X		&back9Pixmap, NULL, &attributes);
X	HandleXPMError(display, XpmErrorStatus, "InitialiseMainBackPixmap()");
X
X	XpmErrorStatus = XpmCreatePixmapFromData(display, window, background10_xpm,
X		&back10Pixmap, NULL, &attributes);
X	HandleXPMError(display, XpmErrorStatus, "InitialiseMainBackPixmap()");
X
X	XpmErrorStatus = XpmCreatePixmapFromData(display, window, background11_xpm,
X		&back11Pixmap, NULL, &attributes);
X	HandleXPMError(display, XpmErrorStatus, "InitialiseMainBackPixmap()");
X
X	/* Free the xpm pixmap attributes */
X	XpmFreeAttributes(&attributes);
X}
X
X#if NeedFunctionPrototypes
Xvoid ClearMainWindow(Display *display, Window window)
X#else
Xvoid ClearMainWindow(display, window)
X	Display *display;
X	Window window;
X#endif
X{
X	/* Make sure that it is drawn */
X	XClearWindow(display, mainWindow);
X}
X
X#if NeedFunctionPrototypes
Xvoid CreateAllWindows(Display *display, Colormap colormap,
X	char **argv, int argc)
X#else
Xvoid CreateAllWindows(display, colormap, argv, argc)
X	Display *display;
X	Colormap colormap;
X	char **argv;
X	int argc;
X#endif
X{
X    char 			title[80];
X	int 			offsetX, offsetY, scoreWidth;
X	XWMHints 		wmhints;
X	XClassHint 		classhints;
X	XSizeHints 		sizehints;
X	XTextProperty 	windowName, iconName;
X	XSetWindowAttributes winattr;
X	unsigned long 	valuemask;
X
X	char *window_Name 	= "- XBoing -";
X	char *icon_Name 	= "XBoing";
X
X	offsetX = MAIN_WIDTH / 2;
X	offsetY = MAIN_HEIGHT / 2;
X	scoreWidth = 224;
X
X	/* Create the main window */
X    mainWindow = XCreateSimpleWindow(display,
X		RootWindow(display, DefaultScreen(display)), 0, 0,
X		PLAY_WIDTH + MAIN_WIDTH + 10, PLAY_HEIGHT + MAIN_HEIGHT + 10, 2, 
X		red, black);
X
X	/* Create the score window */
X    scoreWindow = XCreateSimpleWindow(display, mainWindow, 
X		offsetX, 10, scoreWidth, 42, 0, white, black);
X
X	/* Create the level window */
X    levelWindow = XCreateSimpleWindow(display, mainWindow, 
X		scoreWidth + offsetX + 25, 5, 
X			PLAY_WIDTH + offsetX - 20 - scoreWidth, 52, 0, white, black);
X
X	/* Create the playing area window */
X    playWindow = XCreateSimpleWindow(display, mainWindow, 
X		offsetX, 60, PLAY_WIDTH, PLAY_HEIGHT, 5, red, black);
X
X	/* Create the message area window */
X    messWindow = XCreateSimpleWindow(display, mainWindow, 
X		offsetX, 65 + PLAY_HEIGHT + 10, PLAY_WIDTH / 2, MESS_HEIGHT, 4, 
X		white, black);
X
X	/* Create the special bonus area window */
X    specialWindow = XCreateSimpleWindow(display, mainWindow, 
X		offsetX + PLAY_WIDTH / 2 + 10, 65 + PLAY_HEIGHT + 10, 
X		180, MESS_HEIGHT + 5, 0, white, black);
X
X	/* Create the timer area window */
X    timeWindow = XCreateSimpleWindow(display, mainWindow, 
X		offsetX + PLAY_WIDTH / 2 + 10 + 180 + 5, 
X		65 + PLAY_HEIGHT + 10, PLAY_WIDTH / 8, MESS_HEIGHT + 5, 
X		0, white, black);
X
X    /* Set window manager properties */
X	sprintf(title, "XBoing V%d.%d", VERSION, REVNUM + buildNum);
X
X	if (XStringListToTextProperty(&window_Name, 1, &windowName) == 0)
X		ShutDown(display, 1, "Cannot create window name resource.");
X
X	if (XStringListToTextProperty(&icon_Name, 1, &iconName) == 0) 
X		ShutDown(display, 1, "Cannot create icon name resource.");
X
X	iconWindow = SetWMIcon(display);
X
X	/* Various window manager settings */
X    wmhints.initial_state 	= NormalState;
X	wmhints.input 			= True;
X	wmhints.icon_pixmap 	= iconPixmap;
X	wmhints.icon_window 	= iconWindow;
X	wmhints.flags = StateHint | InputHint | IconPixmapHint | IconWindowHint;
X
X	/* Set the class for XBoing */
X	classhints.res_name		= "XBoing";
X	classhints.res_class 	= "XBoing";
X
X	/* Setup the max and minimum size that the window will be */
X	sizehints.flags 		= PPosition | PSize | PMinSize | PMaxSize;
X	sizehints.min_width 	= PLAY_WIDTH + MAIN_WIDTH + 10;
X	sizehints.min_height	= PLAY_HEIGHT + MAIN_HEIGHT + 10;
X	sizehints.max_width 	= PLAY_WIDTH + MAIN_WIDTH + 10;
X	sizehints.max_height	= PLAY_HEIGHT + MAIN_HEIGHT + 10;
X
X	/* Now set the window manager properties */
X	XSetWMProperties(display, mainWindow, &windowName, &iconName,
X		argv, argc, &sizehints, &wmhints, &classhints);
X
X	/* Set the current icon as the window's background pixmap */
X	XSetWindowBackgroundPixmap(display, iconWindow, iconPixmap);
X	XClearWindow(display, iconWindow);
X
X	valuemask = CWColormap;
X	winattr.colormap = colormap;
X
X	/* Check if the server allows backing store */
X    if (DoesBackingStore(XDefaultScreenOfDisplay(display)) == Always)
X	{
X		/* Ok we want backing store as it is very useful */
X		valuemask |= CWBackingStore;
X		winattr.backing_store = Always;
X	}
X
X	XChangeWindowAttributes(display, mainWindow, valuemask, &winattr);
X	XChangeWindowAttributes(display, playWindow, valuemask, &winattr);
X	XChangeWindowAttributes(display, levelWindow, valuemask, &winattr);
X	XChangeWindowAttributes(display, scoreWindow, valuemask, &winattr);
X	XChangeWindowAttributes(display, messWindow, valuemask, &winattr);
X	XChangeWindowAttributes(display, specialWindow, valuemask, &winattr);
X	XChangeWindowAttributes(display, timeWindow, valuemask, &winattr);
X}
X
X#if NeedFunctionPrototypes
Xvoid SetBackgrounds(Display *display, Colormap colormap)
X#else
Xvoid SetBackgrounds(display, colormap)
X	Display *display;
X	Colormap colormap;
X#endif
X{
X	InitialiseMainBackPixmap(display, mainWindow, colormap);
X
X	ClearMainWindow(display, mainWindow);
X	XSetWindowBackgroundPixmap(display, levelWindow, ParentRelative);
X	XClearWindow(display, levelWindow);
X	XSetWindowBackgroundPixmap(display, scoreWindow, ParentRelative);
X	XClearWindow(display, scoreWindow);
X	XSetWindowBackgroundPixmap(display, specialWindow, ParentRelative);
X	XClearWindow(display, specialWindow);
X	XSetWindowBackgroundPixmap(display, timeWindow, ParentRelative);
X	XClearWindow(display, timeWindow);
X}
X
X#if NeedFunctionPrototypes
Xvoid MapAllWindows(Display *display)
X#else
Xvoid MapAllWindows(display)
X	Display *display;
X#endif
X{
X	/* Actually make everything visible */
X  	XMapWindow(display, specialWindow);
X  	XMapWindow(display, timeWindow);
X  	XMapWindow(display, messWindow);
X	XMapWindow(display, playWindow);
X	XMapWindow(display, levelWindow);
X	XMapWindow(display, scoreWindow);
X	XMapWindow(display, mainWindow);
X	XFlush(display);
X}
X
X#if NeedFunctionPrototypes
Xvoid RedrawPlayWindow(Display *display, Window window)
X#else
Xvoid RedrawPlayWindow(display, window)
X	Display *display;
X	Window window;
X#endif
X{
X	/* Redraw the main playfield */
X	XClearWindow(display, playWindow);
X	RedrawAllBlocks(display, window);
X	RedrawPaddle(display, window);
X	RedrawBall(display, window);
X}
X
X#if NeedFunctionPrototypes
Xvoid FreeBackgroundPixmaps(Display *display)
X#else
Xvoid FreeBackgroundPixmaps(display)
X	Display *display;
X#endif
X{
X	/* Free all the backgound pixmaps */
X    if (back1Pixmap)	XFreePixmap(display, back1Pixmap); 
X	if (back2Pixmap)	XFreePixmap(display, back2Pixmap);
X	if (back3Pixmap)	XFreePixmap(display, back3Pixmap); 
X	if (back4Pixmap)	XFreePixmap(display, back4Pixmap);
X	if (back5Pixmap)	XFreePixmap(display, back5Pixmap); 
X	if (back6Pixmap)	XFreePixmap(display, back6Pixmap); 
X	if (back7Pixmap)	XFreePixmap(display, back7Pixmap); 
X	if (back8Pixmap)	XFreePixmap(display, back8Pixmap); 
X	if (back9Pixmap)	XFreePixmap(display, back9Pixmap); 
X	if (back10Pixmap)	XFreePixmap(display, back10Pixmap); 
X	if (back11Pixmap)	XFreePixmap(display, back11Pixmap); 
X
X	/* Free the icon and main background pixmaps */
X	if (iconPixmap)		XFreePixmap(display, iconPixmap);
X    if (mainBackPixmap)	XFreePixmap(display, mainBackPixmap); 
X}
X
X#if NeedFunctionPrototypes
Xstatic Window SetWMIcon(Display *display)
X#else
Xstatic Window SetWMIcon(display)
X	Display *display;
X#endif
X{
X    XpmAttributes   attributes;
X	Window	   		win, root;
X	Colormap		iconcolormap;
X	int		    	XpmErrorStatus;
X							
X	/* Suss out the root window */
X	root = RootWindow(display, DefaultScreen(display));
X
X	if (!(win = XCreateSimpleWindow(display, root,
X		0, 0, 50, 50, 0, CopyFromParent, CopyFromParent)))
X	{
X		/* Well, what a bummer. Just use default icon then. */
X		ErrorMessage("Cannot create icon pixmap.");
X		return ((Window) NULL);
X	}
X
X	/* Create a new colourmap for the icon window */
X	iconcolormap = XDefaultColormap(display, XDefaultScreen(display));
X
X	/* Create all xpm pixmap blocks from the files */
X	attributes.colormap = iconcolormap;
X	attributes.valuemask = XpmColormap;
X	XpmErrorStatus = XpmCreatePixmapFromData(display, win, 
X		icon_xpm, &iconPixmap, NULL, &attributes);
X	HandleXPMError(display, XpmErrorStatus, "InitialiseWMIcon()");
X
X	/* Make the new window have the new colourmap */
X	XSetWindowColormap(display, win, iconcolormap);
X
X	/* Free the background pixmap attributes */
X	XpmFreeAttributes(&attributes);
X
X	return win;
X}
X
X#if NeedFunctionPrototypes
Xvoid DrawStageBackground(Display *display, Window window, int stageType)
X#else
Xvoid DrawStageBackground(display, window, stageType)
X	Display *display;
X	Window window;
X	int stageType;
X#endif
X{
X	switch (stageType)
X	{
X		case BACKGROUND_0:
X			XSetWindowBackgroundPixmap(display, window, mainBackPixmap);
X			break;
X
X		case BACKGROUND_1:
X			XSetWindowBackgroundPixmap(display, window, back1Pixmap);
X			break;
X
X		case BACKGROUND_2:
X			XSetWindowBackgroundPixmap(display, window, back2Pixmap);
X			break;
X
X		case BACKGROUND_3:
X			XSetWindowBackgroundPixmap(display, window, back3Pixmap);
X			break;
X																						case BACKGROUND_4:
X			XSetWindowBackgroundPixmap(display, window, back4Pixmap);
X			break;
X
X		case BACKGROUND_5:
X			XSetWindowBackgroundPixmap(display, window, back5Pixmap);
X			break;
X
X		case BACKGROUND_6:
X			XSetWindowBackgroundPixmap(display, window, back6Pixmap);
X			break;
X
X		case BACKGROUND_7:
X			XSetWindowBackgroundPixmap(display, window, back7Pixmap);
X			break;
X
X		case BACKGROUND_8:
X			XSetWindowBackgroundPixmap(display, window, back8Pixmap);
X			break;
X
X		case BACKGROUND_9:
X			XSetWindowBackgroundPixmap(display, window, back9Pixmap);
X			break;
X
X		case BACKGROUND_10:
X			XSetWindowBackgroundPixmap(display, window, back10Pixmap);
X			break;
X
X		case BACKGROUND_11:
X			XSetWindowBackgroundPixmap(display, window, back11Pixmap);
X			break;
X
X		default:
X			XSetWindowBackgroundPixmap(display, window, back1Pixmap);
X	}
X
X	/* Flush the new background */
X	XClearWindow(display, window);
X}
END_OF_FILE
  if test 13726 -ne `wc -c <'stage.c'`; then
    echo shar: \"'stage.c'\" unpacked with wrong size!
  fi
  # end of 'stage.c'
fi
echo shar: End of archive 16 \(of 26\).
cp /dev/null ark16isdone
MISSING=""
for I in 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 ; do
    if test ! -f ark${I}isdone ; then
	MISSING="${MISSING} ${I}"
    fi
done
if test "${MISSING}" = "" ; then
    echo You have unpacked all 26 archives.
    rm -f ark[1-9]isdone ark[1-9][0-9]isdone
    echo "merging split files..."
    cat blocks.c[12] > blocks.c
    rm blocks.c[12]
    echo "blocks.c done"
    cat bitmaps/earth.xpm.Z.u.[ab] > bitmaps/earth.xpm.Z.uue
    rm bitmaps/earth.xpm.Z.u.[ab]
    echo "bitmaps/earth.xpm.Z.uue done"
else
    echo You still must unpack the following archives:
    echo "        " ${MISSING}
fi
exit 0
exit 0 # Just in case...
-- 
  // chris@Sterling.COM           | Send comp.sources.x submissions to:
\X/  Amiga - The only way to fly! |    sources-x@sterling.com
 "It's intuitively obvious to the |
  most casual observer..."        | GCS d+/-- p+ c++ l+ m+ s++/+ g+ w+ t+ r+ x+
