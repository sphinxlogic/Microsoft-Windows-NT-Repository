Newsgroups: comp.sources.x
From: jck@kimba.catt.citri.edu.au (Justin Kibell)
Subject: v20i122:  xboing - a simple blockout type game, Part15/26
Message-ID: <1993Sep3.123408.7915@sparky.sterling.com>
X-Md4-Signature: 201c1518f2e3a8cbf3ee651a3afed203
Sender: chris@sparky.sterling.com (Chris Olson)
Organization: Sterling Software
Date: Fri, 3 Sep 1993 12:34:08 GMT
Approved: chris@sterling.com

Submitted-by: jck@kimba.catt.citri.edu.au (Justin Kibell)
Posting-number: Volume 20, Issue 122
Archive-name: xboing/part15
Environment: X11, xpm, color

#! /bin/sh
# This is a shell archive.  Remove anything before this line, then feed it
# into a shell via "sh file" or similar.  To overwrite existing files,
# type "sh file -c".
# Contents:  bitmaps/background7.xpm bitmaps/highscores.xpm intro.c
#   special.c
# Wrapped by chris@sparky on Fri Sep  3 07:14:47 1993
PATH=/bin:/usr/bin:/usr/ucb:/usr/local/bin:/usr/lbin ; export PATH
echo If this archive is complete, you will see the following message:
echo '          "shar: End of archive 15 (of 26)."'
if test -f 'bitmaps/background7.xpm' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'bitmaps/background7.xpm'\"
else
  echo shar: Extracting \"'bitmaps/background7.xpm'\" \(17072 characters\)
  sed "s/^X//" >'bitmaps/background7.xpm' <<'END_OF_FILE'
X/* XPM */
Xstatic char *background7_xpm[] = {
X/* width height ncolors chars_per_pixel */
X"128 128 3 1",
X/* colors */
X"` c #C0C0C0",
X"a c #808080",
X"b c #FFFFFF",
X/* pixels */
X"b`abb`ab`ab`ab`aa`abb`a`ba``bbbbbba`bbaa`b`ba```ba`````bab`a`b`ab`aa``baaab`ab```````ba`ba``ba`a``bbbbb```ba``baaa`b`a`ba``b`aa`",
X"`a`baab`b`ba`ba```b`ab`b`a``baaaaaab`ba`b`aba``b`a``bbbbb`a``ba``a``bb`ab`ba`ba```b`bba`ba`b`a```bbaaaab`b`a`b`bb``ba```bbbbb``b",
X"a``bab`a`bba`ba```ba``b`a```ba`````baba`ba`ba```b``b`aaaab```ba``bbb`aab`b`bb`bb`b`b`aa`babba`bbb`ba``b`aba``ba`abb`b````abaabb`",
X"``b`aba`b`babbb```ba``ba```b`bb```bbb`a`ba``bb``ba`ba````bb``ba``baaa`b`b`a`ab`abba`a```bb`aa`baaaba`b`a`ba`b`a``baaba````babbaa",
X"`b`a`ba`bbba`aab`b`a``bbbbb`a`abbbbaaa`b`a```ba`ba`ba````bab`ba``ba``b`aba``b`ab`ab````b`aa```ba``ba`ba```bb`a```ba`ba`````b`ab`",
X"b`a```bb`aba``bbbba``b`babaa```babab```ba```b`a`ba`babbbb`a`bba``babb`a`ba``ba`ba``bbbb`b```bb`a``ba`ba````bb````ba``b``````ab`a",
X"ba`````ba`ba```aaaa`b`abb`a```b`a`b`bbbbbbbbba``babbabaaabbb`aa``bb`aa``bb``bbb`a``baaba`bbb`aa```ba`ba```b`abb`b`a`b`bbbbbbb`a`",
X"ba````bbab`b``b````b`ab`ab````ba``ba`abaaaaabbb`bb`aaba```aba````babbb``babb`aab````b`ba`baba`bb``ba`babbbba``ab`a`b`b`aaaaaab``",
X"`a`bbb`aababa``abbb`abba``b```ba``ba`b`a```b`bba`aabb`a`bb``bb``b`a`aabb`a`aa`b`a``b`abab`abab`abbba`bb`aaaa`bbba``bbba````bbbab",
X"a`b`aaa``baba```baaab`aa``bbbb`a``ba`ba``bb`b`aa`bb`aa`b`ab``abb`a````baab````ba`bb`a`baba`bb`a``aaab`ba````b`aba`bbaaa```b`aab`",
X"`b`a```bbbb`a``b`a``ba````baaaa```bab`a``baaba```baa```ba`ba`b`ab````b`a`bbbbb`ab`aa``bb`a`bba`````b`aba````bab`bb`ba```bbba```a",
X"`ba``bb`baaa``b`a```ba``bbba`````b`aba``b`a`ba```ba````ba`bb`ba`ba```ba`b`aabba`ba`````aa`b`ba``bbb`ab`a`bbb`b`b`aaba``b`bab````",
X"`ba``babba``bb`a````ba``baabbbbbb`a``bbbbb```b``b`a```b`a`bab`a`ba```ba`ba`b`abbba``bbb``b`bba``baaab`a``baab`b`a```b`b`b`aba```",
X"bba``bb`aa``baa`````ba``ba``ababaa````abaab``bab`a`bbbba`bba`a``ba``b`a`bbb`a`baaabb`abbb`b`ba``ba``ba```ba``b`a```bbababa``b`b`",
X"`aa``bab````ba``bbbbba``ba``b`aba```````b``bbbaba`b`aaabbbaa```b`a``ba``baaa```a`b`aab`ababa`a`b`a``ba`bb`a``ba`bbb`aabbba``bb`b",
X"a```b`a`b```ba`b`aaaaa``ba`bba``b```````ba`baaabab`a``b`baa``bb`a`bb`a`b`b````b`b`a``ba`bb`a``b`a```ba`baa``b`bb`aaa```aaa`b`ba`",
X"`bbb`a```b``bab`a``````b`ab`aa``ba``bbbb`a``a``bbba``b`aba```baa`b`aa``ba`bbbb`b`a```ba``bbbbb`a````ba`ba``b`a`aa`````b`bbb`aba`",
X"b`aba````ba``b`a``````b`ab`a```b`a`b`aaaa``b```baaa`b`ab`a``b`a`bba``bb`a``abab`a````ba``baaaaabbbbb`a`ba```b```bb```b`b`aaa`bab",
X"aab`b````ba``bbbbbbbbb`a``bb``b`a`b`a`````b`bbbba```ba`ba``b`a`b`bbbb`aa```b`a`b`bb``babbba```b`aaaaa``ba``b`a`b`abbb`a`a````bab",
X"bb`a`bb`bba``baaabaabaa````ab`ba``ba`````b`a`aabb`bb`ab`a`b`a`b`abaaabb````ba```b`ab``bbaab````b```````bbbbba``ba``aaa`bbbb``ba`",
X"`aa``bab`aa``ba``ba``b`````b`aba`bba```bb`a```b`ab`aab`a``ba``ba``b`b`abb``ba```bbb`a``ba`bb```ba`bbbbbbaaaaa``ba`````b`aaabb`a`",
X"````bba`a```b`a`b`a`b`a`````b``bb`aa`bb`aabb``ba`ba``ba``b`a``ba``bb`a``abbba```baaa```ba``abbb`a`baaabaa`````b`a````b`a```baa``",
X"bb`b`ba````b`a`b`a``ba``````ba``aa```baa`b`abb`a`ba`b`a`b`a```ba``bba`````aaa```ba`````ba``b`aaa`b`a`b`abb```b`a`bbbbba```bba``b",
X"aab`a`b``bb`a``ba``b`a`````b`a``bbbbb`a`b`a`babbb`ab`a``ba````babb`ab`````````bb`a````b`a```a````ba```bb`babb`a`b`aaaaa`bb`ab``b",
X"a``a`b`a`baa```babb`a`````b`a``b`aaaabbbba`b`a`bab`ba```ba`````b`aab`abbb`bbbbbaa````b`a``bb````b`a````ab`abaa``ba``````baa`ba`b",
X"a```bba``ba````ba`ba````bb`a``b`a```b`aaaa`ba```b`a`b``b`a`````bbbb`a`baab`abaab``````b```babbbb`bbbbbb`ba``b````b```bbbbabb`a`b",
X"a`bb`aa``ba````bab`a``bb`aa```ba````ba````b`a````a``ba`ba`bbb`b`aaaa`b`a``a``bb`a`bb``ba``ba`aaabbaaaaab`a``ba``b`abb`abab`aa`b`",
X"`b`aa````ba```b`ababbb`ba````b`a`b``ba````ba`bbbb```bab`ab`aabba`b``b`a``bb`b`aa`b`abbba``ba````baa`````a``b`a`bba`baab`a`a`bb`a",
X"``b``bbbb`bbbb`a`bb`aaaba`bbb`a`b`bbba``bb`bb`aaabbb`aba`ba`b`abb`bb`a``b`ab`b```ba``aaa``ba```b`a```````bb`a`b`aa`ba`ba``bb`aa`",
X"``ba`baaab`aaaa``baa``b`bbbaab`b`a`aabbbbab`aa``bbaaa`bab`a`ba``aa`abb`bba`bb`a``ba``````b`a````b```bbbbb`ab``ba```ba``b``baa```",
X"`b`a`ba`b`a`````bba``b`a`aba`ba`b````babaabbb``b`ba```bbba``bbb````b`ab`aa`baab`bba``bbbb`a````b`a``baaaaab`b``b``b`a```bbba````",
X"b`a`b`bb`a`bbbbb`ab``ba```ba``b``bbbb`abab`aabb`aba``bbaaa``baab```ba``a```bab`b`abbbbbaaa``bbb`a```ba`````b`a`bab`a````baab``bb",
X"aa`b`b`aa``baaaaab`ab`a```ba`b`b``aaaa`baba``babb`a``bba````bbb`abb`a`````b`b`a`a`bbaaab```b`aaa`bbb`a``````a`b`a`b`````ba`bab`a",
X"``b`a`b```b`b````ba``bbbbbbab`b`b```````b`a``ba`aa```babbbbb`aaab`aa````bb`a`b```bbaa``ba``ba``bb`aabb````bbb`ba``ba`b`bba`baba`",
X"`b`a``babb`b`b`bb`a``baaaaaabb`a`b`````bba```ba`````b`a`babaa```ba````bb`aa`b`bbb`ba``b`a```bbb`aa`b`ab``b`aabba``bab`b`aa`ba`b`",
X"`ba````b`ab`abb`aa``bba````b`ba``ba```b`ab``bba``bbb`a`b`aba````ba```b`aa```ba`bab`a`b`a`````aaa```ba`ba`ba``babbb`bba`a```ba`ba",
X"`ba```bbb`ba`bab``bb`ba````bb`a`b`a``b`a``bb`aabb`aba``ba`ba```b`a``b`a`````ba`ba`b`b`a``````bb````ba`ba`ba`b`a`baabba``bbbbbb`a",
X"b`a``b`aab`ab`a`bb`aa`bbbbbbaa``ba```ba````aa``baab`bbb`a`ba``bba```ba``````ba`bab`aba``````b`abb`b`a`bbb`ab`a``ba``bbbb`abaaaa`",
X"`abbbba```a`babb`aa``b`abaaabbbb`a```ba```````b`ab`abaaabb`abb`aa```ba```b`b`a`baba`ba```bbbba``abba``baaa`ba```ba``baaaabba`bbb",
X"bb`aaaa````b`b`ab````ba`ba```aaaabbbbba``bbb``bbb`a`babb`aab`abbbbbbba`bb`b`a`b`aba`babbb`aaaa``b`ba``ba```babb`ba`b`a``b`aa`baa",
X"`aa`bb`bbbbbb`a`ba```ba``b``````b`aaaaa`b`ababbaaa``bb`aa``bab`aaabaabb`aa`a``ba``b``b`aaa`````b`a`bb``bbbb`b`abba`ba```ba```bab",
X"a``b`ab`abaaabbb`a``b`a``ba`````ba`````b`ab`a`ba````baa``bbbb`a```ba``bbb````b`a``ba``a```````b`a```ba`babab`a``aa`ba``b`a``b`ab",
X"a`b`a``ab`abb`aaa```ba``b`a`````ba`````ba`ba```bbbbbba``b`aaab````ba``bababbb`a```ba``b````bbb`a````bab`b`b`b``````ba``ba``b`a`b",
X"bb`b`bbbba``ba`````bba``ba``````babbb`b`a`ba``b`aabbab`b`a```bbbbb`a`b`aba`baa`bbb`bbbbbbbb`aaa``````b`aba`b`bb````babb`abb`b```",
X"baabb`aaaa``ba````b`aa`b`a```````b`baa`b`b`a`b`a`b`aaba`bb```baaaaa``bbb`a`ba`b`aab`abaabaaa`````bbbb`ab`a`ba`abbbb`b`aa`bab`b``",
X"`ab`ba```bbbbab``b`a`bb`ab````````aba``bb`a`b`a``ba``ba`baabbba``bbbbbaaa``ba``b`b`bb`a`bab`````b`aaabbba``ba```baaaba`bb`ababbb",
X"a`baba`bb`baab`bb`a`b`aab`b```````bba``bbabb`a```ba``ba`ba`bababb`aaaabb`bb`a``ba`b`aa`b`b`b```b`a````aaa`b`a``b`bb``b`baa``bbaa",
X"`b`aba`baaba`bbbaa`b`a`b`a`b`````b`aa``bab`aa```b`a``ba`ba`ba`bbaa`````ab`ab`b`ba``a``b`bbaba``ba`````````ba````bbabb`aba````ba`",
X"b`a`ba`bab`ab`aba`b`a``ba``babbb`ba````ba`a````b`a```ba`ba`bab`ab````bbbba`bb`bba`b```bb`aaba``ba``bbbbbbb`a````baa`aa`ba````ba`",
X"ba```bb`b`a`ba`ba`ba```ba```b`aab`b``bb`a``````ba``bb`a`ba``b`a`bb``b`aaaa`bba`abbbabbbaa``ba```bb``baaabab``b`b`a`b``b`a```b`a`",
X"ba````ab`a`b`a``b``bb``ba```ba``bbba`baa````bbbba``baa``ba```a``babbba````b`ba``bbaababa`bb`b```baa`ba``ba`bb`bba``bbb`b````ba``",
X"`a`````ba`b`a```ba`babb`a``b`bbbbaaab`ab```b`aaaa`b`a```ba``bbbb`a`aaa```b`b`abb`ba``b`bb`ab`bbb`a`b`a`b`a`baa`aa`b`aab`bb``ba`b",
X"a``````ba`ba``bb`a`ba`aa``b`abbbba`b`ab`b`b`a```bb`a```b`a`b`abbbbb````b`baba`bab`a`b`a`aa``bbaaa`b`b`b`a``ba````b`a```b`abbba`b",
X"a`bbbbb`ab`a`b`aa``ba````b`ab`aabbb`a``bbbba```b`aa````ba`b`ab`abbaa``b`b`b`a``bba``ba`bb````ba``b`b`bba```bb````ba````ba`baaa`b",
X"bb`aaaaa`ba`b`a````bbb``b`abba``baaa```baaaa```ba``````bbb`a`ba``ba``b`a`b`a````aa`bbab`ab```ba`b`bbb`abb`b`abbbb`a`bbb`a`ba``b`",
X"`aa``````bab`a```bb`aabb`bb`aa``ba````bba`````b`a````bb`aba``ba```a`b`a``ba```bb```babba`bbbb`a`bb`aba``baba`baaba`b`aaa``bbbb`b",
X"a``````bb`a`b``bb`aa```ab`ab```bba`bbb`aa````b`a``b`b`aa`ba``ba``bbb`a```ba`bb`bbbb`b`ba``aaaa``baa`ba```bba`ba``b`ba````b`aaaab",
X"a``bbbb`aabbbb`baabb```b`ab`bbbbabb`aaa```bbb`a``b`b`a```bbb``bbbbaba````ba`bab`baaa`a`b```````b`bbb`a``b`abbba``ba`b```b`a```b`",
X"``b`aaaa`b`aaaabab`ab``ba`ba`abaabab`````b`aaa`bb`a`a```bbaab`baaaa`b````ba`ba`b`a```bbba`b``bb`abbaa```ba``aaa`b`a`ba`b`a````ba",
X"``ba````b`a``bb`a`bb`bb`a`ba``ba`baba````ba```b`ab`````b`ab``bba````ba``bbab`abba```b`abbbbab`aab`ab```b`a``````ba`bbab`a````b`a",
X"``ba````babbb`aa``baa`aa``ba``bbbbaba`bbb`a```bab`bbbbb`a`bab`aa`b`b`abb`ab`ab`ab``b`a``bababa`b`a`ba``ba`bb``bb`ab`aaba`bbbb`a`",
X"`b`a```b`abaabbbbb`a``````babb`aaabba`baaa`b```b`a`baaaa``ba`a``bbabab`aa`bab`a`bbb`a``b`bba`b`ba``ba`bbbb`bab`aa`ba`b`ab`aaaa``",
X"b`a````ba`bab`aaaaa``bbbbb`b`aa```baa`ba``b`b```a`b`b````b`a```bbaababa```baba``baaa``bbb`aab`aba``bab`aabb`a`b```ba`bab`a``````",
X"`a`````ba``b`a```````baaaaaba``````a``ba`b`aba```b`aba`bb`a`bbbbaa`bb`abbbbb`a```a`bbbbaaa``ba`ba``baba``bba``ba```b`baba`````bb",
X"a``b```ba```a``b````b`a`````b```bb```b`abba`ba```ba`bab`aa`b`baaabbbaa`babaaa``bb`b`abaa```b`a``b``baba```aa`b`a``b`a`bba``bbb`a",
X"``b`bbbba````bb`b`bb`abbbbb`ba`b`abbb`ab`aa`bab``ba`bbba``b`aba``baabbb`abbbbbbbbb`abba``bb`a```bb`baba`````b`a```ba``babb`baaa`",
X"``ba`aaaa``bb`aaba`bab`aaaabba`bb``aaa`ba```bb`bbba``aba``babba``ba``aaab`baaabaabab`aa`b`abb``b`aabb`a`bbbb`a````ba`b`a`ba`b```",
X"``ba````bbbbaabb`a`baba```b`abbbab`````ba``b`ba`aaa``bba`b`b`aa``ba`````baba`bba`ba`b```bab`abbba``bba``baaaa`bbbb`a`ba`b`a`ba``",
X"`bba``bb`ababb`aa``ba`bbbb`a``baaba````ba``ba`b`````b`abb`b`a```bba`````ba`bb`aa`ba``bb`bb`a``aaa```aabb`bbb`b`aaaa``ba``bb``b``",
X"b`bbbb`aab`abaa```b`a`babaa```ba`ba````ba``ba``bb```ba``ab`abbbbbab`````ba``aa```ba```abbaa```````b```bab`aab`a`````b`a```ba`ba`",
X"`a`babbbbba``bb``b`a``baba````ba``bbb```b``ba``baa`b`b```bbb`baaab`ab``b`a`b````b`a```b`abbbbbbbbb`bbb`bba```a```bbb`a````ba`bab",
X"a`bbb`aaaba`b`abb`a```ba`b`bbbba``baab``ba``b`bba``bb`b`b`aabba``bab`b`ba``bb```ba````ba`baaabaaaaa`aab`aa``b`bbb`aaa`````ba`bab",
X"a``aaa`bbbab`a``aa````ba``b`aaaa``bbb`bbba``bb`aa`b`ab`aba```ba`b`bbb`bba`b`abbb`a````ba`ba`b`b```````ba```b`b`abbb```bbbbba`bab",
X"a`````b`aab`a```bb`b``ba```a````bb`aba`aaa``baa``b`a`bbb`b````ab`b`abb`aa`bab`baa``bbb`a`ba``b`abb`````bbb`ba`ab`aab`b`aaaaa`bb`",
X"`bbb``ba```abb`b`ab`bb`a`bbb`bbb`abbba`````b`bbbb`a`b`aabba``bb`aba`bab``b`b`aba``b`aaa``ba``bbb`ab`````aba`b``ba``baba`````b`ba",
X"b`abab`a```b`ab`a`babaa``baab`aaab`aaa`bbbb`a`aaaa```b``baa`b`aabbab`aba`baba`ba`b`a````b`a`b`aba`ba`````ba`ba`ba``ba`b````b`a`b",
X"aab`aba````ba``a``bb`b``b`a``a```ba``bb`aaaa`````````ba``a`b`a`b`aaba``bbbbba`bab`a```bb`a`bba``a``b``bbbbab`abba`b`ab`abbb`a```",
X"``ba``b```b`a````b`aababba`bbb```ba``bba``````bbbbb`b`a```b`a``ba`b`a``baaaaa`baba``bb`aabb`aa````b`ab`aaab`ab`aa`ba`bab`aaa````",
X"``ba``ba``ba`````ba`bba`abb`aabbbba`bbab`````b`aaaabba``bb`abbb`a`ba````b`````baba``baa`b`aa``bb``bab`a`bb`a`ba``b`bbbaba``bb```",
X"bbba``ba```b``bbb`ab`aa```aa```aaaa`baaba````bab``b`ba``baab`aaa``ba```b`a`b`b`a`b``ba`b`a`bbb`abb`aba``baa```b``bb`aab`a`b`ab`b",
X"aaaa``ba``b`a`baaab`a``bb```````````ba`babb```bba`bbba``ba`ba`bb`b`bbbb`a`b`b`abbba`bab`a``baaa`bba`ba``ba```b`a`baa`b`a``ba`bb`",
X"`````b`a`b`a`b`a`b`bbbb`ab``bb```bbbba`bb`ab```ba`baaa``ba``bb`ab`b`aaaa`b`abbb`aabb`aba``b`a``b`abbba``ba``b`a``bbbb`a```ba``bb",
X"bb`bb`a``ba`b`a`b`abaaaa`bab`abbb`abaab`ba`ba``ba``a```b`a```bb``aba````b`ab`aba``baab`abb`a```ba``aaa``ba`b`a`bb`bbba```bba`b`a",
X"`ba`ba````bb`a``ba`ba```b`abab`bbb`ba`ba`bb`a``ba`````b`a```b`abbb`a`bbb`a`ba`bbbb`a``b``ba````ba``````b`ab`a``bab`aabbbb`aa`ba`",
X"b`a`ba`````bbb``ba`ba```ba`ba`b`aabbab`ab`bb```ba`````ba````ba``aaa``baaa`b`a`baaaa```ba`ba`bb`ba```bbb`a``b``b`a`b```aaaa``b`ab",
X"aa`b`a```bb`aabbba`ba`bbba``bb`a`b`ab`abba`abbbba``bbb`a`bb`ba```````ba``b`a`b`a`````b`ab`ab`abba``b`aab`bbba`babb`a``b``bbb`ab`",
X"``b`a```b`aa```aaa`bbb`aba``baa`b`a``ab`aa```aaaa`b`aaa`b`ab`bbbb``bb`a``ba`b`ab`````ba`babba`babb`ba`b`b`aaa`bb`aa```bbb`aaab`a",
X"``ba```b`a`````````baaa`bbbb`a``ba```b`a`````````b`a```b`a`ba`abaa`baa````bbbab`b````ba`bb`aab`b`aabab`a`a````bba`````baaa```ba`",
X"`b`a```ba```bbbbbbb`a```babaa`bb`a```ba````bb```b`a```b`a``ba``ba``babb```baabba`b````b``ba```bba``bbba`````bb`ba```bb`a`````ba`",
X"`ba````ba``b`aaaababb``bbbbabb`abbbbb`a``bb`abbb`a````ba`bb`a``ba`b`b`abbbba``aa`ba```ba``a``b`ba``baaa``bbb`ab`a`bb`aa``````ba`",
X"`ba```bba``ba```b`b`abbbaaab`aab`aaaaa```baa`baab````bba``babbb`a`bbba``aaaa`b``b`bbbb`a`bbbb`b`abbba```b`aaabba``baa````bbbb`a`",
X"b`a``b`aa``ba````bbbbbaaabb`a`b`a`````b``ba``ba`ba``b`aa`b`b`aaa``baaa``b```b`b`bb`aaaa``baaabbbb`baab`b`a``b`aa`b`a`bbbb`aaaa``",
X"babbb`a```b`a````baaaba``baa```b```````a`ba`b`a`ba``ba```ba`b`````ba``bb`b`b`aba`aa`````b`a`b`ababba`bb`a``b`b```ba`b`aaaa``````",
X"`b`aaa``bb`ab`bbbba`bba``ba```b`a``bbb```bbb`a``ba``ba``b`a``bb`bb`bbb`aabbbabba``bbbbb`babb`a`bb`ba`baa``b`b`b`bbab`a``b`bbb`bb",
X"a`b````b`aab`b`aaabb`ab``babb`ba``b`abbbbbaaa```ba```b``ba````ab`ba`aaa`b`aab`aa``baaaba`b`aa```aa`bb`a`bbbb`a`b`ab`a``b`b`aab`b",
X"a``b``b`a`b`a`a```baa`ba``b`ab`a``bab`aababb```b`a``b`a`ba````b`aba``````b```a````bab`ba`ba```b```b`aa`b`aaba``ba``a``b`a`a`b`ab",
X"a``ba`ba``ba`````b`a``ba``ba``a``b`aba```b`abbb`a```ba``ba````ba`ba`````bba`b```bb`b`b`ab`b```babb`a```ba``ba```b``b``ba````ba`b",
X"bbb`a`ba`b`a``b``ba```ba``bbbbb``babba`bb`a``aab``bb`a`b`a````ba`ba``bbb`aa`bbbb`aaba`ab`aba`b`b`aa````ba`b`b````b``bb`a````ba``",
X"baaa`b`ab`a```bbb`abbbba`b`aaaabb`b`abb`aab```b`bb`aa`b`a````b`a`ba`b`abb```baaaa`b`a`b`ab`a`ba`a```bbb`a`bb`bbbbba``ba``bbbbb``",
X"ba``b`ab`a```b`aaab`aaaa`ba```b`abbab`aa`b`b``ba`aa``b`a`b````bbb`a`ba`bba``ba```b`abb`ab`a``ba```bb`aaa`bbaa`aaaaa``ba`b`aaaaa`",
X"babb`a`ba``bb`a``b`a````b`a```ba``bb`a```ba`bb`a```bb`a`b`b````aaa`b`ab`ab```b``b`a`baab`a```ba``b`aa``bb`ba````````b`ab`a``````",
X"`b`aa```b``baa```ba``bbb`ab```ba``baa````ba`bba```b`aa`b`aba``````bba`ba`ba``bab`a`b`a`ba```b`a``ba```b`ab`abbbb````ba`ba`````bb",
X"aba````b`ab`a`bbb`a`b`aabb`b`b`a``ba``b``ba`bab``b`abbb`a`ba`````b`aa`bab`a`b`a`bbb`a``ba``b`a`bb`a`bb`bbba``baabbbb`ab`a``bbb`a",
X"b`b`bbbba`ba`b`aaa``ba`b`aa`b`a``b`a`b`bb`ab`abab`ab`aaa`b`a``bbbba```bb`a``ba``bbaa```ba``ba`b`aa``bab`aaa`b`a``aaabb`a``b`aaa`",
X"`abb`aaaa`bbb`a``bbb`abba````a``b`abb`b`ba`babbaba``b```b`b``b`aaaa``bbaa``b`abb`ab````ba``ba`ba````ba`b````ba`````b`aa```ba```b",
X"b``aa`````baaa``b`aaab`aa``````b`ab`ab`bba``b`aaba``ba``bb`b`ba`````b`abbbb`ab`aa`ba```ba`b`a`ba```b`a``b``b`a`````ba``bbb`a````",
X"`b``b``````a```b`a``b`a```bbbbb`a`ba`bb`aa```a`b`b``ba``bab`aba``bbb`b``aaaa`ba``b`abbbba`ba```b`bb`a```ba`ba``````ba`b`aab``bb`",
X"`ba``bbbbbbbb`b`a```ba```b`aaaabbb`a`bba````bbbbb`b`ba``bbba`babb`aab`b```````b`b`ab`aaaa`ba``b`a`ba````ba``b`````b`ab`abb`bb`ab",
X"bba`b`aaaaaaabba````ba``b`a```b`aaa``babbbbb`abaaa`b`a``bbabb`abaa`b`aba`````bbabab`a`````ba``ba```b``bbba``ba``bb`a`bab`aabaa``",
X"`aab`a``b````bab`b```b``ba```b`a`bbbb`b`abaab``b````a``b`abbaa`ba``ba`ba````b`aa`bba`bbb`b`b``ba`bb`ab`aaa`b`a`b`aa``ba`b```a```",
X"``b`a``b`b``b`a`b`bbbba``b````b``baabbba`ba``b``bb````b`a``ba`b`a``ba``b```b`a``b`bab`ababb`bb`a`baab`a```b`a`b`a```b`bb`a``b```",
X"`b`a```ba`b`ba```a`aaba``ba```ba`bab`aabbba`b`a``abbbb`a```babbabbbba``ba`b`a``b`abbbbb`a`ba`aa`b`ab`abbbb`a``ba`bbb`b`aa```bbbb",
X"b`a````ba``bba``b`````a``ba```ba`bbba``baaa`ba`````aaaa````ba`ab`aaaa`b`bbba``bbab`aaaba``ba```b`abba`baaaa````b`baab`a````b`aaa",
X"`b`````ba`b`abb``bb`````b`a```ba``aaa``ba``b`a`````````````ba```a`````bb`abbbb`abba``b`b``bbbbb`ab`aa`ba`bb`````b`ab`bbbbbb`a```",
X"b`bbbbb`a`ba``ba`babbbbb`abbbbba``````b`bbb`a`bbb`````bb```ba``b`````b`bab`abaa`baa`b`aba``baaaab`a``b`ab`abbb```ab`a`babaab````",
X"`a`aaaaa`b`abb`a`ba`aabbab`aaaab`bbbbb`a`aaa`b`aab```b`abbb`a``bbbbbb`a`b`abba``bbbb`bbba``ba`bb`a```ba`ba``aab```ba``ba`bb`a``b",
X"a``b````b`ab`aa`b`a``b`ab`bb``b`bbbaaaa``bbbb`a`b`bbb`a``aaa``b`abaaba```ab`aa``baaab`aaa`b`ab`ab``bb`ab`a`````b``ba``bab`ab```b",
X"a```bbbb`a`ba`bb`a````b``b`abb`bbaab````b`aaaa``bb`aaa``bb````ba`ba``b```b`a````babb`a```b`a`ba`bbb`aa`ba``b``b`bbba`b`b`a``b``b",
X"a``b`aaaabbba`baa`````bab`ab`bb`aa`ba```ba`bb```baa````b`ab``b`ab`a`b`a```bbbbbb`b`aa``bb`a`b`a`baaa````b``bbb`b`abbb`b`a``b`bb`",
X"```ba```b`aaa`bbbb`b`b`a`b`ba`aa``b`a``b`a`babb`bb````b`a`ba`ba`ba``ba```b`baaaab`a````baa``ba``ba``````ba`baaaba`baaaba`bb`b`aa",
X"``b`a``bba````baaab`bba``bb`a`````bbbbbba`b`abaababbbbba`bba``b``b`b`a``b`b`a``b`abb``b`a````b``ba``````ba`ba``bab`a``ba``bb`a``",
X"bb`a``b`aa`bbbba``ba`aa```aa``bbbbbaaaaaa`bbbbab`abbbaabb`babb`a`baba```baba```bab`abbba`````bab`ab`bbbb`a`ba``ba`b```ba``babb``",
X"baa``b`a``b`aabbbb`b````b````b`aabbb``````baaaabab`aaa``bb`bbabbb`aba```ba`b`bb`aba`baab``````b`ab`b`aaaa``ba`b`a`bbbbba``babaa`",
X"ba```ba``b`a`b`abaaba``b`b``b`a`b`aba````bba```baba``bbb`aabba`aaa`babbbba``b`aa`ba`ba`babbb```ab`a`a````bb`ab`a``baaaaa`b`bba``",
X"ba````b``ba`bba`babba``ba`bb`a``ba``bbbbb`abb``bbba`b`aabbb`aa````b`b`aaaa```a```bab`a`bb`aab````b``bbbbb`aab`a``bba```bbbb`aa``",
X"`a``b``b`bab`aa`bb`aa``ba`baa````b`b`aabab``ab``aabb`a`b`aaa```bbb`b`a`````b````b`aba``bba`b`a``b`ab`aaaaa`b`bbbbbab`bb`baaa```b",
X"a`bb`b`ba`b`a```baa```b`ab`b`````babb``baba`b`a`bb`aa``ba`bbbbb`aaaba`````b`bbbb`a``bb``bbb`ab`b`a`ba`````b`abaabaabb`aaba````b`",
X"`b`aaba`bb`b``bb`bb``b`ab`aba````ba`abb`a`bb`a``baa````ba`baaabb`bb`a`bbbb`bbaaaa````ba`baaab`b`a`b`a`````ba``bbba``ba`b`a``bb`a"
X};
END_OF_FILE
  if test 17072 -ne `wc -c <'bitmaps/background7.xpm'`; then
    echo shar: \"'bitmaps/background7.xpm'\" unpacked with wrong size!
  fi
  # end of 'bitmaps/background7.xpm'
fi
if test -f 'bitmaps/highscores.xpm' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'bitmaps/highscores.xpm'\"
else
  echo shar: Extracting \"'bitmaps/highscores.xpm'\" \(14350 characters\)
  sed "s/^X//" >'bitmaps/highscores.xpm' <<'END_OF_FILE'
X/* XPM */
Xstatic char * highscores_xpm[] = {
X/* width height ncolors chars_per_pixel */
X"377 37 8 1",
X/* colors */
X" 	s None	c None",
X".	c #E8E8E8",
X"X	c #BFBFD2",
X"o	c #A4A490",
X"O	c #A47B90",
X"+	c #5E5E5E",
X"@	c #7B90A4",
X"#	c #4D4D4D",
X/* pixels */
X"                                                                   ..X...                                                                                              ..X...X..X                             ..X...                                  ..X...X                                                                                                      ..X...X..X            ",
X".X...X..X.XX         ..X...X..X.X    ..X...X..X.X               .X.XoO+oo..X.               .X...X..X.XX         ..X...X..X.X                                      X.X.@OOoO+ooX...                        .X.XoO+oo..X.                           .X.XoO+oo..X.                .X...X..X....X...X..X.X              .X...X..X.X.......X...X..X...X            X.X.@OOoO+ooX...          ",
X"XoOoOo+o@OoO         XoXOoXOO+oOO    XXXoX++O+OOO            X..ooXO+XO+@oXoO..X            XoOoOo+o@OoO         XoXOoXOO+oOO                                    X.OooooXO+XO+@oXoOX.                   X..ooXO+XO+@oXoO..X                     X..ooXO+XO+@oXoO..X             XooXX+oX#@o@oX+o@OO@OOO..            XoX++O+OOoOXX+oOo@XOoXooXoOOoO          X.OooooXO+XO+@oXoOX.        ",
X"XXo@+oO+OoXO         X@oXooXXoOoO    Xoo+OooOoXOO           .XooOX+oXOoooXO@X@O+X           XXo@+oO+OoXO         X@oXooXXoOoO                                  X.OOOooOX+oXOoooXO@X@OXo                .XooOX+oXOoooXO@X@O+X                   .XooOX+oXOoooXO@X@O+XX           XXooOXXooOoooO+O@XOoooXoX.X          X+OooOoXOoXOo@#O@XOOOXXo+XoXXO        X.OOOooOX+oXOoooXO@X@OXo      ",
X"XXOOXOoXoo@O         oo#OOoXO+o@O    XOooX+oOOXoO         X.X#@o@oX+o@OO@OOOoOOOO.          XXOOXOoXoo@O         oo#OOoXO+o@O                                 XX+oX#@o@oX+o@OO@OOOoOOOOX             X.X#@o@oX+o@OO@OOOoOOOO.                X.X#@o@oX+o@OO@OOOoOOOOXX          XoOOoOXoXXoXoO@oXOXoXoo@oXOXX        XoX+oOOXoX@XXOXOo#XXOOo@OOOOX+       XX+oX#@o@oX+o@OO@OOOoOOOOX     ",
X"XoXooOoOo+oO         XOOO@XOOoXoO    XoOOoO@o@X@O        XXXooOoooO+O@XOoooXoXOXo@O         XoXooOoOo+oO         XOOO@XOOoXoO                                ooOXXooOoooO+O@XOoooXoXOXo@o           XXXooOoooO+O@XOoooXoXOXo@O              XXXooOoooO+O@XOoooXoXOXo@oX         XoOoX+OOXOOOXOOXXO+XoXOOOooooX       XOoO@o@X@OXOooOOXXXoXOXXXXo@XO      ooOXXooOoooO+O@XOoooXoXOXo@o    ",
X"X@oO+Xo@oO+O         XoOo@o+oXoOO    XoXOOXXXXoXO       XoOXoXXoXoO@oXOXoXoo@oXOO@X@        X@oO+Xo@oO+O         XoOo@o+oXoOO                               OOOoOXoXXoXoO@oXOXoXoo@oXOO@X@         XoOXoXXoXoO@oXOXoXoo@oXOO@X@            XoOXoXXoXoO@oXOXoXoo@oXOO@X@X        XoXX#X+o+XOO+Xo@X+oO+OOoXOOo+oX      XOOXXXXoXXoXoXOXXXOOOXOXXooOoO     OOOoOXoXXoXoO@oXOXoXoo@oXOO@X@   ",
X"XOOXOXOXXXX+         oOX@oOoXOOO+    XOoXXoXXX@o+      XoX+OOXOOOXOOXXO+XoXOOOoooO@Oo       XOOXOXOXXXX+         oOX@oOoXOOO+                               oOoX+OOXOOOXOOXXO+XoXOOOoooO@OO       XoX+OOXOOOXOOXXO@XoXOOOoooO@Oo          XoX+OOXOOOXOOXXo@XoXOOOoooO@Ooo       XO+X#OXoX+XOXoXXOXO+XoXXOooOXXo      XXXoXXX@oOXX@XXXXoOoOo@XoX+OX+     oOoX+OOXOOOXOOXXO+XoXOOOoooO@OO  ",
X"oO+XXOOoXXXO         XOOo+XoXXoOO    oOOo+OXoXoXO     oXX#X+o+XOO+XoX###O+OOoXOOo+@OO@      oO+XXOOoXXXO         XOOo+XoXXoOO                              OoXX#X+o+XOO+XoXX+oO+OOoXOOo+@OO      oXX#X+o+XOO+XoX###O@OOoXOOo+@OO@        oXX#X+o+XOO+Xo@###@@OOoXOOo+@OO@o      oooO@XOoXXOoOXX+@OOoXXOo@oXoX@XO     oo+OXoXoXXoOXoXXX+XOoo+OO@OOOO    OoXX#X+o+XOO+XoXX+oO+OOoXOOo+@OO  ",
X"XOXOXooOXoOO         ooXoOo+X+oOO    XOXOXXXOXXoO     X+X#OXoX+XOXo#+   +#oXXOooOXXX+X@     XOXOXooOXoOO         ooXoOo+X+oOO                              OO+X#OXoX+XOXO+#+###++XXOooOXXX@+     X+X#OXoX+XOXo#+   +#oXXOooOXXX+X@       X+X#OXoX+XOXo#+   +#oXXOooOXXX+Xo      XoOXOOXooOX+##+##+#Oo@+oXoOoOoXo     XOXXXOXXoXX+########+######+##    OO+X#OXoX+XOXO+#+###++XXOooOXXX@+ ",
X"XoOoOXOoO@+O         oXXXoX@OXOoO    XXooXoXOoX+O    oXoO@XOoXXOoO+       +Oo@oXoX@X+X@     XoOoOXOoO@+O         oXXXoX@OXOoO                              oooO@XOoXX+O+         Oo@oXoX@X+O    oXoO@XOoXXOoO+       +Oo@oXoX@X+X@      oXoO@XOoXXOoO+       OOo@oXoX@X+X@o     XOXoXOXoOOo+        oOOOoX+XOO@o     XoXoXOoX+Xo+                      oooO@XOoXX+O+         Oo@oXoX@X+O ",
X"oo+XX+XoXX+O         XXOOOXOOoX+O    oO@OXXX@oX@O    ooOXOOXooOXX+         OoXoOoOoXo#O@    oo+XX+XoXX+O         XXOOOXOOoX+O                              +oOXOOXooOXO          +##+##+###+    ooOXOOXooOXX+         OoXoOoOoXo#O@     ooOXOOXooOXX+         OoXoOoOoXo#O@     oOOXOXXOXXX+        #OXOXO+XO@XO     oOXXX@oX@XX+                      +oOXOOXooOXO          +##+##+###+ ",
X"XXXXXXXoOXO.......X..X@OOOXoXOOoO    X+OOooXXXXOO    oOXoXOXoOOo+           OoX+XOO@XOo@    XXXXXXXoOXO.......X..X@OOOXoXOOoO                              OOXoXOXoOOoOo                        oOXoXOXoOOo+           OoX+XOO@XOo@     oOXoXOXoOOo+           OoX+XOO@XOo@o    XXoXOXoOOoOO         oooooOXXXO+     XOooXXXXOXX+                      OOXoXOXoOOoOo                     ",
X"oXXXXXXXoXOXXoXOOXOOOX@XooXXOOOo+    ooXXooXXoXX+   oXOOXOXXOXXX+           +####+###+##    oXXXXXXXoXOXXoXOOXOOOX@XooXXOOOo+                              +OOXOXXOXXXXooX...X...X             oXOOXOXXOXXX+           O##+######+#    oXOOXOXXOXXXO           @OOX@O@OOOXoO    oOOOXXoXXXO+         XXoOOoXoOOO     oXooXXoXXXOOX.X..X...X...X.       +OOXOXXOXXXXooX...X...X           ",
X"XXoXoXX+OXXXXXoOX#OoXoXoooOO+OoXO    XXXXX@oXOOXO   @XXoXOXoOOoO+                           XXoXoXX+OXXXXXoOX#OoXoXoooOO+OoXO                               OoXOXoOOoOOoOOoXOXO#Xo..XX         @XXoXOXoOOoO+                           @XXoXOXoOOoO+           OXOOOX@XooXX@o   XXOOOOoXoOX+        oXXOOXXoO@o+     XXX@oXOOXXoOOXOXOOOXoOO+OO+        OoXOXoOOoOOoOOoXOXO#Xo..XX       ",
X"oOOo+O+OooXXoXX+ooOoXXXooooXOOOXO    oXoXXXOOXOXO   ooOOOXXoXXXO                            oOOo+O+OooXXoXX+ooOoXXXooooXOOOXO                               +OOXXoXXXOoO+OOXoXXooXoOOoXX       ooOOOXXoXXXO                            ooOOOXXoXXXO             @OoXoXoooOO+O   o+XXoX+XoOXO...X..XXoOooOXOOXO+      oXXXOOXOXXOo+XXoOoXOOoX+XOO        +OOXXoXXXOoO+OOXoXXooXoOOoXX     ",
X"ooXOXXoOXOXOXoXOOXoOXoOooOXOO@+o+    o+XOXoXOOOX+   @OXOOOOoXoO+                            ooXOXXoOXOXOXoXOOXoOXoOooOXOO@+o+                                +OOOoXoOXOXoXo@XX+XXXOOXXoO@      @OXOOOOoXoO+                            @OXOOOOoXoO+             oOoXXXooooXOO   oXoXXOXXOXOoOoXOOX++XXoOo@+XOX+      oOXoXOOOXOXOXOoXo+OoXXOXXO+         +OOOoXoOXOXoXo@XX+XXXOOXXoO@    ",
X"XXXXXOo@XXo@@XOXXOOXXXX@oOXO+ooOO    XXooXXOXOOoO   @++XXoX+XoOO         .X..X.X.......X    XXXXXOo@XXo@@XOXXOOXXXX@oOXO+ooOO                                 +oX+XoOXXXXOOoXX+oOooOXOOXOo     @++XXoX+XoOO                            @++XXoX+XoOO             @oOXoOooOXOO+   XXOoooXOOOXXXXX@XOXoooXXoXoXo#       XoXXOXOOoXOXOXOXOXX++OoXoo+          +oX+XoOXXXXOOoXX+oOooOXOOXOo   ",
X"oXOXoXOoOooOoOXOXOOoooOXoXOOOOo@+    ooOOX@oXXXX+   o+XoXXOXXOXO         XX++OoXooOXOoXO    oXOXoXOoOooOoOXOXOOoooOXoXOOOOo@+                                  +OXXOXOoOoXOOX++XXoOo@+XOXXo    o+XoXXOXXOXO                            o+XoXXOXXOXO             OOXXXX@oOXO+O   oOXXOXOXOOXXOo+OOXoXOooO@oOX#        oOX@oXXXXXXXOXXXXoOOX+Xoo+O           +OXXOXOoOoXOOX++XXoOo@+XOXXo  ",
X"oXXOOXXoXOXXX#XO@O@XOOOXOooOXXo@+    oXoXXOoOooO+   @OXOoooXOOO@         oOOX+Xoo+OOXoX+    oXXOOXXoXOXXX#XO@O@XOOOXOooOXXo@+                                    +OOOXoXXX@XOXoooXXoXoXoOOO@   @OXOoooXOOO@                            @OXOoooXOOO@             oOoooOXoXOOOO   oooXXOXXXXO++OoX@oXX+XXXXO##         oXXOoOooOXoOXXXOX@OO+XoO@X+             +OOOXoXXX@XOXoooXXoXoXoOOO@ ",
X"X+oXo+OXoXo+##+####+#+OXo@XXXOoOO    XXXXXX#OXXXO   @oOXXOXOXOOO         @OO+XoO@XOo+XOO    X+oXo+OXoXo+##+####+#+OXo@XXXOoOO                                     #++oXOo+OOXoXOooO@oOXXXXOo   @oOXXOXOXOOO                            @oOXXOXOXOOO             O@XOOOXOooOX+   XXXOXOoXXXOOXX@XXoOoXoXoOOO#         XXXX#OXXXOXoOXXoOXO@@@Oo+O+              #++oXOo+OOXoXOooO@oOXXXXOo ",
X"@X+oXXXoXoo+         oooOXOXOOXO+    @+XXXoXo#Xo+   o+ooXXOXXXX@         XO@@@Oo+Ooo+OXO    @X+oXXXoXoo+         oooOXOXOOXO+                                        ++######+#+XXXXOO+ooXXOo  o+ooXXOXXXX@                            o+ooXXOXXXX@             oXXOXOXo@XXXO   @XXX+oXXoXXXOOOXOOOOXXXXXoOo         @XXoXo#XoXX+#+###+########+                 ++######+#+XXXXOO+ooXXOo",
X"oOoOOXOOoOOO         oXoXO+XXoO++    oXoOXoOOX#X+    @XXOXOoXXXO@        @OoO+oO+O@OOOO+    oOoOOXOOoOOO         oXoXO+XXoO++                                                    #oOOOXOOXXOO   @XXOXOoXXXO@                            @XXOXOoXXXO@           o+XooXooOXOX+    ooXoX@oOOXoXOOoOXoXoOOoXXoXOO        oOXoOOX#XOX+                                            #oOOOXOOXXOO",
X"@OX+XO+XXXX+         @X+XOOO@oXO+    @+oXXoOXoXO+    OXXX+oXXoXXo        +###ooXooXXO@OO    @OX+XO+XXXX+         @X+XOOO@oXO+                                                     OXoOOXoOXXo   OXXX+oXXoXXo           ....X.......O    OXXX+oXXoXXo           XOOOOoXoXO+XO    @+O+@oXXOX++##+##+XooXoO+X@OOo       @XXoOXoXOXX+                                             OXoOOXoOXXo",
X"XXX+XoOoXXOO         XXOXOXo@XooO    XOXOXXXoXOOO    @oXoX@oOOXoX           XXoXOOO#XXO+    XXX+XoOoXXOO         XXOXOXo@XooO                             X..X.X...X...X           XoXOOO#XXO   @oXoX@oOOXoX           XXoXOOO#XXOX+    @oXoX@oOOXoX           XXoXOOO#XXOX+    XoOoXo+ooXX+     ##o+XOOOooOXO       XOXXXoXOOOo+                     X..X.X...X...X           XoXOOO#XXO",
X"oXOXoOoO@XX+         oXooXoOX@Oo+    oOXOXOXXoOO+     OO+@oXXOX++o         XO+X@OO+OOoO+    oXOXoOoO@XX+         oXooXoOX@Oo+                             oX+O+@oXXOX++o          X+X@OO+OOoO    OO+@oXXOX++o         XO+X@OO+OOoOo+     OO+@oXXOX++o         XO+X@OO+OOoOo+    ooOoOXXXooo+      +OOO+++oO+@@o      oOXOXXoOOoO+                     oX+O+@oXXOX++o          X+X@OO+OOoO",
X"@OoOXXoXXoX+         @XOoOOoOOoO+    @oXoXXo+oOX+     @OoXo+ooXXXXX       XOOOooOoXo@@+O    @OoOXXoXXoX+         @XOoOOoOOoO+                             XOoOoXo+ooXXXXX        XOOooOXO+XXO    @OoXo+ooXXXXX       XOOOooOXO+XXX+      @OoXo+ooXXXXX       XOOOooOXO+XXX+     @oXOooXXX+OO       +@OOXoo+oX@o      @oXXo+oOXXO+                     XOoOoXo+ooXXXXX        XOOooOXO+XXO",
X"@OOXXXOXXOO+         @@OOXoooXOo+    @oOXXX@XoOO+      OoOXXXoooOXX..   X.O+++oOXXX+OXO+    @OOXXXOXXOO+         @@OOXoooXOo+                             oXoOoOXXXoooOXX.X.X..X.+++oO+@@oXo+     OoOXXXoooOXX..   X.O+++oO+@@oXoO+       OoOXXXoooOXX..   X.O+++oO+@@oXoO+     @+X@XXOXXXO+       +OXoOOOX#OOo      @XXX@XoOOXOO.X....X.X..X...X.O   oXoOoOXXXoooOXX.X.X..X.+++oO+@@oXo+",
X"@XXX+OoXX@OO         @Ooo@OoOOoo+    @oXoOOoXXOo+      OOooXXX+OOOoXX...X@OOXoo+OoOO+OO+    @XXX+OoXX@OO         @Ooo@OoOOoo+                              OoXOooXXX+OOOoXXXoXX@OOXoo+oX@OOO      OOooXXX+OOOoXX...X@OOXoo+oX@OOO+        OOooXXX+OOOoXX...X@OOXoo+oX@OOO+      @OXoooXOXXX+        Oo@OXOOoOOXo     @oOOoXXOooOOOooX+XOo#XXXOOX#o+    OoXOooXXX+OOOoXXXoXX@OOXoo+oX@OOO ",
X"oXXXOOOOXoX+         oooO+XoXoOXO    ooXOOXOoXOOO       OXXOXXXOXOXoXOXOoOXoOOOXOoXo@@++    oXXXOOOOXoX+         oooO+XoXoOXO                              o+X@XXOXXXOXOXoXOXOoOXoOOOX#OOoO+       OXXOXXXOXOXoXOXOoOXoOOOX#OOoO#          OXXOXXXOXOXoXOXOoOXoOOOX#OOoO#       oXXXXOOXoooO        O#OXOXoo+oOX     oOOXOoXOOo+oOoOOO+OOooXOoXOOoO    o+X@XXOXXXOXOXoXOXOoOXoOOOX#OOoO+ ",
X"@OOoOoXXOOO+         @oO+O@X+o#X+    @+OOOOXOo+X+        OoXOXXXO+Xo++OX+Oo@OXOOXXX+OXO+    @OOoOoXXOOO+         @oO+O@X+o#X+                               OXoooXOXXXO+Xo++OX+Oo@OXOOoOOXO         OoXOXXXO+Xo++OX+Oo@OXOOoOOX+            OoXOXXXO+Xo++OX+Oo@OXOOoOOX+        @OOOOOXoOoo+        @OX@XoXXoOXo     @OOOXOo+XOXOoOoXo+o@@o+Ooo+OO+     OXoooXOXXXO+Xo++OX+Oo@OXOOoOOXO  ",
X"@Oo+XXXOXoo+         @oOoOooooOX+    @OOX+XXXXXO+         +OXoooooXOOooOoX#OXOXoOoOO+OOO    @Oo+XXXOXoo+         @oOoOooooOX+                                OXXOOXoooooXOOooOoX#OXOXoo+o+           +OXoooooXOOooOoX#OXOXoo+o+              +OXoooooXOOooOoX#OXOXoo+o+         @oX++oOXoOX+        OXo@O+OOooOoX    @X+XXXXXO@X@OoOO#+oXOXO@@+oO++      OXXOOXoooooXOOooOoX#OXOXoo+o+   ",
X"@OXXOOXOXOoO         @o+oooXoooX+    @XoXX+oOoOO+          +oOooXooXoOXoOOOX@XoXOXX#OOO+    @OXXOOXOXOoO         @o+oooXoooX+                                 OOOXoOooXooXoOXoOOOX@XoXXoO             +oOooXooXoOXoOOOX@XoXX#+                +oOooXooXoOXoOOOX@XoXX#+          @ooOOXoo+@++         @ooOXooOXXXX    @XX+oOoOOoOOo@OoooOoooO+oOo+o+       OOOXoOooXooXoOXoOOOX@XoXXoO    ",
X"@OX+XoXOOoo+         @OOOoOo@OXO+    @OoXXoOXXoO+           ++OXoXXXXXOo@+Xo@O+++@OXXoo+    @OX+XoXOOoo+         @OOOoOo@OXO+                                  ++OXoOXoXXXXXOo@+Xo@O+OO+               ++OXoXXXXXOo@+Xo@O+O+                   ++OXoXXXXXOo@+Xo@O+O+            @ooXOOoOoXo#         @OOooOoOXOXo    @XXoOXXoOXXOOXOoOooOOooOoOO++O        ++OXoOXoXXXXXOo@+Xo@O+OO+     ",
X"@oOXOoOoOOX+         @+ooOOXOOOO+    @OOXXOOXOoX+             ++oOoOXOooOOooo++ +OO++OO+    @oOXOoOoOOX+         @+ooOOXOOOO+                                    +++@+oOoOXOooOOoooOX+#                  ++oOoOXOooOOooo++#                      ++oOoOXOooOOooo++#             @@OOXoO+oOO+          @XoOooooOooX   @XXOOXOoXO@+OXOOOoooOOO@OXo@++          +++@+oOoOXOooOOoooOX+#      ",
X"+###+###+##+         +###+###+##+    +###+###+##+               ##+#XX#O@####   +###+##+    +###+###+##+         +###+###+##+                                       +#OOO@XX#O@o++#+#                      ##+#XX#O@####                           ##+#XXoO@####                +##+#+#####+          +##+###+###+   +####+########+######+#######+             +#OOO@XX#O@o++#+#        ",
X"                                                                   +#####+                                                                                            ##+###+###                               #####+                                 +#####+                                                                                                     ##+###+###             "};
END_OF_FILE
  if test 14350 -ne `wc -c <'bitmaps/highscores.xpm'`; then
    echo shar: \"'bitmaps/highscores.xpm'\" unpacked with wrong size!
  fi
  # end of 'bitmaps/highscores.xpm'
fi
if test -f 'intro.c' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'intro.c'\"
else
  echo shar: Extracting \"'intro.c'\" \(13916 characters\)
  sed "s/^X//" >'intro.c' <<'END_OF_FILE'
X#include "copyright.h"
X
X/*
X *  Include file dependencies:
X */
X
X#include <stdio.h>
X#include <stdlib.h>
X#include <stddef.h>
X#include <X11/Xlib.h>
X#include <X11/Xutil.h>
X#include <X11/Xos.h>
X#include <xpm.h>
X
X#include "error.h"
X#include "misc.h"
X#include "gun.h"
X#include "main.h"
X#include "init.h"
X#include "inst.h"
X#include "stage.h"
X#include "blocks.h"
X#include "special.h"
X#include "ball.h"
X#include "score.h"
X#include "paddle.h"
X#include "level.h"
X#include "mess.h"
X#include "audio.h"
X#include "version.h"
X
X#include "bitmaps/titleBig.xpm"
X
X#include "bitmaps/star1.xpm"
X#include "bitmaps/star2.xpm"
X#include "bitmaps/star3.xpm"
X#include "bitmaps/star4.xpm"
X#include "bitmaps/star5.xpm"
X#include "bitmaps/star6.xpm"
X#include "bitmaps/star7.xpm"
X#include "bitmaps/star8.xpm"
X#include "bitmaps/star9.xpm"
X#include "bitmaps/star10.xpm"
X#include "bitmaps/star11.xpm"
X
X#include "intro.h"
X
X/*
X *  Internal macro definitions:
X */
X
X#define GAP 10
X
X/*
X *  Internal type declarations:
X */
X
X#if NeedFunctionPrototypes
Xvoid SetIntroWait(int newMode, int waitFrame);
Xvoid DoIntroWait(void);
X#else
Xvoid SetIntroWait();
Xvoid DoIntroWait();
X#endif
X
X/*
X *  Internal variable declarations:
X */
X
Xstatic int nextFrame = 0;
Xstatic int nextFrame2 = 0;
Xstatic int endFrame = 0;
Xstatic int startFrame = 0;
Xstatic int explodeIndex = 0;
Xstatic int explodeBlock = 0;
Xenum IntroStates IntroState;
XPixmap bigtitlePixmap, bigtitlePixmapM;
XPixmap stars[12], starsM[12];
Xstatic int waitingFrame, waitMode;
X
X#if NeedFunctionPrototypes
Xvoid SetUpIntroduction(Display *display, Window window, Colormap colormap)
X#else
Xvoid SetUpIntroduction(display, window, colormap)
X	Display *display;
X	Window window;
X	Colormap colormap;
X#endif
X{
X	XpmAttributes   attributes;
X	int             XpmErrorStatus;
X
X    attributes.valuemask = XpmColormap;
X	attributes.colormap = colormap;
X
X	XpmErrorStatus = XpmCreatePixmapFromData(display, window, titleBig_xpm,
X		&bigtitlePixmap, &bigtitlePixmapM, &attributes);
X	HandleXPMError(display, XpmErrorStatus, "InitialiseIntro()");
X
X    /* Create the stars for the letter shine */
X	XpmErrorStatus = XpmCreatePixmapFromData(display, window, star1_xpm,
X		&stars[0], &starsM[0], &attributes);
X	HandleXPMError(display, XpmErrorStatus, "InitialiseIntro(star1)");
X
X	XpmErrorStatus = XpmCreatePixmapFromData(display, window, star2_xpm,
X		&stars[1], &starsM[1], &attributes);
X	HandleXPMError(display, XpmErrorStatus, "InitialiseIntro(star2)");
X
X	XpmErrorStatus = XpmCreatePixmapFromData(display, window, star3_xpm,
X		&stars[2], &starsM[2], &attributes);
X	HandleXPMError(display, XpmErrorStatus, "InitialiseIntro(star3)");
X
X	XpmErrorStatus = XpmCreatePixmapFromData(display, window, star4_xpm,
X		&stars[3], &starsM[3], &attributes);
X	HandleXPMError(display, XpmErrorStatus, "InitialiseIntro(star4)");
X
X	XpmErrorStatus = XpmCreatePixmapFromData(display, window, star5_xpm,
X		&stars[4], &starsM[4], &attributes);
X	HandleXPMError(display, XpmErrorStatus, "InitialiseIntro(star5)");
X
X	XpmErrorStatus = XpmCreatePixmapFromData(display, window, star6_xpm,
X		&stars[5], &starsM[5], &attributes);
X	HandleXPMError(display, XpmErrorStatus, "InitialiseIntro(star6)");
X
X	XpmErrorStatus = XpmCreatePixmapFromData(display, window, star7_xpm,
X		&stars[6], &starsM[6], &attributes);
X	HandleXPMError(display, XpmErrorStatus, "InitialiseIntro(star7)");
X
X	XpmErrorStatus = XpmCreatePixmapFromData(display, window, star8_xpm,
X		&stars[7], &starsM[7], &attributes);
X	HandleXPMError(display, XpmErrorStatus, "InitialiseIntro(star8)");
X
X	XpmErrorStatus = XpmCreatePixmapFromData(display, window, star9_xpm,
X		&stars[8], &starsM[8], &attributes);
X	HandleXPMError(display, XpmErrorStatus, "InitialiseIntro(star9)");
X
X	XpmErrorStatus = XpmCreatePixmapFromData(display, window, star10_xpm,
X		&stars[9], &starsM[9], &attributes);
X	HandleXPMError(display, XpmErrorStatus, "InitialiseIntro(star10)");
X
X	XpmErrorStatus = XpmCreatePixmapFromData(display, window, star11_xpm,
X		&stars[10], &starsM[10], &attributes);
X	HandleXPMError(display, XpmErrorStatus, "InitialiseIntro(star11)");
X
X    /* Free the xpm pixmap attributes */
X	XpmFreeAttributes(&attributes);
X
X	ResetIntroduction();
X}
X
X#if NeedFunctionPrototypes
Xvoid DrawIntroTitle(Display *display, Window window, int x, int y)
X#else
Xvoid DrawIntroTitle(display, window, x, y)
X	Display *display;
X	Window window;
X	int x;
X	int y;
X#endif
X{
X	RenderShape(display, window, bigtitlePixmap, bigtitlePixmapM,
X		x, y, 474, 74, True);
X}
X
X#if NeedFunctionPrototypes
Xvoid DoIntroTitle(Display *display, Window window)
X#else
Xvoid DoIntroTitle(display, window)
X	Display *display;
X	Window window;
X#endif
X{
X	char string[80];
X
X	/* Clear and draw background pattern */
X    DrawStageBackground(display, window, BACKGROUND_0);
X
X	/* Draw the intro title bitmap XBOING */
X	DrawIntroTitle(display, window, 10, 10);
X
X	/* Construct a copyright message leaving space for the copyright circle */
X	strcpy(string, "  Copyright 1993 Justin C. Kibell, All Rights Reserved");
X	string[0] = 0xa9;  /* Copyright circle */
X	DrawShadowCentredText(display, window, copyFont, string, 90, white, 
X		PLAY_WIDTH);
X
X	/* Be very friendly */
X	SetCurrentMessage(display, messWindow, "Welcome to XBoing", False);
X}
X
X#if NeedFunctionPrototypes
Xstatic void DoBlocks(Display *display, Window window)
X#else
Xstatic void DoBlocks(display, window)
X	Display *display;
X	Window window;
X#endif
X{
X	int y = 120;
X	int x = 40;
X
X	/* Now draw the blocks on the screen */
X	DrawTheBlock(display, window, x, y, RED_BLK, 0);
X	DrawShadowText(display, window, textFont, 
X		"- 100 points", x + 60, y, green);
X	y += 40;
X
X	DrawTheBlock(display, window, x, y, BLUE_BLK, 0);	
X	DrawShadowText(display, window, textFont, 
X		"- 110 points", x + 60, y, green);
X	y += 40;
X
X	DrawTheBlock(display, window, x, y, GREEN_BLK, 0);
X	DrawShadowText(display, window, textFont, 
X		"- 120 points", x + 60, y, green);
X	y += 40;
X
X	DrawTheBlock(display, window, x, y, TAN_BLK, 0);	
X	DrawShadowText(display, window, textFont, 
X		"- 130 points", x + 60, y, green);
X	y += 40;
X
X	DrawTheBlock(display, window, x, y, YELLOW_BLK, 0);
X	DrawShadowText(display, window, textFont, 
X		"- 140 points", x + 60, y, green);
X	y += 40;
X
X	DrawTheBlock(display, window, x, y, PURPLE_BLK, 0);	
X	DrawShadowText(display, window, textFont, 
X		"- 150 points", x + 60, y, green);
X	y += 40;
X
X	DrawTheBlock(display, window, x, y, BULLET_BLK, 0);	
X	DrawShadowText(display, window, textFont, 
X		"- Ammunition", x + 60, y, green);
X	y += 40;
X
X	DrawTheBlock(display, window, x+5, y-5, HYPERSPACE_BLK, 0);	
X	DrawShadowText(display, window, textFont, 
X		"- Teleport", x + 60, y, green);
X	y += 40;
X
X	DrawTheBlock(display, window, x+5, y+5, REVERSE_BLK, 0);	
X	DrawShadowText(display, window, textFont, 
X		"- Reverse Control", x + 60, y, green);
X	y += 40;
X
X	DrawTheBlock(display, window, x+5, y+5, MGUN_BLK, 0);	
X	DrawShadowText(display, window, textFont, 
X		"- Machine Gun", x + 60, y, green);
X	y += 40;
X
X	DrawTheBlock(display, window, x, y, MULTIBALL_BLK, 0);
X	DrawShadowText(display, window, textFont, 
X		"- Multi Balls", x + 60, y, green);
X	y += 40;
X
X	/* New line from top again on right */
X	y = 120;
X	x = 260;
X
X	DrawTheBlock(display, window, x+5, y, BONUS_BLK, 0);
X	DrawShadowText(display, window, textFont, 
X		"- 3000 points", x + 60, y, green);
X	y += 40;
X
X	DrawTheBlock(display, window, x, y, COUNTER_BLK, 5);
X	DrawShadowText(display, window, textFont, 
X		"- 200 points", x + 60, y, green);
X	y += 40;
X
X	DrawTheBall(display, window, x + 20, y+10, 0); 
X	DrawShadowText(display, window, textFont, 
X		"- The Ball!", x + 60, y, green);
X	y += 40;
X
X	DrawTheBlock(display, window, x, y, BLACK_BLK, 0);
X	DrawShadowText(display, window, textFont, 
X		"- Solid wall", x + 60, y, green);
X	y += 40;
X
X	DrawTheBlock(display, window, x+9, y, BOMB_BLK, 0);
X	DrawShadowText(display, window, textFont, 
X		"- Bomb!", x + 60, y, green);
X	y += 40;
X
X	DrawPaddle(display, window, x+20, y, PADDLE_SMALL);
X	DrawShadowText(display, window, textFont, 
X		"- The Paddle", x + 60, y, green);
X	y += 40;
X
X	DrawTheBullet(display, window, x+20, y+5);
X	DrawShadowText(display, window, textFont, 
X		"- Bullet", x + 60, y, green);
X	y += 40;
X
X	DrawTheBlock(display, window, x+8, y, DEATH_BLK, 0);
X	DrawShadowText(display, window, textFont, 
X		"- Instant Death!", x + 60, y, green);
X	y += 40;
X
X	DrawTheBlock(display, window, x+10, y, EXTRABALL_BLK, 1);
X	DrawShadowText(display, window, textFont, 
X		"- Extra Ball", x + 60, y, green);
X	y += 40;
X
X	DrawTheBlock(display, window, x+10, y, WALLOFF_BLK, 0);
X	DrawShadowText(display, window, textFont, 
X		"- Walls Off", x + 60, y, green);
X	y += 40;
X
X	DrawTheBlock(display, window, x+10, y - 5, STICKY_BLK, 0);
X	DrawShadowText(display, window, textFont, 
X		"- Sticky Ball", x + 60, y, green);
X	y += 40;
X}
X
X#if NeedFunctionPrototypes
Xstatic void DoText(Display *display, Window window)
X#else
Xstatic void DoText(display, window)
X	Display *display;
X	Window window;
X#endif
X{
X	char string[80];
X	int y;
X
X	y = PLAY_HEIGHT - 27;
X
X	strcpy(string, "Press <Space> to start the game.");
X	DrawShadowCentredText(display, window, textFont, 
X		string, y, tann, PLAY_WIDTH);
X}
X
X#if NeedFunctionPrototypes
Xstatic void DoSparkle(Display *display, Window window)
X#else
Xstatic void DoSparkle(display, window)
X	Display *display;
X	Window window;
X#endif
X{
X	static Pixmap store;
X	static int x = 100;
X	static int y = 20;
X	static int in = 0;
X
X	if (!store)
X	{
X		store = XCreatePixmap(display, window, 20, 20,
X			DefaultDepth(display, XDefaultScreen(display)));
X	}
X
X	if (in == 0) 
X		XCopyArea(display, window, store, gc, x, y, 20, 20, 0, 0);
X
X	if (frame == startFrame)
X	{
X		RenderShape(display, window, stars[in], starsM[in],
X			x, y, 20, 20, False);
X
X	 	in++;
X		startFrame = frame + 15;
X
X		if (in == 11) 
X		{
X			XCopyArea(display, store, window, gc, 0, 0, 20, 20, x, y);
X			in = 0;
X			startFrame = frame + 500;
X			x = (rand() % 474) + 5;
X			y = (rand() % 74) + 5;
X		}	
X	}
X}
X
X#if NeedFunctionPrototypes
Xstatic void DoExplodeLeft(Display *display, Window window)
X#else
Xstatic void DoExplodeLeft(display, window)
X	Display *display;
X	Window window;
X#endif
X{
X	int y = 120;
X	int x = 40;
X
X	if (frame == endFrame) IntroState = INTRO_FINISH;
X
X	if (frame == nextFrame)
X	{
X		if (explodeIndex == 0 && explodeBlock != 0)
X			DrawTheBlock(display, window, x, 
X				y + ((explodeBlock-1) * 40), explodeBlock-1, 0);
X
X		if (explodeIndex == 0 && explodeBlock == 0)
X			DrawTheBlock(display, window, x, y + (6 * 40), 6, 0);
X
X		ExplodeBlockType(display, window, x,
X			y + (explodeBlock * 40), explodeBlock, explodeIndex);
X			
X		explodeIndex++;
X		nextFrame = frame + 10;
X		if (explodeIndex == 3) 
X		{
X			XClearArea(display, window, x, 
X				y + (explodeBlock * 40), 40, 30, False);
X			explodeIndex = 0; 
X			explodeBlock++;
X			if (explodeBlock == 7) explodeBlock = 0;
X			nextFrame += 200;
X		}
X	}
X}
X
X#if NeedFunctionPrototypes
Xstatic void DoExplodeRight(Display *display, Window window)
X#else
Xstatic void DoExplodeRight(display, window)
X	Display *display;
X	Window window;
X#endif
X{
X	int x = 260;
X	int y = 120;
X	static int slide = 0;
X
X	if (frame == nextFrame2)
X	{
X		if (slide == 4) slide = 0;
X
X		DrawTheBlock(display, window, x+5, y, BONUS_BLK, slide);
X		DrawTheBlock(display, window, x, y + 40, COUNTER_BLK, slide);
X		DrawTheBall(display, window, x + 20, y + 90, slide);
X		DrawTheBlock(display, window, x+8, y + 280, DEATH_BLK, slide);
X
X		if (slide == 3)
X			DrawTheBlock(display, window, x+9, y + 160, BOMB_BLK, 0);
X		else
X			ExplodeBlockType(display, window, x+9, y+160, BOMB_BLK, slide);
X
X		nextFrame2 += 90;
X		slide++;
X	}
X}
X
X#if NeedFunctionPrototypes
Xstatic void DoFinish(Display *display, Window window)
X#else
Xstatic void DoFinish(display, window)
X	Display *display;
X	Window window;
X#endif
X{
X	ResetInstructions();
X	mode = MODE_INSTRUCT;
X
X	if (noSound == False)
X		playSoundFile("weeek", 100);
X}
X
X#if NeedFunctionPrototypes
Xvoid Introduction(Display *display, Window window)
X#else
Xvoid Introduction(display, window)
X	Display *display;
X	Window window;
X#endif
X{
X	switch (IntroState)
X	{
X		case INTRO_TITLE:
X			DoIntroTitle(display, window);
X			IntroState = INTRO_BLOCKS;
X			break;
X
X		case INTRO_BLOCKS:
X			DoBlocks(display, window);
X			IntroState = INTRO_TEXT;
X			break;
X
X		case INTRO_TEXT:
X			DoText(display, window);
X			IntroState = INTRO_EXPLODE;
X			break;
X
X		case INTRO_EXPLODE:
X			DoExplodeLeft(display, window);
X			DoExplodeRight(display, window);
X			DoSparkle(display, window);
X			if ((frame % FLASH) == 0)
X				RandomDrawSpecials(display);
X			break;
X
X		case INTRO_FINISH:
X			DoFinish(display, window);
X			break;
X
X		case INTRO_WAIT:
X			DoIntroWait();
X			break;
X
X		default:
X			break;
X	}
X}
X
X#if NeedFunctionPrototypes
Xvoid RedrawIntroduction(Display *display, Window window)
X#else
Xvoid RedrawIntroduction(display, window)
X	Display *display;
X	Window window;
X#endif
X{
X	DoIntroTitle(display, window);
X	DoBlocks(display, window);
X	DoText(display, window);
X	DoExplodeLeft(display, window);
X	DoExplodeRight(display, window);
X}
X
X#if NeedFunctionPrototypes
Xvoid FreeIntroduction(Display *display)
X#else
Xvoid FreeIntroduction(display)
X	Display *display;
X#endif
X{
X	int i;
X
X	for (i = 0; i < 10; i++)
X	{
X    	if (stars[i])	XFreePixmap(display, stars[i]);         
X    	if (starsM[i])	XFreePixmap(display, starsM[i]);         
X	}
X
X    if (bigtitlePixmap)		XFreePixmap(display, bigtitlePixmap);         
X	if (bigtitlePixmapM)	XFreePixmap(display, bigtitlePixmapM);
X}
X
X#if NeedFunctionPrototypes
Xvoid ResetIntroduction(void)
X#else
Xvoid ResetIntroduction()
X#endif
X{
X	IntroState = INTRO_TITLE;
X	explodeIndex = 0;
X	explodeBlock = 0;
X	nextFrame = frame + 10;
X	nextFrame2 = frame + 10;
X	startFrame = frame + 10;
X	endFrame = frame + 3000;
X}
X
X#if NeedFunctionPrototypes
Xvoid SetIntroWait(int newMode, int waitFrame)
X#else
Xvoid SetIntroWait(newMode, waitFrame)
X	int newMode;
X	int waitFrame;
X#endif
X{
X	waitingFrame = waitFrame;
X	waitMode = newMode;
X	IntroState = INTRO_WAIT;
X}
X
X#if NeedFunctionPrototypes
Xvoid DoIntroWait(void)
X#else
Xvoid DoIntroWait()
X#endif
X{
X	if (frame == waitingFrame)
X		IntroState = waitMode;
X}
END_OF_FILE
  if test 13916 -ne `wc -c <'intro.c'`; then
    echo shar: \"'intro.c'\" unpacked with wrong size!
  fi
  # end of 'intro.c'
fi
if test -f 'special.c' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'special.c'\"
else
  echo shar: Extracting \"'special.c'\" \(5332 characters\)
  sed "s/^X//" >'special.c' <<'END_OF_FILE'
X#include "copyright.h"
X
X/*
X *  Include file dependencies:
X */
X
X#include "init.h"
X#include "misc.h"
X#include "stage.h"
X#include "paddle.h"
X
X#include "special.h"
X
X/*
X *  Internal macro definitions:
X */
X
X#define GAP			5
X
X/*
X *  Internal type declarations:
X */
X
X/*
X *  Internal variable declarations:
X */
X
Xint multiBall;
Xint stickyBat;
Xint fastGun;
Xint noWalls;
Xint Killer;
Xint x2Bonus;
Xint x4Bonus;
X
X#if NeedFunctionPrototypes
Xvoid TurnSpecialsOff(Display *display)
X#else
Xvoid TurnSpecialsOff(display)
X	Display *display;
X#endif
X{
X	/* Turn all specials off */
X
X	ToggleFastGun(display, False);
X	ToggleWallsOn(display, False);
X	ToggleMultiBall(display, False);
X	ToggleStickyBat(display, False);
X	Togglex2Bonus(display, False);
X	Togglex4Bonus(display, False);
X	ToggleKiller(display, False);
X}
X
X#if NeedFunctionPrototypes
Xvoid Togglex2Bonus(Display *display, int state)
X#else
Xvoid Togglex2Bonus(display, state)
X	Display *display;
X	int state;
X#endif
X{
X	/* Set the x2Bonus flag to true or false */
X	x2Bonus = state;
X}
X
X#if NeedFunctionPrototypes
Xvoid ToggleKiller(Display *display, int state)
X#else
Xvoid ToggleKiller(display, state)
X	Display *display;
X	int state;
X#endif
X{
X	/* Set the Killer flag to true or false */
X	Killer = state;
X}
X
X#if NeedFunctionPrototypes
Xvoid Togglex4Bonus(Display *display, int state)
X#else
Xvoid Togglex4Bonus(display, state)
X	Display *display;
X	int state;
X#endif
X{
X	/* Set the x4Bonus flag to true or false */
X	x4Bonus = state;
X}
X
X#if NeedFunctionPrototypes
Xvoid ToggleStickyBat(Display *display, int state)
X#else
Xvoid ToggleStickyBat(display, state)
X	Display *display;
X	int state;
X#endif
X{
X	/* Set the stickyBat flag to true or false */
X	stickyBat = state;
X}
X
X#if NeedFunctionPrototypes
Xvoid ToggleMultiBall(Display *display, int state)
X#else
Xvoid ToggleMultiBall(display, state)
X	Display *display;
X	int state;
X#endif
X{
X	/* Set the multiBall flag to true or false */
X	multiBall = state;
X}
X
X#if NeedFunctionPrototypes
Xvoid ToggleFastGun(Display *display, int state)
X#else
Xvoid ToggleFastGun(display, state)
X	Display *display;
X	int state;
X#endif
X{
X	/* Set the fastgun flag to true or false */
X	fastGun = state;
X}
X
X#if NeedFunctionPrototypes
Xvoid ToggleWallsOn(Display *display, int state)
X#else
Xvoid ToggleWallsOn(display, state)
X	Display *display;
X	int state;
X#endif
X{
X	/* Set the noWalls flag to true or false */
X	noWalls = state;
X
X	if (noWalls == True)
X	{
X		/* Turn the wall colour to green */
X		XSetWindowBorder(display, playWindow, green);
X	}
X	else
X	{
X		/* Turn the wall colour to red */
X		XSetWindowBorder(display, playWindow, red);
X	}
X}
X
X#if NeedFunctionPrototypes
Xvoid DrawSpecials(Display *display)
X#else
Xvoid DrawSpecials(display)
X	Display *display;
X#endif
X{
X	int y = 3;
X	int x = 5;
X	char string[80];
X
X	/* Clear the special window */
X	/*XClearWindow(display, specialWindow);*/
X
X	strcpy(string, "Reverse");
X	if (reverseOn == True)
X		DrawShadowText(display, specialWindow, copyFont, 
X			string, x, y, yellow);
X	else
X		DrawShadowText(display, specialWindow, copyFont, 
X			string, x, y, white);
X
X	y += copyFont->ascent + GAP;
X
X	strcpy(string, "Sticky");
X	if (stickyBat == True)
X		DrawShadowText(display, specialWindow, copyFont, 
X			string, x, y, yellow);
X	else
X		DrawShadowText(display, specialWindow, copyFont, 
X			string, x, y, white);
X
X	x = 55; y = 3;
X
X	strcpy(string, "MultiBall");
X	if (multiBall == True)
X		DrawShadowText(display, specialWindow, copyFont, 
X			string, x, y, yellow);
X	else
X		DrawShadowText(display, specialWindow, copyFont, 
X			string, x, y, white);
X
X	y += copyFont->ascent + GAP;
X
X	strcpy(string, "FastGun");
X	if (fastGun == True)
X		DrawShadowText(display, specialWindow, copyFont, 
X			string, x, y, yellow);
X	else
X		DrawShadowText(display, specialWindow, copyFont, 
X			string, x, y, white);
X
X	x = 110; y = 3;
X
X	strcpy(string, "NoWall");
X	if (noWalls == True)
X		DrawShadowText(display, specialWindow, copyFont, 
X			string, x, y, yellow);
X	else
X		DrawShadowText(display, specialWindow, copyFont, 
X			string, x, y, white);
X
X	y += copyFont->ascent + GAP;
X
X	strcpy(string, "Killer");
X	if (Killer == True)
X		DrawShadowText(display, specialWindow, copyFont, 
X			string, x, y, yellow);
X	else
X		DrawShadowText(display, specialWindow, copyFont, 
X			string, x, y, white);
X
X	x = 155; y = 3;
X
X	strcpy(string, "x2");
X	if (x2Bonus == True)
X		DrawShadowText(display, specialWindow, copyFont, 
X			string, x, y, yellow);
X	else
X		DrawShadowText(display, specialWindow, copyFont, 
X			string, x, y, white);
X
X	y += copyFont->ascent + GAP;
X
X	strcpy(string, "x4");
X	if (x4Bonus == True)
X		DrawShadowText(display, specialWindow, copyFont, 
X			string, x, y, yellow);
X	else
X		DrawShadowText(display, specialWindow, copyFont, 
X			string, x, y, white);
X}
X
X
X#if NeedFunctionPrototypes
Xvoid RandomDrawSpecials(Display *display)
X#else
Xvoid RandomDrawSpecials(display)
X	Display *display;
X#endif
X{
X	int n;
X
X	/* Randomly change the specials to flash on and off */
X	n = rand() % 100;
X	multiBall = n > 50 ? True : False;
X	n = rand() % 100;
X	stickyBat = n > 50 ? True : False;
X	n = rand() % 100;
X	Killer = n > 50 ? True : False;
X	n = rand() % 100;
X	x2Bonus = n > 50 ? True : False;
X	n = rand() % 100;
X	x4Bonus = n > 50 ? True : False;
X	n = rand() % 100;
X	fastGun = n > 50 ? True : False;
X	n = rand() % 100;
X	noWalls = n > 50 ? True : False;
X	n = rand() % 100;
X	reverseOn = n > 50 ? True : False;
X
X	DrawSpecials(display);
X}
END_OF_FILE
  if test 5332 -ne `wc -c <'special.c'`; then
    echo shar: \"'special.c'\" unpacked with wrong size!
  fi
  # end of 'special.c'
fi
echo shar: End of archive 15 \(of 26\).
cp /dev/null ark15isdone
MISSING=""
for I in 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 ; do
    if test ! -f ark${I}isdone ; then
	MISSING="${MISSING} ${I}"
    fi
done
if test "${MISSING}" = "" ; then
    echo You have unpacked all 26 archives.
    rm -f ark[1-9]isdone ark[1-9][0-9]isdone
    echo "merging split files..."
    cat blocks.c[12] > blocks.c
    rm blocks.c[12]
    echo "blocks.c done"
    cat bitmaps/earth.xpm.Z.u.[ab] > bitmaps/earth.xpm.Z.uue
    rm bitmaps/earth.xpm.Z.u.[ab]
    echo "bitmaps/earth.xpm.Z.uue done"
else
    echo You still must unpack the following archives:
    echo "        " ${MISSING}
fi
exit 0
exit 0 # Just in case...
-- 
  // chris@Sterling.COM           | Send comp.sources.x submissions to:
\X/  Amiga - The only way to fly! |    sources-x@sterling.com
 "It's intuitively obvious to the |
  most casual observer..."        | GCS d+/-- p+ c++ l+ m+ s++/+ g+ w+ t+ r+ x+
