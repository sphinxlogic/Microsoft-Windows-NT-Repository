Newsgroups: comp.sources.x
From: ferguson@cs.rochester.edu (George Ferguson)
Subject: v20i029:  xarchie - An X browser interface to Archie, v2.0.6, Part01/24
Message-ID: <csx-v20i029=xarchie.173029@sparky.IMD.Sterling.COM>
X-Md4-Signature: a0930e892f96553917e7905c773ccc4e
Sender: chris@sparky.imd.sterling.com (Chris Olson)
Organization: Sterling Software
Date: Tue, 15 Jun 1993 22:31:02 GMT
Approved: chris@sparky.imd.sterling.com

Submitted-by: ferguson@cs.rochester.edu (George Ferguson)
Posting-number: Volume 20, Issue 29
Archive-name: xarchie/part01
Environment: X11
Supersedes: xarchie: Volume 14, Issue 82-90

Submitted-by: ferguson@cs.rochester.edu
Archive-name: xarchie-2.0.6/part01

This set of postings marks the official release of xarchie version
2.0.6. You can get the tarfile distribution and patches from previous
version 2 releases from export.lcs.mit.edu. I include a snippet from
the manpage for those unfamiliar with archie or xarchie.

IMPORTANT NOTE: You *cannot* build this distribution immediately by
  typing "xmkmf". Due to portability issues and the large amount of
  platform-dependent networking code, you *must* run the "configure"
  script first. See the file INSTALL for complete details on building
  and testing xarchie. Reports that indicate that either the INSTALL or
  the PROBLEMS file were not consulted will be summarily sent to
  /dev/null.

>From the manpage:
  Xarchie is an X11 browser interface to the Archie Internet information
  system using the Prospero virtual filesystem protocol.  Archie
  provides information about files available for ftp anywhere on the
  Internet; Xarchie displays this information using an easy-to-use,
  point-and-click interface.  Xarchie allows you to further explore ftp
  sites by examining directories returned as query matches, and allows
  you to retrieve files located this way.

George

#!/bin/sh
# This is xarchie-2.0.6, a shell archive (produced by shar 3.49)
# To extract the files from this archive, save it to a file, remove
# everything above the "!/bin/sh" line above, and type "sh file_name".
#
# made 06/07/1993 17:08 UTC by ferguson@cs.rochester.edu
# Source directory /home/diamond/u11/ferguson/src/x/xarchie
#
# existing files will NOT be overwritten unless -c is specified
#
# This is part 1 of a multipart archive                                    
# do not concatenate these parts, unpack them in order with /bin/sh        
#
# This shar contains:
# length  mode       name
# ------ ---------- ------------------------------------------
#   7337 -rw-r--r-- xarchie-2.0.6/INSTALL
#   5723 -rw-r--r-- xarchie-2.0.6/INSTALL.GNU
#   7630 -rw-r--r-- xarchie-2.0.6/Imakefile
#   5109 -rw-r--r-- xarchie-2.0.6/MANIFEST
#  52457 -rw-r--r-- xarchie-2.0.6/Makefile
#   6768 -rw-r--r-- xarchie-2.0.6/Makefile.dst
#  13588 -rw-r--r-- xarchie-2.0.6/PROBLEMS
#  12456 -rw-r--r-- xarchie-2.0.6/README
#   1910 -rw-r--r-- xarchie-2.0.6/README.FILES
#   1409 -rw-r--r-- xarchie-2.0.6/README.PROSP
#  36627 -rw-r--r-- xarchie-2.0.6/Xarchie.ad
#  32017 -rw-r--r-- xarchie-2.0.6/Xarchie.ad.h
#   6460 -rw-r--r-- xarchie-2.0.6/about.c
#    208 -rw-r--r-- xarchie-2.0.6/about.h
#   3278 -rw-r--r-- xarchie-2.0.6/about.xbm
#   6248 -rw-r--r-- xarchie-2.0.6/actions.c
#    245 -rw-r--r-- xarchie-2.0.6/actions.h
#    897 -rw-r--r-- xarchie-2.0.6/alert.c
#    201 -rw-r--r-- xarchie-2.0.6/alert.h
#    972 -rw-r--r-- xarchie-2.0.6/appres.h
#   1882 -rw-r--r-- xarchie-2.0.6/archie.h
#   1929 -rw-r--r-- xarchie-2.0.6/atalloc.c
#  12889 -rw-r--r-- xarchie-2.0.6/browser.c
#    701 -rw-r--r-- xarchie-2.0.6/browser.h
#    884 -rw-r--r-- xarchie-2.0.6/busy.xbm
#   1757 -rw-r--r-- xarchie-2.0.6/config.h
#   1659 -rw-r--r-- xarchie-2.0.6/config.h.in
#  16545 -rwxr-xr-x xarchie-2.0.6/configure
#   1360 -rw-r--r-- xarchie-2.0.6/configure.in
#    875 -rw-r--r-- xarchie-2.0.6/confirm.c
#    194 -rw-r--r-- xarchie-2.0.6/confirm.h
#   2519 -rw-r--r-- xarchie-2.0.6/copyright.h
#   9438 -rw-r--r-- xarchie-2.0.6/db.c
#   1386 -rw-r--r-- xarchie-2.0.6/db.h
#    509 -rw-r--r-- xarchie-2.0.6/debug.h
#  34011 -rw-r--r-- xarchie-2.0.6/dirsend.c
#   8929 -rw-r--r-- xarchie-2.0.6/display-x.c
#   2521 -rw-r--r-- xarchie-2.0.6/display.h
#   8468 -rw-r--r-- xarchie-2.0.6/fchooser.c
#    988 -rw-r--r-- xarchie-2.0.6/fchooser.h
#   5892 -rw-r--r-- xarchie-2.0.6/file-panel.c
#    343 -rw-r--r-- xarchie-2.0.6/file-panel.h
#  11489 -rw-r--r-- xarchie-2.0.6/ftp-actions.c
#    262 -rw-r--r-- xarchie-2.0.6/ftp-actions.h
#  46597 -rw-r--r-- xarchie-2.0.6/ftp.c
#  10022 -rw-r--r-- xarchie-2.0.6/ftp.h
#   2068 -rw-r--r-- xarchie-2.0.6/get_pauth.c
#  14086 -rw-r--r-- xarchie-2.0.6/get_vdir.c
#  87771 -rw-r--r-- xarchie-2.0.6/help-text1.h
#    688 -rwxr-xr-x xarchie-2.0.6/help-text1.sh
#   1595 -rw-r--r-- xarchie-2.0.6/help-text2.h
#    487 -rwxr-xr-x xarchie-2.0.6/help-text2.sh
#   6746 -rw-r--r-- xarchie-2.0.6/help.c
#    202 -rw-r--r-- xarchie-2.0.6/help.h
#   1284 -rw-r--r-- xarchie-2.0.6/hostname.c
#    158 -rw-r--r-- xarchie-2.0.6/hostname.h
#   2560 -rw-r--r-- xarchie-2.0.6/inet_ntoa.c
#    379 -rw-r--r-- xarchie-2.0.6/m-defs.h
#   1247 -rw-r--r-- xarchie-2.0.6/m-file-panel.c
#   1381 -rw-r--r-- xarchie-2.0.6/m-file.c
#   1072 -rw-r--r-- xarchie-2.0.6/m-query.c
#  12891 -rw-r--r-- xarchie-2.0.6/m-settings.c
#   1979 -rw-r--r-- xarchie-2.0.6/menu.c
#    421 -rw-r--r-- xarchie-2.0.6/menu.h
#    377 -rw-r--r-- xarchie-2.0.6/patchlevel.h
#    987 -rw-r--r-- xarchie-2.0.6/pauthent.h
#   1512 -rw-r--r-- xarchie-2.0.6/pcompat.h
#   9027 -rw-r--r-- xarchie-2.0.6/perrmesg.c
#   4623 -rw-r--r-- xarchie-2.0.6/perrno.h
#  14346 -rw-r--r-- xarchie-2.0.6/pfs.h
#   3020 -rw-r--r-- xarchie-2.0.6/pmachine.h
#   3747 -rw-r--r-- xarchie-2.0.6/popups.c
#    350 -rw-r--r-- xarchie-2.0.6/popups.h
#   2159 -rw-r--r-- xarchie-2.0.6/pprot.h
#   1798 -rw-r--r-- xarchie-2.0.6/ptalloc.c
#  12690 -rw-r--r-- xarchie-2.0.6/query.c
#    347 -rw-r--r-- xarchie-2.0.6/query.h
#    519 -rw-r--r-- xarchie-2.0.6/rdgram.h
#  15953 -rw-r--r-- xarchie-2.0.6/regex.c
#    624 -rw-r--r-- xarchie-2.0.6/regex.h
#   1122 -rw-r--r-- xarchie-2.0.6/resolv.c
#   8181 -rw-r--r-- xarchie-2.0.6/saveload.c
#    261 -rw-r--r-- xarchie-2.0.6/saveload.h
#   1399 -rw-r--r-- xarchie-2.0.6/selectdefs.h
#   5127 -rw-r--r-- xarchie-2.0.6/selection.c
#    697 -rw-r--r-- xarchie-2.0.6/selection.h
#  22108 -rw-r--r-- xarchie-2.0.6/settings.c
#    628 -rw-r--r-- xarchie-2.0.6/settings.h
#    584 -rw-r--r-- xarchie-2.0.6/status.c
#    128 -rw-r--r-- xarchie-2.0.6/status.h
#   2123 -rw-r--r-- xarchie-2.0.6/stcopy.c
#    776 -rw-r--r-- xarchie-2.0.6/strcasecmp.c
#   1136 -rw-r--r-- xarchie-2.0.6/stringdefs.h
#  21453 -rw-r--r-- xarchie-2.0.6/support.c
#   1983 -rw-r--r-- xarchie-2.0.6/syntax.c
#    160 -rw-r--r-- xarchie-2.0.6/syntax.h
#    517 -rw-r--r-- xarchie-2.0.6/sysdefs.h
#   1727 -rw-r--r-- xarchie-2.0.6/syserr.c
#    321 -rw-r--r-- xarchie-2.0.6/syserr.h
#   1368 -rw-r--r-- xarchie-2.0.6/tilde.c
#    164 -rw-r--r-- xarchie-2.0.6/tilde.h
#  11840 -rw-r--r-- xarchie-2.0.6/types.c
#   1218 -rw-r--r-- xarchie-2.0.6/types.h
#   2234 -rw-r--r-- xarchie-2.0.6/udp.c
#   1030 -rw-r--r-- xarchie-2.0.6/username.c
#    158 -rw-r--r-- xarchie-2.0.6/username.h
#   7619 -rw-r--r-- xarchie-2.0.6/view-file.c
#    196 -rw-r--r-- xarchie-2.0.6/view-file.h
#   2137 -rw-r--r-- xarchie-2.0.6/vl_comp.c
#   2430 -rw-r--r-- xarchie-2.0.6/vlalloc.c
#   5440 -rw-r--r-- xarchie-2.0.6/weight.c
#    363 -rw-r--r-- xarchie-2.0.6/weight.h
#  21932 -rw-r--r-- xarchie-2.0.6/xarchie.c
#    817 -rw-r--r-- xarchie-2.0.6/xarchie.h
#  64512 -rw-r--r-- xarchie-2.0.6/xarchie.man
#    893 -rw-r--r-- xarchie-2.0.6/xarchie.xbm
#   1283 -rw-r--r-- xarchie-2.0.6/xcutbuf.c
#    841 -rw-r--r-- xarchie-2.0.6/xtypes.h
#   2166 -rw-r--r-- xarchie-2.0.6/xutil.c
#    557 -rw-r--r-- xarchie-2.0.6/xutil.h
#   2249 -rw-r--r-- xarchie-2.0.6/Ad2c/README
#    519 -rw-r--r-- xarchie-2.0.6/Ad2c/Imakefile
#   8882 -rw-r--r-- xarchie-2.0.6/Ad2c/Makefile
#   2347 -rw-r--r-- xarchie-2.0.6/Ad2c/ad2c.man
#   1641 -rwxr-xr-x xarchie-2.0.6/Ad2c/ad2c.script
#   2662 -rw-r--r-- xarchie-2.0.6/FWF/README
#   1088 -rw-r--r-- xarchie-2.0.6/FWF/README.FWF
#   1466 -rw-r--r-- xarchie-2.0.6/FWF/COPYRIGHT
#  12237 -rw-r--r-- xarchie-2.0.6/FWF/Dir/DirMgr.c
#   6706 -rw-r--r-- xarchie-2.0.6/FWF/Dir/DirMgr.h
#   2302 -rw-r--r-- xarchie-2.0.6/FWF/Dir/DirMgrT.c
#   6473 -rw-r--r-- xarchie-2.0.6/FWF/Dir/Directory.c
#   7501 -rw-r--r-- xarchie-2.0.6/FWF/Dir/Directory.h
#   2440 -rw-r--r-- xarchie-2.0.6/FWF/Dir/DirectoryT.c
#   1225 -rw-r--r-- xarchie-2.0.6/FWF/Dir/Imakefile
#  10638 -rw-r--r-- xarchie-2.0.6/FWF/Dir/Makefile
#   1172 -rw-r--r-- xarchie-2.0.6/FWF/Dir/Makefile.dst
#   3021 -rw-r--r-- xarchie-2.0.6/FWF/Dir/OldMakefile
#   3088 -rw-r--r-- xarchie-2.0.6/FWF/Dir/RegExp.c
#   2520 -rw-r--r-- xarchie-2.0.6/FWF/Dir/RegExp.h
#   1961 -rw-r--r-- xarchie-2.0.6/FWF/Dir/RegExpT.c
#  28282 -rw-r--r-- xarchie-2.0.6/FWF/FileChooser/FChooser.c
#   3001 -rw-r--r-- xarchie-2.0.6/FWF/FileChooser/FChooser.h
#   5827 -rw-r--r-- xarchie-2.0.6/FWF/FileChooser/FChooser.man
#   4545 -rw-r--r-- xarchie-2.0.6/FWF/FileChooser/FChooserP.h
#   7260 -rw-r--r-- xarchie-2.0.6/FWF/FileChooser/FChooserT.c
#   1720 -rw-r--r-- xarchie-2.0.6/FWF/FileChooser/FChooserT.man
#    426 -rw-r--r-- xarchie-2.0.6/FWF/FileChooser/Imakefile
#   9856 -rw-r--r-- xarchie-2.0.6/FWF/FileChooser/Makefile
#    391 -rw-r--r-- xarchie-2.0.6/FWF/FileChooser/Makefile.dst
#   2725 -rw-r--r-- xarchie-2.0.6/FWF/FileChooser/README
#    416 -rw-r--r-- xarchie-2.0.6/FWF/MultiList/Imakefile
#   9845 -rw-r--r-- xarchie-2.0.6/FWF/MultiList/Makefile
#    392 -rw-r--r-- xarchie-2.0.6/FWF/MultiList/Makefile.dst
#  55449 -rw-r--r-- xarchie-2.0.6/FWF/MultiList/MultiList.c
#  11706 -rw-r--r-- xarchie-2.0.6/FWF/MultiList/MultiList.h
#   6206 -rw-r--r-- xarchie-2.0.6/FWF/MultiList/MultiList.man
#   7023 -rw-r--r-- xarchie-2.0.6/FWF/MultiList/MultiListP.h
#   3020 -rw-r--r-- xarchie-2.0.6/FWF/MultiList/MultiListT.c
#    660 -rw-r--r-- xarchie-2.0.6/FWF/MultiList/MultiListT.man
#   1025 -rw-r--r-- xarchie-2.0.6/FWF/MultiList/README
#
if test -r _shar_seq_.tmp; then
	echo 'Must unpack archives in sequence!'
	echo Please unpack part `cat _shar_seq_.tmp` next
	exit 1
fi
# ============= xarchie-2.0.6/INSTALL ==============
if test ! -d 'xarchie-2.0.6'; then
    echo 'x - creating directory xarchie-2.0.6'
    mkdir 'xarchie-2.0.6'
fi
if test -f 'xarchie-2.0.6/INSTALL' -a X"$1" != X"-c"; then
	echo 'x - skipping xarchie-2.0.6/INSTALL (File already exists)'
	rm -f _shar_wnt_.tmp
else
> _shar_wnt_.tmp
echo 'x - extracting xarchie-2.0.6/INSTALL (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'xarchie-2.0.6/INSTALL' &&
X	      Installation Instructions for XARCHIE 2.0
X				   
X	      George Ferguson, ferguson@cs.rochester.edu
X				   
X			     23 Apr 1993
X
X
Please see the file README and the manpage regarding reporting problems.
Please read the file PROBLEMS before reporting anything.
-> If you don't have imake/xmkmf, see item (A) below.
X
1. Xarchie comes with a GNU autoconf-generated configure script that
X   will hopefully configure the distribution for your system
X   automatically. Complete generic details for running the script
X   are contained in the file INSTALL.GNU. Basically, you should run
X   the script by doing
X	% sh ./configure
X   to create the config.h file. This file is used both by C files and
X   by the Imakefile. You can edit it by hand to change anything that
X   the script got wrong (see (B), below).
X
X   Note: If you use "strange" compiler (that isn't cc or gcc), you
X   should set the environment variable CC appropriately before running
X   configure. Otherwise it will get things that require compilation
X   wrong.
X
X   Note: Using the configure options like "--prefix" will probably
X   set the install directories properly. See item (C) below.
X
X   If running configure yields sed errors, see the file PROBLEMS.
X
2. Execute
X   	% xmkmf
X   to create the Makefile. Alternatively,
X        % imake -DUseInstalled -I/usr/local/lib/X11/config
X   where the directory given with "-I" is where your Imake.tmpl and
X   Imake.rules live. If you have neither xmkmf nor imake, see (A)
X   below. 
X
3. Unless you commented out the use of both the MultiList and
X   FileChooser widgets in the Imakefile (see (C), below), execute
X	% make Makefiles
X   to run imake in the FWF/* subdirectories. Alternately, run it
X   (or xmkmf) in the subdirectories by hand.
X
4. Execute
X	% make depend
X   to add the dependencies to the Makefile. This is only necessary if
X   you change any of the files, including the app-defaults file Xarchie.ad
X   or the manpage. Note that if you change Xarchie.ad you will need
X   "ad2c" and if you change the manpage you will need to be able to run
X   the shell scripts "help-text[12].sh".
X
5. Make the package using
X	% make
X   You can try xarchie without installing it, provided that the
X   fallback resources have been compiled in using ad2c.
X
X   To experiment with different resource settings without recompiling,
X   edit Xarchie.ad and then do:
X	% ln -s Xarchie.ad Xarchie
X	% setenv XAPPLRESDIR $cwd
X   If you have a previous version of xarchie installed, you will need
X   to do
X	% setenv XFILESEARCHPATH $cwd
X   to prevent the old app-defaults (in the standard place, presumably,
X   since you installed them) from conflicting. Your mileage will vary
X   on this depending on your version of X.
X
6. Install the package using
X	% make install install.man
X   This will install the xarchie executable, the app-defaults file,
X   and the manpage.
X
NOTE: The Imakefile provides the target "World", which does the following:
X	% make -n World
X	make Makefile
X	make Makefiles
X	make depend
X	make clean
X	make
X
X
A. If you don't have imake/xmkmf, you'll have to work with the file
X   Makefile.dst. You should copy Makefile.dst to Makefile, and then
X   edit it to set the definitions of XINCS, XLIBS, etc., to reflect
X   the peculiarities of your X installation. Subdirectories also have
X   Makefile.dst files, which you will have to rename to Makefile. You
X   can do this with the command:
X	% make Makefiles
X   or
X	% make -f Makefile.dst Makefiles
X   if you didn't copy Makefile.dst to Makefile.
X
X   After that, try simply "make" (or "make -f Makefile.dst" if you
X   didn't copy it to Makefile). If there are problems, go through
X   the Makefile using the instructions in item (C) below (for
X   Imakefiles) as a guide. Most things are similar. NOTE: Without,
X   imake, Makefile.dst cannot use C preprocessor directives to
X   configure itself based on the config.h file created by the
X   configure script. You will have to adjust definitions accordingly,
X   using the values in config.h (for your system!) as a guide.
X
B. Running the configure script will generate a file "config.h" from
X   the template "config.h.in". It may not get everything right for
X   your system. If it doesn't, you'll have to edit "config.h" and
X   make the required changes. Each definition has a short comment
X   indicating the conditions under which it should be defined.
X
X   Be sure to run xmkmf/imake again after changing it.
X
X   One fairly common problem is that configure will decide that you
X   need to link with -lresolv and define NEED_LRESOLV in config.h.
X   This happens when the test program resolv.c either doesn't compile
X   or compiles but doesn't work properly. Normally, this means that
X   your system requires linking with libresolv.a to force DNS
X   nameserver lookups. If you don't have /usr/lib/libresolv.a (or some
X   local variant), or if resolv.c compiles and runs properly, you
X   shouldn't define NEED_LRESOLV.
X
C. The Imakefile uses definitions in "config.h" to setup a Makefile
X   that is correct for your system. In addition, there are several
X   parameters that you can change by editing the Imakefile directly,
X   although you shouldn't need to do so.
X
X   Note that the Imakefile uses the notation "/**/#" for comments --
X   the "/**/" is for cpp (so the "#" isn't interpreted as a
X   directive), the "#" is for make. You need to delete both parts to
X   "uncomment" a definition, unless it is explicitly indicated that
X   the "#" should be left for cpp (as in "#define").
X
X   o Set BINDIR, LIBDIR, and MANDIR if needed to change where the
X     stuff goes on "make install" and "make install.man".
X   o Xarchie uses the "ad2c" program to compile-in a set of default
X     resources. You should get a copy of ad2c in this distribution,
X     otherwise you may have to adjust the definition of AD2C. To not
X     compile-in any fallback resources, comment out the #include of
X     Xarchie.ad.h in file xarchie.c (see comments there).
X   o Change CDEBUGFLAGS as appropriate to override the default
X     debugging or optimization levels. You might also want to add a
X     definition of CC, or you can type "make CC=gcc", for example.
X   o By default, xarchie compiles the manpage into a set of C strings
X     that are used for the Help browser. If you simply can't handle
X     all that string data, comment out all the HELP definitions.
X   o If you understand and want to trace at the Prospero level,
X     uncomment the definition of PDEBUG.
X   o By default, xarchie uses some widgets from the Free Widget
X     Foundation. These can cause problems with some versions of X that
X     get upset about widget subclassing.
X     - The MultiList widget allows multiple selections in the browser.
X       To *not* use it, comment out the "#define MultiList" line (that
X       is, add "/**/" at the front or delete it).
X     - The FileChooser widgets allows you to use a hierarchical
X       filesystem browser for specifying filenames. It also uses
X       directory reading routines that may have portability problems.
X       To *not* use it, comment out the "#define FileSelector" line.
X
X   Finally, you may want to change defaults in Xarchie.ad. In
X   particular, you should set the default archie host as appropriate
X   for your location, and possibly the hostWeights also. See the man
X   page for details, and see the Imakefile regarding "ad2c".
SHAR_EOF
chmod 0644 xarchie-2.0.6/INSTALL ||
echo 'restore of xarchie-2.0.6/INSTALL failed'
Wc_c="`wc -c < 'xarchie-2.0.6/INSTALL'`"
test 7337 -eq "$Wc_c" ||
	echo 'xarchie-2.0.6/INSTALL: original size 7337, current size' "$Wc_c"
rm -f _shar_wnt_.tmp
fi
# ============= xarchie-2.0.6/INSTALL.GNU ==============
if test -f 'xarchie-2.0.6/INSTALL.GNU' -a X"$1" != X"-c"; then
	echo 'x - skipping xarchie-2.0.6/INSTALL.GNU (File already exists)'
	rm -f _shar_wnt_.tmp
else
> _shar_wnt_.tmp
echo 'x - extracting xarchie-2.0.6/INSTALL.GNU (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'xarchie-2.0.6/INSTALL.GNU' &&
This is a generic INSTALL file for utilities distributions.
If this package does not come with, e.g., installable documentation or
data files, please ignore the references to them below.
X
To compile this package:
X
1.  Configure the package for your system.  In the directory that this
file is in, type `./configure'.  If you're using `csh' on an old
version of System V, you might need to type `sh configure' instead to
prevent `csh' from trying to execute `configure' itself.
X
The `configure' shell script attempts to guess correct values for
various system-dependent variables used during compilation, and
creates the Makefile(s) (one in each subdirectory of the source
directory).  In some packages it creates a C header file containing
system-dependent definitions.  It also creates a file `config.status'
that you can run in the future to recreate the current configuration.
X
Running `configure' takes a minute or two.  While it is running, it
prints some messages that tell what it is doing.  If you don't want to
see the messages, run `configure' with its standard output redirected
to `/dev/null'; for example, `./configure >/dev/null'.
X
To compile the package in a different directory from the one
containing the source code, you must use a version of `make' that
supports the VPATH variable, such as GNU `make'.  `cd' to the directory
where you want the object files and executables to go and run
`configure'.  `configure' automatically checks for the source code in
the directory that `configure' is in and in `..'.  If for some reason
`configure' is not in the source code directory that you are
configuring, then it will report that it can't find the source code.
In that case, run `configure' with the option `--srcdir=DIR', where
DIR is the directory that contains the source code.
X
By default, `make install' will install the package's files in
/usr/local/bin, /usr/local/lib, /usr/local/man, etc.  You can specify
an installation prefix other than /usr/local by giving `configure' the
option `--prefix=PATH'.  Alternately, you can do so by giving a value
for the `prefix' variable when you run `make', e.g.,
X	make prefix=/usr/gnu
X
You can specify separate installation prefixes for
architecture-specific files and architecture-independent files.  If
you give `configure' the option `--exec-prefix=PATH' or set the
`make' variable `exec_prefix' to PATH, the package will use PATH as
the prefix for installing programs and libraries.  Data files and
documentation will still use the regular prefix.  Normally, all files
are installed using the regular prefix.
X
Another `configure' option is useful mainly in `Makefile' rules for
updating `config.status' and `Makefile'.  The `--no-create' option
figures out the configuration for your system and records it in
`config.status', without actually configuring the package (creating
`Makefile's and perhaps a configuration header file).  Later, you can
run `./config.status' to actually configure the package.  You can also
give `config.status' the `--recheck' option, which makes it re-run
`configure' with the same arguments you used before.  This option is
useful if you change `configure'.
X
Some packages pay attention to `--with-PACKAGE' options to `configure',
where PACKAGE is something like `gnu-libc' or `x' (for X windows).
The README should mention any --with- options that the package recognizes.
X
`configure' ignores any other arguments that you give it.
X
If your system requires unusual options for compilation or linking
that `configure' doesn't know about, you can give `configure' initial
values for some variables by setting them in the environment.  In
Bourne-compatible shells, you can do that on the command line like
this:
X	CC='gcc -traditional' DEFS=-D_POSIX_SOURCE ./configure
X
The `make' variables that you might want to override with environment
variables when running `configure' are:
X
(For these variables, any value given in the environment overrides the
value that `configure' would choose:)
CC		C compiler program.
X		Default is `cc', or `gcc' if `gcc' is in your PATH.
INSTALL		Program to use to install files.
X		Default is `install' if you have it, `cp' otherwise.
X
(For these variables, any value given in the environment is added to
the value that `configure' chooses:)
DEFS		Configuration options, in the form `-Dfoo -Dbar ...'
X		Do not use this variable in packages that create a
X		configuration header file.
LIBS		Libraries to link with, in the form `-lfoo -lbar ...'
X
If you need to do unusual things to compile the package, we encourage
you to figure out how `configure' could check whether to do them, and
mail diffs or instructions to the address given in the README so we
can include them in the next release.
X
2.  Type `make' to compile the package.  If you want, you can override
the `make' variables CFLAGS and LDFLAGS like this:
X
X	make CFLAGS=-O2 LDFLAGS=-s
X
3.  If the package comes with self-tests and you want to run them,
type `make check'.  If you're not sure whether there are any, try it;
if `make' responds with something like
X	make: *** No way to make target `check'.  Stop.
then the package does not come with self-tests.
X
4.  Type `make install' to install programs, data files, and
documentation.
X
5.  You can remove the program binaries and object files from the
source directory by typing `make clean'.  To also remove the
Makefile(s), the header file containing system-dependent definitions
(if the package uses one), and `config.status' (all the files that
`configure' created), type `make distclean'.
X
The file `configure.in' is used as a template to create `configure' by
a program called `autoconf'.  You will only need it if you want to
regenerate `configure' using a newer version of `autoconf'.
SHAR_EOF
chmod 0644 xarchie-2.0.6/INSTALL.GNU ||
echo 'restore of xarchie-2.0.6/INSTALL.GNU failed'
Wc_c="`wc -c < 'xarchie-2.0.6/INSTALL.GNU'`"
test 5723 -eq "$Wc_c" ||
	echo 'xarchie-2.0.6/INSTALL.GNU: original size 5723, current size' "$Wc_c"
rm -f _shar_wnt_.tmp
fi
# ============= xarchie-2.0.6/Imakefile ==============
if test -f 'xarchie-2.0.6/Imakefile' -a X"$1" != X"-c"; then
	echo 'x - skipping xarchie-2.0.6/Imakefile (File already exists)'
	rm -f _shar_wnt_.tmp
else
> _shar_wnt_.tmp
echo 'x - extracting xarchie-2.0.6/Imakefile (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'xarchie-2.0.6/Imakefile' &&
/**/#
/**/# Imakefile for xarchie : X11 Browser interface to Archie
/**/#
/**/# George Ferguson, ferguson@cs.rochester.edu, 12 Sep 1991.
/**/# Version 2.0: 23 Apr 1993.
/**/#
/**/# Unless otherwise indicated, you have to delete both `/**/' and the
/**/# leading `#' sign to uncomment something. To comment something out,
/**/# you need to add both the `/**/' (for cpp via imake) and `#' (for
/**/# make). Just for completeness, if you're reading this in a Makefile,
/**/# there will be some empty `' things above -- see the Imakefile.
/**/#
X
#include "config.h"
X
/**/# Where do you want this stuff? Uncomment and adjust these to change the
/**/# destinations of "make install" and "make install.man" if the defaults
/**/# are not satisfactory.
/**/#BINDIR = bin
/**/#MANDIR = man/man1
/**/# Use this for R5
/**/#MANSUFFIX = 1
/**/# Use this for R4 (leave one # sign since these are cpp commands for imake)
/**/##undef ManSuffix
/**/##define ManSuffix 1
X
/**/# Where is the app-defaults to C converter?
/**/# Only needed if you change the app-defaults file Xarchie.ad and want the
/**/# changes compiled into the program. If you don't have ad2c you should
/**/# remove the extra clean target for Xarchie.ad.h below. If you lose
/**/# Xarchie.ad.h and can't remake it, create it to be an empty file. Of
/**/# course then you'll have to be able to find the resource file at run time.
/**/# If your ad2c came from this xarchie distribution, then use the following
/**/# target, otherwise change it to reflect where you put ad2c.
AD2C = Ad2c/ad2c.script
X
/**/# How excited are you about debugging? This can be -g, -O, or nothing.
/**/#CDEBUGFLAGS = -g
X
/**/# If the help strings make your executable too large, disable the
/**/# online help by commenting out the following lines.
HELP = -DHELP
HELPC = help.c
HELPO = help.o
X
/**/# To enable Prospero tracing (controlled by the -debug option),
/**/# uncomment this.
/**/#PDEBUG = -DDEBUG
X
/**/# Does your system have re_comp() and re_exec(), or regcmp() and regex()
/**/# [in the case of A/UX]? If not, adjust the following definitions.
#if !defined(HAVE_RE_COMP) || !defined(HAVE_REGCMP)
REGEXC = regex.c
REGEXO = regex.o
#endif
X
/**/# If you don't have <sys/param.h> to define MAXPATHLEN, then adjust
/**/# the following definition.
#ifndef HAVE_SYS_PARAM_H
MAXPATHLEN = -DMAXPATHLEN=256
#endif
X
/**/# If you don't have strcasecmp() and strncasecmp(), adjust the
/**/# following definitions:
#ifndef HAVE_STRCASECMP
STRCASECMP = -DSTRCASECMP
STRCASECMPC = strcasecmp.c
STRCASECMPO = strcasecmp.o
#endif
X
/**/# If your system does not use DNS hostname lookup by default, you
/**/# need to uncomment the following definition. This will be apparent
/**/# if the program builds but gives the error: "Can't resolve hostname".
/**/# You can test this by building and running resolv.c.
#ifdef NEED_LRESOLV
RESOLV_LIB = -lresolv
#endif
X
/**/# You can enable the use of a FileChooser widget for dialogs that
/**/# require a filename (Save, Load, Write, etc). If your system has
/**/# trouble with the subclassing of widgets for the FileChooser
/**/# class or with the device-independent directory routines in FWF/Dir,
/**/# you should remove the #define of UseFileChooser.
/**/# NOTE: If you are reading this in the Makefile and nothing follows,
/**/#       then use of the FileChooser widget was disabled in the Imakefile.
#define UseFileChooser
#ifdef UseFileChooser
FCHOOSER_DEF = -DFILECHOOSER
FCHOOSER_DIR = FWF/FileChooser
FCHOOSER_INC = -I$(FCHOOSER_DIR)
FCHOOSER_LIB = -L$(FCHOOSER_DIR) -lFChooser
FCHOOSER_DEP = $(FCHOOSER_DIR)/libFChooser.a
DIR_DIR =     FWF/Dir
DIR_INC =     -I$(DIR_DIR)
DIR_LIB =     -L$(DIR_DIR) -lDir
DIR_DEP =     $(DIR_DIR)/libDir.a
FCHOOSER_DIRS = $(FCHOOSER_DIR) $(DIR_DIR)
FCHOOSER_INCS = $(FCHOOSER_INC) $(DIR_INC)
FCHOOSER_LIBS = $(FCHOOSER_LIB) $(DIR_LIB)
FCHOOSER_DEPS = $(FCHOOSER_DEP) $(DIR_DEP)
#endif
X
/**/# You want to use the MultiList widget if possible. If you have problems
/**/# with the subclassing in your version of X, you can use the regular
/**/# Athena List widget by removing the #define of UseMultiList. Of course
/**/# then you will not be able to make multiple selections.
/**/# NOTE: If you are reading this in the Makefile and nothing follows,
/**/#       then use of the MultiList widget was disabled in the Imakefile.
#define UseMultiList
#ifdef UseMultiList
MULTILIST_DEF =	-DMULTILIST
MULTILIST_DIR =	FWF/MultiList
MULTILIST_INC =	-I$(MULTILIST_DIR)
MULTILIST_LIB =	-L$(MULTILIST_DIR) -lMultiList
MULTILIST_DEP =	$(MULTILIST_DIR)/libMultiList.a
#endif
X
/**/#########################################################################
/**/# Nothing to change below here...
X
PSRCS = atalloc.c dirsend.c get_pauth.c get_vdir.c perrmesg.c ptalloc.c \
X	$(REGEXC) stcopy.c support.c vl_comp.c vlalloc.c
CSRCS = query.c browser.c db.c selection.c status.c saveload.c \
X	inet_ntoa.c hostname.c username.c \
X	weight.c ftp.c syserr.c $(STRCASECMPC)
XXSRCS = xarchie.c display-x.c actions.c ftp-actions.c types.c \
X	settings.c file-panel.c view-file.c about.c $(HELPC) \
X	menu.c m-file.c m-query.c m-settings.c m-file-panel.c \
X	fchooser.c popups.c alert.c confirm.c syntax.c xutil.c tilde.c
X
POBJS = atalloc.o dirsend.o get_pauth.o get_vdir.o perrmesg.o ptalloc.o \
X	$(REGEXO) stcopy.o support.o vl_comp.o vlalloc.o
COBJS = query.o browser.o db.o selection.o status.o saveload.o \
X	inet_ntoa.o hostname.o username.o \
X	weight.o ftp.o syserr.o $(STRCASECMPO)
XXOBJS = xarchie.o display-x.o actions.o ftp-actions.o types.o \
X	settings.o file-panel.o view-file.o about.o $(HELPO) \
X	menu.o m-file.o m-query.o m-settings.o m-file-panel.o \
X	fchooser.o popups.o alert.o confirm.o syntax.o xutil.o tilde.o
X
SRCS = $(PSRCS) $(CSRCS) $(XSRCS)
OBJS = $(POBJS) $(COBJS) $(XOBJS)
X
DEFINES =	-DARCHIE -DXARCHIE -DX11 $(MAXPATHLEN) $(STRCASECMP) \
X		$(HELP) $(FCHOOSER_DEF) $(MULTILIST_DEF)
INCLUDES =	-I. $(FCHOOSER_INCS) $(MULTILIST_INC)
DEPLIBS =	$(FCHOOSER_DEPS) $(MULTILIST_DEP) XawClientDepLibs
LOCAL_LIBRARIES=$(FCHOOSER_LIBS) $(MULTILIST_LIB) XawClientLibs $(RESOLV_LIB)
X
#ifdef UseMultiList
#ifdef UseFileChooser
SUBDIRS = $(FCHOOSER_DIRS) $(MULTILIST_DIR)
#else /* UseMultiList && !UseFileChooser */
SUBDIRS = $(MULTILIST_DIR)
#endif /* UseMultiList && !UseFileChooser */
#else /* !UseMultiList */
#ifdef UseFileChooser
SUBDIRS = $(FCHOOSER_DIRS)
#endif /* !UseMultiList && UseFileChooser */
#endif /* !UseMultiList */
X
#if defined(UseMultiList) || defined(UseFileChooser)
#define IHaveSubdirs
#define PassCDebugFlags 'CDEBUGFLAGS=$(CDEBUGFLAGS)' 'CC=$(CC)'
#endif
X
ComplexProgramTarget(xarchie)
InstallAppDefaults(Xarchie)
SpecialObjectRule($(POBJS),,$(PDEBUG))
X
#ifdef UseMultiList
$(MULTILIST_DEP):
X	(cd $(MULTILIST_DIR); $(MAKE) PassCDebugFlags)
#endif
X
#ifdef UseFileChooser
$(FCHOOSER_DEP):
X	(cd $(FCHOOSER_DIR); $(MAKE) PassCDebugFlags)
$(DIR_DEP):
X	(cd $(DIR_DIR); $(MAKE) PassCDebugFlags)
#endif
X
/**/#
/**/# Make C code for fallback resources from application resource file
/**/#
XXarchie.ad.h: Xarchie.ad
X	$(AD2C) Xarchie.ad >Xarchie.ad.h
X
/**/#
/**/# Make Help text from manpage
/**/#
help-text1.h: xarchie.man
X	./help-text1.sh >help-text1.h
X
help-text2.h: help-text1.h
X	./help-text2.sh <help-text1.h >help-text2.h
X
/**/#
/**/# What to do when there's nothing to do...
/**/#
World:
X	make Makefile
X	make Makefiles
X	make depend
X	make clean
X	make
X
/**/#
/**/# For debugging with Saber
/**/#
saberload:
X	# setopt ansi
X	# source xsaber.suppress
X	# load -DNeedFunctionPrototypes $(ALLDEFINES) $(HELP) $(SRCS)
X	# cd FWF/MultiList
X	# make saber
X	# cd ../Dir
X	# make saber
X	# cd ../FileChooser
X	# make saber
X	# cd ../..
X	# load XawClientLibs
SHAR_EOF
chmod 0644 xarchie-2.0.6/Imakefile ||
echo 'restore of xarchie-2.0.6/Imakefile failed'
Wc_c="`wc -c < 'xarchie-2.0.6/Imakefile'`"
test 7630 -eq "$Wc_c" ||
	echo 'xarchie-2.0.6/Imakefile: original size 7630, current size' "$Wc_c"
rm -f _shar_wnt_.tmp
fi
# ============= xarchie-2.0.6/MANIFEST ==============
if test -f 'xarchie-2.0.6/MANIFEST' -a X"$1" != X"-c"; then
	echo 'x - skipping xarchie-2.0.6/MANIFEST (File already exists)'
	rm -f _shar_wnt_.tmp
else
> _shar_wnt_.tmp
echo 'x - extracting xarchie-2.0.6/MANIFEST (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'xarchie-2.0.6/MANIFEST' &&
INSTALL			Installation instructions
INSTALL.GNU		Generic installation instructions (from autoconf)
Imakefile		Main Imakefile
MANIFEST		This file
Makefile		Makefile created by xmkmf
Makefile.dst		Makefile for the imake-impaired
PROBLEMS		Common problems and frequently-asked questions
README			Introductory text
README.FILES		Text describing code relationships for the clients
README.PROSP		Text describing Prospero
XXarchie.ad		Application default resource file
XXarchie.ad.h		Fallback resources created by ad2c
about.c			The "About" panel
about.h
about.xbm		Bitmap used on the About panel
actions.c		Some of the global action procedures
actions.h
alert.c			Popup click-to-remove alert box
alert.h
appres.h		Definition of the AppResources structure
archie.h		Prospero code
atalloc.c		Prospero code
browser.c		Display-independent browser code
browser.h
busy.xbm		Icon displayed while querying
config.h		Configuration settings (created by running configure)
config.h.in		Template used by configure to create config.h
configure		Configure script (generated by autoconf)
configure.in		Input for autoconf (not needed unless you run autoconf)
confirm.c		Popup yes/no confirmer
confirm.h
copyright.h		Copyright for Prospero code
db.c			Database routines
db.h
debug.h			DEBUG? macros if DEBUG defined
dirsend.c		Prospero code
display-x.c		Display functions for X11
display.h		Display-independent header file for display functions
fchooser.c		Xarchie use of FileChooser widget
fchooser.h
file-panel.c		The "Save-Load-Write" panel
file-panel.h
ftp-actions.c		Functions that connect xarchie to the FTP routines
ftp-actions.h
ftp.c			FTP client and interface functions
ftp.h
get_pauth.c		Prospero code
get_vdir.c		Prospero code
help-text1.h		Help text generated by help-text1.sh from xarchie.man
help-text1.sh
help-text2.h		Help topics generated by help-text2.sh from help-text1
help-text2.sh
help.c			The "Help" panel
help.h
hostname.c		Code to get a fully-qualified hostname, if possible
hostname.h
inet_ntoa.c		BSD freed sources replacement for inet_ntoa()
m-defs.h		Definitions for all the menus
m-file-panel.c		The menus of the "Save-Load-Write" panel
m-file.c		The "File" menu on the main panel
m-query.c		The "Query" menu on the main panel
m-settings.c		The "Settings" menu, submenus, and Settings Panel menus
menu.c			Generic menu routines
menu.h
patchlevel.h		Version id
pauthent.h		Prospero code
pcompat.h		Prospero code
perrmesg.c		Prospero code
perrno.h		Prospero code
pfs.h			Prospero code
pmachine.h		Prospero code (NOTE: no longer used, use config.h)
popups.c		Routines to build blocking popups
popups.h		Display-independent definitions for alerts, dialogs,...
pprot.h			Prospero code
ptalloc.c		Prospero code
query.c			Routines to query Archie, parse results, put in db
query.h
rdgram.h		Prospero code
regex.c			Henry Spencer's regexp routines, if you need them
regex.h
resolv.c		Test program to see if -lresolv is needed
saveload.c		Display-independent database I/O routines
saveload.h
selectdefs.h		Definitions of FD_SET, etc.
selection.c		Display-independent routines for browser selections
selection.h
settings.c		The "Settings" panel
settings.h
status.c		Display-independent status update routines
status.h
stcopy.c		Prospero code
strcasecmp.c		In case strcasecmp() is not in your library
stringdefs.h		Meta-header file for string functions
support.c		Prospero code
syntax.c		The usage message
syntax.h
sysdefs.h		Some definitions that are tough to find
syserr.c		Interface to errno and friends
syserr.h
tilde.c			Tilde expansion for filenames
tilde.h
types.c			Type definitions and converters
types.h
udp.c			Test program to see if UDP traffic is enabled
username.c		Code to get a username
username.h
view-file.c		Routines for popup file viewer windows
view-file.h
vl_comp.c		Prospero code
vlalloc.c		Prospero code
weight.c		Host weight routines
weight.h
xarchie.c		Defines main(), global data, main widgets, etc.
xarchie.h
xarchie.man		Manpage
xarchie.xbm		Icon displayed when not querying
xcutbuf.c		Sample program using cut buffer (pasteBuffer resource)
xtypes.h		Some X types for the display-independent modules
xutil.c			Misc. X functions
xutil.h
Ad2c/README		App-defaults to C converter package
Ad2c/Imakefile
Ad2c/Makefile
Ad2c/ad2c.man
Ad2c/ad2c.script
FWF/README		Free Widget Foundation code
FWF/README.FWF
FWF/COPYRIGHT
FWF/Dir/DirMgr.c
FWF/Dir/DirMgr.h
FWF/Dir/DirMgrT.c
FWF/Dir/Directory.c
FWF/Dir/Directory.h
FWF/Dir/DirectoryT.c
FWF/Dir/Imakefile
FWF/Dir/Makefile
FWF/Dir/Makefile.dst
FWF/Dir/OldMakefile
FWF/Dir/RegExp.c
FWF/Dir/RegExp.h
FWF/Dir/RegExpT.c
FWF/FileChooser/FChooser.c
FWF/FileChooser/FChooser.h
FWF/FileChooser/FChooser.man
FWF/FileChooser/FChooserP.h
FWF/FileChooser/FChooserT.c
FWF/FileChooser/FChooserT.man
FWF/FileChooser/Imakefile
FWF/FileChooser/Makefile
FWF/FileChooser/Makefile.dst
FWF/FileChooser/README
FWF/MultiList/Imakefile
FWF/MultiList/Makefile
FWF/MultiList/Makefile.dst
FWF/MultiList/MultiList.c
FWF/MultiList/MultiList.h
FWF/MultiList/MultiList.man
FWF/MultiList/MultiListP.h
FWF/MultiList/MultiListT.c
FWF/MultiList/MultiListT.man
FWF/MultiList/README
SHAR_EOF
chmod 0644 xarchie-2.0.6/MANIFEST ||
echo 'restore of xarchie-2.0.6/MANIFEST failed'
Wc_c="`wc -c < 'xarchie-2.0.6/MANIFEST'`"
test 5109 -eq "$Wc_c" ||
	echo 'xarchie-2.0.6/MANIFEST: original size 5109, current size' "$Wc_c"
rm -f _shar_wnt_.tmp
fi
# ============= xarchie-2.0.6/Makefile ==============
if test -f 'xarchie-2.0.6/Makefile' -a X"$1" != X"-c"; then
	echo 'x - skipping xarchie-2.0.6/Makefile (File already exists)'
	rm -f _shar_wnt_.tmp
else
> _shar_wnt_.tmp
echo 'x - extracting xarchie-2.0.6/Makefile (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'xarchie-2.0.6/Makefile' &&
# Makefile generated by imake - do not edit!
# $XConsortium: imake.c,v 1.65 91/07/25 17:50:17 rws Exp $
#
# The cpp used on this machine replaces all newlines and multiple tabs and
# spaces in a macro expansion with a single space.  Imake tries to compensate
# for this, but is not always successful.
#
X
# -------------------------------------------------------------------------
# Makefile generated from "Imake.tmpl" and <Imakefile>
# $XConsortium: Imake.tmpl,v 1.139 91/09/16 08:52:48 rws Exp $
#
# Platform-specific parameters may be set in the appropriate <vendor>.cf
# configuration files.  Site-specific parameters should be set in the file
# site.def.  Full rebuilds are recommended if any parameters are changed.
#
# If your C preprocessor does not define any unique symbols, you will need
# to set BOOTSTRAPCFLAGS when rebuilding imake (usually when doing
# "make World" the first time).
#
X
# -------------------------------------------------------------------------
# site-specific configuration parameters that need to come before
# the platform-specific parameters - edit site.def to change
X
# site:  $XConsortium: site.def,v 1.2 91/07/30 20:26:44 rws Exp $
X
# -------------------------------------------------------------------------
# platform-specific configuration parameters - edit sun.cf to change
X
# platform:  $XConsortium: sun.cf,v 1.72.1.1 92/03/18 13:13:37 rws Exp $
X
# operating system:  SunOS 4.1.1
X
# $XConsortium: sunLib.rules,v 1.7 91/12/20 11:19:47 rws Exp $
X
# -------------------------------------------------------------------------
# site-specific configuration parameters that go after
# the platform-specific parameters - edit site.def to change
X
# site:  $XConsortium: site.def,v 1.2 91/07/30 20:26:44 rws Exp $
X
X            SHELL = /bin/sh
X
X              TOP = .
X      CURRENT_DIR = .
X
X               AR = ar clq
X  BOOTSTRAPCFLAGS =
X               CC = cc
X               AS = as
X
X         COMPRESS = compress
X              CPP = /lib/cpp $(STD_CPP_DEFINES)
X    PREPROCESSCMD = cc -E $(STD_CPP_DEFINES)
X          INSTALL = install
X               LD = ld
X             LINT = lint
X      LINTLIBFLAG = -C
X         LINTOPTS = -axz
X               LN = ln -s
X             MAKE = make
X               MV = mv
X               CP = cp
X
X           RANLIB = ranlib
X  RANLIBINSTFLAGS =
X
X               RM = rm -f
X            TROFF = psroff
X         MSMACROS = -ms
X              TBL = tbl
X              EQN = eqn
X     STD_INCLUDES =
X  STD_CPP_DEFINES =
X      STD_DEFINES =
X EXTRA_LOAD_FLAGS =
X  EXTRA_LIBRARIES =
X             TAGS = ctags
X
X    SHAREDCODEDEF = -DSHAREDCODE
X         SHLIBDEF = -DSUNSHLIB
X
X    PROTO_DEFINES =
X
X     INSTPGMFLAGS =
X
X     INSTBINFLAGS = -m 0755
X     INSTUIDFLAGS = -m 4755
X     INSTLIBFLAGS = -m 0644
X     INSTINCFLAGS = -m 0444
X     INSTMANFLAGS = -m 0444
X     INSTDATFLAGS = -m 0444
X    INSTKMEMFLAGS = -g kmem -m 2755
X
X      PROJECTROOT = /usr/staff
X
X     TOP_INCLUDES = -I$(INCROOT)
X
X      CDEBUGFLAGS = -O
X        CCOPTIONS = -pipe
X
X      ALLINCLUDES = $(INCLUDES) $(EXTRA_INCLUDES) $(TOP_INCLUDES) $(STD_INCLUDES)
X       ALLDEFINES = $(ALLINCLUDES) $(STD_DEFINES) $(EXTRA_DEFINES) $(PROTO_DEFINES) $(DEFINES)
X           CFLAGS = $(CDEBUGFLAGS) $(CCOPTIONS) $(ALLDEFINES)
X        LINTFLAGS = $(LINTOPTS) -DLINT $(ALLDEFINES)
X
X           LDLIBS = $(SYS_LIBRARIES) $(EXTRA_LIBRARIES)
X
X        LDOPTIONS = $(CDEBUGFLAGS) $(CCOPTIONS) $(LOCAL_LDFLAGS) -L$(USRLIBDIR)
X
X   LDCOMBINEFLAGS = -X -r
X      DEPENDFLAGS =
X
X        MACROFILE = sun.cf
X           RM_CMD = $(RM) *.CKP *.ln *.BAK *.bak *.o core errs ,* *~ *.a .emacs_* tags TAGS make.log MakeOut
X
X    IMAKE_DEFINES =
X
X         IRULESRC = $(CONFIGDIR)
X        IMAKE_CMD = $(IMAKE) -DUseInstalled -I$(IRULESRC) $(IMAKE_DEFINES)
X
X     ICONFIGFILES = $(IRULESRC)/Imake.tmpl $(IRULESRC)/Imake.rules \
X			$(IRULESRC)/Project.tmpl $(IRULESRC)/site.def \
X			$(IRULESRC)/$(MACROFILE) $(EXTRA_ICONFIGFILES)
X
# -------------------------------------------------------------------------
# X Window System Build Parameters
# $XConsortium: Project.tmpl,v 1.138 91/09/10 09:02:12 rws Exp $
X
# -------------------------------------------------------------------------
# X Window System make variables; this need to be coordinated with rules
X
X          PATHSEP = /
X        USRLIBDIR = /usr/staff/lib
X           BINDIR = /usr/staff/bin
X          INCROOT = /usr/staff/include
X     BUILDINCROOT = $(TOP)
X      BUILDINCDIR = $(BUILDINCROOT)/X11
X      BUILDINCTOP = ..
X           INCDIR = $(INCROOT)/X11
X           ADMDIR = /usr/adm
X           LIBDIR = $(USRLIBDIR)/X11
X        CONFIGDIR = $(LIBDIR)/config
X       LINTLIBDIR = $(USRLIBDIR)/lint
X
X          FONTDIR = $(LIBDIR)/fonts
X         XINITDIR = $(LIBDIR)/xinit
X           XDMDIR = $(LIBDIR)/xdm
X           TWMDIR = $(LIBDIR)/twm
X          MANPATH = /usr/staff/man
X    MANSOURCEPATH = $(MANPATH)/man
X        MANSUFFIX = 1
X     LIBMANSUFFIX = 3
X           MANDIR = $(MANSOURCEPATH)$(MANSUFFIX)
X        LIBMANDIR = $(MANSOURCEPATH)$(LIBMANSUFFIX)
X           NLSDIR = $(LIBDIR)/nls
X        PEXAPIDIR = $(LIBDIR)/PEX
X      XAPPLOADDIR = $(LIBDIR)/app-defaults
X       FONTCFLAGS = -t
X
X     INSTAPPFLAGS = $(INSTDATFLAGS)
X
X            IMAKE = imake
X           DEPEND = makedepend
X              RGB = rgb
X
X            FONTC = bdftopcf
X
X        MKFONTDIR = mkfontdir
X        MKDIRHIER = /bin/sh $(BINDIR)/mkdirhier
X
X        CONFIGSRC = $(TOP)/config
X       DOCUTILSRC = $(TOP)/doc/util
X        CLIENTSRC = $(TOP)/clients
X          DEMOSRC = $(TOP)/demos
X           LIBSRC = $(TOP)/lib
X          FONTSRC = $(TOP)/fonts
X       INCLUDESRC = $(TOP)/X11
X        SERVERSRC = $(TOP)/server
X          UTILSRC = $(TOP)/util
X        SCRIPTSRC = $(UTILSRC)/scripts
X       EXAMPLESRC = $(TOP)/examples
X       CONTRIBSRC = $(TOP)/../contrib
X           DOCSRC = $(TOP)/doc
X           RGBSRC = $(TOP)/rgb
X        DEPENDSRC = $(UTILSRC)/makedepend
X         IMAKESRC = $(CONFIGSRC)
X         XAUTHSRC = $(LIBSRC)/Xau
X          XLIBSRC = $(LIBSRC)/X
X           XMUSRC = $(LIBSRC)/Xmu
X       TOOLKITSRC = $(LIBSRC)/Xt
X       AWIDGETSRC = $(LIBSRC)/Xaw
X       OLDXLIBSRC = $(LIBSRC)/oldX
X      XDMCPLIBSRC = $(LIBSRC)/Xdmcp
X      BDFTOSNFSRC = $(FONTSRC)/bdftosnf
X      BDFTOSNFSRC = $(FONTSRC)/clients/bdftosnf
X      BDFTOPCFSRC = $(FONTSRC)/clients/bdftopcf
X     MKFONTDIRSRC = $(FONTSRC)/clients/mkfontdir
X         FSLIBSRC = $(FONTSRC)/lib/fs
X    FONTSERVERSRC = $(FONTSRC)/server
X     EXTENSIONSRC = $(TOP)/extensions
X         XILIBSRC = $(EXTENSIONSRC)/lib/xinput
X      PHIGSLIBSRC = $(EXTENSIONSRC)/lib/PEX
X
# $XConsortium: sunLib.tmpl,v 1.14.1.1 92/03/17 14:58:46 rws Exp $
X
SHLIBLDFLAGS = -assert pure-text
PICFLAGS = -pic
X
X  DEPEXTENSIONLIB =
X     EXTENSIONLIB = -lXext
X
X          DEPXLIB = $(DEPEXTENSIONLIB)
X             XLIB = $(EXTENSIONLIB) -lX11
X
X        DEPXMULIB = $(USRLIBDIR)/libXmu.sa.$(SOXMUREV)
X       XMULIBONLY = -lXmu
X           XMULIB = -lXmu
X
X       DEPOLDXLIB =
X          OLDXLIB = -loldX
X
X      DEPXTOOLLIB = $(USRLIBDIR)/libXt.sa.$(SOXTREV)
X         XTOOLLIB = -lXt
X
X        DEPXAWLIB = $(USRLIBDIR)/libXaw.sa.$(SOXAWREV)
X           XAWLIB = -lXaw
X
X        DEPXILIB =
X           XILIB = -lXi
X
X        SOXLIBREV = 4.10
X          SOXTREV = 4.10
X         SOXAWREV = 5.0
X        SOOLDXREV = 4.10
X         SOXMUREV = 4.10
X        SOXEXTREV = 4.10
X      SOXINPUTREV = 4.10
X
X      DEPXAUTHLIB = $(USRLIBDIR)/libXau.a
X         XAUTHLIB =  -lXau
X      DEPXDMCPLIB = $(USRLIBDIR)/libXdmcp.a
X         XDMCPLIB =  -lXdmcp
X
X        DEPPHIGSLIB = $(USRLIBDIR)/libphigs.a
X           PHIGSLIB =  -lphigs
X
X       DEPXBSDLIB = $(USRLIBDIR)/libXbsd.a
X          XBSDLIB =  -lXbsd
X
X LINTEXTENSIONLIB = $(LINTLIBDIR)/llib-lXext.ln
X         LINTXLIB = $(LINTLIBDIR)/llib-lX11.ln
X          LINTXMU = $(LINTLIBDIR)/llib-lXmu.ln
X        LINTXTOOL = $(LINTLIBDIR)/llib-lXt.ln
X          LINTXAW = $(LINTLIBDIR)/llib-lXaw.ln
X           LINTXI = $(LINTLIBDIR)/llib-lXi.ln
X        LINTPHIGS = $(LINTLIBDIR)/llib-lphigs.ln
X
X          DEPLIBS = $(DEPXAWLIB) $(DEPXMULIB) $(DEPXTOOLLIB) $(DEPXLIB)
X
X         DEPLIBS1 = $(DEPLIBS)
X         DEPLIBS2 = $(DEPLIBS)
X         DEPLIBS3 = $(DEPLIBS)
X
# -------------------------------------------------------------------------
# Imake rules for building libraries, programs, scripts, and data files
# rules:  $XConsortium: Imake.rules,v 1.123 91/09/16 20:12:16 rws Exp $
X
# -------------------------------------------------------------------------
# start of Imakefile
X
#
# Imakefile for xarchie : X11 Browser interface to Archie
#
# George Ferguson, ferguson@cs.rochester.edu, 12 Sep 1991.
# Version 2.0: 23 Apr 1993.
#
# Unless otherwise indicated, you have to delete both `' and the
# leading `#' sign to uncomment something. To comment something out,
# you need to add both the `' (for cpp via imake) and `#' (for
# make). Just for completeness, if you're reading this in a Makefile,
# there will be some empty `' things above -- see the Imakefile.
#
X
# Where do you want this stuff? Uncomment and adjust these to change the
# destinations of "make install" and "make install.man" if the defaults
# are not satisfactory.
#BINDIR = bin
#MANDIR = man/man1
# Use this for R5
#MANSUFFIX = 1
# Use this for R4 (leave one # sign since these are cpp commands for imake)
##undef 1
##define 1 1
X
# Where is the app-defaults to C converter?
# Only needed if you change the app-defaults file Xarchie.ad and want the
# changes compiled into the program. If you don't have ad2c you should
# remove the extra clean target for Xarchie.ad.h below. If you lose
# Xarchie.ad.h and can't remake it, create it to be an empty file. Of
# course then you'll have to be able to find the resource file at run time.
# If your ad2c came from this xarchie distribution, then use the following
# target, otherwise change it to reflect where you put ad2c.
AD2C = Ad2c/ad2c.script
X
# How excited are you about debugging? This can be -g, -O, or nothing.
#CDEBUGFLAGS = -g
X
# If the help strings make your executable too large, disable the
# online help by commenting out the following lines.
HELP = -DHELP
HELPC = help.c
HELPO = help.o
X
# To enable Prospero tracing (controlled by the -debug option),
# uncomment this.
#PDEBUG = -DDEBUG
X
# Does your system have re_comp() and re_exec(), or regcmp() and regex()
# [in the case of A/UX]? If not, adjust the following definitions.
X
REGEXC = regex.c
REGEXO = regex.o
X
# If you don't have <sys/param.h> to define MAXPATHLEN, then adjust
# the following definition.
X
# If you don't have strcasecmp() and strncasecmp(), adjust the
# following definitions:
X
# If your system does not use DNS hostname lookup by default, you
# need to uncomment the following definition. This will be apparent
# if the program builds but gives the error: "Can't resolve hostname".
# You can test this by building and running resolv.c.
X
# You can enable the use of a FileChooser widget for dialogs that
# require a filename (Save, Load, Write, etc). If your system has
# trouble with the subclassing of widgets for the FileChooser
# class or with the device-independent directory routines in FWF/Dir,
# you should remove the #define of UseFileChooser.
# NOTE: If you are reading this in the Makefile and nothing follows,
#       then use of the FileChooser widget was disabled in the Imakefile.
X
FCHOOSER_DEF = -DFILECHOOSER
FCHOOSER_DIR = FWF/FileChooser
FCHOOSER_INC = -I$(FCHOOSER_DIR)
FCHOOSER_LIB = -L$(FCHOOSER_DIR) -lFChooser
FCHOOSER_DEP = $(FCHOOSER_DIR)/libFChooser.a
DIR_DIR =     FWF/Dir
DIR_INC =     -I$(DIR_DIR)
DIR_LIB =     -L$(DIR_DIR) -lDir
DIR_DEP =     $(DIR_DIR)/libDir.a
FCHOOSER_DIRS = $(FCHOOSER_DIR) $(DIR_DIR)
FCHOOSER_INCS = $(FCHOOSER_INC) $(DIR_INC)
FCHOOSER_LIBS = $(FCHOOSER_LIB) $(DIR_LIB)
FCHOOSER_DEPS = $(FCHOOSER_DEP) $(DIR_DEP)
X
# You want to use the MultiList widget if possible. If you have problems
# with the subclassing in your version of X, you can use the regular
# Athena List widget by removing the #define of UseMultiList. Of course
# then you will not be able to make multiple selections.
# NOTE: If you are reading this in the Makefile and nothing follows,
#       then use of the MultiList widget was disabled in the Imakefile.
X
MULTILIST_DEF =	-DMULTILIST
MULTILIST_DIR =	FWF/MultiList
MULTILIST_INC =	-I$(MULTILIST_DIR)
MULTILIST_LIB =	-L$(MULTILIST_DIR) -lMultiList
MULTILIST_DEP =	$(MULTILIST_DIR)/libMultiList.a
X
#########################################################################
# Nothing to change below here...
X
PSRCS = atalloc.c dirsend.c get_pauth.c get_vdir.c perrmesg.c ptalloc.c \
X	$(REGEXC) stcopy.c support.c vl_comp.c vlalloc.c
CSRCS = query.c browser.c db.c selection.c status.c saveload.c \
X	inet_ntoa.c hostname.c username.c \
X	weight.c ftp.c syserr.c $(STRCASECMPC)
XXSRCS = xarchie.c display-x.c actions.c ftp-actions.c types.c \
X	settings.c file-panel.c view-file.c about.c $(HELPC) \
X	menu.c m-file.c m-query.c m-settings.c m-file-panel.c \
X	fchooser.c popups.c alert.c confirm.c syntax.c xutil.c tilde.c
X
POBJS = atalloc.o dirsend.o get_pauth.o get_vdir.o perrmesg.o ptalloc.o \
SHAR_EOF
true || echo 'restore of xarchie-2.0.6/Makefile failed'
fi
echo 'End of xarchie-2.0.6 part 1'
echo 'File xarchie-2.0.6/Makefile is continued in part 2'
echo 2 > _shar_seq_.tmp
exit 0

exit 0 # Just in case...
-- 
  // chris@IMD.Sterling.COM       | Send comp.sources.x submissions to:
\X/  Amiga - The only way to fly! |    sources-x@imd.sterling.com
 "It's intuitively obvious to the |
  most casual observer..."        | GCS d+/-- p+ c++ l+ m+ s++/+ g+ w+ t+ r+ x+
