Newsgroups: comp.sources.misc
From: youki-k@is.aist-nara.ac.jp (Youki Kadobayashi)
Subject: v41i089:  wwfs - WorldWide File System, Part04/22
Message-ID: <1994Jan17.021115.8648@sparky.sterling.com>
X-Md4-Signature: f6182014159cb46cda0adadbbe64b56f
Sender: kent@sparky.sterling.com (Kent Landfield)
Organization: Sterling Software
Date: Mon, 17 Jan 1994 02:11:15 GMT
Approved: kent@sparky.sterling.com

Submitted-by: youki-k@is.aist-nara.ac.jp (Youki Kadobayashi)
Posting-number: Volume 41, Issue 89
Archive-name: wwfs/part04
Environment: UNIX, inet

#! /bin/sh
# This is a shell archive.  Remove anything before this line, then feed it
# into a shell via "sh file" or similar.  To overwrite existing files,
# type "sh file -c".
# Contents:  doc/panel.ps.B rpc/cs_prot.h wwalk/wwalkrc
# Wrapped by kent@sparky on Sun Jan 16 17:48:21 1994
PATH=/bin:/usr/bin:/usr/ucb:/usr/local/bin:/usr/lbin:$PATH ; export PATH
echo If this archive is complete, you will see the following message:
echo '          "shar: End of archive 4 (of 22)."'
if test -f 'doc/panel.ps.B' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'doc/panel.ps.B'\"
else
  echo shar: Extracting \"'doc/panel.ps.B'\" \(79511 characters\)
  sed "s/^X//" >'doc/panel.ps.B' <<'END_OF_FILE'
X    dup _str cvs (Narrow) anchorsearch {pop cvn exch _find {exch pop}{
X	exch findfont 0 _copyfont@ dup /FontName 3 index put
X	dup /FontMatrix 2 copy get [5 6 div 0 0 1 0 0] matrix concatmatrix put
X	definefont}ifelse
X    }{pop findfont}ifelse
X} __NJbdef
X/_defmixfont@ { % /FName [/ASCII /KANJI shiftmtx] _defmixfont@ -font-
X    aload pop /_@shiftmatrix exch __NJdef (-NeXT-H) _bind findfont
X    /_EUC exch __NJdef _findNarrow /_@ASCII exch __NJdef
X    dup /_ exch _bind dup _EUC /Encoding get length 2 idiv dup 0 _EUC _shiftE
X    dup /Encoding 2 copy get dup
X	3 index /FMapType get 5 eq {16#41}{16#20}ifelse 89 put  put
X    dup /FontMatrix _@shiftmatrix put
X    dup /FDepVector [ _EUC /FDepVector get aload pop _EUC /FMapType get 5 eq {
X	/_S_ _@ASCII /FontName get _bind _@ASCII 0 _copyfont@
X	dup /Encoding 2 copy get 256 array copy dup dup dup 0 128 getinterval
X	128 exch putinterval 0 _@ASCII /Encoding get 128 128 getinterval
X	putinterval put dup /FontName 3 index put definefont
X	}{_@ASCII}ifelse
X	 _@shiftmatrix matrix invertmatrix makefont] put definefont
X    15 dict begin
X	/FontName 2 index def
X	/FontType 0 def     /PaintType 0 def
X	/FMapType 4 def     /FontMatrix matrix def
X	/Encoding [0 1] def /PrefEnc 1 index /Encoding get def
X	/FontBBox _@ASCII /FontBBox get 4 array copy cvx
X	    dup 2 get 1000 lt {dup 2 1000 put}if
X	    dup 3 get 880 lt {dup 3 880 put}if def
X	/FontInfo _@ASCII /FontInfo get def
X	/FDepVector [_@ASCII 4 -1 roll] def
X	currentdict end definefont
X} __NJbdef
X/Ryumin-Light-NeXT-H {/Ryumin-Light true _defNeXTF} __NJbdef
X/Ryumin-Light-NeXT-V {/Ryumin-Light false _defNeXTF} __NJbdef
X/GothicBBB-Medium-NeXT-H {/GothicBBB-Medium true _defNeXTF} __NJbdef
X/GothicBBB-Medium-NeXT-V {/GothicBBB-Medium false _defNeXTF} __NJbdef
X/Ryumin-Light-NeXT-SystemGaiji {/Ryumin-Light _defSGaiji} __NJbdef
X/GothicBBB-Medium-NeXT-SystemGaiji {/GothicBBB-Medium _defSGaiji} __NJbdef
X/FixedRyuminCourier-Light {
X	[/NarrowCourier /Ryumin-Light matrix] _defmixfont@} __NJbdef
X/FixedRyuminCourier-LightOblique {
X	[/NarrowCourier-Oblique /Ryumin-Light [1 0 .212557 1 0 0]] _defmixfont@} __NJbdef
X/FixedRyuminCourier-Bold {
X	[/NarrowCourier-Bold /Ryumin-Light matrix] _defmixfont@} __NJbdef
X/FixedRyuminCourier-BoldOblique {
X	[/NarrowCourier-BoldOblique /Ryumin-Light [1 0 .212557 1 0 0]] _defmixfont@} __NJbdef
X/RyuminTimes-Light {
X	[/Times-Roman /Ryumin-Light matrix] _defmixfont@} __NJbdef
X/RyuminTimes-LightOblique {
X	[/Times-Italic /Ryumin-Light [1 0 .277325 1 0 0]] _defmixfont@} __NJbdef
X/RyuminTimes-Bold {
X	[/Times-Bold /Ryumin-Light matrix] _defmixfont@} __NJbdef
X/RyuminTimes-BoldOblique {
X	[/Times-BoldItalic /Ryumin-Light [1 0 .277325 1 0 0]] _defmixfont@} __NJbdef
X/FixedGothicBBBCourier {
X	[/NarrowCourier /GothicBBB-Medium matrix] _defmixfont@} __NJbdef
X/FixedGothicBBBCourier-Oblique {
X	[/NarrowCourier-Oblique /GothicBBB-Medium [1 0 .212557 1 0 0]] _defmixfont@} __NJbdef
X/FixedGothicBBBCourier-Bold {
X	[/NarrowCourier-Bold /GothicBBB-Medium matrix] _defmixfont@} __NJbdef
X/FixedGothicBBBCourier-BoldOblique {
X	[/NarrowCourier-BoldOblique /GothicBBB-Medium [1 0 .212557 1 0 0]] _defmixfont@} __NJbdef
X/GothicBBBHelvetica {
X	[/Helvetica /GothicBBB-Medium matrix] _defmixfont@} __NJbdef
X/GothicBBBHelvetica-Oblique {
X	[/Helvetica-Oblique /GothicBBB-Medium [1 0 .212557 1 0 0]] _defmixfont@} __NJbdef
X/GothicBBBHelvetica-Bold {
X	[/Helvetica-Bold /GothicBBB-Medium matrix] _defmixfont@} __NJbdef
X/GothicBBBHelvetica-BoldOblique {
X	[/Helvetica-BoldOblique /GothicBBB-Medium [1 0 .212557 1 0 0]] _defmixfont@} __NJbdef
X/TitleGothicBBBHelvetica {
X	[/Helvetica /GothicBBB-Medium matrix] _defmixfont@} __NJbdef
X/TitleGothicBBBHelvetica-Bold {
X	[/Helvetica-Bold /GothicBBB-Medium matrix] _defmixfont@} __NJbdef
X
X/NextStepEncoding where not{
X/NextStepEncoding StandardEncoding 256 array copy def
X0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
X/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
X/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
X/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
X176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
X204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
X/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
X/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
X/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
X/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
X{dup type /nametype eq
X {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
X}forall pop
X/NextStepEncoding NextStepEncoding readonly def
X/_NXfstr 128 string dup 0 (_NX) putinterval def
X/_NXfindfont /findfont load def
X
X/NJEncoding NextStepEncoding /Encoding defineresource pop
X
X/findfont{
X % Because we can never let NextStepEncoding get into
X % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
X % if we are in shared mode.  So if currentshared is true,
X % we call the normal findfont and return that
X /currentshared where {pop currentshared} {false} ifelse
X {_NXfindfont}{dup //_@Private exch known {
X   //_@Private begin dup load exec end
X }{dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
X  getinterval cvn exch FontDirectory 2 index known 
X  {pop FontDirectory exch get}
X  {_NXfindfont dup /Encoding get StandardEncoding eq
X   {	dup length dict exch
X	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
X	 dup /Encoding NextStepEncoding put definefont
X	}{exch pop} ifelse
X    }ifelse
X   }ifelse
X  }ifelse
X}bind def
X}{pop}ifelse
X/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
X/_NXDoImageOp{
X	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
X	chans 2 add 2 roll parr 0 chans getinterval astore pop
X	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
X	4 index mul /totbytes exch def pop exch pop
X	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
X	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
X}__NXbdef
X/alphaimage{1 add _NXDoImageOp}def
X_NXLevel2{ 
X	/NXCalibratedRGBColorSpace where{pop}{
X		/NXCalibratedRGBColorSpace
X		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
X		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
X		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
X		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
X	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
X	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
X	/_NXSetCMYKOrRGB{nxsetrgbcolor pop pop pop pop}__NXbdef 
X	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
X		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
X		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
X		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
X		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
X		/DataSource exch def /ImageMatrix exch def 
X		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
X} {
X	/setcmykcolor{
X		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
X		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
X	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
X	/colorimage{_NXDoImageOp}__NXbdef
X	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
X	/setpattern{pop .5 setgray}__NXbdef
X	/_NXSetCMYKOrRGB{pop pop pop setcmykcolor}__NXbdef 
X	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
X} ifelse
X%%EndProcSet
X
X_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
X}if
Xgsave
X /__NXbasematrix matrix currentmatrix def
Xgrestore
X%%EndProlog
X%%BeginSetup
X/PatternDict 25 dict def PatternDict begin /1 /verticals1 def /2 /verticals2 def /3 /holizontal1 def /4 /holizontal2 def /5 /lattice1 def /6 /lattice2 def /7 /point1 def /8 /point2 def /9 /oblique1 def /10 /oblique2 def /11 /oblique3 def /12 /oblique4 def /13 /oblique5 def /14 /oblique6 def /15 /block def /16 /zetsuen1 def /17 /zetsuen2 def /18 /batsu def /19 /glass1 def /20 /glass2 def /21 /circle3 def /22 /tanten1 def /23 /tanten2 def /24 /tanten3 def /25 /tanten4 def end /space {
X    newpath
X} def /verticals1 {
X    5 0 moveto 5 20 lineto 10 0 moveto 10 20 lineto 15 0 moveto 15 20 lineto 20 0 moveto 20 20 lineto stroke
X} def /verticals2 {
X    8 0 moveto 8 20 lineto 18 0 moveto 18 20 lineto stroke
X} def /holizontal1 {
X    0 5 moveto 20 5 lineto 0 10 moveto 20 10 lineto 0 15 moveto 20 15 lineto 0 20 moveto 20 20 lineto stroke
X} def /holizontal2 {
X    0 10 moveto 20 10 lineto 0 20 moveto 20 20 lineto stroke
X} def /lattice1 {
X    5 0 moveto 5 20 lineto 10 0 moveto 10 20 lineto 15 0 moveto 15 20 lineto 20 0 moveto 20 20 lineto 0 5 moveto 20 5 lineto 0 10 moveto 20 10 lineto 0 15 moveto 20 15 lineto 0 20 moveto 20 20 lineto stroke
X} def /lattice2 {
X    5 0 moveto 5 20 lineto 15 0 moveto 15 20 lineto 0 5 moveto 20 5 lineto 0 15 moveto 20 15 lineto stroke
X} def /point1 {
X    5 5 moveto 5 5 1 0 360 arc 5 15 moveto 5 15 1 0 360 arc 15 5 moveto 15 5 1 0 360 arc 15 15 moveto 15 15 1 0 360 arc fill
X} def /point2 {
X    10 10 moveto 10 10 1 0 360 arc 1 0 moveto 0 0 1 0 90 arc 0 19 moveto 0 20 1 270 360 arc 20 1 moveto 20 0 1 90 180 arc 19 20 moveto 20 20 1 180 270 arc fill
X} def /oblique1 {
X    5 0 moveto 0 5 lineto 10 0 moveto 0 10 lineto 15 0 moveto 0 15 lineto 20 0 moveto 0 20 lineto 20 5 moveto 5 20 lineto 20 10 moveto 10 20 lineto 20 15 moveto 15 20 lineto stroke
X} def /oblique2 {
X    5 0 moveto 0 5 lineto 15 0 moveto 0 15 lineto 20 5 moveto 5 20 lineto 20 15 moveto 15 20 lineto stroke
X} def /oblique3 {
X    15 0 moveto 20 5 lineto 10 0 moveto 20 10 lineto 5 0 moveto 20 15 lineto 0 0 moveto 20 20 lineto 0 5 moveto 15 20 lineto 0 10 moveto 10 20 lineto 0 15 moveto 5 20 lineto stroke
X} def /oblique4 {
X    15 0 moveto 20 5 lineto 5 0 moveto 20 15 lineto 0 5 moveto 15 20 lineto 0 15 moveto 5 20 lineto stroke
X} def /oblique5 {
X    10 0 moveto 0 10 lineto 20 0 moveto 0 20 lineto 20 10 moveto 10 20 lineto 10 0 moveto 20 10 lineto 0 0 moveto 20 20 lineto 0 10 moveto 10 20 lineto stroke
X} def /oblique6 {
X    5 0 moveto 0 5 lineto 10 0 moveto 0 10 lineto 15 0 moveto 0 15 lineto 20 0 moveto 0 20 lineto 20 5 moveto 5 20 lineto 20 10 moveto 10 20 lineto 20 15 moveto 15 20 lineto 10 0 moveto 20 10 lineto 15 0 moveto 20 5 lineto 5 0 moveto 20 15 lineto 0 0 moveto 20 20 lineto 0 5 moveto 15 20 lineto 0 10 moveto 10 20 lineto 0 15 moveto 5 20 lineto stroke
X} def /heart {
X    10 0 moveto 2 2 2 15 10 7 curveto 18 15 18 2 10 0 curveto closepath fill
X} def /block {
X    0 10 moveto 20 10 lineto 0 20 moveto 20 20 lineto 10 10 moveto 10 20 lineto 20 0 moveto 20 10 lineto stroke
X} def /wave {
X    0 10 moveto 5 10 5 180 360 arc 20 10 moveto 15 10 5 0 180 arc stroke
X} def /batsu {
X    0 0 moveto 2 2 lineto 0 20 moveto 2 18 lineto 8 8 moveto 12 12 lineto 8 12 moveto 12 8 lineto 18 18 moveto 20 20 lineto 18 2 moveto 20 0 lineto stroke
X} def /zetsuen1 {
X    0 20 moveto 10 0 lineto 10 20 moveto 20 0 lineto 0 0 moveto 20 0 lineto 0 10 moveto 20 10 lineto stroke
X} def /zetsuen2 {
X    0 0 moveto 10 20 lineto 10 0 moveto 20 20 lineto 0 0 moveto 20 0 lineto 0 10 moveto 20 10 lineto stroke
X} def /glass1 {
X    0 18 moveto 2 20 lineto 0 2 moveto 18 20 lineto 2 0 moveto 20 18 lineto 18 0 moveto 20 2 lineto stroke
X} def /glass2 {
X    0 2 moveto 2 0 lineto 0 18 moveto 18 0 lineto 2 20 moveto 20 2 lineto 18 20 moveto 20 18 lineto stroke
X} def /circle3 {
X    20 13.75 moveto 20 10 3.75 90 180 arc 17.5 10 1.25 180 360 arc 15 10 3.75 0 180 arc 12.5 10 1.25 180 360 arc 10 10 3.75 0 180 arc 7.5 10 1.25 180 360 arc 5 10 3.75 0 180 arc 2.5 10 1.25 180 360 arc 0 10 3.75 0 90 arc 20 3.75 moveto 20 0 3.75 90 180 arc 17.5 0 1.25 180 360 arc 15 0 3.75 0 180 arc 12.5 0 1.25 180 360 arc 10 0 3.75 0 180 arc 7.5 0 1.25 180 360 arc 5 0 3.75 0 180 arc 2.5 0 1.25 180 360 arc 0 0 3.75 0 90 arc stroke
X} def /circle2 {
X    20 10 moveto 20 2.5 7.5 90 180 arc 15 2.5 2.5 180 360 arc 10 2.5 7.5 0 180 arc 5 2.5 2.5 180 360 arc 0 2.5 7.5 0 90 arc stroke
X} def /circle1 {
X    20 20 moveto 20 5 15 90 180 arc 10 5 5 180 360 arc 0 5 15 0 90 arc stroke
X} def /tanten1 {
X    5 0 moveto 5 2 lineto 15 0 moveto 15 2 lineto 0 5 moveto 0 7 lineto 10 5 moveto 10 7 lineto 20 5 moveto 20 7 lineto 5 10 moveto 5 12 lineto 15 10 moveto 15 12 lineto 0 15 moveto 0 17 lineto 10 15 moveto 10 17 lineto 20 15 moveto 20 17 lineto stroke
X} def /tanten2 {
X    5 0 moveto 7 0 lineto 15 0 moveto 17 0 lineto 0 5 moveto 2 5 lineto 10 5 moveto 12 5 lineto 0 5 moveto 2 5 lineto 5 10 moveto 7 10 lineto 15 10 moveto 17 10 lineto 0 15 moveto 2 15 lineto 10 15 moveto 12 15 lineto 0 15 moveto 2 15 lineto stroke
X} def /tanten3 {
X    5 20 moveto 7 18 lineto 15 20 moveto 17 18 lineto 0 5 moveto 2 3 lineto 10 5 moveto 12 3 lineto 5 10 moveto 7 8 lineto 15 10 moveto 17 8 lineto 0 15 moveto 2 13 lineto 10 15 moveto 12 13 lineto stroke
X} def /tanten4 {
X    5 0 moveto 7 2 lineto 15 0 moveto 17 2 lineto 10 5 moveto 12 7 lineto 0 5 moveto 2 7 lineto 5 10 moveto 7 12 lineto 15 10 moveto 17 12 lineto 10 15 moveto 12 17 lineto 0 15 moveto 2 17 lineto stroke
X} def /tpatstr 10 string def /setdrawpat {
X    tpatstr cvs cvn PatternDict exch get cvx /hatchingpattern exch def
X} def /showHorizon {
X    gsave stx ptnwidth enx {
X        pop hatchingpattern ptnwidth 0 translate
X    } for grestore
X} def /showPattern {
X    gsave 1 setgray fill grestore stx sty translate newpath [] 0 setdash 1 setlinewidth sty ptnwidth eny {
X        pop showHorizon 0 ptnwidth translate
X    } for
X} def /fillpattern {
X    /ptnno exch def /eny exch def /enx exch def /drwsty exch def /drwstx exch def /ptnwidth 20 def /stx ptnwidth drwstx ptnwidth div truncate mul def /sty ptnwidth drwsty ptnwidth div truncate mul def gsave clip ptnno setdrawpat showPattern grestore
X} def /fillpatterneo {
X    /ptnno exch def /eny exch def /enx exch def /drwsty exch def /drwstx exch def /ptnwidth 20 def /stx ptnwidth drwstx ptnwidth div truncate mul def /sty ptnwidth drwsty ptnwidth div truncate mul def gsave eoclip ptnno setdrawpat showPattern grestore
X} def /ArcRect {
X    /r exch def /ey exch def /ex exch def /sy exch def /sx exch def newpath sx ex le {
X        sx r add
X    } {
X        sx r sub
X    } ifelse sy moveto ex sy ex ey r arcto 4 {
X        pop
X    } repeat ex ey sx ey r arcto 4 {
X        pop
X    } repeat sx ey sx sy r arcto 4 {
X        pop
X    } repeat sx sy ex sy r arcto 4 {
X        pop
X    } repeat closepath
X} def /oval {
X    /y exch def /x exch def /h exch def /w exch def matrix currentmatrix w h x y translate scale newpath 0.5 0.5 0.5 0 360 arc setmatrix
X} def /line {
X    moveto rlineto stroke
X} def /setup {
X    setlinewidth setlinecap setlinejoin gsave
X} def /arrow0 {
X    newpath moveto dup rotate [] 0 setdash ah neg aw rlineto a0h aw neg rlineto a0h neg aw neg rlineto closepath gsave 0 setlinejoin stroke grestore fill neg rotate
X} def /arrow1 {
X    newpath moveto dup rotate [] 0 setdash a1h neg a1w rmoveto a1h a1w neg rlineto a1h neg a1w neg rlineto a1h a1w rmoveto closepath gsave 0 setlinejoin stroke grestore neg rotate
X} def /arrow2 {
X    newpath [] 0 setdash ac 0 360 arc pop closepath gsave 0 setlinejoin stroke grestore fill
X} def
X%%EndSetup
X0 0 792 1008 rectclip
X130 179 100 94 rectclip
X130 179 100 94 rectclip
X[] 0 setdash
X0 0 0.2 setup
X[] 0 setdash
X0 0 1.448819 setup
X0 nxsetgray
X155.473022 241.883942 moveto 155.473022 215.805191 155.473022 215.805191 181.4431 215.805191 curveto stroke
Xgrestore
X[] 0 setdash
X0 0 1.448819 setup
X0 nxsetgray
X155.473022 233.190994 moveto 155.473022 259.269745 155.473022 259.269745 181.4431 259.269745 curveto stroke
Xgrestore
X[] 0 setdash
X0 0 1.448819 setup
X0 nxsetgray
X207.630508 241.883942 moveto 207.630508 215.805191 207.630508 215.805191 181.4431 215.805191 curveto stroke
Xgrestore
X[] 0 setdash
X0 0 1.448819 setup
X0 nxsetgray
X207.630493 233.191025 moveto 207.630493 259.269745 207.630493 259.269745 181.4431 259.269745 curveto stroke
Xgrestore
X[] 0 setdash
X0 0 1.448819 setup
X0 nxsetgray
X153.191116 213.631958 209.695053 261.442993 0 ArcRect stroke
Xgrestore
X[] 0 setdash
X0 0 1.448819 setup
X0 nxsetgray
X8.692932 -8.692902 209.695053 261.442993 line
Xgrestore
X[] 0 setdash
X0 0 1.448819 setup
X0 nxsetgray
X0 -28.251999 218.387985 252.750092 line
Xgrestore
X[] 0 setdash
X0 0 1.448819 setup
X0 nxsetgray
X-8.692932 -10.866135 218.387985 224.498093 line
Xgrestore
X[] 0 setdash
X0 0 1.448819 setup
X0 nxsetgray
X56.503937 0 153.191116 211.458725 line
Xgrestore
X[] 0 setdash
X0 0 1.448819 setup
X0 nxsetgray
X0 -8.692917 209.695053 211.458725 line
Xgrestore
X[] 0 setdash
X0 0 1.448819 setup
X0 nxsetgray
X-10.866119 -10.866135 209.695053 202.765808 line
Xgrestore
X[] 0 setdash
X0 0 1.448819 setup
X0 nxsetgray
X0 6.519684 198.828934 191.899673 line
Xgrestore
X[] 0 setdash
X0 0 1.448819 setup
X0 nxsetgray
X10.866119 13.039368 198.828934 198.419357 line
Xgrestore
X[] 0 setdash
X0 0 1.448819 setup
X0 nxsetgray
X0 6.519684 142.324997 191.899673 line
Xgrestore
X[] 0 setdash
X0 0 1.448819 setup
X0 nxsetgray
X10.974792 13.365356 142.324997 198.419357 line
Xgrestore
X[] 0 setdash
X0 0 1.448819 setup
X0 nxsetgray
X56.503937 0 142.324997 198.419357 line
Xgrestore
X[] 0 setdash
X0 0 1.448819 setup
X0 nxsetgray
X-56.503937 0 198.828934 191.899673 line
Xgrestore
X[] 0 setdash
X0 0 1.448819 setup
X0 nxsetgray
X26.078735 0 159.710815 252.750092 line
Xgrestore
X[] 0 setdash
X0 0 1.448819 setup
X0 nxsetgray
X13.039368 0 159.710815 248.40361 line
Xgrestore
X[] 0 setdash
X0 0 1.448819 setup
X0 nxsetgray
X34.771637 0 159.710815 244.057144 line
Xgrestore
X[] 0 setdash
X0 0 1.448819 setup
X0 nxsetgray
X10.866135 0 159.710815 239.710693 line
Xgrestore
X[] 0 setdash
X0 0 1.448819 setup
X0 nxsetgray
X21.732285 0 159.710815 235.364243 line
Xgrestore
X[] 0 setdash
X0 0 1.448819 setup
X0 nxsetgray
X13.039368 0 159.710815 231.017792 line
Xgrestore
Xgrestore
X1 setgray
X0 setgray
X0.333333 setgray
Xgsave
X0 0 792 1008 rectclip
X[1 0 0 -1 0 1008] concat
Xgrestore
X%%Trailer
X
X%%EndDocument
Xcount __NXEPSOpCount sub {pop} repeat countdictstack __NXEPSDictCount sub {end} repeat __NXEPSSave restore
Xgrestore
Xgrestore
X[] 0 setdash
X0 0 2.173229 setup
X[] 0 setdash
X0 0 2.173229 setup
X0 nxsetgray
X79.62706 79.62706 316.49054 801.413513 oval stroke
Xgrestore
X[] 0 setdash
X0 0 2.173229 setup
X0 setgray
X18.081261 18.081261 344.307861 850.441528 oval stroke
Xgrestore
X[] 0 setdash
X0 0 2.173229 setup
X0 0 translate
X1 1 scale
X0 setgray
Xgsave
Xnewpath
Xsystemdict
Xbegin
X336 817 362 837 setbbox
X350.91449 834.79425 moveto
X338.396729 819.494812 lineto
X359.607483 819.494812 lineto
X350.914581 834.79425 lineto
Xend
Xstroke
Xgrestore
Xgrestore
X[] 0 setdash
X0 0 2.173229 setup
Xgsave
X0.333293 nxsetgray
X366.077881 831.105408 382.420563 847.448059 0 ArcRect fill
Xgrestore
X0 setgray
X366.077881 831.105408 382.420563 847.448059 0 ArcRect stroke
Xgrestore
Xgrestore
X[] 0 setdash
X0 0 2.897638 setup
Xgsave
X75 execuserobject setfont
X0 nxsetgray
X[1 0 0 -1 0 1996] concat
X/Times-Bold findfont 36 scalefont [1 0 0 -1 0 0] makefont
X21
Xexch
Xdefineuserobject
X21 execuserobject setfont
X0 nxsetgray
X95 1009 moveto (WWFS: WorldWide File System) show
Xgrestore
Xgrestore
X[] 0 setdash
X0 0 2.897638 setup
Xgsave
X21 execuserobject setfont
X0 nxsetgray
X[1 0 0 -1 0 1748] concat
X/Times-Bold findfont 26 scalefont [1 0 0 -1 0 0] makefont
X22
Xexch
Xdefineuserobject
X22 execuserobject setfont
X0 nxsetgray
X418 852 moveto (Traditional file transfer) show
X418 883 moveto (service results in) show
X418 914 moveto (waste of bandwidth.) show
Xgrestore
Xgrestore
X[] 0 setdash
X0 0 2.897638 setup
X0 nxsetgray
X694.708679 0 11.862212 954.409485 line
Xgrestore
X/k {
X    2 1 gt {
X        2 1 sub 2 div 1 add
X    } {
X        1
X    } ifelse
X} def [ 8 k mul 3 k mul ] 0 setdash
X0 0 2.173229 setup
X0 setgray
X71.933868 0 264.013794 532.637695 line
X/ah {
X    5 2.633803 mul currentlinewidth 1 sub 5 div 1 add mul
X} def /aw {
X    2 2.633803 mul currentlinewidth 1 sub 5 div 1 add mul
X} def /a0h {
X    1.5 2.633803 mul currentlinewidth 1 sub 5 div 1 add mul
X} def /a1h {
X    5 2.633803 mul currentlinewidth 1 sub 3 div 1 add mul
X} def /a1w {
X    2 2.633803 mul currentlinewidth 1 sub 3 div 1 add mul
X} def /ac {
X    2 2.633803 mul currentlinewidth 1 sub 5 div 1 add mul
X} def -0.795747 335.947662 532.637695 0 0 eq {
X    arrow0
X} {
X    0 1 eq {
X        arrow1
X    } {
X        arrow2
X    } ifelse
X} ifelse
Xgrestore
X[] 0 setdash
X0 0 2.173229 setup
X0 setgray
X6.519653 -22.166901 359.947662 502.552582 line
X/ah {
X    5 1.957747 mul currentlinewidth 1 sub 5 div 1 add mul
X} def /aw {
X    2 1.957747 mul currentlinewidth 1 sub 5 div 1 add mul
X} def /a0h {
X    1.5 1.957747 mul currentlinewidth 1 sub 5 div 1 add mul
X} def /a1h {
X    5 1.957747 mul currentlinewidth 1 sub 3 div 1 add mul
X} def /a1w {
X    2 1.957747 mul currentlinewidth 1 sub 3 div 1 add mul
X} def /ac {
X    2 1.957747 mul currentlinewidth 1 sub 5 div 1 add mul
X} def -70.823082 366.467316 480.385681 0 0 eq {
X    arrow0
X} {
X    0 1 eq {
X        arrow1
X    } {
X        arrow2
X    } ifelse
X} ifelse
Xgrestore
X[] 0 setdash
X0 0 2.897638 setup
Xgsave
X22 execuserobject setfont
X0 nxsetgray
X[1 0 0 -1 0 1094] concat
X74 execuserobject setfont
X0 nxsetgray
X277 551 moveto (FTP) show
Xgrestore
Xgrestore
X/k {
X    2 1 gt {
X        2 1 sub 2 div 1 add
X    } {
X        1
X    } ifelse
X} def [ 8 k mul 3 k mul ] 0 setdash
X0 0 2.173229 setup
X0 setgray
X58.677162 -24.77478 89.503548 554.369934 line
X/ah {
X    5 2.633803 mul currentlinewidth 1 sub 5 div 1 add mul
X} def /aw {
X    2 2.633803 mul currentlinewidth 1 sub 5 div 1 add mul
X} def /a0h {
X    1.5 2.633803 mul currentlinewidth 1 sub 5 div 1 add mul
X} def /a1h {
X    5 2.633803 mul currentlinewidth 1 sub 3 div 1 add mul
X} def /a1w {
X    2 2.633803 mul currentlinewidth 1 sub 3 div 1 add mul
X} def /ac {
X    2 2.633803 mul currentlinewidth 1 sub 5 div 1 add mul
X} def -23.429384 148.18071 529.595154 0 0 eq {
X    arrow0
X} {
X    0 1 eq {
X        arrow1
X    } {
X        arrow2
X    } ifelse
X} ifelse
Xgrestore
X/k {
X    2 1 gt {
X        2 1 sub 2 div 1 add
X    } {
X        1
X    } ifelse
X} def [ 8 k mul 3 k mul ] 0 setdash
X0 0 2.173229 setup
X0 setgray
X62.80629 39.552704 90.155518 448.099121 line
X/ah {
X    5 2.633803 mul currentlinewidth 1 sub 5 div 1 add mul
X} def /aw {
X    2 2.633803 mul currentlinewidth 1 sub 5 div 1 add mul
X} def /a0h {
X    1.5 2.633803 mul currentlinewidth 1 sub 5 div 1 add mul
X} def /a1h {
X    5 2.633803 mul currentlinewidth 1 sub 3 div 1 add mul
X} def /a1w {
X    2 2.633803 mul currentlinewidth 1 sub 3 div 1 add mul
X} def /ac {
X    2 2.633803 mul currentlinewidth 1 sub 5 div 1 add mul
X} def 32.413265 152.961807 487.651825 0 0 eq {
X    arrow0
X} {
X    0 1 eq {
X        arrow1
X    } {
X        arrow2
X    } ifelse
X} ifelse
Xgrestore
X[] 0 setdash
X0 0 2.897638 setup
Xgsave
X74 execuserobject setfont
X0 nxsetgray
X[1 0 0 -1 0 1120] concat
X74 execuserobject setfont
X0 nxsetgray
X108 564 moveto (NFS) show
Xgrestore
Xgrestore
X[] 0 setdash
X0 0 2.897638 setup
Xgsave
X74 execuserobject setfont
X0 nxsetgray
X[1 0 0 -1 0 896] concat
X74 execuserobject setfont
X0 nxsetgray
X109 452 moveto (NFS) show
Xgrestore
Xgrestore
X[] 0 setdash
X0 0 2.897638 setup
Xgsave
X74 execuserobject setfont
X0 nxsetgray
X[1 0 0 -1 0 968] concat
X74 execuserobject setfont
X0 nxsetgray
X169 488 moveto (Cluster Server) show
Xgrestore
Xgrestore
X[] 0 setdash
X0 0 0.2 setup
X143.361816 490.276245 transform
Xgsave __NXbasematrix setmatrix itransform translate
X0 0 158.442062 158.442062 rectclip
X0 0 translate
X0 rotate
X0.6 0.6 scale
X-252 -176 translate
X
X/__NXEPSSave save def /showpage {} def
X_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
X/_NXcimage where{pop}{/_NXcimage /colorimage load def}ifelse /colorimage{dup 3 eq{true 2 index{1 index}{1}ifelse 7 add 1 roll _NXCalibratedImage}{_NXcimage}ifelse}def}if
X0 setgray 0 setlinecap 1 setlinewidth
X0 setlinejoin 10 setmiterlimit [] 0 setdash newpath count /__NXEPSOpCount exch def /__NXEPSDictCount countdictstack def
X%%BeginDocument: 
X%!PS-Adobe-2.0 EPSF-2.0
X%%Title: 
X%%Creator: DrawPlus
X%%CreationDate: Mon Dec 14 14:03:10 1992
X%%For: youki
X%%DocumentFonts: (atend)
X%%Pages: 0 0
X%%BoundingBox: 252 176 474 319
X%%NXNextStepVersion: 3.0
X%%EndComments
X
X%%BeginProcSet: /usr/lib/NextStep/printPackage.ps 3.0
X%!
X% NeXT Printing Package
X% Version: 3.0J
X% Modified by Canon based on Version 3.0 , 1992.01.07
X% Copyright: 1988, NeXT, Inc.
X
X/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
X/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
X/UserObjects 10 array __NXdef
X/defineuserobject{
X	exch dup 1 add dup UserObjects length gt{
X		array dup 0 UserObjects putinterval
X		/UserObjects exch def
X	}{pop}ifelse UserObjects exch 3 -1 roll put
X}__NXbdef
X/undefineuserobject{UserObjects exch null put}__NXbdef
X/execuserobject{UserObjects exch get exec}__NXbdef
X/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
X0 exch rlineto neg 0 rlineto closepath}__NXbdef
X/__NXProcessRectArgs{
X	1 index type /arraytype eq{
X		exch 0 4 2 index length 1 sub{
X			dup 3 add 1 exch{1 index exch get exch}for
X			5 1 roll 5 index exec
X		}for pop pop
X	}{exec}ifelse
X}__NXbdef
X/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
X/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
X/rectstroke{
X	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
X		{gsave __NXRectPath null concat stroke grestore}
X		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
X	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
X}__NXbdef
X/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
X/xyshow{
X	0 1 3 index length 1 sub{
X		currentpoint 4 index 3 index 1 getinterval show
X		3 index 3 index 2 mul 1 add get add exch
X		3 index	3 index 2 mul get add exch moveto pop
X	}for pop pop
X}__NXbdef
X/xshow{
X	0 1 3 index length 1 sub{
X		currentpoint 4 index 3 index 1 getinterval show
X		exch 3 index 3 index get add exch moveto pop
X	}for pop pop
X}__NXbdef
X/yshow{
X	0 1 3 index length 1 sub{
X		currentpoint 4 index 3 index 1 getinterval show
X		3 index 3 index get add moveto pop
X	}for pop pop
X}__NXbdef
X/arct{arcto pop pop pop pop}__NXbdef
X/setbbox{pop pop pop pop}__NXbdef
X/ucache{}__NXbdef
X/ucachestatus{mark 0 0 0 0 0}__NXbdef
X/setucacheparams{cleartomark}__NXbdef
X/uappend{systemdict begin cvx exec end}__NXbdef
X/ueofill{gsave newpath uappend eofill grestore}__NXbdef
X/ufill{gsave newpath uappend fill grestore}__NXbdef
X/ustroke{
X	gsave newpath dup length 6 eq
X	{exch uappend concat}{uappend}ifelse
X	stroke grestore
X}__NXbdef
X/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
X/ustrokepath{
X	newpath dup length 6 eq{
X		exch uappend __NXustrokepathMatrix currentmatrix exch concat
X		strokepath setmatrix
X	}{uappend strokepath}ifelse
X} __NXbdef
X/upath{
X	[exch {/ucache cvx}if pathbbox /setbbox cvx
X	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
X} __NXbdef
X/setstrokeadjust{pop}__NXbdef
X/currentstrokeadjust{false}__NXbdef
X/selectfont{exch findfont exch
Xdup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
X/_NXCombineArrays{
X	counttomark dup 2 add index dup length 3 -1 roll {
X		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
X	}repeat pop pop pop
X}__NXbdef
X/flushgraphics{}def
X/setwindowtype{pop pop}def
X/currentwindowtype{pop 0}def
X/setalpha{pop}def
X/currentalpha{1.0}def
X/hidecursor{}def
X/obscurecursor{}def
X/revealcursor{}def
X/setcursor{4 {pop}repeat}bind def
X/showcursor{}def
X
X/SharedFontDirectory FontDirectory __NXdef
X/_JPN /GothicBBB-Medium-EUC-H dup findfont /FontName get eq def
X
X_JPN {
X  mark { /NJ12-88-CFEncoding findencoding } stopped {
X    /defineresource {
X      pop dup 3 1 roll userdict /EncodingDirectory get 3 1 roll readonly put
X    } __NXbdef
X    /GothicBBB-Medium-EUC-H findfont begin
X	Encoding dup length array copy dup dup dup length 2 idiv dup getinterval
X	0 exch putinterval
X	FMapType 2 eq {
X	    dup 16#0E 78 put dup 16#20 89 put
X	    0 1 9 {dup 16#75 add exch 79 add 2 index 3 1 roll put} for
X	}{
X	    dup 16#1D 78 put dup 16#41 89 put
X	    0 1 9 {dup dup add 16#EB add exch 79 add 2 index 3 1 roll put} for
X	} ifelse
X    /NJ12-88-CFEncoding exch /Encoding defineresource pop
X    /EUCEncoding FDepVector 10 get /Encoding get /Encoding defineresource pop
X    end
X  } if cleartomark
X} if
X
X/_@Private dup where {pop pop}{50 dict def}ifelse
X/__NJdef _JPN {{//_@Private 3 1 roll put}}{{pop pop}} ifelse bind def
X/__NJbdef _JPN {{//_@Private 2 index known {pop pop}{bind //_@Private 3 1 roll put}ifelse}}{{pop pop}} ifelse bind def
X/_str 128 string __NJdef
X/_find { % /FName _find FontOrFName bool
X    false 0 {dup 3 index known {3 -1 roll get exch pop true exit}{pop}ifelse} forall
X} bind dup 1
X[/SharedFontDirectory dup where {exch get}{pop}ifelse //FontDirectory] put //_@Private 3 1 roll put
X/_copyfont@ { % -font- extension _copyfont@ -dict-
X    1 index maxlength add dict begin {
X	1 index /FID ne 2 index /UniqueID ne and {def}{pop pop}ifelse
X    } forall currentdict end
X} __NJbdef
X/_bind { % /n1 /n2 _bind /n1+2
X    exch dup length 2 index length add _str 4 2 roll
X    _str cvs length exch dup length string cvs putinterval
X    _str exch 0 exch getinterval cvn
X} __NJbdef
X/NDEncoding 256 array dup 0 1 255 {/.notdef put dup} for pop __NJdef
X/_shiftE { % /Fname start length target -font- _shiftE -dict-
X    0 _copyfont@ begin Encoding 4 2 roll getinterval NDEncoding 256 array
X    copy dup 4 -2 roll putinterval Encoding length 256 eq {
X    dup dup 0 128 getinterval 128 exch putinterval } if
X    /Encoding exch def /FontName exch def currentdict end
X} __NJbdef
X/_makeSGFDV { % - _makeSGFDV [FDV]
X    [ _FN /.WP-Symbol _bind findfont
X    _SGFN /.rFC _bind dup 0 96 32 5 index _shiftE definefont
X    _SGFN /.rFD _bind dup 96 32 32 6 index _shiftE definefont
X    _SGFN /.rFE _bind dup 0 128 0 _FN /-Ext-H _bind findfont dup /Encoding get
X    16#2d get exch /FDepVector get exch get _shiftE dup /Encoding 2 copy get
X    [16#f0 16#f1 16#f2 16#f5 16#f6 16#f7 16#fa 16#fb 16#fc] {
X	dup 2 index exch /.notdef put 128 sub 1 index exch /.notdef put
X    } forall put definefont
X    ] dup 0 /NotDefFont findfont put
X} __NJbdef
X/_defSGaiji { % /fullname /basename _defSGaiji -sysGaiji-
X    /_FN exch __NJdef /_SGFN exch __NJdef 15 dict
X    dup /FontName _SGFN put	dup /FontType 0 put
X    dup /FMapType 2 put		dup /FontMatrix matrix put
X    dup /FontBBox {0 -140 1000 880} put
X    dup /Encoding 256 array 0 1 255 {1 index exch 0 put}for
X	dup 16#FC 1 put    dup 16#FD 2 put    dup 16#FE 3 put put
X    dup /FDepVector _makeSGFDV put    dup /isNeXTGaiji true put
X    _SGFN exch definefont
X} __NJbdef
X/_defNeXTF { % /fullname /basename Hflag _defNeXTF
X2 index _find { 4 1 roll pop pop pop}{pop
X    /_FN 2 index __NJdef {/-EUC-H}{/-EUC-V}ifelse _bind findfont
X    1 _copyfont@ begin
X    /FontName 1 index def
X    /UserGaijiName _FN /-NeXT-UserGaiji _bind def
X    /Encoding Encoding dup length array copy FMapType 2 eq {dup 16#8E 78 put
X	0 1 9 {dup 16#F5 add exch 79 add 2 index 3 1 roll put} for
X    }{  dup 16#11D 78 put
X	0 1 9 {dup dup add 16#1EB add exch 79 add 2 index 3 1 roll put} for
X    } ifelse def
X    /FDepVector [FDepVector aload pop _FN /.Hankaku _bind
X	dup /_ _bind exch 128 128 0 3 index findfont _shiftE definefont
X	UserGaijiName findfont dup /isNeXTGaiji 2 copy known {
X	    get {/FDepVector get 1 7 getinterval aload pop
X	    }{pop /NotDefFont findfont 6 {dup} repeat}ifelse
X	}{pop pop pop /NotDefFont findfont 6 {dup} repeat}ifelse
X	_FN /-NeXT-SystemGaiji _bind findfont /FDepVector get 1 3 getinterval
X	aload pop] def
X    currentdict end definefont
X}ifelse
X} __NJbdef
X/_findNarrow { % /FName _findNarrow -font-
X    dup _str cvs (Narrow) anchorsearch {pop cvn exch _find {exch pop}{
X	exch findfont 0 _copyfont@ dup /FontName 3 index put
X	dup /FontMatrix 2 copy get [5 6 div 0 0 1 0 0] matrix concatmatrix put
X	definefont}ifelse
X    }{pop findfont}ifelse
X} __NJbdef
X/_defmixfont@ { % /FName [/ASCII /KANJI shiftmtx] _defmixfont@ -font-
X    aload pop /_@shiftmatrix exch __NJdef (-NeXT-H) _bind findfont
X    /_EUC exch __NJdef _findNarrow /_@ASCII exch __NJdef
X    dup /_ exch _bind dup _EUC /Encoding get length 2 idiv dup 0 _EUC _shiftE
X    dup /Encoding 2 copy get dup
X	3 index /FMapType get 5 eq {16#41}{16#20}ifelse 89 put  put
X    dup /FontMatrix _@shiftmatrix put
X    dup /FDepVector [ _EUC /FDepVector get aload pop _EUC /FMapType get 5 eq {
X	/_S_ _@ASCII /FontName get _bind _@ASCII 0 _copyfont@
X	dup /Encoding 2 copy get 256 array copy dup dup dup 0 128 getinterval
X	128 exch putinterval 0 _@ASCII /Encoding get 128 128 getinterval
X	putinterval put dup /FontName 3 index put definefont
X	}{_@ASCII}ifelse
X	 _@shiftmatrix matrix invertmatrix makefont] put definefont
X    15 dict begin
X	/FontName 2 index def
X	/FontType 0 def     /PaintType 0 def
X	/FMapType 4 def     /FontMatrix matrix def
X	/Encoding [0 1] def /PrefEnc 1 index /Encoding get def
X	/FontBBox _@ASCII /FontBBox get 4 array copy cvx
X	    dup 2 get 1000 lt {dup 2 1000 put}if
X	    dup 3 get 880 lt {dup 3 880 put}if def
X	/FontInfo _@ASCII /FontInfo get def
X	/FDepVector [_@ASCII 4 -1 roll] def
X	currentdict end definefont
X} __NJbdef
X/Ryumin-Light-NeXT-H {/Ryumin-Light true _defNeXTF} __NJbdef
X/Ryumin-Light-NeXT-V {/Ryumin-Light false _defNeXTF} __NJbdef
X/GothicBBB-Medium-NeXT-H {/GothicBBB-Medium true _defNeXTF} __NJbdef
X/GothicBBB-Medium-NeXT-V {/GothicBBB-Medium false _defNeXTF} __NJbdef
X/Ryumin-Light-NeXT-SystemGaiji {/Ryumin-Light _defSGaiji} __NJbdef
X/GothicBBB-Medium-NeXT-SystemGaiji {/GothicBBB-Medium _defSGaiji} __NJbdef
X/FixedRyuminCourier-Light {
X	[/NarrowCourier /Ryumin-Light matrix] _defmixfont@} __NJbdef
X/FixedRyuminCourier-LightOblique {
X	[/NarrowCourier-Oblique /Ryumin-Light [1 0 .212557 1 0 0]] _defmixfont@} __NJbdef
X/FixedRyuminCourier-Bold {
X	[/NarrowCourier-Bold /Ryumin-Light matrix] _defmixfont@} __NJbdef
X/FixedRyuminCourier-BoldOblique {
X	[/NarrowCourier-BoldOblique /Ryumin-Light [1 0 .212557 1 0 0]] _defmixfont@} __NJbdef
X/RyuminTimes-Light {
X	[/Times-Roman /Ryumin-Light matrix] _defmixfont@} __NJbdef
X/RyuminTimes-LightOblique {
X	[/Times-Italic /Ryumin-Light [1 0 .277325 1 0 0]] _defmixfont@} __NJbdef
X/RyuminTimes-Bold {
X	[/Times-Bold /Ryumin-Light matrix] _defmixfont@} __NJbdef
X/RyuminTimes-BoldOblique {
X	[/Times-BoldItalic /Ryumin-Light [1 0 .277325 1 0 0]] _defmixfont@} __NJbdef
X/FixedGothicBBBCourier {
X	[/NarrowCourier /GothicBBB-Medium matrix] _defmixfont@} __NJbdef
X/FixedGothicBBBCourier-Oblique {
X	[/NarrowCourier-Oblique /GothicBBB-Medium [1 0 .212557 1 0 0]] _defmixfont@} __NJbdef
X/FixedGothicBBBCourier-Bold {
X	[/NarrowCourier-Bold /GothicBBB-Medium matrix] _defmixfont@} __NJbdef
X/FixedGothicBBBCourier-BoldOblique {
X	[/NarrowCourier-BoldOblique /GothicBBB-Medium [1 0 .212557 1 0 0]] _defmixfont@} __NJbdef
X/GothicBBBHelvetica {
X	[/Helvetica /GothicBBB-Medium matrix] _defmixfont@} __NJbdef
X/GothicBBBHelvetica-Oblique {
X	[/Helvetica-Oblique /GothicBBB-Medium [1 0 .212557 1 0 0]] _defmixfont@} __NJbdef
X/GothicBBBHelvetica-Bold {
X	[/Helvetica-Bold /GothicBBB-Medium matrix] _defmixfont@} __NJbdef
X/GothicBBBHelvetica-BoldOblique {
X	[/Helvetica-BoldOblique /GothicBBB-Medium [1 0 .212557 1 0 0]] _defmixfont@} __NJbdef
X/TitleGothicBBBHelvetica {
X	[/Helvetica /GothicBBB-Medium matrix] _defmixfont@} __NJbdef
X/TitleGothicBBBHelvetica-Bold {
X	[/Helvetica-Bold /GothicBBB-Medium matrix] _defmixfont@} __NJbdef
X
X/NextStepEncoding where not{
X/NextStepEncoding StandardEncoding 256 array copy def
X0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
X/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
X/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
X/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
X176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
X204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
X/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
X/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
X/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
X/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
X{dup type /nametype eq
X {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
X}forall pop
X/NextStepEncoding NextStepEncoding readonly def
X/_NXfstr 128 string dup 0 (_NX) putinterval def
X/_NXfindfont /findfont load def
X
X/NJEncoding NextStepEncoding /Encoding defineresource pop
X
X/findfont{
X % Because we can never let NextStepEncoding get into
X % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
X % if we are in shared mode.  So if currentshared is true,
X % we call the normal findfont and return that
X /currentshared where {pop currentshared} {false} ifelse
X {_NXfindfont}{dup //_@Private exch known {
X   //_@Private begin dup load exec end
X }{dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
X  getinterval cvn exch FontDirectory 2 index known 
X  {pop FontDirectory exch get}
X  {_NXfindfont dup /Encoding get StandardEncoding eq
X   {	dup length dict exch
X	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
X	 dup /Encoding NextStepEncoding put definefont
X	}{exch pop} ifelse
X    }ifelse
X   }ifelse
X  }ifelse
X}bind def
X}{pop}ifelse
X/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
X/_NXDoImageOp{
X	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
X	chans 2 add 2 roll parr 0 chans getinterval astore pop
X	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
X	4 index mul /totbytes exch def pop exch pop
X	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
X	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
X}__NXbdef
X/alphaimage{1 add _NXDoImageOp}def
X_NXLevel2{ 
X	/NXCalibratedRGBColorSpace where{pop}{
X		/NXCalibratedRGBColorSpace
X		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
X		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
X		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
X		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
X	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
X	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
X	/_NXSetCMYKOrRGB{nxsetrgbcolor pop pop pop pop}__NXbdef 
X	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
X		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
X		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
X		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
X		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
X		/DataSource exch def /ImageMatrix exch def 
X		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
X} {
X	/setcmykcolor{
X		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
X		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
X	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
X	/colorimage{_NXDoImageOp}__NXbdef
X	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
X	/setpattern{pop .5 setgray}__NXbdef
X	/_NXSetCMYKOrRGB{pop pop pop setcmykcolor}__NXbdef 
X	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
X} ifelse
X%%EndProcSet
X
X_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
X}if
Xgsave
X /__NXbasematrix matrix currentmatrix def
Xgrestore
X%%EndProlog
X%%BeginSetup
X/PatternDict 25 dict def PatternDict begin /1 /verticals1 def /2 /verticals2 def /3 /holizontal1 def /4 /holizontal2 def /5 /lattice1 def /6 /lattice2 def /7 /point1 def /8 /point2 def /9 /oblique1 def /10 /oblique2 def /11 /oblique3 def /12 /oblique4 def /13 /oblique5 def /14 /oblique6 def /15 /block def /16 /zetsuen1 def /17 /zetsuen2 def /18 /batsu def /19 /glass1 def /20 /glass2 def /21 /circle3 def /22 /tanten1 def /23 /tanten2 def /24 /tanten3 def /25 /tanten4 def end /space {
X    newpath
X} def /verticals1 {
X    5 0 moveto 5 20 lineto 10 0 moveto 10 20 lineto 15 0 moveto 15 20 lineto 20 0 moveto 20 20 lineto stroke
X} def /verticals2 {
X    8 0 moveto 8 20 lineto 18 0 moveto 18 20 lineto stroke
X} def /holizontal1 {
X    0 5 moveto 20 5 lineto 0 10 moveto 20 10 lineto 0 15 moveto 20 15 lineto 0 20 moveto 20 20 lineto stroke
X} def /holizontal2 {
X    0 10 moveto 20 10 lineto 0 20 moveto 20 20 lineto stroke
X} def /lattice1 {
X    5 0 moveto 5 20 lineto 10 0 moveto 10 20 lineto 15 0 moveto 15 20 lineto 20 0 moveto 20 20 lineto 0 5 moveto 20 5 lineto 0 10 moveto 20 10 lineto 0 15 moveto 20 15 lineto 0 20 moveto 20 20 lineto stroke
X} def /lattice2 {
X    5 0 moveto 5 20 lineto 15 0 moveto 15 20 lineto 0 5 moveto 20 5 lineto 0 15 moveto 20 15 lineto stroke
X} def /point1 {
X    5 5 moveto 5 5 1 0 360 arc 5 15 moveto 5 15 1 0 360 arc 15 5 moveto 15 5 1 0 360 arc 15 15 moveto 15 15 1 0 360 arc fill
X} def /point2 {
X    10 10 moveto 10 10 1 0 360 arc 1 0 moveto 0 0 1 0 90 arc 0 19 moveto 0 20 1 270 360 arc 20 1 moveto 20 0 1 90 180 arc 19 20 moveto 20 20 1 180 270 arc fill
X} def /oblique1 {
X    5 0 moveto 0 5 lineto 10 0 moveto 0 10 lineto 15 0 moveto 0 15 lineto 20 0 moveto 0 20 lineto 20 5 moveto 5 20 lineto 20 10 moveto 10 20 lineto 20 15 moveto 15 20 lineto stroke
X} def /oblique2 {
X    5 0 moveto 0 5 lineto 15 0 moveto 0 15 lineto 20 5 moveto 5 20 lineto 20 15 moveto 15 20 lineto stroke
X} def /oblique3 {
X    15 0 moveto 20 5 lineto 10 0 moveto 20 10 lineto 5 0 moveto 20 15 lineto 0 0 moveto 20 20 lineto 0 5 moveto 15 20 lineto 0 10 moveto 10 20 lineto 0 15 moveto 5 20 lineto stroke
X} def /oblique4 {
X    15 0 moveto 20 5 lineto 5 0 moveto 20 15 lineto 0 5 moveto 15 20 lineto 0 15 moveto 5 20 lineto stroke
X} def /oblique5 {
X    10 0 moveto 0 10 lineto 20 0 moveto 0 20 lineto 20 10 moveto 10 20 lineto 10 0 moveto 20 10 lineto 0 0 moveto 20 20 lineto 0 10 moveto 10 20 lineto stroke
X} def /oblique6 {
X    5 0 moveto 0 5 lineto 10 0 moveto 0 10 lineto 15 0 moveto 0 15 lineto 20 0 moveto 0 20 lineto 20 5 moveto 5 20 lineto 20 10 moveto 10 20 lineto 20 15 moveto 15 20 lineto 10 0 moveto 20 10 lineto 15 0 moveto 20 5 lineto 5 0 moveto 20 15 lineto 0 0 moveto 20 20 lineto 0 5 moveto 15 20 lineto 0 10 moveto 10 20 lineto 0 15 moveto 5 20 lineto stroke
X} def /heart {
X    10 0 moveto 2 2 2 15 10 7 curveto 18 15 18 2 10 0 curveto closepath fill
X} def /block {
X    0 10 moveto 20 10 lineto 0 20 moveto 20 20 lineto 10 10 moveto 10 20 lineto 20 0 moveto 20 10 lineto stroke
X} def /wave {
X    0 10 moveto 5 10 5 180 360 arc 20 10 moveto 15 10 5 0 180 arc stroke
X} def /batsu {
X    0 0 moveto 2 2 lineto 0 20 moveto 2 18 lineto 8 8 moveto 12 12 lineto 8 12 moveto 12 8 lineto 18 18 moveto 20 20 lineto 18 2 moveto 20 0 lineto stroke
X} def /zetsuen1 {
X    0 20 moveto 10 0 lineto 10 20 moveto 20 0 lineto 0 0 moveto 20 0 lineto 0 10 moveto 20 10 lineto stroke
X} def /zetsuen2 {
X    0 0 moveto 10 20 lineto 10 0 moveto 20 20 lineto 0 0 moveto 20 0 lineto 0 10 moveto 20 10 lineto stroke
X} def /glass1 {
X    0 18 moveto 2 20 lineto 0 2 moveto 18 20 lineto 2 0 moveto 20 18 lineto 18 0 moveto 20 2 lineto stroke
X} def /glass2 {
X    0 2 moveto 2 0 lineto 0 18 moveto 18 0 lineto 2 20 moveto 20 2 lineto 18 20 moveto 20 18 lineto stroke
X} def /circle3 {
X    20 13.75 moveto 20 10 3.75 90 180 arc 17.5 10 1.25 180 360 arc 15 10 3.75 0 180 arc 12.5 10 1.25 180 360 arc 10 10 3.75 0 180 arc 7.5 10 1.25 180 360 arc 5 10 3.75 0 180 arc 2.5 10 1.25 180 360 arc 0 10 3.75 0 90 arc 20 3.75 moveto 20 0 3.75 90 180 arc 17.5 0 1.25 180 360 arc 15 0 3.75 0 180 arc 12.5 0 1.25 180 360 arc 10 0 3.75 0 180 arc 7.5 0 1.25 180 360 arc 5 0 3.75 0 180 arc 2.5 0 1.25 180 360 arc 0 0 3.75 0 90 arc stroke
X} def /circle2 {
X    20 10 moveto 20 2.5 7.5 90 180 arc 15 2.5 2.5 180 360 arc 10 2.5 7.5 0 180 arc 5 2.5 2.5 180 360 arc 0 2.5 7.5 0 90 arc stroke
X} def /circle1 {
X    20 20 moveto 20 5 15 90 180 arc 10 5 5 180 360 arc 0 5 15 0 90 arc stroke
X} def /tanten1 {
X    5 0 moveto 5 2 lineto 15 0 moveto 15 2 lineto 0 5 moveto 0 7 lineto 10 5 moveto 10 7 lineto 20 5 moveto 20 7 lineto 5 10 moveto 5 12 lineto 15 10 moveto 15 12 lineto 0 15 moveto 0 17 lineto 10 15 moveto 10 17 lineto 20 15 moveto 20 17 lineto stroke
X} def /tanten2 {
X    5 0 moveto 7 0 lineto 15 0 moveto 17 0 lineto 0 5 moveto 2 5 lineto 10 5 moveto 12 5 lineto 0 5 moveto 2 5 lineto 5 10 moveto 7 10 lineto 15 10 moveto 17 10 lineto 0 15 moveto 2 15 lineto 10 15 moveto 12 15 lineto 0 15 moveto 2 15 lineto stroke
X} def /tanten3 {
X    5 20 moveto 7 18 lineto 15 20 moveto 17 18 lineto 0 5 moveto 2 3 lineto 10 5 moveto 12 3 lineto 5 10 moveto 7 8 lineto 15 10 moveto 17 8 lineto 0 15 moveto 2 13 lineto 10 15 moveto 12 13 lineto stroke
X} def /tanten4 {
X    5 0 moveto 7 2 lineto 15 0 moveto 17 2 lineto 10 5 moveto 12 7 lineto 0 5 moveto 2 7 lineto 5 10 moveto 7 12 lineto 15 10 moveto 17 12 lineto 10 15 moveto 12 17 lineto 0 15 moveto 2 17 lineto stroke
X} def /tpatstr 10 string def /setdrawpat {
X    tpatstr cvs cvn PatternDict exch get cvx /hatchingpattern exch def
X} def /showHorizon {
X    gsave stx ptnwidth enx {
X        pop hatchingpattern ptnwidth 0 translate
X    } for grestore
X} def /showPattern {
X    gsave 1 setgray fill grestore stx sty translate newpath [] 0 setdash 1 setlinewidth sty ptnwidth eny {
X        pop showHorizon 0 ptnwidth translate
X    } for
X} def /fillpattern {
X    /ptnno exch def /eny exch def /enx exch def /drwsty exch def /drwstx exch def /ptnwidth 20 def /stx ptnwidth drwstx ptnwidth div truncate mul def /sty ptnwidth drwsty ptnwidth div truncate mul def gsave clip ptnno setdrawpat showPattern grestore
X} def /fillpatterneo {
X    /ptnno exch def /eny exch def /enx exch def /drwsty exch def /drwstx exch def /ptnwidth 20 def /stx ptnwidth drwstx ptnwidth div truncate mul def /sty ptnwidth drwsty ptnwidth div truncate mul def gsave eoclip ptnno setdrawpat showPattern grestore
X} def /ArcRect {
X    /r exch def /ey exch def /ex exch def /sy exch def /sx exch def newpath sx ex le {
X        sx r add
X    } {
X        sx r sub
X    } ifelse sy moveto ex sy ex ey r arcto 4 {
X        pop
X    } repeat ex ey sx ey r arcto 4 {
X        pop
X    } repeat sx ey sx sy r arcto 4 {
X        pop
X    } repeat sx sy ex sy r arcto 4 {
X        pop
X    } repeat closepath
X} def /oval {
X    /y exch def /x exch def /h exch def /w exch def matrix currentmatrix w h x y translate scale newpath 0.5 0.5 0.5 0 360 arc setmatrix
X} def /line {
X    moveto rlineto stroke
X} def /setup {
X    setlinewidth setlinecap setlinejoin gsave
X} def /arrow0 {
X    newpath moveto dup rotate [] 0 setdash ah neg aw rlineto a0h aw neg rlineto a0h neg aw neg rlineto closepath gsave 0 setlinejoin stroke grestore fill neg rotate
X} def /arrow1 {
X    newpath moveto dup rotate [] 0 setdash a1h neg a1w rmoveto a1h a1w neg rlineto a1h neg a1w neg rlineto a1h a1w rmoveto closepath gsave 0 setlinejoin stroke grestore neg rotate
X} def /arrow2 {
X    newpath [] 0 setdash ac 0 360 arc pop closepath gsave 0 setlinejoin stroke grestore fill
X} def
X%%EndSetup
X0 0 792 1008 rectclip
X252 176 222 143 rectclip
X252 176 222 143 rectclip
X[] 0 setdash
X0 0 2.897638 setup
X[] 0 setdash
X0 0 0.2 setup
X[] 0 setdash
X0 0 1.448819 setup
X0 nxsetgray
X282.465149 243.112289 moveto 282.465149 217.033539 282.465149 217.033539 308.435211 217.033539 curveto stroke
Xgrestore
X[] 0 setdash
X0 0 1.448819 setup
X0 nxsetgray
X282.465149 234.419342 moveto 282.465149 260.498108 282.465149 260.498108 308.435211 260.498108 curveto stroke
Xgrestore
X[] 0 setdash
X0 0 1.448819 setup
X0 nxsetgray
X334.62262 243.112289 moveto 334.62262 217.033539 334.62262 217.033539 308.435211 217.033539 curveto stroke
Xgrestore
X[] 0 setdash
X0 0 1.448819 setup
X0 nxsetgray
X334.622589 234.419373 moveto 334.622589 260.498108 334.622589 260.498108 308.435211 260.498108 curveto stroke
Xgrestore
X[] 0 setdash
X0 0 1.448819 setup
X0 nxsetgray
X280.183258 214.860306 336.687164 262.671326 0 ArcRect stroke
Xgrestore
X[] 0 setdash
X0 0 1.448819 setup
X0 nxsetgray
X8.692902 -8.692886 336.687195 262.671326 line
Xgrestore
X[] 0 setdash
X0 0 1.448819 setup
X0 nxsetgray
X0 -28.251999 345.380096 253.978439 line
Xgrestore
X[] 0 setdash
X0 0 1.448819 setup
X0 nxsetgray
X-8.692902 -10.866135 345.380096 225.72644 line
Xgrestore
X[] 0 setdash
X0 0 1.448819 setup
X0 nxsetgray
X56.503937 0 280.183258 212.687088 line
Xgrestore
X[] 0 setdash
X0 0 1.448819 setup
X0 nxsetgray
X0 -8.692932 336.687195 212.687088 line
Xgrestore
X[] 0 setdash
X0 0 1.448819 setup
X0 nxsetgray
X-10.86615 -10.866135 336.687195 203.994156 line
Xgrestore
X[] 0 setdash
X0 0 1.448819 setup
X0 nxsetgray
X0 6.519684 325.821045 193.128021 line
Xgrestore
X[] 0 setdash
X0 0 1.448819 setup
X0 nxsetgray
X10.86615 13.039383 325.821045 199.647705 line
Xgrestore
X[] 0 setdash
X0 0 1.448819 setup
X0 nxsetgray
X0 6.519684 269.317108 193.128021 line
Xgrestore
X[] 0 setdash
X0 0 1.448819 setup
X0 nxsetgray
X10.974823 13.365356 269.317108 199.647705 line
Xgrestore
X[] 0 setdash
X0 0 1.448819 setup
X0 nxsetgray
X56.503937 0 269.317108 199.647705 line
Xgrestore
X[] 0 setdash
X0 0 1.448819 setup
X0 nxsetgray
X-56.503937 0 325.821045 193.128021 line
Xgrestore
X[] 0 setdash
X0 0 1.448819 setup
X0 nxsetgray
X26.078766 0 286.702942 253.978439 line
Xgrestore
X[] 0 setdash
X0 0 1.448819 setup
X0 nxsetgray
X13.039368 0 286.702942 249.631958 line
Xgrestore
X[] 0 setdash
X0 0 1.448819 setup
X0 nxsetgray
X34.771667 0 286.702942 245.285492 line
Xgrestore
X[] 0 setdash
X0 0 1.448819 setup
X0 nxsetgray
X10.86615 0 286.702942 240.939041 line
Xgrestore
X[] 0 setdash
X0 0 1.448819 setup
X0 nxsetgray
X21.732269 0 286.702942 236.59259 line
Xgrestore
X[] 0 setdash
X0 0 1.448819 setup
X0 nxsetgray
X13.039368 0 286.702942 232.24614 line
Xgrestore
Xgrestore
X[] 0 setdash
X0 0 2.897638 setup
X[] 0 setdash
X0 0 1.448819 setup
X0 setgray
X355.798248 209.867111 419.546265 291.000977 0 ArcRect stroke
Xgrestore
X[] 0 setdash
X0 0 1.448819 setup
X0 nxsetgray
X23.181152 11.590546 355.798248 291.001007 line
Xgrestore
X[] 0 setdash
X0 0 1.448819 setup
X0 nxsetgray
X23.181091 11.590546 419.546295 291.001007 line
Xgrestore
X[] 0 setdash
X0 0 1.448819 setup
X0 nxsetgray
X23.181091 11.590576 419.546295 209.867111 line
Xgrestore
X[] 0 setdash
X0 0 1.448819 setup
X0 nxsetgray
X63.747986 0 378.979401 302.591553 line
Xgrestore
X[] 0 setdash
X0 0 1.448819 setup
X0 nxsetgray
X0 -81.133865 442.727386 302.591553 line
Xgrestore
X[] 0 setdash
X0 0 1.448819 setup
X0 nxsetgray
X344.207703 195.378937 422.443909 206.969482 0 ArcRect stroke
Xgrestore
X[] 0 setdash
X0 0 1.448819 setup
X0 nxsetgray
X11.88031 5.795273 344.207703 206.969482 line
Xgrestore
X[] 0 setdash
X0 0 1.448819 setup
X0 nxsetgray
X34.916565 17.385849 422.443909 206.969482 line
Xgrestore
X[] 0 setdash
X0 0 1.448819 setup
X0 nxsetgray
X34.771698 17.385818 422.443909 195.378937 line
Xgrestore
X[] 0 setdash
X0 0 1.448819 setup
X0 nxsetgray
X14.48822 0 442.727386 224.355331 line
Xgrestore
X[] 0 setdash
X0 0 1.448819 setup
X0 nxsetgray
X0 -11.590576 457.215607 224.355331 line
Xgrestore
X[] 0 setdash
X0 0 1.448819 setup
Xgsave
X0.333293 nxsetgray
X364.49118 218.560028 410.853394 221.457657 0 ArcRect fill
Xgrestore
X0 setgray
X364.49118 218.560028 410.853394 221.457657 0 ArcRect stroke
Xgrestore
X[] 0 setdash
X0 0 1.448819 setup
Xgsave
X0.333293 nxsetgray
X364.49118 227.25296 410.853394 230.150589 0 ArcRect fill
Xgrestore
X0 setgray
X364.49118 227.25296 410.853394 230.150589 0 ArcRect stroke
Xgrestore
X[] 0 setdash
X0 0 1.448819 setup
Xgsave
X0.333293 nxsetgray
X364.49118 235.945862 410.853394 238.843506 0 ArcRect fill
Xgrestore
X0 setgray
X364.49118 235.945862 410.853394 238.843506 0 ArcRect stroke
Xgrestore
X[] 0 setdash
X0 0 1.448819 setup
Xgsave
X0.333293 nxsetgray
X364.49118 244.638779 410.853394 247.536407 0 ArcRect fill
Xgrestore
X0 setgray
X364.49118 244.638779 410.853394 247.536407 0 ArcRect stroke
Xgrestore
X[] 0 setdash
X0 0 1.448819 setup
Xgsave
X0.333293 nxsetgray
X364.49118 253.331711 410.853394 256.22934 0 ArcRect fill
Xgrestore
X0 setgray
X364.49118 253.331711 410.853394 256.22934 0 ArcRect stroke
Xgrestore
Xgrestore
Xgrestore
X1 setgray
X0 setgray
X0.333333 setgray
Xgsave
X0 0 792 1008 rectclip
X[1 0 0 -1 0 1008] concat
Xgrestore
X%%Trailer
X
X%%EndDocument
Xcount __NXEPSOpCount sub {pop} repeat countdictstack __NXEPSDictCount sub {end} repeat __NXEPSSave restore
Xgrestore
Xgrestore
X[] 0 setdash
X0 0 3.622047 setup
X[] 0 setdash
X0 0 2.173229 setup
X0 setgray
X79.62706 79.62706 316.13266 506.103027 oval stroke
Xgrestore
X[] 0 setdash
X0 0 2.173229 setup
X0 setgray
X18.081261 18.081261 343.950012 555.131104 oval stroke
Xgrestore
X[] 0 setdash
X0 0 2.173229 setup
X0 0 translate
X1 1 scale
X0 setgray
Xgsave
Xnewpath
Xsystemdict
Xbegin
X336 522 362 542 setbbox
X350.55661 539.483826 moveto
X338.038849 524.184326 lineto
X359.249542 524.184326 lineto
X350.556641 539.483826 lineto
Xend
Xstroke
Xgrestore
Xgrestore
X[] 0 setdash
X0 0 2.173229 setup
Xgsave
X0.333293 nxsetgray
X365.720062 535.794983 382.062714 552.137695 0 ArcRect fill
Xgrestore
X0 setgray
X365.720062 535.794983 382.062714 552.137695 0 ArcRect stroke
Xgrestore
Xgrestore
X[] 0 setdash
X0 0 0.2 setup
X276.495667 405.605408 transform
Xgsave __NXbasematrix setmatrix itransform translate
X0 0 158.442062 158.442062 rectclip
X0 0 translate
X0 rotate
X0.6 0.6 scale
X-252 -176 translate
X
X/__NXEPSSave save def /showpage {} def
X_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
X/_NXcimage where{pop}{/_NXcimage /colorimage load def}ifelse /colorimage{dup 3 eq{true 2 index{1 index}{1}ifelse 7 add 1 roll _NXCalibratedImage}{_NXcimage}ifelse}def}if
X0 setgray 0 setlinecap 1 setlinewidth
X0 setlinejoin 10 setmiterlimit [] 0 setdash newpath count /__NXEPSOpCount exch def /__NXEPSDictCount countdictstack def
X%%BeginDocument: 
X%!PS-Adobe-2.0 EPSF-2.0
X%%Title: 
X%%Creator: DrawPlus
X%%CreationDate: Mon Dec 14 14:03:10 1992
X%%For: youki
X%%DocumentFonts: (atend)
X%%Pages: 0 0
X%%BoundingBox: 252 176 474 319
X%%NXNextStepVersion: 3.0
X%%EndComments
X
X%%BeginProcSet: /usr/lib/NextStep/printPackage.ps 3.0
X%!
X% NeXT Printing Package
X% Version: 3.0J
X% Modified by Canon based on Version 3.0 , 1992.01.07
X% Copyright: 1988, NeXT, Inc.
X
X/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
X/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
X/UserObjects 10 array __NXdef
X/defineuserobject{
X	exch dup 1 add dup UserObjects length gt{
X		array dup 0 UserObjects putinterval
X		/UserObjects exch def
X	}{pop}ifelse UserObjects exch 3 -1 roll put
X}__NXbdef
X/undefineuserobject{UserObjects exch null put}__NXbdef
X/execuserobject{UserObjects exch get exec}__NXbdef
X/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
X0 exch rlineto neg 0 rlineto closepath}__NXbdef
X/__NXProcessRectArgs{
X	1 index type /arraytype eq{
X		exch 0 4 2 index length 1 sub{
X			dup 3 add 1 exch{1 index exch get exch}for
X			5 1 roll 5 index exec
X		}for pop pop
X	}{exec}ifelse
X}__NXbdef
X/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
X/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
X/rectstroke{
X	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
X		{gsave __NXRectPath null concat stroke grestore}
X		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
X	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
X}__NXbdef
X/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
X/xyshow{
X	0 1 3 index length 1 sub{
X		currentpoint 4 index 3 index 1 getinterval show
X		3 index 3 index 2 mul 1 add get add exch
X		3 index	3 index 2 mul get add exch moveto pop
X	}for pop pop
X}__NXbdef
X/xshow{
X	0 1 3 index length 1 sub{
X		currentpoint 4 index 3 index 1 getinterval show
X		exch 3 index 3 index get add exch moveto pop
X	}for pop pop
X}__NXbdef
X/yshow{
X	0 1 3 index length 1 sub{
X		currentpoint 4 index 3 index 1 getinterval show
X		3 index 3 index get add moveto pop
X	}for pop pop
X}__NXbdef
X/arct{arcto pop pop pop pop}__NXbdef
X/setbbox{pop pop pop pop}__NXbdef
X/ucache{}__NXbdef
X/ucachestatus{mark 0 0 0 0 0}__NXbdef
X/setucacheparams{cleartomark}__NXbdef
X/uappend{systemdict begin cvx exec end}__NXbdef
X/ueofill{gsave newpath uappend eofill grestore}__NXbdef
X/ufill{gsave newpath uappend fill grestore}__NXbdef
X/ustroke{
X	gsave newpath dup length 6 eq
X	{exch uappend concat}{uappend}ifelse
X	stroke grestore
X}__NXbdef
X/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
X/ustrokepath{
X	newpath dup length 6 eq{
X		exch uappend __NXustrokepathMatrix currentmatrix exch concat
X		strokepath setmatrix
X	}{uappend strokepath}ifelse
X} __NXbdef
X/upath{
X	[exch {/ucache cvx}if pathbbox /setbbox cvx
X	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
X} __NXbdef
X/setstrokeadjust{pop}__NXbdef
X/currentstrokeadjust{false}__NXbdef
X/selectfont{exch findfont exch
Xdup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
X/_NXCombineArrays{
X	counttomark dup 2 add index dup length 3 -1 roll {
X		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
X	}repeat pop pop pop
X}__NXbdef
X/flushgraphics{}def
X/setwindowtype{pop pop}def
X/currentwindowtype{pop 0}def
X/setalpha{pop}def
X/currentalpha{1.0}def
X/hidecursor{}def
X/obscurecursor{}def
X/revealcursor{}def
X/setcursor{4 {pop}repeat}bind def
X/showcursor{}def
X
X/SharedFontDirectory FontDirectory __NXdef
X/_JPN /GothicBBB-Medium-EUC-H dup findfont /FontName get eq def
X
X_JPN {
X  mark { /NJ12-88-CFEncoding findencoding } stopped {
X    /defineresource {
X      pop dup 3 1 roll userdict /EncodingDirectory get 3 1 roll readonly put
X    } __NXbdef
X    /GothicBBB-Medium-EUC-H findfont begin
X	Encoding dup length array copy dup dup dup length 2 idiv dup getinterval
X	0 exch putinterval
X	FMapType 2 eq {
X	    dup 16#0E 78 put dup 16#20 89 put
X	    0 1 9 {dup 16#75 add exch 79 add 2 index 3 1 roll put} for
X	}{
X	    dup 16#1D 78 put dup 16#41 89 put
X	    0 1 9 {dup dup add 16#EB add exch 79 add 2 index 3 1 roll put} for
X	} ifelse
X    /NJ12-88-CFEncoding exch /Encoding defineresource pop
X    /EUCEncoding FDepVector 10 get /Encoding get /Encoding defineresource pop
X    end
X  } if cleartomark
X} if
X
X/_@Private dup where {pop pop}{50 dict def}ifelse
X/__NJdef _JPN {{//_@Private 3 1 roll put}}{{pop pop}} ifelse bind def
X/__NJbdef _JPN {{//_@Private 2 index known {pop pop}{bind //_@Private 3 1 roll put}ifelse}}{{pop pop}} ifelse bind def
X/_str 128 string __NJdef
X/_find { % /FName _find FontOrFName bool
X    false 0 {dup 3 index known {3 -1 roll get exch pop true exit}{pop}ifelse} forall
X} bind dup 1
X[/SharedFontDirectory dup where {exch get}{pop}ifelse //FontDirectory] put //_@Private 3 1 roll put
X/_copyfont@ { % -font- extension _copyfont@ -dict-
X    1 index maxlength add dict begin {
X	1 index /FID ne 2 index /UniqueID ne and {def}{pop pop}ifelse
X    } forall currentdict end
X} __NJbdef
X/_bind { % /n1 /n2 _bind /n1+2
X    exch dup length 2 index length add _str 4 2 roll
X    _str cvs length exch dup length string cvs putinterval
X    _str exch 0 exch getinterval cvn
X} __NJbdef
X/NDEncoding 256 array dup 0 1 255 {/.notdef put dup} for pop __NJdef
X/_shiftE { % /Fname start length target -font- _shiftE -dict-
X    0 _copyfont@ begin Encoding 4 2 roll getinterval NDEncoding 256 array
X    copy dup 4 -2 roll putinterval Encoding length 256 eq {
X    dup dup 0 128 getinterval 128 exch putinterval } if
X    /Encoding exch def /FontName exch def currentdict end
X} __NJbdef
X/_makeSGFDV { % - _makeSGFDV [FDV]
X    [ _FN /.WP-Symbol _bind findfont
X    _SGFN /.rFC _bind dup 0 96 32 5 index _shiftE definefont
X    _SGFN /.rFD _bind dup 96 32 32 6 index _shiftE definefont
X    _SGFN /.rFE _bind dup 0 128 0 _FN /-Ext-H _bind findfont dup /Encoding get
X    16#2d get exch /FDepVector get exch get _shiftE dup /Encoding 2 copy get
X    [16#f0 16#f1 16#f2 16#f5 16#f6 16#f7 16#fa 16#fb 16#fc] {
X	dup 2 index exch /.notdef put 128 sub 1 index exch /.notdef put
X    } forall put definefont
X    ] dup 0 /NotDefFont findfont put
X} __NJbdef
X/_defSGaiji { % /fullname /basename _defSGaiji -sysGaiji-
X    /_FN exch __NJdef /_SGFN exch __NJdef 15 dict
X    dup /FontName _SGFN put	dup /FontType 0 put
X    dup /FMapType 2 put		dup /FontMatrix matrix put
X    dup /FontBBox {0 -140 1000 880} put
X    dup /Encoding 256 array 0 1 255 {1 index exch 0 put}for
X	dup 16#FC 1 put    dup 16#FD 2 put    dup 16#FE 3 put put
X    dup /FDepVector _makeSGFDV put    dup /isNeXTGaiji true put
X    _SGFN exch definefont
X} __NJbdef
X/_defNeXTF { % /fullname /basename Hflag _defNeXTF
X2 index _find { 4 1 roll pop pop pop}{pop
X    /_FN 2 index __NJdef {/-EUC-H}{/-EUC-V}ifelse _bind findfont
X    1 _copyfont@ begin
X    /FontName 1 index def
X    /UserGaijiName _FN /-NeXT-UserGaiji _bind def
X    /Encoding Encoding dup length array copy FMapType 2 eq {dup 16#8E 78 put
X	0 1 9 {dup 16#F5 add exch 79 add 2 index 3 1 roll put} for
X    }{  dup 16#11D 78 put
X	0 1 9 {dup dup add 16#1EB add exch 79 add 2 index 3 1 roll put} for
X    } ifelse def
X    /FDepVector [FDepVector aload pop _FN /.Hankaku _bind
X	dup /_ _bind exch 128 128 0 3 index findfont _shiftE definefont
X	UserGaijiName findfont dup /isNeXTGaiji 2 copy known {
X	    get {/FDepVector get 1 7 getinterval aload pop
X	    }{pop /NotDefFont findfont 6 {dup} repeat}ifelse
X	}{pop pop pop /NotDefFont findfont 6 {dup} repeat}ifelse
X	_FN /-NeXT-SystemGaiji _bind findfont /FDepVector get 1 3 getinterval
X	aload pop] def
X    currentdict end definefont
X}ifelse
X} __NJbdef
X/_findNarrow { % /FName _findNarrow -font-
X    dup _str cvs (Narrow) anchorsearch {pop cvn exch _find {exch pop}{
X	exch findfont 0 _copyfont@ dup /FontName 3 index put
X	dup /FontMatrix 2 copy get [5 6 div 0 0 1 0 0] matrix concatmatrix put
X	definefont}ifelse
X    }{pop findfont}ifelse
X} __NJbdef
X/_defmixfont@ { % /FName [/ASCII /KANJI shiftmtx] _defmixfont@ -font-
X    aload pop /_@shiftmatrix exch __NJdef (-NeXT-H) _bind findfont
X    /_EUC exch __NJdef _findNarrow /_@ASCII exch __NJdef
X    dup /_ exch _bind dup _EUC /Encoding get length 2 idiv dup 0 _EUC _shiftE
X    dup /Encoding 2 copy get dup
X	3 index /FMapType get 5 eq {16#41}{16#20}ifelse 89 put  put
X    dup /FontMatrix _@shiftmatrix put
X    dup /FDepVector [ _EUC /FDepVector get aload pop _EUC /FMapType get 5 eq {
X	/_S_ _@ASCII /FontName get _bind _@ASCII 0 _copyfont@
X	dup /Encoding 2 copy get 256 array copy dup dup dup 0 128 getinterval
X	128 exch putinterval 0 _@ASCII /Encoding get 128 128 getinterval
X	putinterval put dup /FontName 3 index put definefont
X	}{_@ASCII}ifelse
X	 _@shiftmatrix matrix invertmatrix makefont] put definefont
X    15 dict begin
X	/FontName 2 index def
X	/FontType 0 def     /PaintType 0 def
X	/FMapType 4 def     /FontMatrix matrix def
X	/Encoding [0 1] def /PrefEnc 1 index /Encoding get def
X	/FontBBox _@ASCII /FontBBox get 4 array copy cvx
X	    dup 2 get 1000 lt {dup 2 1000 put}if
X	    dup 3 get 880 lt {dup 3 880 put}if def
X	/FontInfo _@ASCII /FontInfo get def
X	/FDepVector [_@ASCII 4 -1 roll] def
X	currentdict end definefont
X} __NJbdef
X/Ryumin-Light-NeXT-H {/Ryumin-Light true _defNeXTF} __NJbdef
X/Ryumin-Light-NeXT-V {/Ryumin-Light false _defNeXTF} __NJbdef
X/GothicBBB-Medium-NeXT-H {/GothicBBB-Medium true _defNeXTF} __NJbdef
X/GothicBBB-Medium-NeXT-V {/GothicBBB-Medium false _defNeXTF} __NJbdef
X/Ryumin-Light-NeXT-SystemGaiji {/Ryumin-Light _defSGaiji} __NJbdef
X/GothicBBB-Medium-NeXT-SystemGaiji {/GothicBBB-Medium _defSGaiji} __NJbdef
X/FixedRyuminCourier-Light {
X	[/NarrowCourier /Ryumin-Light matrix] _defmixfont@} __NJbdef
X/FixedRyuminCourier-LightOblique {
X	[/NarrowCourier-Oblique /Ryumin-Light [1 0 .212557 1 0 0]] _defmixfont@} __NJbdef
X/FixedRyuminCourier-Bold {
X	[/NarrowCourier-Bold /Ryumin-Light matrix] _defmixfont@} __NJbdef
X/FixedRyuminCourier-BoldOblique {
X	[/NarrowCourier-BoldOblique /Ryumin-Light [1 0 .212557 1 0 0]] _defmixfont@} __NJbdef
X/RyuminTimes-Light {
X	[/Times-Roman /Ryumin-Light matrix] _defmixfont@} __NJbdef
X/RyuminTimes-LightOblique {
X	[/Times-Italic /Ryumin-Light [1 0 .277325 1 0 0]] _defmixfont@} __NJbdef
X/RyuminTimes-Bold {
X	[/Times-Bold /Ryumin-Light matrix] _defmixfont@} __NJbdef
X/RyuminTimes-BoldOblique {
X	[/Times-BoldItalic /Ryumin-Light [1 0 .277325 1 0 0]] _defmixfont@} __NJbdef
X/FixedGothicBBBCourier {
X	[/NarrowCourier /GothicBBB-Medium matrix] _defmixfont@} __NJbdef
X/FixedGothicBBBCourier-Oblique {
X	[/NarrowCourier-Oblique /GothicBBB-Medium [1 0 .212557 1 0 0]] _defmixfont@} __NJbdef
X/FixedGothicBBBCourier-Bold {
X	[/NarrowCourier-Bold /GothicBBB-Medium matrix] _defmixfont@} __NJbdef
X/FixedGothicBBBCourier-BoldOblique {
X	[/NarrowCourier-BoldOblique /GothicBBB-Medium [1 0 .212557 1 0 0]] _defmixfont@} __NJbdef
X/GothicBBBHelvetica {
X	[/Helvetica /GothicBBB-Medium matrix] _defmixfont@} __NJbdef
X/GothicBBBHelvetica-Oblique {
X	[/Helvetica-Oblique /GothicBBB-Medium [1 0 .212557 1 0 0]] _defmixfont@} __NJbdef
X/GothicBBBHelvetica-Bold {
X	[/Helvetica-Bold /GothicBBB-Medium matrix] _defmixfont@} __NJbdef
X/GothicBBBHelvetica-BoldOblique {
X	[/Helvetica-BoldOblique /GothicBBB-Medium [1 0 .212557 1 0 0]] _defmixfont@} __NJbdef
X/TitleGothicBBBHelvetica {
X	[/Helvetica /GothicBBB-Medium matrix] _defmixfont@} __NJbdef
X/TitleGothicBBBHelvetica-Bold {
X	[/Helvetica-Bold /GothicBBB-Medium matrix] _defmixfont@} __NJbdef
X
X/NextStepEncoding where not{
X/NextStepEncoding StandardEncoding 256 array copy def
X0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
X/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
X/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
X/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
X176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
X204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
X/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
X/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
X/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
X/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
X{dup type /nametype eq
X {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
X}forall pop
X/NextStepEncoding NextStepEncoding readonly def
X/_NXfstr 128 string dup 0 (_NX) putinterval def
X/_NXfindfont /findfont load def
X
X/NJEncoding NextStepEncoding /Encoding defineresource pop
X
X/findfont{
X % Because we can never let NextStepEncoding get into
X % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
X % if we are in shared mode.  So if currentshared is true,
X % we call the normal findfont and return that
X /currentshared where {pop currentshared} {false} ifelse
X {_NXfindfont}{dup //_@Private exch known {
X   //_@Private begin dup load exec end
X }{dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
X  getinterval cvn exch FontDirectory 2 index known 
X  {pop FontDirectory exch get}
X  {_NXfindfont dup /Encoding get StandardEncoding eq
X   {	dup length dict exch
X	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
X	 dup /Encoding NextStepEncoding put definefont
X	}{exch pop} ifelse
X    }ifelse
X   }ifelse
X  }ifelse
X}bind def
X}{pop}ifelse
X/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
X/_NXDoImageOp{
X	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
X	chans 2 add 2 roll parr 0 chans getinterval astore pop
X	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
X	4 index mul /totbytes exch def pop exch pop
X	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
X	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
X}__NXbdef
X/alphaimage{1 add _NXDoImageOp}def
X_NXLevel2{ 
X	/NXCalibratedRGBColorSpace where{pop}{
X		/NXCalibratedRGBColorSpace
X		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
X		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
X		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
X		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
X	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
X	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
X	/_NXSetCMYKOrRGB{nxsetrgbcolor pop pop pop pop}__NXbdef 
X	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
X		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
X		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
X		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
X		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
X		/DataSource exch def /ImageMatrix exch def 
X		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
X} {
X	/setcmykcolor{
X		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
X		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
X	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
X	/colorimage{_NXDoImageOp}__NXbdef
X	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
X	/setpattern{pop .5 setgray}__NXbdef
X	/_NXSetCMYKOrRGB{pop pop pop setcmykcolor}__NXbdef 
X	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
X} ifelse
X%%EndProcSet
X
X_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
X}if
Xgsave
X /__NXbasematrix matrix currentmatrix def
Xgrestore
X%%EndProlog
X%%BeginSetup
X/PatternDict 25 dict def PatternDict begin /1 /verticals1 def /2 /verticals2 def /3 /holizontal1 def /4 /holizontal2 def /5 /lattice1 def /6 /lattice2 def /7 /point1 def /8 /point2 def /9 /oblique1 def /10 /oblique2 def /11 /oblique3 def /12 /oblique4 def /13 /oblique5 def /14 /oblique6 def /15 /block def /16 /zetsuen1 def /17 /zetsuen2 def /18 /batsu def /19 /glass1 def /20 /glass2 def /21 /circle3 def /22 /tanten1 def /23 /tanten2 def /24 /tanten3 def /25 /tanten4 def end /space {
X    newpath
X} def /verticals1 {
X    5 0 moveto 5 20 lineto 10 0 moveto 10 20 lineto 15 0 moveto 15 20 lineto 20 0 moveto 20 20 lineto stroke
X} def /verticals2 {
X    8 0 moveto 8 20 lineto 18 0 moveto 18 20 lineto stroke
X} def /holizontal1 {
X    0 5 moveto 20 5 lineto 0 10 moveto 20 10 lineto 0 15 moveto 20 15 lineto 0 20 moveto 20 20 lineto stroke
X} def /holizontal2 {
X    0 10 moveto 20 10 lineto 0 20 moveto 20 20 lineto stroke
X} def /lattice1 {
X    5 0 moveto 5 20 lineto 10 0 moveto 10 20 lineto 15 0 moveto 15 20 lineto 20 0 moveto 20 20 lineto 0 5 moveto 20 5 lineto 0 10 moveto 20 10 lineto 0 15 moveto 20 15 lineto 0 20 moveto 20 20 lineto stroke
X} def /lattice2 {
X    5 0 moveto 5 20 lineto 15 0 moveto 15 20 lineto 0 5 moveto 20 5 lineto 0 15 moveto 20 15 lineto stroke
X} def /point1 {
X    5 5 moveto 5 5 1 0 360 arc 5 15 moveto 5 15 1 0 360 arc 15 5 moveto 15 5 1 0 360 arc 15 15 moveto 15 15 1 0 360 arc fill
X} def /point2 {
X    10 10 moveto 10 10 1 0 360 arc 1 0 moveto 0 0 1 0 90 arc 0 19 moveto 0 20 1 270 360 arc 20 1 moveto 20 0 1 90 180 arc 19 20 moveto 20 20 1 180 270 arc fill
X} def /oblique1 {
X    5 0 moveto 0 5 lineto 10 0 moveto 0 10 lineto 15 0 moveto 0 15 lineto 20 0 moveto 0 20 lineto 20 5 moveto 5 20 lineto 20 10 moveto 10 20 lineto 20 15 moveto 15 20 lineto stroke
X} def /oblique2 {
X    5 0 moveto 0 5 lineto 15 0 moveto 0 15 lineto 20 5 moveto 5 20 lineto 20 15 moveto 15 20 lineto stroke
X} def /oblique3 {
X    15 0 moveto 20 5 lineto 10 0 moveto 20 10 lineto 5 0 moveto 20 15 lineto 0 0 moveto 20 20 lineto 0 5 moveto 15 20 lineto 0 10 moveto 10 20 lineto 0 15 moveto 5 20 lineto stroke
X} def /oblique4 {
X    15 0 moveto 20 5 lineto 5 0 moveto 20 15 lineto 0 5 moveto 15 20 lineto 0 15 moveto 5 20 lineto stroke
X} def /oblique5 {
X    10 0 moveto 0 10 lineto 20 0 moveto 0 20 lineto 20 10 moveto 10 20 lineto 10 0 moveto 20 10 lineto 0 0 moveto 20 20 lineto 0 10 moveto 10 20 lineto stroke
X} def /oblique6 {
X    5 0 moveto 0 5 lineto 10 0 moveto 0 10 lineto 15 0 moveto 0 15 lineto 20 0 moveto 0 20 lineto 20 5 moveto 5 20 lineto 20 10 moveto 10 20 lineto 20 15 moveto 15 20 lineto 10 0 moveto 20 10 lineto 15 0 moveto 20 5 lineto 5 0 moveto 20 15 lineto 0 0 moveto 20 20 lineto 0 5 moveto 15 20 lineto 0 10 moveto 10 20 lineto 0 15 moveto 5 20 lineto stroke
X} def /heart {
X    10 0 moveto 2 2 2 15 10 7 curveto 18 15 18 2 10 0 curveto closepath fill
X} def /block {
X    0 10 moveto 20 10 lineto 0 20 moveto 20 20 lineto 10 10 moveto 10 20 lineto 20 0 moveto 20 10 lineto stroke
X} def /wave {
X    0 10 moveto 5 10 5 180 360 arc 20 10 moveto 15 10 5 0 180 arc stroke
X} def /batsu {
X    0 0 moveto 2 2 lineto 0 20 moveto 2 18 lineto 8 8 moveto 12 12 lineto 8 12 moveto 12 8 lineto 18 18 moveto 20 20 lineto 18 2 moveto 20 0 lineto stroke
X} def /zetsuen1 {
X    0 20 moveto 10 0 lineto 10 20 moveto 20 0 lineto 0 0 moveto 20 0 lineto 0 10 moveto 20 10 lineto stroke
X} def /zetsuen2 {
X    0 0 moveto 10 20 lineto 10 0 moveto 20 20 lineto 0 0 moveto 20 0 lineto 0 10 moveto 20 10 lineto stroke
X} def /glass1 {
X    0 18 moveto 2 20 lineto 0 2 moveto 18 20 lineto 2 0 moveto 20 18 lineto 18 0 moveto 20 2 lineto stroke
X} def /glass2 {
X    0 2 moveto 2 0 lineto 0 18 moveto 18 0 lineto 2 20 moveto 20 2 lineto 18 20 moveto 20 18 lineto stroke
X} def /circle3 {
X    20 13.75 moveto 20 10 3.75 90 180 arc 17.5 10 1.25 180 360 arc 15 10 3.75 0 180 arc 12.5 10 1.25 180 360 arc 10 10 3.75 0 180 arc 7.5 10 1.25 180 360 arc 5 10 3.75 0 180 arc 2.5 10 1.25 180 360 arc 0 10 3.75 0 90 arc 20 3.75 moveto 20 0 3.75 90 180 arc 17.5 0 1.25 180 360 arc 15 0 3.75 0 180 arc 12.5 0 1.25 180 360 arc 10 0 3.75 0 180 arc 7.5 0 1.25 180 360 arc 5 0 3.75 0 180 arc 2.5 0 1.25 180 360 arc 0 0 3.75 0 90 arc stroke
X} def /circle2 {
X    20 10 moveto 20 2.5 7.5 90 180 arc 15 2.5 2.5 180 360 arc 10 2.5 7.5 0 180 arc 5 2.5 2.5 180 360 arc 0 2.5 7.5 0 90 arc stroke
X} def /circle1 {
X    20 20 moveto 20 5 15 90 180 arc 10 5 5 180 360 arc 0 5 15 0 90 arc stroke
X} def /tanten1 {
X    5 0 moveto 5 2 lineto 15 0 moveto 15 2 lineto 0 5 moveto 0 7 lineto 10 5 moveto 10 7 lineto 20 5 moveto 20 7 lineto 5 10 moveto 5 12 lineto 15 10 moveto 15 12 lineto 0 15 moveto 0 17 lineto 10 15 moveto 10 17 lineto 20 15 moveto 20 17 lineto stroke
X} def /tanten2 {
X    5 0 moveto 7 0 lineto 15 0 moveto 17 0 lineto 0 5 moveto 2 5 lineto 10 5 moveto 12 5 lineto 0 5 moveto 2 5 lineto 5 10 moveto 7 10 lineto 15 10 moveto 17 10 lineto 0 15 moveto 2 15 lineto 10 15 moveto 12 15 lineto 0 15 moveto 2 15 lineto stroke
X} def /tanten3 {
X    5 20 moveto 7 18 lineto 15 20 moveto 17 18 lineto 0 5 moveto 2 3 lineto 10 5 moveto 12 3 lineto 5 10 moveto 7 8 lineto 15 10 moveto 17 8 lineto 0 15 moveto 2 13 lineto 10 15 moveto 12 13 lineto stroke
X} def /tanten4 {
X    5 0 moveto 7 2 lineto 15 0 moveto 17 2 lineto 10 5 moveto 12 7 lineto 0 5 moveto 2 7 lineto 5 10 moveto 7 12 lineto 15 10 moveto 17 12 lineto 10 15 moveto 12 17 lineto 0 15 moveto 2 17 lineto stroke
X} def /tpatstr 10 string def /setdrawpat {
X    tpatstr cvs cvn PatternDict exch get cvx /hatchingpattern exch def
X} def /showHorizon {
X    gsave stx ptnwidth enx {
X        pop hatchingpattern ptnwidth 0 translate
X    } for grestore
X} def /showPattern {
X    gsave 1 setgray fill grestore stx sty translate newpath [] 0 setdash 1 setlinewidth sty ptnwidth eny {
X        pop showHorizon 0 ptnwidth translate
X    } for
X} def /fillpattern {
X    /ptnno exch def /eny exch def /enx exch def /drwsty exch def /drwstx exch def /ptnwidth 20 def /stx ptnwidth drwstx ptnwidth div truncate mul def /sty ptnwidth drwsty ptnwidth div truncate mul def gsave clip ptnno setdrawpat showPattern grestore
X} def /fillpatterneo {
X    /ptnno exch def /eny exch def /enx exch def /drwsty exch def /drwstx exch def /ptnwidth 20 def /stx ptnwidth drwstx ptnwidth div truncate mul def /sty ptnwidth drwsty ptnwidth div truncate mul def gsave eoclip ptnno setdrawpat showPattern grestore
X} def /ArcRect {
X    /r exch def /ey exch def /ex exch def /sy exch def /sx exch def newpath sx ex le {
X        sx r add
X    } {
X        sx r sub
X    } ifelse sy moveto ex sy ex ey r arcto 4 {
X        pop
X    } repeat ex ey sx ey r arcto 4 {
X        pop
X    } repeat sx ey sx sy r arcto 4 {
X        pop
X    } repeat sx sy ex sy r arcto 4 {
X        pop
X    } repeat closepath
X} def /oval {
X    /y exch def /x exch def /h exch def /w exch def matrix currentmatrix w h x y translate scale newpath 0.5 0.5 0.5 0 360 arc setmatrix
X} def /line {
X    moveto rlineto stroke
X} def /setup {
X    setlinewidth setlinecap setlinejoin gsave
X} def /arrow0 {
X    newpath moveto dup rotate [] 0 setdash ah neg aw rlineto a0h aw neg rlineto a0h neg aw neg rlineto closepath gsave 0 setlinejoin stroke grestore fill neg rotate
X} def /arrow1 {
X    newpath moveto dup rotate [] 0 setdash a1h neg a1w rmoveto a1h a1w neg rlineto a1h neg a1w neg rlineto a1h a1w rmoveto closepath gsave 0 setlinejoin stroke grestore neg rotate
X} def /arrow2 {
X    newpath [] 0 setdash ac 0 360 arc pop closepath gsave 0 setlinejoin stroke grestore fill
X} def
X%%EndSetup
X0 0 792 1008 rectclip
X252 176 222 143 rectclip
X252 176 222 143 rectclip
X[] 0 setdash
X0 0 2.897638 setup
X[] 0 setdash
X0 0 0.2 setup
X[] 0 setdash
X0 0 1.448819 setup
X0 nxsetgray
X282.465149 243.112289 moveto 282.465149 217.033539 282.465149 217.033539 308.435211 217.033539 curveto stroke
Xgrestore
X[] 0 setdash
X0 0 1.448819 setup
X0 nxsetgray
X282.465149 234.419342 moveto 282.465149 260.498108 282.465149 260.498108 308.435211 260.498108 curveto stroke
Xgrestore
X[] 0 setdash
X0 0 1.448819 setup
X0 nxsetgray
X334.62262 243.112289 moveto 334.62262 217.033539 334.62262 217.033539 308.435211 217.033539 curveto stroke
Xgrestore
X[] 0 setdash
X0 0 1.448819 setup
X0 nxsetgray
X334.622589 234.419373 moveto 334.622589 260.498108 334.622589 260.498108 308.435211 260.498108 curveto stroke
Xgrestore
X[] 0 setdash
X0 0 1.448819 setup
X0 nxsetgray
X280.183258 214.860306 336.687164 262.671326 0 ArcRect stroke
Xgrestore
X[] 0 setdash
X0 0 1.448819 setup
X0 nxsetgray
X8.692902 -8.692886 336.687195 262.671326 line
Xgrestore
X[] 0 setdash
X0 0 1.448819 setup
X0 nxsetgray
X0 -28.251999 345.380096 253.978439 line
Xgrestore
X[] 0 setdash
X0 0 1.448819 setup
X0 nxsetgray
X-8.692902 -10.866135 345.380096 225.72644 line
Xgrestore
X[] 0 setdash
X0 0 1.448819 setup
X0 nxsetgray
X56.503937 0 280.183258 212.687088 line
Xgrestore
X[] 0 setdash
X0 0 1.448819 setup
X0 nxsetgray
X0 -8.692932 336.687195 212.687088 line
Xgrestore
X[] 0 setdash
X0 0 1.448819 setup
X0 nxsetgray
X-10.86615 -10.866135 336.687195 203.994156 line
Xgrestore
X[] 0 setdash
X0 0 1.448819 setup
X0 nxsetgray
X0 6.519684 325.821045 193.128021 line
Xgrestore
X[] 0 setdash
X0 0 1.448819 setup
X0 nxsetgray
X10.86615 13.039383 325.821045 199.647705 line
Xgrestore
X[] 0 setdash
X0 0 1.448819 setup
X0 nxsetgray
X0 6.519684 269.317108 193.128021 line
Xgrestore
X[] 0 setdash
X0 0 1.448819 setup
X0 nxsetgray
X10.974823 13.365356 269.317108 199.647705 line
Xgrestore
X[] 0 setdash
X0 0 1.448819 setup
X0 nxsetgray
X56.503937 0 269.317108 199.647705 line
Xgrestore
X[] 0 setdash
X0 0 1.448819 setup
X0 nxsetgray
X-56.503937 0 325.821045 193.128021 line
Xgrestore
X[] 0 setdash
X0 0 1.448819 setup
X0 nxsetgray
X26.078766 0 286.702942 253.978439 line
Xgrestore
X[] 0 setdash
X0 0 1.448819 setup
X0 nxsetgray
END_OF_FILE
  if test 79511 -ne `wc -c <'doc/panel.ps.B'`; then
    echo shar: \"'doc/panel.ps.B'\" unpacked with wrong size!
  elif test -f 'doc/panel.ps.A' && test -f 'doc/panel.ps.C'; then
    echo shar: Combining  \"'doc/panel.ps'\" \(235281 characters\)
    cat 'doc/panel.ps.A' 'doc/panel.ps.B' 'doc/panel.ps.C' > 'doc/panel.ps'
    if test 235281 -ne `wc -c <'doc/panel.ps'`; then
      echo shar: \"'doc/panel.ps'\" combined with wrong size!
    else
      rm doc/panel.ps.A doc/panel.ps.B doc/panel.ps.C
    fi
  fi
  # end of 'doc/panel.ps.B'
fi
if test -f 'rpc/cs_prot.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'rpc/cs_prot.h'\"
else
  echo shar: Extracting \"'rpc/cs_prot.h'\" \(6215 characters\)
  sed "s/^X//" >'rpc/cs_prot.h' <<'END_OF_FILE'
X/*
X * Please do not edit this file.
X * It was generated using rpcgen.
X */
X
X#include <rpc/types.h>
X
X#define CS_MAXDATA 8192
X#define CS_FHSIZE 32
X#define CS_MAXPATHLEN 1024
X#define CS_MAXNAMLEN 255
X#define CS_MAXHOSTLEN 64
X
Xenum cs_stat {
X	CS_OK = 0,
X	CS_BULK = 201,
X	CS_WAIT = 202,
X	CSERR_NOENT = 2,
X	CSERR_ACCES = 13,
X	CSERR_NOTDIR = 20,
X	CSERR_ISDIR = 21,
X	CSERR_FBIG = 27,
X	CSERR_NOSPC = 28,
X	CSERR_ROFS = 30,
X	CSERR_STALE = 70,
X	CSERR_OTHER = 100,
X	CSERR_ALREADY = 101,
X	CSERR_PROTO = 102,
X	CSERR_NDOWN = 103,
X	CSERR_NUNREACH = 104,
X	CSERR_XABORT = 105,
X	CSERR_TIMEOUT = 106,
X	CSERR_REFUSED = 107,
X	CSERR_HDOWN = 108,
X	CSERR_HUNREACH = 109,
X	CSERR_NQUOT = 110,
X};
Xtypedef enum cs_stat cs_stat;
Xbool_t xdr_cs_stat();
X#ifndef NFS_FH_DEFINED
X
Xstruct nfs_fh {
X	char data[CS_FHSIZE];
X};
Xtypedef struct nfs_fh nfs_fh;
Xbool_t xdr_nfs_fh();
X
Xtypedef char *filename;
Xbool_t xdr_filename();
X
Xtypedef char *nfspath;
Xbool_t xdr_nfspath();
X
Xstruct nfstime {
X	u_int seconds;
X	u_int useconds;
X};
Xtypedef struct nfstime nfstime;
Xbool_t xdr_nfstime();
X
Xenum ftype {
X	NFNON = 0,
X	NFREG = 1,
X	NFDIR = 2,
X	NFBLK = 3,
X	NFCHR = 4,
X	NFLNK = 5,
X	NFSOCK = 6,
X	NFBAD = 7,
X	NFFIFO = 8,
X};
Xtypedef enum ftype ftype;
Xbool_t xdr_ftype();
X
Xstruct fattr {
X	ftype type;
X	u_int mode;
X	u_int nlink;
X	u_int uid;
X	u_int gid;
X	u_int size;
X	u_int blocksize;
X	u_int rdev;
X	u_int blocks;
X	u_int fsid;
X	u_int fileid;
X	nfstime atime;
X	nfstime mtime;
X	nfstime ctime;
X};
Xtypedef struct fattr fattr;
Xbool_t xdr_fattr();
X#define NFS_FH_DEFINED
X#endif
X
Xstruct cs_fhres {
X	cs_stat status;
X	union {
X		nfs_fh file;
X		long err_context;
X	} cs_fhres_u;
X};
Xtypedef struct cs_fhres cs_fhres;
Xbool_t xdr_cs_fhres();
X
Xstruct cs_res {
X	cs_stat status;
X	union {
X		long err_context;
X	} cs_res_u;
X};
Xtypedef struct cs_res cs_res;
Xbool_t xdr_cs_res();
X
Xtypedef char *volname;
Xbool_t xdr_volname();
X
Xstruct cs_volargs {
X	volname vol;
X};
Xtypedef struct cs_volargs cs_volargs;
Xbool_t xdr_cs_volargs();
X
Xstruct cs_volokres {
X	long volume_id;
X	long bytes_to_server;
X	long bytes_from_server;
X	long bytes_to_client;
X	long bytes_from_client;
X	long n_request_readdir;
X	long n_request_lookup;
X	long n_request_read;
X	long n_request_readdir_miss;
X	long n_request_lookup_miss;
X	long n_request_read_miss;
X};
Xtypedef struct cs_volokres cs_volokres;
Xbool_t xdr_cs_volokres();
X
Xstruct cs_volres {
X	cs_stat status;
X	union {
X		cs_volokres volok;
X		long err_context;
X	} cs_volres_u;
X};
Xtypedef struct cs_volres cs_volres;
Xbool_t xdr_cs_volres();
X
Xstruct cs_xferent {
X	int status;
X	int uid;
X	int gid;
X	long ip_address;
X	long bytes;
X	int idle;
X	struct {
X		u_int server_len;
X		char *server_val;
X	} server;
X};
Xtypedef struct cs_xferent cs_xferent;
Xbool_t xdr_cs_xferent();
X
Xstruct cs_xferres {
X	cs_stat status;
X	union {
X		cs_xferent xfer;
X		long err_context;
X	} cs_xferres_u;
X};
Xtypedef struct cs_xferres cs_xferres;
Xbool_t xdr_cs_xferres();
X
Xstruct cs_udaargs {
X	nfs_fh file;
X	char *attrname;
X};
Xtypedef struct cs_udaargs cs_udaargs;
Xbool_t xdr_cs_udaargs();
X
Xstruct cs_udares {
X	cs_stat status;
X	union {
X		struct {
X			u_int attr_len;
X			char *attr_val;
X		} attr;
X		long err_context;
X	} cs_udares_u;
X};
Xtypedef struct cs_udares cs_udares;
Xbool_t xdr_cs_udares();
X
Xstruct cs_diropargs {
X	nfspath pname;
X	filename fname;
X};
Xtypedef struct cs_diropargs cs_diropargs;
Xbool_t xdr_cs_diropargs();
X
Xstruct cs_diropokres {
X	nfs_fh file;
X	fattr attr;
X};
Xtypedef struct cs_diropokres cs_diropokres;
Xbool_t xdr_cs_diropokres();
X
Xstruct cs_diropres {
X	cs_stat status;
X	union {
X		cs_diropokres diropok;
X		long err_context;
X	} cs_diropres_u;
X};
Xtypedef struct cs_diropres cs_diropres;
Xbool_t xdr_cs_diropres();
X
Xstruct cs_readdirargs {
X	nfs_fh dir;
X	long cookie;
X	u_int count;
X};
Xtypedef struct cs_readdirargs cs_readdirargs;
Xbool_t xdr_cs_readdirargs();
X
Xstruct cs_dirent {
X	u_int fileid;
X	filename name;
X	fattr attr;
X	struct cs_dirent *nextentry;
X};
Xtypedef struct cs_dirent cs_dirent;
Xbool_t xdr_cs_dirent();
X
Xstruct cs_readdirokres {
X	cs_dirent *entries;
X	bool_t eof;
X};
Xtypedef struct cs_readdirokres cs_readdirokres;
Xbool_t xdr_cs_readdirokres();
X
Xstruct cs_readdirres {
X	cs_stat status;
X	union {
X		cs_readdirokres readdirok;
X		long err_context;
X	} cs_readdirres_u;
X};
Xtypedef struct cs_readdirres cs_readdirres;
Xbool_t xdr_cs_readdirres();
X
Xstruct cs_readargs {
X	nfs_fh file;
X	u_int offset;
X	u_int count;
X	u_int totalcount;
X	bool_t prefer_bulk;
X};
Xtypedef struct cs_readargs cs_readargs;
Xbool_t xdr_cs_readargs();
X
Xstruct cs_readokres {
X	fattr attr;
X	struct {
X		u_int data_len;
X		char *data_val;
X	} data;
X};
Xtypedef struct cs_readokres cs_readokres;
Xbool_t xdr_cs_readokres();
X
Xstruct cs_readbulkres {
X	fattr attr;
X	long sin_port;
X};
Xtypedef struct cs_readbulkres cs_readbulkres;
Xbool_t xdr_cs_readbulkres();
X
Xstruct cs_readres {
X	cs_stat status;
X	union {
X		cs_readokres readok;
X		cs_readbulkres readbulk;
X		long err_context;
X	} cs_readres_u;
X};
Xtypedef struct cs_readres cs_readres;
Xbool_t xdr_cs_readres();
X
Xstruct cs_geterrargs {
X	long err_context;
X};
Xtypedef struct cs_geterrargs cs_geterrargs;
Xbool_t xdr_cs_geterrargs();
X
Xstruct cs_geterrres {
X	cs_stat status;
X	union {
X		char *err_string;
X	} cs_geterrres_u;
X};
Xtypedef struct cs_geterrres cs_geterrres;
Xbool_t xdr_cs_geterrres();
X
X#define CS_PROGRAM ((u_long)300128)
X#define CS_VERSION ((u_long)1)
X#define CS_PROC_NULL ((u_long)0)
Xextern void *cs_proc_null_1();
X#define CS_PROC_GETPORT ((u_long)1)
Xextern int *cs_proc_getport_1();
X#define CS_PROC_REGISTER ((u_long)2)
Xextern cs_fhres *cs_proc_register_1();
X#define CS_PROC_UNREGISTER ((u_long)3)
Xextern cs_res *cs_proc_unregister_1();
X#define CS_PROC_MOUNT ((u_long)4)
Xextern cs_res *cs_proc_mount_1();
X#define CS_PROC_UMOUNT ((u_long)5)
Xextern cs_res *cs_proc_umount_1();
X#define CS_PROC_LOOKUP ((u_long)6)
Xextern cs_diropres *cs_proc_lookup_1();
X#define CS_PROC_READDIR ((u_long)7)
Xextern cs_readdirres *cs_proc_readdir_1();
X#define CS_PROC_READ ((u_long)8)
Xextern cs_readres *cs_proc_read_1();
X#define CS_PROC_GETVOL ((u_long)9)
Xextern cs_volres *cs_proc_getvol_1();
X#define CS_PROC_GETXFER ((u_long)10)
Xextern cs_xferres *cs_proc_getxfer_1();
X#define CS_PROC_GETUDA ((u_long)11)
Xextern cs_udares *cs_proc_getuda_1();
X#define CS_PROC_GETERR ((u_long)12)
Xextern cs_geterrres *cs_proc_geterr_1();
END_OF_FILE
  if test 6215 -ne `wc -c <'rpc/cs_prot.h'`; then
    echo shar: \"'rpc/cs_prot.h'\" unpacked with wrong size!
  fi
  # end of 'rpc/cs_prot.h'
fi
if test -f 'wwalk/wwalkrc' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'wwalk/wwalkrc'\"
else
  echo shar: Extracting \"'wwalk/wwalkrc'\" \(624 characters\)
  sed "s/^X//" >'wwalk/wwalkrc' <<'END_OF_FILE'
X# Configuration file for wwalk.
X# wwalk is distributed as part of WWFS (WorldWide File System).
X# This file is written in Tcl (Tool Command Language).
X# 
X# By default, wwalk looks for:
X# /usr/local/lib/wwalkrc
X# ~/.wwalkrc
X#
X
Xsource "/etc/wwfs.tcl"
X
X# Your favorite X11-based editor, or a small program that request
X# already-running editor to open the file (e.g. gnuclient/gnuserv).
Xset editor "/usr/local/tcl/bin/edit.tk"
X
X# Your favorite X11-based viewer.
X# Maybe much smarter filetype-guessing whiz-bang whatever-viewer.
Xset viewer "/usr/local/tcl/bin/edit.tk"
X
X# Temporary directory with enough room.
Xset tmpdir "/tmp"
END_OF_FILE
  if test 624 -ne `wc -c <'wwalk/wwalkrc'`; then
    echo shar: \"'wwalk/wwalkrc'\" unpacked with wrong size!
  fi
  # end of 'wwalk/wwalkrc'
fi
echo shar: End of archive 4 \(of 22\).
cp /dev/null ark4isdone
MISSING=""
for I in 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 ; do
    if test ! -f ark${I}isdone ; then
	MISSING="${MISSING} ${I}"
    fi
done
if test "${MISSING}" = "" ; then
    echo You have unpacked all 22 archives.
    rm -f ark[1-9]isdone ark[1-9][0-9]isdone
else
    echo You still must unpack the following archives:
    echo "        " ${MISSING}
fi
exit 0
exit 0 # Just in case...
