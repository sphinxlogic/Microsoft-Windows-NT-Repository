Newsgroups: comp.sources.misc
From: youki-k@is.aist-nara.ac.jp (Youki Kadobayashi)
Subject: v41i094:  wwfs - WorldWide File System, Part09/22
Message-ID: <1994Jan17.021308.9046@sparky.sterling.com>
X-Md4-Signature: e7e455cc4cfb1802f1ea0818aff04e6a
Sender: kent@sparky.sterling.com (Kent Landfield)
Organization: Sterling Software
Date: Mon, 17 Jan 1994 02:13:08 GMT
Approved: kent@sparky.sterling.com

Submitted-by: youki-k@is.aist-nara.ac.jp (Youki Kadobayashi)
Posting-number: Volume 41, Issue 94
Archive-name: wwfs/part09
Environment: UNIX, inet

#! /bin/sh
# This is a shell archive.  Remove anything before this line, then feed it
# into a shell via "sh file" or similar.  To overwrite existing files,
# type "sh file -c".
# Contents:  doc/beyond.ps.A mule/mule.el-patched vol/386bsd-ports.vol
# Wrapped by kent@sparky on Sun Jan 16 17:48:28 1994
PATH=/bin:/usr/bin:/usr/ucb:/usr/local/bin:/usr/lbin:$PATH ; export PATH
echo If this archive is complete, you will see the following message:
echo '          "shar: End of archive 9 (of 22)."'
if test -f 'doc/beyond.ps.A' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'doc/beyond.ps.A'\"
else
  echo shar: Extracting \"'doc/beyond.ps.A'\" \(46426 characters\)
  sed "s/^X//" >'doc/beyond.ps.A' <<'END_OF_FILE'
X%!PS-Adobe-2.0
X%%Creator: /usr/local/tex/dvi2ps-1.7j
X%%Title: beyond.dvi
X%%Pages: (atend)
X%%BoundingBox: 0 0 595 842
X%%DocumentPaperSizes: A4
X%%Orientation: Portrait
X%%EndComments
X%%BeginFile: /usr/local/lib/dvi2ps/tex.ps.nopack
X%
X/TeXDict 200 dict def
XTeXDict begin
X/inch {
X72 mul
X} bind def
X/largepaperarray [
X/letter /legal /11x17
X/b4 /b5 /a5 /a4 /a3
X] def
X/smallpaperarray [
X/note dup where {
Xpop
X}{
Xpop /lettersmall dup where {
Xpop
X}{
Xpop /letter
X} ifelse
X} ifelse
X/legal /11x17
X/b4 /b5 /a5
X/a4small dup where {
Xpop
X}{
Xpop /note dup where {
Xpop
X}{
Xpop /a4
X} ifelse
X} ifelse
X/a3
X] def
X/setpaper {
Xdup where papertray and {
Xexch get exec
X} if
X} bind def
X/trayarray [
X/lettertray /legaltray /11x17tray
X/b4tray /b5tray /a5tray /a4tray /a3tray
X] def
X/settray {
Xdup statusdict exch known {
X{
Xstatusdict begin load exec end
X} stopped {
X$error /newerror get {
X$error /errorname get /rangecheck eq {
X(Tray not found, using default tray.) print flush
X/papertray false def
X}{
Xhandleerror
X} ifelse
X$error /newerror false put
X} if
X} if
X}{
Xpop
X} ifelse
X} bind def
X/papertray true def
X/widtharray  [
X8.5 inch 8.5 inch 11 inch
X9.84 inch 6.93 inch
X5.83 inch 8.27 inch 11.69 inch
X] def
X/heightarray [
X11 inch 14 inch 17 inch
X13.9 inch 9.84 inch
X8.27 inch 11.69 inch 16.54 inch
X] def
X/xoffset 0 def
X/yoffset 0 def
X/landscape false def
X/pagesetup {
Xdup widtharray exch get /paperwidth exch def
Xdup heightarray exch get /paperheight exch def
Xdup trayarray exch get settray
Xlarge {largepaperarray}{smallpaperarray} ifelse
Xexch get setpaper
X} bind def
X/@letter {0 pagesetup} def
X/@legal {1 pagesetup} def
X/@tabloid {2 pagesetup} def
X/@b4 {3 pagesetup} def
X/@b5 {4 pagesetup} def
X/@a5 {5 pagesetup} def
X/@a4 {6 pagesetup} def
X/@a3 {7 pagesetup} def
X/@landscape {/landscape true def} bind def
X/@manualfeed {
Xstatusdict /manualfeed known {
Xstatusdict /manualfeed true put
Xstatusdict /manualfeedtimeout 120 put
X} if
X} bind def
X/@large {
X/large true def
X} bind def
X/@small {
X/large false def
X} bind def
X/@envelope {
X/xoffset 4.28 inch def
X/yoffset 1.5 inch def
X@letter
X} bind def
X/COPIES	{
X/#copies exch def
X} bind def
X/NF {
X/newname exch def
X/fsize exch def
X/corr exch def
Xnewname 7 dict def
Xnewname load begin
X/FontType 3 def
X/FontMatrix [corr 0 0 corr neg 0 0] def
X/FontBBox [0 0 1 1] def
X/BitMaps fsize array def
X/BuildChar /CharBuilder load def
X/Encoding 256 array def
X0 1 255 {Encoding exch /.notdef put} for
Xend
Xnewname newname load definefont pop
X} bind def
X/ch-image {ch-data 0 get} bind def
X/ch-width {ch-data 1 get} bind def
X/ch-height {ch-data 2 get} bind def
X/ch-xoff {ch-data 3 get} bind def
X/ch-yoff {ch-data 4 get} bind def
X/ch-tfmw {ch-data 5 get} bind def
X/CharBuilder {
X/ch-code exch def
X/font-dict exch def
X/ch-data font-dict /BitMaps get ch-code get def
Xch-data null eq not {
Xch-tfmw 0
Xch-xoff neg  ch-yoff neg ch-width ch-xoff sub ch-height ch-yoff sub
Xsetcachedevice
Xch-width ch-height true [1 0  0 1  ch-xoff ch-yoff]
X{ch-image} imagemask
X} if
X} bind def
X/LWF {
X/lw-v exch def
X/lw-h exch def
Xfindfont [lw-h 0 0 lw-v 0 0] makefont def
X} bind def
X/LWFX {
X/lw-v exch def
X/lw-h exch def
X/savecurfont currentfont def
Xfindfont dup setfont
X[
X( ) stringwidth pop dup lw-h exch div
Xexch lw-v exch div 0 0 3 -1 roll
X0 0
X] makefont def
Xsavecurfont setfont
X} bind def
X/LWJF /LWF load def
X/SF /setfont load def
X/s3 3 string def
X/D {
X/ch-code exch def
Xdup 0 get
Xlength 2 lt {
Xpop [ <00> 1 1 0 0 8.00 ]
X} if
X/ch-data exch def
Xcurrentfont /BitMaps get ch-code ch-data put
Xcurrentfont /Encoding get ch-code
Xdup s3 cvs cvn
Xput
X} bind def
X/BP {
X/SaveImage save def
Xxoffset yoffset translate
X72 72
Xlandscape {
Xexch translate
X90 rotate
X}{
Xpaperheight exch sub translate
X} ifelse
X72 Resolution div dup neg scale
X0 0 moveto
X} bind def
X/EP {
Xshowpage 
XSaveImage restore
X} bind def
X/START {
X/Resolution exch def
X} bind def
X/END /end load def
X/l /lineto load def
X/p /moveto load def
X/r {
X0 rmoveto
X} def
X/s /show load def
X/ru {
X/dy exch neg def
X/dx exch def
X/x currentpoint /y exch def def
Xnewpath x y moveto
Xdx 0 rlineto
X0 dy rlineto
Xdx neg 0 rlineto
Xclosepath fill
Xx y moveto
X} bind def
X/@SpecialDefaults {
X/hsi paperwidth inch def
X/vsi paperheight inch def
X/hof 0 def
X/vof 0 def
X/hsc 1 def
X/vsc 1 def
X/rotat 0 def
X/CLIP false def
X/BBOX false def
X/EPSF false def
X} bind def
X/@hsize {/hsi exch def /CLIP true def} bind def
X/@vsize {/vsi exch def /CLIP true def} bind def
X/@hoffset {/hof exch def} bind def
X/@voffset {/vof exch def} bind def
X/@hscale {/hsc exch def} bind def
X/@vscale {/vsc exch def} bind def
X/@rotation {/rotat exch def} bind def
X/@bbox {
X/ury exch def
X/urx exch def
X/lly exch def
X/llx exch def
X/BBOX true def
X} bind def
X/@epsf {
X/hsi 0 def
X/vsi 0 def
X/EPSF true def
X} bind def
X/@setclipper {
XCLIP {
Xnewpath 0 0 moveto hsi 0 rlineto 0 vsi rlineto hsi neg 0 rlineto
Xclosepath clip
X} if
X} bind def
X/@beginspecial {
X/SpecialSave save def
Xcurrentpoint transform initgraphics itransform translate
Xdup scale
Xlandscape {90 rotate} if
X@SpecialDefaults
X@MacSetUp
X} bind def
X/@setspecial {
Xhof vof translate
XEPSF BBOX and {
Xhsi 0 eq {
Xvsi 0 eq {
Xhsc vsc
X}{
Xvsi ury lly sub div dup
X}ifelse
X}{
Xvsi 0 eq {
Xhsi urx llx sub div dup
X}{
Xhsi urx llx sub div vsi ury lly sub div
X} ifelse
X} ifelse
Xscale
Xllx neg ury neg translate
Xnewpath
Xllx lly moveto
Xurx llx sub 0 rlineto
X0 ury lly sub rlineto
Xllx urx sub 0 rlineto
Xclosepath clip
Xnewpath
X}{
X@setclipper hsc vsc scale rotat rotate
X} ifelse
Xend
X/letter {} def /note {} def /legal {} def /11x17
X/b4 {} def /b5 {} def /a5 {} def /a4 {} def /a3 {} def
X/showpage {} def /copypage {} def /erasepage {} def
X} bind def
X/@MacSetUp {
Xuserdict /md known {
Xuserdict /md get type /dicttype eq {
X/MacDrwgs true def
Xmd /txpose known {
Xmd /txpose {pxs pys neg scale} put
X} if
Xmd /cp known {
Xmd /cp {pop pop pm restore} put
X} if
X} if
X} if
X} bind def
X/@push {
X/SpecialSave save def
Xcurrentpoint translate
Xdup scale
Xnewpath
X} bind def
X/@pop {
XSpecialSave restore
X} bind def
X/@pn
X/setlinewidth load
Xdef
X/@pt {
Xmoveto currentpoint currentlinewidth 2 div 0 360 arc fill
X} bind def
X/@ln {
Xmoveto lineto stroke
X} bind def
X/@ar {
Xmatrix currentmatrix
X7 -2 roll moveto
Xcurrentpoint translate
Xnewpath
X5 -2 roll scale
X0 0 1 6 -2 roll arc
Xsetmatrix
X} bind def
X/@wh {1 setgray} bind def
X/@sh {0.75 setgray} bind def
X/@bk {0 setgray} bind def
X/@RGB {setrgbcolor} bind def
X/@HSB {sethsbcolor} bind def
X/@CMYK {setcmykcolor} bind def
Xend
X/@endspecial {
Xclear
XTeXDict begin
XSpecialSave restore
X} bind def
X%%EndFile
X%%EndProlog
X%%BeginSetup
X%%PaperSize: A4
X%%Feature: *ManualFeed False
X%%Feature: *Resolution 400
XTeXDict begin
X@large
X@a4
X400 START
X1.000 20 /f66 NF
Xf66 SF
X[<00000000000001C000000000000001C000000000000001C000000000000001C000000000000001C000000000000001C00000
X  0000000001C000000000000001C0000000000000038000000000000003800000000000000380000000000000038000000000
X  0000038000000000000003800000000000000700000000000000070000000000000007000000000000000E00000000000000
X  0E000000000000000E000000000000001C000000000000001C00000000000000380000000000000038000000000000003800
X  0000000000007000000000000000F000000000000000E000000000000001C000000000000001C00000000000000380000000
X  000000078000000000000007000000000000000E000000000000001E000000000000003C0000000000000078000000000000
X  00F000000000000001E000000000000003C000000000000007800000000000000F000000000000001E000000000000003C00
X  0000000000007800000000000001F000000000000003E00000000000000F800000000000003F000000000000007C00000000
X  000003F00000000000000FE00000000000007F80000000000003FC000000000000FFF00000000000FFFF800000000000FFFC
X  000000000000FF00000000000000> 64 58 55 55 110.693] 16 D
X[<FF00000000000000FFFC000000000000FFFF80000000000000FFF000000000000003FC000000000000007F80000000000000
X  0FE000000000000003F0000000000000007C000000000000003F000000000000000F8000000000000003E000000000000001
X  F00000000000000078000000000000003C000000000000001E000000000000000F00000000000000078000000000000003C0
X  00000000000001E000000000000000F00000000000000078000000000000003C000000000000001E000000000000000E0000
X  000000000007000000000000000780000000000000038000000000000001C000000000000001C000000000000000E0000000
X  00000000F00000000000000070000000000000003800000000000000380000000000000038000000000000001C0000000000
X  00001C000000000000000E000000000000000E000000000000000E0000000000000007000000000000000700000000000000
X  0700000000000000038000000000000003800000000000000380000000000000038000000000000003800000000000000380
X  00000000000001C000000000000001C000000000000001C000000000000001C000000000000001C000000000000001C00000
X  0000000001C000000000000001C0> 64 58 55 0 110.693] 17 D
X[<0000000000003FC000000000000FFFE000000000007FFFC00000000003FFC000000000000FF00000000000007F8000000000
X  0001FC00000000000003F00000000000000F800000000000003F000000000000007C00000000000001F000000000000003E0
X  00000000000007800000000000000F000000000000001E000000000000003C000000000000007800000000000000F0000000
X  00000001E000000000000003C000000000000007800000000000000F000000000000001E000000000000001C000000000000
X  00380000000000000078000000000000007000000000000000E000000000000000E000000000000001C000000000000003C0
X  00000000000003800000000000000700000000000000070000000000000007000000000000000E000000000000000E000000
X  000000001C000000000000001C000000000000001C0000000000000038000000000000003800000000000000380000000000
X  0000700000000000000070000000000000007000000000000000700000000000000070000000000000007000000000000000
X  E000000000000000E000000000000000E000000000000000E000000000000000E000000000000000E000000000000000E000
X  000000000000E000000000000000> 64 58 0 0 110.693] 18 D
X[<E000000000000000E000000000000000E000000000000000E000000000000000E000000000000000E000000000000000E000
X  000000000000E000000000000000700000000000000070000000000000007000000000000000700000000000000070000000
X  0000000070000000000000003800000000000000380000000000000038000000000000001C000000000000001C0000000000
X  00001C000000000000000E000000000000000E00000000000000070000000000000007000000000000000700000000000000
X  038000000000000003C000000000000001C000000000000000E000000000000000E000000000000000700000000000000078
X  0000000000000038000000000000001C000000000000001E000000000000000F00000000000000078000000000000003C000
X  000000000001E000000000000000F00000000000000078000000000000003C000000000000001E000000000000000F000000
X  00000000078000000000000003E000000000000001F0000000000000007C000000000000003F000000000000000F80000000
X  00000003F000000000000001FC000000000000007F800000000000000FF000000000000003FFC00000000000007FFFC00000
X  0000000FFFE00000000000003FC0> 64 58 0 55 110.693] 19 D
X/f74 /Times-Roman 49.812 -49.812 LWF
X/f77 /Times-Bold 49.812 -49.812 LWF
X/f78 /Courier 49.812 -49.812 LWF
X/f80 /Times-Roman 55.347 -55.347 LWF
X/f81 /Times-Italic 55.347 -55.347 LWF
X/f82 /Times-BoldItalic 55.347 -55.347 LWF
X/f84 /Courier 55.347 -55.347 LWF
X/f92 /Times-Roman 66.416 -66.416 LWF
X/f95 /Times-Bold 66.416 -66.416 LWF
X/f96 /Courier 66.416 -66.416 LWF
X/f99 /Times-Bold 79.699 -79.699 LWF
X/f101 /Times-Bold 95.750 -95.750 LWF
X%%EndSetup
X
X%%Page: 1 1
XBP
Xf101 SF
X688 493 p (Beyond)s
X24 r (Global)s
X24 r (File)s
X24 r (Systems:)s
X832 614 p (the)s
X24 r (WWFS)s
X24 r (Appr)s
X-1 r (oach)s
Xf92 SF
X1014 775 p (Y)s
X-6 r (ouki)s
X16 r (Kadobayashi)s
Xf96 SF
X817 852 p (youki@ics.osaka-u.ac.jp)s
Xf92 SF
X952 930 p (WWFS)s
X17 r (Research)s
X16 r (Group)s
X593 1007 p (Department)s
X17 r (of)s
X17 r (Information)s
X16 r (and)s
X17 r (Computer)s
X16 r (Sciences)s
X1043 1085 p (Osaka)s
X17 r (University)s
X895 1162 p (T)s
X-4 r (oyonaka)s
X16 r (560,)s
X16 r (Osaka,)s
X17 r (Japan)s
X1050 1317 p (WWFS-TR-93-2)s
X1047 1446 p (January)s
X17 r (29,)s
X16 r (1993)s
Xf77 SF
X1182 1641 p (Abstract)s
Xf74 SF
X313 1728 p (The)s
X9 r (advent)s
X8 r (of)s
X9 r (a)s
X8 r (worldwide)s
X9 r (\256le)s
X8 r (system)s
X9 r (revealed)s
X8 r (that)s
X9 r (the)s
X9 r (mere)s
X8 r (expansion)s
X9 r (of)s
X8 r (hierarchical)s
X9 r (naming)s
X8 r (scheme)s
X238 1789 p (over)s
X15 r (the)s
X15 r (Internet)s
X14 r (does)s
X15 r (not)s
X15 r (work)s
X14 r (well,)s
X15 r (and)s
X15 r (that)s
X15 r (NFS)s
X14 r (does)s
X15 r (not)s
X14 r (provide)s
X15 r (suitable)s
X15 r (operational)s
X14 r (semantics)s
X15 r (for)s
X238 1850 p (this)s
X13 r (kind)s
X12 r (of)s
X13 r (\256le)s
X12 r (systems.)s
X313 1911 p (This)s
X13 r (paper)s
X13 r (presents)s
X12 r (short-term)s
X13 r (future)s
X13 r (of)s
X13 r (the)s
X13 r (WWFS)s
X12 r (development,)s
X13 r (which)s
X13 r (is)s
X13 r (aimed)s
X13 r (at)s
X13 r (providing)s
X12 r (com-)s
X238 1972 p (prehensive)s
X9 r (framework)s
X8 r (for)s
X8 r (\256le)s
X9 r (sharing)s
X8 r (across)s
X8 r (the)s
X9 r (Internet,)s
X9 r (including)s
X8 r (location)s
X8 r (of)s
X9 r (archives,)s
X9 r (access)s
X8 r (to)s
X8 r (archives,)s
X238 2033 p (and)s
X13 r (reorganization)s
X11 r (of)s
X13 r (archives.)s
Xf99 SF
X100 2219 p (1)s
X80 r (Intr)s
X-1 r (oduction)s
Xf80 SF
X100 2342 p (The)s
X10 r (WWFS)s
X9 r (\(W)s
X-3 r (orldW)s
X-3 r (ide)s
X9 r (File)s
X10 r (System\))s
X9 r (Research)s
X10 r (Group)s
X9 r (at)s
X10 r (Osaka)s
X9 r (University)s
X10 r (have)s
X10 r (been)s
X9 r (implementing)s
X10 r (and)s
X9 r (ex-)s
X100 2408 p (tensively)s
X12 r (using)s
X12 r (the)s
X12 r (Cluster)s
X13 r (Server)s
X12 r (\(CS\),)s
X12 r (an)s
X12 r (user-level)s
X11 r (NFS[1])s
X12 r (server)s
X12 r (that)s
X12 r (functions)s
X13 r (as)s
X12 r (an)s
X12 r (NFS-FTP)s
X12 r (gateway)s
X100 2475 p (with)s
X16 r (caching)s
X16 r (mechanism)s
X16 r (on)s
X17 r (a)s
X16 r (per-\256le)s
X15 r (basis,)s
X17 r (thereby)s
X16 r (extending)s
X16 r (NFS)s
X16 r (over)s
X16 r (the)s
X16 r (Internet[2].)s
X26 r (CS)s
X16 r (implements)s
X100 2541 p (mechanisms)s
X12 r (to)s
X12 r (optimize)s
X12 r (the)s
X11 r (\256le)s
X12 r (transfer)s
X12 r (over)s
X12 r (bottleneck)s
X12 r (links,)s
X12 r (while)s
X12 r (at)s
X12 r (the)s
X12 r (same)s
X12 r (time)s
X11 r (attempting)s
X12 r (to)s
X12 r (achieve)s
X100 2608 p (failure)s
X14 r (resiliency)s
X14 r (and)s
X14 r (load)s
X13 r (balancing,)s
X14 r (by)s
X14 r (introducing)s
X14 r (the)s
X14 r (notion)s
X14 r (of)s
X13 r (volume[3].)s
X183 2674 p (While)s
X13 r (the)s
X13 r (\256rst)s
X13 r (implementation)s
X13 r (of)s
X13 r (CS)s
X12 r (has)s
X13 r (been)s
X13 r (successful)s
X13 r (and)s
X13 r (has)s
X13 r (been)s
X13 r (extensively)s
X13 r (used)s
X13 r (at)s
X13 r (a)s
X13 r (number)s
X12 r (of)s
X100 2740 p (Japanese)s
X10 r (Internet)s
X10 r (sites,)s
X11 r (it)s
X10 r (has)s
X11 r (also)s
X10 r (demonstrated)s
X10 r (that)s
X10 r (the)s
X10 r (mere)s
X11 r (expansion)s
X10 r (of)s
X10 r (hierarchical)s
X10 r (naming)s
X10 r (scheme)s
X11 r (over)s
X100 2807 p (the)s
X15 r (Internet)s
X14 r (does)s
X15 r (not)s
X14 r (work)s
X15 r (well.)s
X20 r (Rather)s
X-1 r (,)s
X14 r (users)s
X15 r (often)s
X14 r (get)s
X15 r (confused)s
X14 r (with)s
X15 r (the)s
X14 r (immense)s
X15 r (information)s
X15 r (resources)s
X100 2873 p (and)s
X14 r (disparate)s
X14 r (behavior)s
X14 r (of)s
X13 r (the)s
X14 r (\256lesystem.)s
X183 2940 p (This)s
X12 r (paper)s
X13 r (presents)s
X12 r (short-term)s
X13 r (future)s
X12 r (of)s
X13 r (the)s
X12 r (WWFS)s
X13 r (development,)s
X13 r (which)s
X12 r (is)s
X12 r (aimed)s
X13 r (at)s
X12 r (providing)s
X13 r (compre-)s
X100 3006 p (hensive)s
X17 r (framework)s
X16 r (for)s
X17 r (\256le)s
X16 r (sharing)s
X17 r (across)s
X16 r (the)s
X17 r (Internet,)s
X17 r (including)s
X17 r (location)s
X16 r (of)s
X17 r (archives,)s
X17 r (access)s
X17 r (to)s
X16 r (archives,)s
X100 3073 p (and)s
X14 r (reorganization)s
X13 r (of)s
X14 r (archives.)s
X18 r (This)s
X14 r (paper)s
X14 r (is)s
X14 r (organized)s
X12 r (as)s
X14 r (follows.)s
X19 r (Section)s
X14 r (2)s
X13 r (discusses)s
X14 r (the)s
X14 r (impact)s
X14 r (of)s
X14 r (scale)s
X100 3139 p (on)s
X12 r (the)s
X12 r (\256le)s
X12 r (systems.)s
X18 r (Section)s
X12 r (3)s
X12 r (describes)s
X12 r (the)s
X12 r (need)s
X12 r (for)s
X12 r (an)s
X12 r (integrated)s
X12 r (information)s
X12 r (sharing)s
X12 r (system,)s
X12 r (and)s
X12 r (suggests)s
X100 3205 p (its)s
X14 r (requirements.)s
X20 r (Section)s
X14 r (4)s
X14 r (identi\256es)s
X14 r (bene\256ts)s
X14 r (and)s
X15 r (possible)s
X14 r (improvements)s
X14 r (of)s
X14 r (CS.)s
X14 r (Section)s
X15 r (5)s
X14 r (describes)s
X14 r (func-)s
X100 3272 p (tional)s
X12 r (enhancements)s
X11 r (over)s
X12 r (WWFS)s
X11 r (and)s
X12 r (the)s
X11 r (strategy)s
X12 r (for)s
X11 r (seamless)s
X12 r (integration)s
X12 r (of)s
X11 r (the)s
X12 r (independent)s
X11 r (mechanisms.)s
X100 3338 p (Section)s
X14 r (6)s
X14 r (summarizes)s
X14 r (this)s
X13 r (paper)s
X-2 r (.)s
Xf99 SF
X100 3524 p (2)s
X80 r (Backgr)s
X-1 r (ound)s
Xf80 SF
X100 3647 p (In)s
X18 r (today')s
X-2 r (s)s
X17 r (information)s
X18 r (processing)s
X18 r (environment,)s
X19 r (it)s
X18 r (is)s
X18 r (nearly)s
X19 r (impossible)s
X18 r (to)s
X18 r (retrieve)s
X18 r (necessary)s
X18 r (information)s
X100 3714 p (solely)s
X13 r (with)s
X13 r (traditional)s
X13 r (hierarchical)s
X13 r (naming)s
X13 r (system)s
X13 r (such)s
X13 r (as)s
X13 r (the)s
X13 r (UNIX)s
X12 r (\256le)s
X13 r (system.)s
X19 r (That)s
X12 r (naming)s
X13 r (scheme)s
X13 r (was)s
X100 3780 p (designed)s
X15 r (to)s
X16 r (support)s
X15 r (simple)s
X16 r (and)s
X15 r (instant)s
X16 r (access)s
X15 r (to)s
X16 r (particular)s
X15 r (data)s
X16 r (set)s
X15 r (the)s
X16 r (user)s
X15 r (is)s
X16 r (familiar)s
X15 r (of;)s
X16 r (in)s
X16 r (other)s
X15 r (words,)s
X1261 3946 p (1)s
XEP
X
X%%Page: 2 2
XBP
X100 557 p 2 222 ru
X156 282 p 2239 2 ru
Xf66 SF
X100 282 p (\023)s
X2239 r (\020)s
Xf78 SF
X156 371 p (youki@raicho$)s
X30 r (waissearch)s
X30 r (-h)s
X30 r (nnsc.nsf.net)s
X30 r (-d)s
X30 r (internet-rfcs)s
X30 r (-p)s
X30 r (210)s
X30 r (OSPF)s
X186 493 p (Search)s
X30 r (Response:)s
X216 554 p (NumberOfRecordsReturned:)s
X30 r (39)s
Xf66 SF
X100 613 p (\022)s
X2239 r (\021)s
X156 613 p 2239 2 ru
X2450 557 p 2 222 ru
Xf80 SF
X100 790 p (Figure)s
X15 r (1:)s
Xf82 SF
X20 r (W)s
X-4 r (AIS)s
X14 r (search)s
X15 r (for)s
X14 r (keyword)s
X15 r (\252OSPF\272)s
X14 r (on)s
Xf84 SF
X15 r (internet-rfcs.src)s
Xf82 SF
X15 r (resulted)s
X14 r (in)s
X15 r (39)s
X14 r (records,)s
X15 r (where)s
X100 856 p (24)s
X16 r (of)s
X16 r (them)s
X17 r (did)s
X16 r (not)s
X16 r (have)s
X16 r (direct)s
X17 r (relevance)s
X16 r (with)s
X16 r (OSPF)s
X-6 r (,)s
X15 r (not)s
X16 r (counting)s
X17 r (obsoleted)s
X16 r (RFCs.)s
Xf80 SF
X26 r (The)s
X16 r (RFCs)s
X16 r (deemed)s
X100 923 p (irrelevant)s
X17 r (are:)s
X26 r (rfc1060,)s
X18 r (rfc1)s
X-1 r (1)s
X-2 r (18,)s
X17 r (rfc1)s
X-1 r (140,)s
X18 r (rfc1)s
X-1 r (158,)s
X17 r (rfc1)s
X-1 r (162,)s
X17 r (rfc1)s
X-1 r (177,)s
X17 r (rfc1200,)s
X19 r (rfc1206,)s
X18 r (rfc1208,)s
X18 r (rfc1213,)s
X100 989 p (rfc1214,)s
X11 r (rfc1219,)s
X11 r (rfc1238,)s
X10 r (rfc1241,)s
X11 r (rfc1242,)s
X11 r (rfc1313,)s
X11 r (rfc1325,)s
X10 r (rfc1338,)s
X11 r (rfc1340,)s
X11 r (rfc1354,)s
X11 r (rfc1360,)s
X10 r (rfc1387,)s
X100 1055 p (rfc1388,)s
X14 r (and)s
X14 r (rfc1392.)s
X100 1229 p (a)s
X14 r (working)s
X14 r (set.)s
X18 r (In)s
X14 r (good)s
X14 r (old)s
X14 r (days,)s
X14 r (it)s
X14 r (was)s
X14 r (easy)s
X13 r (for)s
X14 r (users)s
X14 r (to)s
X14 r (comprehend)s
X14 r (and)s
X14 r (organize)s
X13 r (their)s
X13 r (entire)s
X14 r (information)s
X100 1296 p (resources)s
X12 r (with)s
X12 r (UNIX)s
X13 r (\256le)s
X12 r (system.)s
X18 r (As)s
X12 r (mass)s
X12 r (storage)s
X12 r (technologies)s
X12 r (and)s
X12 r (internetworking)s
X13 r (technologies)s
X12 r (develop,)s
X100 1362 p (the)s
X14 r (amount)s
X14 r (of)s
X13 r (accessible)s
X14 r (information)s
X14 r (resources)s
X14 r (have)s
X14 r (been)s
X13 r (growing)s
X14 r (dramatically)s
X-2 r (.)s
X17 r (T)s
X-3 r (oday)s
X13 r (it)s
X14 r (is)s
X14 r (nearly)s
X13 r (impos-)s
X100 1429 p (sible)s
X16 r (to)s
X16 r (comprehend)s
X16 r (and)s
X16 r (organize)s
X15 r (his)s
X16 r (or)s
X16 r (her)s
X16 r (own)s
X16 r (information)s
X16 r (resource)s
X16 r (simply)s
X16 r (by)s
X16 r (traditional)s
X16 r (\256le)s
X16 r (systems,)s
X100 1495 p (since)s
X14 r (these)s
X14 r (systems)s
X14 r (largely)s
X12 r (depend)s
X14 r (on)s
X14 r (user)s
X2 r (')s
X-2 r (s)s
X13 r (own)s
X14 r (remembrance.)s
X183 1561 p (Such)s
X14 r (limitations)s
X13 r (of)s
X13 r (hierarchical)s
X14 r (naming)s
X13 r (scheme)s
X14 r (have)s
X13 r (been)s
X14 r (becoming)s
X13 r (more)s
X14 r (apparent)s
X13 r (with)s
X14 r (the)s
X13 r (advent)s
X14 r (of)s
X100 1628 p (worldwide)s
X11 r (\256le)s
X11 r (systems)s
X11 r (such)s
X11 r (as)s
X10 r (CS.)s
X11 r (In)s
X11 r (these)s
X11 r (systems,)s
X12 r (vast)s
X11 r (amount)s
X10 r (of)s
X11 r (information)s
X11 r (resources)s
X11 r (are)s
X11 r (administered)s
X100 1694 p (and)s
X14 r (accessed)s
X14 r (with)s
X14 r (traditional)s
X13 r (hierarchical)s
X14 r (naming)s
X14 r (scheme.)s
X183 1761 p (Thus,)s
X14 r (some)s
X15 r (sort)s
X14 r (of)s
X14 r (database)s
X15 r (system)s
X14 r (has)s
X14 r (been)s
X15 r (needed)s
X14 r (to)s
X14 r (quickly)s
X15 r (locate)s
X14 r (desired)s
X14 r (information)s
X15 r (among)s
X14 r (vast)s
X100 1827 p (amount)s
X15 r (of)s
X14 r (information,)s
X15 r (that)s
X15 r (will)s
X14 r (prevent)s
X15 r (annoying)s
X15 r (traversal)s
X14 r (through)s
X15 r (deep)s
X14 r (forest)s
X15 r (of)s
X15 r (name)s
X14 r (space.)s
X21 r (However)s
X-1 r (,)s
X100 1894 p (database)s
X14 r (systems)s
X14 r (fall)s
X14 r (short)s
X13 r (of)s
X14 r (providing)s
X14 r (instantaneous)s
X14 r (access)s
X14 r (to)s
X14 r (working)s
X13 r (sets.)s
X183 1960 p (Furthermore,)s
X12 r (database)s
X11 r (systems)s
X11 r (have)s
X11 r (complicated)s
X12 r (query)s
X11 r (languages,)s
X12 r (that)s
X11 r (keeps)s
X11 r (inexperienced)s
X11 r (users)s
X11 r (away)s
X100 2026 p (from)s
X20 r (the)s
X20 r (real)s
X20 r (power)s
X20 r (of)s
X20 r (database)s
X21 r (systems.)s
X37 r (Generally)s
X-3 r (,)s
X21 r (database)s
X20 r (users)s
X20 r (must)s
X20 r (specify)s
X20 r (all)s
X20 r (conditions)s
X20 r (before)s
X100 2093 p (performing)s
X18 r (joins)s
X19 r (and)s
X18 r (projections)s
X19 r (to)s
X18 r (get)s
X18 r (its)s
X19 r (best)s
X18 r (performance.)s
X32 r (On)s
X19 r (the)s
X18 r (contrary)s
X-3 r (,)s
X19 r (users)s
X18 r (of)s
X19 r (\256le)s
X18 r (systems)s
X19 r (can)s
X100 2159 p (narrow)s
X18 r (the)s
X18 r (target)s
X16 r (information)s
X18 r (step)s
X18 r (by)s
X18 r (step,)s
X19 r (intuitively)s
X18 r (and)s
X17 r (interactively)s
X-2 r (,)s
X18 r (using)s
X18 r (UNIX)s
X17 r (commands)s
X18 r (such)s
X18 r (as)s
Xf84 SF
X100 2226 p (cd)s
Xf80 SF
X20 r (and)s
Xf84 SF
X19 r (ls)s
Xf80 SF
X20 r (for)s
X20 r (example.)s
X36 r (This)s
X19 r (can)s
X20 r (be)s
X20 r (viewed)s
X19 r (as)s
X20 r (the)s
X20 r (process)s
X20 r (of)s
X19 r (\252re\256nement\272,)s
X21 r (which)s
X20 r (specify)s
X20 r (conditions)s
X100 2292 p (incrementally)s
X-3 r (.)s
X183 2358 p (Based)s
X21 r (on)s
X21 r (these)s
X21 r (considerations,)s
X23 r (I)s
X21 r (came)s
X22 r (to)s
X21 r (conclude)s
X21 r (that)s
X21 r (drastic)s
X21 r (departure)s
X21 r (from)s
X21 r (hierarchical)s
X22 r (naming)s
X100 2425 p (scheme)s
X11 r (and)s
X11 r (from)s
X11 r (traditional)s
X11 r (database)s
X11 r (systems)s
X11 r (is)s
X11 r (necessary)s
X11 r (to)s
X11 r (get)s
X11 r (over)s
X11 r (the)s
X11 r (current)s
X11 r (limitations)s
X11 r (and)s
X11 r (dif\256culties)s
X100 2491 p (of)s
X14 r (resource)s
X14 r (location,)s
X14 r (resource)s
X13 r (access)s
X14 r (and)s
X14 r (resource)s
X14 r (reorganization)s
X13 r (in)s
X14 r (the)s
X13 r (gigantic)s
X14 r (space)s
X14 r (of)s
X14 r (information.)s
Xf99 SF
X100 2678 p (3)s
X80 r (Information)s
X20 r (Sharing)s
X20 r (System:)s
X26 r (the)s
X20 r (picture)s
Xf80 SF
X100 2801 p (Now)s
X11 r (I)s
X10 r (de\256ne)s
X11 r (a)s
X10 r (new)s
X11 r (term)s
X11 r (\252information)s
X10 r (sharing)s
X11 r (system\272,)s
X11 r (since)s
X11 r (part)s
X10 r (of)s
X11 r (this)s
X11 r (discussion)s
X10 r (applies)s
X11 r (to)s
X10 r (broader)s
X11 r (range)s
X100 2868 p (of)s
X14 r (systems,)s
X14 r (rather)s
X14 r (than)s
X13 r (distributed)s
X14 r (\256le)s
X14 r (systems)s
X14 r (or)s
X14 r (\256le)s
X14 r (transfer)s
X13 r (services.)s
X238 2989 p (information)s
X23 r (sharing)s
X22 r (system)s
X22 r (\(ISS\):)s
Xf81 SF
X22 r (a)s
X23 r (whole)s
X22 r (system)s
X22 r (to)s
X23 r (facilitate)s
X22 r (location)s
X22 r (of)s
X22 r (information)s
X23 r (r)s
X-1 r (e-)s
X238 3056 p (sour)s
X-1 r (ces,)s
X13 r (access)s
X14 r (to)s
X14 r (information,)s
X14 r (and)s
X13 r (r)s
X-1 r (eor)s
X-2 r (ganization)s
X13 r (of)s
X14 r (information)s
Xf80 SF
X(.)s
X183 3178 p (There)s
X19 r (is)s
X20 r (growing)s
X19 r (interest)s
X20 r (in)s
X19 r (the)s
X20 r (Internet)s
X19 r (community)s
X19 r (for)s
X20 r (systems)s
X19 r (like)s
X20 r (ISS,)s
X19 r (for)s
X19 r (several)s
X20 r (reason.)s
X35 r (First,)s
X100 3244 p (it)s
X19 r (is)s
X19 r (dif\256cult)s
X17 r (to)s
X19 r (locate)s
X19 r (desired)s
X19 r (information)s
X18 r (in)s
X19 r (the)s
X19 r (Internet,)s
X20 r (due)s
X19 r (to)s
X18 r (the)s
X19 r (diversity)s
X19 r (and)s
X19 r (vastness)s
X19 r (of)s
X18 r (available)s
X100 3310 p (information)s
X18 r (resources.)s
X29 r (On)s
X18 r (some)s
X18 r (systems,)s
X18 r (users)s
X18 r (are)s
X18 r (forced)s
X17 r (to)s
X18 r (tell)s
X18 r (necessary)s
X17 r (information)s
X18 r (from)s
X17 r (noise,)s
X19 r (and)s
X100 3377 p (they)s
X20 r (are)s
X19 r (sometimes)s
X20 r (forced)s
X20 r (to)s
X19 r (confront)s
X20 r (with)s
X20 r (immense)s
X19 r (information)s
X20 r (resources.)s
X36 r (Consequently)s
X-3 r (,)s
X21 r (users)s
X19 r (often)s
X100 3443 p (get)s
X19 r (bewildered.)s
X34 r (T)s
X-3 r (ake)s
X18 r (W)s
X-5 r (AIS[4])s
X18 r (for)s
X19 r (example.)s
X34 r (As)s
X19 r (of)s
X20 r (this)s
X19 r (writing,)s
X20 r (W)s
X-5 r (AIS)s
X18 r (search)s
X19 r (for)s
X19 r (keyword)s
X19 r (\252OSPF\272)s
X19 r (on)s
Xf84 SF
X100 3510 p (internet-rfcs.src)s
Xf80 SF
X10 r (resulted)s
X10 r (in)s
X10 r (39)s
X10 r (records,)s
X11 r (where)s
X10 r (24)s
X10 r (of)s
X10 r (them)s
X10 r (were)s
X10 r (not)s
X10 r (directly)s
X10 r (related)s
X10 r (to)s
X10 r (OSPF)s
X-3 r (,)s
X9 r (though)s
X100 3576 p (there)s
X11 r (were)s
X11 r (some)s
X11 r (relevance)s
X11 r (in)s
X12 r (that)s
X11 r (each)s
X11 r (of)s
X11 r (these)s
X11 r (documents)s
X11 r (contained)s
X11 r (the)s
X11 r (word)s
X11 r (\252OSPF\272)s
X12 r (at)s
X11 r (least)s
X11 r (once)s
X11 r (\(Figure)s
X100 3642 p (1\).)s
X183 3709 p (Second,)s
X13 r (access)s
X12 r (to)s
X13 r (information)s
X13 r (resources)s
X12 r (are)s
X13 r (complicated)s
X13 r (in)s
X12 r (the)s
X13 r (current)s
X12 r (workstation)s
X13 r (environment,)s
X13 r (while)s
X100 3775 p (there)s
X15 r (are)s
X15 r (enormous)s
X15 r (amount)s
X15 r (of)s
X16 r (accessible)s
X15 r (information)s
X15 r (in)s
X15 r (the)s
X15 r (Internet.)s
X22 r (T)s
X-3 r (ake)s
X14 r (FTP)s
X15 r (archives)s
X16 r (for)s
X15 r (example;)s
X15 r (be-)s
X1261 3946 p (2)s
XEP
X
X%%Page: 3 3
XBP
Xf80 SF
X100 260 p (fore)s
X14 r (processing)s
X14 r (a)s
X15 r (\256le)s
X14 r (with)s
X14 r (the)s
X14 r (way)s
X14 r (he/she)s
X15 r (wanted,)s
X14 r (the)s
X14 r (user)s
X14 r (must)s
X15 r (fetch)s
X14 r (a)s
X14 r (\256le)s
X14 r (from)s
X14 r (a)s
X15 r (remote)s
X14 r (host)s
X14 r (using)s
Xf84 SF
X14 r (ftp)s
Xf80 SF
X100 327 p (command,)s
X20 r (where)s
X19 r (users)s
X19 r (must)s
X19 r (confront)s
X18 r (with)s
X19 r (many)s
X19 r (unfamiliar)s
X19 r (concepts)s
X19 r (such)s
X18 r (as)s
X19 r (data)s
X19 r (representations,)s
X20 r (data)s
X100 393 p (structures,)s
X13 r (transmission)s
X12 r (modes,)s
X13 r (two)s
X13 r (working)s
X12 r (directories,)s
X13 r (remote)s
X13 r (hostnames,)s
X13 r (and)s
X12 r (\256lename)s
X13 r (mapping)s
X12 r (mecha-)s
X100 459 p (nism,)s
X14 r (to)s
X14 r (name)s
X13 r (a)s
X14 r (few)s
X-2 r (.)s
X17 r (Overall,)s
X14 r (mere)s
X14 r (aggregation)s
X13 r (of)s
X14 r (existing)s
X14 r (systems)s
X14 r (makes)s
X14 r (it)s
X13 r (dif\256cult)s
X13 r (to)s
X14 r (move)s
X14 r (information)s
X100 526 p (across)s
X14 r (communication)s
X14 r (boundary)s
X14 r (\(e.g.,)s
X13 r (LAN-W)s
X-5 r (AN)s
X13 r (boundary\).)s
X183 592 p (Third,)s
X12 r (there)s
X12 r (are)s
X12 r (lots)s
X12 r (of)s
X12 r (dead,)s
X12 r (useless,)s
X12 r (or)s
X12 r (obsolete)s
X12 r (information)s
X12 r (in)s
X12 r (the)s
X12 r (Internet)s
X12 r (archives,)s
X12 r (partly)s
X12 r (because)s
X12 r (the)s
X100 659 p (total)s
X16 r (amount)s
X15 r (of)s
X16 r (available)s
X16 r (disks)s
X15 r (in)s
X16 r (an)s
X15 r (electronic)s
X16 r (archive)s
X16 r (exceeds)s
X15 r (capability)s
X16 r (of)s
X16 r (an)s
X15 r (archive)s
X16 r (administrator)s
X-2 r (.)s
X23 r (In)s
X100 725 p (addition,)s
X14 r (there)s
X14 r (is)s
X14 r (no)s
X13 r (objective)s
X14 r (measure)s
X14 r (to)s
X14 r (know)s
X14 r (how)s
X14 r (frequently)s
X13 r (an)s
X14 r (electronic)s
X14 r (archive)s
X14 r (has)s
X14 r (been)s
X14 r (accessed.)s
X183 791 p (These)s
X19 r (problems)s
X18 r (suggest)s
X19 r (the)s
X18 r (need)s
X19 r (for)s
X18 r (a)s
X19 r (novel)s
X19 r (and)s
X18 r (integrated)s
X19 r (information)s
X18 r (sharing)s
X19 r (system,)s
X20 r (meanwhile)s
X100 858 p (suggesting)s
X14 r (requirements)s
X14 r (for)s
X14 r (ISS.)s
X183 924 p (The)s
X14 r (\256rst)s
X14 r (problem)s
X13 r (suggests)s
X14 r (that)s
X14 r (ISS)s
X14 r (should)s
X14 r (enable)s
X13 r (users)s
X14 r (to)s
X14 r (narrow)s
X14 r (visible)s
X14 r (information,)s
X13 r (either)s
X14 r (top-down)s
X100 991 p (\(as)s
X14 r (in)s
X14 r (databases\))s
X15 r (or)s
X14 r (bottom-up)s
X14 r (\(as)s
X14 r (in)s
X15 r (\256lesystems\).)s
X19 r (Neither)s
X14 r (of)s
X15 r (them)s
X14 r (are)s
X14 r (complete)s
X14 r (as)s
X14 r (described)s
X15 r (in)s
X14 r (Section)s
X14 r (2,)s
X100 1057 p (but)s
X14 r (it)s
X14 r (might)s
X14 r (be)s
X13 r (worthwhile)s
X14 r (to)s
X14 r (relax)s
X14 r (the)s
X14 r (hierarchical)s
X14 r (constraints)s
X13 r (imposed)s
X14 r (by)s
X14 r (traditional)s
X14 r (\256lesystems.)s
X183 1124 p (The)s
X15 r (historical)s
X16 r (reason)s
X15 r (UNIX)s
X16 r (and)s
X15 r (other)s
X16 r (UNIX-like)s
X15 r (systems)s
X16 r (adopted)s
X15 r (the)s
X16 r (hierarchical)s
X15 r (\256lesystem)s
X16 r (was)s
X15 r (the)s
X100 1190 p (ease)s
X15 r (of)s
X14 r (administration.)s
X21 r (It)s
X14 r (has)s
X15 r (a)s
X15 r (desirable)s
X14 r (property)s
X15 r (that)s
X14 r (all)s
X15 r (information)s
X15 r (resources)s
X14 r (can)s
X15 r (be)s
X14 r (reached)s
X15 r (by)s
X15 r (simply)s
X100 1256 p (traversing)s
X16 r (trees)s
X16 r (in)s
X16 r (pre-order)s
X16 r (or)s
X16 r (post-order)s
X-2 r (.)s
X24 r (However)s
X-2 r (,)s
X16 r (the)s
X16 r (situation)s
X16 r (is)s
X16 r (different)s
X15 r (in)s
X16 r (application)s
X16 r (areas)s
X16 r (of)s
X16 r (ISS,)s
X100 1323 p (such)s
X21 r (as)s
X20 r (worldwide)s
X21 r (\256le)s
X21 r (systems)s
X21 r (over)s
X20 r (the)s
X21 r (Internet,)s
X22 r (where)s
X21 r (exhaustive)s
X21 r (traversal)s
X21 r (of)s
X20 r (namespace)s
X21 r (is)s
X21 r (virtually)s
X100 1389 p (impossible.)s
X24 r (Therefore,)s
X17 r (I)s
X16 r (think)s
X15 r (we)s
X16 r (can)s
X16 r (make)s
X16 r (it)s
X16 r (easier)s
X16 r (to)s
X15 r (locate)s
X16 r (the)s
X16 r (desired)s
X16 r (information)s
X16 r (by)s
X16 r (providing)s
X16 r (more)s
X100 1456 p (relaxed)s
X15 r (naming)s
X15 r (scheme)s
X15 r (\(e.g.,)s
X16 r (DAGs)s
X15 r (or)s
X15 r (networks\);)s
X16 r (there)s
X15 r (is)s
X15 r (no)s
X15 r (reason)s
X15 r (to)s
X15 r (adhere)s
X15 r (to)s
X16 r (the)s
X15 r (hierarchical)s
X15 r (naming)s
X100 1522 p (scheme)s
X14 r (in)s
X14 r (worldwide)s
X14 r (information)s
X13 r (systems.)s
X183 1588 p (The)s
X14 r (second)s
X14 r (problem)s
X14 r (suggests)s
X15 r (that)s
X14 r (ISS)s
X14 r (should)s
X14 r (facilitate)s
X14 r (access)s
X14 r (to)s
X14 r (information)s
X14 r (resources)s
X15 r (with)s
X14 r (some)s
X14 r (sort)s
X100 1655 p (of)s
X16 r (resource)s
X15 r (access)s
X16 r (mechanism.)s
X24 r (It)s
X16 r (also)s
X15 r (suggests)s
X16 r (that)s
X16 r (previously)s
X15 r (independent)s
X16 r (services)s
X16 r (should)s
X15 r (be)s
X16 r (integrated)s
X100 1721 p (in)s
X12 r (seamless)s
X12 r (way)s
X13 r (so)s
X12 r (that)s
X12 r (users)s
X12 r (can)s
X13 r (incorporate)s
X12 r (and/or)s
X12 r (publish)s
X12 r (information)s
X12 r (easily)s
X-2 r (.)s
X17 r (In)s
X12 r (other)s
X12 r (words,)s
X13 r (ISS)s
X12 r (should)s
X100 1788 p (enable)s
X12 r (users)s
X13 r (to)s
X12 r (easily)s
X13 r (incorporate)s
X12 r (located)s
X13 r (information)s
X12 r (into)s
X13 r (their)s
X12 r (appropriate)s
X13 r (working)s
X12 r (set,)s
X13 r (and)s
X12 r (should)s
X13 r (enable)s
X100 1854 p (users)s
X14 r (to)s
X14 r (seamlessly)s
X14 r (export)s
X13 r (personal)s
X14 r (\256les)s
X14 r (to)s
X14 r (interested)s
X14 r (parties.)s
X183 1921 p (The)s
X10 r (third)s
X11 r (problem)s
X10 r (suggests)s
X11 r (that)s
X10 r (ISS)s
X10 r (should)s
X11 r (implement)s
X10 r (mechanisms)s
X11 r (to)s
X10 r (evaluate)s
X11 r (viability)s
X-3 r (,)s
X10 r (usefulness,)s
X11 r (and)s
X100 1987 p (freshness)s
X13 r (of)s
X14 r (available)s
X13 r (information)s
X13 r (based)s
X14 r (on)s
X13 r (the)s
X14 r (user)s
X13 r (feedback,)s
X13 r (so)s
X14 r (that)s
X13 r (snowballing)s
X13 r (of)s
X14 r (obsolete)s
X13 r (information)s
X100 2053 p (can)s
X15 r (be)s
X15 r (prevented.)s
X21 r (It)s
X15 r (also)s
X14 r (suggests)s
X15 r (that)s
X15 r (it)s
X15 r (is)s
X15 r (necessary)s
X14 r (to)s
X15 r (establish)s
X15 r (a)s
X15 r (method)s
X15 r (for)s
X14 r (periodically)s
X15 r (evaluating)s
X15 r (the)s
X100 2120 p (viability)s
X13 r (of)s
X12 r (an)s
X13 r (electronic)s
X13 r (archive,)s
X13 r (that)s
X12 r (hopefully)s
X13 r (will)s
X13 r (help)s
X13 r (us)s
X12 r (identify)s
X13 r (well-managed)s
X13 r (electronic)s
X12 r (archives)s
X13 r (and)s
X100 2186 p (accelerate)s
X14 r (their)s
X14 r (replication)s
X14 r (to)s
X13 r (other)s
X14 r (servers.)s
Xf99 SF
X100 2373 p (4)s
X80 r (Experiences)s
X20 r (with)s
X20 r (WWFS)s
Xf80 SF
X100 2496 p (More)s
X13 r (than)s
X12 r (10)s
X13 r (months)s
X13 r (of)s
X12 r (experiments)s
X13 r (with)s
X12 r (CS)s
X13 r (have)s
X13 r (helped)s
X12 r (me)s
X13 r (identify)s
X13 r (bene\256ts)s
X12 r (of)s
X13 r (features)s
X12 r (provided)s
X13 r (by)s
X13 r (CS,)s
X100 2562 p (while)s
X14 r (at)s
X14 r (the)s
X14 r (same)s
X13 r (time)s
X14 r (it)s
X14 r (made)s
X14 r (me)s
X14 r (aware)s
X14 r (of)s
X13 r (much)s
X14 r (room)s
X14 r (for)s
X14 r (signi\256cant)s
X14 r (improvements,)s
X14 r (as)s
X13 r (discussed)s
X14 r (below)s
X-2 r (.)s
Xf95 SF
X100 2721 p (4.1)s
X66 r (Supportive)s
X17 r (experiences)s
Xf80 SF
X100 2824 p (The)s
X15 r (choice)s
X16 r (of)s
X15 r (NFS)s
X16 r (and)s
X15 r (FTP)s
X16 r (seems)s
X15 r (to)s
X15 r (be)s
X16 r (appropriate)s
X15 r (for)s
X16 r (the)s
X15 r (starting)s
X16 r (point.)s
X23 r (The)s
X15 r (choice)s
X16 r (of)s
X15 r (ubiquitous)s
X16 r (pro-)s
X100 2891 p (tocols)s
X16 r (enabled)s
X17 r (CS)s
X16 r (to)s
X17 r (become)s
X16 r (a)s
X16 r (highly)s
X17 r (usable)s
X16 r (network)s
X17 r (service,)s
X17 r (without)s
X16 r (enforcing)s
X16 r (much)s
X17 r (effort)s
X15 r (on)s
X17 r (existing)s
X100 2957 p (Internet)s
X14 r (service)s
X14 r (providers.)s
X183 3023 p (A)s
X13 r (volume)s
X14 r (denotes)s
X13 r (a)s
X14 r (speci\256c)s
X13 r (group)s
X13 r (of)s
X14 r (\256les)s
X13 r (in)s
X13 r (the)s
X14 r (Internet)s
X13 r (archives.)s
X18 r (V)s
X-6 r (olume)s
X13 r (encapsulates)s
X13 r (name)s
X13 r (of)s
X14 r (hosts)s
X100 3090 p (and)s
X17 r (directories)s
X17 r (in)s
X17 r (the)s
X18 r (volume)s
X17 r (description)s
X17 r (\256le)s
X17 r (so)s
X17 r (that)s
X17 r (users)s
X18 r (can)s
X17 r (access)s
X17 r (volumes)s
X17 r (simply)s
X17 r (with)s
X17 r (their)s
X18 r (volume)s
X100 3156 p (names)s
X14 r (\(Figure)s
X14 r (2\),)s
X14 r (without)s
X13 r (knowledge)s
X14 r (of)s
X14 r (distant)s
X14 r (\256le)s
X14 r (servers)s
X14 r (or)s
X13 r (network)s
X14 r (con\256guration.)s
X183 3223 p (The)s
X18 r (access)s
X19 r (mechanism)s
X18 r (provided)s
X18 r (by)s
X19 r (CS)s
X18 r (automated)s
X18 r (the)s
X19 r (management)s
X18 r (of)s
X18 r (mass)s
X18 r (storage)s
X19 r (devices)s
X18 r (and)s
X18 r (the)s
X100 3289 p (management)s
X13 r (of)s
X13 r (replicated)s
X13 r (distant)s
X13 r (\256les,)s
X13 r (that)s
X13 r (had)s
X13 r (been)s
X13 r (undertaken)s
X12 r (by)s
X13 r (human)s
X13 r (administrators)s
X13 r (and)s
X13 r (casual)s
X13 r (users)s
X100 3355 p (in)s
X11 r (the)s
X12 r (pre-WWFS)s
X11 r (era,)s
X12 r (where)s
X11 r (lots)s
X12 r (of)s
X11 r (junk)s
X12 r (\256les)s
X11 r (had)s
X11 r (been)s
X12 r (kept)s
X11 r (intact)s
X12 r (and)s
X11 r (signi\256cant)s
X11 r (portion)s
X12 r (of)s
X11 r (storage)s
X12 r (devices)s
X100 3422 p (had)s
X12 r (been)s
X11 r (wasted,)s
X12 r (since)s
X12 r (it)s
X11 r (is)s
X12 r (dif\256cult)s
X11 r (to)s
X11 r (maintain)s
X12 r (their)s
X11 r (local)s
X12 r (archive)s
X12 r (in)s
X11 r (the)s
Xf81 SF
X12 r (fr)s
X-1 r (esh)s
Xf80 SF
X10 r (condition)s
X12 r (due)s
X12 r (to)s
X11 r (the)s
X12 r (diversity)s
X100 3488 p (of)s
X14 r (interest,)s
X14 r (ever)s
X14 r (changing)s
X13 r (scope)s
X14 r (of)s
X14 r (interest,)s
X14 r (and)s
X14 r (frequent)s
X14 r (changes)s
X13 r (in)s
X14 r (the)s
X14 r (original)s
X14 r (information.)s
X183 3555 p (The)s
X21 r (transparency)s
X21 r (realized)s
X20 r (by)s
X21 r (CS)s
X21 r (seems)s
X21 r (to)s
X20 r (be)s
X21 r (convenient,)s
X23 r (and)s
X20 r (it)s
X21 r (surely)s
X21 r (gives)s
X21 r (users)s
X21 r (advantage)s
X20 r (over)s
X100 3621 p (existing)s
X13 r (FTP)s
X13 r (applications.)s
X18 r (A)s
X13 r (CS)s
X13 r (user)s
X13 r (can)s
X12 r (edit)s
X13 r (a)s
X13 r (\256le)s
X13 r (with)s
Xf84 SF
X13 r (vi)s
Xf80 SF
X(,)s
X13 r (print)s
X13 r (it,)s
X13 r (compress)s
X13 r (it,)s
X13 r (or)s
X13 r (even)s
X13 r (make)s
X13 r (a)s
X12 r (symbolic)s
X100 3688 p (link)s
X14 r (to)s
X14 r (it,)s
X14 r (just)s
X13 r (as)s
X14 r (he/she)s
X14 r (does)s
X14 r (with)s
X14 r (any)s
X14 r (\256le)s
X13 r (on)s
X14 r (any)s
X14 r (partition.)s
X1261 3946 p (3)s
XEP
X
X%%Page: 4 4
XBP
X100 566 p 2 230 ru
X156 282 p 2239 2 ru
Xf66 SF
X100 282 p (\023)s
X2239 r (\020)s
Xf78 SF
X156 371 p (volume-name:)s
X30 r (toklab-elisp)s
X156 432 p (server:)s
X30 r (toklab.ics.osaka-u.ac.jp)s
X156 493 p (directory:)s
X30 r (elisp/library)s
X156 554 p (description:)s
X30 r (Emacs)s
X30 r (Lisp)s
X30 r (library)s
X30 r (edited)s
X30 r (by)s
X30 r (Osaka)s
X30 r (Univ.)s
Xf66 SF
X100 621 p (\022)s
X2239 r (\021)s
X156 621 p 2239 2 ru
X2450 566 p 2 230 ru
Xf80 SF
X100 798 p (Figure)s
X14 r (2:)s
Xf82 SF
X19 r (A)s
X13 r (sample)s
X14 r (volume)s
X14 r (description)s
X14 r (\256le)s
X14 r (from)s
X14 r (the)s
X14 r (CS)s
X14 r (distribution.)s
Xf80 SF
X19 r (V)s
X-6 r (olume)s
X12 r (encapsulates)s
X14 r (name)s
X14 r (of)s
X14 r (hosts)s
X100 865 p (and)s
X17 r (directories)s
X17 r (in)s
X17 r (the)s
X18 r (volume)s
X17 r (description)s
X17 r (\256le)s
X17 r (so)s
X17 r (that)s
X17 r (users)s
X18 r (can)s
X17 r (access)s
X17 r (volumes)s
X17 r (simply)s
X17 r (with)s
X17 r (their)s
X18 r (volume)s
X100 931 p (names.)s
X100 1359 p 2 230 ru
X156 1076 p 2239 2 ru
Xf66 SF
X100 1076 p (\023)s
X2239 r (\020)s
Xf78 SF
X156 1165 p (virginia.edu/)s
X90 r (ftp)s
X150 r (uvacs.cs.virginia.edu:/pub/techreports)s
X156 1226 p (bu.edu/)s
X269 r (ftp)s
X150 r (cs.bu.edu:/techreports)s
X156 1287 p (colorado.edu/)s
X90 r (ftp)s
X150 r (bruno.cs.colorado.edu:/pub/cs/techreports)s
X156 1348 p (wustl.edu/)s
X180 r (ftp)s
X149 r (wuarchive.wustl.edu:/techreports)s
Xf66 SF
X100 1415 p (\022)s
X2239 r (\021)s
X156 1415 p 2239 2 ru
X2450 1359 p 2 230 ru
Xf80 SF
X100 1592 p (Figure)s
X17 r (3:)s
Xf82 SF
X23 r (Portion)s
X17 r (of)s
X16 r (a)s
X17 r (hypothetical)s
X16 r (volume)s
X17 r (description)s
X16 r (\256le)s
X17 r (\252US-tech-reports\272)s
X17 r (that)s
X16 r (organize)s
X17 r (several)s
X16 r (ftp)s
X100 1658 p (servers)s
X15 r (into)s
X15 r (one)s
X15 r (volume)s
Xf80 SF
X(.)s
X23 r (The)s
X15 r (\256rst)s
X15 r (column)s
X15 r (denotes)s
X15 r (subdirectory)s
X16 r (in)s
X15 r (the)s
X15 r (volume,)s
X15 r (second)s
X15 r (column)s
X16 r (the)s
X15 r (access)s
X100 1725 p (method,)s
X14 r (and)s
X14 r (third)s
X14 r (column)s
X13 r (the)s
X14 r (server)s
X14 r (name)s
X14 r (and)s
X14 r (subdirectory)s
X-3 r (.)s
Xf95 SF
X100 1903 p (4.2)s
X66 r (Possible)s
X17 r (improvements)s
Xf80 SF
X100 2006 p (Although)s
X12 r (both)s
X12 r (NFS)s
X13 r (and)s
X12 r (FTP)s
X12 r (were)s
X12 r (a)s
X13 r (good)s
X12 r (starting)s
X12 r (point,)s
X13 r (they)s
X12 r (demonstrated)s
X12 r (that)s
X12 r (poor)s
X13 r (operational)s
X12 r (semantics)s
X100 2073 p (impair)s
X15 r (usability)s
X14 r (and)s
X15 r (ef\256ciency)s
X13 r (of)s
X15 r (CS)s
X15 r (to)s
X14 r (some)s
X15 r (extent.)s
X21 r (For)s
X14 r (example,)s
X15 r (if)s
X15 r (an)s
X14 r (user)s
X15 r (requested)s
X15 r (a)s
X14 r (WWFS)s
X15 r (client)s
X15 r (to)s
Xf84 SF
X100 2139 p (grep)s
Xf80 SF
X13 r (through)s
X12 r (all)s
X13 r (\256les)s
X12 r (in)s
X13 r (the)s
X12 r (current)s
X13 r (directory)s
X-3 r (,)s
X12 r (the)s
X13 r (client)s
X12 r (must)s
X13 r (retrieve)s
X12 r (all)s
X13 r (\256les)s
X13 r (from)s
X12 r (a)s
X13 r (\256le)s
X12 r (server)s
X13 r (via)s
X12 r (CS)s
X13 r (and)s
X100 2205 p (then)s
Xf84 SF
X14 r (grep)s
Xf80 SF
X14 r (through)s
X14 r (them,)s
X14 r (while)s
X13 r (it)s
X14 r (is)s
X14 r (much)s
X14 r (more)s
X14 r (ef\256cient)s
X13 r (to)s
X14 r (execute)s
Xf84 SF
X14 r (grep)s
Xf80 SF
X13 r (on)s
X14 r (the)s
X14 r (\256le)s
X14 r (server)s
X14 r (and)s
X14 r (return)s
X14 r (the)s
X100 2272 p (result)s
X14 r (to)s
X14 r (the)s
X14 r (client.)s
X183 2338 p (While)s
X18 r (volume)s
X17 r (has)s
X18 r (successfully)s
X17 r (separated)s
X18 r (resource)s
X17 r (information)s
X18 r (\(i.e.,)s
X19 r (volume)s
X17 r (name\))s
X18 r (from)s
X17 r (location)s
X18 r (in-)s
X100 2405 p (formation)s
X19 r (\(i.e.,)s
X20 r (volume)s
X19 r (description)s
X19 r (\256le\),)s
X20 r (it)s
X18 r (can)s
X19 r (be)s
X19 r (extended)s
X19 r (so)s
X19 r (that)s
X19 r (several)s
X18 r (ftp)s
X19 r (servers)s
X19 r (can)s
X19 r (be)s
X19 r (organized)s
X100 2471 p (into)s
X16 r (one)s
X16 r (volume,)s
X17 r (several)s
X16 r (volumes)s
X16 r (can)s
X16 r (be)s
X16 r (reorganized)s
X15 r (into)s
X16 r (one)s
X16 r (volume,)s
X16 r (or)s
X16 r (the)s
X16 r (naming)s
X16 r (scheme)s
X16 r (of)s
X16 r (existing)s
X100 2537 p (volumes)s
X16 r (can)s
X17 r (be)s
X16 r (modi\256ed)s
X16 r (\(Figures)s
X17 r (3)s
X16 r (and)s
X16 r (4\).)s
X26 r (This)s
X17 r (extention)s
X16 r (closely)s
X16 r (models)s
X17 r (and)s
X16 r (extrapolates)s
X16 r (the)s
X17 r (common)s
X100 2604 p (techniques)s
X18 r (used)s
X18 r (for)s
X19 r (reorganizing)s
X17 r (existing)s
X18 r (ftp)s
X18 r (archives,)s
X19 r (meanwhile)s
X19 r (relaxing)s
X18 r (the)s
X18 r (current,)s
X19 r (rather)s
X19 r (simpli\256ed)s
X100 2670 p (archive-to-volume)s
X14 r (mapping)s
X14 r (scheme.)s
X183 2737 p (Whereas)s
X19 r (transparency)s
X18 r (bene\256ts)s
X19 r (users)s
X18 r (in)s
X19 r (that)s
X18 r (existing)s
X19 r (tools)s
X18 r (can)s
X19 r (be)s
X18 r (used,)s
X20 r (it)s
X19 r (can)s
X18 r (be)s
X19 r (annoying)s
X18 r (when)s
X19 r (the)s
X100 2803 p (requested)s
X16 r (\256le)s
X16 r (transfer)s
X16 r (requires)s
X16 r (irresistibly)s
X16 r (long)s
X16 r (time.)s
X25 r (Current)s
X16 r (implementation)s
X16 r (of)s
X16 r (CS)s
X16 r (does)s
X16 r (not)s
X16 r (allow)s
X16 r (users)s
X100 2870 p (to)s
X14 r (wait)s
X15 r (for)s
X14 r (their)s
X14 r (\256le)s
X15 r (transfer)s
X14 r (to)s
X14 r (complete,)s
X15 r (and)s
X14 r (it)s
X15 r (does)s
X14 r (not)s
X14 r (explain)s
X15 r (that)s
X14 r (his/her)s
X14 r (\256le)s
X15 r (transfer)s
X14 r (will)s
X14 r (take)s
X15 r (a)s
X14 r (while,)s
X100 3343 p 2 220 ru
X156 3070 p 2239 2 ru
Xf66 SF
X100 3070 p (\023)s
X2239 r (\020)s
Xf78 SF
X156 3157 p (rfc1100)s
X269 r (vol)s
X150 r (RFC:^rfc11)s
X156 3218 p (rfc1200)s
X269 r (vol)s
X150 r (RFC:^rfc12)s
X156 3279 p (rfc1300)s
X269 r (vol)s
X150 r (RFC:^rfc13)s
X156 3339 p (rfc1400)s
X269 r (vol)s
X150 r (RFC:^rfc14)s
Xf66 SF
X100 3398 p (\022)s
X2239 r (\021)s
X156 3398 p 2239 2 ru
X2450 3343 p 2 220 ru
Xf80 SF
X100 3575 p (Figure)s
X17 r (4:)s
Xf82 SF
X25 r (An)s
X17 r (excerpt)s
X17 r (from)s
X17 r (a)s
X16 r (hypothetical)s
X17 r (volume)s
X17 r (description)s
X17 r (\256le)s
X17 r (that)s
X17 r (reorganize)s
X17 r (namespace)s
X17 r (of)s
X17 r (an)s
X17 r (ex-)s
X100 3642 p (isting)s
X15 r (volume)s
X15 r (\252RFC\272)s
X14 r (to)s
X15 r (shape)s
X15 r (a)s
X15 r (new)s
X14 r (volume)s
Xf80 SF
X(.)s
X22 r (The)s
X14 r (third)s
X15 r (column)s
X15 r (contains)s
X15 r (an)s
X14 r (existing)s
X15 r (volume)s
X15 r (name)s
X15 r (and)s
X15 r (a)s
X100 3708 p (simpli\256ed)s
X14 r (regular)s
X14 r (expression,)s
X14 r (each)s
X13 r (separated)s
X14 r (by)s
X14 r (colon.)s
X1261 3946 p (4)s
XEP
X
X%%Page: 5 5
XBP
X631 262 p 1287 2 ru
X630 329 p 2 66 ru
Xf80 SF
X665 309 p (Return)s
X13 r (code)s
X1195 329 p 2 66 ru
X1229 309 p (Meaning)s
X1917 329 p 2 66 ru
X631 331 p 1287 2 ru
X630 397 p 2 66 ru
Xf84 SF
X665 377 p (WF_REP_WAIT)s
X1195 397 p 2 66 ru
Xf80 SF
X1229 377 p (Operation)s
X14 r (would)s
X14 r (block)s
X1917 397 p 2 66 ru
X630 464 p 2 66 ru
Xf84 SF
X665 444 p (WF_ERR_ALREADY)s
X1195 464 p 2 66 ru
Xf80 SF
X1229 444 p (Operation)s
X14 r (already)s
X14 r (in)s
X14 r (progress)s
X1917 464 p 2 66 ru
X630 530 p 2 66 ru
Xf84 SF
X665 510 p (WF_ERR_PROTO)s
X1195 530 p 2 66 ru
Xf80 SF
X1229 510 p (Protocol)s
X14 r (not)s
X14 r (available)s
X1917 530 p 2 66 ru
X630 597 p 2 66 ru
Xf84 SF
X665 577 p (WF_ERR_NDOWN)s
X1195 597 p 2 66 ru
Xf80 SF
X1229 577 p (Network)s
X14 r (is)s
X14 r (down)s
X1917 597 p 2 66 ru
X630 663 p 2 66 ru
Xf84 SF
X665 643 p (WF_ERR_NUNREACH)s
X1195 663 p 2 66 ru
Xf80 SF
X1229 643 p (Network)s
X14 r (is)s
X14 r (unreachable)s
X1917 663 p 2 66 ru
X630 729 p 2 66 ru
Xf84 SF
X665 710 p (WF_ERR_XABORT)s
X1195 729 p 2 66 ru
Xf80 SF
X1229 710 p (T)s
X-1 r (ransfer)s
X13 r (aborted)s
X1917 729 p 2 66 ru
X630 796 p 2 66 ru
Xf84 SF
X665 776 p (WF_ERR_TIMEOUT)s
X1195 796 p 2 66 ru
Xf80 SF
X1229 776 p (Connection)s
X14 r (timed)s
X14 r (out)s
X1917 796 p 2 66 ru
X630 862 p 2 66 ru
Xf84 SF
X665 842 p (WF_ERR_REFUSED)s
X1195 862 p 2 66 ru
Xf80 SF
X1229 842 p (Connection)s
X14 r (refused)s
X1917 862 p 2 66 ru
X630 929 p 2 66 ru
Xf84 SF
X665 909 p (WF_ERR_HDOWN)s
X1195 929 p 2 66 ru
Xf80 SF
X1229 909 p (Host)s
X14 r (is)s
X14 r (down)s
X1917 929 p 2 66 ru
X630 995 p 2 66 ru
Xf84 SF
X665 975 p (WF_ERR_HUNREACH)s
X1195 995 p 2 66 ru
Xf80 SF
X1229 975 p (No)s
X14 r (route)s
X14 r (to)s
X14 r (host)s
X1917 995 p 2 66 ru
X630 1062 p 2 66 ru
Xf84 SF
X665 1042 p (WF_ERR_NQUOT)s
X1195 1062 p 2 66 ru
Xf80 SF
X1229 1042 p (Network)s
X14 r (quota)s
X14 r (exceeded)s
X1917 1062 p 2 66 ru
X631 1064 p 1287 2 ru
X100 1218 p (T)s
X-3 r (able)s
X10 r (1:)s
Xf82 SF
X17 r (A)s
X11 r (list)s
X11 r (of)s
X11 r (internal)s
X11 r (reply)s
X11 r (codes)s
X11 r (that)s
X11 r (have)s
X11 r (been)s
X11 r (de\256ned)s
X11 r (and)s
X11 r (used)s
X11 r (in)s
X11 r (the)s
X11 r (Cluster)s
X11 r (Server)s
X-2 r (,)s
X10 r (which)s
X11 r (cannot)s
X100 1285 p (be)s
X14 r (mapped)s
X14 r (to)s
X14 r (appropriate)s
X13 r (NFS)s
X14 r (reply)s
X14 r (code.)s
Xf80 SF
X100 1462 p (since)s
X17 r (NFS)s
X16 r (does)s
X17 r (not)s
X16 r (provide)s
X17 r (underlying)s
X16 r (\256lesystems)s
X17 r (the)s
X17 r (power)s
X16 r (of)s
X17 r (speech,)s
X17 r (and)s
X17 r (it)s
X16 r (does)s
X17 r (not)s
X16 r (let)s
X17 r (them)s
X16 r (convey)s
X100 1528 p (precise)s
X15 r (semantics)s
X16 r (with)s
X15 r (their)s
X15 r (locally)s
X15 r (de\256ned)s
X16 r (error)s
X15 r (codes,)s
X16 r (as)s
X15 r (exempli\256ed)s
X15 r (in)s
X15 r (CS)s
X16 r (\(T)s
X-3 r (able)s
X14 r (1\).)s
X23 r (Overall,)s
X15 r (equality)s
X100 1595 p (of)s
X16 r (operation)s
X16 r (primitives)s
X16 r (and)s
X16 r (uniformity)s
X16 r (of)s
X16 r (\256lesystem)s
X15 r (behavior)s
X16 r (are)s
X16 r (totally)s
X16 r (different)s
X15 r (thing;)s
X17 r (integrating)s
X16 r (these)s
X100 1661 p (two)s
X14 r (into)s
X14 r (a)s
X14 r (\252transparency\272)s
X13 r (may)s
X14 r (impair)s
X14 r (usability)s
X14 r (of)s
X14 r (underlying)s
X14 r (\256lesystems.)s
X183 1728 p (That)s
X21 r (difference)s
X19 r (suggests)s
X21 r (that)s
X20 r (\256lesystem)s
X21 r (behavior)s
X21 r (may)s
X20 r (vary)s
X-2 r (,)s
X21 r (and)s
X21 r (a)s
X20 r (client)s
X21 r (software)s
X20 r (must)s
X21 r (support)s
X21 r (the)s
X100 1794 p (different)s
X9 r (behavior)s
X11 r (if)s
X10 r (it)s
X11 r (is)s
X10 r (willing)s
X11 r (to)s
X10 r (be)s
X11 r (useful)s
X10 r (on)s
X11 r (the)s
X10 r (underlying)s
X11 r (\256lesystem.)s
X17 r (Support)s
X11 r (of)s
X10 r (disparate)s
X11 r (behavior)s
END_OF_FILE
  if test 46426 -ne `wc -c <'doc/beyond.ps.A'`; then
    echo shar: \"'doc/beyond.ps.A'\" unpacked with wrong size!
  elif test -f 'doc/beyond.ps.B'; then
    echo shar: Combining  \"'doc/beyond.ps'\" \(92615 characters\)
    cat 'doc/beyond.ps.A' 'doc/beyond.ps.B' > 'doc/beyond.ps'
    if test 92615 -ne `wc -c <'doc/beyond.ps'`; then
      echo shar: \"'doc/beyond.ps'\" combined with wrong size!
    else
      rm doc/beyond.ps.A doc/beyond.ps.B
    fi
  fi
  # end of 'doc/beyond.ps.A'
fi
if test -f 'mule/mule.el-patched' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'mule/mule.el-patched'\"
else
  echo shar: Extracting \"'mule/mule.el-patched'\" \(39271 characters\)
  sed "s/^X//" >'mule/mule.el-patched' <<'END_OF_FILE'
X;; Basic multilingual commands for Mule
X;; Copyright (C) 1992 Free Software Foundation, Inc.
X;; This file is part of Mule (MULtilingual Enhancement of GNU Emacs).
X
X;; Mule is free software distributed in the form of patches to GNU Emacs.
X;; You can redistribute it and/or modify
X;; it under the terms of the GNU General Public License as published by
X;; the Free Software Foundation; either version 1, or (at your option)
X;; any later version.
X
X;; Mule is distributed in the hope that it will be useful,
X;; but WITHOUT ANY WARRANTY; without even the implied warranty of
X;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X;; GNU General Public License for more details.
X
X;; You should have received a copy of the GNU General Public License
X;; along with GNU Emacs; see the file COPYING.  If not, write to
X;; the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.
X
X;;; 87.6.15  created by K.Handa
X;;; 87.6.24  modified by K.Handa & H.Nakahara<a32275@tansei.u-tokyo.junet>
X;;; 88.1.18  modified for Nemacs Ver.2.0 by K.Handa
X;;; 88.6.19  modified for Nemacs Ver.2.1 by K.Handa
X;;; 89.3.14  modified for Nemacs Ver.3.0 by K.Handa
X;;; 89.11.17 modified for Nemacs Ver.3.2 by K.Handa and S.Tomura
X;;; 90.2.28  modified for Nemacs Ver.3.3.1 by K.Handa
X;;; 90.6.6   modified for Nemacs Ver.3.3.2 by K.Handa
X;;; 92.3.5   modified for Mule Ver.0.9.0 by K.Handa <handa@etl.go.jp>
X;;; 92.3.17  modified for Mule Ver.0.9.1 by K.Handa <handa@etl.go.jp>
X;;;	Move difinition of mule-keymap from mule-util.el to here.
X;;;	If write-region is called interactively with prefix arg,
X;;;	user is asked coding-system.
X;;; 92.3.18  modified for Mule Ver.0.9.1 by T.Enami <enami@sys.ptg.sony.co.jp>
X;;;	In load, loadablep is called with 'nosuffix' argument.
X;;; 92.4.3   modified for Mule Ver.0.9.2 by K.Handa <handa@etl.go.jp>
X;;;	The way of handling code-priority changed.
X;;; 92.4.7   modified for Mule Ver.0.9.3 by P.Hammarlund <perham@nada.kth.se>
X;;;	Document of insert-file-contents-pre-hook revised.
X;;; 92.4.17 modified for Mule Ver.0.9.3 by K.Handa <handa@etl.go.jp>
X;;;	Cope with new coding-system form.
X;;; 92.4.30  modified for Mule Ver.0.9.4
X;;;	by K.Handa <handa@etl.go.jp> and T.Enami <enami@sys.ptg.sony.co.jp>
X;;;	call-process-hook returns cons of coding-systems for input and output.
X;;;	call-process converts ARGS according to coding-system.
X;;;	call-process-region-hook is deleted.
X;;; 92.5.18  modified for Mule Ver.0.9.4
X;;;		by M.Higashida <manabu@sigmath.osaka-u.ac.jp>
X;;;	Non-subprocess systems are concerned.
X;;; 92.5.18  modified for Mule Ver.0.9.4 by Y.Niibe <gniibe@mri.co.jp>
X;;;	In set-keyboard-coding-system, typemis is fixed.
X;;; 92.5.22  modified for Mule Ver.0.9.4
X;;;	by Manabu HIGASHIDA <manabu@sigmath.osaka-u.ac.jp>
X;;;	read-coding-system call completing-read with REQUIRE-MATCH t.
X;;; 92.5.28  modified for Mule Ver.0.9.4
X;;;	by T.Maebashi <maebashi@mcs.meitetsu.co.jp>
X;;;	set-display-coding-system calls redraw-display.
X;;; 92.6.26  modified for Mule Ver.0.9.5 by T.Enami <enami@sys.ptg.sony.co.jp>
X;;;	Funtion load is modified so that it 'eval's a file contents
X;;;	in the current buffer.
X;;; 92.7.2  modified for Mule Ver.0.9.5 by K.Handa <handa@etl.go.jp>
X;;;	Function string-to-char-list is moved to mule-util.el.
X;;; 92.7.10  modified for Mule Ver.0.9.5 by K.Handa <handa@etl.go.jp>
X;;;	Several definition in *predefined-category* changed.
X;;; 92.7.13  modified for Mule Ver.0.9.5 by K.Handa <handa@etl.go.jp>
X;;;	Message of "load" is "LOADING..." when loading a .el file.
X;;; 92.7.14  modified for Mule Ver.0.9.5 by T.Ito <toshi@his.cpl.melco.co.jp>
X;;;	Unnecessary '*' in comments of variables deleted.
X;;; 92.7.20  modified for Mule Ver.0.9.5 by K.Handa <handa@etl.go.jp>
X;;;	In the mode-list-format, if mc-flag is nil '-' is shown.
X;;; 92.9.10  modified for Mule Ver.0.9.6 by K.Handa <handa@etl.go.jp>
X;;;	make-coding-system accepts extended leading-char.
X;;; 92.9.18  modified for Mule Ver.0.9.6 by K.Handa <handa@etl.go.jp>
X;;;	If code-convert-string in call-process fails, original args are used.
X;;; 92.9.30  modified for Mule Ver.0.9.6 by K.Handa <handa@etl.go.jp>
X;;;	Variable file-coding-system-for-read-not-found is deleted.
X;;; 92.10.11 modified for Mule Ver.0.9.6 by K.Handa <handa@etl.go.jp>
X;;;	Staffs of private character set are moved from mule-util.el.
X;;;	x-default-fonts and x-default-encoding are declared.
X;;; 92.11.4  modified for Mule Ver.0.9.6 by K.Handa <handa@etl.go.jp>
X;;;	regexp-search-forward is deleted.
X;;; 92.11.19 modified for Mule Ver.0.9.6 by T.Enami <enami@sys.ptg.sony.co.jp>
X;;;	write-region does not have to call set-file-coding-system.
X;;; 92.12.4  modified for Mule Ver.0.9.7 by T.Enami <enami@sys.ptg.sony.co.jp>
X;;;	load should signal error on syntax error.
X;;; 92.12.16 modified for Mule Ver.0.9.7
X;;;			by M.Higashida <manabu@sigmath.osaka-u.ac.jp>
X;;;	In load, temporaly buffer should have fundamental-mode.
X;;; 92.12.17 modified for Mule Ver.0.9.7 by Y.Niibe <gniibe@mri.co.jp>
X;;;	Preliminary support (92.8.2) for right-to-left languages.
X;;; 92.12.25 modified for Mule Ver.0.9.7 by K.Handa <handa@etl.go.jp>
X;;;	Now, coding-system is a symbol.
X;;; 92.12.31 modified for Mule Ver.0.9.7.1 by T.Shingu <shingu@cpr.canon.co.jp>
X;;;	Document of make-coding-system fixed.
X;;; 93.2.10  modified for Mule Ver.0.9.7.1
X;;;				by T.Enami <enami@sys.ptg.sony.co.jp>
X;;;	In call-process-region, delete temp file only if necessary.
X;;; 93.3.9   modified for Mule Ver.0.9.7.1
X;;;				by T.Enami <enami@sys.ptg.sony.co.jp>
X;;;	In insert-file-contents, insert-file-contents-error-hook should
X;;;	be given error info.
X;;;	In insert-file-contents, now it's hook function's responsibility
X;;;	to set file-coding-system of the buffer.
X;;;	In load, default-major-mode should not be bound while loading.
X;;; 93.3.15  modified for Mule Ver.0.9.7.1 by K.Handa <handa@etl.go.jp>
X;;;	insert-file-contents accepts optional third arg CODING-SYSTEM.
X;;;	In load, call insert-file-contents instead of si:insert-file-contents.
X;;; 93.3.23  modified for Mule Ver.0.9.7.1 by T.Shingu <shingu@cpr.canon.co.jp>
X;;;	In make-coding-system, document corrected.
X;;; 93.4.16  modified for Mule Ver.0.9.7.1 by K.Handa <handa@etl.go.jp>
X;;;	get-code-mnemonic returns ?? for invalid coding-system.
X;;;	New function set-file-coding-system-for-read.
X;;; 93.4.29  modified for Mule Ver.0.9.8 by K.Handa <handa@etl.go.jp>
X;;;	CNS11643 support.
X;;; 93.5.2   modified for Mule Ver.0.9.8 by P.Hammarlund <perham@nada.kth.se>
X;;;	Make sure that byte compiled elc files are read up
X;;;	without code conversion.
X;;; 93.5.14  modified for Mule Ver.0.9.8 by K.Handa <handa@etl.go.jp>
X;;;	make-coding-system accepts EOL type instead of CRLF flag.
X;;;	CCL support.
X;;; 93.5.25  modified for Mule Ver.0.9.8
X;;;				by T.Atsushiba <toshiki@jit.dec-j.co.jp>
X;;;	'load' is modified for case insensitive system.
X;;; 93.6.1   modified for Mule Ver.0.9.8 by K.Handa <handa@etl.go.jp>
X;;;	insert-file-contents handles post-read-conversion,
X;;;	write-region handles pre-write-conversion
X;;;	call-process-region returns 'status'.
X;;; 93.6.15  modified for Mule Ver.0.9.8 by T.Enami <enami@sys.ptg.sony.co.jp>
X;;;	In write-region, temporary buffer should be killed.
X
X(defconst mule-version "0.9.8 PL01" "\
XVersion numbers of this version of Mule.")
X
X(defconst mule-version-date "1993.6.20" "\
XDistribution date of this version of Mule.")
X
X(defun mule-version () "\
XReturn string describing the version of Mule that is running."
X  (interactive)
X  (if (interactive-p)
X      (message "%s" (mule-version))
X    (format "Mule Version %s of %s" mule-version mule-version-date)))
X  
X(defvar mule-keymap (make-sparse-keymap) "Keymap for Mule specific commands.")
X(fset 'mule-prefix mule-keymap)
X
X(define-key ctl-x-map "\C-k" 'mule-prefix)
X
X(defvar mc-verbose-code nil
X  "*non nil means display mnemonics of file-coding-system,
Xkeyboard-coding-system, and display-coding-system on mode line.
XNil means display only mnemonics of file-coding-system.")
X
X(setq-default mode-line-buffer-identification '("Mule: %15b"))
X
X(setq-default mode-line-format
X  (list (purecopy "")
X   '(mc-verbose-code "%C" "%c")
X   '(mc-flag ":" "-")
X   'mode-line-modified
X   'mode-line-buffer-identification
X   (purecopy "   ")
X   'global-mode-string
X   (purecopy "  %[(")
X   'mode-name 'minor-mode-alist "%n" 'mode-line-process
X   (purecopy ")%]--")
X   (purecopy '(-3 . "%p"))
X   (purecopy "-%-")))
X
X;; Big change by T.Enami
X(defun load (str &optional noerror nomessage nosuffix)
X  "Execute a file of Lisp code named FILE.
XFirst tries FILE with .elc appended, then tries with .el,
X then tries FILE unmodified.  Searches directories in load-path.
XIf optional second arg NOERROR is non-nil,
X report no error if FILE doesn't exist.
XPrint messages at start and end of loading unless
X optional third arg NOMESSAGE is non-nil.
XIf optional fourth arg NOSUFFIX is non-nil, don't try adding
X suffixes .elc or .el to the specified name FILE.
XReturn t if file exists."
X  (let ((file (substitute-in-file-name str)))
X    (if (or (<= (length file) 0)
X	    ;; 92.3.18 by T.Enami
X	    ;; (not (setq file (loadablep file)))
X	    (not (setq file (loadablep file nosuffix)))
X	    )
X	(if noerror nil
X	  (error "Cannot open load file %s" str))
X					; 92.12.16 by H.Manabu
X      (let* ((buffer			; 93.3.15 by T.Enami
X	      (let ((default-major-mode 'fundamental-mode))
X		(generate-new-buffer " *load-temp*")))
X	     (load-in-progress t)
X	     (elc (string= ".elc" (downcase ; 93.5.24 by T.Atsushiba
X				   (substring file -4))))) ; 92.7.13 by K.Handa
X	(or nomessage (message (if elc "Loading %s..." "LOADING %s...") str))
X	(unwind-protect
X	    (eval
X	     (save-excursion
X	       (set-buffer buffer)
X	       (insert "(progn\n\n)")
X	       (forward-line -1)
X	       ;; 92.7.13, 93.3.15 by K.Handa, 93.5.2 by P.Hammarlund
X	       (if elc
X		   (let (insert-file-contents-pre-hook
X			 insert-file-contents-error-hook
X			 insert-file-contents-post-hook)
X		     (insert-file-contents file nil *noconv*))
X		 (insert-file-contents file nil *autoconv*))
X	       (goto-char (point-min))
X	       (prog1			;; 92.12.4 by T.Enami
X		   (read (current-buffer))
X		 (or (eobp)
X		     (signal 'invalid-read-syntax '("may be extra `)'")) ))))
X	  (kill-buffer buffer) )
X	(or nomessage noninteractive	; 92.7.13 by K.Handa
X	    (message (if elc "Loading %s...done" "LOADING %s...done") str)))
X      t)))
X
X;;;
X;;;  Modification of kill-all-local-variables  by S.Tomura  89.12.15
X;;;
X;;;  protect specified local variables from kill-all-local-variables
X;;;
X
X(defconst *protected-local-variables* 
X  '(mc-flag
X    file-coding-system
X    )
X  "List of buffer local variables protected from 'kill-all-local-variables' ."
X  )
X
X(defun save-protected-local-variables (vlist)
X  (let ((vlist vlist)
X	  (alist nil))
X    (while vlist
X      (if (boundp (car vlist))
X	  (setq alist (cons (cons (car vlist) (eval (car vlist)))
X			alist)))
X      (setq vlist (cdr vlist)))
X    alist))
X
X(defun recover-protected-local-variables (alist)
X  (let ((alist alist))
X    (while alist
X      (set (car (car alist)) (cdr (car alist)))
X      (setq alist (cdr alist)))))
X
X(if (not (fboundp 'si:kill-all-local-variables))
X    (fset 'si:kill-all-local-variables
X	  (symbol-function 'kill-all-local-variables)))
X
X(defun kill-all-local-variables ()
X  "Eliminate all the buffer-local variable values of the current buffer
Xexcept for variables in *protected-local-variables* of the current buffer.
XThis buffer will then see the default values of such variables."
X  (let ((alist (save-protected-local-variables *protected-local-variables*)))
X    ;;; We can use "buffer-local-variables". Which is better?
X    (unwind-protect
X	(si:kill-all-local-variables)
X      (recover-protected-local-variables alist))))
X
X(defvar self-insert-after-hook nil
X  "Hook to run when extended self insertion command exits.  Should take
Xtwo arguments START and END corresponding to character position.")
X
X(make-variable-buffer-local 'self-insert-after-hook)
X
X(defun regexp-dump-all (pat)
X  (regexp-dump (car pat))
X  (regexp-dump (car (cdr pat)))
X  (setq pat (cdr (cdr pat)))
X  (while pat
X    (regexp-dump (car (car pat)))
X    (regexp-dump (cdr (car pat)))
X    (setq pat (cdr pat))))
X
X(defun define-word (pattern)
X  "One arg RE should be a compiled pattern created by'regexp-compile
Xwith 'WORD' option t.  See documentation of regexp-compile."
X  (let (l)
X    (setq l (list (car (cdr pattern)) (car pattern)))
X    (setq pattern (cdr (cdr pattern)))
X    (while pattern
X      (setq l (cons (car (car pattern)) l))
X      (setq l (cons (cdr (car pattern)) l))
X      (setq pattern (cdr pattern)))
X    (define-word-pattern (nreverse l))))
X
X;; 92.9.13 by K.Handa
X;; Private character-set staffs
X(defun undefined-private-character-set (bytes column)
X  "Return extended leading-char of undefined private character set of
XBYTES (1 or 2) length and COLUMN (1 or 2) width."
X  (let (lc lcmax)
X    (cond ((= bytes 1)
X	   (cond ((= column 1) (setq lc 160 lcmax 184))
X		 ((= column 2) (setq lc 184 lcmax 192))))
X	  ((= bytes 2)
X	   (cond ((= column 1) (setq lc 192 lcmax 200))
X		 ((= column 2) (setq lc 200 lcmax 224)))))
X    (if lc
X	(progn
X	  (while (and (< lc lcmax) (character-set lc))
X	    (setq lc (1+ lc)))
X	  (if (< lc lcmax) lc)))))
X
X;; 92.8.2 Y.Niibe add direction
X(defun new-private-character-set (bytes column type graphic final dir doc)
X  "Register new private character-set of
XBYTES/COLUMN/TYPE/GRAPHIC/FINAL/DIRECTION/DOC (see also new-character-set).
XThe leading-char for the character-set is assigned automatically
Xnot to conflict with another private sets.
XIt returns the leading-char or nil if no unused leading-char left."
X  (let ((lc (undefined-private-character-set bytes column)))
X    (if lc
X	(progn
X	  (new-character-set lc bytes column type graphic final dir doc)
X	  lc))))
X;; end of patch
X
X;; 92.8.2 Y.Niibe add direction
X(defconst *predefined-character-set*
X  (list
X   ;; (cons lc '(bytes width type graphic final direction doc))
X   ;; (cons lc-ascii '(0 1 0 0 ?B 0 "ASCII")) ;; Predefined in C file
X   (cons lc-ltn1 '(1 1 1 1 ?A 0 "ISO8859-1 Latin-1"))
X   (cons lc-ltn2 '(1 1 1 1 ?B 0 "ISO8859-2 Latin-2"))
X   (cons lc-ltn3 '(1 1 1 1 ?C 0 "ISO8859-3 Latin-3"))
X   (cons lc-ltn4 '(1 1 1 1 ?D 0 "ISO8859-4 Latin-4"))
X   (cons lc-grk '(1 1 1 1 ?F 0 "ISO8859-7 Greek"))
X   (cons lc-arb '(1 1 1 1 ?G 1 "ISO8859-6 Arabic"))
X   (cons lc-hbw '(1 1 1 1 ?H 1 "ISO8859-8 Hebrew"))
X   (cons lc-kana '(1 1 0 1 ?I 0 "JIS X0201 Japanese Katakana"))
X   (cons lc-roman '(1 1 0 0 ?J 0 "JIS X0201 Japanese Roman"))
X   (cons lc-crl '(1 1 1 1 ?L 0 "ISO8859-5 Cyrillic"))
X   (cons lc-ltn5 '(1 1 1 1 ?M 0 "ISO8859-9 Latin-5"))
X   (cons lc-jpold '(2 2 2 0 ?@ 0 "JIS X0208-1976 Japanese Old"))
X   (cons lc-cn '(2 2 2 0 ?A 0 "GB 2312-1980 Chinese"))
X   (cons lc-jp '(2 2 2 0 ?B 0 "JIS X0208 Japanese"))
X   (cons lc-kr '(2 2 2 0 ?C 0 "KS C5601-1987 Korean"))
X   (cons lc-jp2 '(2 2 2 0 ?D 0 "JIS X0212 Japanese Supplement"))
X   (cons lc-cns1 '(2 2 2 0 ?G 0 "CNS 11643 Set 1"))
X   (cons lc-cns2 '(2 2 2 0 ?H 0 "CNS 11643 Set 2"))
X   (cons lc-big5-1 '(2 2 2 0 ?0 0 "Big5 Level 1"))
X   (cons lc-big5-2 '(2 2 2 0 ?1 0 "Big5 Level 2"))))
X
X(let ((c *predefined-character-set*)
X      lc data)
X  (while c
X    (setq lc (car (car c))
X	  data (cdr (car c)))
X    (apply 'new-character-set lc data)
X    (setq c (cdr c))))
X
X(defmacro define-category (mnemonic char doc)
X  "Make MNEMONIC as a new category mnemonic with description DOC,
X and modify category of CHAR so that it contains MNEMONIC.
XCHAR may be a list of 1-byte codes.
X	(define-category mnemonic char doc)
Xis equal to:
X	(progn
X	  (define-category-mnemonic mnemonic doc)
X	  (modify-category-entry char mnemonic))"
X  (list 'progn
X	(list 'define-category-mnemonic mnemonic doc)
X	(list 'modify-category-entry char mnemonic)))
X
X(defconst *predefined-category*
X  ;; 92.7.10 by K.Handa -- several definition changed.
X  (list (list lc-ltn1 ?l "Latin character.")
X	(list lc-ltn2 ?l "Latin character.")
X	(list lc-ltn3 ?l "Latin character.")
X	(list lc-ltn4 ?l "Latin character.")
X	(list lc-ltn5 ?l "Latin character.")
X	(list lc-grk ?g "Greek character.")
X	(list lc-arb ?b "Arabic character.")
X	(list lc-hbw ?w "Hebrew character.")
X	(list lc-kana ?k "Japanese 1-byte Katakana character.")
X	(list lc-roman ?r "Japanese 1-byte Roman character.")
X	(list lc-crl ?y "Cyrillic character.")
X	(list lc-cn ?c "Chinese 2-byte character.")
X	(list lc-jp ?j "Japanese 2-byte character.")
X	(list lc-kr ?h "Hungul 2-byte character.")
X	(list lc-big5-1 ?t "Big5 Level 1.")
X	(list lc-big5-2 ?t "Big5 Level 2.")
X	)
X  "List of predefined categories.
XEach element is a list of leading-character, mnemonic, and description")
X
X(let (i l)
X  (define-category-mnemonic ?a "Ascii character.")
X  (setq i ? )
X  (while (< i 127)
X    (modify-category-entry i ?a)
X    (setq i (1+ i)))
X  (setq l *predefined-category*)
X  (while l
X    (define-category-mnemonic (nth 1 (car l)) (nth 2 (car l)))
X    (modify-category-entry (car (car l)) (nth 1 (car l)))
X    (setq l (cdr l))))
X
X;;; At the present, I know Japanese and Chinese text can
X;;; break line at any point under a ristriction of 'kinsoku'.
X(defvar word-across-newline "\\(\\cj\\|\\cc\\)"
X  "Regular expression of such characters which can be a word across newline.")
X
X;; Coding-sytem staffs
X
X;; 92.12.18 by K.Handa
X;; Coding-system object is a symbol which has "coding-system" property.
X;; The value of the property is a vector of
X;; [TYPE MNEMONIC DOCUMENT EOLTYPE FLAGS].
X
X(defun get-code (code) (get code 'coding-system))
X(defun get-code-type (code) (aref (get-code code) 0))
X(defun get-code-mnemonic (code)
X  (cond ((null code) *nil-coding-system-mnemonic*)
X	((coding-system-p code) (aref (get-code code) 1))
X	(t ??)))
X(defun get-code-document (code) (aref (get-code code) 2))
X(defun get-code-flags (code) (aref (get-code code) 4))
X
X(defun make-coding-system (name type mnemonic doc &optional eol flags)
X  "Register symbol NAME as a coding-system of TYPE, MNEMONIC, DOC, EOL, FLAGS.
X TYPE is information for encoding or decoding.  If it is one of below,
X	nil: no conversion, t: automatic conversion,
X	0:Internal, 1:Shift-JIS, 2:ISO2022, 3:Big5.
X  the system provides appropriate code conversion facility.  If TYPE is 4, 
X  appropriate code conversion programs (CCL) should be supplied in FLAGS.
X MNEMONIC: a character to be displayed on mode-line for this coding-system,
X DOC: a describing documents for the coding-system,
X EOL (option): nil or 1:LF (e.g. unix), 2:CRLF (e.g. DOS), 3:CR (e.g. Mac),
X FLAGS (option): more precise information about the coding-system,
XIf TYPE is 2 (ISO2022), FLAGS should be a list of:
X LC-G0, LC-G1, LC-G2, LC-G3:
X	Leading character of charset initially designated to G? graphic set,
X	nil means G? is not designated initially,
X	lc-invalid means G? can never be designated to,
X	if (- leading-char) is specified, it is designated on output,
X SHORT: non-nil - allow such as \"ESC $ B\", nil - always \"ESC $ \( B\",
X ASCII-EOL: non-nil - designate ASCII to g0 at each end of line on output,
X ASCII-CNTL: non-nil - designate ASCII to g0 before TAB and SPACE on output.
X SEVEN: non-nil - use 7-bit environment on output.
X LOCK-SHIFT: non-nil - use locking-shift (SO/SI) instead of single-shift
X	or designation by escape sequence.
X USE-ROMAN: non-nil - designate JIS0201-1976-Roman instead of ASCII.
X USE-OLDJIS: non-nil - designate JIS0208-1976 instead of JIS0208-1983.
XIf TYPE is 3 (Big5), FLAGS T means Big5-ETen, NIL means Big5-HKU.
XIf TYPE is 4 (private), FLAGS should be a cons of CCL programs
X for encoding and decoding.  See documentation of CCL for more detail."
X  (set name name)
X  (put name 'variable-documentation doc)
X  (let ((code (make-vector 5 nil)))
X    (aset code 0 type)
X    (aset code 1 (if (and (> mnemonic ? ) (< mnemonic 127)) mnemonic ? ))
X    (aset code 2 (if (stringp doc) doc ""))
X    (aset code 3 eol)
X    (cond ((eq type 2)
X	   (let ((i 0)
X		 (vec (make-vector 32 nil)))
X	     (while (and (< i 32) flags)
X	       (aset vec i (car flags))
X	       (setq flags (cdr flags) i (1+ i)))
X	     (aset code 4 vec)))
X	  ((eq type 4)
X	   (if (and (consp flags)
X		    (stringp (car flags))
X		    (stringp (cdr flags)))
X	       (aset code 4 flags)
X	     (error "Invalid FLAGS argument for TYPE 4 (private)")))
X	  (t (aset code 4 flags)))
X    (put name 'coding-system code)))
X
X(defun set-file-coding-system (coding-system)
X  (interactive "zFile-coding-system: ")
X  (check-coding-system coding-system)
X  (setq file-coding-system coding-system)
X  (update-mode-lines))
X
X(defun set-display-coding-system (coding-system)
X  (interactive "zDisplay-coding-system: ")
X  (check-coding-system coding-system)
X  (setq display-coding-system coding-system)
X  (update-mode-lines)
X  (if (interactive-p) (redraw-display))) ;; 92.5.28 by T. Maebashi
X
X(defun set-keyboard-coding-system (coding-system)
X  (interactive "zKeyboard-coding-system: ")
X  (check-coding-system coding-system)
X  (setq keyboard-coding-system coding-system)
X  (update-mode-lines))
X
X(defun set-current-process-coding-system (input output)
X  (interactive
X   "zCoding-system for process input: \nzCoding-system for process output: ")
X  (let ((proc (get-buffer-process (current-buffer))))
X    (if (not proc)
X	(error "no process")
X      (check-coding-system input)
X      (check-coding-system output)
X      (set-process-coding-system proc input output)))
X  (update-mode-lines))
X
X(defun set-file-coding-system-for-read (coding-system)
X  (interactive "zFile-coding-system-for-read: ")
X  (check-coding-system coding-system)
X  (setq file-coding-system-for-read coding-system))
X
X;; Definitions of predefined coding-systems
X
X(make-coding-system
X '*noconv* nil
X ?= "No conversion.")
X
X(make-coding-system
X '*autoconv* t
X ?+ "Automatic conversion.")
X
X(make-coding-system
X '*internal* 0
X ?= "Internal coding-system used in an Mule buffer.")
X
X(make-coding-system
X '*sjis* 1
X ?S "Coding-system of Shift-JIS used in Japan.")
X
X(make-coding-system
X '*sjis-dos* 1
X ?s "Coding-system of Shift-JIS with CRLF at eol."
X 2)
X
X(make-coding-system
X '*junet* 2
X ?J "Coding-system used for communication with mail and news in Japan."
X nil
X (list lc-ascii lc-invalid lc-invalid lc-invalid
X       'short 'ascii-eol 'ascii-cntl 'seven))
X
X(make-coding-system
X '*oldjis* 2
X ?J "Coding-system used for old jis terminal."
X nil
X (list lc-ascii lc-invalid lc-invalid lc-invalid
X       'short 'ascii-eol 'ascii-cntl 'seven nil 'use-roman 'use-oldjis))
X
X(make-coding-system
X '*ctext* 2
X ?X "Coding-system used in X as Compound Text Encoding."
X nil
X (list lc-ascii lc-ltn1 lc-invalid lc-invalid
X       nil 'ascii-eol))
X
X(make-coding-system
X '*euc-japan* 2
X ?E "Coding-system of Japanese EUC (Extended Unix Code)."
X nil
X (list lc-ascii lc-jp lc-kana lc-jp2
X       'short 'ascii-eol 'ascii-cntl))
X
X(make-coding-system
X '*euc-korea* 2
X ?K "Coding-system of Korean EUC (Extended Unix Code)."
X nil
X (list lc-ascii lc-kr lc-invalid lc-invalid
X       nil 'ascii-eol 'ascii-cntl))
X
X(make-coding-system
X '*iso-2022-kr* 2
X ?k "Coding-System used for communication with mail in Korea."
X nil
X (list lc-ascii (- lc-kr) lc-invalid lc-invalid
X       nil 'ascii-eol 'ascii-cntl 'seven 'lock-shift))
X(setq *korean-mail* '*korean-mail*)
X(put '*korean-mail* 'coding-system (get '*iso-2022-kr* 'coding-system))
X
X(make-coding-system
X '*euc-china* 2
X ?C "Coding-system of Chinese EUC (Extended Unix Code)."
X nil
X (list lc-ascii lc-cn lc-invalid lc-invalid
X       nil 'ascii-eol 'ascii-cntl))
X
X(make-coding-system
X '*iso-2022-ss2-8* 2
X ?I "ISO-2022 coding system using SS2 for 96-charset in 8-bit code."
X nil
X (list lc-ascii lc-invalid nil lc-invalid
X       nil 'ascii-eol 'ascii-cntl))
X
X(make-coding-system
X '*iso-2022-ss2-7* 2
X ?I "ISO-2022 coding system using SS2 for 96-charset in 7-bit code."
X nil
X (list lc-ascii lc-invalid nil lc-invalid
X       nil 'ascii-eol 'ascii-cntl 'seven))
X
X(make-coding-system
X '*iso-2022-lock* 2
X ?i "ISO-2022 coding system using Locking-Shift for 96-charset."
X nil
X (list lc-ascii nil lc-invalid lc-invalid
X       nil 'ascii-eol 'ascii-cntl 'seven))
X
X(make-coding-system
X '*big5-eten* 3
X ?B "Coding-system of BIG5-ETen."
X nil t)
X
X(make-coding-system
X '*big5-hku* 3
X ?B "Coding-system of BIG5-HKU."
X nil nil)
X
X(make-coding-system
X '*big5-eten-dos* 3
X ?b "Coding-system of BIG5-ETen with CRLF at eol."
X 2 t)
X
X(make-coding-system
X '*big5-hku-dos* 3
X ?b "Coding-system of BIG5-HKU with CRLF at eol."
X 2 nil)
X
X(setq *internal-code-category* *internal*
X      *sjis-code-category* *sjis*
X      *junet-code-category* *junet*
X      *euc-code-category* *euc-japan*
X      *ctext-code-category* *ctext*
X      *big5-code-category* *big5-hku*
X      *private-code-category* *noconv*)
X
X(defvar default-process-coding-system (cons *autoconv* nil)
X  "Cons of default values used to receive from and send to process.")
X
X(defvar file-coding-system-for-read *autoconv*
X  "Coding-system used for reading a file.")
X
X;; Initial priority list for detecting category of coding-system is:
X;;   ISO2022 (EUC), ISO2022 (JUNET), ISO2022 (CTEXT), INTERNAL, Shift-JIS,
X;;   Big5, or PRIVATE.
X;; 92.4.3 by K.Handa
X(setq code-priority
X      '(*junet-code-category* *euc-code-category* *ctext-code-category*
X	*internal-code-category* *sjis-code-category* *big5-code-category*
X	*private-code-category*))
X
X;;; file
X
X(defun local-file-coding-system-p ()
X  "Return t if file-coding-system is set locally in the current buffer."
X  (let ((coding-system (default-value 'file-coding-system)))
X    (setq-default file-coding-system 'temp-value)
X    (prog1 (not (eq (default-value 'file-coding-system) file-coding-system))
X      (setq-default file-coding-system coding-system))))
X
X(defvar insert-file-contents-access-hook nil
X  "A hook function to make the file accessible before inserting file.")
X
X(defvar insert-file-contents-pre-hook nil
X  "A hook function to decide coding-system used for reading.
X
XBefore reading the file, the function insert-file-contents evaluates
Xthe hook with arguments FILENAME and VISIT [same as those given to
Xinsert-file-contents].  In this functions, you may refer to the global
Xvariable file-coding-system-for-read (See documentation).
X
XThe return value of this function should be a coding-system (*not* one
Xof the symbols *euc-japan*, ...) used for reading the file or a list.
XIf the return value is a list, insert-file-contents assumes that the
Xfunction has inserted the file for itself and supresses further
Xreading and just returns this list.  The elements of list should be
Xabosolute pathname and length of data inserted.")
X
X(defvar insert-file-contents-error-hook nil
X  "A hook function to set file-coding-system of the current buffer.
X
XOn file-error while reading, insert-file-contents calls it with arguments
X FILENAME, VISIT [same as those given to insert-file-contents],
X and a cons (SIGNALED-CONDITIONS . SIGNAL-DATA).
XUsually this is the case of the file not existing.
XThe error condition propagets to the caller of insert-file-contents.")
X
X(defvar insert-file-contents-post-hook nil
X  "A hook function to set file-coding-system of the current buffer.
X
XAfter successful reading, insert-file-contents calls it with arguments
X FILENAME, VISIT [same as those given to insert-file-contents],
X and RETURN-VALUE of si:insert-file-contents, which is a list of:
X coding-system used for reading, absoule pathname, length of data inserted.")
X
X;; 93.3.15 by K.Handa -- add optional third arg CODING-SYSTEM
X(defun insert-file-contents (filename &optional visit coding-system)
X  "Insert contents of file FILENAME after point.
XReturns list of absolute pathname and length of data inserted.
XIf second argument VISIT is non-nil, the buffer's visited filename
Xand last save file modtime are set, and it is marked unmodified.
XIf visiting and the file does not exist, visiting is completed
Xbefore the error is signaled.
XOptional third argument CODING-SYSTEM specify the coding-system for reading,
X and defaults to the value of file-coding-system-for-read.
XIf current buffer's file-coding-system is nil,
X it is set to the coding-system which is actually used for reading.
XSee also insert-file-contents-pre-hook, insert-file-contents-error-hook,
X insert-file-contents-post-hook, and si:insert-file-contents."
X  (let (return-val)
X    (condition-case err
X	(progn
X	  (if insert-file-contents-access-hook
X	      (funcall insert-file-contents-access-hook filename visit))
X	  (setq coding-system
X		(cond (insert-file-contents-pre-hook
X		       (funcall insert-file-contents-pre-hook filename visit))
X		      (coding-system coding-system)
X		      (t file-coding-system-for-read)))
X	  (if (consp coding-system) nil
X	    (if (not (coding-system-p coding-system))
X		(progn
X		  (message "Invalid coding-system (%s), use *noconv* instead.")
X		  (setq coding-system *noconv*)))
X	    (setq return-val
X		  (si:insert-file-contents filename visit coding-system))))
X      (file-error
X       (if insert-file-contents-error-hook
X	   ;; 93.3.9 by T.Enami
X	   (funcall insert-file-contents-error-hook filename visit err))
X       (signal (car err) (cdr err))))
X    (if (consp coding-system)
X	coding-system
X      (if insert-file-contents-post-hook
X	  ;; 93.3.9 by T.Enami
X	  (funcall insert-file-contents-post-hook filename visit return-val)
X	(if (get (car return-val) 'post-read-conversion)
X	    (unwind-protect
X		(save-excursion
X		  (funcall (get (car return-val) 'post-read-conversion)
X			   (point) (+ (point) (nth 2 return-val))))
X	      (if visit
X		  (progn
X		    (set-buffer-auto-saved)
X		    (set-buffer-modified-p nil)))))
X	(if (and (car return-val)
X		 (not (and file-coding-system
X			   (local-file-coding-system-p))))
X	    (set-file-coding-system (car return-val))))
X      (cdr return-val))))
X
X(defvar write-region-pre-hook nil
X  "A hook function to decide coding system used for writing to file.
X
XBefore writing, write-region calls it with arguments
X START, END, FILENAME, APPEND, VISIT and CODING-SYSTEM [same as those
X given to write-region].
XThe return value of this function should be a coding-system or a list.
X If list, write-region supresses further writing.  The elements of list
X should be a return value of write-region (i.e. list of an abosolute pathname
X and length of data written).")
X
X(defvar write-region-post-hook nil
X  "A hook function called from write-region after writing.
X
XCalled with arguments START, END, FILENAME, APPEND, VISIT,
X and CODING-SYSTEM [same as those given to write-region]")
X
X(defun write-region (start end filename &optional append visit coding-system)
X  "Write current region into specified file.
XWhen called from a program, takes three arguments:
XSTART, END and FILENAME.  START and END are buffer positions.
XOptional fourth argument APPEND if non-nil means
X  append to existing file contents (if any).
XOptional fifth argument VISIT if t means
X  set last-save-file-modtime of buffer to this file's modtime
X  and mark buffer not modified.
XIf VISIT is neither t nor nil, it means do not print
X  the \"Wrote file\" message.
XOptional sixth argument CODING-SYSTEM specify the coding-system for writing,
X and defaults to file-coding-system of the current buffer.
XIf called interactively with prefix arg, user is asked conding-system.
XSee also write-region-pre-hook, write-region-post-hook,
X and si:write-region."
X  (interactive "r\nFWrite region to file: \ni\ni\nZCoding-system: ")
X  (setq coding-system
X	(cond (write-region-pre-hook
X	       (funcall write-region-pre-hook
X			start end filename append visit coding-system))
X	      (coding-system coding-system)
X	      (t file-coding-system)))
X  (if (consp coding-system)
X      coding-system
X    (if (get coding-system 'pre-write-conversion)
X	(let ((curbuf (current-buffer))
X	      (tempbuf (get-buffer-create " *temp-write-buffer*"))
X	      (modif (buffer-modified-p)))
X	  (unwind-protect
X	      (save-excursion
X		(set-buffer tempbuf)
X		(erase-buffer)
X		(insert-buffer-substring curbuf start end)
X		(funcall (get coding-system 'pre-write-conversion)
X			 (point-min) (point-max))
X		(si:write-region (point-min) (point-max) filename append visit
X				 coding-system))
X	    ;; 93.6.15 by T.Enami
X	    ;; leaving a buffer associated with file cause problem
X	    ;; when next visiting.
X	    (kill-buffer tempbuf)
X	    (if (or visit (null modif))
X		(progn
X		  (set-buffer-auto-saved)
X		  (set-buffer-modified-p nil)))))
X      (si:write-region start end filename append visit coding-system))
X    ;; (set-file-coding-system coding-system) ;92.11.19 by T.Enami
X    (if write-region-post-hook
X	(funcall write-region-post-hook
X		 start end filename append visit coding-system))))
X
X;;; process
X
X;; 92.4.28 by K.Handa and T.Enami
X;; This hook should return cons normally.  And, arguments changed.
X(defvar call-process-hook nil
X  "A hook function to decide coding-systems for calling programs.
XBefore calling programs, call-process and call-process-region call
X this function with arguments PROGRAM, BUFFER, START, END and ARGS,
X where START and END are nil when called from call-process.
XThe return value of this function should be a cons of coding-systems
X for input and output of the program.  The input coding-system
X is also used for converting ARGS.
X If the value is not cons object, further calling is supressed.")
X
X(defun call-process (program &optional infile buffer display &rest args)
X  "Call PROGRAM in separate process.
XProgram's input comes from file INFILE (nil means /dev/null).
XInsert output in BUFFER before point; t means current buffer;
X nil for BUFFER means discard it; 0 means discard and don't wait.
XFourth arg DISPLAY non-nil means redisplay buffer as output is inserted.
XRemaining arguments are strings passed as command arguments to PROGRAM.
XThis function waits for PROGRAM to terminate;
Xif you quit, the process is killed.
XThe coding-system used for converting ARGS and receiving the output
X of PROGRAM default to car and cdr of default-process-coding-system,
X but can be changed by call-process-hook.
XSee also call-process-hook and si:call-process."
X  (let ((coding-systems
X	 (if call-process-hook
X	     (apply call-process-hook program buffer nil nil args)
X	   default-process-coding-system)))
X    (if (consp coding-systems)
X	(apply 'si:call-process
X	       program infile buffer display (car coding-systems)
X	       (mapcar (function (lambda (arg)
X				   (or (code-convert-string ;92.9.18 by K.Handa
X					arg *internal*
X					(cdr coding-systems))
X				       arg)))
X		       args)))))
X
X;; 92.4.28 by K.Handa
X;; call-process-region-hook is deleted.
X;; call-process-region now calls call-process-hook.
X
X;; 92.7.15 by K.Handa - document modified. 93.6.1 by K.Handa -- for 18.59
X(defun call-process-region (start end program
X				  &optional delete buffer &rest args)
X  "Send text from START to END to a process running PROGRAM.
XDelete the text if DELETE is non-nil.
XInsert output in BUFFER before point; t means current buffer;
X nil for BUFFER means discard it; 0 means discard and don't wait.
XSixth arg DISPLAY non-nil means redisplay buffer as output is inserted.
XRemaining args are passed to PROGRAM at startup as command args.
XReturns nil if BUFFER is 0; otherwise waits for PROGRAM to terminate
Xand returns a numeric exit status or a signal description string.
XIf you quit, the process is killed with SIGKILL.
XThe coding-system used for receiving from the PROGRAM defaults to
X car of default-process-coding-system.
XThe coding-system used for sending the region to the PROGRAM and converting
X ARGS default to cdr of default-process-coding-system.
XBut these can be changed by call-process-hook.
XSee also call-process-hook and call-process."
X  (let ((temp (if (eq system-type 'ms-dos)
X		  (let ((tem (or (getenv "TMP") (getenv "TEMP") "/")))
X		    (concat (and (eq (aref tem (1- (length tem))) ?/) "/")
X			    "demacs."))
X		(make-temp-name "/tmp/emacs")))
X	(coding-systems (if call-process-hook
X			    (apply call-process-hook
X				   program buffer start end args)
X			  default-process-coding-system))
X	status)
X    (if (consp coding-systems)
X	(unwind-protect
X	    (let ((call-process-hook nil)
X		  (default-process-coding-system coding-systems))
X	      (write-region start end temp nil 'nomessage (cdr coding-systems))
X	      (if delete (delete-region start end))
X	      (setq status (apply 'call-process program temp buffer args)))
X	  (delete-file temp)))
X    status))
X
X(defvar start-process-hook nil
X  "A hook function to decide coding-systems of process input and output.
XBefore starting process, start-process calls it with arguments
X NAME, BUFFER, PROGRAM, and ARGS [same as those given to start-process].
XThe return value of this function should be a cons of coding-systems
X used while sending and receiving to/from the started process.")
X
X(defun start-process (name buf program &rest args)
X  "Start a program in a subprocess.  Return the process object for it.
XArgs are NAME BUFFER PROGRAM &rest PROGRAM-ARGS.
XNAME is name for process.  It is modified if necessary to make it unique.
XBUFFER is the buffer or (buffer-name) to associate with the process.
X Process output goes at end of that buffer, unless you specify
X an output stream or filter function to handle the output.
X BUFFER may be also nil, meaning that this process is not associated
X with any buffer.
XThird arg is program file name.  It is searched for as in the shell.
XRemaining arguments are strings to give program as arguments.
XThe coding-system used for sending and receiving to/from the process are
X the value of default-process-coding-system, but can be changed by
X start-process-hook.
XSee also start-process-hook and si:start-process."
X  (let ((coding-systems
X	 (if start-process-hook
X	     (apply start-process-hook name buf program args)
X	   default-process-coding-system)))
X    (apply 'si:start-process name buf
X	   (car coding-systems) (cdr coding-systems) program args)))
X
X(defvar open-network-stream-hook nil
X  "A hook function to decide coding-systems of input and output for service.
XBefore starting service, open-network-stream calls this function with arguments
X NAME, BUFFER, PROGRAM, and ARGS [same as those given to open-network-stream].
XThe return value of this function should be a cons of coding-systems
X used while sending and receiving to/from the network service.")
X
X(defun open-network-stream (name buf host service)
X  "Open a TCP connection for a service to a host.
XReturns a subprocess-object to represent the connection.
XInput and output work as for subprocesses; `delete-process' closes it.
XArgs are NAME BUFFER HOST SERVICE.
XNAME is name for process.  It is modified if necessary to make it unique.
XBUFFER is the buffer (or buffer-name) to associate with the process.
X Process output goes at end of that buffer, unless you specify
X an output stream or filter function to handle the output.
X BUFFER may be also nil, meaning that this process is not associated
X with any buffer
XThird arg is name of the host to connect to.
XFourth arg SERVICE is name of the service desired, or an integer
X specifying a port number to connect to.
XThe coding system used for sending and receiving to/from the SERVICE are
X the value of default-process-coding-system, but can be changed by
X open-network-stream-hook.
XSee also open-network-stream-hook and si:open-network-stream."
X  (let ((coding-systems
X	 (if open-network-stream-hook
X	     (funcall open-network-stream-hook name buf host service)
X	   default-process-coding-system)))
X    (si:open-network-stream name buf host service
X			    (car coding-systems) (cdr coding-systems))))
END_OF_FILE
  if test 39271 -ne `wc -c <'mule/mule.el-patched'`; then
    echo shar: \"'mule/mule.el-patched'\" unpacked with wrong size!
  fi
  # end of 'mule/mule.el-patched'
fi
if test -f 'vol/386bsd-ports.vol' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'vol/386bsd-ports.vol'\"
else
  echo shar: Extracting \"'vol/386bsd-ports.vol'\" \(555 characters\)
  sed "s/^X//" >'vol/386bsd-ports.vol' <<'END_OF_FILE'
X# created by demizu@nff.ncl.omron.co.jp  on Aug 27, 1993
Xftp-server:		ftp.kuis.kyoto-u.ac.jp
Xftp-directory:		BSD/0.1-ports
Xftp-server:		ftp.iij.ad.jp
Xftp-directory:		pub/386bsd/0.1-ports
Xftp-server:		ftp.cs.titech.ac.jp
Xftp-directory:		pub/os/386BSD/0.1-ports
Xftp-server:		bash.cc.keio.ac.jp
Xftp-directory:		pub/mirror/0.1-ports
X
Xftp-server:		ftp.iastate.edu
Xftp-directory:		pub/386/0.1-ports
Xftp-server:		ftp.germany.eu.net
Xftp-directory:		pub/comp/i386/386BSD-0.1-ports
X
Xdescription:		software ported into 386BSD
X#category-youki:	os/bsd
X
Xvolume-id: 139
END_OF_FILE
  if test 555 -ne `wc -c <'vol/386bsd-ports.vol'`; then
    echo shar: \"'vol/386bsd-ports.vol'\" unpacked with wrong size!
  fi
  # end of 'vol/386bsd-ports.vol'
fi
echo shar: End of archive 9 \(of 22\).
cp /dev/null ark9isdone
MISSING=""
for I in 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 ; do
    if test ! -f ark${I}isdone ; then
	MISSING="${MISSING} ${I}"
    fi
done
if test "${MISSING}" = "" ; then
    echo You have unpacked all 22 archives.
    rm -f ark[1-9]isdone ark[1-9][0-9]isdone
else
    echo You still must unpack the following archives:
    echo "        " ${MISSING}
fi
exit 0
exit 0 # Just in case...
