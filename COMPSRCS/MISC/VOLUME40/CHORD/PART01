Newsgroups: comp.sources.misc
From: martin@canada.sun.com (Martin Leclerc - Sun Montreal SE)
Subject: v40i084:  chord - self-descriptive music sheet from text files, Part01/05
Message-ID: <csm-v40i084=chord.111434@sparky.Sterling.COM>
X-Md4-Signature: 479e799a3d7d540ea39fc00877a75e88
Sender: kent@sparky.sterling.com (Kent Landfield)
Reply-To: Martin.Leclerc@Sun.COM
Organization: Sun Microsystems du Canada
Date: Sat, 6 Nov 1993 17:15:02 GMT
Approved: kent@sparky.sterling.com

Submitted-by: martin@canada.sun.com (Martin Leclerc - Sun Montreal SE)
Posting-number: Volume 40, Issue 84
Archive-name: chord/part01
Environment: UNIX, DOS, VMS, Amiga

Chord's purpose is to provide guitar players with a tool to produce 
good looking, self-descriptive music sheet from a text file.

CHORD reads a text file containing the lyrics of a song, the chords to
be played, their description and some other optional data to produce a
PostScript document that includes:

	Centered titles
	Chord names above the words
	Graphical representation of the chords at the end of the songs

CHORD also provides support for 

	Multiple logical pages per physical pages ( 1, 2 or 4)
	Configurable fonts for the lyrics and the chord names
	Multiple songs inside one file
	The complete ISO 8859-1 character set
and
	Chorus marking

NEW IN VERSION 3.5

o Generation of PostScript indexes.
o Generation of PostScript chord-charts.
o Additional 'comments' style (box and italic).
o Directive to set a monospace font (ie: not-proportional) suitable for
  tabs.
o Support for A4 paper format.
o Page numbers are now "physical page numbers".
o Chord-charts (-dump option) now include chords from .chordrc file.
o Option to print/not-print page numbers.
o Option to print/not-print chord grids.
o Option to print grids only for "difficult" chords.
o Directive to force a physical page break.
o Directive to force a virtual page break.
o Chords are printed in a logical order.
o Special chord [N.C.] (no-chord) without a chord grid.
o New (and improved!) {define} syntax.
o Chord names and directives are case-insensitive.
o Public domain getopt() routine (for portability).
o (almost) lint free (better portability)
o Ansi-C compliant
o ... and bug fixes

CHORD has been developped on SPARCStations running Solaris 2.2 and
OpenWindows 3.2. The PostScript previewer (PageView), SparcPrinters and
LaserWriter II have had no problem with the output. Please report any
changes your system requires.

CHORD is is licensed following the conditions of the general GNU license. 
You are authorized to use this program free of charge. You are authorized 
to distribute this program freely as long as the full source is included. 
You are not allowed to remove the `copyright' notices from the authors nor 
are you allowed to pretend you wrote it. You are not allowed to charge any 
money for CHORD. You are not allowed to distribute a modified version of 
CHORD without written authorizations from the authors. You are not allowed 
to use parts of CHORD in any other commercial or public-domain software. 
Sorry for all the negatives rules ... but we've been bitten once!

Martin Leclerc (Martin.Leclerc@canada.sun.com)
Mario Dorion   (Mario.Dorion@canada.sun.com)	
-------------
#! /bin/sh
# This is a shell archive.  Remove anything before this line, then feed it
# into a shell via "sh file" or similar.  To overwrite existing files,
# type "sh file -c".
# Contents:  README chord_guide.ps.B songs
# Wrapped by kent@sparky on Tue Nov  2 17:49:45 1993
PATH=/bin:/usr/bin:/usr/ucb:/usr/local/bin:/usr/lbin:$PATH ; export PATH
echo If this archive is complete, you will see the following message:
echo '          "shar: End of archive 1 (of 5)."'
if test -f 'README' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'README'\"
else
  echo shar: Extracting \"'README'\" \(5107 characters\)
  sed "s/^X//" >'README' <<'END_OF_FILE'
XThis is a description of a Share-Ware utility called CHORD.
X
XIt's purpose is to provide guitar players with a tool to produce good
Xlooking, self-descriptive music sheet from a text file.
X
XCHORD read a text file containing the lyrics of a song, the chords to
Xbe played, their description and some other optional data to produce a
XPostScript document that includes:
X
X	Centered titles
X	Chord names above the words
X	Graphical representation of the chords at the end of the songs
X
XCHORD also provides support for 
X
X	Multiple logical pages per physical pages ( 1, 2 or 4)
X	Configurable fonts for the lyrics and the chord names
X	Multiple songs inside one file
X	The complete ISO 8859-1 character set
Xand
X	Chorus marking
X
XNEW IN VERSION 3.5
X
Xo Generation of PostScript indexes.
Xo Generation of PostScript chord-charts.
Xo Additional 'comments' style (box and italic).
Xo Directive to set a monospace font (ie: not-proportional) suitable for
X  tabs.
Xo Support for A4 paper format.
Xo Page numbers are now "physical page numbers".
Xo Chord-charts (-dump option) now include chords from .chordrc file.
Xo Option to print/not-print page numbers.
Xo Option to print/not-print chord grids.
Xo Option to print grids only for "difficult" chords.
Xo Directive to force a physical page break.
Xo Directive to force a virtual page break.
Xo Chords are printed in a logical order.
Xo Special chord [N.C.] (no-chord) without a chord grid.
Xo New (and improved!) {define} syntax.
Xo Chord names and directives are case-insensitive.
Xo Public domain getopt() routine (for portability).
Xo (almost) lint free (better portability)
Xo Ansi-C compliant
Xo ... and bug fixes
X
XNEW IN VERSION 1.2
X
Xo More flexible Page Numbering
X  o Left/right
X  o always-present
X  o an option for simgle spacing on lines with no chords
Xo Distinction between an unplayed string and a buffed one
Xo TOC generation
Xo Some bug fixes
X
XNEW IN VERSION 1.1
X
Xo CHORD supports transposition. See the man page.
Xo miscellanious bug fixes, including dubious coding that kept IBM and
X  SGI from executing CHORD properly
Xo the grids now indicate string played open
Xo Error messages noe correctly report the name of the file and
X  the line number where the error was found
X
X===== PLATFORM =====
X
XCHORD has been developped on SPARCStations running Solaris 2.2 and
XOpenWindows 3.2. The PostScript previewer (PageView), SparcPrinters and
XLaserWriter II have had no problem with the output. Please report any
Xchanges your system requires.
X
X===== CREDITS =====
X
XCHORD has been developped and is still being maintained by Martin
XLeclerc and Mario Dorion. 
X
XCHORD uses the GNU getopt() routine made available to the community by
Xthe Free Software Foundation.
X
XWe would like to thanks the following individuals:
X
XSteve Putz, who has kindly contributed a number of suggestions, bug
Xfixes and enhancements(?).
X
XJim Gerland (GERLAND@ubvms.cc.buffalo.edu), who has performed the initial
XVMS port.
X
XLeo Bicknell (ab147@freenet.acsu.buffalo.edu) has provided the chord sorting
Xroutine.
X
XAdditional thanks to Fred handloser (and his pal Duncan) and many
Xothers for providing many suggestions of features that were implemented
Xin CHORD 3.5.
X
X
X===== COMPILING =====
X
XCHORD is written in fairly portable C and should work on most UNIX
Xsystems with little or no change. Let us know of your problems.
X
XSimply edit the Makefile to meet your environment and 'make'.
X
XNote: If your environment does not offer a getopt() routine edit the
XMakefile to de-comment the lines (INCL, SRC and OBJ) that mention the
Xincluded getopt routine ... We reccomend using your system's getopt()
Xif it is available.
X
X
X===== ARCHIVES =====
X
XJames B. from the University of Nevada (nevada.edu) has
Xgraciously open the doors of their ftp site for archiving
Xsongs in CHORD format. Look for files with the '.chordpro' 
Xor '.chopro' extension.
X
X===== COPYRIGHT =====
X
XCHORD is a Share-Ware that is licensed following the conditions of the
Xgeneral GNU license. You are authorized to use this program free of
Xcharge. You are authorized to distribute this program freely as long as
Xthe full source is included. You are not allowed to remove the
X`copyright' notices from the authors nor are you allowed to pretend you
Xwrote it. You are not allowed to charge any money for CHORD. You are
Xnot allowed to distribute a modified version of CHORD without written
Xauthorizations from the authors. You are not allowed to use parts of
XCHORD in any other commercial or public-domain software. Sorry for all
Xthe negatives rules ... but we've been bitten once!
X
X
X
XAs we said, CHORD is a Share-Ware. The authors spent a great deal of
Xtime making it as feature-full and usable as possible. If you like this
Xprogram, please take the time to send a postcard from your home town or
Xlocality to each of the two authors and let them know what you think of
XCHORD. Please send the cards to the following addresses:
X
X	Martin Leclerc		Mario Dorion
X	19 Browning		18 Georgia Crescent
X	Dollard des Ormeaux	Pointe Claire
X	Quebec, H9G 2K5		Quebec, H9R 5V7
X	CANADA			CANADA
X
X
XMartin Leclerc (Martin.Leclerc@canada.sun.com)
XMario Dorion   (Mario.Dorion@canada.sun.com)	
END_OF_FILE
  if test 5107 -ne `wc -c <'README'`; then
    echo shar: \"'README'\" unpacked with wrong size!
  fi
  # end of 'README'
fi
if test -f 'chord_guide.ps.B' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'chord_guide.ps.B'\"
else
  echo shar: Extracting \"'chord_guide.ps.B'\" \(50938 characters\)
  sed "s/^X//" >'chord_guide.ps.B' <<'END_OF_FILE'
X() stringwidth  pop 72 add 
Xdup minhpos lt
X     {pop minhpos} if
Xdup /minhpos exch (G) stringwidth pop add def
X276 moveto
XCHORD_FONT setfont
X(G) show
XTEXT_FONT setfont
X(Everybody ) stringwidth  pop 72 add 
Xdup minhpos lt
X     {pop minhpos} if
Xdup /minhpos exch (D) stringwidth pop add def
X276 moveto
XCHORD_FONT setfont
X(D) show
XTEXT_FONT setfont
X(Everybody hurts ) stringwidth  pop 72 add 
Xdup minhpos lt
X     {pop minhpos} if
Xdup /minhpos exch (G) stringwidth pop add def
X276 moveto
XCHORD_FONT setfont
X(G) show
XTEXT_FONT setfont
X(Everybody hurts      ) stringwidth  pop 72 add 
Xdup minhpos lt
X     {pop minhpos} if
Xdup /minhpos exch (D) stringwidth pop add def
X276 moveto
XCHORD_FONT setfont
X(D) show
XTEXT_FONT setfont
X(Everybody hurts           ) stringwidth  pop 72 add 
Xdup minhpos lt
X     {pop minhpos} if
Xdup /minhpos exch (G) stringwidth pop add def
X276 moveto
XCHORD_FONT setfont
X(G) show
XTEXT_FONT setfont
X72 265 moveto
X(Everybody hurts           ) show
X/minhpos 0 def
XTEXT_FONT setfont
X() stringwidth  pop 72 add 
Xdup minhpos lt
X     {pop minhpos} if
Xdup /minhpos exch (D) stringwidth pop add def
X255 moveto
XCHORD_FONT setfont
X(D) show
XTEXT_FONT setfont
X(You are not alone ) stringwidth  pop 72 add 
Xdup minhpos lt
X     {pop minhpos} if
Xdup /minhpos exch (G) stringwidth pop add def
X255 moveto
XCHORD_FONT setfont
X(G) show
XTEXT_FONT setfont
X(You are not alone      ) stringwidth  pop 72 add 
Xdup minhpos lt
X     {pop minhpos} if
Xdup /minhpos exch (D) stringwidth pop add def
X255 moveto
XCHORD_FONT setfont
X(D) show
XTEXT_FONT setfont
X(You are not alone           ) stringwidth  pop 72 add 
Xdup minhpos lt
X     {pop minhpos} if
Xdup /minhpos exch (G) stringwidth pop add def
X255 moveto
XCHORD_FONT setfont
X(G) show
XTEXT_FONT setfont
X(You are not alone                ) stringwidth  pop 72 add 
Xdup minhpos lt
X     {pop minhpos} if
Xdup /minhpos exch (D) stringwidth pop add def
X255 moveto
XCHORD_FONT setfont
X(D) show
XTEXT_FONT setfont
X(You are not alone                     ) stringwidth  pop 72 add 
Xdup minhpos lt
X     {pop minhpos} if
Xdup /minhpos exch (G) stringwidth pop add def
X255 moveto
XCHORD_FONT setfont
X(G) show
XTEXT_FONT setfont
X72 244 moveto
X(You are not alone                     ) show
X/minhpos 0 def
X480 234 moveto
X72 174 moveto
X(A) -1 0 2 2 2 0 1 0 dots
X132 174 moveto
X(C) -1 3 2 0 1 0 1 0 dots
X192 174 moveto
X(D) -1 -1 0 2 3 2 1 0 dots
X252 174 moveto
X(D4) -1 -1 0 0 3 -1 1 2 dots
X312 174 moveto
X(E) -1 3 3 2 0 0 1 2 dots
X372 174 moveto
X(G) 3 2 0 0 3 3 1 2 dots
X1  setlinewidth
X0  setgray
Xnewpath
X72 36 10 sub moveto
X468 0 rlineto
Xstroke
Xpgsave restore
Xshowpage
X%%EndPage: "1" 1
X%%Trailer
X%%Pages: 1 1
X%%EOF
X
X%%EndDocument
XFMENDEPSF
XFMENDPAGE
X%%EndPage: "9" 9
X%%Page: "8" 9
X612 792 0 FMBEGINPAGE
X0 12 Q
X0 X
X0 K
X(Version 3.5) 72 748 T
X(-8-) 298.67 748 T
X(The Chord User Guide) 412.71 748 T
X72 63 540 63 2 L
X0.5 H
X2 Z
XN
X2 14 Q
X(Another example:) 72 710.67 T
X1 F
X(This example uses some of the more advanced directives:) 72 689.67 T
X4 10 Q
X({) 72 676.33 T
X5 F
X(title) 78 676.33 T
X4 F
X(: Everybody Hurts}) 107.98 676.33 T
X({) 72 664.33 T
X5 F
X(subtitle) 78 664.33 T
X4 F
X(: REM}) 125.97 664.33 T
X({) 72 652.33 T
X5 F
X(def) 78 652.33 T
X(ine) 95.99 652.33 T
X4 F
X(: G) 113.98 652.33 T
X5 F
X(base-fret) 137.96 652.33 T
X4 F
X( 1) 191.93 652.33 T
X5 F
X(frets) 209.92 652.33 T
X4 F
X( 3 2 0 0 3 3}) 239.91 652.33 T
X({) 72 640.33 T
X5 F
X(def) 78 640.33 T
X(ine) 95.99 640.33 T
X4 F
X(: D4) 113.98 640.33 T
X5 F
X(base-fret) 143.96 640.33 T
X4 F
X( 1) 197.93 640.33 T
X5 F
X(frets) 215.92 640.33 T
X4 F
X( - - 0 0 3 -}) 245.9 640.33 T
X({) 72 628.33 T
X5 F
X(def) 78 628.33 T
X(ine) 95.99 628.33 T
X4 F
X(: E) 113.98 628.33 T
X5 F
X(base-fret) 137.96 628.33 T
X4 F
X( 1) 191.93 628.33 T
X5 F
X(frets) 209.92 628.33 T
X4 F
X( - 3 3 2 0 0}) 239.91 628.33 T
X([D]Intro [G] [D] [G]) 72 616.33 T
X([D]When your day is [G]long and the [D]night, the night is [G]yours a[D]lone) 72 592.33 T
X([D]When you\325re sure you\325ve had e[G]nough of this [D]life, well [G]hang on) 72 580.33 T
X({) 72 568.33 T
X5 F
X(start_of_tab) 78 568.33 T
X4 F
X(}) 149.96 568.33 T
X( E\050low\051-3-2-0-) 108 556.33 T
X({) 72 544.33 T
X5 F
X(end_of_tab) 78 544.33 T
X4 F
X(}) 137.96 544.33 T
X([E]Don\325t let yourself [A]go, [E]cause everybody [A]cries [E]and everybody[A]) 72 532.33 T
X(hurts some[D]times [G]) 72 520.33 T
X(Sometimes everything is [D]wrong, [G]now it\325s time to sing a[D]long) 72 508.33 T
X(When your day is night alone [G] \050hold [D]on, hold on\051) 72 496.33 T
X(If you feel like letting go [G] \050hold [D]on\051) 72 484.33 T
X(If you think you\325ve had too [G]much of this [D]life, well hang [G]on) 72 472.33 T
X([E]Cause everybody [A]hurts, [E]take comfort in your [A]friends) 72 448.33 T
X([E]Everybody [A]hurts, [E]don\325t throw your [A]hands, oh [E]now, don\325t throw) 72 436.33 T
X(your [A]hands) 72 424.33 T
X([C]If you feel like you\325re [D4]alone, no, no, no, you\325re not [A]alone) 72 412.33 T
X({) 72 400.33 T
X5 F
X(start_of_tab) 78 400.33 T
X4 F
X(}) 149.96 400.33 T
X( D4->) 216 388.33 T
X(E-0-----0-----0-----0--) 252 388.33 T
X(B---3-----3-----3------) 252 376.33 T
X(G-----0-----0-----0----) 252 364.33 T
X({) 72 352.33 T
X5 F
X(end_of_tab) 78 352.33 T
X4 F
X(}) 137.96 352.33 T
X([D]If you\325re on your [G]own in this [D]life, the days and nights are [G]long) 72 340.33 T
X([D]When you think you\325ve had too [G]much, with this [D]life, to hang [G]on) 72 328.33 T
X({) 72 304.33 T
X5 F
X(start_of_chorus) 78 304.33 T
X4 F
X(}) 167.95 304.33 T
X([E]Well everybody [A]hurts, some[E]times) 72 292.33 T
X(Everybody [A]cries, [E]and everybody [A]hurts,[N.C.] ... some[D]times [G]) 72 280.33 T
X({) 72 268.33 T
X5 F
X(end_of_chorus) 78 268.33 T
X4 F
X(}) 155.95 268.33 T
X(But everybody [D]hurts [G]sometimes so hold [D]on, hold [G]on, hold [D]on) 72 256.33 T
X(Hold on, [G]hold on, [D]hold on, [G]hold on, [D]hold on) 72 244.33 T
X([G]Everybody [D]hurts [G] [D] [G]) 72 232.33 T
X([D]You are not alone [G] [D] [G] [D] [G]) 72 220.33 T
X(#Picking pattern for the chords:) 72 208.33 T
X(# D G) 72 196.33 T
X(#E----------2-----------2-------------3-----------3-----------------------) 72 184.33 T
X(#B--------3---3-------3---3---------3---3-------3---3---------------------) 72 172.33 T
X(#G------2-------2---2-------2-----0-------0---0---------------------------) 72 160.33 T
X(#D----0-----------0-------------------------------------------------------) 72 148.33 T
X(#A------------------------------------------------------------------------) 72 136.33 T
X(#E------------------------------3-----------3-----------------------------) 72 124.33 T
X1 14 Q
X-0.1 (See the result on the next page. Look for the tablatures and the modi\336ed de\336nitions) 72 93.67 P
X(of chords G, D4 and E.) 72 77.67 T
XFMENDPAGE
X%%EndPage: "8" 8
X%%Page: "7" 8
X612 792 0 FMBEGINPAGE
X0 12 Q
X0 X
X0 K
X(Version 3.5) 72 748 T
X(-7-) 298.67 748 T
X(The Chord User Guide) 412.71 748 T
X72 63 540 63 2 L
X0.5 H
X2 Z
XN
X2 14 Q
X(chordsize) 75.5 710.67 T
X1 F
X(: n) 132.24 710.67 T
X( Same as -c command option.) 108 694.67 T
X2 F
X(no_grid) 75.5 657.67 T
X1 F
X( or) 122.15 657.67 T
X2 F
X(ng) 140.8 657.67 T
X1 F
X( W) 108 641.67 T
X(ill disable printing of the chord grids for the current song.) 124.15 641.67 T
X2 F
X(grid) 75.5 604.67 T
X1 F
X( or) 100.38 604.67 T
X2 F
X(g) 119.03 604.67 T
X1 F
X-0.31 (W) 108 588.67 P
X-0.31 (ill enable the printing of the chord grids for the current song \050subject) 120.65 588.67 P
X(to the limitation caused by the usage of the -g option\051. This directive) 108 572.67 T
X(will override the runtime -G option for the current song.) 108 556.67 T
X2 F
X(new_page) 75.5 519.67 T
X1 F
X( or) 134.57 519.67 T
X2 F
X(np) 153.23 519.67 T
X1 F
X(W) 108 503.67 T
X(ill force a logical page break \050which will obviously turn out to be a) 120.65 503.67 T
X(physical page break if you are not in either 2-up or 4-up mode\051.) 108 487.67 T
X2 F
X(new_physical_page) 75.5 450.67 T
X1 F
X( or) 190.56 450.67 T
X2 F
X(npp) 209.21 450.67 T
X1 F
X( W) 108 434.67 T
X(ill force a physical page break \050in any mode\051.) 124.15 434.67 T
X2 F
X(start_of_tab) 75.5 397.67 T
X1 F
X( or) 148.55 397.67 T
X2 F
X(sot) 167.2 397.67 T
X1 F
X(W) 108 381.67 T
X(ill cause chord to use a monospace \050i.e.: non-proportional\051 font for) 120.65 381.67 T
X(the printing of text. This can be used to enter \324tab\325 information where) 108 365.67 T
X-0.32 (character positioning is crucial. The Courier font is used with the same) 108 349.67 P
X(point-size as the rest of the text.) 108 333.67 T
X2 F
X(end_of_tab) 75.5 296.67 T
X1 F
X( or) 142.35 296.67 T
X2 F
X(eot) 161.01 296.67 T
X1 F
X(W) 108 280.67 T
X(ill stop using monospace font. The ef) 120.65 280.67 T
X(fect is implicit at the end of a) 328.32 280.67 T
X(song.) 108 264.67 T
XFMENDPAGE
X%%EndPage: "7" 7
X%%Page: "6" 7
X612 792 0 FMBEGINPAGE
X0 12 Q
X0 X
X0 K
X(Version 3.5) 72 748 T
X(-6-) 298.67 748 T
X(The Chord User Guide) 412.71 748 T
X72 63 540 63 2 L
X0.5 H
X2 Z
XN
X2 14 Q
X(subtitle) 75.5 694.67 T
X1 F
X(: or) 119.81 694.67 T
X2 F
X(st) 142.35 694.67 T
X1 F
X(:) 152.46 694.67 T
X-0.27 (Speci\336es a string to be printed right below the title. Many subtitles can) 108 678.67 P
X(be speci\336ed.) 108 662.67 T
X2 F
X(de\336ne) 75.5 625.67 T
X1 F
X(: name) 111.26 625.67 T
X2 F
X(base-fr) 152.46 625.67 T
X(et) 194.17 625.67 T
X1 F
X( of) 205.04 625.67 T
X(fset) 219.94 625.67 T
X2 F
X(fr) 243.64 625.67 T
X(ets) 254.26 625.67 T
X1 F
X( str1...str6) 270.58 625.67 T
X-0.46 (De\336nes a new chord called \322name\323. The keyword \322base-fret\323 indicates) 108 609.67 P
X(that the number that follows \050\322of) 108 593.67 T
X(fset\323\051 is the \336rst fret that is to be dis-) 291.57 593.67 T
X(played when representing the way this chord is played.) 108 577.67 T
X(The keyword \322frets\323 then appears and is followed by 6 values. These) 108 556.67 T
X-0.36 (values are the fret number [ 1 to n ] for each string [str1 to str6] and are) 108 540.67 P
X(RELA) 108 524.67 T
X(TIVE to the of) 142.98 524.67 T
X(fset. A value of \322-\323, \322X\323 or \322x\323 indicates a string) 224.72 524.67 T
X(that is not played.) 108 508.67 T
X(Keywords) 108 487.67 T
X2 F
X(base-fr) 169.01 487.67 T
X(et) 210.72 487.67 T
X1 F
X( and) 221.59 487.67 T
X2 F
X(fr) 248.79 487.67 T
X(ets) 259.41 487.67 T
X1 F
X( are mandatory) 275.73 487.67 T
X(.) 358.74 487.67 T
X(A value of 0 for a given string means it is to be played open, and will) 108 466.67 T
X(be marked by a small open circle above the string in the grid. The) 108 450.67 T
X-0.31 (strings are numbered in ascending order of tonality) 108 434.67 P
X-0.31 (, starting on the low) 390.52 434.67 P
X-0.15 (E \050the top string\051. On output, a chord de\336ned in the user) 108 418.67 P
X-0.15 (\325) 420.51 418.67 P
X-0.15 (s .chordrc \336le) 424.39 418.67 P
X(will have a small asterisk near its grid, a chord de\336ned in a song will) 108 402.67 T
X(have two small asterix. At the beginning of every song, the default) 108 386.67 T
X(chords are reloaded and the user) 108 370.67 T
X(\325) 289.19 370.67 T
X(s .chordrc \336le is reread. Chord de\336ni-) 293.08 370.67 T
X-0.23 (tion of new chords inside the text of a song are only valid for that song.) 108 354.67 P
X(The syntax of a {de\336ne} directive has been modi\336ed in CHORD 3.5.) 108 333.67 T
X(CHORD will attempt to recognize an old-format) 108 317.67 T
X2 F
X({de\336ne}) 383.54 317.67 T
X1 F
X( and will) 430.33 317.67 T
X(accept it. It will, though, print a warning inviting you to modify your) 108 301.67 T
X(input \336le to use the new syntax \050the exact) 108 285.67 T
X2 F
X({de\336ne}) 343.9 285.67 T
X1 F
X( entry to use is pro-) 390.69 285.67 T
X(vided as an example\051.) 108 269.67 T
X2 F
X(textfont) 75.5 232.67 T
X1 F
X(: postscript_font) 122.12 232.67 T
X( Same as -T command option.) 108 216.67 T
X2 F
X(textsize) 75.5 179.67 T
X1 F
X(: n) 119.78 179.67 T
X( Same as -t command option.) 108 163.67 T
X2 F
X(chordfont) 75.5 126.67 T
X1 F
X(: postscript_font) 134.57 126.67 T
X( Same as -C command option.) 108 110.67 T
XFMENDPAGE
X%%EndPage: "6" 6
X%%Page: "5" 6
X612 792 0 FMBEGINPAGE
X0 12 Q
X0 X
X0 K
X(Version 3.5) 72 748 T
X(-5-) 298.67 748 T
X(The Chord User Guide) 412.71 748 T
X72 63 540 63 2 L
X0.5 H
X2 Z
XN
X2 14 Q
X(Dir) 72 710.67 T
X(ectives) 91.95 710.67 T
X1 F
X-0.1 (A directive is a string of text that appears between french brackets \050\324{\324 and \324}\325\051 and) 72 673.67 P
X(has a special meaning to) 72 657.67 T
X3 12 Q
X(CHORD) 212.29 657.67 T
X1 14 Q
X(. It contains a message that will af) 256.26 657.67 T
X(fect the way) 446.42 657.67 T
X(CHORD processes your \336le. Examples of directive uses would be: changing the) 72 641.67 T
X(fonts, marking a chorus, and de\336ning a title.) 72 625.67 T
X(Directives must be alone on a line. Blanks before the opening bracket and after the) 72 609.67 T
X(closing bracket are not signi\336cant. Blanks inside a directive are ignored.) 72 593.67 T
X( Supported directives are:) 72 561.67 T
X2 F
X(start_of_chorus) 75.5 529.67 T
X1 F
X( or) 169.54 529.67 T
X2 F
X(soc) 188.19 529.67 T
X1 F
X(Which indicates the start of a chorus \050yep\051. The complete chorus will) 108 513.67 T
X(be highlighted by a change bar) 108 497.67 T
X(, to be easily located by the player) 279.59 497.67 T
X(.) 470.01 497.67 T
X2 F
X(end_of_chorus) 75.5 465.67 T
X1 F
X( or) 163.34 465.67 T
X2 F
X(eoc) 181.99 465.67 T
X1 F
X(Marks the end of the chorus.) 108 449.67 T
X2 F
X(comment) 75.5 412.67 T
X1 F
X(: or) 130.67 412.67 T
X2 F
X(c) 153.21 412.67 T
X1 F
X(:) 159.42 412.67 T
X(W) 108 396.67 T
X(ill call the printing of the rest of the line, highlighted by a grey box.) 120.65 396.67 T
X(\050Useful to call a chorus, for example\051) 108 380.67 T
X2 F
X(comment_italic) 75.5 343.67 T
X1 F
X(: or) 167.2 343.67 T
X2 F
X(ci) 189.74 343.67 T
X1 F
X(:) 199.85 343.67 T
X(W) 108 327.67 T
X(ill print the comment in an italic font... well not really) 120.65 327.67 T
X(, it will print) 420.95 327.67 T
X(the comment in the font used for printing the chord names \050which is) 108 311.67 T
X(normally italic unless you speci\336ed a dif) 108 295.67 T
X(ferent chord_font\051.) 334.72 295.67 T
X2 F
X(comment_box) 75.5 258.67 T
X1 F
X(: or) 159.44 258.67 T
X2 F
X(cb) 181.98 258.67 T
X1 F
X(:) 195.97 258.67 T
X( W) 108 242.67 T
X(ill print the comment inside a bounding box.) 124.15 242.67 T
X2 F
X(new_song) 75.5 205.67 T
X1 F
X( or) 133.8 205.67 T
X2 F
X(ns) 152.46 205.67 T
X1 F
X(Marks the beginning of a new song. It enables you to put multiple) 108 189.67 T
X(songs in one \336le. It is not required at the beginning of the \336le.) 108 173.67 T
X2 F
X(title) 75.5 136.67 T
X1 F
X(: or) 98.81 136.67 T
X2 F
X(t) 121.35 136.67 T
X1 F
X(:) 126.01 136.67 T
X(Speci\336es the title of the song. It will appear centered at the top of the) 108 120.67 T
X-0.42 (\336rst page, and at the bottom of every other page, accompanied there by) 108 104.67 P
X(the page number) 108 88.67 T
X(, within the current song.) 200.7 88.67 T
XFMENDPAGE
X%%EndPage: "5" 5
X%%Page: "4" 5
X612 792 0 FMBEGINPAGE
X0 12 Q
X0 X
X0 K
X(Version 3.5) 72 748 T
X(-4-) 298.67 748 T
X(The Chord User Guide) 412.71 748 T
X72 63 540 63 2 L
X0.5 H
X2 Z
XN
X2 14 Q
X(How do I use) 72 710.67 T
X3 12 Q
X(CHORD) 153.63 710.67 T
X2 14 Q
X(?) 197.6 710.67 T
X1 F
X(Using) 72 689.67 T
X3 12 Q
X(CHORD) 108.93 689.67 T
X1 14 Q
X( is simple. four step are required:) 152.89 689.67 T
X(1. T) 72 657.67 T
X(ype in the lyrics of the songs: this can be done with any text editor) 93.56 657.67 T
X(.) 464.33 657.67 T
X4 12 Q
X(% edit loveme) 90 643 T
X(Love me tender love me sweet Never let me go) 90 629 T
X1 14 Q
X-0.08 (2. Insert the chord names between square brackets throughout the lyrics. The chord) 72 599.67 P
X(name will appear right above the letter that follows the closing bracket) 72 583.67 T
X4 12 Q
X(Love me tender [A7]love me sweet [D7]Never let me [G]go) 90 569 T
X1 14 Q
X-0.41 (3. Insert any directive you want to give to) 72 539.67 P
X3 12 Q
X-0.4 (CHORD) 305.33 539.67 P
X1 14 Q
X-0.41 (: titles, sub-titles, chorus markers,) 349.3 539.67 P
X(comments, etc.) 72 523.67 T
X4 12 Q
X({) 90 509 T
X5 F
X(title) 97.2 509 T
X4 F
X(:Love me tender}) 133.18 509 T
X({) 90 495 T
X5 F
X(subtitle) 97.2 495 T
X4 F
X(:Presley/Matson}) 154.76 495 T
X1 14 Q
X(4. Invoke) 72 465.67 T
X3 12 Q
X(CHORD) 128.35 465.67 T
X1 14 Q
X( with your \336le as an ar) 172.32 465.67 T
X(gument. This will produce the PostScript) 297.2 465.67 T
X(output. Y) 72 449.67 T
X(ou can save this in a \336le for future printing, or send the output directly to) 123.46 449.67 T
X(the printer) 72 433.67 T
X4 12 Q
X(% chord loveme >loveme.ps) 90 419 T
X1 14 Q
X(or) 72 403.67 T
X4 12 Q
X(% chord loveme | lp) 90 389 T
XFMENDPAGE
X%%EndPage: "4" 4
X%%Page: "3" 4
X612 792 0 FMBEGINPAGE
X0 12 Q
X0 X
X0 K
X(Version 3.5) 72 748 T
X(-3-) 298.67 748 T
X(The Chord User Guide) 412.71 748 T
X72 63 540 63 2 L
X0.5 H
X2 Z
XN
X0 5 5 605 787 513 666.25 45 71.75 FMBEGINEPSF
X%%BeginDocument: /home/martin/wrk/chord-martin/ex1.eps
X%!PS-Adobe-3.0 EPSF-3.0
X%%Title: A song
X%%Creator: Martin Leclerc & Mario Dorion
X%%Pages: (atend)
X%%BoundingBox: 5 5 605 787
X%%EndComments
X/inch {72 mul } def
X%  iso.ps  reencodeing of ISO 8859-1 8-bit french characters
X%
X/reencodedict 5 dict def
X/ReEncode
X  { reencodedict begin
X      /newencoding exch def
X      /newfontname exch def
X      /basefontname exch def
X
X      /basefontdict basefontname findfont def
X
X      /newfont basefontdict maxlength dict def
X
X      basefontdict
X      {  exch dup dup /FID ne exch /Encoding ne and
X	{ exch newfont 3 1 roll put }
X	{ pop pop }
X	ifelse
X      } forall
X      newfont /FontName newfontname put
X      newfont /Encoding newencoding put
X      newfontname newfont definefont pop
X      end
X   } def
X
X/ISO 256 array def
X
X0 1 255 { ISO exch /.notdef put } for
XISO
X
X  dup 8#040 /space put
X  dup 8#041 /exclam put
X  dup 8#042 /quotedbl put
X  dup 8#043 /numbersign put
X  dup 8#044 /dollar put
X  dup 8#045 /percent put
X  dup 8#046 /ampersand put
X  dup 8#047 /quotesingle put
X  dup 8#050 /parenleft put
X  dup 8#051 /parenright put
X  dup 8#052 /asterisk put
X  dup 8#053 /plus put
X  dup 8#054 /comma put
X  dup 8#055 /hyphen put
X  dup 8#056 /period put
X  dup 8#057 /slash put
X  dup 8#060 /zero put
X  dup 8#061 /one put
X  dup 8#062 /two put
X  dup 8#063 /three put
X  dup 8#064 /four put
X  dup 8#065 /five put
X  dup 8#066 /six put
X  dup 8#067 /seven put
X  dup 8#070 /eight put
X  dup 8#071 /nine put
X  dup 8#072 /colon put
X  dup 8#073 /semicolon put
X  dup 8#074 /less put
X  dup 8#075 /equal put
X  dup 8#076 /greater put
X  dup 8#077 /question put
X  dup 8#100 /at put
X  dup 8#101 /A put
X  dup 8#102 /B put
X  dup 8#103 /C put
X  dup 8#104 /D put
X  dup 8#105 /E put
X  dup 8#106 /F put
X  dup 8#107 /G put
X  dup 8#110 /H put
X  dup 8#111 /I put
X  dup 8#112 /J put
X  dup 8#113 /K put
X  dup 8#114 /L put
X  dup 8#115 /M put
X  dup 8#116 /N put
X  dup 8#117 /O put
X  dup 8#120 /P put
X  dup 8#121 /Q put
X  dup 8#122 /R put
X  dup 8#123 /S put
X  dup 8#124 /T put
X  dup 8#125 /U put
X  dup 8#126 /V put
X  dup 8#127 /W put
X  dup 8#130 /X put
X  dup 8#131 /Y put
X  dup 8#132 /Z put
X  dup 8#133 /bracketleft put
X  dup 8#134 /backslash put
X  dup 8#135 /bracketright put
X  dup 8#136 /asciicircum put
X  dup 8#137 /underscore put
X  dup 8#140 /grave put
X  dup 8#141 /a put
X  dup 8#142 /b put
X  dup 8#143 /c put
X  dup 8#144 /d put
X  dup 8#145 /e put
X  dup 8#146 /f put
X  dup 8#147 /g put
X  dup 8#150 /h put
X  dup 8#151 /i put
X  dup 8#152 /j put
X  dup 8#153 /k put
X  dup 8#154 /l put
X  dup 8#155 /m put
X  dup 8#156 /n put
X  dup 8#157 /o put
X  dup 8#160 /p put
X  dup 8#161 /q put
X  dup 8#162 /r put
X  dup 8#163 /s put
X  dup 8#164 /t put
X  dup 8#165 /u put
X  dup 8#166 /v put
X  dup 8#167 /w put
X  dup 8#170 /x put
X  dup 8#171 /y put
X  dup 8#172 /z put
X  dup 8#173 /braceleft put
X  dup 8#174 /bar put
X  dup 8#175 /braceright put
X  dup 8#176 /asciitilde put
X  dup 8#241 /exclamdown put
X  dup 8#242 /cent put
X  dup 8#243 /sterling put
X  dup 8#244 /currency put
X  dup 8#245 /yen put
X  dup 8#246 /bar put
X  dup 8#247 /section put
X  dup 8#250 /dieresis put
X  dup 8#251 /copyright put
X  dup 8#252 /ordfeminine put
X  dup 8#253 /guillemotleft put
X  dup 8#254 /.notdef put
X  dup 8#255 /endash put
X  dup 8#256 /registered put
X  dup 8#257 /tilde put
X  dup 8#260 /ring put
X  dup 8#261 /.notdef put
X  dup 8#262 /.notdef put
X  dup 8#263 /.notdef put
X  dup 8#264 /acute put
X  dup 8#265 /.notdef put
X  dup 8#266 /paragraph put
X  dup 8#267 /.notdef put
X  dup 8#270 /cedilla put
X  dup 8#271 /.notdef put
X  dup 8#272 /ordmasculine put
X  dup 8#273 /guillemotright put
X  dup 8#274 /.notdef put
X  dup 8#275 /circumflex put
X  dup 8#276 /dotlessi put
X  dup 8#277 /questiondown put
X  dup 8#300 /Agrave put
X  dup 8#301 /Aacute put
X  dup 8#302 /Acircumflex put
X  dup 8#303 /Atilde put
X  dup 8#304 /Adieresis put
X  dup 8#305 /Aring put
X  dup 8#306 /AE put
X  dup 8#307 /Ccedilla put
X  dup 8#310 /Egrave put
X  dup 8#311 /Eacute put
X  dup 8#312 /Ecircumflex put
X  dup 8#313 /Edieresis put
X  dup 8#314 /Igrave put
X  dup 8#315 /Iacute put
X  dup 8#316 /Icircumflex put
X  dup 8#317 /Idieresis put
X  dup 8#320 /.notdef put
X  dup 8#321 /Ntilde put
X  dup 8#322 /Ograve put
X  dup 8#323 /Oacute put
X  dup 8#324 /Ocircumflex put
X  dup 8#325 /Otilde put
X  dup 8#326 /Odieresis put
X  dup 8#327 /.notdef put
X  dup 8#330 /Oslash put
X  dup 8#331 /Ugrave put
X  dup 8#332 /Uacute put
X  dup 8#333 /Ucircumflex put
X  dup 8#334 /Udieresis put
X  dup 8#335 /.notdef put
X  dup 8#336 /.notdef put
X  dup 8#337 /germandbls put
X  dup 8#340 /agrave put
X  dup 8#341 /aacute put
X  dup 8#342 /acircumflex put
X  dup 8#343 /atilde put
X  dup 8#344 /adieresis put
X  dup 8#345 /aring put
X  dup 8#346 /ae put
X  dup 8#347 /ccedilla put
X  dup 8#350 /egrave put
X  dup 8#351 /eacute put
X  dup 8#352 /ecircumflex put
X  dup 8#353 /edieresis put
X  dup 8#354 /igrave put
X  dup 8#355 /iacute put
X  dup 8#356 /icircumflex put
X  dup 8#357 /idieresis put
X  dup 8#360 /.notdef put
X  dup 8#361 /ntilde put
X  dup 8#362 /ograve put
X  dup 8#363 /oacute put
X  dup 8#364 /ocircumflex put
X  dup 8#365 /otilde put
X  dup 8#366 /odieresis put
X  dup 8#367 /.notdef put
X  dup 8#370 /oslash put
X  dup 8#371 /ugrave put
X  dup 8#372 /uacute put
X  dup 8#373 /ucircumflex put
X  dup 8#374 /udieresis put
X  dup 8#375 /ydieresis put
X  dup 8#376 /.notdef put
X  pop
X
X
X/CHORD_FONT { /Helvetica-Oblique findfont 9 scalefont } def
X/Helvetica-Oblique /Helvetica-Oblique ISO ReEncode
X/TEXT_FONT { /Times-Roman findfont 12 scalefont } def
X/Times-Roman /Times-Roman ISO ReEncode
X/MONO_FONT { /Courier findfont 10 scalefont } def
X/Courier /Courier ISO ReEncode
X% routines for the drawing of the chords
X/grid { 
X	gsave currentpoint
X	6 { 0 cagesizeX rlineto incr cagesize neg incr add rmoveto } repeat
X	moveto
X	5 { cagesize 0 rlineto 0 cagesize sub incr rmoveto } repeat
X	1 setlinewidth stroke grestore
X	gsave
X	0 cagesizeX rmoveto cagesize 0 rlineto
X	cagesize 30 div setlinewidth stroke
X	grestore	
X} def
X
X/dot {
X	gsave
X	/fret exch def /str exch def
X	/x 5  fret abs sub incr mul half-incr sub def
X	/y 6 str sub incr mul def
X	y x rmoveto
X	0 setgray
X	fret -1 eq
X	  {
X	  0 incr rmoveto
X	  check neg  check neg rmoveto
X	  check check rlineto check check rlineto
X	  check neg check neg rmoveto check neg check rmoveto
X  	  check check neg rlineto check check neg rlineto
X	  cagesize 50 div setlinewidth stroke
X	  }
X	  {  fret 0 ne
X	    { currentpoint dot-size 0 360 arc fill}
X	    { currentpoint
X	      check 0 360 newpath arc
X	      cagesize 50 div setlinewidth
X	    }
X	    ifelse 
X	    stroke 
X	  }
X	  ifelse
X	grestore
X} def	
X
X/dots {
X	grid
X	/origin exch def
X	/fret-displ exch def
X	  1 1 6
X	  {
X	    /str exch def
X	    /fret exch def
X	    fret -2 ne {str fret dot} if
X	  } for
X
X	fret-displ 1 ne
X	{
X    	  gsave displ-font setfont
X    	  0 cagesize fret-displ 10 ge {1.75} {3} ifelse div sub
X	  cagesizeX incr sub rmoveto
X    	  /char 6 string def fret-displ char cvs show grestore 
X	} if
X
X	/chord-name exch def
X	gsave displ-font setfont
X	0 cagesizeX cagesizeX 15 div add dot-size 3 mul add rmoveto
X	chord-name stringwidth pop 2 div cagesize 2 div exch sub 0 rmoveto
X	chord-name show
X	0 cagesize 10 div rmoveto
X	origin 1 eq { (*) show} if
X	origin 2 eq { (**) show} if
X	chord-font setfont grestore
X} def
X
X/cagesize 30 def
X/incr cagesize 5 div def
X/cagesizeX incr 4 mul def
X/half-incr incr 2 div def
X/dot-size cagesize 15 div def
X/check cagesize 20 div def
X
X/chord-font /Times-Roman findfont cagesize 5 div scalefont def
X/displ-font /Times-Roman findfont cagesize 3 div scalefont def
X% end of the routines for the drawing of the chords
X
X%%EndProlog
X%%Page: "1" 1
X%%BeginPageSetup
X/pgsave save def
X1.000000 1.000000 scale
X0.000000 rotate
X%%EndPageSetup
X/TEXT_FONT { /Times-Roman findfont 17 scalefont } def
X/Times-Roman /Times-Roman ISO ReEncode
X/MONO_FONT { /Courier findfont 15 scalefont } def
X/Courier /Courier ISO ReEncode
XTEXT_FONT setfont
X(Love me tender) dup stringwidth pop 2 div
X612 2 div exch sub 756 moveto
Xshow
X/TEXT_FONT { /Times-Roman findfont 12 scalefont } def
X/Times-Roman /Times-Roman ISO ReEncode
X/MONO_FONT { /Courier findfont 10 scalefont } def
X/Courier /Courier ISO ReEncode
XTEXT_FONT setfont
X(Presley/Matson) dup stringwidth pop 2 div
X612 2 div exch sub 739 moveto
Xshow
X/minhpos 0 def
X/minhpos 0 def
XTEXT_FONT setfont
X() stringwidth  pop 72 add 
Xdup minhpos lt
X     {pop minhpos} if
Xdup /minhpos exch (G) stringwidth pop add def
X697 moveto
XCHORD_FONT setfont
X(G) show
XTEXT_FONT setfont
X(Love me tender ) stringwidth  pop 72 add 
Xdup minhpos lt
X     {pop minhpos} if
Xdup /minhpos exch (A7) stringwidth pop add def
X697 moveto
XCHORD_FONT setfont
X(A7) show
XTEXT_FONT setfont
X(Love me tender love me sweet  ) stringwidth  pop 72 add 
Xdup minhpos lt
X     {pop minhpos} if
Xdup /minhpos exch (D7) stringwidth pop add def
X697 moveto
XCHORD_FONT setfont
X(D7) show
XTEXT_FONT setfont
X(Love me tender love me sweet  Never let me ) stringwidth  pop 72 add 
Xdup minhpos lt
X     {pop minhpos} if
Xdup /minhpos exch (G) stringwidth pop add def
X697 moveto
XCHORD_FONT setfont
X(G) show
XTEXT_FONT setfont
X72 686 moveto
X(Love me tender love me sweet  Never let me go) show
X/minhpos 0 def
XTEXT_FONT setfont
X() stringwidth  pop 72 add 
Xdup minhpos lt
X     {pop minhpos} if
Xdup /minhpos exch (G) stringwidth pop add def
X676 moveto
XCHORD_FONT setfont
X(G) show
XTEXT_FONT setfont
X(You have made my ) stringwidth  pop 72 add 
Xdup minhpos lt
X     {pop minhpos} if
Xdup /minhpos exch (A7) stringwidth pop add def
X676 moveto
XCHORD_FONT setfont
X(A7) show
XTEXT_FONT setfont
X(You have made my life complete ) stringwidth  pop 72 add 
Xdup minhpos lt
X     {pop minhpos} if
Xdup /minhpos exch (D7) stringwidth pop add def
X676 moveto
XCHORD_FONT setfont
X(D7) show
XTEXT_FONT setfont
X(You have made my life complete and I love you ) stringwidth  pop 72 add 
Xdup minhpos lt
X     {pop minhpos} if
Xdup /minhpos exch (G) stringwidth pop add def
X676 moveto
XCHORD_FONT setfont
X(G) show
XTEXT_FONT setfont
X72 665 moveto
X(You have made my life complete and I love you so) show
X/minhpos 0 def
X/minhpos 0 def
XTEXT_FONT setfont
X() stringwidth  pop 72 add 
Xdup minhpos lt
X     {pop minhpos} if
Xdup /minhpos exch (G) stringwidth pop add def
X635 moveto
XCHORD_FONT setfont
X(G) show
XTEXT_FONT setfont
X(Love me ) stringwidth  pop 72 add 
Xdup minhpos lt
X     {pop minhpos} if
Xdup /minhpos exch (B7) stringwidth pop add def
X635 moveto
XCHORD_FONT setfont
X(B7) show
XTEXT_FONT setfont
X(Love me tender ) stringwidth  pop 72 add 
Xdup minhpos lt
X     {pop minhpos} if
Xdup /minhpos exch (Em) stringwidth pop add def
X635 moveto
XCHORD_FONT setfont
X(Em) show
XTEXT_FONT setfont
X(Love me tender love me ) stringwidth  pop 72 add 
Xdup minhpos lt
X     {pop minhpos} if
Xdup /minhpos exch (G7) stringwidth pop add def
X635 moveto
XCHORD_FONT setfont
X(G7) show
XTEXT_FONT setfont
X72 624 moveto
X(Love me tender love me true ) show
X/minhpos 0 def
XTEXT_FONT setfont
X() stringwidth  pop 72 add 
Xdup minhpos lt
X     {pop minhpos} if
Xdup /minhpos exch (C) stringwidth pop add def
X614 moveto
XCHORD_FONT setfont
X(C) show
XTEXT_FONT setfont
X(all my ) stringwidth  pop 72 add 
Xdup minhpos lt
X     {pop minhpos} if
Xdup /minhpos exch (Cm) stringwidth pop add def
X614 moveto
XCHORD_FONT setfont
X(Cm) show
XTEXT_FONT setfont
X(all my dreams ful) stringwidth  pop 72 add 
Xdup minhpos lt
X     {pop minhpos} if
Xdup /minhpos exch (G) stringwidth pop add def
X614 moveto
XCHORD_FONT setfont
X(G) show
XTEXT_FONT setfont
X72 603 moveto
X(all my dreams fulfill) show
X/minhpos 0 def
XTEXT_FONT setfont
X() stringwidth  pop 72 add 
Xdup minhpos lt
X     {pop minhpos} if
Xdup /minhpos exch (G) stringwidth pop add def
X593 moveto
XCHORD_FONT setfont
X(G) show
XTEXT_FONT setfont
X(For ) stringwidth  pop 72 add 
Xdup minhpos lt
X     {pop minhpos} if
Xdup /minhpos exch (Dm) stringwidth pop add def
X593 moveto
XCHORD_FONT setfont
X(Dm) show
XTEXT_FONT setfont
X(For my ) stringwidth  pop 72 add 
Xdup minhpos lt
X     {pop minhpos} if
Xdup /minhpos exch (E+) stringwidth pop add def
X593 moveto
XCHORD_FONT setfont
X(E+) show
XTEXT_FONT setfont
X(For my dar) stringwidth  pop 72 add 
Xdup minhpos lt
X     {pop minhpos} if
Xdup /minhpos exch (E7) stringwidth pop add def
X593 moveto
XCHORD_FONT setfont
X(E7) show
XTEXT_FONT setfont
X(For my darling ) stringwidth  pop 72 add 
Xdup minhpos lt
X     {pop minhpos} if
Xdup /minhpos exch (A7) stringwidth pop add def
X593 moveto
XCHORD_FONT setfont
X(A7) show
XTEXT_FONT setfont
X72 582 moveto
X(For my darling I love you) show
X/minhpos 0 def
XTEXT_FONT setfont
X() stringwidth  pop 72 add 
Xdup minhpos lt
X     {pop minhpos} if
Xdup /minhpos exch (D7) stringwidth pop add def
X572 moveto
XCHORD_FONT setfont
X(D7) show
XTEXT_FONT setfont
X(and I always ) stringwidth  pop 72 add 
Xdup minhpos lt
X     {pop minhpos} if
Xdup /minhpos exch (G) stringwidth pop add def
X572 moveto
XCHORD_FONT setfont
X(G) show
XTEXT_FONT setfont
X(and I always will ) stringwidth  pop 72 add 
Xdup minhpos lt
X     {pop minhpos} if
Xdup /minhpos exch (Am7) stringwidth pop add def
X572 moveto
XCHORD_FONT setfont
X(Am7) show
XTEXT_FONT setfont
X(and I always will  ) stringwidth  pop 72 add 
Xdup minhpos lt
X     {pop minhpos} if
Xdup /minhpos exch (D7) stringwidth pop add def
X572 moveto
XCHORD_FONT setfont
X(D7) show
XTEXT_FONT setfont
X72 561 moveto
X(and I always will  ) show
X1  setlinewidth
Xnewpath
X62 644 moveto
X0 -83 rlineto
Xclosepath
Xstroke
X/minhpos 0 def
X/minhpos 0 def
XTEXT_FONT setfont
X() stringwidth  pop 72 add 
Xdup minhpos lt
X     {pop minhpos} if
Xdup /minhpos exch (G) stringwidth pop add def
X531 moveto
XCHORD_FONT setfont
X(G) show
XTEXT_FONT setfont
X(Love me tender ) stringwidth  pop 72 add 
Xdup minhpos lt
X     {pop minhpos} if
Xdup /minhpos exch (A7) stringwidth pop add def
X531 moveto
XCHORD_FONT setfont
X(A7) show
XTEXT_FONT setfont
X(Love me tender love me long ) stringwidth  pop 72 add 
Xdup minhpos lt
X     {pop minhpos} if
Xdup /minhpos exch (D7) stringwidth pop add def
X531 moveto
XCHORD_FONT setfont
X(D7) show
XTEXT_FONT setfont
X(Love me tender love me long Take me to your ) stringwidth  pop 72 add 
Xdup minhpos lt
X     {pop minhpos} if
Xdup /minhpos exch (G) stringwidth pop add def
X531 moveto
XCHORD_FONT setfont
X(G) show
XTEXT_FONT setfont
X72 520 moveto
X(Love me tender love me long Take me to your heart) show
X/minhpos 0 def
XTEXT_FONT setfont
X() stringwidth  pop 72 add 
Xdup minhpos lt
X     {pop minhpos} if
Xdup /minhpos exch (G) stringwidth pop add def
X510 moveto
XCHORD_FONT setfont
X(G) show
XTEXT_FONT setfont
X(For it's there that ) stringwidth  pop 72 add 
Xdup minhpos lt
X     {pop minhpos} if
Xdup /minhpos exch (A7) stringwidth pop add def
X510 moveto
XCHORD_FONT setfont
X(A7) show
XTEXT_FONT setfont
X(For it's there that I belong ) stringwidth  pop 72 add 
Xdup minhpos lt
X     {pop minhpos} if
Xdup /minhpos exch (D7) stringwidth pop add def
X510 moveto
XCHORD_FONT setfont
X(D7) show
XTEXT_FONT setfont
X(For it's there that I belong and we'll never ) stringwidth  pop 72 add 
Xdup minhpos lt
X     {pop minhpos} if
Xdup /minhpos exch (G) stringwidth pop add def
X510 moveto
XCHORD_FONT setfont
X(G) show
XTEXT_FONT setfont
X72 499 moveto
X(For it's there that I belong and we'll never part) show
X/minhpos 0 def
XTEXT_FONT setfont
X.9  setgray
X12  setlinewidth
Xnewpath
X70 471 moveto
X(Chorus ) stringwidth rlineto
Xstroke
X72 467 moveto
X0  setgray
X1 setlinewidth
X(Chorus) show
X/minhpos 0 def
X/minhpos 0 def
XTEXT_FONT setfont
X() stringwidth  pop 72 add 
Xdup minhpos lt
X     {pop minhpos} if
Xdup /minhpos exch (G) stringwidth pop add def
X437 moveto
XCHORD_FONT setfont
X(G) show
XTEXT_FONT setfont
X(Love me tender ) stringwidth  pop 72 add 
Xdup minhpos lt
X     {pop minhpos} if
Xdup /minhpos exch (A7) stringwidth pop add def
X437 moveto
XCHORD_FONT setfont
X(A7) show
XTEXT_FONT setfont
X(Love me tender Love me dear ) stringwidth  pop 72 add 
Xdup minhpos lt
X     {pop minhpos} if
Xdup /minhpos exch (D7) stringwidth pop add def
X437 moveto
XCHORD_FONT setfont
X(D7) show
XTEXT_FONT setfont
X(Love me tender Love me dear Tell me you are ) stringwidth  pop 72 add 
Xdup minhpos lt
X     {pop minhpos} if
Xdup /minhpos exch (G) stringwidth pop add def
X437 moveto
XCHORD_FONT setfont
X(G) show
XTEXT_FONT setfont
X72 426 moveto
X(Love me tender Love me dear Tell me you are mine) show
X/minhpos 0 def
XTEXT_FONT setfont
X() stringwidth  pop 72 add 
Xdup minhpos lt
X     {pop minhpos} if
Xdup /minhpos exch (G) stringwidth pop add def
X416 moveto
XCHORD_FONT setfont
X(G) show
XTEXT_FONT setfont
X(I'll be yours through ) stringwidth  pop 72 add 
Xdup minhpos lt
X     {pop minhpos} if
Xdup /minhpos exch (A7) stringwidth pop add def
X416 moveto
XCHORD_FONT setfont
X(A7) show
XTEXT_FONT setfont
X(I'll be yours through all the years ) stringwidth  pop 72 add 
Xdup minhpos lt
X     {pop minhpos} if
Xdup /minhpos exch (D7) stringwidth pop add def
X416 moveto
XCHORD_FONT setfont
X(D7) show
XTEXT_FONT setfont
X(I'll be yours through all the years till the end of ) stringwidth  pop 72 add 
Xdup minhpos lt
X     {pop minhpos} if
Xdup /minhpos exch (G) stringwidth pop add def
X416 moveto
XCHORD_FONT setfont
X(G) show
XTEXT_FONT setfont
X72 405 moveto
X(I'll be yours through all the years till the end of time) show
X/minhpos 0 def
XTEXT_FONT setfont
X.9  setgray
X12  setlinewidth
Xnewpath
X70 377 moveto
X(Chorus ) stringwidth rlineto
Xstroke
X72 373 moveto
X0  setgray
X1 setlinewidth
X(Chorus) show
X/minhpos 0 def
X480 363 moveto
X72 303 moveto
X(A7) -1 0 2 0 2 0 1 0 dots
X132 303 moveto
X(Am7) -1 0 2 2 1 3 1 0 dots
X192 303 moveto
X(B7) 0 2 1 2 0 2 1 0 dots
X252 303 moveto
X(C) -1 3 2 0 1 0 1 0 dots
X312 303 moveto
X(Cm) -1 1 3 3 2 1 3 0 dots
X372 303 moveto
X(D7) -1 -1 0 2 1 2 1 0 dots
X432 303 moveto
X(Dm) -1 -1 0 2 3 1 1 0 dots
X492 303 moveto
X(E+) -1 -1 2 1 1 0 1 0 dots
X72 243 moveto
X(E7) 0 2 2 1 3 0 1 0 dots
X132 243 moveto
X(Em) 0 2 2 0 0 0 1 0 dots
X192 243 moveto
X(G) 3 2 0 0 0 3 1 0 dots
X252 243 moveto
X(G7) 3 2 0 0 0 1 1 0 dots
X1  setlinewidth
X0  setgray
Xnewpath
X72 36 10 sub moveto
X468 0 rlineto
Xstroke
Xpgsave restore
X% showpage
X%%EndPage: "1" 1
X%%Trailer
X%%Pages: 1 1
X%%EOF
X
X%%EndDocument
XFMENDEPSF
X45 71.75 558 738 R
X1 H
X0 Z
XN
XFMENDPAGE
X%%EndPage: "3" 3
X%%Page: "2" 3
X612 792 0 FMBEGINPAGE
X0 12 Q
X0 X
X0 K
X(Version 3.5) 72 748 T
X(-2-) 298.67 748 T
X(The Chord User Guide) 412.71 748 T
X72 63 540 63 2 L
X0.5 H
X2 Z
XN
X2 14 Q
X(An Example) 72 710.67 T
X1 F
X(This is an example of a \322source\323 \336le for) 72 689.67 T
X3 12 Q
X(CHORD) 299.32 689.67 T
X1 14 Q
X(, i.e. a \336le that is meant to be pro-) 343.29 689.67 T
X(cessed by) 72 673.67 T
X3 12 Q
X(CHORD) 129.51 673.67 T
X1 14 Q
X(.) 173.48 673.67 T
X4 12 Q
X({) 90 643 T
X5 F
X(title) 97.2 643 T
X4 F
X(:Love me tender}) 133.18 643 T
X({) 90 629 T
X5 F
X(subtitle) 97.2 629 T
X4 F
X(:Presley/Matson}) 154.76 629 T
X([G]Love me tender [A7]love me sweet [D7]Never let me [G]go) 90 601 T
X([G]You have made my [A7]life complete [D7]and I love you [G]so) 90 587 T
X({) 90 559 T
X5 F
X(start_of_chorus) 97.2 559 T
X4 F
X(}) 205.14 559 T
X([G]Love me [B7]tender [Em]love me [G7]true) 90 545 T
X([C]all my [Cm]dreams ful[G]f) 90 531 T
X(ill) 291.49 531 T
X([G]For [Dm6]my [E+]dar[E7]ling [A7]I love you) 90 517 T
X([D7]and I always [G]will [Am7] [D7]) 90 503 T
X({) 90 489 T
X5 F
X(end_of_chorus) 97.2 489 T
X4 F
X(}) 190.74 489 T
X-0.34 ([G]Love me tender [A7]love me long [D7]Take me to your [G]heart) 90 461 P
X-0.37 ([G]For it\325s there that [A7]I belong [D7]and we\325ll never [G]part) 90 447 P
X({) 90 419 T
X5 F
X(comment) 97.2 419 T
X4 F
X(:Chorus}) 147.57 419 T
X([G]Love me tender [A7]Love me dear [D7]Tell me you are [G]mine) 90 391 T
X-0.31 ([G]I\325ll be yours through [A7]all the years [D7]till the end of) 90 377 P
X([G]time) 90 363 T
X({) 90 335 T
X5 F
X(comment) 97.2 335 T
X4 F
X(:Chorus}) 147.57 335 T
X1 14 Q
X(Here are the important points about that \336le:) 72 303.67 T
X(It can be created using any text editor you like;) 108 287.67 T
X(All characters present in the ISO 8859-1 character set can be used.) 108 271.67 T
X(W) 72 239.67 T
X(e will explain the content of that \336le. But \336rst, let\325) 84.09 239.67 T
X(s look at the end result, on the) 363.94 239.67 T
X(next page.) 72 223.67 T
XFMENDPAGE
X%%EndPage: "2" 2
X%%Page: "1" 2
X612 792 0 FMBEGINPAGE
X0 12 Q
X0 X
X0 K
X(Version 3.5) 72 748 T
X(-1-) 298.67 748 T
X(The Chord User Guide) 412.71 748 T
X72 63 540 63 2 L
X0.5 H
X2 Z
XN
X2 18 Q
X(W) 173.85 708 T
X(elcome to the) 190.85 708 T
X3 12 Q
X(CHORD) 296.25 708 T
X2 18 Q
X( User Guide!) 340.22 708 T
X6 F
X(CHORD) 72 658.67 T
X1 14 Q
X( is a share-ware utility that was \336rst created by lazy guitarists who got) 127.77 658.67 T
X(tired of turning pages in the middle of the songs they liked.) 72 642.67 T
X3 12 Q
X(CHORD) 72 610.67 T
X1 14 Q
X( takes a \336le containing the lyrics and chords of a song and produces a Post-) 115.97 610.67 T
X(Script version of that song. The song has now the following attributes:) 72 594.67 T
X(T) 144 578.67 T
X(itles and sub-titles have been centered;) 152.06 578.67 T
X(The lyrics appear in the font and size of your choice;) 144 562.67 T
X(All chords name appear right above the right lyrics;) 144 546.67 T
X(All chords used in your song appear as grids at the bottom of the page.) 144 530.67 T
X-0.4 (Optionally) 72 498.67 P
X-0.4 (, you can also generate an index of your songs, have the pages numbered,) 130.95 498.67 P
X(have songs transposed up or down, print in 2-up or 4-up modes and insert tablature) 72 482.67 T
X(and comments) 72 466.67 T
X-0.5 (Y) 72 434.67 P
X-0.5 (ou have a great many options on the \336nal appearance of you songs. All of them are) 80.7 434.67 P
X(described in the section titled \322Options and Switches\323) 72 418.67 T
X(For now) 72 386.67 T
X(, please read on to better understand what) 118.12 386.67 T
X3 12 Q
X(CHORD) 353.99 386.67 T
X1 14 Q
X( can do for you.) 397.95 386.67 T
XFMENDPAGE
X%%EndPage: "1" 1
X%%Page: "0" 1
X612 792 0 FMBEGINPAGE
X0 12 Q
X0 X
X0 K
X(Version 3.5) 72 748 T
X(-0-) 298.67 748 T
X(The Chord User Guide) 412.71 748 T
X72 63 540 63 2 L
X0.5 H
X2 Z
XN
X63 54 549 774 R
X7 X
XV
X0 5 5 605 787 600 782 6 5 FMBEGINEPSF
X%%BeginDocument: /home/martin/wrk/chord-martin/cover.eps
X%!PS-Adobe-3.0 EPSF-3.0
X%%Title: A song
X%%Creator: Martin Leclerc & Mario Dorion
X%%Pages: (atend)
X%%BoundingBox: 5 5 605 787
X%%EndComments
X/inch {72 mul } def
X%  iso.ps  reencodeing of ISO 8859-1 8-bit french characters
X%
X/reencodedict 5 dict def
X/ReEncode
X  { reencodedict begin
X      /newencoding exch def
X      /newfontname exch def
X      /basefontname exch def
X
X      /basefontdict basefontname findfont def
X
X      /newfont basefontdict maxlength dict def
X
X      basefontdict
X      {  exch dup dup /FID ne exch /Encoding ne and
X	{ exch newfont 3 1 roll put }
X	{ pop pop }
X	ifelse
X      } forall
X      newfont /FontName newfontname put
X      newfont /Encoding newencoding put
X      newfontname newfont definefont pop
X      end
X   } def
X
X/ISO 256 array def
X
X0 1 255 { ISO exch /.notdef put } for
XISO
X
X  dup 8#040 /space put
X  dup 8#041 /exclam put
X  dup 8#042 /quotedbl put
X  dup 8#043 /numbersign put
X  dup 8#044 /dollar put
X  dup 8#045 /percent put
X  dup 8#046 /ampersand put
X  dup 8#047 /quotesingle put
X  dup 8#050 /parenleft put
X  dup 8#051 /parenright put
X  dup 8#052 /asterisk put
X  dup 8#053 /plus put
X  dup 8#054 /comma put
X  dup 8#055 /hyphen put
X  dup 8#056 /period put
X  dup 8#057 /slash put
X  dup 8#060 /zero put
X  dup 8#061 /one put
X  dup 8#062 /two put
X  dup 8#063 /three put
X  dup 8#064 /four put
X  dup 8#065 /five put
X  dup 8#066 /six put
X  dup 8#067 /seven put
X  dup 8#070 /eight put
X  dup 8#071 /nine put
X  dup 8#072 /colon put
X  dup 8#073 /semicolon put
X  dup 8#074 /less put
X  dup 8#075 /equal put
X  dup 8#076 /greater put
X  dup 8#077 /question put
X  dup 8#100 /at put
X  dup 8#101 /A put
X  dup 8#102 /B put
X  dup 8#103 /C put
X  dup 8#104 /D put
X  dup 8#105 /E put
X  dup 8#106 /F put
X  dup 8#107 /G put
X  dup 8#110 /H put
X  dup 8#111 /I put
X  dup 8#112 /J put
X  dup 8#113 /K put
X  dup 8#114 /L put
X  dup 8#115 /M put
X  dup 8#116 /N put
X  dup 8#117 /O put
X  dup 8#120 /P put
X  dup 8#121 /Q put
X  dup 8#122 /R put
X  dup 8#123 /S put
X  dup 8#124 /T put
X  dup 8#125 /U put
X  dup 8#126 /V put
X  dup 8#127 /W put
X  dup 8#130 /X put
X  dup 8#131 /Y put
X  dup 8#132 /Z put
X  dup 8#133 /bracketleft put
X  dup 8#134 /backslash put
X  dup 8#135 /bracketright put
X  dup 8#136 /asciicircum put
X  dup 8#137 /underscore put
X  dup 8#140 /grave put
X  dup 8#141 /a put
X  dup 8#142 /b put
X  dup 8#143 /c put
X  dup 8#144 /d put
X  dup 8#145 /e put
X  dup 8#146 /f put
X  dup 8#147 /g put
X  dup 8#150 /h put
X  dup 8#151 /i put
X  dup 8#152 /j put
X  dup 8#153 /k put
X  dup 8#154 /l put
X  dup 8#155 /m put
X  dup 8#156 /n put
X  dup 8#157 /o put
X  dup 8#160 /p put
X  dup 8#161 /q put
X  dup 8#162 /r put
X  dup 8#163 /s put
X  dup 8#164 /t put
X  dup 8#165 /u put
X  dup 8#166 /v put
X  dup 8#167 /w put
X  dup 8#170 /x put
X  dup 8#171 /y put
X  dup 8#172 /z put
X  dup 8#173 /braceleft put
X  dup 8#174 /bar put
X  dup 8#175 /braceright put
X  dup 8#176 /asciitilde put
X  dup 8#241 /exclamdown put
X  dup 8#242 /cent put
X  dup 8#243 /sterling put
X  dup 8#244 /currency put
X  dup 8#245 /yen put
X  dup 8#246 /bar put
X  dup 8#247 /section put
X  dup 8#250 /dieresis put
X  dup 8#251 /copyright put
X  dup 8#252 /ordfeminine put
X  dup 8#253 /guillemotleft put
X  dup 8#254 /.notdef put
X  dup 8#255 /endash put
X  dup 8#256 /registered put
X  dup 8#257 /tilde put
X  dup 8#260 /ring put
X  dup 8#261 /.notdef put
X  dup 8#262 /.notdef put
X  dup 8#263 /.notdef put
X  dup 8#264 /acute put
X  dup 8#265 /.notdef put
X  dup 8#266 /paragraph put
X  dup 8#267 /.notdef put
X  dup 8#270 /cedilla put
X  dup 8#271 /.notdef put
X  dup 8#272 /ordmasculine put
X  dup 8#273 /guillemotright put
X  dup 8#274 /.notdef put
X  dup 8#275 /circumflex put
X  dup 8#276 /dotlessi put
X  dup 8#277 /questiondown put
X  dup 8#300 /Agrave put
X  dup 8#301 /Aacute put
X  dup 8#302 /Acircumflex put
X  dup 8#303 /Atilde put
X  dup 8#304 /Adieresis put
X  dup 8#305 /Aring put
X  dup 8#306 /AE put
X  dup 8#307 /Ccedilla put
X  dup 8#310 /Egrave put
X  dup 8#311 /Eacute put
X  dup 8#312 /Ecircumflex put
X  dup 8#313 /Edieresis put
X  dup 8#314 /Igrave put
X  dup 8#315 /Iacute put
X  dup 8#316 /Icircumflex put
X  dup 8#317 /Idieresis put
X  dup 8#320 /.notdef put
X  dup 8#321 /Ntilde put
X  dup 8#322 /Ograve put
X  dup 8#323 /Oacute put
X  dup 8#324 /Ocircumflex put
X  dup 8#325 /Otilde put
X  dup 8#326 /Odieresis put
X  dup 8#327 /.notdef put
X  dup 8#330 /Oslash put
X  dup 8#331 /Ugrave put
X  dup 8#332 /Uacute put
X  dup 8#333 /Ucircumflex put
X  dup 8#334 /Udieresis put
X  dup 8#335 /.notdef put
X  dup 8#336 /.notdef put
X  dup 8#337 /germandbls put
X  dup 8#340 /agrave put
X  dup 8#341 /aacute put
X  dup 8#342 /acircumflex put
X  dup 8#343 /atilde put
X  dup 8#344 /adieresis put
X  dup 8#345 /aring put
X  dup 8#346 /ae put
X  dup 8#347 /ccedilla put
X  dup 8#350 /egrave put
X  dup 8#351 /eacute put
X  dup 8#352 /ecircumflex put
X  dup 8#353 /edieresis put
X  dup 8#354 /igrave put
X  dup 8#355 /iacute put
X  dup 8#356 /icircumflex put
X  dup 8#357 /idieresis put
X  dup 8#360 /.notdef put
X  dup 8#361 /ntilde put
X  dup 8#362 /ograve put
X  dup 8#363 /oacute put
X  dup 8#364 /ocircumflex put
X  dup 8#365 /otilde put
X  dup 8#366 /odieresis put
X  dup 8#367 /.notdef put
X  dup 8#370 /oslash put
X  dup 8#371 /ugrave put
X  dup 8#372 /uacute put
X  dup 8#373 /ucircumflex put
X  dup 8#374 /udieresis put
X  dup 8#375 /ydieresis put
X  dup 8#376 /.notdef put
X  pop
X
X
X/CHORD_FONT { /Helvetica-Oblique findfont 9 scalefont } def
X/Helvetica-Oblique /Helvetica-Oblique ISO ReEncode
X/TEXT_FONT { /Times-Roman findfont 12 scalefont } def
X/Times-Roman /Times-Roman ISO ReEncode
X/MONO_FONT { /Courier findfont 10 scalefont } def
X/Courier /Courier ISO ReEncode
X% routines for the drawing of the chords
X/grid { 
X	gsave currentpoint
X	6 { 0 cagesizeX rlineto incr cagesize neg incr add rmoveto } repeat
X	moveto
X	5 { cagesize 0 rlineto 0 cagesize sub incr rmoveto } repeat
X	1 setlinewidth stroke grestore
X	gsave
X	0 cagesizeX rmoveto cagesize 0 rlineto
X	cagesize 30 div setlinewidth stroke
X	grestore	
X} def
X
X/dot {
X	gsave
X	/fret exch def /str exch def
X	/x 5  fret abs sub incr mul half-incr sub def
X	/y 6 str sub incr mul def
X	y x rmoveto
X	fret -1 eq
X	  {
X	  0 incr rmoveto
X	  check neg  check neg rmoveto
X	  check check rlineto check check rlineto
X	  check neg check neg rmoveto check neg check rmoveto
X  	  check check neg rlineto check check neg rlineto
X	  cagesize 50 div setlinewidth stroke
X	  }
X	  {  fret 0 ne
X	    { currentpoint dot-size 0 360 arc fill}
X	    { currentpoint
X	      check 0 360 newpath arc
X	      cagesize 50 div setlinewidth
X	    }
X	    ifelse 
X	    stroke 
X	  }
X	  ifelse
X	grestore
X} def	
X
X/dots {
X	grid
X	/origin exch def
X	/fret-displ exch def
X	  1 1 6
X	  {
X	    /str exch def
X	    /fret exch def
X	    fret -2 ne {str fret dot} if
X	  } for
X
X	fret-displ 1 ne
X	{
X    	  gsave displ-font setfont
X    	  0 cagesize fret-displ 10 ge {1.75} {3} ifelse div sub
X	  cagesizeX incr sub rmoveto
X    	  /char 6 string def fret-displ char cvs show grestore 
X	} if
X
X	/chord-name exch def
X	gsave displ-font setfont
X	0 cagesizeX cagesizeX 15 div add dot-size 3 mul add rmoveto
X	chord-name stringwidth pop 2 div cagesize 2 div exch sub 0 rmoveto
X	chord-name show
X	0 cagesize 10 div rmoveto
X	origin 1 eq { (*) show} if
X	origin 2 eq { (**) show} if
X	chord-font setfont grestore
X} def
X
X/cagesize 30 def
X/incr cagesize 5 div def
X/cagesizeX incr 4 mul def
X/half-incr incr 2 div def
X/dot-size cagesize 15 div def
X/check cagesize 20 div def
X
X/chord-font /Times-Roman findfont cagesize 5 div scalefont def
X/displ-font /Times-Roman findfont cagesize 3 div scalefont def
X% end of the routines for the drawing of the chords
X
X%%EndProlog
X%%Page: "1" 1
X%%BeginPageSetup
X/pgsave save def
X1.000000 1.000000 scale
X0.000000 rotate
X%%EndPageSetup
X0.75 setgray
X72 696 moveto
X(BaddE/F#) 2 -1 4 4 0 0 1 0 dots
X132 696 moveto
X(Bdim) -1 -1 0 1 0 1 1 0 dots
X192 696 moveto
X(Bsus) -1 -1 3 3 4 1 2 0 dots
X252 696 moveto
X(Bsus4) -1 -1 3 3 4 1 2 0 dots
X312 696 moveto
X(Bm) -1 2 4 4 3 2 1 0 dots
X372 696 moveto
X(Bm\(maj7\)) -1 1 4 4 3 -1 1 0 dots
X432 696 moveto
X(Bm\(sus9\)) -1 -1 4 4 2 2 1 0 dots
X492 696 moveto
X(Bm6) -1 -1 4 4 3 4 1 0 dots
X72 636 moveto
X(Bm7) -1 1 3 1 2 1 2 0 dots
X132 636 moveto
X(Bm7b5) 1 2 4 2 3 1 1 0 dots
X192 636 moveto
X(Bmaj) -1 2 4 3 4 -1 1 0 dots
X252 636 moveto
X(Bmaj7) -1 2 4 3 4 -1 1 0 dots
X312 636 moveto
X(Bmin) -1 2 4 4 3 2 1 0 dots
X372 636 moveto
X(Bmsus9) -1 -1 4 4 2 2 1 0 dots
X432 636 moveto
X(Bmmaj7) -1 1 4 4 3 -1 1 0 dots
X492 636 moveto
X(C) -1 3 2 0 1 0 1 0 dots
X72 576 moveto
X(C\(add9\)) -1 3 2 0 3 0 1 0 dots
X132 576 moveto
X(C\(addD\)) -1 3 2 0 3 0 1 0 dots
X192 576 moveto
X(C+) -1 -1 2 1 1 0 1 0 dots
X252 576 moveto
X(C/B) -1 2 2 0 1 0 1 0 dots
X312 576 moveto
X(C11) -1 1 3 1 4 1 3 0 dots
X372 576 moveto
X(C4) -1 -1 3 0 1 3 1 0 dots
X432 576 moveto
X(C6) -1 0 2 2 1 3 1 0 dots
X492 576 moveto
X(C7) 0 3 2 3 1 0 1 0 dots
X72 516 moveto
X(C9) 1 3 1 2 1 3 8 0 dots
X132 516 moveto
X(C9\(11\)) -1 3 3 3 3 -1 1 0 dots
X192 516 moveto
X(Cadd2/B) -1 2 0 0 1 0 1 0 dots
X252 516 moveto
X(Cadd9) -1 3 2 0 3 0 1 0 dots
X312 516 moveto
X(CaddD) -1 3 2 0 3 0 1 0 dots
X372 516 moveto
X(Cdim) -1 -1 1 2 1 2 1 0 dots
X432 516 moveto
X(Csus) -1 -1 3 0 1 3 1 0 dots
X492 516 moveto
X(Csus2) -1 3 0 0 1 -1 1 0 dots
X72 456 moveto
X(Csus4) -1 -1 3 0 1 3 1 0 dots
X132 456 moveto
X(Csus9) -1 -1 4 1 2 4 7 0 dots
X192 456 moveto
X(Cm) -1 1 3 3 2 1 3 0 dots
X252 456 moveto
X(Cm11) -1 1 3 1 4 -1 3 0 dots
X312 456 moveto
X(Cm7) -1 1 3 1 2 1 3 0 dots
X372 456 moveto
X(Cmaj) 0 3 2 0 1 0 1 0 dots
X432 456 moveto
X(Cmaj7) -1 3 2 0 0 0 1 0 dots
X492 456 moveto
X(Cmin) -1 1 3 3 2 1 3 0 dots
X72 396 moveto
X(C#) -1 -1 3 1 2 1 1 0 dots
X132 396 moveto
X(C#\(add9\)) -1 1 3 3 1 1 4 0 dots
X192 396 moveto
X(C#+) -1 -1 3 2 2 1 1 0 dots
X252 396 moveto
X(C#4) -1 -1 3 3 4 1 4 0 dots
X312 396 moveto
X(C#7) -1 -1 3 4 2 4 1 0 dots
X372 396 moveto
X(C#7\(b5\)) -1 2 1 2 1 2 1 0 dots
X432 396 moveto
X(C#add9) -1 1 3 3 1 1 4 0 dots
X492 396 moveto
X(C#dim) -1 -1 2 3 2 3 1 0 dots
X72 336 moveto
X(C#sus) -1 -1 3 3 4 1 4 0 dots
X132 336 moveto
X(C#sus4) -1 -1 3 3 4 1 4 0 dots
X192 336 moveto
X(C#m) -1 -1 2 1 2 0 1 0 dots
X252 336 moveto
X(C#m7) -1 -1 2 4 2 4 1 0 dots
X312 336 moveto
X(C#maj) -1 4 3 1 1 1 1 0 dots
X372 336 moveto
X(C#maj7) -1 4 3 1 1 1 1 0 dots
X432 336 moveto
X(C#min) -1 -1 2 1 2 0 1 0 dots
X492 336 moveto
X(Db) -1 -1 3 1 2 1 1 0 dots
X72 276 moveto
X(Db+) -1 -1 3 2 2 1 1 0 dots
X132 276 moveto
X(Db7) -1 -1 3 4 2 4 1 0 dots
X192 276 moveto
X(Dbdim) -1 -1 2 3 2 3 1 0 dots
X252 276 moveto
X(Dbsus) -1 -1 3 3 4 1 4 0 dots
X312 276 moveto
X(Dbsus4) -1 -1 3 3 4 1 4 0 dots
X372 276 moveto
X(Dbm) -1 -1 2 1 2 0 1 0 dots
X432 276 moveto
X(Dbm7) -1 -1 2 4 2 4 1 0 dots
X492 276 moveto
X(Dbmaj) -1 -1 3 1 2 1 1 0 dots
X72 216 moveto
X(Dbmaj7) -1 4 3 1 1 1 1 0 dots
X132 216 moveto
X(Dbmin) -1 -1 2 1 2 0 1 0 dots
X192 216 moveto
X(D) -1 -1 0 2 3 2 1 0 dots
X252 216 moveto
X(D\(add9\)) 0 0 0 2 3 2 1 0 dots
X312 216 moveto
X(D+) -1 -1 0 3 3 2 1 0 dots
X372 216 moveto
X(D/A) -1 0 0 2 3 2 1 0 dots
X432 216 moveto
X(D/B) -1 2 0 2 3 2 1 0 dots
X492 216 moveto
X(D/C) -1 3 0 2 3 2 1 0 dots
X72 156 moveto
X(D/C#) -1 4 0 2 3 2 1 0 dots
X132 156 moveto
X(D/E) -1 1 1 1 1 -1 7 0 dots
X192 156 moveto
X(D/G) 3 -1 0 2 3 2 1 0 dots
X252 156 moveto
X(D11) 3 0 0 2 1 0 1 0 dots
X312 156 moveto
X(D4) -1 -1 0 2 3 3 1 0 dots
X372 156 moveto
X(D5/E) 0 1 1 1 -1 -1 7 0 dots
X432 156 moveto
X(D6) -1 0 0 2 0 2 1 0 dots
X492 156 moveto
X(D7) -1 -1 0 2 1 2 1 0 dots
X72 96 moveto
X(D7#9) -1 2 1 2 3 3 4 0 dots
X132 96 moveto
X(D7\(#9\)) -1 2 1 2 3 3 4 0 dots
X192 96 moveto
X(D7sus2) -1 0 0 2 1 0 1 0 dots
X252 96 moveto
X(D7sus4) -1 0 0 2 1 3 1 0 dots
X312 96 moveto
X(D9) 1 3 1 2 1 3 10 0 dots
X372 96 moveto
X(D9\(add6\)) 1 3 3 2 0 0 10 0 dots
X432 96 moveto
X(D9add6) 1 3 3 2 0 0 10 0 dots
X492 96 moveto
X(Dadd9) 0 0 0 2 3 2 1 0 dots
X72 36 moveto
X(Ddim) -1 -1 0 1 0 1 1 0 dots
X132 36 moveto
X(Dsus) -1 -1 0 2 3 3 1 0 dots
X192 36 moveto
X(Dsus2) 0 0 0 2 3 0 1 0 dots
X252 36 moveto
X(Dsus4) -1 -1 0 2 3 3 1 0 dots
X312 36 moveto
X(Dm) -1 -1 0 2 3 1 1 0 dots
X372 36 moveto
X(Dm\(#5\)) -1 -1 0 3 3 2 1 0 dots
X432 36 moveto
X(Dm\(#7\)) -1 -1 0 2 2 1 1 0 dots
X492 36 moveto
X(Dm/A) -1 0 0 2 3 1 1 0 dots
X1  setlinewidth
X% newpath
X% 72 36 10 sub moveto
X% 468 0 rlineto
X% stroke
X% (CHORD CHART) dup stringwidth pop 2 div
X% 612 2 div exch sub 36 3 div moveto
X% show
Xpgsave restore
Xshowpage
X%%EndPage: "1" 1
X%%Trailer
X%%Pages: 1 1
X%%EOF
X
X%%EndDocument
XFMENDEPSF
X171 387 423 621 R
XV
X7 36 Q
X0 X
X(The CHORD) 185.05 583 T
X(User Guide) 195.13 545 T
X8 18 Q
X(Martin Lecler) 233.79 503 T
X(c) 350.85 503 T
X(Mario Dorion) 239.07 483 T
X8 14 Q
X(V) 258.46 445.67 T
X(ersion 3.5) 267.25 445.67 T
X(November1993) 245.65 429.67 T
XFMENDPAGE
X%%EndPage: "0" 0
X%%Trailer
X%%BoundingBox: 0 0 612 792
X%%Pages: 16 -1
X%%DocumentFonts: Helvetica-Bold
X%%+ Times-Roman
X%%+ Times-Bold
X%%+ Helvetica
X%%+ Courier
X%%+ Courier-Bold
X%%+ ZapfChancery-MediumItalic
X%%+ Bookman-Demi
X%%+ Bookman-Light
END_OF_FILE
  if test 50938 -ne `wc -c <'chord_guide.ps.B'`; then
    echo shar: \"'chord_guide.ps.B'\" unpacked with wrong size!
  elif test -f 'chord_guide.ps.A'; then
    echo shar: Combining  \"'chord_guide.ps'\" \(104651 characters\)
    cat 'chord_guide.ps.A' 'chord_guide.ps.B' > 'chord_guide.ps'
    if test 104651 -ne `wc -c <'chord_guide.ps'`; then
      echo shar: \"'chord_guide.ps'\" combined with wrong size!
    else
      rm chord_guide.ps.A chord_guide.ps.B
    fi
  fi
  # end of 'chord_guide.ps.B'
fi
if test ! -d 'songs' ; then
    echo shar: Creating directory \"'songs'\"
    mkdir 'songs'
fi
echo shar: End of archive 1 \(of 5\).
cp /dev/null ark1isdone
MISSING=""
for I in 1 2 3 4 5 ; do
    if test ! -f ark${I}isdone ; then
	MISSING="${MISSING} ${I}"
    fi
done
if test "${MISSING}" = "" ; then
    echo You have unpacked all 5 archives.
    rm -f ark[1-9]isdone
else
    echo You still must unpack the following archives:
    echo "        " ${MISSING}
fi
exit 0
exit 0 # Just in case...
