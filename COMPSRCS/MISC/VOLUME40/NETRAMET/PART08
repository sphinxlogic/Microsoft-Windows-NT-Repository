Newsgroups: comp.sources.misc
From: nevil@ccu1.aukuni.ac.nz (J Nevil Brownlee)
Subject: REPOST: v40i096: netramet - Network Traffic Accounting Meter, Part08/25
Message-ID: <1993Nov7.225809.14922@sparky.sterling.com>
X-Md4-Signature: 3d6f48caf19ae578bf318488dd645f03
Sender: kent@sparky.sterling.com (Kent Landfield)
Organization: Sterling Software
Date: Sun, 7 Nov 1993 22:58:09 GMT
Approved: kent@sparky.sterling.com

Submitted-by: nevil@ccu1.aukuni.ac.nz (J Nevil Brownlee)
Posting-number: Volume 40, Issue 96
Archive-name: netramet/part08
Environment: INET, UNIX, DOS

#! /bin/sh
# This is a shell archive.  Remove anything before this line, then feed it
# into a shell via "sh file" or similar.  To overwrite existing files,
# type "sh file -c".
# Contents:  netramet/doc/NeTraMet/NeTraMet.man.ps.D
#   netramet/doc/snmp/exclude netramet/src/apps/snmpnetstat/route.c
# Wrapped by kent@sparky on Tue Nov  2 18:17:06 1993
PATH=/bin:/usr/bin:/usr/ucb:/usr/local/bin:/usr/lbin:$PATH ; export PATH
echo If this archive is complete, you will see the following message:
echo '          "shar: End of archive 8 (of 25)."'
if test -f 'netramet/doc/NeTraMet/NeTraMet.man.ps.D' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'netramet/doc/NeTraMet/NeTraMet.man.ps.D'\"
else
  echo shar: Extracting \"'netramet/doc/NeTraMet/NeTraMet.man.ps.D'\" \(48329 characters\)
  sed "s/^X//" >'netramet/doc/NeTraMet/NeTraMet.man.ps.D' <<'END_OF_FILE'
X2003 3186 78 (      ) 78 SB
X32 0 0 46 46 0 0 0 43 /Helvetica-Oblique /font19 ANSIFont font
X271 3265 182 (10/15/93) 182 SB
X1102 3265 43 (-- ) 43 SB
X1145 3265 52 (18) 52 SB
X1197 3265 43 ( --) 43 SB
X1866 3265 205 (NeTraMet) 205 SB
XEJ RS
X%%PageTrailer
XSS
X0 0 18 13 783 1169 300 SM
X32 0 0 46 46 0 0 0 43 /Helvetica /font12 ANSIFont font
X0 0 0 fC
X271 256 1826 (This rule set meters traffic on a busy Local Area Network.  It attempts to tally each of four) 1826 SB
X271 310 1863 (protocols by detail type so as to measure the amount of traffic flowing for each of these.  In) 1863 SB
X271 364 1893 (addition data transport flows are tallied by peer address pairs so as to determine which pairs) 1893 SB
X271 418 1308 (of hosts generate the greatest proportion of total network traffic.) 1308 SB
X32 0 0 58 58 0 0 0 54 /Helvetica-Bold /font13 ANSIFont font
X271 555 32 (6) 34 SB
X305 555 16 (.) 18 SB
X360 555 42 (N) 44 SB
X404 555 32 (e) 34 SB
X438 555 48 (M) 50 SB
X488 555 32 (a) 34 SB
X522 555 42 (C) 44 SB
X566 555 16 ( ) 18 SB
X584 555 42 (U) 44 SB
X628 555 32 (s) 34 SB
X662 555 32 (e) 34 SB
X696 555 23 (r) 25 SB
X721 555 32 (s) 34 SB
X755 555 14 (') 16 SB
X771 555 16 ( ) 18 SB
X789 555 48 (M) 50 SB
X839 555 32 (a) 34 SB
X873 555 35 (n) 37 SB
X910 555 35 (u) 37 SB
X947 555 32 (a) 34 SB
X981 555 16 (l) 18 SB
X32 0 0 50 50 0 0 0 47 /Helvetica-Bold /font13 ANSIFont font
X271 655 84 (6.1.) 84 SB
X413 655 528 (Overview of NeTraMet) 528 SB
X32 0 0 46 46 0 0 0 43 /Helvetica /font12 ANSIFont font
X271 738 1822 (NeMaC is a combined manager and collector for the NeTraMet meter.  It is a simple Unix) 1822 SB
X271 792 1812 (program, written in a simple and straightforward way.  It is intended to provide control for) 1812 SB
X271 846 1714 (NeTraMet, so as to make the initial NeTraMet implementation a useful and effective) 1714 SB
X271 900 1842 (monitoring tool.  Later versions will make the coding more elegant, add more features and) 1842 SB
X271 954 127 (so on.) 127 SB
X271 1033 1767 (If only one meter is to be controlled, all the arguments can be placed on the command) 1767 SB
X271 1087 1833 (line, which is useful when testing new meters and/or rule files.  If several meters are to be) 1833 SB
X271 1141 1797 (controlled, default values for the options can be specified on the command line, and the) 1797 SB
X271 1195 1722 (particular parameter values required for each meter can be specified by records in a) 1722 SB
X271 1249 351 (configuration file.) 351 SB
X271 1328 1828 (While NeMaC is running it produces a log file, recording any unusual events observed for) 1828 SB
X271 1382 1856 (any of the meters being controlled.  The name of this log file is NeMaC.log.nnn, where nnn) 1856 SB
X271 1436 1678 (is a sequence number starting from 001.  When NeMaC starts it scans the current) 1678 SB
X271 1490 1829 (directory for NeMaC log files, then uses the next available sequence number.  In this way) 1829 SB
X271 1544 1281 (the log files are preserved through successive runs of NeMaC.) 1281 SB
X271 1623 1835 (In the same way, when NeMaC starts controlling a meter it opens a 'flows' file.  The name) 1835 SB
X271 1677 1848 (of this file is meter-name.flows.nnn.  'meter-name' is the name used to reach the meter via) 1848 SB
X271 1731 1829 (IP; it may be an IP address \(e.g. 130.216.234.234\) or a host name \(provided NeMaC can) 1829 SB
X271 1785 1851 (get its address from a nameserver\).  For example the third run of NeMaC controlling meter) 1851 SB
X271 1839 1615 (130.216.234.234 would produce a flows file called 130.216.234.234.flows.003.) 1615 SB
X32 0 0 50 50 0 0 0 47 /Helvetica-Bold /font13 ANSIFont font
X271 1926 84 (6.2.) 84 SB
X413 1926 568 (Command Line Options) 568 SB
X32 0 0 46 46 0 0 0 43 /Helvetica /font12 ANSIFont font
X271 2009 1716 (NeMaC's command line options are specified as usual, i.e. each option starts with a) 1716 SB
X271 2063 1699 (hyphen, a letter indicating the options, then any parameters required by the option.) 1699 SB
X271 2142 336 (The options are:) 336 SB
X32 0 0 46 46 0 0 0 43 /Helvetica-Bold /font13 ANSIFont font
X330 2222 151 (-c  nnn) 151 SB
X32 0 0 46 46 0 0 0 43 /Helvetica /font12 ANSIFont font
X596 2222 1435 (Specifies the required collection interval in seconds.  If nnn is zero the) 1435 SB
X596 2276 1335 (flow data will be collected once, then NeMaC will exit; this can be) 1335 SB
X596 2330 1403 (useful, for example for changing the rule set back to its default value) 1403 SB
X596 2384 703 (of 1 if no flows are to be collected.) 703 SB
X32 0 0 46 46 0 0 0 43 /Helvetica-Bold /font13 ANSIFont font
X330 2464 192 (-f  cfgfile) 192 SB
X32 0 0 46 46 0 0 0 43 /Helvetica /font12 ANSIFont font
X596 2464 1437 (Gives the name of NeMaC's configuration file, i.e. the file it will read to) 1437 SB
X596 2518 1439 (determine which meters will be managed and have flow data collected) 1439 SB
X596 2572 881 (from them.  Its default name is NeMaC.cfg.) 881 SB
X32 0 0 46 46 0 0 0 43 /Helvetica-Bold /font13 ANSIFont font
X330 2652 28 (-l) 28 SB
X32 0 0 46 46 0 0 0 43 /Helvetica /font12 ANSIFont font
X596 2652 1262 (Requests NeMaC to list the rule file\(s\) as they are processed.) 1262 SB
X32 0 0 46 46 0 0 0 43 /Helvetica-Bold /font13 ANSIFont font
X330 2732 211 (-r  rulefile) 211 SB
X32 0 0 46 46 0 0 0 43 /Helvetica /font12 ANSIFont font
X596 2732 1353 (Gives the name of a rule file to be read and downloaded to one or) 1353 SB
X596 2786 1245 (more meters.  Configuration file records may override this for) 1245 SB
X596 2840 360 (individual meters.) 360 SB
X32 0 0 46 46 0 0 0 43 /Helvetica-Bold /font13 ANSIFont font
X330 2920 41 (-s) 41 SB
X32 0 0 46 46 0 0 0 43 /Helvetica /font12 ANSIFont font
X596 2920 1370 (Tells NeMaC that the rule file is to be read and checked for syntax,) 1370 SB
X596 2974 642 (but not downloaded to a meter.) 642 SB
X32 0 0 46 46 1 0 0 43 /Helvetica /font12 ANSIFont font
X271 3186 416 (                                ) 416 SB
X687 3186 416 (                                ) 416 SB
X1103 3186 78 (      ) 78 SB
X1171 3186 416 (                                ) 416 SB
X1587 3186 416 (                                ) 416 SB
X2003 3186 78 (      ) 78 SB
X32 0 0 46 46 0 0 0 43 /Helvetica-Oblique /font19 ANSIFont font
X271 3265 182 (10/15/93) 182 SB
X1102 3265 43 (-- ) 43 SB
X1145 3265 52 (19) 52 SB
X1197 3265 43 ( --) 43 SB
X1866 3265 205 (NeTraMet) 205 SB
XEJ RS
X%%PageTrailer
XSS
X0 0 18 13 783 1169 300 SM
X32 0 0 46 46 0 0 0 43 /Helvetica-Bold /font13 ANSIFont font
X0 0 0 fC
X330 257 30 (-t) 30 SB
X32 0 0 46 46 0 0 0 43 /Helvetica /font12 ANSIFont font
X596 257 1328 (This option is for testing - it provides extra diagnostic output from) 1328 SB
X596 311 169 (NeMaC.) 169 SB
X32 0 0 46 46 0 0 0 43 /Helvetica-Bold /font13 ANSIFont font
X330 391 41 (-v) 41 SB
X32 0 0 46 46 0 0 0 43 /Helvetica /font12 ANSIFont font
X596 391 1353 (Asks NeMaC to run in 'verbose' mode.  This produces a display of) 1353 SB
X596 445 1395 (meter status information on the screen at each collection from every) 1395 SB
X596 499 131 (meter.) 131 SB
X271 578 1620 (Following the options, the name of a meter and its write SNMP community may) 1620 SB
X271 632 1739 (appear on the command line.  In this case, NeMaC will begin managing the specified) 1739 SB
X271 686 1670 (meter.  If NeMaC can find a configuration file, the meter information in that file will) 1670 SB
X271 740 836 (override any given on the command line.) 836 SB
X271 819 257 (For example) 257 SB
X32 0 0 46 46 0 0 0 36 /Courier /font0 ANSIFont font
X389 898 1344 (NeMaC -c120 -r rules.sample 130.216.234.237 test) 1344 SB
X32 0 0 46 46 0 0 0 43 /Helvetica /font12 ANSIFont font
X271 972 1669 (would cause NeMaC to begin managing meter 130.216.234.237 with write SNMP) 1669 SB
X271 1026 1693 (community 'test'.  The rule file 'rules.sample' would be read and downloaded to the) 1693 SB
X271 1080 1748 (meter, and that meter's flow data would be collected every two minutes and written to) 1748 SB
X271 1134 1727 (a file called 130.216.234.237.flows.00x, where 00x was the next available sequence) 1727 SB
X271 1188 170 (number.) 170 SB
X271 1267 119 (Again) 119 SB
X32 0 0 46 46 0 0 0 36 /Courier /font0 ANSIFont font
X389 1346 1260 (NeMaC -s -l -r rules.special > syntax.special) 1260 SB
X32 0 0 46 46 0 0 0 43 /Helvetica /font12 ANSIFont font
X271 1420 1762 (would cause NeMaC to perform a syntax check on the rule file 'rules.special,' writing a) 1762 SB
X271 1474 1715 (listing of the file during the syntax cheak.  Output from this operation is directed to a) 1715 SB
X271 1528 920 (file called 'syntax.special' for later inspection.) 920 SB
X32 0 0 50 50 0 0 0 47 /Helvetica-Bold /font13 ANSIFont font
X271 1615 84 (6.3.) 84 SB
X413 1615 616 (Configuration File Format) 616 SB
X32 0 0 46 46 0 0 0 43 /Helvetica /font12 ANSIFont font
X271 1698 1789 (The name of the configuration file is specified by the -f command line option \(above\).  If) 1789 SB
X271 1752 1795 (this option is not used, 'NeMaC.cfg' is used as the default name.  If NeMaC can find the) 1795 SB
X271 1806 1858 (configuration file it will read it and start controlling meter\(s\) as specified in the configuration) 1858 SB
X271 1860 1830 (records;  otherwise it assumes that only one meter is to be controlled, and that all options) 1830 SB
X271 1914 720 (are specified on the command line.) 720 SB
X271 1993 1399 (Each record in a configuration file may contain the following options:) 1399 SB
X32 0 0 46 46 0 0 0 43 /Helvetica-Bold /font13 ANSIFont font
X330 2073 134 (-g sss) 134 SB
X32 0 0 46 46 0 0 0 43 /Helvetica /font12 ANSIFont font
X566 2073 994 (Specifies the meter's garbage collection interval.) 994 SB
X32 0 0 46 46 0 0 0 43 /Helvetica-Bold /font13 ANSIFont font
X330 2153 112 (-h pp) 112 SB
X32 0 0 46 46 0 0 0 43 /Helvetica /font12 ANSIFont font
X566 2153 356 (Sets NeTraMet's ) 356 SB
X32 0 0 46 46 0 0 0 43 /Helvetica-Oblique /font19 ANSIFont font
X922 2153 320 (HighWaterMark) 320 SB
X32 0 0 46 46 0 0 0 43 /Helvetica /font12 ANSIFont font
X1242 2153 768 ( as a percentage of the available flow) 768 SB
X566 2207 599 (space.  Default value is 85%.) 599 SB
X32 0 0 46 46 0 0 0 43 /Helvetica-Bold /font13 ANSIFont font
X330 2287 119 (-i sss) 119 SB
X32 0 0 46 46 0 0 0 43 /Helvetica /font12 ANSIFont font
X566 2287 442 (Specifies the meter's ) 442 SB
X32 0 0 46 46 0 0 0 43 /Helvetica-Oblique /font19 ANSIFont font
X1008 2287 347 (InactivityTimeout) 347 SB
X32 0 0 46 46 0 0 0 43 /Helvetica /font12 ANSIFont font
X1355 2287 583 ( interval in seconds.  Default) 583 SB
X566 2341 447 (value is 600 seconds.) 447 SB
X32 0 0 46 46 0 0 0 43 /Helvetica-Bold /font13 ANSIFont font
X330 2421 198 (-r rulefile) 198 SB
X32 0 0 46 46 0 0 0 43 /Helvetica /font12 ANSIFont font
X566 2421 1144 (Gives the name of the rule file to be used for this meter.) 1144 SB
X301 2500 1633 (Following the options, the name of a meter and its write SNMP community must) 1633 SB
X301 2554 724 (appear on the configuration record.) 724 SB
X32 0 0 58 58 0 0 0 54 /Helvetica-Bold /font13 ANSIFont font
X271 2691 32 (7) 34 SB
X305 2691 16 (.) 18 SB
X360 2691 42 (N) 44 SB
X404 2691 32 (e) 34 SB
X438 2691 35 (T) 37 SB
X475 2691 23 (r) 25 SB
X500 2691 32 (a) 34 SB
X534 2691 48 (M) 50 SB
X584 2691 32 (e) 34 SB
X618 2691 19 (t) 21 SB
X639 2691 16 ( ) 18 SB
X657 2691 42 (U) 44 SB
X701 2691 32 (s) 34 SB
X735 2691 32 (e) 34 SB
X769 2691 23 (r) 25 SB
X794 2691 32 (s) 34 SB
X828 2691 14 (') 16 SB
X844 2691 16 ( ) 18 SB
X862 2691 48 (M) 50 SB
X912 2691 32 (a) 34 SB
X946 2691 35 (n) 37 SB
X983 2691 35 (u) 37 SB
X1020 2691 32 (a) 34 SB
X1054 2691 16 (l) 18 SB
X32 0 0 50 50 0 0 0 47 /Helvetica-Bold /font13 ANSIFont font
X271 2791 84 (7.1.) 84 SB
X413 2791 568 (Command Line Options) 568 SB
X32 0 0 46 46 0 0 0 43 /Helvetica /font12 ANSIFont font
X271 2874 1701 (NeTraMet is started from the command line like any other program.  Command line) 1701 SB
X271 2928 1838 (options are specified in a Unix-like way, i.e. each option starts with a hyphen, then a letter) 1838 SB
X271 2982 1365 (indicating the options, then any parameters required by the option.) 1365 SB
X32 0 0 46 46 1 0 0 43 /Helvetica /font12 ANSIFont font
X271 3186 416 (                                ) 416 SB
X687 3186 416 (                                ) 416 SB
X1103 3186 78 (      ) 78 SB
X1171 3186 416 (                                ) 416 SB
X1587 3186 416 (                                ) 416 SB
X2003 3186 78 (      ) 78 SB
X32 0 0 46 46 0 0 0 43 /Helvetica-Oblique /font19 ANSIFont font
X271 3265 182 (10/15/93) 182 SB
X1102 3265 43 (-- ) 43 SB
X1145 3265 52 (20) 52 SB
X1197 3265 43 ( --) 43 SB
X1866 3265 205 (NeTraMet) 205 SB
XEJ RS
X%%PageTrailer
XSS
X0 0 18 13 783 1169 300 SM
X32 0 0 46 46 0 0 0 43 /Helvetica /font12 ANSIFont font
X0 0 0 fC
X271 256 336 (The options are:) 336 SB
X32 0 0 46 46 0 0 0 43 /Helvetica-Bold /font13 ANSIFont font
X330 336 165 (-w  wsc) 165 SB
X32 0 0 46 46 0 0 0 43 /Helvetica /font12 ANSIFont font
X537 336 1289 (Specifies that NeTraMet's write SNMP community is to be wsc.) 1289 SB
X537 390 596 (The default for this is private.) 596 SB
X32 0 0 46 46 0 0 0 43 /Helvetica-Bold /font13 ANSIFont font
X330 470 129 (-r  rsc) 129 SB
X32 0 0 46 46 0 0 0 43 /Helvetica /font12 ANSIFont font
X537 470 1349 (Specifies a read SNMP community for NeTraMet.  Up to four read) 1349 SB
X537 524 633 (communities may be specified.) 633 SB
X32 0 0 46 46 0 0 0 43 /Helvetica-Bold /font13 ANSIFont font
X330 604 41 (-k) 41 SB
X32 0 0 46 46 0 0 0 43 /Helvetica /font12 ANSIFont font
X537 604 1464 (Disables the keyboard.  If your PC has a BIOS which will start without a) 1464 SB
X537 658 1317 (keyboard connected, use this option to tell NeTraMet there is no) 1317 SB
X537 712 1474 (keyboard.  If you are running NeTraMet as a background process under) 1474 SB
X537 766 251 (SunOS you ) 251 SB
X32 0 0 46 46 0 0 0 43 /Helvetica-Oblique /font19 ANSIFont font
X788 766 100 (must) 100 SB
X32 0 0 46 46 0 0 0 43 /Helvetica /font12 ANSIFont font
X888 766 455 ( disable the keyboard.) 455 SB
X32 0 0 46 46 0 0 0 43 /Helvetica-Bold /font13 ANSIFont font
X330 846 41 (-s) 41 SB
X32 0 0 46 46 0 0 0 43 /Helvetica /font12 ANSIFont font
X537 846 1451 (Disables the screen display.  If NeTraMet's screen will never be looked) 1451 SB
X537 900 1355 (at, it makes sense not to spend processor cycles on maintaining a) 1355 SB
X537 954 157 (display.) 157 SB
X32 0 0 46 46 0 0 0 43 /Helvetica-Bold /font13 ANSIFont font
X330 1034 140 (-f  nnn) 140 SB
X32 0 0 46 46 0 0 0 43 /Helvetica /font12 ANSIFont font
X537 1034 1502 (Sets the maximum number of flows to nnn.  The default for this is 4000; it) 1502 SB
X537 1088 1432 (may be sensible to use a smaller number on the PC if you are using a) 1432 SB
X537 1142 281 (large rule set.) 281 SB
X32 0 0 46 46 0 0 0 43 /Helvetica-Bold /font13 ANSIFont font
X330 1222 153 (-p  nnn) 153 SB
X32 0 0 46 46 0 0 0 43 /Helvetica /font12 ANSIFont font
X537 1222 1415 (Sets the size of NeTraMet's buffer for incoming packet headers.  The) 1415 SB
X537 1276 742 (default size is 1024 packet headers.) 742 SB
X32 0 0 50 50 0 0 0 47 /Helvetica-Bold /font13 ANSIFont font
X271 1363 84 (7.2.) 84 SB
X413 1363 443 (PC Screen Display) 443 SB
X32 0 0 46 46 0 0 0 43 /Helvetica /font12 ANSIFont font
X271 1446 1826 (The display has three main areas; the top left corner is the 'status' area, the bottom left is) 1826 SB
X271 1500 1842 (the 'history' area, and the right-hand half displays a strip chart showing network utilisation.) 1842 SB
X32 0 0 46 46 0 0 0 46 /Symbol font
Xgs 351 3426 0 0 CB
X330 1576 21 (\267) 21 SB
Xgr
X32 0 0 46 46 0 0 0 43 /Helvetica /font12 ANSIFont font
X389 1579 1664 (The Status Area is updated every second to indicate the time, number of packets) 1664 SB
X389 1633 1694 (\(p=\), bytes \(b=\), and utilisation % \(u=\) for that second.  It also shows the maximum) 1694 SB
X389 1687 1653 (packet backlog \(q=\), i.e. the maximum length of the queue of uncounted packets) 1653 SB
X389 1741 1718 (during the second.  The meter has buffer space for 1024 packets, so this parameter) 1718 SB
X389 1795 1601 (gives a good indication of the meter's ability to handle the current packet load.) 1601 SB
X32 0 0 46 46 0 0 0 46 /Symbol font
Xgs 351 3426 0 0 CB
X330 1871 21 (\267) 21 SB
Xgr
X32 0 0 46 46 0 0 0 43 /Helvetica /font12 ANSIFont font
X389 1874 1600 (The History Area displays messages about the meter's operations.  These are) 1600 SB
X389 1928 1581 (written on the bottom line of the area, which is then scrolled up one line.  The) 1581 SB
X389 1982 1653 (messages are time-stamped, so this area tells you what the meter, manager and) 1653 SB
X389 2036 718 (collector have been doing recently.) 718 SB
X32 0 0 46 46 0 0 0 46 /Symbol font
Xgs 351 3426 0 0 CB
X330 2112 21 (\267) 21 SB
Xgr
X32 0 0 46 46 0 0 0 43 /Helvetica /font12 ANSIFont font
X389 2115 1633 (Every ten seconds a new line of the chart is displayed on the bottom of the strip) 1633 SB
X389 2169 1628 (chart showing the minimum, average and maximum utilisation per second.  The) 1628 SB
X389 2223 1714 (minimum is marked with a <, maximum with a > and the average with a *. The scale) 1714 SB
X389 2277 1552 (of the utilisation chart is normally 0 to 30% in 1% steps, but the 'h' keyboard) 1552 SB
X389 2331 1709 (command can be used to halve it, i.e. change it to 0 to 60% in 2% steps.  The chart) 1709 SB
X389 2385 1594 (is scrolled up the screen as each line is displayed, so that it always shows the) 1594 SB
X389 2439 888 (network utilisation for the last 250 seconds.) 888 SB
X32 0 0 50 50 0 0 0 47 /Helvetica-Bold /font13 ANSIFont font
X271 2526 84 (7.3.) 84 SB
X413 2526 519 (Keyboard Commands) 519 SB
X32 0 0 46 46 0 0 0 43 /Helvetica /font12 ANSIFont font
X271 2609 1794 (If the keyboard is enabled, i.e. the -k option did not appear on its startup command line,) 1794 SB
X271 2663 1150 (pressing a key will perform various functions, as follows:) 1150 SB
X32 0 0 46 46 0 0 0 43 /Helvetica-Bold /font13 ANSIFont font
X330 2743 28 (b) 28 SB
X32 0 0 46 46 0 0 0 43 /Helvetica /font12 ANSIFont font
X478 2743 583 (Display 'bad packets' counts) 583 SB
X32 0 0 46 46 0 0 0 43 /Helvetica-Bold /font13 ANSIFont font
X330 2823 28 (h) 28 SB
X32 0 0 46 46 0 0 0 43 /Helvetica /font12 ANSIFont font
X478 2823 884 (Set/reset half scale for utilisation strip chart) 884 SB
X32 0 0 46 46 0 0 0 43 /Helvetica-Bold /font13 ANSIFont font
X330 2903 41 (m) 41 SB
X32 0 0 46 46 0 0 0 43 /Helvetica /font12 ANSIFont font
X478 2903 633 (Display meter's memory usage) 633 SB
X32 0 0 46 46 0 0 0 43 /Helvetica-Bold /font13 ANSIFont font
X330 2983 26 (s) 26 SB
X32 0 0 46 46 0 0 0 43 /Helvetica /font12 ANSIFont font
X478 2983 1580 (Display meter performance statistics.  These are explained further in the next) 1580 SB
X478 3037 160 (section.) 160 SB
X32 0 0 46 46 1 0 0 43 /Helvetica /font12 ANSIFont font
X271 3186 416 (                                ) 416 SB
X687 3186 416 (                                ) 416 SB
X1103 3186 78 (      ) 78 SB
X1171 3186 416 (                                ) 416 SB
X1587 3186 416 (                                ) 416 SB
X2003 3186 78 (      ) 78 SB
X32 0 0 46 46 0 0 0 43 /Helvetica-Oblique /font19 ANSIFont font
X271 3265 182 (10/15/93) 182 SB
X1102 3265 43 (-- ) 43 SB
X1145 3265 52 (21) 52 SB
X1197 3265 43 ( --) 43 SB
X1866 3265 205 (NeTraMet) 205 SB
XEJ RS
X%%PageTrailer
XSS
X0 0 18 13 783 1169 300 SM
X32 0 0 46 46 0 0 0 43 /Helvetica-Bold /font13 ANSIFont font
X0 0 0 fC
X330 257 15 (t) 15 SB
X32 0 0 46 46 0 0 0 43 /Helvetica /font12 ANSIFont font
X478 257 1029 (Display time in 1/100s intervals from meter startup) 1029 SB
X32 0 0 46 46 0 0 0 43 /Helvetica-Bold /font13 ANSIFont font
X330 337 26 (v) 26 SB
X32 0 0 46 46 0 0 0 43 /Helvetica /font12 ANSIFont font
X478 337 532 (Display meter version info) 532 SB
X32 0 0 46 46 0 0 0 43 /Helvetica-Bold /font13 ANSIFont font
X330 417 23 (z) 23 SB
X32 0 0 46 46 0 0 0 43 /Helvetica /font12 ANSIFont font
X478 417 744 (Set meter statistics variables to zero) 744 SB
X32 0 0 46 46 0 0 0 43 /Helvetica-Bold /font13 ANSIFont font
X330 497 28 (?) 28 SB
X32 0 0 46 46 0 0 0 43 /Helvetica /font12 ANSIFont font
X478 497 979 (Display help \(summary of keyboard commands\)) 979 SB
X32 0 0 46 46 0 0 0 43 /Helvetica-Bold /font13 ANSIFont font
X330 577 95 (ESC) 95 SB
X32 0 0 46 46 0 0 0 43 /Helvetica /font12 ANSIFont font
X478 577 565 (Stop metering, exit to DOS.) 565 SB
X32 0 0 50 50 0 0 0 47 /Helvetica-Bold /font13 ANSIFont font
X271 664 84 (7.4.) 84 SB
X413 664 500 (PC Statistics Display) 500 SB
X32 0 0 46 46 0 0 0 43 /Helvetica /font12 ANSIFont font
X271 747 788 (The statistics displayed are as follows:) 788 SB
X32 0 0 46 46 0 0 0 36 /Courier /font0 ANSIFont font
X421 826 812 (Av pkt/s 90, av pkt backlog 1) 812 SB
X421 875 896 (Max pkt/s 154, max pkt backlog 1) 896 SB
X421 924 812 (Idle time av 98.2, min 96.5 %) 812 SB
X421 973 756 (247 flows in use \(max 4000\)) 756 SB
X421 1022 896 (13 flows recovered \(GC: 5  4 16\)) 896 SB
X421 1071 840 (2.3 rules/pkt, 1.2 tallies/pkt) 840 SB
X421 1120 504 (1.8 compares/tally) 504 SB
X421 1169 700 (512 hash slots, 83 in use) 700 SB
X32 0 0 46 46 0 0 0 43 /Helvetica /font12 ANSIFont font
X271 1243 1770 (Meter statistics are computed using counters which are updated every second.  These) 1770 SB
X271 1297 1675 (counters can be set to zero by the manager, or by pressing the 'z' key.  NeMaC, if) 1675 SB
X271 1351 1807 (instructed by the rule set, can read the statistics variables then set their counters to zero) 1807 SB
X271 1405 1704 (each time it collects the flow data.  The statistics are provided so as to evaluate the) 1704 SB
X271 1459 1777 (meter's performance on various hardware configurations, network traffic loads and rule) 1777 SB
X271 1513 1003 (tables.  A brief explanation of each is given here.) 1003 SB
X271 1592 1786 ('Packets per Second' gives the average and maximum packet rates observed since the) 1786 SB
X271 1646 809 (statistics counters were last set to zero.) 809 SB
X271 1725 1793 ('Packet Backlog' refers to the maximum length of the queue of packets received but not) 1793 SB
X271 1779 1835 (yet processed by the meter.  The maximum queue length is 1024; packets received when) 1835 SB
X271 1833 1357 (the buffer is full are counted as lost packets, then discarded.  The ) 1357 SB
X32 0 0 46 46 0 0 0 43 /Helvetica-Oblique /font19 ANSIFont font
X1628 1833 230 (LostPacket) 230 SB
X32 0 0 46 46 0 0 0 43 /Helvetica /font12 ANSIFont font
X1858 1833 215 ( count can) 215 SB
X271 1887 744 (be displayed by pressing the 'b' key.) 744 SB
X271 1966 1854 (NeTraMet's highest-priority process attempts to take packets from the input queue, up to a) 1854 SB
X271 2020 1660 (maximum of 400 at a time.  This prevents its lower-priority processes such as the) 1660 SB
X271 2074 1807 (keyboard handler from being blocked indefinitely.  If there are no packets in the queue a) 1807 SB
X271 2128 1694 (dummy packet is generated and passed to the packet matching routine, where it is) 1694 SB
X271 2182 1801 (counted.  The 'Idle Time' measurements are the ratio of dummy packets to total packets) 1801 SB
X271 2236 1070 (\(i.e. dummy + real packets\) processed by the meter.) 1070 SB
X271 2315 1833 ('Flows In Use' means flows which currently hold valid flow data.  Flows normally remain in) 1833 SB
X271 2369 1750 (use until they become inactive and their data has been collected.  Once they become) 1750 SB
X271 2423 1785 (inactive their space can be recovered by the garbage collector.  If the meter runs out of) 1785 SB
X271 2477 1524 (space for new flows the garbage collector will reclaim the oldest flows first.) 1524 SB
X271 2556 1858 ('Flows Recovered' shows the number of flows reclaimed by the garbage collector since the) 1858 SB
X271 2610 1725 (statistics counters were last set to zero.  The garbage collector is controlled by three) 1725 SB
X271 2664 1777 (parameters, which are displayed after the GC: label.  The first of these is the interval in) 1777 SB
X271 2718 1836 (seconds between invocations of the garbage collector.  Its default value is 5, but it can be) 1836 SB
X271 2772 1847 (changed by the manager.  The other parameters are the number of 'in use' and 'idle' flows) 1847 SB
X271 2826 1823 (tested by the garbage collector each time it is invoked.  These cannot be changed by the) 1823 SB
X271 2880 103 (user.) 103 SB
X32 0 0 46 46 1 0 0 43 /Helvetica /font12 ANSIFont font
X271 3186 416 (                                ) 416 SB
X687 3186 416 (                                ) 416 SB
X1103 3186 78 (      ) 78 SB
X1171 3186 416 (                                ) 416 SB
X1587 3186 416 (                                ) 416 SB
X2003 3186 78 (      ) 78 SB
X32 0 0 46 46 0 0 0 43 /Helvetica-Oblique /font19 ANSIFont font
X271 3265 182 (10/15/93) 182 SB
X1102 3265 43 (-- ) 43 SB
X1145 3265 52 (22) 52 SB
X1197 3265 43 ( --) 43 SB
X1866 3265 205 (NeTraMet) 205 SB
XEJ RS
X%%PageTrailer
XSS
X0 0 18 13 783 1169 300 SM
X32 0 0 46 46 0 0 0 43 /Helvetica /font12 ANSIFont font
X0 0 0 fC
X271 256 1756 ('Rules per packet' and 'Tallies per Packet' show how many rules were tested and how) 1756 SB
X271 310 1742 (many tally actions were performed for each packet.  Tallies are implemented by hash) 1742 SB
X271 364 1856 (tables; the number of 'Compares per Tally' gives an indication of how long the hash chains) 1856 SB
X271 418 292 (have become.) 292 SB
X271 497 1773 ('Number of Hash Slots' is the maximum number of entries in the tally hash tables.  The) 1773 SB
X271 551 1852 (number of hash slots in use indicates how effectively the hashing function is spreading the) 1852 SB
X271 605 849 (incoming packets across the hash tables.) 849 SB
X32 0 0 50 50 0 0 0 47 /Helvetica-Bold /font13 ANSIFont font
X271 692 84 (7.5.) 84 SB
X413 692 953 (Configuring Waterloo TCP for NeTraMet) 953 SB
X32 0 0 46 46 0 0 0 43 /Helvetica /font12 ANSIFont font
X271 775 1773 (Waterloo TCP stores its configuration data in a file called WATTCP.CFG.  For use with) 1773 SB
X271 829 1633 (NeTraMet it is simplest to place this file in the same directory as NeTraMet itself) 1633 SB
X271 908 1832 (A sample WATTCP.CFG file is included in the NeTraMet distribution.  This will need to be) 1832 SB
X271 962 1786 (edited to specify the IP Address, Subnet Mask, Default Gateway and Domain Name for) 1786 SB
X271 1016 1848 (NeTraMet at the location where you intend to run it.  The file is in plain ASCII text, and it is) 1848 SB
X271 1070 834 (obvious which lines need to be modified.) 834 SB
X32 0 0 50 50 0 0 0 47 /Helvetica-Bold /font13 ANSIFont font
X271 1157 84 (7.6.) 84 SB
X413 1157 673 (Sample AUTOEXEC.BAT file) 673 SB
X32 0 0 46 46 0 0 0 36 /Courier /font0 ANSIFont font
X389 1240 812 (wd8003e  0x60  5 0x300 0xD800) 812 SB
X389 1289 1092 (NeTraMet  -r NOC remote  -w Net*Manager) 1092 SB
X32 0 0 46 46 0 0 0 43 /Helvetica /font12 ANSIFont font
X271 1363 1730 (The first line above starts the packet driver for a Western Digital ethernet card, using) 1730 SB
X271 1417 1728 (hardware interrupt \(IRQ\) 5, I/O address 0x300, shared memory address 0xd800 and) 1728 SB
X271 1471 1774 (packet interrupt 0x60.  NeTraMet searches the interrupt vector when it starts up, which) 1774 SB
X271 1525 1836 (allows you to use any valid packet interrupt address.  For Version 2.0, NeTraMet can only) 1836 SB
X271 1579 604 (handle a single packet driver.) 604 SB
X271 1658 1580 (The second line starts NeTraMet, specifying that it is to have two read SNMP) 1580 SB
X271 1712 1740 (communities, 'NOC' and 'remote', and that its write community is 'Net*Manager'.  The) 1740 SB
X271 1766 1818 (screen and keyboard are enabled by default, and the meter will use a maximum of 4,000) 1818 SB
X271 1820 118 (flows.) 118 SB
X32 0 0 50 50 0 0 0 47 /Helvetica-Bold /font13 ANSIFont font
X271 1907 84 (7.7.) 84 SB
X413 1907 1384 (Differences between PC and SunOS versions of NeTraMet) 1384 SB
X32 0 0 46 46 0 0 0 43 /Helvetica /font12 ANSIFont font
X271 1990 1846 (The PC version of the meter runs on a system with a dedicated screen and keyboard, and) 1846 SB
X271 2044 1855 (hence will respond to keyboard commands, and will provide a continuously-updated status) 1855 SB
X271 2098 157 (display.) 157 SB
X271 2177 1835 (The SunOS version is intended to run as a background process on a Unix system.  When) 1835 SB
X271 2231 1843 (starting NeTraMet as a background process, don't forget to use the '-k' option to prevent it) 1843 SB
X271 2285 389 (trying to read from ) 389 SB
X32 0 0 50 50 0 0 0 39 /Courier /font0 ANSIFont font
X660 2289 150 (stdin) 150 SB
X32 0 0 46 46 0 0 0 36 /Courier /font0 ANSIFont font
X810 2292 28 (.) 28 SB
X32 0 0 46 46 0 0 0 43 /Helvetica /font12 ANSIFont font
X271 2367 1723 (In the same way the SunOS version doesn't provide a status display.  If its screen is) 1723 SB
X271 2421 1775 (enabled it will display history messages as events occur, but that is the full extent of its) 1775 SB
X271 2475 295 (screen output.) 295 SB
X271 2554 1682 (Some of the PC statistics variables have been specifically designed to monitor the) 1682 SB
X271 2608 1845 (hardware performance of the PC, so they are not relevant to SunOS.  Packet backlog and) 1845 SB
X271 2662 1255 (processor utilisation stastics are not implemented for SunOS.) 1255 SB
X271 2741 1678 (Apart from the above comments about screen and keyboard, the two versions are) 1678 SB
X271 2795 1805 (identical.  From the performance point of view, there is one further feature of the SunOS) 1805 SB
X271 2849 1774 (version; it is not limited by the PC's arcane memory models, so that it can handle more) 1774 SB
X271 2903 1724 (flows than the PC \(which has a limit of about 4500\).  The SunOS limit is the fact that) 1724 SB
X32 0 0 46 46 0 0 0 43 /Helvetica-Oblique /font19 ANSIFont font
X271 2957 273 (FlowIndexes ) 273 SB
X32 0 0 46 46 0 0 0 43 /Helvetica /font12 ANSIFont font
X544 2957 1120 (are 16-bit values, giving an upper limit of 65,534 flows.) 1120 SB
X32 0 0 46 46 1 0 0 43 /Helvetica /font12 ANSIFont font
X271 3186 416 (                                ) 416 SB
X687 3186 416 (                                ) 416 SB
X1103 3186 78 (      ) 78 SB
X1171 3186 416 (                                ) 416 SB
X1587 3186 416 (                                ) 416 SB
X2003 3186 78 (      ) 78 SB
X32 0 0 46 46 0 0 0 43 /Helvetica-Oblique /font19 ANSIFont font
X271 3265 182 (10/15/93) 182 SB
X1102 3265 43 (-- ) 43 SB
X1145 3265 52 (23) 52 SB
X1197 3265 43 ( --) 43 SB
X1866 3265 205 (NeTraMet) 205 SB
XEJ RS
X%%PageTrailer
XSS
X0 0 18 13 783 1169 300 SM
X32 0 0 58 58 0 0 0 54 /Helvetica-Bold /font13 ANSIFont font
X0 0 0 fC
X271 264 32 (8) 34 SB
X305 264 16 (.) 18 SB
X360 264 42 (N) 44 SB
X404 264 32 (e) 34 SB
X438 264 35 (T) 37 SB
X475 264 23 (r) 25 SB
X500 264 32 (a) 34 SB
X534 264 48 (M) 50 SB
X584 264 32 (e) 34 SB
X618 264 19 (t) 21 SB
X639 264 16 ( ) 18 SB
X657 264 42 (D) 44 SB
X701 264 16 (i) 18 SB
X719 264 32 (s) 34 SB
X753 264 19 (t) 21 SB
X774 264 23 (r) 25 SB
X799 264 16 (i) 18 SB
X817 264 35 (b) 37 SB
X854 264 35 (u) 37 SB
X891 264 19 (t) 21 SB
X912 264 16 (i) 18 SB
X930 264 35 (o) 37 SB
X967 264 35 (n) 37 SB
X32 0 0 50 50 0 0 0 47 /Helvetica-Bold /font13 ANSIFont font
X271 364 84 (8.1.) 84 SB
X413 364 512 (CopyRight Statement) 512 SB
X32 0 0 46 46 0 0 0 43 /Helvetica /font12 ANSIFont font
X271 447 1796 (Netramet is free software, distributed under the terms of the GNU Emacs general public) 1796 SB
X271 501 1623 (license.  A copy of this is provided with the NeTraMet software distribution files.) 1623 SB
X32 0 0 50 50 0 0 0 47 /Helvetica-Bold /font13 ANSIFont font
X271 588 84 (8.2.) 84 SB
X413 588 412 (DIstribution Files) 412 SB
X32 0 0 46 46 0 0 0 43 /Helvetica /font12 ANSIFont font
X271 671 1358 (There are two NeTraMet distribution files, containing the following:) 1358 SB
X32 0 0 46 46 0 0 0 43 /Helvetica-Oblique /font19 ANSIFont font
X271 750 313 (NeTraMet.tar.Z) 313 SB
X32 0 0 46 46 0 0 0 43 /Helvetica /font12 ANSIFont font
X389 804 1690 (NeTraMet documentation, including example rule files and the Meter Services MIB) 1690 SB
X389 858 1082 (Source code for CMU SNMP, NeTraMet and NeMaC) 1082 SB
X389 912 981 (Make files for NeTraMet and NeMaC on SunOS) 981 SB
X389 966 586 (Make files for NeMaC on IrIx) 586 SB
X389 1020 545 (NeTraMet.exe file for DOS) 545 SB
X32 0 0 46 46 0 0 0 43 /Helvetica-Oblique /font19 ANSIFont font
X271 1099 277 (NeTraMet.zip) 277 SB
X389 1153 31 (S) 31 SB
X32 0 0 46 46 0 0 0 43 /Helvetica /font12 ANSIFont font
X420 1153 1185 (ource code for Waterloo TCP, CMU SNMP and NeTraMet) 1185 SB
X389 1207 536 (Turbo Make files for these) 536 SB
X32 0 0 58 58 0 0 0 54 /Helvetica-Bold /font13 ANSIFont font
X271 1344 32 (9) 34 SB
X305 1344 16 (.) 18 SB
X360 1344 16 (I) 18 SB
X378 1344 35 (n) 37 SB
X415 1344 32 (s) 34 SB
X449 1344 19 (t) 21 SB
X470 1344 32 (a) 34 SB
X504 1344 16 (l) 18 SB
X522 1344 16 (l) 18 SB
X540 1344 32 (a) 34 SB
X574 1344 19 (t) 21 SB
X595 1344 16 (i) 18 SB
X613 1344 35 (o) 37 SB
X650 1344 35 (n) 37 SB
X32 0 0 46 46 0 0 0 43 /Helvetica /font12 ANSIFont font
X330 1436 1797 (Create a directory for NeTraMet and place the NeTraMet.tar.Z file there.  Uncompress it) 1797 SB
X330 1490 1773 (and unpack it; this will create directories and place NeTraMet's files in them as follows:) 1773 SB
X32 0 0 46 46 0 0 0 36 /Courier /font0 ANSIFont font
X419 1569 420 (./documentation) 420 SB
X507 1623 252 (/NeTraMet) 252 SB
X32 0 0 42 42 0 0 0 40 /Helvetica /font12 ANSIFont font
X862 1619 471 (NeTraMet documentation) 471 SB
X32 0 0 46 46 0 0 0 36 /Courier /font0 ANSIFont font
X507 1677 252 (/examples) 252 SB
X32 0 0 42 42 0 0 0 40 /Helvetica /font12 ANSIFont font
X862 1673 155 (rule files) 155 SB
X32 0 0 46 46 0 0 0 36 /Courier /font0 ANSIFont font
X507 1731 140 (/snmp) 140 SB
X32 0 0 42 42 0 0 0 40 /Helvetica /font12 ANSIFont font
X862 1727 513 (CMU SNMP documentation) 513 SB
X32 0 0 46 46 0 0 0 36 /Courier /font0 ANSIFont font
X419 1785 140 (./mib) 140 SB
X32 0 0 42 42 0 0 0 40 /Helvetica /font12 ANSIFont font
X862 1781 293 (Accounting MIB) 293 SB
X32 0 0 46 46 0 0 0 36 /Courier /font0 ANSIFont font
X419 1834 140 (./src) 140 SB
X507 1888 224 (/snmplib) 224 SB
X32 0 0 42 42 0 0 0 40 /Helvetica /font12 ANSIFont font
X862 1884 490 (CMU SNMP library source) 490 SB
X32 0 0 46 46 0 0 0 36 /Courier /font0 ANSIFont font
X507 1942 140 (/apps) 140 SB
X32 0 0 42 42 0 0 0 40 /Helvetica /font12 ANSIFont font
X862 1938 596 (CMU SNMP applications source) 596 SB
X32 0 0 46 46 0 0 0 36 /Courier /font0 ANSIFont font
X507 1996 168 (/meter) 168 SB
X32 0 0 42 42 0 0 0 40 /Helvetica /font12 ANSIFont font
X862 1992 323 (NeTraMet source) 323 SB
X32 0 0 46 46 0 0 0 36 /Courier /font0 ANSIFont font
X507 2050 224 (/manager) 224 SB
X32 0 0 42 42 0 0 0 40 /Helvetica /font12 ANSIFont font
X862 2046 278 (NeMaC source) 278 SB
X32 0 0 46 46 0 0 0 36 /Courier /font0 ANSIFont font
X419 2104 168 (./sun/) 168 SB
X32 0 0 42 42 0 0 0 40 /Helvetica /font12 ANSIFont font
X862 2100 396 (Make files for SunOS) 396 SB
X32 0 0 46 46 0 0 0 36 /Courier /font0 ANSIFont font
X419 2158 140 (./sg/) 140 SB
X32 0 0 42 42 0 0 0 40 /Helvetica /font12 ANSIFont font
X862 2154 317 (Make files for Irix) 317 SB
X32 0 0 46 46 0 0 0 36 /Courier /font0 ANSIFont font
X1179 2158 252 (NeTraMet.) 252 SB
X419 2212 140 (./pc/) 140 SB
X32 0 0 42 42 0 0 0 40 /Helvetica /font12 ANSIFont font
X862 2208 706 (EXE and WATTCP.CFG files for DOS) 706 SB
X32 0 0 46 46 0 0 0 43 /Helvetica-Oblique /font19 ANSIFont font
X271 2286 465 (On a SunOS machine:) 465 SB
X330 2365 49 (cd) 49 SB
X32 0 0 46 46 0 0 0 43 /Helvetica /font12 ANSIFont font
X379 2365 842 ( to the sun/snmplib directory and run the ) 842 SB
X32 0 0 46 46 0 0 0 43 /Helvetica-Oblique /font19 ANSIFont font
X1221 2365 113 (make) 113 SB
X32 0 0 46 46 0 0 0 43 /Helvetica /font12 ANSIFont font
X1334 2365 763 ( file; this will create the SNMP library.) 763 SB
X32 0 0 46 46 0 0 0 43 /Helvetica-Oblique /font19 ANSIFont font
X330 2444 49 (cd) 49 SB
X32 0 0 46 46 0 0 0 43 /Helvetica /font12 ANSIFont font
X379 2444 784 ( to the sun/apps directory and run the ) 784 SB
X32 0 0 46 46 0 0 0 43 /Helvetica-Oblique /font19 ANSIFont font
X1163 2444 113 (make) 113 SB
X32 0 0 46 46 0 0 0 43 /Helvetica /font12 ANSIFont font
X1276 2444 725 ( file; this will create a minimal set of) 725 SB
X330 2498 602 (SNMP application programs..) 602 SB
X32 0 0 46 46 0 0 0 43 /Helvetica-Oblique /font19 ANSIFont font
X330 2577 49 (cd) 49 SB
X32 0 0 46 46 0 0 0 43 /Helvetica /font12 ANSIFont font
X379 2577 801 ( to the sun/meter directory and run the ) 801 SB
X32 0 0 46 46 0 0 0 43 /Helvetica-Oblique /font19 ANSIFont font
X1180 2577 113 (make) 113 SB
X32 0 0 46 46 0 0 0 43 /Helvetica /font12 ANSIFont font
X1293 2577 619 ( file; this will create NeTraMet.) 619 SB
X32 0 0 46 46 0 0 0 43 /Helvetica-Oblique /font19 ANSIFont font
X330 2656 49 (cd) 49 SB
X32 0 0 46 46 0 0 0 43 /Helvetica /font12 ANSIFont font
X379 2656 866 ( to the sun/manager directory and run the ) 866 SB
X32 0 0 46 46 0 0 0 43 /Helvetica-Oblique /font19 ANSIFont font
X1245 2656 113 (make) 113 SB
X32 0 0 46 46 0 0 0 43 /Helvetica /font12 ANSIFont font
X1358 2656 570 ( file; this will create NeMaC.) 570 SB
X330 2735 1768 (Copy NeTraMet and NaMaC to the location where they will be used.  NeTraMet opens) 1768 SB
X330 2789 1748 (a UDP port for SNMP; make sure it has sufficient privilege to do this.  NeMaC doesn't) 1748 SB
X330 2843 1777 (need special privilege, but it needs access to the mib.txt file \(in the /mib directory\).  Set) 1777 SB
X330 2897 720 (a shell variable to specify this, e.g. ) 720 SB
X32 0 0 46 46 0 0 0 36 /Courier /font0 ANSIFont font
X1050 2904 1064 (set MIBTXT = /usr/NeTraMet/mib/mib.txt) 1064 SB
X32 0 0 46 46 1 0 0 43 /Helvetica /font12 ANSIFont font
X271 3186 416 (                                ) 416 SB
X687 3186 416 (                                ) 416 SB
X1103 3186 78 (      ) 78 SB
X1171 3186 416 (                                ) 416 SB
X1587 3186 416 (                                ) 416 SB
X2003 3186 78 (      ) 78 SB
X32 0 0 46 46 0 0 0 43 /Helvetica-Oblique /font19 ANSIFont font
X271 3265 182 (10/15/93) 182 SB
X1102 3265 43 (-- ) 43 SB
X1145 3265 52 (24) 52 SB
X1197 3265 43 ( --) 43 SB
X1866 3265 205 (NeTraMet) 205 SB
XEJ RS
X%%PageTrailer
XSS
X0 0 18 13 783 1169 300 SM
X32 0 0 46 46 0 0 0 43 /Helvetica /font12 ANSIFont font
X0 0 0 fC
X330 256 1761 (Decide on write community names for each meter you intend to run.  Start the meters.) 1761 SB
X330 335 1798 (Create rule files for each meter.  If there are many of these it will be sensible to create a) 1798 SB
X330 389 1282 (configuration file with an entry for each of them.  Start NeMaC.) 1282 SB
X32 0 0 46 46 0 0 0 43 /Helvetica-Oblique /font19 ANSIFont font
X271 468 402 (On an Irix machine:) 402 SB
X32 0 0 46 46 0 0 0 43 /Helvetica /font12 ANSIFont font
X330 547 1294 (Proceed as above.  The only differences are that the Irix make ) 1294 SB
X32 0 0 46 46 0 0 0 43 /Helvetica-Oblique /font19 ANSIFont font
X1624 547 82 (files) 82 SB
X32 0 0 46 46 0 0 0 43 /Helvetica /font12 ANSIFont font
X1706 547 282 ( are in the /sg) 282 SB
X330 601 1718 (directory instead of the /sun directory, and that NeTraMet is not implemented yet for) 1718 SB
X330 655 74 (Irix.) 74 SB
X32 0 0 46 46 0 0 0 43 /Helvetica-Oblique /font19 ANSIFont font
X271 734 191 (On a PC:) 191 SB
X32 0 0 46 46 0 0 0 43 /Helvetica /font12 ANSIFont font
X330 813 1737 (If you only want to use NeTraMet, copy NeTraMet.exe and wattcp.cfg from your Unix) 1737 SB
X330 867 1766 (machine to the PC.  Edit WATTCP.CFG to specify your meter's IP configuration.  Start) 1766 SB
X330 921 218 (NeTraMet.) 218 SB
X330 1000 1746 (If you wish to compile and link NeTraMet yourself, copy NeTraMet.zip to your PC and) 1746 SB
X330 1054 1274 (unzip to create directories and place files into them as follows:) 1274 SB
X32 0 0 46 46 0 0 0 36 /Courier /font0 ANSIFont font
X419 1138 140 (/elib) 140 SB
X32 0 0 42 42 0 0 0 40 /Helvetica /font12 ANSIFont font
X862 1134 562 (Waterloo TCP intrinsics library) 562 SB
X32 0 0 46 46 0 0 0 36 /Courier /font0 ANSIFont font
X419 1192 112 (/src) 112 SB
X32 0 0 42 42 0 0 0 40 /Helvetica /font12 ANSIFont font
X862 1188 388 (Waterloo TCP library) 388 SB
X32 0 0 46 46 0 0 0 36 /Courier /font0 ANSIFont font
X419 1246 140 (/apps) 140 SB
X32 0 0 42 42 0 0 0 40 /Helvetica /font12 ANSIFont font
X862 1242 661 (Waterloo TCP application programs) 661 SB
X32 0 0 46 46 0 0 0 36 /Courier /font0 ANSIFont font
X419 1300 140 (/snmp) 140 SB
X32 0 0 42 42 0 0 0 40 /Helvetica /font12 ANSIFont font
X862 1296 490 (CMU SNMP library source) 490 SB
X32 0 0 46 46 0 0 0 36 /Courier /font0 ANSIFont font
X419 1354 140 (/acct) 140 SB
X32 0 0 42 42 0 0 0 40 /Helvetica /font12 ANSIFont font
X862 1350 323 (NeTraMet source) 323 SB
X32 0 0 46 46 0 0 0 36 /Courier /font0 ANSIFont font
X419 1408 112 (/lib) 112 SB
X32 0 0 42 42 0 0 0 40 /Helvetica /font12 ANSIFont font
X862 1404 323 (NeTraMet source) 323 SB
X32 0 0 46 46 0 0 0 43 /Helvetica /font12 ANSIFont font
X330 1482 1786 (To create NeTraMet, run Turbo Make in each of the elib, src, snmp and acct directories) 1786 SB
X330 1536 1207 (in turn.  This will create NeTraMet.exe in the acct directory.) 1207 SB
X32 0 0 58 58 0 0 0 54 /Helvetica-Bold /font13 ANSIFont font
X271 1673 32 (1) 34 SB
X305 1673 32 (0) 34 SB
X339 1673 16 (.) 18 SB
X421 1673 42 (N) 44 SB
X465 1673 32 (e) 34 SB
X499 1673 35 (T) 37 SB
X536 1673 23 (r) 25 SB
X561 1673 32 (a) 34 SB
X595 1673 48 (M) 50 SB
X645 1673 32 (e) 34 SB
X679 1673 19 (t) 21 SB
X700 1673 14 (') 16 SB
X716 1673 32 (s) 34 SB
X750 1673 16 ( ) 18 SB
X768 1673 35 (F) 37 SB
X805 1673 35 (u) 37 SB
X842 1673 19 (t) 21 SB
X863 1673 35 (u) 37 SB
X900 1673 23 (r) 25 SB
X925 1673 32 (e) 34 SB
X32 0 0 46 46 0 0 0 43 /Helvetica /font12 ANSIFont font
X271 1765 1794 (This is the initial version of NeTraMet; it will doubtless improve and grow.  Please report) 1794 SB
X271 1819 1665 (any bugs or problems you encounter to me directly, n.brownlee@auckland.ac.nz.) 1665 SB
X271 1898 1695 (Discussion about the Internet Accounting Architecture will continue on the Working) 1695 SB
X271 1952 1794 (Group's mailing list, accounting-wg@wugate.wustl.edu.  If you are interested in network) 1794 SB
X271 2006 1674 (traffic metering please join this list by sending a request to accounting-wg-request) 1674 SB
X271 2060 1177 (@wugate.wustl.edu.  Topics needing further work include) 1177 SB
X32 0 0 42 42 0 0 0 42 /Symbol font
Xgs 290 3426 0 0 CB
X271 2140 19 (\267) 19 SB
Xgr
X32 0 0 46 46 0 0 0 43 /Helvetica /font12 ANSIFont font
X345 2139 1588 (Improvements or modifications to the Meter Services MIB in the light of users') 1588 SB
X345 2193 240 (experience.) 240 SB
X32 0 0 42 42 0 0 0 42 /Symbol font
Xgs 290 3426 0 0 CB
X271 2273 19 (\267) 19 SB
Xgr
X32 0 0 46 46 0 0 0 43 /Helvetica /font12 ANSIFont font
X345 2272 1718 (Development of a language for describing metering requirements, and a compiler to) 1718 SB
X345 2326 1136 (test these for consistency and translate them into rules.) 1136 SB
X32 0 0 42 42 0 0 0 42 /Symbol font
Xgs 290 3426 0 0 CB
X271 2406 19 (\267) 19 SB
Xgr
X32 0 0 46 46 0 0 0 43 /Helvetica /font12 ANSIFont font
X345 2405 1394 (Development of standards for flow data files and their management.) 1394 SB
X271 2484 1855 (I would also appreciate user feedback and reports of your experiences with it, in particular:) 1855 SB
X32 0 0 42 42 0 0 0 42 /Symbol font
Xgs 290 3426 0 0 CB
X271 2564 19 (\267) 19 SB
Xgr
X32 0 0 46 46 0 0 0 43 /Helvetica /font12 ANSIFont font
X345 2563 1775 (Performance of various configurations of PC and SunOS meters on different networks.) 1775 SB
X32 0 0 42 42 0 0 0 42 /Symbol font
Xgs 290 3426 0 0 CB
X271 2643 19 (\267) 19 SB
Xgr
X32 0 0 46 46 0 0 0 43 /Helvetica /font12 ANSIFont font
X345 2642 1174 (Ports of NeTraMet or NeMaC to other operating systems.) 1174 SB
X32 0 0 42 42 0 0 0 42 /Symbol font
Xgs 290 3426 0 0 CB
X271 2722 19 (\267) 19 SB
Xgr
X32 0 0 46 46 0 0 0 43 /Helvetica /font12 ANSIFont font
X345 2721 1742 (Developments of programs for processing flow data files, e.g. to produce an input file) 1742 SB
X345 2775 485 (for a statistics package.) 485 SB
X32 0 0 42 42 0 0 0 42 /Symbol font
Xgs 290 3426 0 0 CB
X271 2855 19 (\267) 19 SB
Xgr
X32 0 0 46 46 0 0 0 43 /Helvetica /font12 ANSIFont font
X345 2854 1621 (Rule files.  How hard or easy did you find it to create rule files for your metering) 1621 SB
X345 2908 1700 (requirements?  Were there things you wanted to do but couldn't?  Did you discover) 1700 SB
X345 2962 1304 (any particularly elegant sets of rules for metering your network?) 1304 SB
X271 3041 1807 (Please post 'experience' reports to the Internet Accounting Mailing List \(address above\).) 1807 SB
X32 0 0 46 46 1 0 0 43 /Helvetica /font12 ANSIFont font
X271 3186 416 (                                ) 416 SB
X687 3186 416 (                                ) 416 SB
X1103 3186 78 (      ) 78 SB
X1171 3186 416 (                                ) 416 SB
X1587 3186 416 (                                ) 416 SB
X2003 3186 78 (      ) 78 SB
X32 0 0 46 46 0 0 0 43 /Helvetica-Oblique /font19 ANSIFont font
X271 3265 182 (10/15/93) 182 SB
X1102 3265 43 (-- ) 43 SB
X1145 3265 52 (25) 52 SB
X1197 3265 43 ( --) 43 SB
X1866 3265 205 (NeTraMet) 205 SB
XEJ RS
X%%PageTrailer
XSS
X0 0 18 13 783 1169 300 SM
X32 0 0 58 58 0 0 0 54 /Helvetica-Bold /font13 ANSIFont font
X0 0 0 fC
X271 264 32 (1) 34 SB
X305 264 32 (1) 34 SB
X339 264 16 (.) 18 SB
X421 264 42 (A) 44 SB
X465 264 32 (c) 34 SB
X499 264 32 (k) 34 SB
X533 264 35 (n) 37 SB
X570 264 35 (o) 37 SB
X607 264 45 (w) 47 SB
X654 264 16 (l) 18 SB
X672 264 32 (e) 34 SB
X706 264 35 (d) 37 SB
X743 264 35 (g) 37 SB
X780 264 52 (m) 54 SB
X834 264 32 (e) 34 SB
X868 264 35 (n) 37 SB
X905 264 19 (t) 21 SB
X926 264 32 (s) 34 SB
X32 0 0 46 46 0 0 0 43 /Helvetica /font12 ANSIFont font
X271 356 1729 (Many people have contributed to the development of NeTraMet.  I wish to record my) 1729 SB
X271 410 1696 (thanks particularly to those who participated in the early discussions of the Internet) 1696 SB
X271 464 1691 (Accounting Working Group, which developed the Internet Accounting Architecture.) 1691 SB
X271 518 217 (Thanks to:) 217 SB
X330 597 717 (Cyndi Mills and Greg Ruth \(BBN\)   ) 717 SB
X32 0 0 46 46 0 0 0 43 /Helvetica-Oblique /font19 ANSIFont font
X1047 597 455 (Co-chairs to March 93) 455 SB
X32 0 0 46 46 0 0 0 43 /Helvetica /font12 ANSIFont font
X330 651 1388 (Kathy Robertson \(Concord Communications\), George Abe \(infoNet\)) 1388 SB
X330 705 838 (Marshall Rose \(Dover Beach Consulting\)) 838 SB
X271 784 1851 (NeTraMet is the first implementation of the Working Group's draft Meter Services MIB.  My) 1851 SB
X271 838 1713 (colleagues here at Auckland have contributed many hours of discussion throughout) 1713 SB
X271 892 922 (NeTraMet's development.  Special thanks to:) 922 SB
X330 971 857 (John White, Russell Fulton, Murray Johns) 857 SB
X330 1025 234 (Wilson Yan) 234 SB
X32 0 0 58 58 0 0 0 54 /Helvetica-Bold /font13 ANSIFont font
X271 1162 32 (1) 34 SB
X305 1162 32 (1) 34 SB
X339 1162 16 (.) 18 SB
X421 1162 42 (R) 44 SB
X465 1162 32 (e) 34 SB
X499 1162 19 (f) 21 SB
X520 1162 32 (e) 34 SB
X554 1162 23 (r) 25 SB
X579 1162 32 (e) 34 SB
X613 1162 35 (n) 37 SB
X650 1162 32 (c) 34 SB
X684 1162 32 (e) 34 SB
X718 1162 32 (s) 34 SB
X32 0 0 46 46 0 0 0 43 /Helvetica /font12 ANSIFont font
X271 1254 1171 ("RFC 1060:  Assigned Numbers,"  J. Reynolds, J. Postel,) 1171 SB
X389 1308 245 (March 1990) 245 SB
X271 1387 1537 ("RFC 1272:  Internet Accounting: Background,"  C. Mills, D. Hirsh, G. Ruth,) 1537 SB
X389 1441 330 (November 1991) 330 SB
X271 1520 1263 ("Internetworking with TCP/IP Vol 1 \(2nd Edition\), "  Comer, D,) 1263 SB
X389 1574 392 (Prentice Hall, 1991) 392 SB
X271 1653 1426 ("Inside AppleTalk \(2nd Edition\)," Sidhu, Andrews and Opppenheimer,) 1426 SB
X389 1707 462 (Addison Wesley, 1990) 462 SB
X271 1786 1375 ("Netware Communications Processes," Netware Application Notes,) 1375 SB
X389 1840 344 (September 1990) 344 SB
X32 0 0 46 46 1 0 0 43 /Helvetica /font12 ANSIFont font
X271 3186 416 (                                ) 416 SB
X687 3186 416 (                                ) 416 SB
X1103 3186 78 (      ) 78 SB
X1171 3186 416 (                                ) 416 SB
X1587 3186 416 (                                ) 416 SB
X2003 3186 78 (      ) 78 SB
X32 0 0 46 46 0 0 0 43 /Helvetica-Oblique /font19 ANSIFont font
X271 3265 182 (10/15/93) 182 SB
X1102 3265 43 (-- ) 43 SB
X1145 3265 52 (26) 52 SB
X1197 3265 43 ( --) 43 SB
X1866 3265 205 (NeTraMet) 205 SB
XEJ RS
X%%PageTrailer
X%%Trailer
XSVDoc restore
Xend
X% TrueType font name key:
X%    MSTT31c157 = 24b7DCourier NewF0000002e000001900000
X%    MSTT31c163 = 24b7DCourier NewF00000026000001900000
X%    MSTT31c16f = 24b7DCourier NewF00000032000001900000
X%    MSTT31c17b = 24b7DCourier NewF00000032000002bc0000
X%    MSTT31c187 = 24b7DCourier NewF0000001a000001900000
X%    MSTT31c193 = 24b7DCourier NewF0000002e000002bc0000
X%    MSTT31c19f = 24b7DCourier NewF0000002e000001900001
X%%DocumentSuppliedResources: procset Win35Dict 3 1
X
X%%DocumentNeededResources: font Courier
X%%+ font Courier-Bold
X%%+ font Courier-Oblique
X%%+ font Helvetica
X%%+ font Helvetica-Bold
X%%+ font Helvetica-Oblique
X%%+ font Symbol
X
X%%EOF
END_OF_FILE
  if test 48329 -ne `wc -c <'netramet/doc/NeTraMet/NeTraMet.man.ps.D'`; then
    echo shar: \"'netramet/doc/NeTraMet/NeTraMet.man.ps.D'\" unpacked with wrong size!
  else  
    PARTS=""
    for I in A B C D ; do
      if test -f netramet/doc/NeTraMet/NeTraMet.man.ps.$I ; then  
        PARTS="${PARTS}${I}"
      fi 
      if test "${PARTS}" = "ABCD" ; then
        echo shar: Combining  \"'netramet/doc/NeTraMet/NeTraMet.man.ps'\" \(188008 characters\)
        cat netramet/doc/NeTraMet/NeTraMet.man.ps.[A-D] > 'netramet/doc/NeTraMet/NeTraMet.man.ps'  
        if test 188008 -ne `wc -c <'netramet/doc/NeTraMet/NeTraMet.man.ps'`; then 
          echo shar: \"'netramet/doc/NeTraMet/NeTraMet.man.ps'\" combined with wrong size!  
        else  
          rm netramet/doc/NeTraMet/NeTraMet.man.ps.[A-D]  
        fi    
      fi    
    done  
  fi
  # end of 'netramet/doc/NeTraMet/NeTraMet.man.ps.D'
fi
if test -f 'netramet/doc/snmp/exclude' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'netramet/doc/snmp/exclude'\"
else
  echo shar: Extracting \"'netramet/doc/snmp/exclude'\" \(234 characters\)
  sed "s/^X//" >'netramet/doc/snmp/exclude' <<'END_OF_FILE'
Xapps/RCS
Xapps/snmpget
Xapps/snmpgetnext
Xapps/snmpnetstat
Xapps/snmpnetstat.c
Xapps/snmpns.c
Xapps/snmpstatus
Xapps/snmptest
Xapps/snmpwalk
Xman/RCS
Xsnmplib/OLDRCS
Xsnmplib/RCS
Xsnmplib/snmp_if.c
Xsnmplib/snmp_if.h
Xkip
Xexclude
Xapps/Makefile.new
END_OF_FILE
  if test 234 -ne `wc -c <'netramet/doc/snmp/exclude'`; then
    echo shar: \"'netramet/doc/snmp/exclude'\" unpacked with wrong size!
  fi
  # end of 'netramet/doc/snmp/exclude'
fi
if test -f 'netramet/src/apps/snmpnetstat/route.c' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'netramet/src/apps/snmpnetstat/route.c'\"
else
  echo shar: Extracting \"'netramet/src/apps/snmpnetstat/route.c'\" \(11885 characters\)
  sed "s/^X//" >'netramet/src/apps/snmpnetstat/route.c' <<'END_OF_FILE'
X/***********************************************************
X	Copyright 1989 by Carnegie Mellon University
X
X                      All Rights Reserved
X
XPermission to use, copy, modify, and distribute this software and its 
Xdocumentation for any purpose and without fee is hereby granted, 
Xprovided that the above copyright notice appear in all copies and that
Xboth that copyright notice and this permission notice appear in 
Xsupporting documentation, and that the name of CMU not be
Xused in advertising or publicity pertaining to distribution of the
Xsoftware without specific, written prior permission.  
X
XCMU DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING
XALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO EVENT SHALL
XCMU BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR
XANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,
XWHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION,
XARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS
XSOFTWARE.
X******************************************************************/
X/*
X * Copyright (c) 1983,1988 Regents of the University of California.
X * All rights reserved.
X *
X * Redistribution and use in source and binary forms are permitted
X * provided that this notice is preserved and that due credit is given
X * to the University of California at Berkeley. The name of the University
X * may not be used to endorse or promote products derived from this
X * software without specific prior written permission. This software
X * is provided ``as is'' without express or implied warranty.
X */
X
X#include <stdio.h>
X#include <strings.h>
X#include <ctype.h>
X
X#include <sys/param.h>
X#include <sys/socket.h>
X
X#include <netinet/in.h>
X#define	LOOPBACKNET 127
X
X#include <netdb.h>
X
X#include "ausnmp.h"
X#include "main.h"
X#include "asn1.h"
X#include "snmp.h"
X#include "snmpimpl.h"
X#include "snmpapi.h"
X#include "snmpclnt.h"
X#include "mib.h"
X
Xextern	int nflag;
Xextern	char *routename(), *netname(), *plural();
X/* extern	char *malloc();  /* in ausnmp.h */
Xextern	struct snmp_session *Session;
Xextern	struct variable_list *getvarbyname();
Xextern	int print_errors;
X
X
Xstruct route_entry {
X    oid	    instance[4];
X    struct in_addr  destination;
X    int	    set_destination;
X    struct in_addr  gateway;
X    int	    set_gateway;
X    int	    interface;
X    int	    set_interface;
X    int	    type;
X    int	    set_type;
X    int	    proto;
X    int	    set_proto;
X    char    ifname[64];
X    int	    set_name;
X};
X
X
X
X#define RTDEST	    1
X#define RTIFINDEX   2
X#define RTNEXTHOP   7
X#define RTTYPE	    8
X#define RTPROTO	    9
Xstatic oid oid_rttable[] = {1, 3, 6, 1, 2, 1, 4, 21, 1};
Xstatic oid oid_rtdest[] = {1, 3, 6, 1, 2, 1, 4, 21, 1, 1};
Xstatic oid oid_rtifindex[] = {1, 3, 6, 1, 2, 1, 4, 21, 1, 2};
Xstatic oid oid_rtnexthop[] = {1, 3, 6, 1, 2, 1, 4, 21, 1, 7};
Xstatic oid oid_rttype[] = {1, 3, 6, 1, 2, 1, 4, 21, 1, 8};
Xstatic oid oid_rtproto[] = {1, 3, 6, 1, 2, 1, 4, 21, 1, 9};
Xstatic oid oid_ifdescr[] = {1, 3, 6, 1, 2, 1, 2, 2, 1, 2};
Xstatic oid oid_ipnoroutes[] = {1, 3, 6, 1, 2, 1, 4, 12, 0};
X
X
X/*
X * Print routing tables.
X */
Xroutepr()
X{
X	struct route_entry route, *rp = &route;
X	struct snmp_pdu *request, *response;
X	struct variable_list *vp;
X	char name[16], *flags;
X	oid *instance, type;
X	int toloopback, status;
X	char ch;
X
X	printf("Routing tables\n");
X	printf("%-16.16s %-18.18s %-6.6s  %s\n",
X		"Destination", "Gateway",
X		"Flags", "Interface");
X
X
X	request = snmp_pdu_create(GETNEXT_REQ_MSG);
X
X	snmp_add_null_var(request, oid_rtdest, sizeof(oid_rtdest)/sizeof(oid));
X	snmp_add_null_var(request, oid_rtifindex, sizeof(oid_rtifindex)/sizeof(oid));
X	snmp_add_null_var(request, oid_rtnexthop, sizeof(oid_rtnexthop)/sizeof(oid));
X	snmp_add_null_var(request, oid_rttype, sizeof(oid_rttype)/sizeof(oid));
X	snmp_add_null_var(request, oid_rtproto, sizeof(oid_rtproto)/sizeof(oid));
X
X	while(request){
X	    status = snmp_synch_response(Session, request, &response);
X	    if (status != STAT_SUCCESS || response->errstat != SNMP_ERR_NOERROR){
X		fprintf(stderr, "SNMP request failed\n");
X		break;
X	    }
X	    instance = NULL;
X	    request = NULL;
X	    rp->set_destination = 0;
X	    rp->set_interface = 0;
X	    rp->set_gateway = 0;
X	    rp->set_type = 0;
X	    rp->set_proto = 0;
X	    for(vp = response->variables; vp; vp = vp->next_variable){
X		if (vp->name_length != 14 ||
X		    bcmp((char *)vp->name, (char *)oid_rttable, sizeof(oid_rttable))){
X		    continue;	/* if it isn't in this subtree, just continue */
X		}
X
X		if (instance != NULL){
X		    oid *ip, *op;
X		    int count;
X
X		    ip = instance;
X		    op = vp->name + 10;
X		    for(count = 0; count < 4; count++){
X			if (*ip++ != *op++)
X			    break;
X		    }
X		    if (count < 4)
X			continue;	/* not the right instance, ignore */
X		} else {
X		    instance = vp->name + 10;
X		}
X		/*
X		 * At this point, this variable is known to be in the routing table
X		 * subtree, and is of the right instance for this transaction.
X		 */
X
X		if (request == NULL)
X		    request = snmp_pdu_create(GETNEXT_REQ_MSG);
X		snmp_add_null_var(request, vp->name, vp->name_length);
X
X		type = vp->name[9];
X		switch ((char)type){
X		    case RTDEST:
X			bcopy((char *)vp->val.string, (char *)&rp->destination, sizeof(u_long));
X			rp->set_destination = 1;
X			break;
X		    case RTIFINDEX:
X			rp->interface = *vp->val.integer;
X			rp->set_interface = 1;
X			break;
X		    case RTNEXTHOP:
X			bcopy((char *)vp->val.string, (char *)&rp->gateway, sizeof(u_long));
X			rp->set_gateway = 1;
X			break;
X		    case RTTYPE:
X			rp->type = *vp->val.integer;
X			rp->set_type = 1;
X			break;
X		    case RTPROTO:
X			rp->proto = *vp->val.integer;
X			rp->set_proto = 1;
X			break;
X		}
X	    }
X	    if (!(rp->set_destination && rp->set_gateway
X		&& rp->set_type && rp->set_interface)){
X		    if (request)
X			snmp_free_pdu(request);
X		    request = 0;
X		    continue;
X	    }
X	    toloopback = *(char *)&rp->gateway == LOOPBACKNET;
X	    printf("%-16.16s ",
X		(rp->destination.s_addr == 0) ? "default" :
X		(toloopback) ?
X		routename(rp->destination) : netname(rp->destination, 0L));
X	    printf("%-18.18s ", routename(rp->gateway));
X	    flags = name;
X	    *flags++ = 'U'; /* route is in use */
X	    /* this !toloopback shouldnt be necessary */
X	    if (!toloopback && rp->type == MIB_IPROUTETYPE_REMOTE)
X		*flags++ = 'G';
X	    if (toloopback)
X		*flags++ = 'H';
X	    if (rp->proto == MIB_IPROUTEPROTO_ICMP)
X		*flags++ = 'D';	/* redirect */
X	    *flags = '\0';
X	    printf("%-6.6s ", name);
X	    get_ifname(rp->ifname, rp->interface);
X	    ch = rp->ifname[strlen(rp->ifname) - 1];
X	    ch = '5';   /* force the if statement */
X	    if (isdigit(ch))
X		printf(" %.32s\n", rp->ifname);
X	    else
X		printf(" %.32s%d\n", rp->ifname, rp->interface);
X
X	}
X}
X
Xstruct iflist {
X    int	index;
X    char name[64];
X    struct iflist *next;
X} *Iflist = NULL;
X
Xget_ifname(name, index)
X    char *name;
X    int index;
X{
X    struct snmp_pdu *pdu, *response;
X    struct variable_list *vp;
X    struct iflist *ip;
X    oid varname[32];
X    int status;
X
X    for(ip = Iflist; ip; ip = ip->next){
X	if (ip->index == index)
X	    break;
X    }
X    if (ip){
X	strcpy(name, ip->name);
X	return;
X    }
X    ip = (struct iflist *)malloc(sizeof(struct iflist));
X    ip->next = Iflist;
X    Iflist = ip;
X    ip->index = index;
X    pdu = snmp_pdu_create(GET_REQ_MSG);
X    bcopy((char *)oid_ifdescr, (char *)varname, sizeof(oid_ifdescr));
X    varname[10] = (oid)index;
X    snmp_add_null_var(pdu, varname, sizeof(oid_ifdescr)/sizeof(oid) + 1);
X    status = snmp_synch_response(Session, pdu, &response);
X    if (status == STAT_SUCCESS && response->errstat == SNMP_ERR_NOERROR){
X	vp = response->variables;
X	bcopy((char *)vp->val.string, ip->name, vp->val_len);
X	ip->name[vp->val_len] = '\0';
X    } else {
X	sprintf(ip->name, "if%d", index);
X    }    
X    strcpy(name, ip->name);
X}
X
Xchar *
Xroutename(in)
X	struct in_addr in;
X{
X	register char *cp;
X	static char line[MAXHOSTNAMELEN + 1];
X	struct hostent *hp;
X	static char domain[MAXHOSTNAMELEN + 1];
X	static int first = 1;
X	char *index();
X
X	if (first) {
X		first = 0;
X		if (gethostname(domain, MAXHOSTNAMELEN) == 0 &&
X		    (cp = index(domain, '.')))
X			(void) strcpy(domain, cp + 1);
X		else
X			domain[0] = 0;
X	}
X	cp = 0;
X	if (!nflag) {
X		hp = gethostbyaddr((char *)&in, sizeof (struct in_addr),
X			AF_INET);
X		if (hp) {
X			if ((cp = index(hp->h_name, '.')) &&
X			    !strcmp(cp + 1, domain))
X				*cp = 0;
X			cp = hp->h_name;
X		}
X	}
X	if (cp)
X		strncpy(line, cp, sizeof(line) - 1);
X	else {
X#define C(x)	((x) & 0xff)
X		in.s_addr = ntohl(in.s_addr);
X		sprintf(line, "%u.%u.%u.%u", C(in.s_addr >> 24),
X			C(in.s_addr >> 16), C(in.s_addr >> 8), C(in.s_addr));
X	}
X	return (line);
X}
X
X/*
X * Return the name of the network whose address is given.
X * The address is assumed to be that of a net or subnet, not a host.
X */
Xchar *
Xnetname(in, mask)
X	struct in_addr in;
X	u_long mask;
X{
X	char *cp = 0;
X	static char line[MAXHOSTNAMELEN + 1];
X	struct netent *np = 0;
X	u_long net;
X	register i;
X	int subnetshift;
X
X	i = ntohl(in.s_addr);
X	if (!nflag && i) {
X		if (mask == 0) {
X			if (IN_CLASSA(i)) {
X				mask = IN_CLASSA_NET;
X				subnetshift = 8;
X			} else if (IN_CLASSB(i)) {
X				mask = IN_CLASSB_NET;
X				subnetshift = 8;
X			} else {
X				mask = IN_CLASSC_NET;
X				subnetshift = 4;
X			}
X			/*
X			 * If there are more bits than the standard mask
X			 * would suggest, subnets must be in use.
X			 * Guess at the subnet mask, assuming reasonable
X			 * width subnet fields.
X			 */
X			while (i &~ mask)
X				mask = (long)mask >> subnetshift;
X		}
X		net = i & mask;
X		while ((mask & 1) == 0)
X			mask >>= 1, net >>= 1;
X		np = getnetbyaddr(net, AF_INET);
X		if (np)
X			cp = np->n_name;
X	}	
X	if (cp)
X		strncpy(line, cp, sizeof(line) - 1);
X	else if ((i & 0xffffff) == 0)
X		sprintf(line, "%u", C(i >> 24));
X	else if ((i & 0xffff) == 0)
X		sprintf(line, "%u.%u", C(i >> 24) , C(i >> 16));
X	else if ((i & 0xff) == 0)
X		sprintf(line, "%u.%u.%u", C(i >> 24), C(i >> 16), C(i >> 8));
X	else
X		sprintf(line, "%u.%u.%u.%u", C(i >> 24),
X			C(i >> 16), C(i >> 8), C(i));
X	return (line);
X}
X
X/*
X * Print routing statistics
X */
Xrt_stats()
X{
X	struct variable_list *var;
X
X	printf("routing:\n");
X	var = getvarbyname(Session, oid_ipnoroutes, sizeof(oid_ipnoroutes) / sizeof(oid));
X	if (var){
X	    printf("\t%u destination%s found unreachable\n",
X		*var->val.integer, plural((int)*var->val.integer));
X	} else {
X	    printf("\tCouldn't get ipOutNoRoutes variable\n");
X	}
X}
X
X/*
X * Request a variable with a GET REQUEST message on the given
X * session.  The session must have been opened as a synchronous
X * session (synch_setup_session()).  If the variable is found, a
X * pointer to a struct variable_list object will be returned.
X * Otherwise, NULL is returned.  The caller must free the returned
X * variable_list object when done with it.
X */
Xstruct variable_list *
Xgetvarbyname(sp, name, len)
X    struct snmp_session *sp;
X    oid	*name;
X    int len;
X{
X    struct snmp_pdu *request, *response;
X    struct variable_list *var = NULL, *vp;
X    int status;
X
X    request = snmp_pdu_create(GET_REQ_MSG);
X
X    snmp_add_null_var(request, name, len);
X
X    status = snmp_synch_response(sp, request, &response);
X
X    if (status == STAT_SUCCESS){
X	if (response->errstat == SNMP_ERR_NOERROR){
X	    for(var = response->variables; var; var = var->next_variable){
X		if (var->name_length == len && !bcmp(name, var->name, len * sizeof(oid)))
X		    break;	/* found our match */
X	    }
X	    if (var != NULL){
X		/*
X		 * Now unlink this var from pdu chain so it doesn't get freed.
X		 * The caller will free the var.
X		 */
X		if (response->variables == var){
X		    response->variables = var->next_variable;
X		} else {
X		    for(vp = response->variables; vp; vp = vp->next_variable){
X			if (vp->next_variable == var){
X			    vp->next_variable = var->next_variable;
X			    break;
X			}
X		    }
X		}
X	    }
X	}
X    }
X    if (response)
X	snmp_free_pdu(response);
X    return var;
X}
END_OF_FILE
  if test 11885 -ne `wc -c <'netramet/src/apps/snmpnetstat/route.c'`; then
    echo shar: \"'netramet/src/apps/snmpnetstat/route.c'\" unpacked with wrong size!
  fi
  # end of 'netramet/src/apps/snmpnetstat/route.c'
fi
echo shar: End of archive 8 \(of 25\).
cp /dev/null ark8isdone
MISSING=""
for I in 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 ; do
    if test ! -f ark${I}isdone ; then
	MISSING="${MISSING} ${I}"
    fi
done
if test "${MISSING}" = "" ; then
    echo You have unpacked all 25 archives.
    rm -f ark[1-9]isdone ark[1-9][0-9]isdone
else
    echo You still must unpack the following archives:
    echo "        " ${MISSING}
fi
exit 0
exit 0 # Just in case...
exit 0 # Just in case...
