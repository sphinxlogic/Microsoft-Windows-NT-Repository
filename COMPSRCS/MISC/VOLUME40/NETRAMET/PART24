Newsgroups: comp.sources.misc
From: nevil@ccu1.aukuni.ac.nz (J Nevil Brownlee)
Subject: v40i112:  netramet - Network Traffic Accounting Meter, Part24/25
Message-ID: <1993Nov9.020806.19288@sparky.sterling.com>
X-Md4-Signature: 5c1d9fff112d7fa4b556b94e59bfc201
Sender: kent@sparky.sterling.com (Kent Landfield)
Organization: Sterling Software
Date: Tue, 9 Nov 1993 02:08:06 GMT
Approved: kent@sparky.sterling.com

Submitted-by: nevil@ccu1.aukuni.ac.nz (J Nevil Brownlee)
Posting-number: Volume 40, Issue 112
Archive-name: netramet/part24
Environment: INET, UNIX, DOS

#! /bin/sh
# This is a shell archive.  Remove anything before this line, then feed it
# into a shell via "sh file" or similar.  To overwrite existing files,
# type "sh file -c".
# Contents:  netramet/doc/NeTraMet/to.do
#   netramet/doc/snmp/Makefile.snmp netramet/doc/snmp/snmpget.1
#   netramet/doc/snmp/snmpgetnext.1 netramet/doc/snmp/snmptrapd.1
#   netramet/examples/rules.gateway netramet/examples/rules.lan
#   netramet/pc/wattcp.cfg.UU netramet/sg/manager/Makefile
#   netramet/sg/snmplib/Makefile netramet/src/apps/kernel.c
#   netramet/src/snmplib/include/parse.h
#   netramet/src/snmplib/include/snmp.h
#   netramet/src/snmplib/include/snmpclnt.h netramet/sun/apps/Makefile
#   netramet/sun/apps/snmpnetstat/Makefile netramet/sun/meter/Makefile
#   netramet/sun/snmplib/Makefile
# Wrapped by kent@sparky on Tue Nov  2 18:17:14 1993
PATH=/bin:/usr/bin:/usr/ucb:/usr/local/bin:/usr/lbin:$PATH ; export PATH
echo If this archive is complete, you will see the following message:
echo '          "shar: End of archive 24 (of 25)."'
if test -f 'netramet/doc/NeTraMet/to.do' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'netramet/doc/NeTraMet/to.do'\"
else
  echo shar: Extracting \"'netramet/doc/NeTraMet/to.do'\" \(1199 characters\)
  sed "s/^X//" >'netramet/doc/NeTraMet/to.do' <<'END_OF_FILE'
X# 2015, Sun 17 Oct 93
X
X# doc/NeTraMet/to.do
X
X Nevil Brownlee,  Computer Centre,  University of Auckland
X
X
XThis file lists some useful development projects for NeTraMet ..
X
X1) Change to using more recent versions of CMU SNMP and Waterloo TCP.
X   The versions used for this release are those which were current 18
X   months ago.  This will be my next development activity.
X
X2) Extend the list of protocols known to NeTraMet.  Possibilities
X   include:
X
X    * Novell IPX.  Version 2.0 recognises IPX packets in Novell's
X      default packet format, but there are other possibilities, e.g.
X      the one you get when you ECONFIG a Novell server.  I believe
X      it's also possible to produce real 802.2 LLC packets from a
X      Novell server (rather than the default ones which
X      have the cehcksum field set to 0xFFFF).
X
X    * CLNP.  I don't have any of this on my network.  It would require
X      a slightly more elaborate memory allocation scheme for flows,
X      but shouldn't be difficult to implement.
X
X3) Implement secure SNMP for communications between NeTraMet and
X   NeMaC.
X
X
XIf you think of other developments you'd like to see, please let me
Xknow by e-mail to n.brownlee@auckland.ac.nz.
END_OF_FILE
  if test 1199 -ne `wc -c <'netramet/doc/NeTraMet/to.do'`; then
    echo shar: \"'netramet/doc/NeTraMet/to.do'\" unpacked with wrong size!
  fi
  # end of 'netramet/doc/NeTraMet/to.do'
fi
if test -f 'netramet/doc/snmp/Makefile.snmp' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'netramet/doc/snmp/Makefile.snmp'\"
else
  echo shar: Extracting \"'netramet/doc/snmp/Makefile.snmp'\" \(999 characters\)
  sed "s/^X//" >'netramet/doc/snmp/Makefile.snmp' <<'END_OF_FILE'
X# Original CMU Makefile for whole SNMP collection
X
XTARG = bin/snmpget bin/snmpgetnext bin/snmpstatus bin/snmpwalk bin/snmptest bin/snmptrap bin/snmptrapd bin/snmpnetstat bin/snmpmon bin/snmpd
X
Xall:	makeall
X
Xinstall:    apps/snmpget apps/snmpgetnext apps/snmpstatus apps/snmpwalk apps/snmptest apps/snmptrap apps/snmptrapd apps/snmpnetstat/snmpnetstat apps/snmpd
X	cp apps/snmpget bin/snmpget
X	cp apps/snmpgetnext bin/snmpgetnext
X	cp apps/snmpstatus bin/snmpstatus
X	cp apps/snmpwalk bin/snmpwalk
X	cp apps/snmptest bin/snmptest
X	cp apps/snmptrap bin/snmptrap
X	cp apps/snmptrapd bin/snmptrapd
X	cp apps/snmpnetstat/snmpnetstat bin/snmpnetstat
X	cp apps/snmpd bin/snmpd
X
Xapps/snmpget apps/snmpgetnext apps/snmpstatus apps/snmpwalk apps/snmptest apps/snmptrap apps/snmptrapd apps/snmpnetstat/snmpnetstat apps/snmpmon apps/snmpd: makeall
X
Xmakeall:
X	cd snmplib; make all install
X	cd apps; make
X	cd apps/snmpnetstat; make
X
Xclean:
X	cd snmplib; make clean
X	cd apps; make clean
X	cd apps/snmpnetstat; make clean
X
X
END_OF_FILE
  if test 999 -ne `wc -c <'netramet/doc/snmp/Makefile.snmp'`; then
    echo shar: \"'netramet/doc/snmp/Makefile.snmp'\" unpacked with wrong size!
  fi
  # end of 'netramet/doc/snmp/Makefile.snmp'
fi
if test -f 'netramet/doc/snmp/snmpget.1' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'netramet/doc/snmp/snmpget.1'\"
else
  echo shar: Extracting \"'netramet/doc/snmp/snmpget.1'\" \(2626 characters\)
  sed "s/^X//" >'netramet/doc/snmp/snmpget.1' <<'END_OF_FILE'
X.\* /***********************************************************
X.\" 	Copyright 1988, 1989 by Carnegie Mellon University
X.\" 
X.\"                       All Rights Reserved
X.\" 
X.\" Permission to use, copy, modify, and distribute this software and its 
X.\" documentation for any purpose and without fee is hereby granted, 
X.\" provided that the above copyright notice appear in all copies and that
X.\" both that copyright notice and this permission notice appear in 
X.\" supporting documentation, and that the name of CMU not be
X.\" used in advertising or publicity pertaining to distribution of the
X.\" software without specific, written prior permission.  
X.\" 
X.\" CMU DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING
X.\" ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO EVENT SHALL
X.\" CMU BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR
X.\" ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,
X.\" WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION,
X.\" ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS
X.\" SOFTWARE.
X.\" ******************************************************************/
X.TH SNMPGET 1 "17 September 1989"
X.UC 4
X.SH NAME
Xsnmpget - communicates with a network entity using SNMP GET Requests.
X.SH SYNOPSIS
Xsnmpget host community variable-name [variable-name]...
X.SH DESCRIPTION
XSnmpget is an SNMP application that uses the GET Request to query for
Xinformation on a network entity.  One or more fully qualified object
Xidentifiers may be given as arguments on the command line.
XEach variable name is given in the format specified in
X.IR variables (5).
X.PP
XThe
X.I host
Xspecification may be either a host name or an internet address
Xspecified in "dot notation"
X.PP
XThe
X.I community
Xspecifies the community name for the transaction with the remote system.
X.PP
XFor example
X.PP
X.I snmpget netdev-kbox.cc.cmu.edu public system.sysdescr.0 system.sysUpTime.0
X.PP
Xwill retrieve the variables sysDescr.0 and sysUpTime.0:
X.PP
X.I Name: system.sysDescr.0
X.br
X.I OCTET STRING- (ascii):	Kinetics FastPath2
X.PP
X.I Name: system.sysUpTime.0
X.br
X.I Timeticks: (2270351) 6:18:23
X.PP
XIf the network entity has an error processing the request packet, an error
Xpacket will be returned and a message will be shown, helping to pinpoint in what
Xway the request was malformed.  If there were other variables in the request,
Xthe request will be resent without the bad variable.
X.PP
XAdding a "-d" to the argument list will cause the application to dump input and output packets.
X.PP
X.SH "SEE ALSO"
Xvariables(5), RFC 1065, RFC 1066, RFC 1067
END_OF_FILE
  if test 2626 -ne `wc -c <'netramet/doc/snmp/snmpget.1'`; then
    echo shar: \"'netramet/doc/snmp/snmpget.1'\" unpacked with wrong size!
  fi
  # end of 'netramet/doc/snmp/snmpget.1'
fi
if test -f 'netramet/doc/snmp/snmpgetnext.1' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'netramet/doc/snmp/snmpgetnext.1'\"
else
  echo shar: Extracting \"'netramet/doc/snmp/snmpgetnext.1'\" \(2605 characters\)
  sed "s/^X//" >'netramet/doc/snmp/snmpgetnext.1' <<'END_OF_FILE'
X.\* /***********************************************************
X.\" 	Copyright 1988, 1989 by Carnegie Mellon University
X.\" 
X.\"                       All Rights Reserved
X.\" 
X.\" Permission to use, copy, modify, and distribute this software and its 
X.\" documentation for any purpose and without fee is hereby granted, 
X.\" provided that the above copyright notice appear in all copies and that
X.\" both that copyright notice and this permission notice appear in 
X.\" supporting documentation, and that the name of CMU not be
X.\" used in advertising or publicity pertaining to distribution of the
X.\" software without specific, written prior permission.  
X.\" 
X.\" CMU DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING
X.\" ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO EVENT SHALL
X.\" CMU BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR
X.\" ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,
X.\" WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION,
X.\" ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS
X.\" SOFTWARE.
X.\" ******************************************************************/
X.TH SNMPGETNEXT 1 "17 September 1989"
X.UC 4
X.SH NAME
Xsnmpgetnext - communicates with a network entity using SNMP GET NEXT Requests.
X.SH SYNOPSIS
Xsnmpgetnext host community variable-name [variable-name]...
X.SH DESCRIPTION
XSnmpget is an SNMP application that uses the GET NEXT Request to query for
Xinformation on a network entity.  One or more object
Xidentifiers may be given as arguments on the command line.
XEach variable name is given in the format specified in
X.IR variables (5).
XFor each one, the variable that is lexicographicly "next" in the remote entity's
XMIB will be returned.
X.PP
XThe
X.I host
Xspecification may be either a host name or an internet address
Xspecified in "dot notation"
X.PP
XThe
X.I community
Xspecifies the community name for the transaction with the remote system.
X.PP
XFor example
X.PP
X.I snmpgetnext netdev-kbox.cc.cmu.edu public system.sysdescr system.sysUpTime
X.PP
Xwill retrieve the variables sysDescr.0 and sysUpTime.0:
X.PP
X.I Name: system.sysDescr.0
X.br
X.I OCTET STRING- (ascii):	Kinetics FastPath2
X.PP
X.I Name: system.sysUpTime.0
X.br
X.I Timeticks: (2270351) 6:18:23
X.PP
XIf the network entity has an error processing the request packet, an error
Xmessage will be shown, helping to pinpoint in what way the request was malformed.
X.PP
XAdding a "-d" to the argument list will cause the application to dump input and output packets.
X.PP
X.SH "SEE ALSO"
Xvariables(5), RFC 1065, RFC 1066, RFC 1067
END_OF_FILE
  if test 2605 -ne `wc -c <'netramet/doc/snmp/snmpgetnext.1'`; then
    echo shar: \"'netramet/doc/snmp/snmpgetnext.1'\" unpacked with wrong size!
  fi
  # end of 'netramet/doc/snmp/snmpgetnext.1'
fi
if test -f 'netramet/doc/snmp/snmptrapd.1' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'netramet/doc/snmp/snmptrapd.1'\"
else
  echo shar: Extracting \"'netramet/doc/snmp/snmptrapd.1'\" \(2145 characters\)
  sed "s/^X//" >'netramet/doc/snmp/snmptrapd.1' <<'END_OF_FILE'
X.\* /***********************************************************
X.\" 	Copyright 1989 by Carnegie Mellon University
X.\" 
X.\"                       All Rights Reserved
X.\" 
X.\" Permission to use, copy, modify, and distribute this software and its 
X.\" documentation for any purpose and without fee is hereby granted, 
X.\" provided that the above copyright notice appear in all copies and that
X.\" both that copyright notice and this permission notice appear in 
X.\" supporting documentation, and that the name of CMU not be
X.\" used in advertising or publicity pertaining to distribution of the
X.\" software without specific, written prior permission.  
X.\" 
X.\" CMU DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING
X.\" ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO EVENT SHALL
X.\" CMU BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR
X.\" ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,
X.\" WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION,
X.\" ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS
X.\" SOFTWARE.
X.\" ******************************************************************/
X.TH SNMPTRAPD 1 "17 SEPTEMBER 1989"
X.UC 4
X.SH NAME
Xsnmptrapd - Receive and log snmp trap messages.
X.SH SYNOPSIS
Xsnmptrapd [ -p ]
X.SH DESCRIPTION
XSnmptrapd
Xis an SNMP application that receives and logs snmp trap messages
Xsent to the SNMP-TRAP port (162) on the local machine.
X.PP
XIf the
X.B -p
Xoption is given,
X.I snmptrapd
Xwill print it's messages to the standard output.  Otherwise it will use
X.IR syslog (8)
Xto log messages.  These syslog messages are sent with the level of LOG_WARNING, and
Xare if available (usually on 4.3 systems) are sent to the LOG_LOCAL0 facility.
X.PP
XThe log messages are of the form:
X.br
X.I Sep 17 22:39:52 suffern snmptrapd: 128.2.13.41:
X.I Cold Start Trap (0) Uptime:
X.I 8 days, 0:35:46
X.PP
X.I Snmptrapd
Xmust be run as root so that UDP port 162 can be opened.
X.PP
XAdding a "-d" to the argument list will cause the application to dump input and output packets.
X.PP
X.SH "SEE ALSO"
Xsyslog(8), variables(5), RFC 1065, RFC 1066, RFC 1067
END_OF_FILE
  if test 2145 -ne `wc -c <'netramet/doc/snmp/snmptrapd.1'`; then
    echo shar: \"'netramet/doc/snmp/snmptrapd.1'\" unpacked with wrong size!
  fi
  # end of 'netramet/doc/snmp/snmptrapd.1'
fi
if test -f 'netramet/examples/rules.gateway' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'netramet/examples/rules.gateway'\"
else
  echo shar: Extracting \"'netramet/examples/rules.gateway'\" \(2465 characters\)
  sed "s/^X//" >'netramet/examples/rules.gateway' <<'END_OF_FILE'
X#  1605, Fri 24 Sep 93
X#
X#  Rule specification file to tally traffic to/from ccr1 
X#
X#  Nevil Brownlee,  Computer Centre,  University of Auckland
X#
XSET 6  # Rule + action set number 6
X#
XRULES
X#
XDestAdjacentAddress,  ff-ff-ff-ff-ff-ff,  aa-00-04-00-f4-ed,   #  ccr1
X    Pushto,  3;  #   1
XNull,                   0,            0,          Fail,  0;  #   2  Try again
X#
XSourcePeerType,       255,           IP,        Pushto,  5;  #   3
XNull,                   0,            0,       Succeed,  0;  #   4  Ignore
X#
XSourcePeerAddress,  255.255.0.0,  130.216.0.0,  Pushto,  8;  #   5  Auckland
XSourcePeerAddress,  192.0.0.0,    192.0.0.0,    Pushto,  8;  #   6  Low C
XNull,                 0,            0,          Pushto, 11;  #   7  Low B
X#
XDestPeerAddress,    192.0.0.0,  192.0.0.0,       Tally,  1;  #   8  Tally C-C
XDestPeerAddress,    192.0.0.0,  128.0.0.0,       Tally,  2;  #   9  Tally C-B
XNull,                 0,          0,             Tally,  3;  #  10  Tally C-A
X#
XDestPeerAddress,    192.0.0.0,  128.0.0.0,       Tally,  4;  #  11  Tally B-B
XDestPeerAddress,    192.0.0.0,  192.0.0.0,       Tally,  5;  #  12  Tally B-C
XNull,                 0,          0,             Tally,  6;  #  13  Tally B-A
X#
XACTIONS
X#
XSourcePeerMask=255.255.255.0, DestPeerMask=255.255.255.0,  #  1 Tally C-C
X   SourceDetailTypeMask=255, 
X   SourceDetailMask=255.255, DestDetailMask=255.255;
XSourcePeerMask=255.255.255.0, DestPeerMask=255.255.0.0,    #  1 Tally C-B
X   SourceDetailTypeMask=255, 
X   SourceDetailMask=255.255, DestDetailMask=255.255;
XSourcePeerMask=255.255.255.0, DestPeerMask=255.0.0.0,      #  1 Tally C-A
X   SourceDetailTypeMask=255, 
X   SourceDetailMask=255.255, DestDetailMask=255.255;
XSourcePeerMask=255.255.0.0,   DestPeerMask=255.255.255.0,  #  1 Tally B-C
X   SourceDetailTypeMask=255, 
X   SourceDetailMask=255.255, DestDetailMask=255.255;
XSourcePeerMask=255.255.0.0,   DestPeerMask=255.255.0.0,    #  1 Tally B-B
X   SourceDetailTypeMask=255, 
X   SourceDetailMask=255.255, DestDetailMask=255.255;
XSourcePeerMask=255.255.0.0,   DestPeerMask=255.0.0.0,      #  1 Tally B-A
X   SourceDetailTypeMask=255, 
X   SourceDetailMask=255.255, DestDetailMask=255.255;
X#
XFORMAT FlowRuleSet FlowIndex FirstTime "  "
X#  SourceAdjacentAddress DestAdjacentAddress "  "
X#  SourcePeerType 
X   SourcePeerAddress DestPeerAddress "  "
X   SourceDetailType SourceDetailAddress DestDetailAddress "  "
X   ToOctets FromOctets;
X#
XSTATISTICS  #  Collect meter statistics
X#
X# end of file
END_OF_FILE
  if test 2465 -ne `wc -c <'netramet/examples/rules.gateway'`; then
    echo shar: \"'netramet/examples/rules.gateway'\" unpacked with wrong size!
  fi
  # end of 'netramet/examples/rules.gateway'
fi
if test -f 'netramet/examples/rules.lan' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'netramet/examples/rules.lan'\"
else
  echo shar: Extracting \"'netramet/examples/rules.lan'\" \(2170 characters\)
  sed "s/^X//" >'netramet/examples/rules.lan' <<'END_OF_FILE'
X#  1015, Mon 4 Oct 93
X#
X#  Rule specification file to tally Local Area Network traffic
X#
X#  Nevil Brownlee,  Computer Centre,  University of Auckland
X#
XSET 4  # Rule + action set number
X#
XRULES
X#
XSourcePeerType & 255 = IP.0.0.0 :       Tally,  1;  #   1
XSourcePeerType & 255 = DECnet :        Pushto,  6;  #   2
XSourcePeerType & 255 = EtherTalk :     Pushto, 11;  #   3
XSourcePeerType & 255 = Novell :         Tally,  6;  #   4
XNull & 0 = 0 :                        Succeed,  0;  #   5  Ignore
X#
XSourceDetailType & 255 = 38 : Tally,  2;  #   6  Tally DECnet data by host
XSourceDetailType & 255 =  6 : Tally,  2;  #   7
XSourceDetailType & 255 = 46 : Tally,  2;  #   8
XSourceDetailType & 255 = 14 : Tally,  2;  #   9
XNull & 0 = 0 :                Tally,  3;  #  10  Tally rest of DECnet by detail
X#
XSourceDetailType & 255 =  3 : Tally,  4;  #  11  Tally AT data by host
XNull & 0 = 0 :                Tally,  5;  #  12  Tally rest of AT by detail
X#
XACTIONS
X#
XSourcePeerType=IP,                     #  1  Tally IP by subnet and port
X   SourcePeerMask=255.255.255.0, DestPeerMask=255.255.255.0,
X   SourceDetailTypeMask=255,
X   SourceDetailMask=255.255, DestDetailMask=255.255;
X#
XSourcePeerType=DECnet,                 #  2 Tally DECnet data by host
X   SourcePeerMask=255.255.255.0, DestPeerMask=255.255.255.0,
X   SourceDetailTypeMask=255;
XSourcePeerType=DECnet,                 #  3 Tally DECnet by protocol
X   SourceDetailTypeMask=255;
X#
XSourcePeerType=EtherTalk,              #  4 Tally Ethertalk data by host
X   SourcePeerMask=255.255.255.0, DestPeerMask=255.255.255.0,
X   SourceDetailTypeMask=255;  
XSourcePeerType=EtherTalk,              #  5 Tally Ethertalk by DDP type
X   SourceDetailTypeMask=255;  
X#
XSourcePeerType=Novell,                 #  6  Tally IPX by network nbr and port
X   SourcePeerMask=255.255.255.255, DestPeerMask=255.255.255.255,
X   SourceDetailTypeMask=255,
X   SourceDetailMask=255.255, DestDetailMask=255.255;
X#
XSTATISTICS
X#
XFORMAT FlowRuleSet FlowIndex FirstTime "  "
X   SourcePeerType SourcePeerAddress DestPeerAddress "  "
X   SourceDetailType SourceDetailAddress DestDetailAddress "  "
X   ToPDUs FromPDUs "  " ToOctets FromOctets;
X#
X# end of file
END_OF_FILE
  if test 2170 -ne `wc -c <'netramet/examples/rules.lan'`; then
    echo shar: \"'netramet/examples/rules.lan'\" unpacked with wrong size!
  fi
  # end of 'netramet/examples/rules.lan'
fi
if test -f 'netramet/pc/wattcp.cfg.UU' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'netramet/pc/wattcp.cfg.UU'\"
else
  echo shar: Extracting \"'netramet/pc/wattcp.cfg.UU'\" \(1015 characters\)
  sed "s/^X//" >'netramet/pc/wattcp.cfg.UU' <<'END_OF_FILE'
Xbegin 640 netramet/pc/wattcp.cfg
XM(" @(" @(" C('-E="!I<"!N=6UB97(*(" @(" @("!M>5]I<#TQ,C,N,3(S
XM+C$R,RXQ,C,*(" @(" @(" C(&]R(&9O<B!B;V]T<"!S970@;7E?:7 ]8F]O
XM=' *"B @(" @(" @(R!S970@82!N;VXM>F5R;R!N971W;W)K(&UA<VL*(" @
XM(" @("!N971M87-K/3(U-2XR-34N,C4U+C *"B @(" @(" @(R!E;G1E<B!O
XM;F4@;W(@;6]R92!N86UE<V5R=F5R<PH@(" @(" @(&YA;65S97)V97(],3(S
XM+C$R,RXQ+C(*"B @(" @(" @(R!E;G1E<B!O;F4@;W(@;6]R92!G871E=V%Y
XM<PH@(" @(" @(&=A=&5W87D],3(S+C$R,RXQ+C(U- H*(" @(" @(" C('-H
XM;W5L9"!H879E(&$@9&]M86EN(&QI<W0*"61O;6%I;G-L:7-T/2)A=6-K;&%N
XM9"YA8RYN>B(*"B @(" @(" @(R!O<'1I;VYA;"!I;F%C=&EV92!F;&%G('1E
XM;&QS(%=!5%1#4"!T;R!K:6QL(&-O;FYE8W1I;VX@:68@;F]T:&EN9PH@(" @
XM(" @(",@:&%P<&5N<R!F;W(@82!P97)I;V0@;V8@=&EM92!I;B!S96-O;F1S
XM"B @(" @(" @(R!E9RX@:6YA8W1I=F4],S P(" @(",@,S P('-E8V]N9',@
XM;W(@-2!M:6YU=&5S"@H@(" @(" @(",@9&5F:6YE('1I;65O=70@9F]R(&UO
XM<W0@=&AI;F=S+"!L:6ME(&]P96YI;F<@<V5S<VEO;G,*(" @(" @(" C(&1E
XM9F%U;'1S('1O(#,P('-E8V]N9',*(" @(" @(" C(&5G+B!S;V-K9&5L87D]
XA-C @(" @(R!E>'1E;F0@:70@=&\@;VYE(&UI;G5T90H:
X 
Xend
END_OF_FILE
  if test 1015 -ne `wc -c <'netramet/pc/wattcp.cfg.UU'`; then
    echo shar: \"'netramet/pc/wattcp.cfg.UU'\" unpacked with wrong size!
  else
    echo shar: Uudecoding \"'netramet/pc/wattcp.cfg'\" \(708 characters\)
    cat netramet/pc/wattcp.cfg.UU | uudecode
    if test 708 -ne `wc -c <'netramet/pc/wattcp.cfg'`; then
      echo shar: \"'netramet/pc/wattcp.cfg'\" uudecoded with wrong size!
    else
      rm netramet/pc/wattcp.cfg.UU
    fi
  fi
  # end of 'netramet/pc/wattcp.cfg.UU'
fi
if test -f 'netramet/sg/manager/Makefile' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'netramet/sg/manager/Makefile'\"
else
  echo shar: Extracting \"'netramet/sg/manager/Makefile'\" \(837 characters\)
  sed "s/^X//" >'netramet/sg/manager/Makefile' <<'END_OF_FILE'
X#
X#  Makefile for NeMaC
X#
X#  Nevil Brownlee, Computer Centre, UNiversity of Auckland
X#
X
XSRC= ../../src/manager
XSINCLUDE= ../../src/snmplib/include
XNINCLUDE= ../../src/manager/include
X
XSNMPH = $(SINCLUDE)/asn1.h $(SINCLUDE)/mib.h $(SINCLUDE)/parse.h \
X	$(SINCLUDE)/snmp.h $(SINCLUDE)/snmpapi.h \
X	$(SINCLUDE)/snmpclnt.h $(SINCLUDE)/snmpimpl.h
X
XTARG=	 NeMaC
X
XLIBS=	../snmplib/libsnmp.a
X
XCFLAGS=	-g -I$(NINCLUDE) -I$(SINCLUDE) -D_BSD_SIGNALS -D_BSD_COMPAT
X
X
Xall: $(TARG)
X
Xnmc.o:	$(SNMPH) $(SRC)/nmc.c
X	${CC} $(CFLAGS) -c $(SRC)/nmc.c
X
Xnmc_pars.o:	$(SNMPH) $(SRC)/nmc_pars.c
X	${CC} $(CFLAGS) -c $(SRC)/nmc_pars.c
X
Xnmc_snmp.o:	$(SNMPH) $(SRC)/nmc_snmp.c
X	${CC} $(CFLAGS) -c $(SRC)/nmc_snmp.c
X
XNeMaC:	nmc.o nmc_pars.o nmc_snmp.o ${LIBS}
X	${CC} -o $@ nmc.o nmc_pars.o nmc_snmp.o ${LIBS}
X
X
Xclean:
X	rm -f *.o ${TARG}
X
Xinstall:
X	cp ${TARG} ../bin
END_OF_FILE
  if test 837 -ne `wc -c <'netramet/sg/manager/Makefile'`; then
    echo shar: \"'netramet/sg/manager/Makefile'\" unpacked with wrong size!
  fi
  # end of 'netramet/sg/manager/Makefile'
fi
if test -f 'netramet/sg/snmplib/Makefile' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'netramet/sg/snmplib/Makefile'\"
else
  echo shar: Extracting \"'netramet/sg/snmplib/Makefile'\" \(1537 characters\)
  sed "s/^X//" >'netramet/sg/snmplib/Makefile' <<'END_OF_FILE'
X#
X# Makefile for snmplib.
X#
X# Modified by Nevil Brownlee, Auckland University
X#    Silicon Grpahics version
X#
X
XTARG=libsnmp.a
X
XSRC=	../../src/snmplib
XSINCLUDE= ../../src/snmplib/include
X
XOBJS=	asn1.o mib.o parse.o snmp.o snmpapi.o snmpauth.o snmpclnt.o
X
XCFLAGS= -g -cckr -I$(SINCLUDE) -D_BSD_SIGNALS -D_BSD_COMPAT
X#CFLAGS= -g -I$(SINCLUDE) -D_BSD_SIGNALS -D_BSD_COMPAT
X
Xall: $(TARG)
X
Xasn1.o: $(SINCLUDE)/asn1.h $(SRC)/asn1.c
X	cc $(CFLAGS) -c $(SRC)/asn1.c
X
Xmib.o:	$(SINCLUDE)/asn1.h $(SINCLUDE)/snmpimpl.h $(SINCLUDE)/snmpapi.h \
X	   $(SINCLUDE)/parse.h $(SRC)/mib.c
X	cc $(CFLAGS) -c $(SRC)/mib.c
X
Xparse.o: $(SINCLUDE)/parse.h $(SRC)/parse.c
X	cc $(CFLAGS) -c $(SRC)/parse.c
X
Xsnmp.o:	$(SINCLUDE)/asn1.h $(SINCLUDE)/snmp.h $(SINCLUDE)/snmpimpl.h \
X	   $(SINCLUDE)/mib.h $(SRC)/snmp.c
X	cc $(CFLAGS) -c $(SRC)/snmp.c
X
Xsnmpapi.o: $(SINCLUDE)/asn1.h $(SINCLUDE)/snmp.h $(SINCLUDE)/snmpimpl.h \
X	   $(SINCLUDE)/snmpapi.h $(SRC)/snmpapi.c
X	cc $(CFLAGS) -c $(SRC)/snmpapi.c
X
Xsnmpauth.o: $(SINCLUDE)/asn1.h $(SINCLUDE)/snmp.h $(SINCLUDE)/snmpimpl.h \
X	   $(SRC)/snmpauth.c
X	cc $(CFLAGS) -c $(SRC)/snmpauth.c
X
Xsnmpclnt.o: $(SINCLUDE)/asn1.h $(SINCLUDE)/snmp.h $(SINCLUDE)/snmpimpl.h \
X	   $(SINCLUDE)/snmpapi.h $(SINCLUDE)/snmpclnt.h \
X	   $(SRC)/snmpclnt.c
X	cc $(CFLAGS) -c $(SRC)/snmpclnt.c
X
X
Xlibsnmp.a:    ${OBJS}
X	ar r libsnmp.a ${OBJS}
X#	ranlib libsnmp.a
X
Xinstall:	../lib/libsnmp.a
X
X#../lib/libsnmp.a:	libsnmp.a
X#	cp libsnmp.a ../lib
X#	ranlib ../lib/libsnmp.a
X
X
Xlint:
X	lint -nhx $(CSRCS)
X
Xclean:
X	rm -f ${OBJS} ${TARG}
X#	rm -f ../lib/${TARG}
X
END_OF_FILE
  if test 1537 -ne `wc -c <'netramet/sg/snmplib/Makefile'`; then
    echo shar: \"'netramet/sg/snmplib/Makefile'\" unpacked with wrong size!
  fi
  # end of 'netramet/sg/snmplib/Makefile'
fi
if test -f 'netramet/src/apps/kernel.c' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'netramet/src/apps/kernel.c'\"
else
  echo shar: Extracting \"'netramet/src/apps/kernel.c'\" \(672 characters\)
  sed "s/^X//" >'netramet/src/apps/kernel.c' <<'END_OF_FILE'
X
X#include <sys/types.h>
X#include <stdio.h>
X
Xstatic int kmem;
Xint swap, mem;
X
Xinit_kmem(file)
X    char *file;
X{
X    kmem = open(file, 0);
X    if (kmem < 0){
X	fprintf(stderr, "cannot open ");
X	perror(file);
X	exit(1);
X    }
X#ifdef ibm032
X    mem = open("/dev/mem");    
X    if (mem < 0){
X	fprintf(stderr, "cannot open ");
X	perror(file);
X	exit(1);
X    }
X    swap = open("/dev/drum");
X    if (swap < 0){
X	fprintf(stderr, "cannot open ");
X	perror(file);
X	exit(1);
X    }
X#endif
X}
X
X/*
X * Seek into the kernel for a value.
X */
Xoff_t
Xklseek(base)
X	off_t base;
X{
X	return (lseek(kmem, base, 0));
X}
X
Xklread(buf, buflen)
X    char *buf;
X    int buflen;
X{
X    read(kmem, buf, buflen);
X}
X
END_OF_FILE
  if test 672 -ne `wc -c <'netramet/src/apps/kernel.c'`; then
    echo shar: \"'netramet/src/apps/kernel.c'\" unpacked with wrong size!
  fi
  # end of 'netramet/src/apps/kernel.c'
fi
if test -f 'netramet/src/snmplib/include/parse.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'netramet/src/snmplib/include/parse.h'\"
else
  echo shar: Extracting \"'netramet/src/snmplib/include/parse.h'\" \(2568 characters\)
  sed "s/^X//" >'netramet/src/snmplib/include/parse.h' <<'END_OF_FILE'
X/***********************************************************
X	Copyright 1989 by Carnegie Mellon University
X
X                      All Rights Reserved
X
XPermission to use, copy, modify, and distribute this software and its 
Xdocumentation for any purpose and without fee is hereby granted, 
Xprovided that the above copyright notice appear in all copies and that
Xboth that copyright notice and this permission notice appear in 
Xsupporting documentation, and that the name of CMU not be
Xused in advertising or publicity pertaining to distribution of the
Xsoftware without specific, written prior permission.  
X
XCMU DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING
XALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO EVENT SHALL
XCMU BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR
XANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,
XWHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION,
XARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS
XSOFTWARE.
X******************************************************************/
X/*
X * parse.h
X */
X
X/*
X * A linked list of tag-value pairs for enumerated integers.
X */
Xstruct enum_list {
X    struct enum_list *next;
X    int	value;
X    char *label;
X};
X
X/*
X * A linked list of nodes.
X */
Xstruct node {
X    struct node *next;
X    char label[32]; /* This node's (unique) textual name */
X    u_long  subid;  /* This node's integer subidentifier */
X    char parent[32];/* The parent's textual name */
X    int type;	    /* The type of object this represents */
X    struct enum_list *enums;	/* (optional) list of enumerated integers (otherwise NULL) */
X};
X
X/*
X * A tree in the format of the tree structure of the MIB.
X */
Xstruct tree {
X    struct tree *child_list;	/* list of children of this node */
X    struct tree *next_peer;	/* Next node in list of peers */
X    struct tree *parent;
X    char label[32];		/* This node's textual name */
X    u_long subid;		/* This node's integer subidentifier */
X    int type;			/* This node's object type */
X    struct enum_list *enums;	/* (optional) list of enumerated integers (otherwise NULL) */
X    void (*printer)();     /* Value printing function */
X};
X
X/* non-aggregate types for tree end nodes */
X#define TYPE_OTHER	    0
X#define TYPE_OBJID	    1
X#define TYPE_OCTETSTR	    2
X#define TYPE_INTEGER	    3
X#define TYPE_NETADDR	    4
X#define	TYPE_IPADDR	    5
X#define TYPE_COUNTER	    6
X#define TYPE_GAUGE	    7
X#define TYPE_TIMETICKS	    8
X#define TYPE_OPAQUE	    9
X#define TYPE_NULL	    10
X
Xstruct tree *read_mib();
X
END_OF_FILE
  if test 2568 -ne `wc -c <'netramet/src/snmplib/include/parse.h'`; then
    echo shar: \"'netramet/src/snmplib/include/parse.h'\" unpacked with wrong size!
  fi
  # end of 'netramet/src/snmplib/include/parse.h'
fi
if test -f 'netramet/src/snmplib/include/snmp.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'netramet/src/snmplib/include/snmp.h'\"
else
  echo shar: Extracting \"'netramet/src/snmplib/include/snmp.h'\" \(2082 characters\)
  sed "s/^X//" >'netramet/src/snmplib/include/snmp.h' <<'END_OF_FILE'
X/*
X * Definitions for the Simple Network Management Protocol (RFC 1067).
X *
X *
X */
X/***********************************************************
X	Copyright 1988, 1989 by Carnegie Mellon University
X
X                      All Rights Reserved
X
XPermission to use, copy, modify, and distribute this software and its 
Xdocumentation for any purpose and without fee is hereby granted, 
Xprovided that the above copyright notice appear in all copies and that
Xboth that copyright notice and this permission notice appear in 
Xsupporting documentation, and that the name of CMU not be
Xused in advertising or publicity pertaining to distribution of the
Xsoftware without specific, written prior permission.  
X
XCMU DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING
XALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO EVENT SHALL
XCMU BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR
XANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,
XWHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION,
XARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS
XSOFTWARE.
X******************************************************************/
X
X#define SNMP_PORT	    161
X#define SNMP_TRAP_PORT	    162
X
X#define SNMP_MAX_LEN	    484
X
X#define SNMP_VERSION_1	    0
X
X#define GET_REQ_MSG	    (ASN_CONTEXT | ASN_CONSTRUCTOR | 0x0)
X#define GETNEXT_REQ_MSG	    (ASN_CONTEXT | ASN_CONSTRUCTOR | 0x1)
X#define GET_RSP_MSG	    (ASN_CONTEXT | ASN_CONSTRUCTOR | 0x2)
X#define SET_REQ_MSG	    (ASN_CONTEXT | ASN_CONSTRUCTOR | 0x3)
X#define TRP_REQ_MSG	    (ASN_CONTEXT | ASN_CONSTRUCTOR | 0x4)
X
X#define SNMP_ERR_NOERROR    (0x0)
X#define SNMP_ERR_TOOBIG	    (0x1)
X#define SNMP_ERR_NOSUCHNAME (0x2)
X#define SNMP_ERR_BADVALUE   (0x3)
X#define SNMP_ERR_READONLY   (0x4)
X#define SNMP_ERR_GENERR	    (0x5)
X
X#define SNMP_TRAP_COLDSTART		(0x0)
X#define SNMP_TRAP_WARMSTART		(0x1)
X#define SNMP_TRAP_LINKDOWN		(0x2)
X#define SNMP_TRAP_LINKUP		(0x3)
X#define SNMP_TRAP_AUTHFAIL		(0x4)
X#define SNMP_TRAP_EGPNEIGHBORLOSS	(0x5)
X#define SNMP_TRAP_ENTERPRISESPECIFIC	(0x6)
X
END_OF_FILE
  if test 2082 -ne `wc -c <'netramet/src/snmplib/include/snmp.h'`; then
    echo shar: \"'netramet/src/snmplib/include/snmp.h'\" unpacked with wrong size!
  fi
  # end of 'netramet/src/snmplib/include/snmp.h'
fi
if test -f 'netramet/src/snmplib/include/snmpclnt.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'netramet/src/snmplib/include/snmpclnt.h'\"
else
  echo shar: Extracting \"'netramet/src/snmplib/include/snmpclnt.h'\" \(1453 characters\)
  sed "s/^X//" >'netramet/src/snmplib/include/snmpclnt.h' <<'END_OF_FILE'
X/*
X * snmp_client.h
X */
X/***********************************************************
X	Copyright 1988, 1989 by Carnegie Mellon University
X
X                      All Rights Reserved
X
XPermission to use, copy, modify, and distribute this software and its 
Xdocumentation for any purpose and without fee is hereby granted, 
Xprovided that the above copyright notice appear in all copies and that
Xboth that copyright notice and this permission notice appear in 
Xsupporting documentation, and that the name of CMU not be
Xused in advertising or publicity pertaining to distribution of the
Xsoftware without specific, written prior permission.  
X
XCMU DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING
XALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO EVENT SHALL
XCMU BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR
XANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,
XWHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION,
XARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS
XSOFTWARE.
X******************************************************************/
Xstruct synch_state {
X    int	waiting;
X    int status;
X/* status codes */
X#define STAT_SUCCESS	0
X#define STAT_ERROR	1
X#define STAT_TIMEOUT 2
X    int reqid;
X    struct snmp_pdu *pdu;
X};
X
Xextern struct synch_state snmp_synch_state;
X
Xstruct snmp_pdu	*snmp_pdu_create();
Xstruct snmp_pdu *snmp_fix_pdu();
Xchar *snmp_errstring();
END_OF_FILE
  if test 1453 -ne `wc -c <'netramet/src/snmplib/include/snmpclnt.h'`; then
    echo shar: \"'netramet/src/snmplib/include/snmpclnt.h'\" unpacked with wrong size!
  fi
  # end of 'netramet/src/snmplib/include/snmpclnt.h'
fi
if test -f 'netramet/sun/apps/Makefile' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'netramet/sun/apps/Makefile'\"
else
  echo shar: Extracting \"'netramet/sun/apps/Makefile'\" \(2704 characters\)
  sed "s/^X//" >'netramet/sun/apps/Makefile' <<'END_OF_FILE'
X# Modified by Nevil Brownlee, Auckland University
X#    SunOS version
X#
X# Makefile for snmpget, manager, snmpgetnext, collect, snmpwalk, snmpstatus, snmptest snmptrap snmptrapd snmpd
X#
X
XSRC=	../../src/apps
XSINCLUDE= ../../src/snmplib/include
X
XSNMPH = $(SINCLUDE)/asn1.h $(SINCLUDE)/mib.h $(SINCLUDE)/parse.h \
X	$(SINCLUDE)/snmp.h $(SINCLUDE)/snmpapi.h \
X	$(SINCLUDE)/snmpclnt.h $(SINCLUDE)/snmpimpl.h 
X
XTARG=	snmpagnt.o snmptest \
X#	snmpget snmpgetnext snmpwalk snmpstatus \
X#	snmptrap snmptrapd
X#	snmptest snmptrap snmptrapd \
X#	snmpd
X
XLIBS=	../snmplib/libsnmp.a
X
XCC= acc  #  Sun ANSI C compiler
XCFLAGS=	-g -I$(SINCLUDE) -D_BSD_SIGNALS -D_BSD_COMPAT -DSUNOS
X
X
Xall: $(TARG)
X
X
Xsnmptest.o:  $(SNMPH) $(SRC)/snmptest.c
X	${CC} $(CFLAGS) -c $(SRC)/snmptest.c
X
Xsnmptest:    snmptest.o ${LIBS}
X	${CC} -o $@ snmptest.o ${LIBS}
X
X
Xsnmptrap.o:  $(SNMPH) $(SRC)/snmptrap.c
X	${CC} $(CFLAGS) -c $(SRC)/snmptrap.c
X
Xsnmptrap:    snmptrap.o ${LIBS}
X	${CC} -o $@ snmptrap.o  ${LIBS}
X
X
Xsnmptrapd.o:  $(SNMPH) $(SRC)/snmptrapd.c
X	${CC} $(CFLAGS) -c $(SRC)/snmptrapd.c
X
Xsnmptrapd:    snmptrapd.o ${LIBS}
X	${CC} -o $@ snmptrapd.o ${LIBS}
X
X
Xsnmpget.o:  $(SNMPH) $(SRC)/snmpget.c
X	${CC} $(CFLAGS) -c $(SRC)/snmpget.c
X
Xsnmpget:    snmpget.o ${LIBS}
X	${CC} -o $@ snmpget.o ${LIBS}
X
X
X#manager.o:  $(SNMPH) $(SRC)/manager.c
X#	${CC} $(CFLAGS) -c $(SRC)/manager.c
X
X#manager:    manager.o ${LIBS}
X#	${CC} -o $@ manager.o ${LIBS}
X
X
X#monitor.o:  $(SNMPH) $(SRC)/monitor.c
X#	${CC} $(CFLAGS) -c $(SRC)/monitor.c
X
X#monitor:    monitor.o ${LIBS}
X#	${CC} -o $@ monitor.o ${LIBS}
X
X
Xsnmpgetnext.o:  $(SNMPH) $(SRC)/snmpgetnext.c
X	${CC} $(CFLAGS) -c $(SRC)/snmpgetnext.c
X
Xsnmpgetnext:    snmpgetnext.o ${LIBS}
X	${CC} -o $@ snmpgetnext.o ${LIBS}
X
X
X#collect:    collect.o ${LIBS}
X#	${CC} -o $@ collect.o ${LIBS}
X
X
Xsnmpwalk.o:  $(SNMPH) $(SRC)/snmpwalk.c
X	${CC} $(CFLAGS) -c $(SRC)/snmpwalk.c
X
Xsnmpwalk:    snmpwalk.o ${LIBS}
X	${CC} -o $@ snmpwalk.o ${LIBS}
X
X
Xsnmpstatus.o:  $(SNMPH) $(SRC)/snmpstatus.c
X	${CC} $(CFLAGS) -c $(SRC)/snmpstatus.c
X
Xsnmpstatus:    snmpstatus.o ${LIBS}
X	${CC} -o $@ snmpstatus.o ${LIBS}
X
X
X# snmpd.o:  $(SNMPH) $(SRC)/snmpd.c
X#	${CC} $(CFLAGS) -c $(SRC)/snmpd.c
X
X# kernel.o:  $(SNMPH) $(SRC)/kernel.c
X#	${CC} $(CFLAGS) -c $(SRC)/kernel.c
X
Xsnmpagnt.o:  $(SNMPH) $(SRC)/snmpagnt.c
X	${CC} $(CFLAGS) -c $(SRC)/snmpagnt.c
X
X# snmp_vars.o:  $(SNMPH) $(SRC)/snmp_vars.c
X#	${CC} $(CFLAGS) -c $(SRC)/snmp_vars.c
X
X# snmp_var_route.o:  $(SNMPH) $(SRC)/snmp_var_route.c
X#	${CC} $(CFLAGS) -c $(SRC)/snmp_var_route.c
X
X# snmpd:	snmpd.o kernel.o snmpagnt.o snmp_vars.o snmp_var_route.o ${LIBS}
X#	${CC} -o $@ snmpd.o kernel.o snmpagnt.o snmp_vars.o \
X#		snmp_var_route.o   ${LIBS}
X
X
Xclean:
X	rm -f *.o ${TARG}
X
Xinstall:
X	cp ${TARG} ../bin
X
X
END_OF_FILE
  if test 2704 -ne `wc -c <'netramet/sun/apps/Makefile'`; then
    echo shar: \"'netramet/sun/apps/Makefile'\" unpacked with wrong size!
  fi
  # end of 'netramet/sun/apps/Makefile'
fi
if test -f 'netramet/sun/apps/snmpnetstat/Makefile' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'netramet/sun/apps/snmpnetstat/Makefile'\"
else
  echo shar: Extracting \"'netramet/sun/apps/snmpnetstat/Makefile'\" \(1552 characters\)
  sed "s/^X//" >'netramet/sun/apps/snmpnetstat/Makefile' <<'END_OF_FILE'
X# Modified by Nevil Brownlee, Auckland University
X#    SunOS  version
X#
X#
X# Copyright (c) 1987 Regents of the University of California.
X# All rights reserved.
X#
X# Redistribution and use in source and binary forms are permitted
X# provided that the above copyright notice and this paragraph are
X# duplicated in all such forms and that any documentation,
X# advertising materials, and other materials related to such
X# distribution and use acknowledge that the software was developed
X# by the University of California, Berkeley.  The name of the
X# University may not be used to endorse or promote products derived
X# from this software without specific prior written permission.
X# THIS SOFTWARE IS PROVIDED ``AS IS'' AND WITHOUT ANY EXPRESS OR
X# IMPLIED WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED
X# WARRANTIES OF MERCHANTIBILITY AND FITNESS FOR A PARTICULAR PURPOSE.
X#
X#	@(#)Makefile	5.10 (Berkeley) 9/20/88
X#
XSINCLUDE= ../../../src/snmplib/include
X
XCC= acc  # Sun ANSII compiler
XCFLAGS= 	-g -I$(SINCLUDE) -D_BSD_SIGNALS -D_BSD_COMPAT
X
XLIBS=	../../snmplib/libsnmp.a
X
XSRC=	../../../src/apps/snmpnetstat
X
XSRCS=	${SRC}/inet.c ${SRC}/if.c ${SRC}/main.c ${SRC}/route.c 
XOBJS=	${SRC}/inet.o ${SRC}/if.o ${SRC}/main.o ${SRC}/route.o
X
Xall: snmpnetstat
X
Xsnmpnetstat: ${SRCS} ${LIBS}
X	${CC} -o $@ ${CFLAGS} ${SRCS} ${LIBS}
X
Xclean:
X	rm -f ${OBJS} core snmpnetstat
X
Xcleandir: clean
X	rm -f ${MAN} tags .depend
X
Xdepend: ${SRCS}
X	mkdep ${CFLAGS} ${SRCS}
X
Xlint: ${SRCS}
X	lint ${CFLAGS} ${SRCS}
X
Xtags: ${SRCS}
X	ctags ${SRCS}
X
Xinstall:
X	cp snmpnetstat ../../bin
X
END_OF_FILE
  if test 1552 -ne `wc -c <'netramet/sun/apps/snmpnetstat/Makefile'`; then
    echo shar: \"'netramet/sun/apps/snmpnetstat/Makefile'\" unpacked with wrong size!
  fi
  # end of 'netramet/sun/apps/snmpnetstat/Makefile'
fi
if test -f 'netramet/sun/meter/Makefile' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'netramet/sun/meter/Makefile'\"
else
  echo shar: Extracting \"'netramet/sun/meter/Makefile'\" \(956 characters\)
  sed "s/^X//" >'netramet/sun/meter/Makefile' <<'END_OF_FILE'
X#
X# Makefile flowd
X#
X
XSRC=		../../src/meter
XSINCLUDE= 	../../src/snmplib/include
XMINCLUDE=	../../src/meter/include
X
XSNMPH = $(SINCLUDE)/ausnmp.h \
X	$(SINCLUDE)/asn1.h $(SINCLUDE)/mib.h \
X	$(SINCLUDE)/snmp.h $(SINCLUDE)/snmpimpl.h
X
XMETERH = $(MINCLUDE)/flowhash.h $(MINCLUDE)/met_vars.h \
X	$(MINCLUDE)/decnet.h $(MINCLUDE)/pktsnap.h
X
XTARG=	NeTraMet
X
XLIBS=	../apps/snmpagnt.o ../snmplib/libsnmp.a
X
XCC= acc  #  Sun ANSI C compiler
XCFLAGS=	-g -I$(MINCLUDE) -I$(SINCLUDE) -D_BSD_SIGNALS -D_BSD_COMPAT -DSUNOS
X
X
Xall: $(TARG)
X
X
Xmeter_ux.o:  $(SNMPH) $(METERH) $(SRC)/meter_ux.c
X	${CC} $(CFLAGS) -c $(SRC)/meter_ux.c
X
Xflowhash.o:	$(SNMPH) $(METERH) $(SRC)/flowhash.c
X	${CC} $(CFLAGS) -c $(SRC)/flowhash.c
X
Xmet_vars.o:	$(SNMPH) $(METERH) $(SRC)/met_vars.c
X	${CC} $(CFLAGS) -c $(SRC)/met_vars.c
X
X
XNeTraMet:	flowhash.o met_vars.o meter_ux.o ${LIBS}
X	${CC} -o $@ meter_ux.o flowhash.o met_vars.o ${LIBS}
X
X
X  
Xclean:
X	rm -f *.o ${TARG}
X
Xinstall:
X	cp ${TARG} ../bin
X
X
X
X
END_OF_FILE
  if test 956 -ne `wc -c <'netramet/sun/meter/Makefile'`; then
    echo shar: \"'netramet/sun/meter/Makefile'\" unpacked with wrong size!
  fi
  # end of 'netramet/sun/meter/Makefile'
fi
if test -f 'netramet/sun/snmplib/Makefile' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'netramet/sun/snmplib/Makefile'\"
else
  echo shar: Extracting \"'netramet/sun/snmplib/Makefile'\" \(1546 characters\)
  sed "s/^X//" >'netramet/sun/snmplib/Makefile' <<'END_OF_FILE'
X#
X# Makefile for snmplib.
X#
X# Modified by Nevil Brownlee, Auckland University
X#    SunOS version
X#
X
XTARG=libsnmp.a
X
XSRC=	../../src/snmplib
XSINCLUDE= ../../src/snmplib/include
X
XOBJS=	asn1.o mib.o parse.o snmp.o snmpapi.o snmpauth.o snmpclnt.o \
X		snmp.o snmpapi.o
X
XCC= acc  #  Sun ANSI C compiler
XCFLAGS= -g -I$(SINCLUDE) -D_BSD_SIGNALS -D_BSD_COMPAT -DSUNOS
X
Xall: $(TARG)
X
Xasn1.o: $(SINCLUDE)/asn1.h $(SRC)/asn1.c
X	$(CC) $(CFLAGS) -c $(SRC)/asn1.c
X
Xmib.o:	$(SINCLUDE)/asn1.h $(SINCLUDE)/snmpimpl.h $(SINCLUDE)/snmpapi.h \
X	   $(SINCLUDE)/parse.h $(SRC)/mib.c
X	$(CC) $(CFLAGS) -c $(SRC)/mib.c
X
Xparse.o: $(SINCLUDE)/parse.h $(SRC)/parse.c
X	$(CC) $(CFLAGS) -c $(SRC)/parse.c
X
Xsnmp.o:	$(SINCLUDE)/asn1.h $(SINCLUDE)/snmp.h $(SINCLUDE)/snmpimpl.h \
X	   $(SINCLUDE)/mib.h $(SRC)/snmp.c
X	$(CC) $(CFLAGS) -c $(SRC)/snmp.c
X
Xsnmpapi.o: $(SINCLUDE)/asn1.h $(SINCLUDE)/snmp.h $(SINCLUDE)/snmpimpl.h \
X	   $(SINCLUDE)/snmpapi.h $(SRC)/snmpapi.c
X	$(CC) $(CFLAGS) -c $(SRC)/snmpapi.c
X
Xsnmpauth.o: $(SINCLUDE)/asn1.h $(SINCLUDE)/snmp.h $(SINCLUDE)/snmpimpl.h \
X	   $(SRC)/snmpauth.c
X	$(CC) $(CFLAGS) -c $(SRC)/snmpauth.c
X
Xsnmpclnt.o: $(SINCLUDE)/asn1.h $(SINCLUDE)/snmp.h $(SINCLUDE)/snmpimpl.h \
X	   $(SINCLUDE)/snmpapi.h $(SINCLUDE)/snmpclnt.h \
X	   $(SRC)/snmpclnt.c
X	$(CC) $(CFLAGS) -c $(SRC)/snmpclnt.c
X
X
Xlibsnmp.a:    ${OBJS}
X	ar r libsnmp.a ${OBJS}
X	ranlib libsnmp.a
X
Xinstall:	../lib/libsnmp.a
X
X#../lib/libsnmp.a:	libsnmp.a
X#	cp libsnmp.a ../lib
X#	ranlib ../lib/libsnmp.a
X
X
Xlint:
X	lint -nhx $(CSRCS)
X
Xclean:
X	rm -f ${OBJS} ${TARG}
X#	rm -f ../lib/${TARG}
X
END_OF_FILE
  if test 1546 -ne `wc -c <'netramet/sun/snmplib/Makefile'`; then
    echo shar: \"'netramet/sun/snmplib/Makefile'\" unpacked with wrong size!
  fi
  # end of 'netramet/sun/snmplib/Makefile'
fi
echo shar: End of archive 24 \(of 25\).
cp /dev/null ark24isdone
MISSING=""
for I in 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 ; do
    if test ! -f ark${I}isdone ; then
	MISSING="${MISSING} ${I}"
    fi
done
if test "${MISSING}" = "" ; then
    echo You have unpacked all 25 archives.
    rm -f ark[1-9]isdone ark[1-9][0-9]isdone
else
    echo You still must unpack the following archives:
    echo "        " ${MISSING}
fi
exit 0
exit 0 # Just in case...
