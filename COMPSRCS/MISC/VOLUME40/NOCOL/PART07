Newsgroups: comp.sources.misc
From: vikas@jvnc.net (Vikas Aggarwal)
Subject: v40i137:  nocol - Network Monitoring System, Part07/26
Message-ID: <1993Nov23.034742.5666@sparky.sterling.com>
X-Md4-Signature: 2a883d3045f290b19f154bc96391c49e
Sender: kent@sparky.sterling.com (Kent Landfield)
Organization: Sterling Software
Date: Tue, 23 Nov 1993 03:47:42 GMT
Approved: kent@sparky.sterling.com

Submitted-by: vikas@jvnc.net (Vikas Aggarwal)
Posting-number: Volume 40, Issue 137
Archive-name: nocol/part07
Environment: INET, UNIX

#! /bin/sh
# This is a shell archive.  Remove anything before this line, then feed it
# into a shell via "sh file" or similar.  To overwrite existing files,
# type "sh file -c".
# Contents:  nocol-3.0/src/cmu-snmp/README.JVNC
#   nocol-3.0/src/cmu-snmp/mib.txt.B
#   nocol-3.0/src/cmu-snmp/snmplib/asn1.c
# Wrapped by kent@sparky on Tue Nov  9 22:22:15 1993
PATH=/bin:/usr/bin:/usr/ucb:/usr/local/bin:/usr/lbin:$PATH ; export PATH
echo If this archive is complete, you will see the following message:
echo '          "shar: End of archive 7 (of 26)."'
if test -f 'nocol-3.0/src/cmu-snmp/README.JVNC' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'nocol-3.0/src/cmu-snmp/README.JVNC'\"
else
  echo shar: Extracting \"'nocol-3.0/src/cmu-snmp/README.JVNC'\" \(561 characters\)
  sed "s/^X//" >'nocol-3.0/src/cmu-snmp/README.JVNC' <<'END_OF_FILE'
X1. Fixed bug in cmu/snmplib/asn1.c in a routine called asn_parse_int as 
X   discussed in the cisco mailing list.
X
X2. Changed the define for HAVE_FDMACROS  in snmp_client.c and snmp_api.c
X
X3. Appended the cisco mib91 file with the mib.txt file. and deleted the
X   DESCRIPTIONS which existed in the cisco mib file. To test, try:
X
XTIPS
X----
X   snmpwalk ringo cid .iso.org.dod.internet.private.enterprises.cisco.local
X
XFor terminal servers:
X
X	cisco.local.lts.ltsLineTable
X
XFor routes:
X
X .iso.org.dod.internet.mgmt.mib.ip.ipRoutingTable.iprouteentry.iproutemetric1
X
END_OF_FILE
  if test 561 -ne `wc -c <'nocol-3.0/src/cmu-snmp/README.JVNC'`; then
    echo shar: \"'nocol-3.0/src/cmu-snmp/README.JVNC'\" unpacked with wrong size!
  fi
  # end of 'nocol-3.0/src/cmu-snmp/README.JVNC'
fi
if test -f 'nocol-3.0/src/cmu-snmp/mib.txt.B' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'nocol-3.0/src/cmu-snmp/mib.txt.B'\"
else
  echo shar: Extracting \"'nocol-3.0/src/cmu-snmp/mib.txt.B'\" \(53002 characters\)
  sed "s/^X//" >'nocol-3.0/src/cmu-snmp/mib.txt.B' <<'END_OF_FILE'
X                        noWarning(2)
X                   }
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { lsystem 106 }
X
X
X
X
X
X          -- cisco MIB                                         [Page 23]
X--
X
X
X
X
X
X          -- Request for Comments: Draft             cisco Systems, Inc.
X
X
X               envTestPt6warn OBJECT-TYPE
X                   SYNTAX  INTEGER {
X                        warning(1),
X                        noWarning(2)
X                   }
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { lsystem 107 }
X
X               envFirmVersion OBJECT-TYPE
X                   SYNTAX  DisplayString
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { lsystem 108 }
X
X               envTechnicianID OBJECT-TYPE
X                   SYNTAX  DisplayString
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { lsystem 109 }
X
X               envType OBJECT-TYPE
X                   SYNTAX  DisplayString
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { lsystem 110 }
X
X               envBurnDate OBJECT-TYPE
X                   SYNTAX  DisplayString
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { lsystem 111 }
X
X               envSerialNumber OBJECT-TYPE
X                   SYNTAX  DisplayString
X
X
X
X
X
X          -- cisco MIB                                         [Page 24]
X--
X
X
X
X
X
X          -- Request for Comments: Draft             cisco Systems, Inc.
X
X
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { lsystem 112 }
X
X
X               -- Local Interface Group
X
X          -- This group is present in all products.
X
X
X          -- Local Interface Table
X
X          -- This group provides additional objects to the table
X          -- defined by RFC1156.
X
X               lifTable OBJECT-TYPE
X                   SYNTAX  SEQUENCE OF LIfEntry
X                   ACCESS  not-accessible
X                   STATUS  mandatory
X                   ::= { linterfaces 1 }
X
X               lifEntry OBJECT-TYPE
X                   SYNTAX LIfEntry
X                   ACCESS  not-accessible
X                   STATUS  mandatory
X               ::= { lifTable 1 }
X
X               LIfEntry ::=
X                   SEQUENCE {
X                       locIfHardType
X                           DisplayString,
X                       locIfLineProt
X                           INTEGER,
X                       locIfLastIn
X                           INTEGER,
X                       locIfLastOut
X                           INTEGER,
X
X
X
X
X
X          -- cisco MIB                                         [Page 25]
X--
X
X
X
X
X
X          -- Request for Comments: Draft             cisco Systems, Inc.
X
X
X                       locIfLastOutHang
X                           INTEGER,
X                       locIfInBitsSec
X                           INTEGER,
X                       locIfInPktsSec
X                           INTEGER,
X                       locIfOutBitsSec
X                           INTEGER,
X                       locIfOutPktsSec
X                           INTEGER,
X                       locIfInRunts
X                           INTEGER,
X                       locIfInGiants
X                           INTEGER,
X                       locIfInCRC
X                           INTEGER,
X                       locIfInFrame
X                           INTEGER,
X                       locIfInOverrun
X                           INTEGER,
X                       locIfInIgnored
X                           INTEGER,
X                       locIfInAbort
X                           INTEGER,
X                       locIfResets
X                           INTEGER,
X                       locIfRestarts
X                           INTEGER,
X                       locIfKeep
X                           INTEGER,
X                       locIfReason
X                           DisplayString,
X                       locIfCarTrans
X                           INTEGER,
X                       locIfReliab
X                           INTEGER,
X                       locIfDelay
X                           INTEGER,
X                       locIfLoad
X                           INTEGER,
X                       locIfCollisions
X                           INTEGER,
X                       locIfInputQueueDrops
X                           INTEGER,
X                       locIfOutputQueueDrops
X
X
X
X
X
X          -- cisco MIB                                         [Page 26]
X--
X
X
X
X
X
X          -- Request for Comments: Draft             cisco Systems, Inc.
X
X
X                           INTEGER,
X                       locIfDescr
X                           DisplayString,
X                       locIfPakmon
X                           INTEGER,
X                       locIfSlowInPkts
X                           Counter,
X                       locIfSlowOutPkts
X                           Counter,
X                       locIfSlowInOctets
X                           Counter,
X                       locIfSlowOutOctets
X                           Counter,
X                       locIfFastInPkts
X                           Counter,
X                       locIfFastOutPkts
X                           Counter,
X                       locIfFastInOctets
X                           Counter,
X                       locIfFastOutOctets
X                           Counter,
X                       locIfotherInPkts
X                           Counter,
X                       locIfotherOutPkts
X                           Counter,
X                       locIfotherInOctets
X                           Counter,
X                       locIfotherOutOctets
X                           Counter,
X                       locIfipInPkts
X                           Counter,
X                       locIfipOutPkts
X                           Counter,
X                       locIfipInOctets
X                           Counter,
X                       locIfipOutOctets
X                           Counter,
X                       locIfdecnetInPkts
X                           Counter,
X                       locIfdecnetOutPkts
X                           Counter,
X                       locIfdecnetInOctets
X                           Counter,
X                       locIfdecnetOutOctets
X                           Counter,
X
X
X
X
X
X          -- cisco MIB                                         [Page 27]
X--
X
X
X
X
X
X          -- Request for Comments: Draft             cisco Systems, Inc.
X
X
X                       locIfxnsInPkts
X                           Counter,
X                       locIfxnsOutPkts
X                           Counter,
X                       locIfxnsInOctets
X                           Counter,
X                       locIfxnsOutOctets
X                           Counter,
X                       locIfclnsInPkts
X                           Counter,
X                       locIfclnsOutPkts
X                           Counter,
X                       locIfclnsInOctets
X                           Counter,
X                       locIfclnsOutOctets
X                           Counter,
X                       locIfappletalkInPkts
X                           Counter,
X                       locIfappletalkOutPkts
X                           Counter,
X                       locIfappletalkInOctets
X                           Counter,
X                       locIfappletalkOutOctets
X                           Counter,
X                       locIfnovellInPkts
X                           Counter,
X                       locIfnovellOutPkts
X                           Counter,
X                       locIfnovellInOctets
X                           Counter,
X                       locIfnovellOutOctets
X                           Counter,
X                       locIfapolloInPkts
X                           Counter,
X                       locIfapolloOutPkts
X                           Counter,
X                       locIfapolloInOctets
X                           Counter,
X                       locIfapolloOutOctets
X                           Counter,
X                       locIfvinesInPkts
X                           Counter,
X                       locIfvinesOutPkts
X                           Counter,
X                       locIfvinesInOctets
X
X
X
X
X
X          -- cisco MIB                                         [Page 28]
X--
X
X
X
X
X
X          -- Request for Comments: Draft             cisco Systems, Inc.
X
X
X                           Counter,
X                       locIfvinesOutOctets
X                           Counter,
X                       locIfbridgedInPkts
X                           Counter,
X                       locIfbridgedOutPkts
X                           Counter,
X                       locIfbridgedInOctets
X                           Counter,
X                       locIfbridgedOutOctets
X                           Counter,
X                       locIfsrbInPkts
X                           Counter,
X                       locIfsrbOutPkts
X                           Counter,
X                       locIfsrbInOctets
X                           Counter,
X                       locIfsrbOutOctets
X                           Counter,
X                       locIfchaosInPkts
X                           Counter,
X                       locIfchaosOutPkts
X                           Counter,
X                       locIfchaosInOctets
X                           Counter,
X                       locIfchaosOutOctets
X                           Counter,
X                       locIfpupInPkts
X                           Counter,
X                       locIfpupOutPkts
X                           Counter,
X                       locIfpupInOctets
X                           Counter,
X                       locIfpupOutOctets
X                           Counter,
X                       locIfmopInPkts
X                           Counter,
X                       locIfmopOutPkts
X                           Counter,
X                       locIfmopInOctets
X                           Counter,
X                       locIfmopOutOctets
X                           Counter,
X                       locIflanmanInPkts
X                           Counter,
X
X
X
X
X
X          -- cisco MIB                                         [Page 29]
X--
X
X
X
X
X
X          -- Request for Comments: Draft             cisco Systems, Inc.
X
X
X                       locIflanmanOutPkts
X                           Counter,
X                       locIflanmanInOctets
X                           Counter,
X                       locIflanmanOutOctets
X                           Counter,
X                       locIfstunInPkts
X                           Counter,
X                       locIfstunOutPkts
X                           Counter,
X                       locIfstunInOctets
X                           Counter,
X                       locIfstunOutOctets
X                           Counter,
X                       locIfspanInPkts
X                           Counter,
X                       locIfspanOutPkts
X                           Counter,
X                       locIfspanInOctets
X                           Counter,
X                       locIfspanOutOctets
X                           Counter,
X                       locIfarpInPkts
X                           Counter,
X                       locIfarpOutPkts
X                           Counter,
X                       locIfarpInOctets
X                           Counter,
X                       locIfarpOutOctets
X                           Counter,
X                       locIfprobeInPkts
X                           Counter,
X                       locIfprobeOutPkts
X                           Counter,
X                       locIfprobeInOctets
X                           Counter,
X                       locIfprobeOutOctets
X                           Counter
X                   }
X
X
X          -- The following section describes the components of the
X          -- table.
X
X               locIfHardType OBJECT-TYPE
X
X
X
X
X
X          -- cisco MIB                                         [Page 30]
X--
X
X
X
X
X
X          -- Request for Comments: Draft             cisco Systems, Inc.
X
X
X                   SYNTAX  DisplayString
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { lifEntry 1 }
X
X               locIfLineProt OBJECT-TYPE
X                   SYNTAX  INTEGER
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { lifEntry 2 }
X
X               locIfLastIn OBJECT-TYPE
X                   SYNTAX  INTEGER
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { lifEntry 3 }
X
X               locIfLastOut OBJECT-TYPE
X                   SYNTAX  INTEGER
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { lifEntry 4 }
X
X               locIfLastOutHang OBJECT-TYPE
X                   SYNTAX  INTEGER
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { lifEntry 5 }
X
X               locIfInBitsSec OBJECT-TYPE
X
X
X
X
X
X          -- cisco MIB                                         [Page 31]
X--
X
X
X
X
X
X          -- Request for Comments: Draft             cisco Systems, Inc.
X
X
X                   SYNTAX  INTEGER
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { lifEntry 6 }
X
X               locIfInPktsSec OBJECT-TYPE
X                   SYNTAX  INTEGER
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { lifEntry 7 }
X
X               locIfOutBitsSec OBJECT-TYPE
X                   SYNTAX  INTEGER
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { lifEntry 8 }
X
X               locIfOutPktsSec OBJECT-TYPE
X                   SYNTAX  INTEGER
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { lifEntry 9 }
X
X               locIfInRunts OBJECT-TYPE
X                   SYNTAX  INTEGER
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { lifEntry 10 }
X
X               locIfInGiants OBJECT-TYPE
X
X
X
X
X
X          -- cisco MIB                                         [Page 32]
X--
X
X
X
X
X
X          -- Request for Comments: Draft             cisco Systems, Inc.
X
X
X                   SYNTAX  INTEGER
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { lifEntry 11 }
X
X               locIfInCRC OBJECT-TYPE
X                   SYNTAX  INTEGER
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { lifEntry 12 }
X
X               locIfInFrame OBJECT-TYPE
X                   SYNTAX  INTEGER
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { lifEntry 13 }
X
X               locIfInOverrun OBJECT-TYPE
X                   SYNTAX  INTEGER
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { lifEntry 14 }
X
X               locIfInIgnored OBJECT-TYPE
X                   SYNTAX  INTEGER
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { lifEntry 15 }
X
X               locIfInAbort OBJECT-TYPE
X
X
X
X
X
X          -- cisco MIB                                         [Page 33]
X--
X
X
X
X
X
X          -- Request for Comments: Draft             cisco Systems, Inc.
X
X
X                   SYNTAX  INTEGER
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { lifEntry 16 }
X
X               locIfResets OBJECT-TYPE
X                   SYNTAX  INTEGER
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { lifEntry 17 }
X
X               locIfRestarts OBJECT-TYPE
X                   SYNTAX  INTEGER
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { lifEntry 18 }
X
X               locIfKeep OBJECT-TYPE
X                   SYNTAX  INTEGER
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { lifEntry 19 }
X
X               locIfReason OBJECT-TYPE
X                   SYNTAX  DisplayString
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { lifEntry 20 }
X
X               locIfCarTrans OBJECT-TYPE
X                   SYNTAX  INTEGER
X                   ACCESS  read-only
X
X
X
X
X
X          -- cisco MIB                                         [Page 34]
X--
X
X
X
X
X
X          -- Request for Comments: Draft             cisco Systems, Inc.
X
X
X                   STATUS  mandatory
X                   ::= { lifEntry 21 }
X
X               locIfReliab OBJECT-TYPE
X                   SYNTAX  INTEGER
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { lifEntry 22 }
X
X               locIfDelay OBJECT-TYPE
X                   SYNTAX  INTEGER
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { lifEntry 23 }
X
X               locIfLoad OBJECT-TYPE
X                   SYNTAX  INTEGER
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { lifEntry 24 }
X
X               locIfCollisions OBJECT-TYPE
X                   SYNTAX  INTEGER
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { lifEntry 25 }
X
X               locIfInputQueueDrops OBJECT-TYPE
X                   SYNTAX  INTEGER
X                   ACCESS  read-only
X
X
X
X
X
X          -- cisco MIB                                         [Page 35]
X--
X
X
X
X
X
X          -- Request for Comments: Draft             cisco Systems, Inc.
X
X
X                   STATUS  mandatory
X                   ::= { lifEntry 26 }
X
X               locIfOutputQueueDrops OBJECT-TYPE
X                   SYNTAX  INTEGER
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { lifEntry 27 }
X
X               locIfDescr OBJECT-TYPE
X                   SYNTAX  DisplayString
X                   ACCESS  read-write
X                   STATUS  mandatory
X                   ::= { lifEntry 28 }
X
X               locIfPakmon OBJECT-TYPE
X                   SYNTAX  INTEGER {
X                        enable(1),
X                        disable(2)
X                   }
X                   ACCESS  read-write
X                   STATUS  mandatory
X                   ::= { lifEntry 29 }
X
X               locIfSlowInPkts OBJECT-TYPE
X                   SYNTAX  Counter
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { lifEntry 30 }
X
X               locIfSlowOutPkts OBJECT-TYPE
X                   SYNTAX  Counter
X
X
X
X
X
X          -- cisco MIB                                         [Page 36]
X--
X
X
X
X
X
X          -- Request for Comments: Draft             cisco Systems, Inc.
X
X
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { lifEntry 31 }
X
X               locIfSlowInOctets OBJECT-TYPE
X                   SYNTAX  Counter
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { lifEntry 32 }
X
X               locIfSlowOutOctets OBJECT-TYPE
X                   SYNTAX  Counter
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { lifEntry 33 }
X
X               locIfFastInPkts OBJECT-TYPE
X                   SYNTAX  Counter
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { lifEntry 34 }
X
X               locIfFastOutPkts OBJECT-TYPE
X                   SYNTAX  Counter
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { lifEntry 35 }
X
X               locIfFastInOctets OBJECT-TYPE
X                   SYNTAX  Counter
X
X
X
X
X
X          -- cisco MIB                                         [Page 37]
X--
X
X
X
X
X
X          -- Request for Comments: Draft             cisco Systems, Inc.
X
X
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { lifEntry 36 }
X
X               locIfFastOutOctets OBJECT-TYPE
X                   SYNTAX  Counter
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { lifEntry 37 }
X
X               locIfotherInPkts OBJECT-TYPE
X                   SYNTAX  Counter
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { lifEntry 38 }
X
X               locIfotherOutPkts OBJECT-TYPE
X                   SYNTAX  Counter
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { lifEntry 39 }
X
X               locIfotherInOctets OBJECT-TYPE
X                   SYNTAX  Counter
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { lifEntry 40 }
X
X               locIfotherOutOctets OBJECT-TYPE
X                   SYNTAX  Counter
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { lifEntry 41 }
X
X               locIfipInPkts OBJECT-TYPE
X                   SYNTAX  Counter
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { lifEntry 42 }
X
X               locIfipOutPkts OBJECT-TYPE
X                   SYNTAX  Counter
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { lifEntry 43 }
X
X               locIfipInOctets OBJECT-TYPE
X                   SYNTAX  Counter
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { lifEntry 44 }
X
X               locIfipOutOctets OBJECT-TYPE
X                   SYNTAX  Counter
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { lifEntry 45 }
X
X               locIfdecnetInPkts OBJECT-TYPE
X                   SYNTAX  Counter
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { lifEntry 46 }
X
X               locIfdecnetOutPkts OBJECT-TYPE
X                   SYNTAX  Counter
X
X
X
X
X
X          -- cisco MIB                                         [Page 39]
X--
X
X
X
X
X
X          -- Request for Comments: Draft             cisco Systems, Inc.
X
X
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { lifEntry 47 }
X
X               locIfdecnetInOctets OBJECT-TYPE
X                   SYNTAX  Counter
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { lifEntry 48 }
X
X               locIfdecnetOutOctets OBJECT-TYPE
X                   SYNTAX  Counter
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { lifEntry 49 }
X
X               locIfxnsInPkts OBJECT-TYPE
X                   SYNTAX  Counter
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { lifEntry 50 }
X
X               locIfxnsOutPkts OBJECT-TYPE
X                   SYNTAX  Counter
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { lifEntry 51 }
X
X               locIfxnsInOctets OBJECT-TYPE
X                   SYNTAX  Counter
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { lifEntry 52 }
X
X
X
X
X
X          -- cisco MIB                                         [Page 40]
X--
X
X
X
X
X
X          -- Request for Comments: Draft             cisco Systems, Inc.
X
X
X               locIfxnsOutOctets OBJECT-TYPE
X                   SYNTAX  Counter
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { lifEntry 53 }
X
X               locIfclnsInPkts OBJECT-TYPE
X                   SYNTAX  Counter
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { lifEntry 54 }
X
X               locIfclnsOutPkts OBJECT-TYPE
X                   SYNTAX  Counter
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { lifEntry 55 }
X
X               locIfclnsInOctets OBJECT-TYPE
X                   SYNTAX  Counter
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { lifEntry 56 }
X
X               locIfclnsOutOctets OBJECT-TYPE
X                   SYNTAX  Counter
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { lifEntry 57 }
X
X               locIfappletalkInPkts OBJECT-TYPE
X                   SYNTAX  Counter
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { lifEntry 58 }
X
X               locIfappletalkOutPkts OBJECT-TYPE
X                   SYNTAX  Counter
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { lifEntry 59 }
X
X               locIfappletalkInOctets OBJECT-TYPE
X                   SYNTAX  Counter
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { lifEntry 60 }
X
X               locIfappletalkOutOctets OBJECT-TYPE
X                   SYNTAX  Counter
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { lifEntry 61 }
X
X               locIfnovellInPkts OBJECT-TYPE
X                   SYNTAX  Counter
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { lifEntry 62 }
X
X               locIfnovellOutPkts OBJECT-TYPE
X                   SYNTAX  Counter
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { lifEntry 63 }
X
X               locIfnovellInOctets OBJECT-TYPE
X                   SYNTAX  Counter
X
X
X
X
X
X          -- cisco MIB                                         [Page 42]
X--
X
X
X
X
X
X          -- Request for Comments: Draft             cisco Systems, Inc.
X
X
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { lifEntry 64 }
X
X               locIfnovellOutOctets OBJECT-TYPE
X                   SYNTAX  Counter
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { lifEntry 65 }
X
X               locIfapolloInPkts OBJECT-TYPE
X                   SYNTAX  Counter
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { lifEntry 66 }
X
X               locIfapolloOutPkts OBJECT-TYPE
X                   SYNTAX  Counter
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { lifEntry 67 }
X
X               locIfapolloInOctets OBJECT-TYPE
X                   SYNTAX  Counter
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { lifEntry 68 }
X
X               locIfapolloOutOctets OBJECT-TYPE
X                   SYNTAX  Counter
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { lifEntry 69 }
X
X
X
X
X
X          -- cisco MIB                                         [Page 43]
X--
X
X
X
X
X
X          -- Request for Comments: Draft             cisco Systems, Inc.
X
X
X               locIfvinesInPkts OBJECT-TYPE
X                   SYNTAX  Counter
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { lifEntry 70 }
X
X               locIfvinesOutPkts OBJECT-TYPE
X                   SYNTAX  Counter
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { lifEntry 71 }
X
X               locIfvinesInOctets OBJECT-TYPE
X                   SYNTAX  Counter
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { lifEntry 72 }
X
X               locIfvinesOutOctets OBJECT-TYPE
X                   SYNTAX  Counter
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { lifEntry 73 }
X
X               locIfbridgedInPkts OBJECT-TYPE
X                   SYNTAX  Counter
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { lifEntry 74 }
X
X               locIfbridgedOutPkts OBJECT-TYPE
X                   SYNTAX  Counter
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { lifEntry 75 }
X
X               locIfbridgedInOctets OBJECT-TYPE
X                   SYNTAX  Counter
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { lifEntry 76 }
X
X               locIfbridgedOutOctets OBJECT-TYPE
X                   SYNTAX  Counter
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { lifEntry 77 }
X
X               locIfsrbInPkts OBJECT-TYPE
X                   SYNTAX  Counter
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { lifEntry 78 }
X
X               locIfsrbOutPkts OBJECT-TYPE
X                   SYNTAX  Counter
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { lifEntry 79 }
X
X               locIfsrbInOctets OBJECT-TYPE
X                   SYNTAX  Counter
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { lifEntry 80 }
X
X               locIfsrbOutOctets OBJECT-TYPE
X                   SYNTAX  Counter
X
X
X
X
X
X          -- cisco MIB                                         [Page 45]
X--
X
X
X
X
X
X          -- Request for Comments: Draft             cisco Systems, Inc.
X
X
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { lifEntry 81 }
X
X               locIfchaosInPkts OBJECT-TYPE
X                   SYNTAX  Counter
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { lifEntry 82 }
X
X               locIfchaosOutPkts OBJECT-TYPE
X                   SYNTAX  Counter
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { lifEntry 83 }
X
X               locIfchaosInOctets OBJECT-TYPE
X                   SYNTAX  Counter
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { lifEntry 84 }
X
X               locIfchaosOutOctets OBJECT-TYPE
X                   SYNTAX  Counter
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { lifEntry 85 }
X
X               locIfpupInPkts OBJECT-TYPE
X                   SYNTAX  Counter
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { lifEntry 86 }
X
X
X
X
X
X          -- cisco MIB                                         [Page 46]
X--
X
X
X
X
X
X          -- Request for Comments: Draft             cisco Systems, Inc.
X
X
X               locIfpupOutPkts OBJECT-TYPE
X                   SYNTAX  Counter
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { lifEntry 87 }
X
X               locIfpupInOctets OBJECT-TYPE
X                   SYNTAX  Counter
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { lifEntry 88 }
X
X               locIfpupOutOctets OBJECT-TYPE
X                   SYNTAX  Counter
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { lifEntry 89 }
X
X               locIfmopInPkts OBJECT-TYPE
X                   SYNTAX  Counter
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { lifEntry 90 }
X
X               locIfmopOutPkts OBJECT-TYPE
X                   SYNTAX  Counter
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { lifEntry 91 }
X
X               locIfmopInOctets OBJECT-TYPE
X                   SYNTAX  Counter
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { lifEntry 92 }
X
X               locIfmopOutOctets OBJECT-TYPE
X                   SYNTAX  Counter
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { lifEntry 93 }
X
X               locIflanmanInPkts OBJECT-TYPE
X                   SYNTAX  Counter
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { lifEntry 94 }
X
X               locIflanmanOutPkts OBJECT-TYPE
X                   SYNTAX  Counter
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { lifEntry 95 }
X
X               locIflanmanInOctets OBJECT-TYPE
X                   SYNTAX  Counter
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { lifEntry 96 }
X
X               locIflanmanOutOctets OBJECT-TYPE
X                   SYNTAX  Counter
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { lifEntry 97 }
X
X               locIfstunInPkts OBJECT-TYPE
X                   SYNTAX  Counter
X
X
X
X
X
X          -- cisco MIB                                         [Page 48]
X--
X
X
X
X
X
X          -- Request for Comments: Draft             cisco Systems, Inc.
X
X
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { lifEntry 98 }
X
X               locIfstunOutPkts OBJECT-TYPE
X                   SYNTAX  Counter
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { lifEntry 99 }
X
X               locIfstunInOctets OBJECT-TYPE
X                   SYNTAX  Counter
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { lifEntry 100 }
X
X               locIfstunOutOctets OBJECT-TYPE
X                   SYNTAX  Counter
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { lifEntry 101 }
X
X               locIfspanInPkts OBJECT-TYPE
X                   SYNTAX  Counter
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { lifEntry 102 }
X
X               locIfspanOutPkts OBJECT-TYPE
X                   SYNTAX  Counter
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { lifEntry 103 }
X
X
X
X
X
X          -- cisco MIB                                         [Page 49]
X--
X
X
X
X
X
X          -- Request for Comments: Draft             cisco Systems, Inc.
X
X
X               locIfspanInOctets OBJECT-TYPE
X                   SYNTAX  Counter
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { lifEntry 104 }
X
X               locIfspanOutOctets OBJECT-TYPE
X                   SYNTAX  Counter
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { lifEntry 105 }
X
X               locIfarpInPkts OBJECT-TYPE
X                   SYNTAX  Counter
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { lifEntry 106 }
X
X               locIfarpOutPkts OBJECT-TYPE
X                   SYNTAX  Counter
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { lifEntry 107 }
X
X               locIfarpInOctets OBJECT-TYPE
X                   SYNTAX  Counter
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { lifEntry 108 }
X
X               locIfarpOutOctets OBJECT-TYPE
X                   SYNTAX  Counter
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { lifEntry 109 }
X
X               locIfprobeInPkts OBJECT-TYPE
X                   SYNTAX  Counter
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { lifEntry 110 }
X
X               locIfprobeOutPkts OBJECT-TYPE
X                   SYNTAX  Counter
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { lifEntry 111 }
X
X               locIfprobeInOctets OBJECT-TYPE
X                   SYNTAX  Counter
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { lifEntry 112 }
X
X               locIfprobeOutOctets OBJECT-TYPE
X                   SYNTAX  Counter
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { lifEntry 113 }
X
X               -- End of table
X
X
X
X               -- Local IP Group
X
X          -- This group is present in all products which are using the
X          -- IP protocol.
X
X
X
X
X
X
X
X          -- cisco MIB                                         [Page 51]
X--
X
X
X
X
X
X          -- Request for Comments: Draft             cisco Systems, Inc.
X
X
X          -- Local IP Address Table
X
X          -- This group provides additional objects to the table
X          -- defined by RFC1156.
X
X               lipAddrTable OBJECT-TYPE
X                   SYNTAX  SEQUENCE OF LIpAddrEntry
X                   ACCESS  not-accessible
X                   STATUS  mandatory
X                   ::= { lip 1 }
X
X               lipAddrEntry OBJECT-TYPE
X                   SYNTAX LIpAddrEntry
X                   ACCESS  not-accessible
X                   STATUS  mandatory
X               ::= { lipAddrTable 1 }
X
X               LIpAddrEntry ::=
X                   SEQUENCE {
X                       locIPHow
X                           DisplayString,
X                       locIPWho
X                           IpAddress,
X                       locIPHelper
X                           IpAddress,
X                       locIPSecurity
X                           INTEGER,
X                       locIPRedirects
X                           INTEGER,
X                       locIPUnreach
X                           INTEGER
X                   }
X
X
X          -- The following section describes the components of the
X          -- table.
X
X               locIPHow OBJECT-TYPE
X                   SYNTAX  DisplayString
X
X
X
X
X
X          -- cisco MIB                                         [Page 52]
X--
X
X
X
X
X
X          -- Request for Comments: Draft             cisco Systems, Inc.
X
X
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { lipAddrEntry 1 }
X
X               locIPWho OBJECT-TYPE
X                   SYNTAX  IpAddress
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { lipAddrEntry 2 }
X
X               locIPHelper OBJECT-TYPE
X                   SYNTAX  IpAddress
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { lipAddrEntry 3 }
X
X               locIPSecurity OBJECT-TYPE
X                   SYNTAX  INTEGER
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { lipAddrEntry 4 }
X
X               locIPRedirects OBJECT-TYPE
X                   SYNTAX  INTEGER
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { lipAddrEntry 5 }
X
X               locIPUnreach OBJECT-TYPE
X                   SYNTAX  INTEGER
X                   ACCESS  read-only
X
X
X
X
X
X          -- cisco MIB                                         [Page 53]
X--
X
X
X
X
X
X          -- Request for Comments: Draft             cisco Systems, Inc.
X
X
X                   STATUS  mandatory
X                   ::= { lipAddrEntry 6 }
X
X               -- End of table
X
X
X
X               -- Local IP Routing Table
X
X          -- This group provides additional objects to the table
X          -- defined by RFC1156.
X
X               lipRoutingTable OBJECT-TYPE
X                   SYNTAX  SEQUENCE OF LIpRouteEntry
X                   ACCESS  not-accessible
X                   STATUS  mandatory
X                   ::= { lip 2 }
X
X               lipRouteEntry OBJECT-TYPE
X                   SYNTAX LIpRouteEntry
X                   ACCESS  not-accessible
X                   STATUS  mandatory
X               ::= { lipRoutingTable 1 }
X
X               LIpRouteEntry ::=
X                   SEQUENCE {
X                       locRtMask
X                           IpAddress,
X                       locRtCount
X                           INTEGER,
X                       locRtUses
X                           INTEGER
X                   }
X
X
X
X
X
X
X
X
X          -- cisco MIB                                         [Page 54]
X--
X
X
X
X
X
X          -- Request for Comments: Draft             cisco Systems, Inc.
X
X
X          -- The following section describes the components of the
X          -- table.
X
X               locRtMask OBJECT-TYPE
X                   SYNTAX  IpAddress
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { lipRouteEntry 1 }
X
X               locRtCount OBJECT-TYPE
X                   SYNTAX  INTEGER
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { lipRouteEntry 2 }
X
X               locRtUses OBJECT-TYPE
X                   SYNTAX  INTEGER
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { lipRouteEntry 3 }
X
X               -- End of table
X
X
X               actThresh OBJECT-TYPE
X                   SYNTAX  INTEGER
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { lip 4 }
X
X               actLostPkts OBJECT-TYPE
X                   SYNTAX  INTEGER
X                   ACCESS  read-only
X                   STATUS  mandatory
X
X
X
X
X
X          -- cisco MIB                                         [Page 55]
X--
X
X
X
X
X
X          -- Request for Comments: Draft             cisco Systems, Inc.
X
X
X                   ::= { lip 5 }
X
X               actLostByts OBJECT-TYPE
X                   SYNTAX  INTEGER
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { lip 6 }
X
X
X               -- Local IP Accounting Table
X
X          -- This group provides access to the cisco IP accounting
X          -- support.
X
X               lipAccountingTable OBJECT-TYPE
X                   SYNTAX  SEQUENCE OF LIpAccountEntry
X                   ACCESS  not-accessible
X                   STATUS  mandatory
X                   ::= { lip 7 }
X
X               lipAccountEntry OBJECT-TYPE
X                   SYNTAX LIpAccountEntry
X                   ACCESS  not-accessible
X                   STATUS  mandatory
X               ::= { lipAccountingTable 1 }
X
X               LIpAccountEntry ::=
X                   SEQUENCE {
X                       actSrc
X                           IpAddress,
X                       actDst
X                           IpAddress,
X                       actPkts
X                           INTEGER,
X                       actByts
X
X
X
X
X
X          -- cisco MIB                                         [Page 56]
X--
X
X
X
X
X
X          -- Request for Comments: Draft             cisco Systems, Inc.
X
X
X                           INTEGER
X                   }
X
X
X          -- The following section describes the components of the
X          -- table.
X
X               actSrc OBJECT-TYPE
X                   SYNTAX  IpAddress
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { lipAccountEntry 1 }
X
X               actDst OBJECT-TYPE
X                   SYNTAX  IpAddress
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { lipAccountEntry 2 }
X
X               actPkts OBJECT-TYPE
X                   SYNTAX  INTEGER
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { lipAccountEntry 3 }
X
X               actByts OBJECT-TYPE
X                   SYNTAX  INTEGER
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { lipAccountEntry 4 }
X
X               -- End of table
X
X
X
X
X
X
X
X          -- cisco MIB                                         [Page 57]
X--
X
X
X
X
X
X          -- Request for Comments: Draft             cisco Systems, Inc.
X
X
X               actAge OBJECT-TYPE
X                   SYNTAX  TimeTicks
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { lip 8 }
X
X
X               -- Local IP Checkpoint Accounting Table
X
X          -- This group provides access to the cisco
X          -- IP checkpoint accounting support.
X
X               lipCkAccountingTable OBJECT-TYPE
X                   SYNTAX  SEQUENCE OF LIpCkAccountEntry
X                   ACCESS  not-accessible
X                   STATUS  mandatory
X                   ::= { lip 9 }
X
X               lipCkAccountEntry OBJECT-TYPE
X                   SYNTAX LIpCkAccountEntry
X                   ACCESS  not-accessible
X                   STATUS  mandatory
X               ::= { lipCkAccountingTable 1 }
X
X               LIpCkAccountEntry ::=
X                   SEQUENCE {
X                       ckactSrc
X                           IpAddress,
X                       ckactDst
X                           IpAddress,
X                       ckactPkts
X                           INTEGER,
X                       ckactByts
X                           INTEGER
X                   }
X
X
X
X
X
X          -- cisco MIB                                         [Page 58]
X--
X
X
X
X
X
X          -- Request for Comments: Draft             cisco Systems, Inc.
X
X
X          -- The following section describes the components of the
X          -- table.
X
X               ckactSrc OBJECT-TYPE
X                   SYNTAX  IpAddress
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { lipCkAccountEntry 1 }
X
X               ckactDst OBJECT-TYPE
X                   SYNTAX  IpAddress
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { lipCkAccountEntry 2 }
X
X               ckactPkts OBJECT-TYPE
X                   SYNTAX  INTEGER
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { lipCkAccountEntry 3 }
X
X               ckactByts OBJECT-TYPE
X                   SYNTAX  INTEGER
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { lipCkAccountEntry 4 }
X
X               -- End of table
X
X
X               ckactAge OBJECT-TYPE
X                   SYNTAX  TimeTicks
X                   ACCESS  read-only
X
X
X
X
X
X          -- cisco MIB                                         [Page 59]
X--
X
X
X
X
X
X          -- Request for Comments: Draft             cisco Systems, Inc.
X
X
X                   STATUS  mandatory
X                   ::= { lip 10 }
X
X               actCheckPoint OBJECT-TYPE
X                   SYNTAX  INTEGER
X                   ACCESS  read-write
X                   STATUS  mandatory
X                   ::= { lip 11 }
X
X               ipNoaccess OBJECT-TYPE
X                   SYNTAX  Counter
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { lip 12 }
X
X
X               -- Local TCP Group
X
X          -- This group is present in all products which are using the
X          -- TCP protocol.
X
X
X          -- Local TCP Connection Table
X
X          -- This group provides additional objects to the table defined
X          -- by RFC1156.
X
X               ltcpConnTable OBJECT-TYPE
X                   SYNTAX  SEQUENCE OF LTcpConnEntry
X                   ACCESS  not-accessible
X                   STATUS  mandatory
X                   ::= { ltcp 1 }
X
X
X
X
X
X          -- cisco MIB                                         [Page 60]
X--
X
X
X
X
X
X          -- Request for Comments: Draft             cisco Systems, Inc.
X
X
X               ltcpConnEntry OBJECT-TYPE
X                   SYNTAX LTcpConnEntry
X                   ACCESS  not-accessible
X                   STATUS  mandatory
X               ::= { ltcpConnTable 1 }
X
X               LTcpConnEntry ::=
X                   SEQUENCE {
X                       loctcpConnInBytes
X                           INTEGER,
X                       loctcpConnOutBytes
X                           INTEGER,
X                       loctcpConnInPkts
X                           INTEGER,
X                       loctcpConnOutPkts
X                           INTEGER,
X                       loctcpConnElapsed
X                           TimeTicks
X                   }
X
X
X          -- The following section describes the components of the
X          -- table.
X
X               loctcpConnInBytes OBJECT-TYPE
X                   SYNTAX  INTEGER
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { ltcpConnEntry 1 }
X
X               loctcpConnOutBytes OBJECT-TYPE
X                   SYNTAX  INTEGER
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { ltcpConnEntry 2 }
X
X
X
X
X
X
X          -- cisco MIB                                         [Page 61]
X--
X
X
X
X
X
X          -- Request for Comments: Draft             cisco Systems, Inc.
X
X
X               loctcpConnInPkts OBJECT-TYPE
X                   SYNTAX  INTEGER
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { ltcpConnEntry 3 }
X
X               loctcpConnOutPkts OBJECT-TYPE
X                   SYNTAX  INTEGER
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { ltcpConnEntry 4 }
X
X               loctcpConnElapsed OBJECT-TYPE
X                   SYNTAX  TimeTicks
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { ltcpConnEntry 5 }
X
X               -- End of table
X
X
X
X               -- Local cisco Terminal Server Group
X
X          -- This group is present in all products which contain
X          -- asynchronous terminal lines.
X
X               tsLines OBJECT-TYPE
X                   SYNTAX  INTEGER
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { lts 1 }
X
X
X               -- Local Terminal Server Line Table
X
X
X
X
X
X          -- cisco MIB                                         [Page 62]
X--
X
X
X
X
X
X          -- Request for Comments: Draft             cisco Systems, Inc.
X
X
X          -- This group contains terminal server specific
X          -- information on a per line basis.
X
X               ltsLineTable OBJECT-TYPE
X                   SYNTAX  SEQUENCE OF LTsLineEntry
X                   ACCESS  not-accessible
X                   STATUS  mandatory
X                   ::= { lts 2 }
X
X               ltsLineEntry OBJECT-TYPE
X                   SYNTAX LTsLineEntry
X                   ACCESS  not-accessible
X                   STATUS  mandatory
X               ::= { ltsLineTable 1 }
X
X               LTsLineEntry ::=
X                   SEQUENCE {
X                       tsLineActive
X                           INTEGER,
X                       tsLineType
X                           INTEGER,
X                       tsLineAutobaud
X                           INTEGER,
X                       tsLineSpeedin
X                           INTEGER,
X                       tsLineSpeedout
X                           INTEGER,
X                       tsLineFlow
X                           INTEGER,
X                       tsLineModem
X                           INTEGER,
X                       tsLineLoc
X                           DisplayString,
X                       tsLineTerm
X                           DisplayString,
X                       tsLineScrlen
X                           INTEGER,
X                       tsLineScrwid
X                           INTEGER,
X
X
X
X
X
X          -- cisco MIB                                         [Page 63]
X--
X
X
X
X
X
X          -- Request for Comments: Draft             cisco Systems, Inc.
X
X
X                       tsLineEsc
X                           DisplayString,
X                       tsLineTmo
X                           INTEGER,
X                       tsLineSestmo
X                           INTEGER,
X                       tsLineRotary
X                           INTEGER,
X                       tsLineUses
X                           INTEGER,
X                       tsLineNses
X                           INTEGER,
X                       tsLineUser
X                           DisplayString,
X                       tsLineNoise
X                           INTEGER
X                   }
X
X
X          -- The following section describes the components of the
X          -- table.
X
X               tsLineActive OBJECT-TYPE
X                   SYNTAX  INTEGER
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { ltsLineEntry 1 }
X
X               tsLineType OBJECT-TYPE
X                   SYNTAX  INTEGER {
X                        unknown(1),
X                        console(2),
X                        terminal(3),
X                        line-printer(4),
X                        virtual-terminal(5),
X                        auxiliary(6)
X                   }
X                   ACCESS  read-only
X                   STATUS  mandatory
X                   ::= { ltsLineEntry 2 }
X
X
X
X
X
X
X          -- cisco MIB                                         [Page 64]
X--
X
X
X
X
X
END_OF_FILE
  if test 53002 -ne `wc -c <'nocol-3.0/src/cmu-snmp/mib.txt.B'`; then
    echo shar: \"'nocol-3.0/src/cmu-snmp/mib.txt.B'\" unpacked with wrong size!
  elif test -f 'nocol-3.0/src/cmu-snmp/mib.txt.A' && test -f 'nocol-3.0/src/cmu-snmp/mib.txt.C'; then
    echo shar: Combining  \"'nocol-3.0/src/cmu-snmp/mib.txt'\" \(164470 characters\)
    cat 'nocol-3.0/src/cmu-snmp/mib.txt.A' 'nocol-3.0/src/cmu-snmp/mib.txt.B' 'nocol-3.0/src/cmu-snmp/mib.txt.C' > 'nocol-3.0/src/cmu-snmp/mib.txt'
    if test 164470 -ne `wc -c <'nocol-3.0/src/cmu-snmp/mib.txt'`; then
      echo shar: \"'nocol-3.0/src/cmu-snmp/mib.txt'\" combined with wrong size!
    else
      rm nocol-3.0/src/cmu-snmp/mib.txt.A nocol-3.0/src/cmu-snmp/mib.txt.B nocol-3.0/src/cmu-snmp/mib.txt.C
    fi
  fi
  # end of 'nocol-3.0/src/cmu-snmp/mib.txt.B'
fi
if test -f 'nocol-3.0/src/cmu-snmp/snmplib/asn1.c' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'nocol-3.0/src/cmu-snmp/snmplib/asn1.c'\"
else
  echo shar: Extracting \"'nocol-3.0/src/cmu-snmp/snmplib/asn1.c'\" \(18768 characters\)
  sed "s/^X//" >'nocol-3.0/src/cmu-snmp/snmplib/asn1.c' <<'END_OF_FILE'
X/*
X * Abstract Syntax Notation One, ASN.1
X * As defined in ISO/IS 8824 and ISO/IS 8825
X * This implements a subset of the above International Standards that
X * is sufficient to implement SNMP.
X *
X * Encodes abstract data types into a machine independent stream of bytes.
X *
X */
X/***********************************************************
X	Copyright 1988, 1989 by Carnegie Mellon University
X
X                      All Rights Reserved
X
XPermission to use, copy, modify, and distribute this software and its 
Xdocumentation for any purpose and without fee is hereby granted, 
Xprovided that the above copyright notice appear in all copies and that
Xboth that copyright notice and this permission notice appear in 
Xsupporting documentation, and that the name of CMU not be
Xused in advertising or publicity pertaining to distribution of the
Xsoftware without specific, written prior permission.  
X
XCMU DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING
XALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO EVENT SHALL
XCMU BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR
XANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,
XWHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION,
XARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS
XSOFTWARE.
X******************************************************************/
X#ifdef KINETICS
X#include "gw.h"
X#endif
X
X#if (defined(unix) && !defined(KINETICS))
X#include <sys/types.h>
X#include <netinet/in.h>
X#endif
X
X#include "asn1.h"
X
X#ifndef NULL
X#define NULL	0
X#endif
X#define	ERROR(x)
X
X/*
X * asn_parse_int - pulls a long out of an ASN int type.
X *  On entry, datalength is input as the number of valid bytes following
X *   "data".  On exit, it is returned as the number of valid bytes
X *   following the end of this object.
X *
X *  Returns a pointer to the first byte past the end
X *   of this object (i.e. the start of the next object).
X *  Returns NULL on any error.
X */
Xu_char *
Xasn_parse_int(data, datalength, type, intp, intsize)
X    register u_char	    *data;	/* IN - pointer to start of object */
X    register int	    *datalength;/* IN/OUT - number of valid bytes left in buffer */
X    u_char		    *type;	/* OUT - asn type of object */
X    long		    *intp;	/* IN/OUT - pointer to start of output buffer */
X    int			    intsize;    /* IN - size of output buffer */
X{
X/*
X * ASN.1 integer ::= 0x02 asnlength byte {byte}*
X */
X    register u_char *bufp = data;
X    u_long	    asn_length;
X    register long   value = 0;
X
X    if (intsize != sizeof (long)){
X	ERROR("not long");
X	return NULL;
X    }
X    *type = *bufp++;
X    bufp = asn_parse_length(bufp, &asn_length);
X    if (bufp == NULL){
X	ERROR("bad length");
X	return NULL;
X    }
X    if (asn_length + (bufp - data) > *datalength){
X	ERROR("overflow of message");
X	return NULL;
X    }
X    /* Put in by vikas@jvnc.net as per Robert Elz <kre@munnari.oz.au> */
X    if (asn_length == intsize + 1 && *bufp == 0) {
X        /*
X         * this will cause a positive 32 bit integer to be
X         * returned as negative, which is only OK if our
X         * result is to be treated as unsigned - in practice
X         * its likely to be OK...
X         */
X        asn_length--;
X        bufp++;
X    }
X    if (asn_length > intsize){
X	ERROR("I don't support such large integers");
X	return NULL;
X    }
X    *datalength -= (int)asn_length + (bufp - data);
X    if (*bufp & 0x80)
X	value = -1; /* integer is negative */
X    while(asn_length--)
X	value = (value << 8) | *bufp++;
X    *intp = value;
X    return bufp;
X}
X
X
X/*
X * asn_build_int - builds an ASN object containing an integer.
X *  On entry, datalength is input as the number of valid bytes following
X *   "data".  On exit, it is returned as the number of valid bytes
X *   following the end of this object.
X *
X *  Returns a pointer to the first byte past the end
X *   of this object (i.e. the start of the next object).
X *  Returns NULL on any error.
X */
Xu_char *
Xasn_build_int(data, datalength, type, intp, intsize)
X    register u_char *data;	/* IN - pointer to start of output buffer */
X    register int    *datalength;/* IN/OUT - number of valid bytes left in buffer */
X    u_char	    type;	/* IN - asn type of object */
X    register long   *intp;	/* IN - pointer to start of long integer */
X    register int    intsize;    /* IN - size of *intp */
X{
X/*
X * ASN.1 integer ::= 0x02 asnlength byte {byte}*
X */
X
X    register long integer;
X    register u_long mask;
X
X    if (intsize != sizeof (long))
X	return NULL;
X    integer = *intp;
X    /*
X     * Truncate "unnecessary" bytes off of the most significant end of this 2's complement integer.
X     * There should be no sequence of 9 consecutive 1's or 0's at the most significant end of the
X     * integer.
X     */
X    mask = 0x1FF << ((8 * (sizeof(long) - 1)) - 1);
X    /* mask is 0xFF800000 on a big-endian machine */
X    while((((integer & mask) == 0) || ((integer & mask) == mask)) && intsize > 1){
X	intsize--;
X	integer <<= 8;
X    }
X    data = asn_build_header(data, datalength, type, intsize);
X    if (data == NULL)
X	return NULL;
X    if (*datalength < intsize)
X	return NULL;
X    *datalength -= intsize;
X    mask = 0xFF << (8 * (sizeof(long) - 1));
X    /* mask is 0xFF000000 on a big-endian machine */
X    while(intsize--){
X	*data++ = (u_char)((integer & mask) >> (8 * (sizeof(long) - 1)));
X	integer <<= 8;
X    }
X    return data;
X}
X
X
X/*
X * asn_parse_string - pulls an octet string out of an ASN octet string type.
X *  On entry, datalength is input as the number of valid bytes following
X *   "data".  On exit, it is returned as the number of valid bytes
X *   following the beginning of the next object.
X *
X *  "string" is filled with the octet string.
X *
X *  Returns a pointer to the first byte past the end
X *   of this object (i.e. the start of the next object).
X *  Returns NULL on any error.
X */
Xu_char *
Xasn_parse_string(data, datalength, type, string, strlength)
X    u_char	    *data;	    /* IN - pointer to start of object */
X    register int    *datalength;    /* IN/OUT - number of valid bytes left in buffer */
X    u_char	    *type;	    /* OUT - asn type of object */
X    u_char	    *string;	    /* IN/OUT - pointer to start of output buffer */
X    register int    *strlength;     /* IN/OUT - size of output buffer */
X{
X/*
X * ASN.1 octet string ::= primstring | cmpdstring
X * primstring ::= 0x04 asnlength byte {byte}*
X * cmpdstring ::= 0x24 asnlength string {string}*
X * This doesn't yet support the compound string.
X */
X    register u_char *bufp = data;
X    u_long	    asn_length;
X
X    *type = *bufp++;
X    bufp = asn_parse_length(bufp, &asn_length);
X    if (bufp == NULL)
X	return NULL;
X    if (asn_length + (bufp - data) > *datalength){
X	ERROR("overflow of message");
X	return NULL;
X    }
X    if (asn_length > *strlength){
X	ERROR("I don't support such long strings");
X	return NULL;
X    }
X    bcopy((char *)bufp, (char *)string, (int)asn_length);
X    *strlength = (int)asn_length;
X    *datalength -= (int)asn_length + (bufp - data);
X    return bufp + asn_length;
X}
X
X
X/*
X * asn_build_string - Builds an ASN octet string object containing the input string.
X *  On entry, datalength is input as the number of valid bytes following
X *   "data".  On exit, it is returned as the number of valid bytes
X *   following the beginning of the next object.
X *
X *  Returns a pointer to the first byte past the end
X *   of this object (i.e. the start of the next object).
X *  Returns NULL on any error.
X */
Xu_char *
Xasn_build_string(data, datalength, type, string, strlength)
X    u_char	    *data;	    /* IN - pointer to start of object */
X    register int    *datalength;    /* IN/OUT - number of valid bytes left in buffer */
X    u_char	    type;	    /* IN - ASN type of string */
X    u_char	    *string;	    /* IN - pointer to start of input buffer */
X    register int    strlength;	    /* IN - size of input buffer */
X{
X/*
X * ASN.1 octet string ::= primstring | cmpdstring
X * primstring ::= 0x04 asnlength byte {byte}*
X * cmpdstring ::= 0x24 asnlength string {string}*
X * This code will never send a compound string.
X */
X    data = asn_build_header(data, datalength, type, strlength);
X    if (data == NULL)
X	return NULL;
X    if (*datalength < strlength)
X	return NULL;
X    bcopy((char *)string, (char *)data, strlength);
X    *datalength -= strlength;
X    return data + strlength;
X}
X
X
X/*
X * asn_parse_header - interprets the ID and length of the current object.
X *  On entry, datalength is input as the number of valid bytes following
X *   "data".  On exit, it is returned as the number of valid bytes
X *   in this object following the id and length.
X *
X *  Returns a pointer to the first byte of the contents of this object.
X *  Returns NULL on any error.
X */
Xu_char *
Xasn_parse_header(data, datalength, type)
X    u_char	    *data;	/* IN - pointer to start of object */
X    int		    *datalength;/* IN/OUT - number of valid bytes left in buffer */
X    u_char	    *type;	/* OUT - ASN type of object */
X{
X    register u_char *bufp = data;
X    register	    header_len;
X    u_long	    asn_length;
X
X    /* this only works on data types < 30, i.e. no extension octets */
X    if (IS_EXTENSION_ID(*bufp)){
X	ERROR("can't process ID >= 30");
X	return NULL;
X    }
X    *type = *bufp;
X    bufp = asn_parse_length(bufp + 1, &asn_length);
X    if (bufp == NULL)
X	return NULL;
X    header_len = bufp - data;
X    if (header_len + asn_length > *datalength){
X	ERROR("asn length too long");
X	return NULL;
X    }
X    *datalength = (int)asn_length;
X    return bufp;
X}
X
X/*
X * asn_build_header - builds an ASN header for an object with the ID and
X * length specified.
X *  On entry, datalength is input as the number of valid bytes following
X *   "data".  On exit, it is returned as the number of valid bytes
X *   in this object following the id and length.
X *
X *  This only works on data types < 30, i.e. no extension octets.
X *  The maximum length is 0xFFFF;
X *
X *  Returns a pointer to the first byte of the contents of this object.
X *  Returns NULL on any error.
X */
Xu_char *
Xasn_build_header(data, datalength, type, length)
X    register u_char *data;	/* IN - pointer to start of object */
X    int		    *datalength;/* IN/OUT - number of valid bytes left in buffer */
X    u_char	    type;	/* IN - ASN type of object */
X    int		    length;	/* IN - length of object */
X{
X    if (*datalength < 1)
X	return NULL;
X    *data++ = type;
X    (*datalength)--;
X    return asn_build_length(data, datalength, length);
X    
X}
X
X/*
X * asn_parse_length - interprets the length of the current object.
X *  On exit, length contains the value of this length field.
X *
X *  Returns a pointer to the first byte after this length
X *  field (aka: the start of the data field).
X *  Returns NULL on any error.
X */
Xu_char *
Xasn_parse_length(data, length)
X    u_char  *data;	/* IN - pointer to start of length field */
X    u_long  *length;	/* OUT - value of length field */
X{
X    register u_char lengthbyte = *data;
X
X    if (lengthbyte & ASN_LONG_LEN){
X	lengthbyte &= ~ASN_LONG_LEN;	/* turn MSb off */
X	if (lengthbyte == 0){
X	    ERROR("We don't support indefinite lengths");
X	    return NULL;
X	}
X	if (lengthbyte > sizeof(long)){
X	    ERROR("we can't support data lengths that long");
X	    return NULL;
X	}
X	bcopy((char *)data + 1, (char *)length, (int)lengthbyte);
X	*length = ntohl(*length);
X	*length >>= (8 * ((sizeof *length) - lengthbyte));
X	return data + lengthbyte + 1;
X    } else { /* short asnlength */
X	*length = (long)lengthbyte;
X	return data + 1;
X    }
X}
X
Xu_char *
Xasn_build_length(data, datalength, length)
X    register u_char *data;	/* IN - pointer to start of object */
X    int		    *datalength;/* IN/OUT - number of valid bytes left in buffer */
X    register int    length;	/* IN - length of object */
X{
X    u_char    *start_data = data;
X
X    /* no indefinite lengths sent */
X    if (length < 0x80){
X	*data++ = (u_char)length;
X    } else if (length <= 0xFF){
X	*data++ = (u_char)(0x01 | ASN_LONG_LEN);
X	*data++ = (u_char)length;
X    } else { /* 0xFF < length <= 0xFFFF */
X	*data++ = (u_char)(0x02 | ASN_LONG_LEN);
X	*data++ = (u_char)((length >> 8) & 0xFF);
X	*data++ = (u_char)(length & 0xFF);
X    }
X    if (*datalength < (data - start_data)){
X	ERROR("build_length");
X	return NULL;
X    }
X    *datalength -= (data - start_data);
X    return data;
X
X}
X
X/*
X * asn_parse_objid - pulls an object indentifier out of an ASN object identifier type.
X *  On entry, datalength is input as the number of valid bytes following
X *   "data".  On exit, it is returned as the number of valid bytes
X *   following the beginning of the next object.
X *
X *  "objid" is filled with the object identifier.
X *
X *  Returns a pointer to the first byte past the end
X *   of this object (i.e. the start of the next object).
X *  Returns NULL on any error.
X */
Xu_char *
Xasn_parse_objid(data, datalength, type, objid, objidlength)
X    u_char	    *data;	    /* IN - pointer to start of object */
X    int		    *datalength;    /* IN/OUT - number of valid bytes left in buffer */
X    u_char	    *type;	    /* OUT - ASN type of object */
X    oid		    *objid;	    /* IN/OUT - pointer to start of output buffer */
X    int		    *objidlength;     /* IN/OUT - number of sub-id's in objid */
X{
X/*
X * ASN.1 objid ::= 0x06 asnlength subidentifier {subidentifier}*
X * subidentifier ::= {leadingbyte}* lastbyte
X * leadingbyte ::= 1 7bitvalue
X * lastbyte ::= 0 7bitvalue
X */
X    register u_char *bufp = data;
X    register oid *oidp = objid + 1;
X    register u_long subidentifier;
X    register long   length;
X    u_long	    asn_length;
X
X    *type = *bufp++;
X    bufp = asn_parse_length(bufp, &asn_length);
X    if (bufp == NULL)
X	return NULL;
X    if (asn_length + (bufp - data) > *datalength){
X	ERROR("overflow of message");
X	return NULL;
X    }
X    *datalength -= (int)asn_length + (bufp - data);
X
X    length = asn_length;
X    (*objidlength)--;	/* account for expansion of first byte */
X    while (length > 0 && (*objidlength)-- > 0){
X	subidentifier = 0;
X	do {	/* shift and add in low order 7 bits */
X	    subidentifier = (subidentifier << 7) + (*(u_char *)bufp & ~ASN_BIT8);
X	    length--;
X	} while (*(u_char *)bufp++ & ASN_BIT8);	/* last byte has high bit clear */
X	if (subidentifier > (u_long)MAX_SUBID){
X	    ERROR("subidentifier too long");
X	    return NULL;
X	}
X	*oidp++ = (oid)subidentifier;
X    }
X
X    /*
X     * The first two subidentifiers are encoded into the first component
X     * with the value (X * 40) + Y, where:
X     *	X is the value of the first subidentifier.
X     *  Y is the value of the second subidentifier.
X     */
X    subidentifier = (u_long)objid[1];
X    objid[1] = (u_char)(subidentifier % 40);
X    objid[0] = (u_char)((subidentifier - objid[1]) / 40);
X
X    *objidlength = (int)(oidp - objid);
X    return bufp;
X}
X
X/*
X * asn_build_objid - Builds an ASN object identifier object containing the input string.
X *  On entry, datalength is input as the number of valid bytes following
X *   "data".  On exit, it is returned as the number of valid bytes
X *   following the beginning of the next object.
X *
X *  Returns a pointer to the first byte past the end
X *   of this object (i.e. the start of the next object).
X *  Returns NULL on any error.
X */
Xu_char *
Xasn_build_objid(data, datalength, type, objid, objidlength)
X    register u_char *data;	    /* IN - pointer to start of object */
X    int		    *datalength;    /* IN/OUT - number of valid bytes left in buffer */
X    u_char	    type;	    /* IN - ASN type of object */
X    oid		    *objid;	    /* IN - pointer to start of input buffer */
X    int		    objidlength;    /* IN - number of sub-id's in objid */
X{
X/*
X * ASN.1 objid ::= 0x06 asnlength subidentifier {subidentifier}*
X * subidentifier ::= {leadingbyte}* lastbyte
X * leadingbyte ::= 1 7bitvalue
X * lastbyte ::= 0 7bitvalue
X */
X    u_char buf[MAX_OID_LEN];
X    u_char *bp = buf;
X    oid	objbuf[MAX_OID_LEN];
X    oid *op = objbuf;
X    register int    asnlength;
X    register u_long subid, mask, testmask;
X    register int bits, testbits;
X
X    bcopy((char *)objid, (char *)objbuf, objidlength * sizeof(oid));
X    /* transform size in bytes to size in subid's */
X    /* encode the first two components into the first subidentifier */
X    op[1] = op[1] + (op[0] * 40);
X    op++;
X    objidlength--;
X
X    while(objidlength-- > 0){
X	subid = *op++;
X	mask = 0x7F; /* handle subid == 0 case */
X	bits = 0;
X	/* testmask *MUST* !!!! be of an unsigned type */
X	for(testmask = 0x7F, testbits = 0; testmask != 0; testmask <<= 7, testbits += 7){
X	    if (subid & testmask){	/* if any bits set */
X		mask = testmask;
X		bits = testbits;
X	    }
X	}
X	/* mask can't be zero here */
X	for(;mask != 0x7F; mask >>= 7, bits -= 7){
X	    if (mask == 0x1E00000)  /* fix a mask that got truncated above */
X		mask = 0xFE00000;
X	    *bp++ = (u_char)(((subid & mask) >> bits) | ASN_BIT8);
X	}
X	*bp++ = (u_char)(subid & mask);
X    }
X    asnlength = bp - buf;
X    data = asn_build_header(data, datalength, type, asnlength);
X    if (data == NULL)
X	return NULL;
X    if (*datalength < asnlength)
X	return NULL;
X    bcopy((char *)buf, (char *)data, asnlength);
X    *datalength -= asnlength;
X    return data + asnlength;
X}
X
X/*
X * asn_parse_null - Interprets an ASN null type.
X *  On entry, datalength is input as the number of valid bytes following
X *   "data".  On exit, it is returned as the number of valid bytes
X *   following the beginning of the next object.
X *
X *  Returns a pointer to the first byte past the end
X *   of this object (i.e. the start of the next object).
X *  Returns NULL on any error.
X */
Xu_char *
Xasn_parse_null(data, datalength, type)
X    u_char	    *data;	    /* IN - pointer to start of object */
X    int		    *datalength;    /* IN/OUT - number of valid bytes left in buffer */
X    u_char	    *type;	    /* OUT - ASN type of object */
X{
X/*
X * ASN.1 null ::= 0x05 0x00
X */
X    register u_char   *bufp = data;
X    u_long	    asn_length;
X
X    *type = *bufp++;
X    bufp = asn_parse_length(bufp, &asn_length);
X    if (bufp == NULL)
X	return NULL;
X    if (asn_length != 0){
X	ERROR("Malformed NULL");
X	return NULL;
X    }
X    *datalength -= (bufp - data);
X    return bufp + asn_length;
X}
X
X
X/*
X * asn_build_null - Builds an ASN null object.
X *  On entry, datalength is input as the number of valid bytes following
X *   "data".  On exit, it is returned as the number of valid bytes
X *   following the beginning of the next object.
X *
X *  Returns a pointer to the first byte past the end
X *   of this object (i.e. the start of the next object).
X *  Returns NULL on any error.
X */
Xu_char *
Xasn_build_null(data, datalength, type)
X    u_char	    *data;	    /* IN - pointer to start of object */
X    int		    *datalength;    /* IN/OUT - number of valid bytes left in buffer */
X    u_char	    type;	    /* IN - ASN type of object */
X{
X/*
X * ASN.1 null ::= 0x05 0x00
X */
X    return asn_build_header(data, datalength, type, 0);
X}
X
END_OF_FILE
  if test 18768 -ne `wc -c <'nocol-3.0/src/cmu-snmp/snmplib/asn1.c'`; then
    echo shar: \"'nocol-3.0/src/cmu-snmp/snmplib/asn1.c'\" unpacked with wrong size!
  fi
  # end of 'nocol-3.0/src/cmu-snmp/snmplib/asn1.c'
fi
echo shar: End of archive 7 \(of 26\).
cp /dev/null ark7isdone
MISSING=""
for I in 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 ; do
    if test ! -f ark${I}isdone ; then
	MISSING="${MISSING} ${I}"
    fi
done
if test "${MISSING}" = "" ; then
    echo You have unpacked all 26 archives.
    rm -f ark[1-9]isdone ark[1-9][0-9]isdone
else
    echo You still must unpack the following archives:
    echo "        " ${MISSING}
fi
exit 0
exit 0 # Just in case...
