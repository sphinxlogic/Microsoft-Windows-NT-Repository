Newsgroups: comp.sources.misc
From: perl@dwrsun4.UUCP (Robert Perlberg)
Subject: v40i075:  pbmto4425 - Display PBM images on an AT&T 4425 terminal, Part01/01
Message-ID: <1993Nov1.221747.10304@sparky.sterling.com>
X-Md4-Signature: 54d23b278dff9ec6e282698ab4320571
Sender: kent@sparky.sterling.com (Kent Landfield)
Organization: Dean Witter Reynolds Inc., New York
Date: Mon, 1 Nov 1993 22:17:47 GMT
Approved: kent@sparky.sterling.com

Submitted-by: perl@dwrsun4.UUCP (Robert Perlberg)
Posting-number: Volume 40, Issue 75
Archive-name: pbmto4425/part01
Environment: AT&T-4425, pbmplus

Pbmto4425 displays PBM format images on an AT&T 4425 ASCII terminal
using that terminal's mosaic graphics character set.  The program
should also work with other VT100-like terminals with mosaic graphics
character sets such as the C. Itoh CIT-101, but it has not yet been
tested on terminals other than the 4425.  Please let me know if you get
it to work on any other terminals.

The image quality is, of course, far from state of the art, but if
you're stuck working at a 4425 and you've got a bunch of image files
you'd like to play with, it's a real kick seeing these things display
on your humble little terminal.  When viewed from a distance of about 5
feet, most images come out surprisingly well.

To compile this program you will need the libraries and header files
from the pbmplus package.  You may have to modify the Makefile to point
to the locations where you have these files installed.

Enjoy!

Robert Perlberg
Dean Witter Reynolds Inc., New York
dwrsun4!perl@murphy.com -or- philabs!dwrsun4!perl
-------------
#! /bin/sh
# This is a shell archive.  Remove anything before this line, then unpack
# it by saving it into a file and typing "sh file".  To overwrite existing
# files, type "sh file -c".  You can also feed this as standard input via
# unshar, or by typing "sh <file", e.g..  If this archive is complete, you
# will see the following message at the end:
#		"End of archive 1 (of 1)."
# Contents:  Makefile README pbmto4425.1 pbmto4425.c
# Wrapped by perl@dwrsun4 on Mon Oct 25 15:51:55 1993
PATH=/bin:/usr/bin:/usr/ucb:/usr/local/bin:/usr/lbin:$PATH ; export PATH
if test -f 'Makefile' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'Makefile'\"
else
echo shar: Extracting \"'Makefile'\" \(121 characters\)
sed "s/^X//" >'Makefile' <<'END_OF_FILE'
XCFLAGS = -O -I/local/include
X
XPBMTO4425 = pbmto4425.o
X
Xpbmto4425: $(PBMTO4425)
X	$(CC) $(CFLAGS) -o $@ $(PBMTO4425) -lpbm
END_OF_FILE
if test 121 -ne `wc -c <'Makefile'`; then
    echo shar: \"'Makefile'\" unpacked with wrong size!
fi
# end of 'Makefile'
fi
if test -f 'README' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'README'\"
else
echo shar: Extracting \"'README'\" \(1012 characters\)
sed "s/^X//" >'README' <<'END_OF_FILE'
XPbmto4425 displays PBM format images on an AT&T 4425 ASCII terminal
Xusing that terminal's mosaic graphics character set.  The program
Xshould also work with other VT100-like terminals with mosaic graphics
Xcharacter sets such as the C. Itoh CIT-101, but it has not yet been
Xtested on terminals other than the 4425.  Please let me know if you get
Xit to work on any other terminals.
X
XThe image quality is, of course, far from state of the art, but if
Xyou're stuck working at a 4425 and you've got a bunch of image files
Xyou'd like to play with, it's a real kick seeing these things display
Xon your humble little terminal.  When viewed from a distance of about 5
Xfeet, most images come out surprisingly well.
X
XTo compile this program you will need the libraries and header files
Xfrom the pbmplus package.  You may have to modify the Makefile to point
Xto the locations where you have these files installed.
X
XEnjoy!
X
XRobert Perlberg
XDean Witter Reynolds Inc., New York
Xdwrsun4!perl@murphy.com -or- philabs!dwrsun4!perl
END_OF_FILE
if test 1012 -ne `wc -c <'README'`; then
    echo shar: \"'README'\" unpacked with wrong size!
fi
# end of 'README'
fi
if test -f 'pbmto4425.1' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'pbmto4425.1'\"
else
echo shar: Extracting \"'pbmto4425.1'\" \(974 characters\)
sed "s/^X//" >'pbmto4425.1' <<'END_OF_FILE'
X.TH PBMTO4425 1
X.SH NAME
Xpbmto4425 \- Display PBM images on an AT&T 4425 terminal
X.SH SYNOPSIS
X\fBpbmto4425 \fP[\fIpbmfile\fP]
X.SH DESCRIPTION
X\fIPbmto4425\fP displays PBM format images on an AT&T 4425 ASCII terminal
Xusing that terminal's mosaic graphics character set.  The program
Xshould also work with other VT100-like terminals with mosaic
Xgraphics
Xcharacter sets such as the C. Itoh CIT-101, but it has not
Xyet been tested on terminals other than the 4425.
X.PP
X\fIPbmto4425\fP puts the terminal into 132 column mode to
Xachieve the maximum resolution of the terminal.  In this
Xmode the terminal has a resolution of 264 columns by 69
Xrows.  The pixels have an aspect ratio of 1:2.6, therefore
Xan image should be processed before being displayed in a
Xmanner such as this:
X.PP
X.RS
X.nf
X\fB% pnmscale \-xscale 2.6 \fP\fIpnmfile\fP \fB\\
X.RS
X| pnmscale \-xysize 264 69 \\
X| ppmtopgm \\
X| pgmtopbm \\
X| pbmto4425\fP
X.RE
X.fi
X.RE
X.SH AUTHOR
XCopyright (C) 1993 by Robert Perlberg
END_OF_FILE
if test 974 -ne `wc -c <'pbmto4425.1'`; then
    echo shar: \"'pbmto4425.1'\" unpacked with wrong size!
fi
# end of 'pbmto4425.1'
fi
if test -f 'pbmto4425.c' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'pbmto4425.c'\"
else
echo shar: Extracting \"'pbmto4425.c'\" \(2789 characters\)
sed "s/^X//" >'pbmto4425.c' <<'END_OF_FILE'
X#include <stdio.h>
X#include <errno.h>
X#include <pbm.h>
X
Xextern char *sys_errlist[];
Xchar *malloc();
X
X#define max(a,b)	((a) > (b) ? (a) : (b))
X
Xchar bit_table[2][3] = {
X	{1, 4, 0x10},
X	{2, 8, 0x40}
X};
X
Xint vmap_width;
Xint vmap_height;
X
Xint xres;
Xint yres;
X
Xchar *vmap;
X
X#define usage() (fprintf(stderr, "usage: %s [pbmfile]\n", argv[0]))
X
Xmain(argc, argv)
Xint argc;
Xchar *argv[];
X{
X	int argn;
X	char *pbmfile;
X	FILE *pbmfp;
X	int oerrno;
X
X	for(argn = 1;
X		argn < argc && argv[argn][0] == '-' && strlen(argv[argn]) > 1;
X		++argn)
X	{
X		usage();
X		exit(1);
X	}
X
X	if(argn >= argc)
X	{
X		pbmfile = "-";
X	}
X	else if(argc - argn != 1)
X	{
X		usage();
X		exit(1);
X	}
X	else
X	{
X		pbmfile = argv[argn];
X	}
X
X	if(strcmp(pbmfile, "-") == 0)
X	{
X		pbmfp = stdin;
X	}
X	else
X	{
X		pbmfp = fopen(argv[argn], "r");
X		if(pbmfp == NULL)
X		{
X			oerrno = errno;
X			fprintf(stderr, "%s: can't open `%s' [fopen: %s]\n",
X				argv[0], pbmfile, sys_errlist[oerrno]);
X			exit(oerrno);
X		}
X	}
X
X	vmap_width = 132;
X	vmap_height = 23;
X
X	xres = vmap_width * 2;
X	yres = vmap_height * 3;
X
X	vmap = malloc(vmap_width * vmap_height * sizeof(char));
X	if(vmap == NULL)
X	{
X		fprintf(stderr, "%s: can't allocate space for character map [malloc: %s]\n",
X			argv[0], sys_errlist[errno]);
X		exit(errno);
X	}
X
X	init_map();
X	fill_map(pbmfp);
X	print_map();
X}
X
Xinit_map()
X{
X	int x, y;
X
X
X	for(x = 0; x < vmap_width; ++x)
X	{
X		for(y = 0; y < vmap_height; ++y)
X		{
X			vmap[y*(vmap_width) + x] = 0x20;
X		}
X	}
X}
X
X
Xfill_map(pbmfp)
XFILE *pbmfp;
X{
X	bit **pbm_image;
X	int cols;
X	int rows;
X	int x;
X	int y;
X	int oerrno;
X
X	pbm_image = pbm_readpbm(pbmfp, &cols, &rows);
X	if(pbm_image == NULL)
X	{
X		oerrno = errno;
X		fprintf(stderr,
X			"pbmto4425: can't read input image [pbm_readpbm: %s]\n",
X			sys_errlist[oerrno]);
X		exit(oerrno);
X	}
X
X	for(y = 0; y < rows && y < yres; ++y)
X	{
X		for(x = 0; x < cols && x < xres; ++x)
X		{
X			if(pbm_image[y][x] == PBM_WHITE)
X			{
X				set_vmap(x, y);
X			}
X		}
X	}
X}
X
X
Xset_vmap(x, y)
Xint x, y;
X{
X	int ix, iy;
X
X	ix = x/2;
X	iy = y/3;
X
X	vmap[iy*(vmap_width) + ix] |= bit_table[x % 2][y % 3];
X}
X
X
Xprint_map()
X{
X	int x, y;
X	int last_byte;
X	char *iobuf;
X
X#ifdef BUFFERED
X	iobuf = (char *)malloc(BUFSIZ);
X	if(iobuf == NULL)
X	{
X		fprintf(stderr, "Can't allocate space for I/O buffer.  Using unbuffered I/O...\n");
X		setbuf(stdout, NULL);
X	}
X	else
X	{
X		setbuf(stdout, iobuf);
X	}
X#endif
X
X	fputs("\033[H\033[J", stdout);	/* clear screen */
X	fputs("\033[?3h", stdout);	/* 132 column mode */
X	fputs("\033)}\016", stdout);	/* mosaic mode */
X
X	for(y = 0; y < vmap_height; ++y)
X	{
X		for(last_byte = vmap_width - 1;
X			last_byte >= 0
X				&& vmap[y * vmap_width + last_byte] == 0x20;
X			--last_byte)
X			;
X
X		for(x = 0; x <= last_byte; ++x)
X		{
X			fputc(vmap[y*(vmap_width) + x], stdout);
X		}
X		fputc('\n', stdout);
X	}
X
X	fputs("\033(B\017", stdout);
X}
END_OF_FILE
if test 2789 -ne `wc -c <'pbmto4425.c'`; then
    echo shar: \"'pbmto4425.c'\" unpacked with wrong size!
fi
# end of 'pbmto4425.c'
fi
echo shar: End of archive 1 \(of 1\).
cp /dev/null ark1isdone
MISSING=""
for I in 1 ; do
    if test ! -f ark${I}isdone ; then
	MISSING="${MISSING} ${I}"
    fi
done
if test "${MISSING}" = "" ; then
    echo You have the archive.
    rm -f ark[1-9]isdone
else
    echo You still need to unpack the following archives:
    echo "        " ${MISSING}
fi
##  End of shell archive.
exit 0

exit 0 # Just in case...
