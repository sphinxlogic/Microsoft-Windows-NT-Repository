Newsgroups: comp.sources.misc
From: 0001729221@mcimail.com (Jeffrey Chilton)
Subject: v36i089:  formes - French verb drill v1.5, Part01/03
Message-ID: <csm-v36i089=formes.202117@sparky.IMD.Sterling.COM>
X-Md4-Signature: e375127c465d39545e005a08d150cdd4
Date: Fri, 2 Apr 1993 02:22:11 GMT
Approved: kent@sparky.imd.sterling.com

Submitted-by: 0001729221@mcimail.com (Jeffrey Chilton)
Posting-number: Volume 36, Issue 89
Archive-name: formes/part01
Environment: DOS, SUNOS, ULTRIX

Formes 1.5 is simple French verb drill program.  It presents a student
with a series of fill-in-the-blank phrases constructed by the program by
expanding templates with verbs and subject pronouns selected at random.
This random selection is weighted by previous performance--groups of
similarly conjugated verbs and tenses that elicit incorrect responses
are emphasized in subsequent questioning.  The pool of verbs, subject
pronouns and phrase templates can be changed or extended (or abridged)
by the user.

Version 1.5 contains 111 verbs grouped into 46 conjugation classes; 12
subject pronouns; and seven phrase templates that offer the present
indicative, future, compound past, imperfect indicative, conditional,
present subjunctive and pluperfect tenses.  (The infinitive, imperative
and past subjunctive tenses are also available to template writers.)

#! /bin/sh
# This is a shell archive.  Remove anything before this line, then unpack
# it by saving it into a file and typing "sh file".  To overwrite existing
# files, type "sh file -c".  You can also feed this as standard input via
# unshar, or by typing "sh <file", e.g..  If this archive is complete, you
# will see the following message at the end:
#		"End of archive 1 (of 3)."
# Contents:  MANIFEST README assoc.c assoc.h class.h collect.h dos
#   exstr.h form.c form.h formes.rsp makefile quiz.h quizset.c
#   quizset.h quizstep.h random.c random.h report.h subject.c
#   subject.h subjset.c subjset.h verbset.h xscores
# Wrapped by chiltj@ois on Fri Mar 26 14:21:19 1993
PATH=/bin:/usr/bin:/usr/ucb ; export PATH
if test -f 'MANIFEST' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'MANIFEST'\"
else
echo shar: Extracting \"'MANIFEST'\" \(1510 characters\)
sed "s/^X//" >'MANIFEST' <<'END_OF_FILE'
X   File Name		Archive #	Description
X-----------------------------------------------------------
X MANIFEST                   1	This file
X README                     1	General information
X assoc.c                    1	Source
X assoc.h                    1	Source
X class.h                    1	Source
X collect.c                  2	Source
X collect.h                  1	Source
X dos                        1	Simplified makefile for DOS
X exstr.c                    2	Source
X exstr.h                    1	Source
X form.c                     1	Source
X form.h                     1	Source
X formes.c                   2	Source
X formes.rsp                 1	Linker response file for DOS
X makefile                   1	Makefile for SunOs and UNIX
X quiz.c                     2	Source
X quiz.h                     1	Source
X quizset.c                  1	Source
X quizset.h                  1	Source
X quizstep.c                 2	Source
X quizstep.h                 1	Source
X random.c                   1	Source
X random.h                   1	Source
X report.c                   2	Source
X report.h                   1	Source
X subject.c                  1	Source
X subject.h                  1	Source
X subjset.c                  1	Source
X subjset.h                  1	Source
X verb.c                     3	Source
X verb.h                     2	Source
X verbset.c                  2	Source
X verbset.h                  1	Source
X xobjects                   3	Configuration source file
X xscores                    1	Pre-loaded initial scores 
END_OF_FILE
if test 1510 -ne `wc -c <'MANIFEST'`; then
    echo shar: \"'MANIFEST'\" unpacked with wrong size!
fi
# end of 'MANIFEST'
fi
if test -f 'README' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'README'\"
else
echo shar: Extracting \"'README'\" \(8251 characters\)
sed "s/^X//" >'README' <<'END_OF_FILE'
X
XSubject: FORMES 1.5 - French verb drill
XEnvironment: DOS, SUNOS, ULTRIX
XArchive-name: FORMES15
X
X
XBLURB
X-----
X
XFormes 1.5 is simple French verb drill program.  It presents a student
Xwith a series of fill-in-the-blank phrases constructed by the program by
Xexpanding templates with verbs and subject pronouns selected at random.
XThis random selection is weighted by previous performance--groups of
Xsimilarly conjugated verbs and tenses that elicit incorrect responses
Xare emphasized in subsequent questioning.  The pool of verbs, subject
Xpronouns and phrase templates can be changed or extended (or abridged)
Xby the user.
X
XVersion 1.5 contains 111 verbs grouped into 46 conjugation classes; 12
Xsubject pronouns; and seven phrase templates that offer the present
Xindicative, future, compound past, imperfect indicative, conditional,
Xpresent subjunctive and pluperfect tenses.  (The infinitive, imperative
Xand past subjunctive tenses are also available to template writers.)
X
X
XCOMPILING (source code distribution only)
X---------  ------ ---- ------------ ----
X
XThe source comes with two makefiles: one called ``makefile'' that works
Xon UNIX and with MicroSoft's new nmake, and a second one called ``dos''
Xthat I have used with with my old MSC3.0 make utility.  The DOS version
Xinvokes the system linker with a response file called ``formes.rsp''.
X
XThe program uses few features likely to be system-dependent.  I've seen
Xit work compiled with an old K&R compiler with 16-bit pointers on an
XIBM PC and with Sun's ANSI-C compiler on a SPARC.  If you transfer the
X``xobjects'' text file from DOS to UNIX be sure to remove the ASCII CR
Xcharacters.
X
X
XCUSTOMIZING
X-----------
X
XMany customizations can be made to Formes 1.5 by editing the ``xobjects''
Xfile.  Subject pronouns, verbs and phrase templates can be added, changed
Xor deleted from the file to suit the student's individual requirements.
XIn general, additions to the file are most easily made by duplicating and
Xthen modifying existing entries.  Unwanted entries can be removed outright
Xor commented-out by prefixing them with a pound sign.
X
XThe following accent notation is used throughout the xobjects file:
X
X    Accent        Combination
X    ----------    --------------------------
X    Acute         A, e, i or o followed by '
X    Cedilla       C followed by ,
X    Circumflex    A, e, i or o followed by ^
X    Grave         A, e, i or o followed by `
X    Umlaut        I followed by ~
X
XSubject pronoun entries begin with ``SUBJECT:'' and take one line each.
XNext on the line is a three character group that indicates if the word
Xor phrase represents the first, second or third person (1, 2 or 3); if
Xit is singular or plural (S or P); and if it is masculine or feminine (M
Xor F).  The remainder of the line contains the text of the subject word
Xor phrase.  Here are some examples from the xobjects file:
X
X    SUBJECT: 1SM je
X    SUBJECT: 2SM tu
X    SUBJECT: 2PM vous
X    SUBJECT: 3SF Annick
X    SUBJECT: 3PF elles
X
XA simple change you might want to make to the subject entries would be to
Xadjust the gender of ``je'' and ``Annick et moi'' to conform to your own.
X(And of ``tu'', ``vous'', if you want.)
X
XVerb entries make up the bulk of the xobjects file.  Each one begins with
X``VERB:'', followed by the infinitive form of the verb and a number that
Xindicates its conjugation class.  (These numbers follow those used in the
XLarousse Dictionnaire Francais Anglais Saturn, 1981.)  Subsequent lines
Xprovide the stems and (for the present indicative, present subjunctive
Xand imperative tenses) endings of the verb's forms.  Other lines provide
Xthe present and past participles and verb's auxiliary.  An example verb
Xentry is:
X
X    VERB: e^tre (48)
X    {
X	PRES-IND: - suis es est sommes e^tes sont 
X	PRES-SUB: so- is is it yons yez ient
X	IMPERATIVE: so- is yons yez
X	IMPERFECT: e't-
X	FUTURE: ser-
X	PRES-PART: e'tant
X	PAST-PART: e'te'
X	AUXILIARY: avoir
X    }
X
XNote the use of an empty stem for the highly irregular present indicative
Xtense of this verb.  Empty endings are not allowed so sometimes part of a
Xstem is removed to each of its endings:
X
X    IMPERATIVE: connai- s ssons ssez 
X
Xnot
X
X    IMPERATIVE: connais-  sons sez
X
XIMPORTANT NOTE:  If you remove all of the verbs of a particular conjugation
Xclass from the xobjects file, either by commenting them out or by outright
Xdeletion, be sure there are no references to that conjugation class in your
Xxscores file (as would happen if you had run FORMES to completion sometime
Xbefore with the old, larger xobjects file).  One easy way to make sure of
Xthis is to simply delete the xscores file--a new one will be created the
Xnext time you run the program.
X
XFinally, the xobjects file contains phrase (called quiz) templates.  These
Xare small programs that control the generation of the phrases presented to
Xthe student.  Each one begins with ``QUIZ:'' followed by a title (used to
Xintroduce a set of phrases) and a scoring group number.  After this, lines
Xthat control the selection of subjects and verbs; the conjugation of verbs;
Xand the construction of the actual quiz phrase follow.  One of the more
Xcomplex phrase templates is:
X
X    QUIZ: <Passe' compose'> (3)
X    {
X	PERSON p1 <random>
X	TEXT-OF Je p1
X	VERB aller aller
X	CONJUGATE Vais aller PRESENT p1
X	VERB boire <random>
X	CONJUGATE Boire boire INFINITIVE
X	PERSON p2 <random> p1
X	TEXT-OF Il p2
X	CONJUGATE A_bu boire PAST p2
X	QUIZ Je< >Vais< >Boire< mais >Il< >{A_bu}<.>
X	SCORE boire
X    }
X
XSix kinds of control statments can appear in the body of a phrase template: 
XPERSON, TEXT-OF, VERB, CONJUGATE, QUIZ and SCORE.  Their order is not always
Xthe same but some statements depend on the results of others.  The syntax
Xand behavior of these six statements are described below.  
X
X1.  PERSON result <random> [ exclusion ]
X
X    This statement causes a subject pronoun to be selected at random.
X    An optional exclusion symbol--the result of a previous PERSON
X    statement--can be provided and removes that previous subject from
X    consideration.  
X
X2.  TEXT-OF result subject-symbol
X
X    This looks up the display text associated with a subject pronoun
X    symbol.  The result is another symbol that can be used in a QUIZ
X    statment to follow.
X
X3.  VERB result { <random> | infinitive }
X
X    This statement causes a verb to be selected either at random (but
X    weighted by previous performance) or by particular infinitive.
X
X4.  CONJUGATE result verb-symbol tense subject-symbol
X
X    This statement conjugates a verb (the result of a previous VERB
X    statement) in the specified tense and in agreement with the
X    specified subject (the result of a previous PERSON statement).
X
X    For ``tense'' substitute one of:  INFINITIVE, PRESENT, IMPERFECT,
X    FUTURE, CONDITIONAL, SUBJUNCTIVE, PAST, PLUPERFECT, PAST-SUBJUNCTIVE
X    or IMPERATIVE.  (I know, some of these are moods and not tenses.)
X
X    The result is another symbol that can be used in a QUIZ statment
X    to follow.
X
X5.  QUIZ symbols-and-literals
X
X    This statement builds a phrase and presents it to the student.
X    The string following ``QUIZ'' must contain only
X
X	Literals--strings of characters surrounded by ``<'' and
X	``>''--which will appear unchanged in the final phrase;
X
X	Symbols that were the result of previous TEXT-OF and
X	CONJUGATE statements; and
X
X	One pair of braces (``{'' and ``}'') to indicated that
X	part of the phrase that will be changed into the blank for
X	the student to fill in.
X
X6.  SCORE verb-symbol
X
X    This causes the outcome of the last QUIZ statement (did the student
X    fill in the blank correctly on the first attempt) to be applied to
X    the specified verb's scoring record.
X
XAs with verbs, if you delete all of the QUIZ entries for a quiz scoring
Xgroup (and currently there is only one entry per scoring group), you
Xmust delete that groups line from your xscores file (or delete the whole
Xxscores file).
X
XCOPYING
X-------
X
XPermission is granted to anyone to make or distribute copies of
Xthe program, in any medium, provided that the copyright notice
Xand permission notice are preserved, and that the distributor
Xgrants the recipient permission for further redistribution as
Xpermitted by this notice.
X
XCopyright (C) 1992-1993 Jeffrey Chilton
X
XAuthor's E-mail address:  172-9221@mcimail.com
X
END_OF_FILE
if test 8251 -ne `wc -c <'README'`; then
    echo shar: \"'README'\" unpacked with wrong size!
fi
# end of 'README'
fi
if test -f 'assoc.c' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'assoc.c'\"
else
echo shar: Extracting \"'assoc.c'\" \(1735 characters\)
sed "s/^X//" >'assoc.c' <<'END_OF_FILE'
X
X/*
X *  Copyright (C) 1992-1993 Jeffrey Chilton
X *
X *  Permission is granted to anyone to make or distribute copies of
X *  this program, in any medium, provided that the copyright notice
X *  and permission notice are preserved, and that the distributor
X *  grants the recipient permission for further redistribution as
X *  permitted by this notice.
X *  
X *  Author's E-mail address:  172-9221@mcimail.com
X *  
X */
X
Xstatic char *whatstring = "@(#)assoc.c	2.2 JWC";
X
X#include <stdio.h>
X#include <malloc.h>
X
X#include "class.h"
X#include "assoc.h"
X
X/* Association_new - Create an empty association */
X
XAssociation *
XAssociation_new()
X{
X    Association *self;
X
X    self = (Association *)malloc(sizeof (Association));
X    if (!self)
X    {
X	fprintf(stderr, "Association_new: malloc fails\n");
X	goto out;
X    }
X
X    self->key = (void *)0;
X    self->value = (void *)0;
X
Xout:
X
X    return self;
X
X}
X
X/* Association_newWithKey - Create a half-empty association */
X
XAssociation *
XAssociation_newWithKey(key)
Xvoid *key;
X{
X    Association *self;
X
X    self = (Association *)malloc(sizeof (Association));
X    if (!self)
X    {
X	fprintf(stderr, "Association_new: malloc fails\n");
X	goto out;
X    }
X
X    self->key = key;
X    self->value = (void *)0;
X
Xout:
X
X    return self;
X
X}
X
X/* Association_newWithPair - Create a full association */
X
XAssociation *
XAssociation_newWithPair(key, value)
Xvoid *key;
Xvoid *value;
X{
X    Association *self;
X
X    self = (Association *)malloc(sizeof (Association));
X    if (!self)
X    {
X	fprintf(stderr, "Association_new: malloc fails\n");
X	goto out;
X    }
X
X    self->key = key;
X    self->value = value;
X
Xout:
X
X    return self;
X
X}
X
X/* Association_destroy */
X
Xvoid
XAssociation_destroy(self)
XAssociation *self;
X{
X    free(self);
X}
X
END_OF_FILE
if test 1735 -ne `wc -c <'assoc.c'`; then
    echo shar: \"'assoc.c'\" unpacked with wrong size!
fi
# end of 'assoc.c'
fi
if test -f 'assoc.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'assoc.h'\"
else
echo shar: Extracting \"'assoc.h'\" \(1220 characters\)
sed "s/^X//" >'assoc.h' <<'END_OF_FILE'
X
X/*
X *  Copyright (C) 1992-1993 Jeffrey Chilton
X *
X *  Permission is granted to anyone to make or distribute copies of
X *  this program, in any medium, provided that the copyright notice
X *  and permission notice are preserved, and that the distributor
X *  grants the recipient permission for further redistribution as
X *  permitted by this notice.
X *  
X *  Author's E-mail address:  172-9221@mcimail.com
X *  
X */
X
X/* static char *whatstring = "@(#)assoc.h	2.2 JWC"; */
X
X#ifndef ASSOC_H
X#define ASSOC_H
X
X/*
X *  Association - a pair of general-purpose pointers
X */
X
Xtypedef struct Association Association;
Xstruct Association
X{
X    void *key;
X    void *value;
X};
X
X#if __STDC__
X
Xextern Association *Association_new();
Xextern Association *Association_newWithKey(void *key);
Xextern Association *Association_newWithPair(void *key, void *value);
Xextern void Association_destroy(Association *self);
X
X#else
X
Xextern Association *Association_new();
Xextern Association *Association_newWithKey();
Xextern Association *Association_newWithPair();
Xextern void Association_destroy();
X
X#endif
X
X#define Association_getKey(s) ((s)->key)
X#define Association_getValue(s) ((s)->value)
X#define Association_setValue(s, v) (s)->value = v
X
X#endif
X
END_OF_FILE
if test 1220 -ne `wc -c <'assoc.h'`; then
    echo shar: \"'assoc.h'\" unpacked with wrong size!
fi
# end of 'assoc.h'
fi
if test -f 'class.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'class.h'\"
else
echo shar: Extracting \"'class.h'\" \(605 characters\)
sed "s/^X//" >'class.h' <<'END_OF_FILE'
X
X/*
X *  Copyright (C) 1992-1993 Jeffrey Chilton
X *
X *  Permission is granted to anyone to make or distribute copies of
X *  this program, in any medium, provided that the copyright notice
X *  and permission notice are preserved, and that the distributor
X *  grants the recipient permission for further redistribution as
X *  permitted by this notice.
X *  
X *  Author's E-mail address:  172-9221@mcimail.com
X *  
X */
X
X/* static char *whatstring = "@(#)class.h	2.2 JWC"; */
X
X#ifndef CLASS_H
X#define CLASS_H
X
Xtypedef int Boolean;
X
X#define TRUE 1
X#define FALSE 0
X
X#define PERFECT 0
X#define FAILURE (-1)
X
X#endif
END_OF_FILE
if test 605 -ne `wc -c <'class.h'`; then
    echo shar: \"'class.h'\" unpacked with wrong size!
fi
# end of 'class.h'
fi
if test -f 'collect.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'collect.h'\"
else
echo shar: Extracting \"'collect.h'\" \(1988 characters\)
sed "s/^X//" >'collect.h' <<'END_OF_FILE'
X
X/*
X *  Copyright (C) 1992-1993 Jeffrey Chilton
X *
X *  Permission is granted to anyone to make or distribute copies of
X *  this program, in any medium, provided that the copyright notice
X *  and permission notice are preserved, and that the distributor
X *  grants the recipient permission for further redistribution as
X *  permitted by this notice.
X *  
X *  Author's E-mail address:  172-9221@mcimail.com
X *  
X */
X
X/* static char *whatstring = "@(#)collect.h	2.3 JWC"; */
X
X#ifndef COLLECT_H
X#define COLLECT_H
X
X#include <malloc.h>
X
X/*
X *  Collection - a multi-purpose collection-of-pointers class
X */
X
Xtypedef struct Collection Collection;
X
Xstruct Collection
X{
X    int nOfItems;
X    int currentLimit;
X    int (*match)();
X    void (*destroy)();
X    char **items;
X};
X
X#define NULLMATCH ((int (*)())0)
X#define NULLDESTROY ((void (*)())0)
X
X#ifdef __STDC__
X
Xextern Collection *Collection_new(int (*match)(), void (*destroy)());
Xextern char *Collection_atKeyGet(Collection *self, char *key);
Xextern int Collection_atKeyGetIndex(Collection *self, char *key);
Xextern int Collection_atKeyPut(Collection *self, char *key, char *value);
Xextern int Collection_atPut(Collection *self, int index, char *value);
Xextern int Collection_do(Collection *self, int (*block)(), char *arg);
Xextern void Collection_destroy(Collection *self);
X
X#else
X
Xextern Collection *Collection_new();
Xextern char *Collection_atKeyGet();
Xextern int Collection_atKeyGetIndex();
Xextern int Collection_atKeyPut();
Xextern int Collection_atPut();
Xextern int Collection_do();
Xextern void Collection_destroy();
X
X#endif
X
X#define Collection_add(s, v) Collection_atPut(s, (s)->nOfItems, (char *)v)
X#define Collection_atDelete(s, i) Collection_atPut(s, i, (char *)0)
X#define Collection_atGet(s, i) ((s)->items[i])
X#define Collection_atKeyDelete(s, k) Collection_atKeyPut(s, k, (char *)0)
X#define Collection_isIn(s, k) Collection_atKeyGet(s, k)
X#define Collection_size(s) ((s)->nOfItems)
X#define Collection_getAll(s) ((s)->items)
X
X
X#endif
X
END_OF_FILE
if test 1988 -ne `wc -c <'collect.h'`; then
    echo shar: \"'collect.h'\" unpacked with wrong size!
fi
# end of 'collect.h'
fi
if test -f 'dos' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'dos'\"
else
echo shar: Extracting \"'dos'\" \(1994 characters\)
sed "s/^X//" >'dos' <<'END_OF_FILE'
X
X#
X#  Copyright (C) 1992-1993 Jeffrey Chilton
X#
X#  Permission is granted to anyone to make or distribute copies of
X#  this program, in any medium, provided that the copyright notice
X#  and permission notice are preserved, and that the distributor
X#  grants the recipient permission for further redistribution as
X#  permitted by this notice.
X#  
X#  Author's E-mail address:  172-9221@mcimail.com
X#  
X#
X
X# static char *whatstring = "@(#)dos	2.4 JWC";
X
XCC = cc
XCFLAGS = -DDOS -DPRODUCTION -Ot -AS
X
Xassoc.obj:	assoc.c class.h assoc.h
X		$(CC) -c $(CFLAGS) assoc.c
X
Xcollect.obj:	collect.c class.h collect.h
X		$(CC) -c $(CFLAGS) collect.c
X
Xexstr.obj:	exstr.c class.h exstr.h
X		$(CC) -c $(CFLAGS) exstr.c
X
Xform.obj:	form.c class.h form.h
X		$(CC) -c $(CFLAGS) form.c
X
Xformes.obj:	formes.c class.h exstr.h form.h subject.h subjset.h quiz.h \
X		quizset.h random.h report.h verb.h verbset.h
X		$(CC) -c $(CFLAGS) formes.c
X
Xquiz.obj:	quiz.c class.h quiz.h assoc.h collect.h quizstep.h exstr.h
X		$(CC) -c $(CFLAGS) quiz.c
X
Xquizset.obj:	quizset.c class.h quizset.h random.h collect.h quiz.h
X		$(CC) -c $(CFLAGS) quizset.c
X
Xquizstep.obj:	quizstep.c class.h quizstep.h assoc.h collect.h exstr.h \
X		subject.h subjset.h random.h report.h verb.h verbset.h
X		$(CC) -c $(CFLAGS) quizstep.c
X
Xrandom.obj:	random.c class.h random.h
X		$(CC) -c $(CFLAGS) random.c
X
Xreport.obj:	report.c class.h report.h random.h collect.h
X		$(CC) -c $(CFLAGS) report.c
X
Xsubject.obj:	subject.c class.h subject.h form.h exstr.h
X		$(CC) -c $(CFLAGS) subject.c
X
Xsubjset.obj:	subjset.c class.h subjset.h random.h collect.h
X		$(CC) -c $(CFLAGS) subjset.c
X
Xverb.obj:	verb.c class.h verb.h form.h verbset.h collect.h exstr.h
X		$(CC) -c $(CFLAGS) verb.c
X
Xverbset.obj:	verbset.c class.h verbset.h random.h collect.h verb.h
X		$(CC) -c $(CFLAGS) verbset.c
X
Xformes.exe:	assoc.obj collect.obj exstr.obj form.obj formes.obj \
X		quiz.obj quizset.obj quizstep.obj random.obj report.obj \
X		subject.obj subjset.obj verb.obj verbset.obj
X		link @formes.rsp
X
END_OF_FILE
if test 1994 -ne `wc -c <'dos'`; then
    echo shar: \"'dos'\" unpacked with wrong size!
fi
# end of 'dos'
fi
if test -f 'exstr.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'exstr.h'\"
else
echo shar: Extracting \"'exstr.h'\" \(1358 characters\)
sed "s/^X//" >'exstr.h' <<'END_OF_FILE'
X
X/*
X *  Copyright (C) 1992-1993 Jeffrey Chilton
X *
X *  Permission is granted to anyone to make or distribute copies of
X *  this program, in any medium, provided that the copyright notice
X *  and permission notice are preserved, and that the distributor
X *  grants the recipient permission for further redistribution as
X *  permitted by this notice.
X *  
X *  Author's E-mail address:  172-9221@mcimail.com
X *  
X */
X
X/* static char *whatstring = "@(#)exstr.h	2.4 JWC"; */
X
X#ifndef EXSTR_H
X#define EXSTR_H
X
X/*
X *  ExtendString - Strings of 8-bit characters
X */
X
X#if DOS
X
X#define QUOTE_GAUCHE (char )174
X#define QUOTE_DROIGT (char )175
X
X#else
X
X#define QUOTE_GAUCHE (char )171
X#define QUOTE_DROIGT (char )187
X
X#endif
X
Xtypedef unsigned char ExtendString;
X
X#if __STDC__
X
Xextern ExtendString ExtendString_newFromString(char *str);
Xextern char ExtendendedString_externalFormat(ExtendString *self);
Xextern int ExtendString_compareSansAccent(ExtendString *self, char *str);
X
X#else
X
Xextern ExtendString *ExtendString_newFromString();
Xextern char *ExtendString_externalFormat();
Xextern int ExtendString_compareSansAccent();
X
X#endif
X
X#define ExtendString_cat(a, b) strcat((char *)(a), (char *)(b))
X#define ExtendString_copy(a, b) strcpy((char *)(a), (char *)(b))
X#define ExtendString_len(a) strlen((char *)(a))
X#define ExtendString_destroy(s) if (s) { free(s); }
X
X#endif
X
END_OF_FILE
if test 1358 -ne `wc -c <'exstr.h'`; then
    echo shar: \"'exstr.h'\" unpacked with wrong size!
fi
# end of 'exstr.h'
fi
if test -f 'form.c' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'form.c'\"
else
echo shar: Extracting \"'form.c'\" \(2069 characters\)
sed "s/^X//" >'form.c' <<'END_OF_FILE'
X
X/*
X *  Copyright (C) 1992-1993 Jeffrey Chilton
X *
X *  Permission is granted to anyone to make or distribute copies of
X *  this program, in any medium, provided that the copyright notice
X *  and permission notice are preserved, and that the distributor
X *  grants the recipient permission for further redistribution as
X *  permitted by this notice.
X *  
X *  Author's E-mail address:  172-9221@mcimail.com
X *  
X */
X
Xstatic char *whatstring = "@(#)form.c	2.2 JWC";
X
X#include <stdio.h>
X#include <malloc.h>
X
X#include "class.h"
X#include "form.h"
X
Xchar *formNames[N_OF_PERSON][N_OF_PLURAL][N_OF_GENDER] = 
X{
X    "1SM", "1SF", "1PM", "1PF",
X    "2SM", "2SF", "2PM", "2PF",
X    "3SM", "3SF", "3PM", "3PF",
X};
X
XForm *
XForm_new(person, plurality, gender)
Xint person;
Xint plurality;
Xint gender;
X{
X    Form *self;
X
X    self = (Form *)malloc(sizeof (Form));
X    if (!self)
X    {
X	fprintf(stderr, "Form_new: malloc fails\n");
X	goto out;
X    }
X
X    self->gender = gender;
X    self->plurality = plurality;
X    self->person = person;
X
Xout:
X
X    return self;
X
X}
X
XForm *
XForm_newFromImage(image)
Xchar *image;
X{
X    int person;
X    int plurality;
X    int gender;
X    char *name;
X    Form *self;
X
X    self = (Form *)malloc(sizeof (Form));
X    if (!self)
X    {
X	fprintf(stderr, "Form_newFromImage: malloc fails\n");
X	goto out;
X    }
X
X    for (person = 0; person < N_OF_PERSON; person++)
X    {
X	for (plurality = 0; plurality < N_OF_PLURAL; plurality++)
X	{
X	    for (gender = 0; gender < N_OF_GENDER; gender++)
X	    {
X		name = formNames[person][plurality][gender];
X		if (0 == strncmp(image, name, strlen(image)))
X		{
X		    self->gender = gender;
X		    self->plurality = plurality;
X		    self->person = person;
X		    goto out;
X		}
X	    }
X	}
X    }
X
X    self = (Form *)(0);
X
Xout:
X
X    return self;
X
X}
X
Xint
XForm_isEquivalent(self, x)
XForm *self;
XForm *x;
X{
X    return self->person == x->person && self->plurality == x->plurality;
X}
X
Xchar *
XForm_image(self)
XForm *self;
X{
X    return formNames[self->person][self->plurality][self->gender];
X}
X
Xvoid
XForm_destroy(self)
XForm *self;
X{
X    free(self);
X}
END_OF_FILE
if test 2069 -ne `wc -c <'form.c'`; then
    echo shar: \"'form.c'\" unpacked with wrong size!
fi
# end of 'form.c'
fi
if test -f 'form.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'form.h'\"
else
echo shar: Extracting \"'form.h'\" \(1345 characters\)
sed "s/^X//" >'form.h' <<'END_OF_FILE'
X
X/*
X *  Copyright (C) 1992-1993 Jeffrey Chilton
X *
X *  Permission is granted to anyone to make or distribute copies of
X *  this program, in any medium, provided that the copyright notice
X *  and permission notice are preserved, and that the distributor
X *  grants the recipient permission for further redistribution as
X *  permitted by this notice.
X *  
X *  Author's E-mail address:  172-9221@mcimail.com
X *  
X */
X
X/* static char *whatstring = "@(#)form.h	2.4 JWC"; */
X
X#ifndef FORM_H
X#define FORM_H
X
X/*
X *  Form - General lingusitic form description
X */
X
Xtypedef struct Form Form;
X
X#define PERSON_FIRST 0
X#define PERSON_SECOND 1
X#define PERSON_THIRD 2
X#define N_OF_PERSON 3
X
X#define PLURAL_SINGULAR 0
X#define PLURAL_PLURAL 1
X#define N_OF_PLURAL 2
X
X#define GENDER_MALE 0
X#define GENDER_FEMALE 1
X#define N_OF_GENDER 2
X
X#define IMPERSUM(s, l) (l + s * 2 - 1)
X
Xstruct Form
X{
X    int person;
X    int plurality;
X    int gender;
X};
X
X#if __STDC__
X
Xextern Form *Form_new(int person, int plurality, int gender);
Xextern Form *Form_newFromImage(char *image);
Xextern int Form_isEquivalent(Form *self, Form *x);
Xextern char *Form_image(Form *self);
Xextern void Form_destroy(Form *self);
X
X#else
X
Xextern Form *Form_new();
Xextern Form *Form_newFromImage();
Xextern int Form_isEquivalent();
Xextern char *Form_image();
Xextern void Form_destroy();
X
X#endif
X
X#endif
X
END_OF_FILE
if test 1345 -ne `wc -c <'form.h'`; then
    echo shar: \"'form.h'\" unpacked with wrong size!
fi
# end of 'form.h'
fi
if test -f 'formes.rsp' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'formes.rsp'\"
else
echo shar: Extracting \"'formes.rsp'\" \(247 characters\)
sed "s/^X//" >'formes.rsp' <<'END_OF_FILE'
Xassoc.obj +
Xcollect.obj +
Xexstr.obj +
Xform.obj +
Xformes.obj +
Xquiz.obj +
Xquizset.obj +
Xquizstep.obj +
Xrandom.obj +
Xreport.obj +
Xsubject.obj +
Xsubjset.obj +
Xverb.obj +
Xverbset.obj
Xformes.exe
X
X
X
X# static char *whatstring = "@(#)formes.rsp	2.3 JWC";
END_OF_FILE
if test 247 -ne `wc -c <'formes.rsp'`; then
    echo shar: \"'formes.rsp'\" unpacked with wrong size!
fi
# end of 'formes.rsp'
fi
if test -f 'makefile' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'makefile'\"
else
echo shar: Extracting \"'makefile'\" \(1474 characters\)
sed "s/^X//" >'makefile' <<'END_OF_FILE'
X
X#
X#  Copyright (C) 1992-1993 Jeffrey Chilton
X#
X#  Permission is granted to anyone to make or distribute copies of
X#  this program, in any medium, provided that the copyright notice
X#  and permission notice are preserved, and that the distributor
X#  grants the recipient permission for further redistribution as
X#  permitted by this notice.
X#  
X#  Author's E-mail address:  172-9221@mcimail.com
X#  
X#
X
X# static char *whatstring = "@(#)makefile	2.4 JWC";
X
XCC = acc
X
X# CFLAGS = -g -DMDEBUG
X# LIBS = /usr/lib/debug/malloc.o
X
XCFLAGS = -O -DPRODUCTION
X
XOBJS = formes.o verb.o exstr.o form.o subject.o verbset.o subjset.o \
X	collect.o report.o quiz.o quizstep.o assoc.o random.o quizset.o
X
Xformes:		$(OBJS)
X		$(CC) $(LDFLAGS) -o formes $(OBJS) $(LIBS)
X
Xassoc.o:	class.h assoc.h
Xcollect.o:	class.h collect.h
Xexstr.o:	class.h exstr.h
Xform.o:		class.h form.h
Xformes.o:	class.h exstr.h form.h subject.h subjset.h quiz.h \
X			quizset.h random.h report.h verb.h verbset.h
Xquiz.o:		class.h quiz.h assoc.h collect.h quizstep.h exstr.h
Xquizset.o:	class.h quizset.h random.h collect.h quiz.h
Xquizstep.o:	class.h quizstep.h assoc.h collect.h exstr.h subject.h \
X			subjset.h random.h report.h verb.h verbset.h
Xrandom.o:	class.h random.h 
Xreport.o:	class.h report.h random.h collect.h
Xsubject.o:	class.h subject.h form.h exstr.h
Xsubjset.o:	class.h subjset.h random.h collect.h
Xverb.o:		class.h form.h verb.h verbset.h collect.h exstr.h
Xverbset.o:	class.h verbset.h random.h collect.h verb.h
X
END_OF_FILE
if test 1474 -ne `wc -c <'makefile'`; then
    echo shar: \"'makefile'\" unpacked with wrong size!
fi
# end of 'makefile'
fi
if test -f 'quiz.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'quiz.h'\"
else
echo shar: Extracting \"'quiz.h'\" \(1318 characters\)
sed "s/^X//" >'quiz.h' <<'END_OF_FILE'
X 
X/*
X *  Copyright (C) 1992-1993 Jeffrey Chilton
X *
X *  Permission is granted to anyone to make or distribute copies of
X *  this program, in any medium, provided that the copyright notice
X *  and permission notice are preserved, and that the distributor
X *  grants the recipient permission for further redistribution as
X *  permitted by this notice.
X *  
X *  Author's E-mail address:  172-9221@mcimail.com
X *  
X */
X
X/* static char *whatstring = "@(#)quiz.h	2.2 JWC"; */
X
X#ifndef QUIZ_H
X#define QUIZ_H
X
X/*
X *  Quiz - The instructions for building one style of question
X */
X
Xtypedef struct Quiz Quiz;
X
X#include "assoc.h"
X#include "collect.h"
X#include "exstr.h"
X
Xstruct Quiz
X{
X    ExtendString *name;		/* printed introduction	*/
X    Collection *symbols;	/* of associations	*/
X    Collection *actions;	/* of QuizSteps		*/
X    int class;
X};
X
X#if __STDC__
X
Xextern Quiz *Quiz_new();
Xextern Quiz *Quiz_newFromFile(FILE *stream);
Xextern void Quiz_display(Quiz *self);
Xextern int Quiz_perform(Quiz *self);
Xextern void Quiz_destroy(Quiz *self);
X
X#else
X
Xextern Quiz *Quiz_new();
Xextern Quiz *Quiz_newFromFile();
Xextern void Quiz_display();
Xextern int Quiz_perform();
Xextern void Quiz_destroy();
X
X#endif
X
X#define Quiz_getName(s) ((s)->name)
X#define Quiz_getClass(s) ((s)->class)
X#define Quiz_setClass(s, c) (s)->class = c
X
X#endif
X
END_OF_FILE
if test 1318 -ne `wc -c <'quiz.h'`; then
    echo shar: \"'quiz.h'\" unpacked with wrong size!
fi
# end of 'quiz.h'
fi
if test -f 'quizset.c' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'quizset.c'\"
else
echo shar: Extracting \"'quizset.c'\" \(1750 characters\)
sed "s/^X//" >'quizset.c' <<'END_OF_FILE'
X
X/*
X *  Copyright (C) 1992-1993 Jeffrey Chilton
X *
X *  Permission is granted to anyone to make or distribute copies of
X *  this program, in any medium, provided that the copyright notice
X *  and permission notice are preserved, and that the distributor
X *  grants the recipient permission for further redistribution as
X *  permitted by this notice.
X *  
X *  Author's E-mail address:  172-9221@mcimail.com
X *  
X */
X
Xstatic char *whatstring = "@(#)quizset.c	2.2 JWC";
X
X#include <stdio.h>
X#include <time.h>
X
X#include "class.h"
X#include "quizset.h"
X#include "random.h"
X
Xextern Random *Squizzer;
X
XQuizSet *
XQuizSet_new()
X{
X    QuizSet *self;
X
X    self = (QuizSet *)malloc(sizeof (QuizSet));
X    if (!self)
X    {
X	fprintf(stderr, "QuizSet_new: malloc fails\n");
X	goto out;
X    }
X
X    self->allQuizs = Collection_new(NULLMATCH, Quiz_destroy);
X    if (!self->allQuizs)
X    {
X	free(self);
X	self = (QuizSet *)0;
X	fprintf(stderr, "QuizSet_new: Collection new fails\n");
X	goto out;
X    }
X
Xout:
X
X    return self;
X
X}
X
Xvoid 
XQuizSet_addOne(self, quiz)
XQuizSet *self;
XQuiz *quiz;
X{
X    Collection_add(self->allQuizs, (char *)quiz);
X}
X
XQuiz *
XQuizSet_getOneAtRandom(self)
XQuizSet *self;
X{
X    unsigned long n;
X    Quiz *quiz;
X
X    n = Random_long(Squizzer) % Collection_size(self->allQuizs);
X    quiz = (Quiz *)Collection_atGet(self->allQuizs, (int )n);
X
X    return quiz;
X
X}
X
XQuiz *
XQuizSet_getOneFromClass(self, class)
XQuizSet *self;
Xint class;
X{
X    Quiz *quiz;
X
X    /* TEMPORARY [crude beyond words] */
X
X    quiz = QuizSet_getOneAtRandom(self);
X    while (Quiz_getClass(quiz) != class)
X    {
X	quiz = QuizSet_getOneAtRandom(self);
X    }
X
X    return quiz;
X
X}
X
Xvoid 
XQuizSet_destroy(self)
XQuizSet *self;
X{
X
X    Collection_destroy(self->allQuizs);
X    free(self);
X
X}
X
END_OF_FILE
if test 1750 -ne `wc -c <'quizset.c'`; then
    echo shar: \"'quizset.c'\" unpacked with wrong size!
fi
# end of 'quizset.c'
fi
if test -f 'quizset.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'quizset.h'\"
else
echo shar: Extracting \"'quizset.h'\" \(1173 characters\)
sed "s/^X//" >'quizset.h' <<'END_OF_FILE'
X
X/*
X *  Copyright (C) 1992-1993 Jeffrey Chilton
X *
X *  Permission is granted to anyone to make or distribute copies of
X *  this program, in any medium, provided that the copyright notice
X *  and permission notice are preserved, and that the distributor
X *  grants the recipient permission for further redistribution as
X *  permitted by this notice.
X *  
X *  Author's E-mail address:  172-9221@mcimail.com
X *  
X */
X
X/* static char *whatstring = "@(#)quizset.h	2.2 JWC"; */
X
X#ifndef QUIZSET_H
X#define QUIZSET_H
X
X/*
X *  QuizSet - A collection of Quizs
X */
X
Xtypedef struct QuizSet QuizSet;
X
X#include "collect.h"
X#include "quiz.h"
X
Xstruct QuizSet
X{
X    Collection *allQuizs;
X};
X
X#if __STDC__
X
Xextern QuizSet *QuizSet_new();
Xextern void QuizSet_addOne(QuizSet *self, Quiz *quiz);
Xextern Quiz *QuizSet_getOneAtRandom(QuizSet *self);
Xextern Quiz *QuizSet_getOneFromClass(QuizSet *self, int class);
Xextern void QuizSet_destroy(QuizSet *self);
X
X#else
X
Xextern QuizSet *QuizSet_new();
Xextern void QuizSet_addOne();
Xextern Quiz *QuizSet_getOneAtRandom();
Xextern Quiz *QuizSet_getOneFromClass();
Xextern void QuizSet_destroy();
X
X#endif
X
X#define QuizSet_getAll(s) ((s)->allQuizs)
X
X#endif
X
END_OF_FILE
if test 1173 -ne `wc -c <'quizset.h'`; then
    echo shar: \"'quizset.h'\" unpacked with wrong size!
fi
# end of 'quizset.h'
fi
if test -f 'quizstep.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'quizstep.h'\"
else
echo shar: Extracting \"'quizstep.h'\" \(1304 characters\)
sed "s/^X//" >'quizstep.h' <<'END_OF_FILE'
X
X/*
X *  Copyright (C) 1992-1993 Jeffrey Chilton
X *
X *  Permission is granted to anyone to make or distribute copies of
X *  this program, in any medium, provided that the copyright notice
X *  and permission notice are preserved, and that the distributor
X *  grants the recipient permission for further redistribution as
X *  permitted by this notice.
X *  
X *  Author's E-mail address:  172-9221@mcimail.com
X *  
X */
X
X/* static char *whatstring = "@(#)quizstep.h	2.3 JWC"; */
X
X#ifndef QUIZSTEP_H
X#define QUIZSTEP_H
X
X/*
X *  QuizStep - 
X */
X
Xtypedef struct QuizStep QuizStep;
X
X#include "collect.h"
X
X#define N_STEPTYPES 7
X
X#define STEP_NONE 0
X#define STEP_VERB 1
X#define STEP_PSUBJ 2
X#define STEP_TEXTOF 3
X#define STEP_CONJUGATE 4
X#define STEP_QUIZ 5
X#define STEP_SCORE 6
X
Xstruct QuizStep
X{
X    int type;
X    Collection *detail;		/* of associations	*/
X};
X
X#if __STDC__
X
Xextern QuizStep *QuizStep_new();
Xextern QuizStep *QuizStep_newFromString(char *string, Collection *symbols);
Xextern int QuizStep_display(QuizStep *self);
Xextern int QuizStep_perform(QuizStep *self);
Xextern void QuizStep_destroy(QuizStep *self);
X
X#else
X
Xextern QuizStep *QuizStep_new();
Xextern QuizStep *QuizStep_newFromString();
Xextern int QuizStep_display();
Xextern int QuizStep_perform();
Xextern void QuizStep_destroy();
X
X#endif
X
X#endif
X
END_OF_FILE
if test 1304 -ne `wc -c <'quizstep.h'`; then
    echo shar: \"'quizstep.h'\" unpacked with wrong size!
fi
# end of 'quizstep.h'
fi
if test -f 'random.c' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'random.c'\"
else
echo shar: Extracting \"'random.c'\" \(1211 characters\)
sed "s/^X//" >'random.c' <<'END_OF_FILE'
X
X/*
X *  Copyright (C) 1992-1993 Jeffrey Chilton
X *
X *  Permission is granted to anyone to make or distribute copies of
X *  this program, in any medium, provided that the copyright notice
X *  and permission notice are preserved, and that the distributor
X *  grants the recipient permission for further redistribution as
X *  permitted by this notice.
X *  
X *  Author's E-mail address:  172-9221@mcimail.com
X *  
X */
X
Xstatic char *whatstring = "@(#)random.c	2.2 JWC";
X
X#include <stdio.h>
X#include <malloc.h>
X
X#include "class.h"
X#include "random.h"
X
X#if TESTMAIN
X
Xmain()
X{
X    register int i;
X    Random *squiz;
X    long l;
X
X    squiz = Random_new();
X    for (i = 0; i < 10000; i++)
X    {
X	l = Random_long(squiz);
X	putchar(l & 0xFF);
X    }
X
X}
X
X#endif
X
XRandom *
XRandom_new()
X{
X    Random *self;
X
X    self = (Random *)malloc(sizeof (Random));
X    if (self)
X    {
X	*self = time((long *)0);
X    }
X
X    return self;
X
X}
X
Xlong
XRandom_long(self)
XRandom *self;
X{
X    long t;
X
X    /* New seed is absolute value of Squizzing's function applied to old */
X
X    t = *self;
X    t = t / 5L ^ t * 6L;
X    if (t < 0L)
X    {
X	t = -t;
X    }
X    *self = t;
X    return t;
X
X}
X
Xvoid
XRandom_destroy(self)
XRandom *self;
X{
X    free(self);
X}
X
END_OF_FILE
if test 1211 -ne `wc -c <'random.c'`; then
    echo shar: \"'random.c'\" unpacked with wrong size!
fi
# end of 'random.c'
fi
if test -f 'random.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'random.h'\"
else
echo shar: Extracting \"'random.h'\" \(825 characters\)
sed "s/^X//" >'random.h' <<'END_OF_FILE'
X
X/*
X *  Copyright (C) 1992-1993 Jeffrey Chilton
X *
X *  Permission is granted to anyone to make or distribute copies of
X *  this program, in any medium, provided that the copyright notice
X *  and permission notice are preserved, and that the distributor
X *  grants the recipient permission for further redistribution as
X *  permitted by this notice.
X *  
X *  Author's E-mail address:  172-9221@mcimail.com
X *  
X */
X
X/* static char *whatstring = "@(#)random.h	2.2 JWC"; */
X
X#ifndef RANDOM_H
X#define RANDOM_H
X
X/*
X *  Random - 
X */
X
Xtypedef long Random;
X
X#if __STDC__
X
Xextern Random *Random_new();
Xextern long Random_long(Random *self);
Xextern void Random_destroy(Random *self);
X
X#else
X
Xextern Random *Random_new();
Xextern long Random_long();
Xextern void Random_destroy();
X
X#endif
X
X#define Random_setSeed(s, l) *s = (l)
X
X#endif
X
END_OF_FILE
if test 825 -ne `wc -c <'random.h'`; then
    echo shar: \"'random.h'\" unpacked with wrong size!
fi
# end of 'random.h'
fi
if test -f 'report.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'report.h'\"
else
echo shar: Extracting \"'report.h'\" \(1481 characters\)
sed "s/^X//" >'report.h' <<'END_OF_FILE'
X
X/*
X *  Copyright (C) 1992-1993 Jeffrey Chilton
X *
X *  Permission is granted to anyone to make or distribute copies of
X *  this program, in any medium, provided that the copyright notice
X *  and permission notice are preserved, and that the distributor
X *  grants the recipient permission for further redistribution as
X *  permitted by this notice.
X *  
X *  Author's E-mail address:  172-9221@mcimail.com
X *  
X */
X
X/* static char *whatstring = "@(#)report.h	2.3 JWC"; */
X
X#ifndef REPORT_H
X#define REPORT_H
X
X/*
X *  ReportCard - Records performace by scoring group
X */
X
Xtypedef struct ReportCard ReportCard;
X
X#include "collect.h"
X
X#define NBUCKETS 5
X#define TRIESPER 3
X
Xstruct oneGrade
X{
X    int tries[NBUCKETS];
X    int hits[NBUCKETS];
X    int zone; 
X    int class;
X};
X
Xstruct ReportCard
X{
X    char *name;
X    Collection *allGrades;
X    int zoneTotal;
X};
X
X#if __STDC__
X
Xextern ReportCard *ReportCard_new(char *name);
Xextern ReportCard *ReportCard_loadFromFile(ReportCard *self, FILE *stream);
Xextern void ReportCard_record(ReportCard *self, int class, int hits, int tries);
Xextern void ReportCard_printOn(ReportCard *self, FILE *stream);
Xextern int ReportCard_pickClass(ReportCard *self);
Xextern void ReportCard_destroy(ReportCard *self);
X
X#else
X
Xextern ReportCard *ReportCard_new();
Xextern ReportCard *ReportCard_newFromFile();
Xextern void ReportCard_record();
Xextern void ReportCard_printOn();
Xextern int ReportCard_pickClass();
Xextern void ReportCard_destroy();
X
X#endif
X
X#endif
X
END_OF_FILE
if test 1481 -ne `wc -c <'report.h'`; then
    echo shar: \"'report.h'\" unpacked with wrong size!
fi
# end of 'report.h'
fi
if test -f 'subject.c' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'subject.c'\"
else
echo shar: Extracting \"'subject.c'\" \(1159 characters\)
sed "s/^X//" >'subject.c' <<'END_OF_FILE'
X
X/*
X *  Copyright (C) 1992-1993 Jeffrey Chilton
X *
X *  Permission is granted to anyone to make or distribute copies of
X *  this program, in any medium, provided that the copyright notice
X *  and permission notice are preserved, and that the distributor
X *  grants the recipient permission for further redistribution as
X *  permitted by this notice.
X *  
X *  Author's E-mail address:  172-9221@mcimail.com
X *  
X */
X
Xstatic char *whatstring = "@(#)subject.c	2.3 JWC";
X
X#include <stdio.h>
X#include <malloc.h>
X
X#include "class.h"
X#include "subject.h"
X#include "form.h"
X
XSubject *
XSubject_new(text, form)
Xchar *text;
XForm *form;
X{
X    Subject *self;
X
X    self = (Subject *)malloc(sizeof (Subject));
X    if (!self)
X    {
X	fprintf(stderr, "Subject_new: malloc fails\n");
X	goto out;
X    }
X
X    self->text = ExtendString_newFromString(text);
X    self->form = form;
X
Xout:
X
X    return self;
X
X}
X
Xvoid
XSubject_destroy(self)
XSubject *self;
X{
X    ExtendString_destroy(self->text);
X    free(self);
X}
X
X#ifndef PRODUCTION
X
Xvoid
XSubject_printOn(self, stream)
XSubject *self;
XFILE *stream;
X{
X    fprintf(stream, "SUBJECT: %s %s\n", Form_image(self->form), self->text);
X}
X
X#endif
X
END_OF_FILE
if test 1159 -ne `wc -c <'subject.c'`; then
    echo shar: \"'subject.c'\" unpacked with wrong size!
fi
# end of 'subject.c'
fi
if test -f 'subject.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'subject.h'\"
else
echo shar: Extracting \"'subject.h'\" \(1048 characters\)
sed "s/^X//" >'subject.h' <<'END_OF_FILE'
X
X/*
X *  Copyright (C) 1992-1993 Jeffrey Chilton
X *
X *  Permission is granted to anyone to make or distribute copies of
X *  this program, in any medium, provided that the copyright notice
X *  and permission notice are preserved, and that the distributor
X *  grants the recipient permission for further redistribution as
X *  permitted by this notice.
X *  
X *  Author's E-mail address:  172-9221@mcimail.com
X *  
X */
X
X/* static char *whatstring = "@(#)subject.h	2.3 JWC"; */
X
X#ifndef SUBJECT_H
X#define SUBJECT_H
X
X/*
X *  Subject - A subject pronoun
X */
X
Xtypedef struct Subject Subject;
X
X#include "exstr.h"
X#include "form.h"
X
Xstruct Subject
X{
X    ExtendString *text;
X    Form *form;
X};
X
X#if __STDC__
X
Xextern Subject *Subject_new(char *text, Form *form);
Xextern void Subject_printOn(Subject *self, FILE *stream);
Xextern void Subject_destroy(Subject *self);
X
X#else
X
Xextern Subject *Subject_new();
Xextern void Subject_printOn();
Xextern void Subject_destroy();
X
X#endif
X
X#define Subject_getText(s) ((s)->text)
X#define Subject_getForm(s) ((s)->form)
X
X#endif
X
END_OF_FILE
if test 1048 -ne `wc -c <'subject.h'`; then
    echo shar: \"'subject.h'\" unpacked with wrong size!
fi
# end of 'subject.h'
fi
if test -f 'subjset.c' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'subjset.c'\"
else
echo shar: Extracting \"'subjset.c'\" \(1825 characters\)
sed "s/^X//" >'subjset.c' <<'END_OF_FILE'
X
X/*
X *  Copyright (C) 1992-1993 Jeffrey Chilton
X *
X *  Permission is granted to anyone to make or distribute copies of
X *  this program, in any medium, provided that the copyright notice
X *  and permission notice are preserved, and that the distributor
X *  grants the recipient permission for further redistribution as
X *  permitted by this notice.
X *  
X *  Author's E-mail address:  172-9221@mcimail.com
X *  
X */
X
Xstatic char *whatstring = "@(#)subjset.c	2.3 JWC";
X
X#include <stdio.h>
X#include <time.h>
X
X#include "class.h"
X#include "subjset.h"
X#include "random.h"
X
Xextern Random *Squizzer;
X
Xstatic int matchSubject();
X
XSubjectSet *
XSubjectSet_new()
X{
X    SubjectSet *self;
X
X    self = (SubjectSet *)malloc(sizeof (SubjectSet));
X    if (!self)
X    {
X	fprintf(stderr, "SubjectSet_new: malloc fails\n");
X	goto out;
X    }
X
X    self->allSubjects = Collection_new(matchSubject, Subject_destroy);
X    if (!self->allSubjects)
X    {
X	free(self);
X	self = (SubjectSet *)0;
X	fprintf(stderr, "SubjectSet_new: Collection new fails\n");
X	goto out;
X    }
X
Xout:
X
X    return self;
X
X}
X
Xstatic int
XmatchSubject(subj, key)
XSubject *subj;
Xchar *key;
X{
X    return strcmp(Subject_getText(subj), key);
X}
X
Xvoid
XSubjectSet_addOne(self, subj)
XSubjectSet *self;
XSubject *subj;
X{
X    Collection_add(self->allSubjects, (char *)subj);
X
X}
X
XSubject *
XSubjectSet_getOneByName(self, name)
XSubjectSet *self;
Xchar *name;
X{
X    return (Subject *)Collection_atKeyGet(self->allSubjects, name);
X}
X
XSubject *
XSubjectSet_getOneAtRandom(self)
XSubjectSet *self;
X{
X    register int n;
X    Subject *subj;
X
X    n = Random_long(Squizzer) % Collection_size(self->allSubjects);
X    subj = (Subject *)Collection_atGet(self->allSubjects, n);
X
X    return subj;
X
X}
X
Xvoid
XSubjectSet_destroy(self)
XSubjectSet *self;
X{
X
X    Collection_destroy(self->allSubjects);
X    free(self);
X
X}
X
END_OF_FILE
if test 1825 -ne `wc -c <'subjset.c'`; then
    echo shar: \"'subjset.c'\" unpacked with wrong size!
fi
# end of 'subjset.c'
fi
if test -f 'subjset.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'subjset.h'\"
else
echo shar: Extracting \"'subjset.h'\" \(1258 characters\)
sed "s/^X//" >'subjset.h' <<'END_OF_FILE'
X
X/*
X *  Copyright (C) 1992-1993 Jeffrey Chilton
X *
X *  Permission is granted to anyone to make or distribute copies of
X *  this program, in any medium, provided that the copyright notice
X *  and permission notice are preserved, and that the distributor
X *  grants the recipient permission for further redistribution as
X *  permitted by this notice.
X *  
X *  Author's E-mail address:  172-9221@mcimail.com
X *  
X */
X
X/* static char *whatstring = "@(#)subjset.h	2.3 JWC"; */
X
X#ifndef SUBJSET_H
X#define SUBJSET_H
X
X/*
X *  SubjectSet - A collection of Subjects
X */
X
Xtypedef struct SubjectSet SubjectSet;
X
X#include "collect.h"
X#include "subject.h"
X
Xstruct SubjectSet
X{
X    Collection *allSubjects;
X};
X
X#if __STDC__
X
Xextern SubjectSet *SubjectSet_new();
Xextern void SubjectSet_addOne(SubjectSet *self, Subject *subj);
Xextern Subject *SubjectSet_getOneByName(SubjectSet *self, char *name);
Xextern Subject *SubjectSet_getOneAtRandom(SubjectSet *self);
Xextern void SubjectSet_destroy(SubjectSet *self);
X
X#else
X
Xextern SubjectSet *SubjectSet_new();
Xextern void SubjectSet_addOne();
Xextern Subject *SubjectSet_getOneByName();
Xextern Subject *SubjectSet_getOneAtRandom();
Xextern void SubjectSet_destroy();
X
X#endif
X
X#define SubjectSet_getAll(s) ((s)->allSubjects)
X
X#endif
X
END_OF_FILE
if test 1258 -ne `wc -c <'subjset.h'`; then
    echo shar: \"'subjset.h'\" unpacked with wrong size!
fi
# end of 'subjset.h'
fi
if test -f 'verbset.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'verbset.h'\"
else
echo shar: Extracting \"'verbset.h'\" \(1359 characters\)
sed "s/^X//" >'verbset.h' <<'END_OF_FILE'
X
X/*
X *  Copyright (C) 1992-1993 Jeffrey Chilton
X *
X *  Permission is granted to anyone to make or distribute copies of
X *  this program, in any medium, provided that the copyright notice
X *  and permission notice are preserved, and that the distributor
X *  grants the recipient permission for further redistribution as
X *  permitted by this notice.
X *  
X *  Author's E-mail address:  172-9221@mcimail.com
X *  
X */
X
X/* static char *whatstring = "@(#)verbset.h	2.4 JWC"; */
X
X#ifndef VERBSET_H
X#define VERBSET_H
X
X/*
X *  VerbSet - A collection of Verbs
X */
X
Xtypedef struct VerbSet VerbSet;
X
X#include "collect.h"
X#include "verb.h"
X
Xstruct VerbSet
X{
X    Collection *allVerbs;
X};
X
X#if __STDC__
X
Xextern VerbSet *VerbSet_new();
Xextern void VerbSet_addOne(VerbSet *self, Verb *verb);
Xextern Verb *VerbSet_getOneByName(VerbSet *self, char *name);
Xextern Verb *VerbSet_getOneFromClass(VerbSet *self, int class);
Xextern Verb *VerbSet_getOneAtRandom(VerbSet *self);
Xextern int VerbSet_locateRequired(VerbSet *self);
Xextern void VerbSet_destroy(VerbSet *self);
X
X#else
X
Xextern VerbSet *VerbSet_new();
Xextern void VerbSet_addOne();
Xextern Verb *VerbSet_getOneByName();
Xextern Verb *VerbSet_getOneFromClass();
Xextern Verb *VerbSet_getOneAtRandom();
Xextern int VerbSet_locateRequired();
Xextern void VerbSet_destroy();
X
X#endif
X
X#define VerbSet_getAll(s) ((s)->allVerbs)
X
X#endif
X
END_OF_FILE
if test 1359 -ne `wc -c <'verbset.h'`; then
    echo shar: \"'verbset.h'\" unpacked with wrong size!
fi
# end of 'verbset.h'
fi
if test -f 'xscores' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'xscores'\"
else
echo shar: Extracting \"'xscores'\" \(289 characters\)
sed "s/^X//" >'xscores' <<'END_OF_FILE'
X
XQUIZSCORES: (287)
X{
X    CLASS 1: 1/3 0/3 0/3 0/3 0/3 (71)
X    CLASS 5: 3/3 0/3 0/3 0/3 0/3 (61)
X    CLASS 3: 3/3 2/3 0/3 0/3 0/3 (51)
X    CLASS 2: 3/3 3/3 3/3 0/3 0/3 (31)
X    CLASS 8: 3/3 3/3 1/3 0/3 0/3 (41)
X    CLASS 6: 3/3 3/3 3/3 2/3 0/3 (21)
X    CLASS 7: 3/3 3/3 3/3 3/3 1/3 (11)
X}
END_OF_FILE
if test 289 -ne `wc -c <'xscores'`; then
    echo shar: \"'xscores'\" unpacked with wrong size!
fi
# end of 'xscores'
fi
echo shar: End of archive 1 \(of 3\).
cp /dev/null ark1isdone
MISSING=""
for I in 1 2 3 ; do
    if test ! -f ark${I}isdone ; then
	MISSING="${MISSING} ${I}"
    fi
done
if test "${MISSING}" = "" ; then
    echo You have unpacked all 3 archives.
    rm -f ark[1-9]isdone
else
    echo You still need to unpack the following archives:
    echo "        " ${MISSING}
fi
##  End of shell archive.
exit 0

exit 0 # Just in case...
