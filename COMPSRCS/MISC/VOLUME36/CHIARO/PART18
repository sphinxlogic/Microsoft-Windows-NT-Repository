Newsgroups: comp.sources.misc
From: jwbirdsa@picarefy.picarefy.com (James W. Birdsall)
Subject: v36i088:  chiaro - Image Utilities, Part18/18
Message-ID: <1993Mar26.203030.15344@sparky.imd.sterling.com>
X-Md4-Signature: 306a8bfbc623cf87bb67b230f205186b
Date: Fri, 26 Mar 1993 20:30:30 GMT
Approved: kent@sparky.imd.sterling.com

Submitted-by: jwbirdsa@picarefy.picarefy.com (James W. Birdsall)
Posting-number: Volume 36, Issue 88
Archive-name: chiaro/part18
Environment: UNIX, Sun, DECstation, 3B1

#! /bin/sh
# This is a shell archive.  Remove anything before this line, then feed it
# into a shell via "sh file" or similar.  To overwrite existing files,
# type "sh file -c".
# Contents:  src/blocproc.h src/chidisp.h src/chils.cfg src/chils.h
#   src/colors.h src/comsrch.h src/gifcheck.h src/img.h
#   src/patchlevel.h src/pbm.h src/pgm.h src/pnm.h src/ppm.h src/sr.h
#   src/stdinarg.h src/token.h src/xbm.h templates/3b1.h
#   templates/3b1.mk templates/README templates/linux-gcc.mk
#   templates/sunos41cc.h templates/sunos41cc.mk
#   templates/sunos41gcc.h templates/sunos41gcc.mk
#   templates/template.mk templates/ultrix-cc.h templates/ultrix-cc.mk
#   templates/ultrix-gcc.h templates/ultrix-gcc.mk
# Wrapped by kent@sparky on Thu Mar 25 11:20:08 1993
PATH=/bin:/usr/bin:/usr/ucb:/usr/local/bin:/usr/lbin ; export PATH
echo If this archive is complete, you will see the following message:
echo '          "shar: End of archive 18 (of 18)."'
if test -f 'src/blocproc.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'src/blocproc.h'\"
else
  echo shar: Extracting \"'src/blocproc.h'\" \(2217 characters\)
  sed "s/^X//" >'src/blocproc.h' <<'END_OF_FILE'
X/***************************************************************************
X*   BLOCPROC.H                                                             *
X*   HEADER FOR GIF block processing functions for GIFCHECK.                *
X*   OS:      UNIX                                                          *
X*                                                                          *
X*   Copyright (c) 1993 James W. Birdsall. All Rights Reserved.             *
X*                                                                          *
X*   $Id: blocproc.h,v 1.2 1993/02/10 02:00:22 jwbirdsa Exp $
X*
X*   Contains function prototypes for functions in BLOCPROC.C, etc.         *
X*                                                                          *
X***************************************************************************/
X
X#ifndef DEPEND_H
X    **** ERROR **** MUST INCLUDE DEPEND.H BEFORE BLOCPROC.H
X#endif
X#ifndef GIF_H
X    **** ERROR **** MUST INCLUDE GIF.H BEFORE BLOCPROC.H
X#endif
X
X#ifndef BLOCPROC_H
X
X#define BLOCPROC_H
X
X/*
X** system includes <>
X*/
X
X/*
X** custom includes ""
X*/
X
X/*
X** local #defines
X*/
X
X/* Grammar order state indices. */
X
X#define STATE_BEGIN          0
X#define STATE_GCE            1
X#define STATE_IMAGE          2
X#define STATE_PTE            3
X#define STATE_GENEXT         4
X#define STATE_COMMENT        5
X#define STATE_APP            6
X#define STATE_TERM           7
X
X#define STATE_MAX            8
X
X
X/*
X** misc: copyright strings, version macros, etc.
X*/
X
Xstatic char CONST RCSblocproc[] = "$Id: blocproc.h,v 1.2 1993/02/10 02:00:22 jwbirdsa Exp $";
X
X
X/*
X** typedefs
X*/
X
X/*
X** global variables
X*/
X
X/*
X** function prototypes
X*/
X
X#ifdef  __STDC__
X# define P_(s) s
X#else
X# define P_(s) ()
X#endif
X
Xint global_printout P_((FB *infile, char *filename, GIF_LSD *lsd, long size));
Xint image_printout P_((FB *infile, GIF_IMD *imd, int images, ULONG version, int gct_size));
Xint pte_printout P_((FB *infile, int ptes));
Xint gce_printout P_((FB *infile, int gces));
Xint genext_printout P_((FB *infile, int extype, int gens));
Xint comment_printout P_((FB *infile, int comments));
Xint app_printout P_((FB *infile, int apps));
X
Xint follow P_((int state));
X
X#undef P_
X
X#endif /* BLOCPROC_H */
X
END_OF_FILE
  if test 2217 -ne `wc -c <'src/blocproc.h'`; then
    echo shar: \"'src/blocproc.h'\" unpacked with wrong size!
  fi
  # end of 'src/blocproc.h'
fi
if test -f 'src/chidisp.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'src/chidisp.h'\"
else
  echo shar: Extracting \"'src/chidisp.h'\" \(2126 characters\)
  sed "s/^X//" >'src/chidisp.h' <<'END_OF_FILE'
X/***************************************************************************
X*   CHIDISP.H                                                              *
X*   HEADER FOR CHILS display functions                                     *
X*   OS:      UNIX                                                          *
X*                                                                          *
X*   Copyright (c) 1993 James W. Birdsall. All Rights Reserved.             *
X*                                                                          *
X*   $Id: chidisp.h,v 1.1 1993/03/09 00:32:50 jwbirdsa Exp $                                                                  *
X*                                                                          *
X*   Header for the display functions used by CHILS.                        *
X*                                                                          *
X***************************************************************************/
X
X#ifndef CHIDISP_H
X
X#define CHIDISP_H
X
X/*
X** system includes <>
X*/
X
X/*
X** custom includes ""
X*/
X
X/*
X** #defines
X*/
X
X/*
X** misc: copyright strings, version macros, etc.
X*/
X
Xstatic char CONST RCSchidisp[] = "$Id: chidisp.h,v 1.1 1993/03/09 00:32:50 jwbirdsa Exp $";
X
X
X/*
X** typedefs
X*/
X
X/*
X** global variables
X*/
X
X/*
X** function prototypes
X*/
X
X#ifdef  __STDC__
X# define P_(s) s
X#else
X# define P_(s) ()
X#endif
X
XVOID getcols();
XVOID setcols P_((int cols));
X
XVOID gif_display P_((GIF_LSD *gifinfo, FILE *infile, char *filename, long filesize));
XVOID img_display P_((IMG_HDR *imginfo, char *filename, long filesize));
XVOID jfif_display P_((JFIF_HDR *jfifinfo, char *filename, long filesize));
XVOID sr_display P_((SR_HDR *srinfo, char *filename, long filesize));
XVOID tga_display P_((TGA_HDR *tgainfo, char *filename, long filesize));
XVOID pnm_display P_((PNM_HDR *pnminfo, char *filename, long filesize));
XVOID xbm_display P_((XBM_HDR *xbminfo, char *filename, long filesize));
XVOID bmp_display P_((BMP_HDR *bmpinfo, char *filename, long filesize));
XVOID pcx_display P_((PCX_HDR *pcxinfo, char *filename, long filesize));
X
X#undef P_
X
X#endif /* CHIDISP_H */
X
END_OF_FILE
  if test 2126 -ne `wc -c <'src/chidisp.h'`; then
    echo shar: \"'src/chidisp.h'\" unpacked with wrong size!
  fi
  # end of 'src/chidisp.h'
fi
if test -f 'src/chils.cfg' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'src/chils.cfg'\"
else
  echo shar: Extracting \"'src/chils.cfg'\" \(205 characters\)
  sed "s/^X//" >'src/chils.cfg' <<'END_OF_FILE'
XGIF	gif,GIF
XIMG	img,IMG
XJFIF	jpg,JPG,jfif,JFIF
XSUNRAS  im1,IM1,im8,IM8,im24,IM24,sun,SUN
XTARGA   tga,TGA,targa,TARGA
XPBM     pbm,PBM
XPGM	pgm,PGM
XPPM     ppm,PPM
XXBM	xbm,XBM
XBMP	bmp,BMP,dib,DIB
XPCX	pcx,PCX
END_OF_FILE
  if test 205 -ne `wc -c <'src/chils.cfg'`; then
    echo shar: \"'src/chils.cfg'\" unpacked with wrong size!
  fi
  # end of 'src/chils.cfg'
fi
if test -f 'src/chils.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'src/chils.h'\"
else
  echo shar: Extracting \"'src/chils.h'\" \(1515 characters\)
  sed "s/^X//" >'src/chils.h' <<'END_OF_FILE'
X/***************************************************************************
X*   CHILS.H                                                                *
X*   HEADER FOR stuff exported by CHILS.C                                   *
X*   OS:      UNIX                                                          *
X*                                                                          *
X*   Copyright (c) 1993 James W. Birdsall. All Rights Reserved.             *
X*                                                                          *
X*   $Id: chils.h,v 1.0 1993/02/10 01:55:19 jwbirdsa Exp $                                                                  *
X*                                                                          *
X*   Defines stuff shared by CHILS.C and its support files.                 *
X*                                                                          *
X***************************************************************************/
X
X#ifndef CHILS_H
X
X#define CHILS_H
X
X/*
X** system includes <>
X*/
X
X/*
X** custom includes ""
X*/
X
X/*
X** #defines
X*/
X
X/* Global function flag values. */
X
X#define VERBOSE     0x0001        /* Show all files. */
X#define FRONTEND    0x0002        /* Print only filenames. */
X#define NAMETRUNC   0x0004        /* Truncate names. */
X
X
X/*
X** misc: copyright strings, version macros, etc.
X*/
X
X/*
X** typedefs
X*/
X
X/*
X** global variables
X*/
X
Xextern int flags;                 /* Global function flags. */
X
X
X/*
X** function prototypes
X*/
X
X
X#endif /* CHILS_H */
END_OF_FILE
  if test 1515 -ne `wc -c <'src/chils.h'`; then
    echo shar: \"'src/chils.h'\" unpacked with wrong size!
  fi
  # end of 'src/chils.h'
fi
if test -f 'src/colors.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'src/colors.h'\"
else
  echo shar: Extracting \"'src/colors.h'\" \(1681 characters\)
  sed "s/^X//" >'src/colors.h' <<'END_OF_FILE'
X/***************************************************************************
X*   COLORS.H                                                               *
X*   HEADER FOR color hashtable stuff.                                      *
X*   OS:      UNIX                                                          *
X*                                                                          *
X*   Copyright (c) 1993 James W. Birdsall. All Rights Reserved.             *
X*                                                                          *
X*   $Id: colors.h,v 1.2 1993/02/10 02:02:40 jwbirdsa Exp $
X*                                                                          *
X***************************************************************************/
X
X#ifndef DEPEND_H
X    **** ERROR **** MUST INCLUDE DEPEND.H BEFORE COLORS.H
X#endif
X#ifndef FORMATS_H
X    **** ERROR **** MUST INCLUDE FORMATS.H BEFORE COLORS.H
X#endif
X
X#ifndef COLORS_H
X
X#define COLORS_H
X
X/*
X** system includes <>
X*/
X
X/*
X** custom includes ""
X*/
X
X/*
X** local #defines
X*/
X
X#define HASHSIZE        256
X
X
X/*
X** misc: copyright strings, version macros, etc.
X*/
X
Xstatic char CONST RCScolors[] = "$Id: colors.h,v 1.2 1993/02/10 02:02:40 jwbirdsa Exp $";
X
X
X/*
X** typedefs
X*/
X
Xtypedef struct _colors0 {
X    struct _colors0 *next;
X    RGB_TRIPLET c;
X    long instances;
X} HASHIT;
X
X
X/*
X** global variables
X*/
X
X/*
X** function prototypes
X*/
X
X#ifdef  __STDC__
X# define P_(s) s
X#else
X# define P_(s) ()
X#endif
X
Xint col_open();
Xint col_enter P_((int handle, RGB_TRIPLET *newcol));
Xint col_getstat P_((int handle, long *uniques, long *entries));
Xint col_close P_((int handle, HASHIT **retlist));
X
X#undef P_
X
X#endif /* COLORS_H */
X
END_OF_FILE
  if test 1681 -ne `wc -c <'src/colors.h'`; then
    echo shar: \"'src/colors.h'\" unpacked with wrong size!
  fi
  # end of 'src/colors.h'
fi
if test -f 'src/comsrch.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'src/comsrch.h'\"
else
  echo shar: Extracting \"'src/comsrch.h'\" \(1471 characters\)
  sed "s/^X//" >'src/comsrch.h' <<'END_OF_FILE'
X/***************************************************************************
X*   comsrch.H                                                              *
X*   HEADER FOR complex search stuff.                                       *
X*   OS:      UNIX                                                          *
X*                                                                          *
X*   Copyright (c) 1993 James W. Birdsall. All Rights Reserved.             *
X*                                                                          *
X*   $Id: comsrch.h,v 1.4 1993/03/06 01:34:58 jwbirdsa Exp $
X*                                                                          *
X***************************************************************************/
X
X#ifndef DEPEND_H
X    **** ERROR **** MUST INCLUDE DEPEND.H BEFORE COMSRCH.H
X#endif
X
X#ifndef COMSRCH_H
X
X#define COMSRCH_H
X
X/*
X** system includes <>
X*/
X
X/*
X** custom includes ""
X*/
X
X/*
X** local #defines
X*/
X
X/*
X** misc: copyright strings, version macros, etc.
X*/
X
Xstatic char CONST RCScomsrch[] = "$Id: comsrch.h,v 1.4 1993/03/06 01:34:58 jwbirdsa Exp $";
X
X
X/*
X** typedefs
X*/
X
X/*
X** global variables
X*/
X
Xextern int com_errorflag;
X
X/*
X** function prototypes
X*/
X
X#ifdef  __STDC__
X# define P_(s) s
X#else
X# define P_(s) ()
X#endif
X
Xextern int comcheck P_((char *searchstr));
Xextern int comsearch P_((ULONG height, ULONG width, ULONG colors, ULONG format, ULONG filelen, char *searchstr));
X
X#undef P_
X
X#endif /* COMSRCH_H */
X
END_OF_FILE
  if test 1471 -ne `wc -c <'src/comsrch.h'`; then
    echo shar: \"'src/comsrch.h'\" unpacked with wrong size!
  fi
  # end of 'src/comsrch.h'
fi
if test -f 'src/gifcheck.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'src/gifcheck.h'\"
else
  echo shar: Extracting \"'src/gifcheck.h'\" \(2060 characters\)
  sed "s/^X//" >'src/gifcheck.h' <<'END_OF_FILE'
X/***************************************************************************
X*   GIFCHECK.H                                                             *
X*   HEADER FOR some stuff related to GIFCHECK.                             *
X*   OS:      UNIX                                                          *
X*                                                                          *
X*   Copyright (c) 1993 James W. Birdsall. All Rights Reserved.             *
X*                                                                          *
X*   $Id: gifcheck.h,v 1.1 1993/02/10 02:06:56 jwbirdsa Exp $
X*                                                                          *
X*   Contains #defines common to both GIFCHECK.C and BLOCPROC.C, etc.       *
X*                                                                          *
X***************************************************************************/
X
X#ifndef DEPEND_H
X    **** ERROR **** MUST INCLUDE DEPEND.H BEFORE GIFCHECK.H
X#endif
X
X#ifndef GIFCHECK_H
X
X#define GIFCHECK_H
X
X/*
X** system includes <>
X*/
X
X/*
X** custom includes ""
X*/
X
X/*
X** local #defines
X*/
X
X/* Returns from various functions. */
X
X#define EXIT_OK              0
X#define EXIT_NOTGIF          1
X#define EXIT_UNEOF           2
X#define EXIT_ERROR           3
X#define EXIT_STRIP           4
X#define EXIT_STRIPM          5
X
X/* Display warning levels. */
X
X#define DLEVEL_NITPICK       2
X#define DLEVEL_FASCINATING   1
X#define DLEVEL_VIOLATION     0
X#define DLEVEL_ANOMALY       0
X
X/* Errorlevel warning levels. */
X
X#define ELEVEL_NITPICK       5000   /* Some very large value. */
X#define ELEVEL_FASCINATING   2
X#define ELEVEL_VIOLATION     1
X#define ELEVEL_ANOMALY       0
X
X
X/*
X** misc: copyright strings, version macros, etc.
X*/
X
Xstatic char CONST RCSgifcheck[] = "$Id: gifcheck.h,v 1.1 1993/02/10 02:06:56 jwbirdsa Exp $";
X
X
X/*
X** typedefs
X*/
X
X/*
X** global variables
X*/
X
X/*
X** function prototypes
X*/
X
X#ifdef  __STDC__
X# define P_(s) s
X#else
X# define P_(s) ()
X#endif
X
Xchar *errxlate P_((ULONG errcode));
X
X#undef P_
X
X#endif /* GIFCHECK_H */
X
END_OF_FILE
  if test 2060 -ne `wc -c <'src/gifcheck.h'`; then
    echo shar: \"'src/gifcheck.h'\" unpacked with wrong size!
  fi
  # end of 'src/gifcheck.h'
fi
if test -f 'src/img.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'src/img.h'\"
else
  echo shar: Extracting \"'src/img.h'\" \(2782 characters\)
  sed "s/^X//" >'src/img.h' <<'END_OF_FILE'
X/***************************************************************************
X*   IMG.H                                                                  *
X*   HEADER FOR IMG                                                         *
X*   OS:      UNIX                                                          *
X*                                                                          *
X*   Copyright (c) 1993 James W. Birdsall. All Rights Reserved.             *
X*                                                                          *
X*   $Id: img.h,v 1.3 1993/02/10 01:37:41 jwbirdsa Exp $
X*                                                                          *
X*   This file specifies the external interface to the IMG module.          *
X*                                                                          *
X***************************************************************************/
X
X#ifndef DEPEND_H
X    **** ERROR ****    MUST INCLUDE DEPEND.H BEFORE IMG.H
X#endif
X
X#ifndef IMG_H
X
X#define IMG_H
X
X/*
X** system includes <>
X*/
X
X/*
X** custom includes ""
X*/
X
X#include "status.h"
X
X
X/*
X** local #defines
X*/
X
X/* Version defines. */
X
X#define IMG_NOT            FORMAT_NOT
X#define IMG_VER1           (FORMAT_IMG | MKLONG(1))
X
X/* Offsets in header. */
X
X#define IMG_HDR_VERS_OFF   0
X#define IMG_HDR_HLEN_OFF   2
X#define IMG_HDR_PLANES_OFF 4
X#define IMG_HDR_PLEN_OFF   6
X#define IMG_HDR_PWID_OFF   8
X#define IMG_HDR_PHI_OFF    10
X#define IMG_HDR_IMWID_OFF  12
X#define IMG_HDR_IMHI_OFF   14
X
X#define IMG_HDR_LEN        16
X
X/* Error/status defines. */
X
X#define IMG_NOTIMG_E       MKERR(1, IMG_MODULE, ST_ERROR)
X#define IMG_FILEERR_E      MKERR(2, IMG_MODULE, ST_ERROR)
X#define IMG_UNEOF_E        MKERR(3, IMG_MODULE, ST_ERROR)
X
X
X/*
X** misc: copyright strings, version macros, etc.
X*/
X
Xstatic char CONST RCSimg[] = "$Id: img.h,v 1.3 1993/02/10 01:37:41 jwbirdsa Exp $";
X
X
X/*
X** typedefs
X*/
X
Xtypedef struct {
X    ULONG version;                  /* the IMG format version */
X    unsigned int headerlen;         /* the length of the header in words */
X    unsigned int planes;            /* color planes, aka bits/pixel */
X    unsigned int patternlen;        /* pattern length, bytes */
X    unsigned int pixwid;            /* pixel width in microns */
X    unsigned int pixhi;             /* pixel height in microns */
X    unsigned int imwid;             /* image width, pixels */
X    unsigned int imhi;              /* image height, pixels */
X} IMG_HDR;
X
X
X/*
X** global variables
X*/
X
X/*
X** function prototypes
X*/
X
X#ifdef  __STDC__
X# define P_(s) s
X#else
X# define P_(s) ()
X#endif
X
XULONG img_verify P_((char *filename, ULONG *version, char **exts));
X
XULONG img_getheader P_((FILE *infile, IMG_HDR *results));
X
Xchar *img_errstring P_((ULONG errcode));
X
X#undef P_
X
X#endif /* IMG_H */
X
END_OF_FILE
  if test 2782 -ne `wc -c <'src/img.h'`; then
    echo shar: \"'src/img.h'\" unpacked with wrong size!
  fi
  # end of 'src/img.h'
fi
if test -f 'src/patchlevel.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'src/patchlevel.h'\"
else
  echo shar: Extracting \"'src/patchlevel.h'\" \(21 characters\)
  sed "s/^X//" >'src/patchlevel.h' <<'END_OF_FILE'
X#define PATCHLEVEL 0
END_OF_FILE
  if test 21 -ne `wc -c <'src/patchlevel.h'`; then
    echo shar: \"'src/patchlevel.h'\" unpacked with wrong size!
  fi
  # end of 'src/patchlevel.h'
fi
if test -f 'src/pbm.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'src/pbm.h'\"
else
  echo shar: Extracting \"'src/pbm.h'\" \(2172 characters\)
  sed "s/^X//" >'src/pbm.h' <<'END_OF_FILE'
X/***************************************************************************
X*   PBM.H                                                                  *
X*   HEADER FOR PBM within PNM                                              *
X*   OS:      UNIX                                                          *
X*                                                                          *
X*   Copyright (c) 1993 James W. Birdsall. All Rights Reserved.             *
X*                                                                          *
X*   $Id: pbm.h,v 1.0 1993/02/10 01:44:01 jwbirdsa Exp $
X*                                                                          *
X*   This file specifies the external interface to the PBM section of the   *
X*   PNM module.                                                            *
X*                                                                          *
X***************************************************************************/
X
X#ifndef DEPEND_H
X    **** ERROR ****    MUST INCLUDE DEPEND.H BEFORE PBM.H
X#endif
X
X#ifndef PBM_H
X
X#define PBM_H
X
X/*
X** system includes <>
X*/
X
X/*
X** custom includes ""
X*/
X
X#include "status.h"
X
X
X/*
X** local #defines
X*/
X
X/* Version defines. */
X
X#define PBM_NOT            FORMAT_NOT
X#define PBM_NORM           (FORMAT_PBM | MKLONG(1))
X#define PBM_RAW            (FORMAT_PBM | MKLONG(2))
X
X/* PBM magic numbers. */
X
X#define PBM_MAGIC_NORM     '1'
X#define PBM_MAGIC_RAW      '4'
X
X/* Error/status defines. */
X
X#define PBM_NOTPBM_E       MKERR(1, PBM_MODULE, ST_ERROR)
X#define PBM_FILEERR_E      MKERR(2, PBM_MODULE, ST_ERROR)
X#define PBM_UNEOF_E        MKERR(3, PBM_MODULE, ST_ERROR)
X
X
X/*
X** misc: copyright strings, version macros, etc.
X*/
X
Xstatic char CONST RCSpbm[] = "$Id: pbm.h,v 1.0 1993/02/10 01:44:01 jwbirdsa Exp $";
X
X
X/*
X** typedefs
X*/
X
Xtypedef PNM_HDR PBM_HDR;
X
X
X/*
X** global variables
X*/
X
X/*
X** function prototypes
X*/
X
X#ifdef  __STDC__
X# define P_(s) s
X#else
X# define P_(s) ()
X#endif
X
XULONG pbm_verify P_((char *filename, ULONG *version, char **exts));
X
XULONG pbm_getheader P_((FILE *infile, PBM_HDR *results));
X
Xchar *pbm_errstring P_((ULONG errcode));
X
X#undef P_
X
X#endif /* PBM_H */
X
END_OF_FILE
  if test 2172 -ne `wc -c <'src/pbm.h'`; then
    echo shar: \"'src/pbm.h'\" unpacked with wrong size!
  fi
  # end of 'src/pbm.h'
fi
if test -f 'src/pgm.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'src/pgm.h'\"
else
  echo shar: Extracting \"'src/pgm.h'\" \(2172 characters\)
  sed "s/^X//" >'src/pgm.h' <<'END_OF_FILE'
X/***************************************************************************
X*   PGM.H                                                                  *
X*   HEADER FOR PGM within PNM                                              *
X*   OS:      UNIX                                                          *
X*                                                                          *
X*   Copyright (c) 1993 James W. Birdsall. All Rights Reserved.             *
X*                                                                          *
X*   $Id: pgm.h,v 1.0 1993/02/10 01:44:01 jwbirdsa Exp $
X*                                                                          *
X*   This file specifies the external interface to the PGM section of the   *
X*   PNM module.                                                            *
X*                                                                          *
X***************************************************************************/
X
X#ifndef DEPEND_H
X    **** ERROR ****    MUST INCLUDE DEPEND.H BEFORE PGM.H
X#endif
X
X#ifndef PGM_H
X
X#define PGM_H
X
X/*
X** system includes <>
X*/
X
X/*
X** custom includes ""
X*/
X
X#include "status.h"
X
X
X/*
X** local #defines
X*/
X
X/* Version defines. */
X
X#define PGM_NOT            FORMAT_NOT
X#define PGM_NORM           (FORMAT_PGM | MKLONG(1))
X#define PGM_RAW            (FORMAT_PGM | MKLONG(2))
X
X/* PGM magic numbers. */
X
X#define PGM_MAGIC_NORM     '2'
X#define PGM_MAGIC_RAW      '5'
X
X/* Error/status defines. */
X
X#define PGM_NOTPGM_E       MKERR(1, PGM_MODULE, ST_ERROR)
X#define PGM_FILEERR_E      MKERR(2, PGM_MODULE, ST_ERROR)
X#define PGM_UNEOF_E        MKERR(3, PGM_MODULE, ST_ERROR)
X
X
X/*
X** misc: copyright strings, version macros, etc.
X*/
X
Xstatic char CONST RCSpgm[] = "$Id: pgm.h,v 1.0 1993/02/10 01:44:01 jwbirdsa Exp $";
X
X
X/*
X** typedefs
X*/
X
Xtypedef PNM_HDR PGM_HDR;
X
X
X/*
X** global variables
X*/
X
X/*
X** function prototypes
X*/
X
X#ifdef  __STDC__
X# define P_(s) s
X#else
X# define P_(s) ()
X#endif
X
XULONG pgm_verify P_((char *filename, ULONG *version, char **exts));
X
XULONG pgm_getheader P_((FILE *infile, PGM_HDR *results));
X
Xchar *pgm_errstring P_((ULONG errcode));
X
X#undef P_
X
X#endif /* PGM_H */
X
END_OF_FILE
  if test 2172 -ne `wc -c <'src/pgm.h'`; then
    echo shar: \"'src/pgm.h'\" unpacked with wrong size!
  fi
  # end of 'src/pgm.h'
fi
if test -f 'src/pnm.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'src/pnm.h'\"
else
  echo shar: Extracting \"'src/pnm.h'\" \(1756 characters\)
  sed "s/^X//" >'src/pnm.h' <<'END_OF_FILE'
X/***************************************************************************
X*   PNM.H                                                                  *
X*   HEADER FOR PNM                                                         *
X*   OS:      UNIX                                                          *
X*                                                                          *
X*   Copyright (c) 1993 James W. Birdsall. All Rights Reserved.             *
X*                                                                          *
X*   $Id: pnm.h,v 1.0 1993/02/10 01:47:22 jwbirdsa Exp $
X*                                                                          *
X*   This file specifies the external interface to the PNM module.          *
X*                                                                          *
X***************************************************************************/
X
X#ifndef DEPEND_H
X    **** ERROR ****    MUST INCLUDE DEPEND.H BEFORE PNM.H
X#endif
X
X#ifndef PNM_H
X
X#define PNM_H
X
X/*
X** system includes <>
X*/
X
X/*
X** custom includes ""
X*/
X
X#include "status.h"
X
X
X/*
X** local #defines
X*/
X
X/* PNM magic numbers. */
X
X#define PNM_MAGIC          'P'
X
X
X/*
X** misc: copyright strings, version macros, etc.
X*/
X
Xstatic char CONST RCSpnm[] = "$Id: pnm.h,v 1.0 1993/02/10 01:47:22 jwbirdsa Exp $";
X
X
X/*
X** typedefs
X*/
X
Xtypedef struct {
X    ULONG version;                  /* the PNM format version */
X    ULONG imwid;                    /* image width, pixels */
X    ULONG imhi;                     /* image height, pixels */
X    int maxpix;                     /* maximum pixel value */
X} PNM_HDR;
X
X
X/*
X** global variables
X*/
X
X/*
X** function prototypes
X*/
X
X
X
X#include "pbm.h"
X#include "pgm.h"
X#include "ppm.h"
X
X
X#endif /* PNM_H */
X
END_OF_FILE
  if test 1756 -ne `wc -c <'src/pnm.h'`; then
    echo shar: \"'src/pnm.h'\" unpacked with wrong size!
  fi
  # end of 'src/pnm.h'
fi
if test -f 'src/ppm.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'src/ppm.h'\"
else
  echo shar: Extracting \"'src/ppm.h'\" \(2172 characters\)
  sed "s/^X//" >'src/ppm.h' <<'END_OF_FILE'
X/***************************************************************************
X*   PPM.H                                                                  *
X*   HEADER FOR PPM within PNM                                              *
X*   OS:      UNIX                                                          *
X*                                                                          *
X*   Copyright (c) 1993 James W. Birdsall. All Rights Reserved.             *
X*                                                                          *
X*   $Id: ppm.h,v 1.0 1993/02/10 01:44:01 jwbirdsa Exp $
X*                                                                          *
X*   This file specifies the external interface to the PPM section of the   *
X*   PNM module.                                                            *
X*                                                                          *
X***************************************************************************/
X
X#ifndef DEPEND_H
X    **** ERROR ****    MUST INCLUDE DEPEND.H BEFORE PPM.H
X#endif
X
X#ifndef PPM_H
X
X#define PPM_H
X
X/*
X** system includes <>
X*/
X
X/*
X** custom includes ""
X*/
X
X#include "status.h"
X
X
X/*
X** local #defines
X*/
X
X/* Version defines. */
X
X#define PPM_NOT            FORMAT_NOT
X#define PPM_NORM           (FORMAT_PPM | MKLONG(1))
X#define PPM_RAW            (FORMAT_PPM | MKLONG(2))
X
X/* PPM magic numbers. */
X
X#define PPM_MAGIC_NORM     '3'
X#define PPM_MAGIC_RAW      '6'
X
X/* Error/status defines. */
X
X#define PPM_NOTPPM_E       MKERR(1, PPM_MODULE, ST_ERROR)
X#define PPM_FILEERR_E      MKERR(2, PPM_MODULE, ST_ERROR)
X#define PPM_UNEOF_E        MKERR(3, PPM_MODULE, ST_ERROR)
X
X
X/*
X** misc: copyright strings, version macros, etc.
X*/
X
Xstatic char CONST RCSppm[] = "$Id: ppm.h,v 1.0 1993/02/10 01:44:01 jwbirdsa Exp $";
X
X
X/*
X** typedefs
X*/
X
Xtypedef PNM_HDR PPM_HDR;
X
X
X/*
X** global variables
X*/
X
X/*
X** function prototypes
X*/
X
X#ifdef  __STDC__
X# define P_(s) s
X#else
X# define P_(s) ()
X#endif
X
XULONG ppm_verify P_((char *filename, ULONG *version, char **exts));
X
XULONG ppm_getheader P_((FILE *infile, PPM_HDR *results));
X
Xchar *ppm_errstring P_((ULONG errcode));
X
X#undef P_
X
X#endif /* PPM_H */
X
END_OF_FILE
  if test 2172 -ne `wc -c <'src/ppm.h'`; then
    echo shar: \"'src/ppm.h'\" unpacked with wrong size!
  fi
  # end of 'src/ppm.h'
fi
if test -f 'src/sr.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'src/sr.h'\"
else
  echo shar: Extracting \"'src/sr.h'\" \(2786 characters\)
  sed "s/^X//" >'src/sr.h' <<'END_OF_FILE'
X/***************************************************************************
X*   SR.H                                                                   *
X*   HEADER FOR SR (Sun Raster processor)                                   *
X*   OS:      UNIX                                                          *
X*                                                                          *
X*   Copyright (c) 1993 James W. Birdsall. All Rights Reserved.             *
X*                                                                          *
X*   $Id: sr.h,v 1.0 1993/02/10 01:41:04 jwbirdsa Exp $
X*                                                                          *
X*   This file specifies the external interface to the SR module.           *
X*                                                                          *
X***************************************************************************/
X
X#ifndef DEPEND_H
X    **** ERROR ****    MUST INCLUDE DEPEND.H BEFORE SR.H
X#endif
X
X#ifndef SR_H
X
X#define SR_H
X
X/*
X** system includes <>
X*/
X
X/*
X** custom includes ""
X*/
X
X#include "status.h"
X
X
X/*
X** local #defines
X*/
X
X/* Version defines. */
X
X#define SR_NOT               FORMAT_NOT
X#define SR_1                 (FORMAT_SR | MKLONG(1))
X
X/* Offsets in header. */
X
X#define SR_HDR_MAGIC_OFF     0
X#define SR_HDR_IMWID_OFF     4
X#define SR_HDR_IMHI_OFF      8
X#define SR_HDR_BITS_OFF      12
X#define SR_HDR_RLEN_OFF      16
X#define SR_HDR_TYPE_OFF      20
X#define SR_HDR_MTYPE_OFF     24
X#define SR_HDR_MLEN_OFF      28
X
X#define SR_HDR_LEN           32
X
X/* Sunraster magic number. */
X
X#define SR_MAGIC             MKLONG(0x59A66A95)
X
X/* Error/status defines. */
X
X#define SR_NOTSR_E           MKERR(1, SR_MODULE, ST_ERROR)
X#define SR_FILEERR_E         MKERR(2, SR_MODULE, ST_ERROR)
X#define SR_UNEOF_E           MKERR(3, SR_MODULE, ST_ERROR)
X
X
X/*
X** misc: copyright strings, version macros, etc.
X*/
X
Xstatic char CONST RCSsr[] = "$Id: sr.h,v 1.0 1993/02/10 01:41:04 jwbirdsa Exp $";
X
X
X/*
X** typedefs
X*/
X
Xtypedef struct {
X    ULONG imwid;                    /* image width, pixels */
X    ULONG imhi;                     /* image height, pixels */
X    int pixelbits;                  /* bits per pixel */
X    ULONG rasterlen;                /* length of the raster data, bytes */
X    unsigned int rastype;           /* raster type */
X    int maptype;                    /* type of colormap */
X    ULONG maplen;                   /* length of the colormap, bytes */
X} SR_HDR;
X
X
X/*
X** global variables
X*/
X
X/*
X** function prototypes
X*/
X
X#ifdef  __STDC__
X# define P_(s) s
X#else
X# define P_(s) ()
X#endif
X
XULONG sr_verify P_((char *filename, ULONG *version, char **exts));
X
XULONG sr_getheader P_((FILE *infile, SR_HDR *results));
X
Xchar *sr_errstring P_((ULONG errcode));
X
X#undef P_
X
X#endif /* SR_H */
X
END_OF_FILE
  if test 2786 -ne `wc -c <'src/sr.h'`; then
    echo shar: \"'src/sr.h'\" unpacked with wrong size!
  fi
  # end of 'src/sr.h'
fi
if test -f 'src/stdinarg.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'src/stdinarg.h'\"
else
  echo shar: Extracting \"'src/stdinarg.h'\" \(1458 characters\)
  sed "s/^X//" >'src/stdinarg.h' <<'END_OF_FILE'
X/***************************************************************************
X*   STDINARG.H                                                             *
X*   HEADER FOR loading arguments from stdin                                *
X*   OS:      UNIX                                                          *
X*                                                                          *
X*   Copyright (c) 1993 James W. Birdsall. All Rights Reserved.             *
X*                                                                          *
X*   $Id: stdinarg.h,v 1.0 1993/02/10 01:55:19 jwbirdsa Exp $                                                                  *
X*                                                                          *
X*   Header for stdinarg.c.                                                 *
X*                                                                          *
X***************************************************************************/
X
X#ifndef STDINARG_H
X
X#define STDINARG_H
X
X/*
X** system includes <>
X*/
X
X/*
X** custom includes ""
X*/
X
X/*
X** #defines
X*/
X
X/*
X** misc: copyright strings, version macros, etc.
X*/
X
Xstatic char CONST RCSstdinarg[] = "$Id: stdinarg.h,v 1.0 1993/02/10 01:55:19 jwbirdsa Exp $";
X
X/*
X** typedefs
X*/
X
X/*
X** global variables
X*/
X
X/*
X** function prototypes
X*/
X
X#ifdef  __STDC__
X# define P_(s) s
X#else
X# define P_(s) ()
X#endif
X
Xchar **stdinload P_((int *argcc));
X
X#undef P_
X
X#endif /* STDINARG_H */
X
END_OF_FILE
  if test 1458 -ne `wc -c <'src/stdinarg.h'`; then
    echo shar: \"'src/stdinarg.h'\" unpacked with wrong size!
  fi
  # end of 'src/stdinarg.h'
fi
if test -f 'src/token.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'src/token.h'\"
else
  echo shar: Extracting \"'src/token.h'\" \(1473 characters\)
  sed "s/^X//" >'src/token.h' <<'END_OF_FILE'
X/***************************************************************************
X*   TOKEN.H                                                                *
X*   HEADER FOR tokenizing functions within FM (Formats) module.            *
X*   OS:      UNIX                                                          *
X*                                                                          *
X*   Copyright (c) 1993 James W. Birdsall. All Rights Reserved.             *
X*                                                                          *
X*   $Id: token.h,v 1.0 1993/02/10 01:50:36 jwbirdsa Exp $                                                                  *
X*                                                                          *
X*   Header for fm_ tokenizing functions used by various format processors. *
X*                                                                          *
X***************************************************************************/
X
X#ifndef TOKEN_H
X
X#define TOKEN_H
X
X/*
X** system includes <>
X*/
X
X/*
X** custom includes ""
X*/
X
X/*
X** #defines
X*/
X
X/*
X** misc: copyright strings, version macros, etc.
X*/
X
Xstatic char CONST RCStoken[] = "$Id: token.h,v 1.0 1993/02/10 01:50:36 jwbirdsa Exp $";
X
X
X/*
X** typedefs
X*/
X
X/*
X** global variables
X*/
X
X/*
X** function prototypes
X*/
X
X#ifdef  __STDC__
X# define P_(s) s
X#else
X# define P_(s) ()
X#endif
X
Xchar *fm_token P_((FILE *infile));
XULONG fm_eol P_((FILE *infile));
X
X#undef P_
X
X#endif /* TOKEN_H */
END_OF_FILE
  if test 1473 -ne `wc -c <'src/token.h'`; then
    echo shar: \"'src/token.h'\" unpacked with wrong size!
  fi
  # end of 'src/token.h'
fi
if test -f 'src/xbm.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'src/xbm.h'\"
else
  echo shar: Extracting \"'src/xbm.h'\" \(2079 characters\)
  sed "s/^X//" >'src/xbm.h' <<'END_OF_FILE'
X/***************************************************************************
X*   XBM.H                                                                  *
X*   HEADER FOR XBM                                                         *
X*   OS:      UNIX                                                          *
X*                                                                          *
X*   Copyright (c) 1993 James W. Birdsall. All Rights Reserved.             *
X*                                                                          *
X*   $Id: xbm.h,v 1.0 1993/02/10 01:45:28 jwbirdsa Exp $
X*                                                                          *
X*   This file specifies the external interface to the XBM module.          *
X*                                                                          *
X***************************************************************************/
X
X#ifndef DEPEND_H
X    **** ERROR ****    MUST INCLUDE DEPEND.H BEFORE XBM.H
X#endif
X
X#ifndef XBM_H
X
X#define XBM_H
X
X/*
X** system includes <>
X*/
X
X/*
X** custom includes ""
X*/
X
X#include "status.h"
X
X
X/*
X** local #defines
X*/
X
X/* Version defines. */
X
X#define XBM_NOT            FORMAT_NOT
X#define XBM_1              (FORMAT_XBM | MKLONG(1))
X
X/* Error/status defines. */
X
X#define XBM_NOTXBM_E       MKERR(1, XBM_MODULE, ST_ERROR)
X#define XBM_FILEERR_E      MKERR(2, XBM_MODULE, ST_ERROR)
X#define XBM_UNEOF_E        MKERR(3, XBM_MODULE, ST_ERROR)
X
X
X/*
X** misc: copyright strings, version macros, etc.
X*/
X
Xstatic char CONST RCSxbm[] = "$Id:";
X
X
X/*
X** typedefs
X*/
X
Xtypedef struct {
X    ULONG imwid;             /* image width, pixels */
X    ULONG imhi;              /* image height, pixels */
X    char *imname;            /* embedded name of image */
X} XBM_HDR;
X
X
X/*
X** global variables
X*/
X
X/*
X** function prototypes
X*/
X
X#ifdef  __STDC__
X# define P_(s) s
X#else
X# define P_(s) ()
X#endif
X
XULONG xbm_verify P_((char *filename, ULONG *version, char **exts));
X
XULONG xbm_getheader P_((FILE *infile, XBM_HDR *results));
X
Xchar *xbm_errstring P_((ULONG errcode));
X
X#undef P_
X
X#endif /* XBM_H */
X
END_OF_FILE
  if test 2079 -ne `wc -c <'src/xbm.h'`; then
    echo shar: \"'src/xbm.h'\" unpacked with wrong size!
  fi
  # end of 'src/xbm.h'
fi
if test -f 'templates/3b1.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'templates/3b1.h'\"
else
  echo shar: Extracting \"'templates/3b1.h'\" \(594 characters\)
  sed "s/^X//" >'templates/3b1.h' <<'END_OF_FILE'
X/*
X** Configuration for AT&T 3B1 (7300, UnixPC) running OS 3.5 with stock
X** compiler.
X*/
X
X#define CONFIG_H
X
X/* no stdlib.h */
X#define NO_STDLIB
X
X/* cc doesn't support "const" type */
X#define NO_CONST
X
X/* ustat() function present */
X#define USTAT
X#define SYS_BLOCKSIZE       512
X
X/* no strdup() function */
X#define NO_STRDUP
X
X/* no directory-access functions */
X#define DIR_NODIR
X
X/* tempnam() function present */
X#define TEMPNAM
X
X/* no rename() function */
X#define NO_RENAME
X
X/* have TERMINFO and TERMCAP */
X#define HAS_TERMINFO
X#define TERMINFO_PATH       "/usr/bin/tput"
X#define HAS_TERMCAP
END_OF_FILE
  if test 594 -ne `wc -c <'templates/3b1.h'`; then
    echo shar: \"'templates/3b1.h'\" unpacked with wrong size!
  fi
  # end of 'templates/3b1.h'
fi
if test -f 'templates/3b1.mk' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'templates/3b1.mk'\"
else
  echo shar: Extracting \"'templates/3b1.mk'\" \(206 characters\)
  sed "s/^X//" >'templates/3b1.mk' <<'END_OF_FILE'
X#
X# Makefile template for the AT&T 3B1 (7300, UnixPC) running OS 3.5 with
X# stock compiler.
X#
X
XCC	= cc
XCFLAGS	= -O -c
XCINC	=
X
XLINK	= cc
XLFLAGS	= 
XLLIBS	= -ltermcap
X
XO	= o
XEXE	=
X
XLN	= ln
XCP	= cp
XRM	= rm -f
X
END_OF_FILE
  if test 206 -ne `wc -c <'templates/3b1.mk'`; then
    echo shar: \"'templates/3b1.mk'\" unpacked with wrong size!
  fi
  # end of 'templates/3b1.mk'
fi
if test -f 'templates/README' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'templates/README'\"
else
  echo shar: Extracting \"'templates/README'\" \(2194 characters\)
  sed "s/^X//" >'templates/README' <<'END_OF_FILE'
X   1) Look through the list at the bottom of this file. If you find your
Xsystem, or one sufficiently like it, copy the files listed into the src
Xdirectory like so:
X
X	cp whatever.mk ../src/template.mk
X	cp whatever.h  ../src/config.h
X
X   2) If you don't find any preset configuration files appropriate for your
Xsystem, copy the generic template files (template.mk and template.h) to the
Xsrc directory in the same manner as shown in (1), then edit them for your
Xsystem. Complete instructions for doing so are contained in the files
Xthemselves.
X
X
XKNOWN SYSTEMS
X-------------
X
Xfiles          system(s)                                  tested on
X-----          ---------                                  ---------
Xsunos41cc.*    Sun 3, Sun 4, or Sun SPARCstation running  Sun 3/60, SunOS 4.1.1,
X                SunOS 4.1(.x); may be suitable for SunOS   stock compiler
X                4.0(.x), probably not for SunOS 3.5
X
Xsunos41gcc.*   Sun 3, Sun 4, or Sun SPARCstation running  Sun 3/60, SunOS 4.1.1,
X                SunOS 4.1(.x), compiling with gcc; may     gcc 2.1, 2.2.2, and
X                be suitable for SunOS 4.0(.x), probably    2.3.3
X                not for SunOS 3.5
X
X3b1.*          AT&T 3B1 (aka 7300, UnixPC), running       AT&T 3B1, OS 3.5,
X                OS 3.5 or 3.51                             stock compiler
X
Xpcix.*         IBM PC/XT running PC/IX 1.0 or 1.1         IBM PC/XT, PC/IX 1.1,
X                                                           stock compiler
X
XWILL SOMEBODY PLEASE ADJUST THE FOLLOWING TO USE TERMINFO AND/OR TERMCAP?
X
Xultrix-gcc.*   Anything running Ultrix, compiling with    DECstation 5000,
X                gcc. Provided by Peter Couvares            Ultrix 4.2a, gcc 2.1
X                (pfcouvar@unix.amherst.edu).
X
Xultrix-cc.*    Anything running Ultrix.                   DECstation 5000,
X                Provided by Peter Couvares                 Ultrix 4.2a,
X                (pfcouvar@unix.amherst.edu).               stock compiler
X
Xlinux-gcc.*    Anything running Linux.                    386/486 box,
X                Provided by Peter Couvares                 Linux 0.99p5,
X                (pfcouvar@unix.amherst.edu).               gcc 2.3.3
X
END_OF_FILE
  if test 2194 -ne `wc -c <'templates/README'`; then
    echo shar: \"'templates/README'\" unpacked with wrong size!
  fi
  # end of 'templates/README'
fi
if test -f 'templates/linux-gcc.mk' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'templates/linux-gcc.mk'\"
else
  echo shar: Extracting \"'templates/linux-gcc.mk'\" \(303 characters\)
  sed "s/^X//" >'templates/linux-gcc.mk' <<'END_OF_FILE'
X#
X# Makefile template for Linux 0.99p5 (and possibly others versions) using GCC.
X# Provided by Peter Couvares (pfcouvar@unix.amherst.edu).
X#
X
XCC	= gcc
XCFLAGS	= -O2 -c
XCINC	=
X
XLINK	= gcc
XLFLAGS	= -O2
XLOBJS	=
XLLIBS	=
X
XO	= o
XEXE	=
X
XLN	= ln
XCP	= cp
XRM	= rm -f
X
XPOST_CHILS	=
XPOST_GIFSTRIP	=
XPOST_GIFCHECK	=
X
END_OF_FILE
  if test 303 -ne `wc -c <'templates/linux-gcc.mk'`; then
    echo shar: \"'templates/linux-gcc.mk'\" unpacked with wrong size!
  fi
  # end of 'templates/linux-gcc.mk'
fi
if test -f 'templates/sunos41cc.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'templates/sunos41cc.h'\"
else
  echo shar: Extracting \"'templates/sunos41cc.h'\" \(535 characters\)
  sed "s/^X//" >'templates/sunos41cc.h' <<'END_OF_FILE'
X/*
X** Configuration for SunOS 4.1 environment with stock compiler.
X*/
X
X#define CONFIG_H
X
X/* cc doesn't support "const" type */
X#define NO_CONST
X
X/* statfs() function present */
X#define STATFS
X
X/* readdir() et al. functions present */
X#define DIR_READDIR
X
X/* tempnam() function present */
X#define TEMPNAM
X
X/* only root can give away files with chown() */
X#define ROOT_CHOWN
X
X/* have utime.h */
X#define UTIME_HDR
X
X/* have TERMINFO and TERMCAP */
X#define HAS_TERMINFO
X#define TERMINFO_PATH            "/usr/5bin/tput"
X#define HAS_TERMCAP
END_OF_FILE
  if test 535 -ne `wc -c <'templates/sunos41cc.h'`; then
    echo shar: \"'templates/sunos41cc.h'\" unpacked with wrong size!
  fi
  # end of 'templates/sunos41cc.h'
fi
if test -f 'templates/sunos41cc.mk' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'templates/sunos41cc.mk'\"
else
  echo shar: Extracting \"'templates/sunos41cc.mk'\" \(176 characters\)
  sed "s/^X//" >'templates/sunos41cc.mk' <<'END_OF_FILE'
X#
X# Makefile template for SunOS 4.1 using the stock compiler.
X#
X
XCC	= cc
XCFLAGS	= -O -c
XCINC	=
X
XLINK	= cc
XLFLAGS	= 
XLLIBS	= -ltermcap
X
XO	= o
XEXE	=
X
XLN	= ln
XCP	= cp
XRM	= rm -f
X
END_OF_FILE
  if test 176 -ne `wc -c <'templates/sunos41cc.mk'`; then
    echo shar: \"'templates/sunos41cc.mk'\" unpacked with wrong size!
  fi
  # end of 'templates/sunos41cc.mk'
fi
if test -f 'templates/sunos41gcc.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'templates/sunos41gcc.h'\"
else
  echo shar: Extracting \"'templates/sunos41gcc.h'\" \(472 characters\)
  sed "s/^X//" >'templates/sunos41gcc.h' <<'END_OF_FILE'
X/*
X** Configuration for SunOS 4.1 environment with GCC 2.x.
X*/
X
X#define CONFIG_H
X
X/* statfs() function present */
X#define STATFS
X
X/* readdir() et al. functions present */
X#define DIR_READDIR
X
X/* tempnam() function present */
X#define TEMPNAM
X
X/* only root can give away files with chown() */
X#define ROOT_CHOWN
X
X/* have utime.h */
X#define UTIME_HDR
X
X/* have TERMINFO and TERMCAP */
X#define HAS_TERMINFO
X#define TERMINFO_PATH            "/usr/5bin/tput"
X#define HAS_TERMCAP
END_OF_FILE
  if test 472 -ne `wc -c <'templates/sunos41gcc.h'`; then
    echo shar: \"'templates/sunos41gcc.h'\" unpacked with wrong size!
  fi
  # end of 'templates/sunos41gcc.h'
fi
if test -f 'templates/sunos41gcc.mk' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'templates/sunos41gcc.mk'\"
else
  echo shar: Extracting \"'templates/sunos41gcc.mk'\" \(164 characters\)
  sed "s/^X//" >'templates/sunos41gcc.mk' <<'END_OF_FILE'
X#
X# Makefile template for SunOS 4.1 using GCC.
X#
X
XCC	= gcc
XCFLAGS	= -O2 -c
XCINC	=
X
XLINK	= gcc
XLFLAGS	= 
XLLIBS	= -ltermcap
X
XO	= o
XEXE	=
X
XLN	= ln
XCP	= cp
XRM	= rm -f
X
END_OF_FILE
  if test 164 -ne `wc -c <'templates/sunos41gcc.mk'`; then
    echo shar: \"'templates/sunos41gcc.mk'\" unpacked with wrong size!
  fi
  # end of 'templates/sunos41gcc.mk'
fi
if test -f 'templates/template.mk' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'templates/template.mk'\"
else
  echo shar: Extracting \"'templates/template.mk'\" \(1953 characters\)
  sed "s/^X//" >'templates/template.mk' <<'END_OF_FILE'
X#
X# This is the generic makefile template. It should work on most UNIX systems.
X#
X
X# The name of the compiler. On most systems, the stock compiler is cc.
XCC	= cc
X# The GNU C compiler is fairly widespread; if it is installed on your
X# system and you wish to use it, use the name gcc instead.
X#CC	= gcc
X
X# Flags for the compiler. You MUST include a flag which causes the compiler
X# to stop after creating the object file; this flag is "-c" on most
X# compilers. Other flags are optional. The optimize flag ("-O" on most
X# compilers) is recommended.
XCFLAGS	= -O -c
X
X# Include flags for the compiler. If your compiler requires special include
X# files which are not found by default, put whatever options are necessary
X# here.
XCINC	=
X
X
X# The name of the linker. On most systems, the compiler can also
X# be used as a linker.
XLINK	= $(CC)
X
X# Flags for the linker.
XLFLAGS	= 
X
X# Objects. If your compiler requires special objects (such as startup
X# objects) which are not found by default, put whatever filenames or
X# options are necessary here.
XLOBJS	=
X
X# Libraries. If your compiler requires special libraries which are not
X# found by default, put whatever filenames or options are necessary here.
X# "-ltermcap" is usually needed if you have defined HAS_TERMCAP in the
X# configuration header.
XLLIBS	=
X#LLIBS	= -ltermcap
X
X
X# The standard extension for object files. On most systems, this is "o".
XO	= o
X
X# The standard extension for executables, with the leading period. On
X# most systems, executables have no extension by default.
XEXE	=
X#EXE	= .exe
X
X
X# The command to link one file to another name. If your system does not
X# support links, supply the copy command instead.
XLN	= ln
X
X# The command to copy a file.
XCP	= cp
X
X# The command to remove a file, suppressing an error status if the file
X# does not exist, and forcing a remove of read-only files.
XRM	= rm -f
X
X
X# Commands to be run after each program is linked.
XPOST_CHILS	=
XPOST_GIFSTRIP	=
XPOST_GIFCHECK	=
X
END_OF_FILE
  if test 1953 -ne `wc -c <'templates/template.mk'`; then
    echo shar: \"'templates/template.mk'\" unpacked with wrong size!
  fi
  # end of 'templates/template.mk'
fi
if test -f 'templates/ultrix-cc.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'templates/ultrix-cc.h'\"
else
  echo shar: Extracting \"'templates/ultrix-cc.h'\" \(651 characters\)
  sed "s/^X//" >'templates/ultrix-cc.h' <<'END_OF_FILE'
X/*
X** Configuration for Ultrix 4.2a (and possibly other versions) with the
X** stock compiler. Provided by Peter Couvares (pfcouvar@unix.amherst.edu).
X*/
X
X#define CONFIG_H
X
X/* statfs() function present, returns in struct fsdata */
X#define STATFS_FSDATA
X
X/* no strdup() function */
X#define NO_STRDUP
X
X/* readdir() et al. functions present */
X#define DIR_READDIR
X
X/* tempnam() function present */
X#define TEMPNAM
X
X/* have utime.h */
X#define UTIME_HDR
X
X/* strings.h instead of string.h */
X#define STRING_PLURAL
X
X/* Only superuser can give away a file with chown() */
X#define ROOT_CHOWN
X
X/* Doesn't recognize the type modifier "const" */
X#define NO_CONST
X
END_OF_FILE
  if test 651 -ne `wc -c <'templates/ultrix-cc.h'`; then
    echo shar: \"'templates/ultrix-cc.h'\" unpacked with wrong size!
  fi
  # end of 'templates/ultrix-cc.h'
fi
if test -f 'templates/ultrix-cc.mk' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'templates/ultrix-cc.mk'\"
else
  echo shar: Extracting \"'templates/ultrix-cc.mk'\" \(311 characters\)
  sed "s/^X//" >'templates/ultrix-cc.mk' <<'END_OF_FILE'
X#
X# Makefile template for Ultrix 4.2a (and possibly others versions) using the
X# stock compiler. Provided by Peter Couvares (pfcouvar@unix.amherst.edu).
X#
X
XCC	= cc
XCFLAGS	= -O2 -c
XCINC	=
X
XLINK	= cc
XLFLAGS	=
XLOBJS	=
XLLIBS	=
X
XO	= o
XEXE	=
X
XLN	= ln
XCP	= cp
XRM	= rm -f
X
XPOST_CHILS	=
XPOST_GIFSTRIP	=
XPOST_GIFCHECK	=
X
END_OF_FILE
  if test 311 -ne `wc -c <'templates/ultrix-cc.mk'`; then
    echo shar: \"'templates/ultrix-cc.mk'\" unpacked with wrong size!
  fi
  # end of 'templates/ultrix-cc.mk'
fi
if test -f 'templates/ultrix-gcc.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'templates/ultrix-gcc.h'\"
else
  echo shar: Extracting \"'templates/ultrix-gcc.h'\" \(568 characters\)
  sed "s/^X//" >'templates/ultrix-gcc.h' <<'END_OF_FILE'
X/*
X** Configuration for Ultrix 4.2a (and possibly other versions) with GCC.
X** Provided by Peter Couvares (pfcouvar@unix.amherst.edu).
X*/
X
X#define CONFIG_H
X
X/* statfs() function present, returns in struct fsdata */
X#define STATFS_FSDATA
X
X/* no strdup() function */
X#define NO_STRDUP
X
X/* readdir() et al. functions present */
X#define DIR_READDIR
X
X/* tempnam() function present */
X#define TEMPNAM
X
X/* have utime.h */
X#define UTIME_HDR
X
X/* strings.h instead of string.h */
X#define STRING_PLURAL
X
X/* Only superuser can give away a file with chown() */
X#define ROOT_CHOWN
X
END_OF_FILE
  if test 568 -ne `wc -c <'templates/ultrix-gcc.h'`; then
    echo shar: \"'templates/ultrix-gcc.h'\" unpacked with wrong size!
  fi
  # end of 'templates/ultrix-gcc.h'
fi
if test -f 'templates/ultrix-gcc.mk' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'templates/ultrix-gcc.mk'\"
else
  echo shar: Extracting \"'templates/ultrix-gcc.mk'\" \(301 characters\)
  sed "s/^X//" >'templates/ultrix-gcc.mk' <<'END_OF_FILE'
X#
X# Makefile template for Ultrix 4.2a (and possibly others versions) using GCC.
X# Provided by Peter Couvares (pfcouvar@unix.amherst.edu).
X#
X
XCC	= gcc
XCFLAGS	= -O2 -s -c
XCINC	=
X
XLINK	= gcc
XLFLAGS	=
XLOBJS	=
XLLIBS	=
X
XO	= o
XEXE	=
X
XLN	= ln
XCP	= cp
XRM	= rm -f
X
XPOST_CHILS	=
XPOST_GIFSTRIP	=
XPOST_GIFCHECK	=
X
END_OF_FILE
  if test 301 -ne `wc -c <'templates/ultrix-gcc.mk'`; then
    echo shar: \"'templates/ultrix-gcc.mk'\" unpacked with wrong size!
  fi
  # end of 'templates/ultrix-gcc.mk'
fi
echo shar: End of archive 18 \(of 18\).
cp /dev/null ark18isdone
MISSING=""
for I in 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 ; do
    if test ! -f ark${I}isdone ; then
	MISSING="${MISSING} ${I}"
    fi
done
if test "${MISSING}" = "" ; then
    echo You have unpacked all 18 archives.
    rm -f ark[1-9]isdone ark[1-9][0-9]isdone
else
    echo You still must unpack the following archives:
    echo "        " ${MISSING}
fi
exit 0
exit 0 # Just in case...
