Newsgroups: comp.sources.misc
From: jkl@osc.edu (Jan Labanowski)
Subject: v36i029:  translit - transliterate foreign alphabets, Part07/10
Message-ID: <1993Mar19.224548.12331@sparky.imd.sterling.com>
X-Md4-Signature: 18d5de45fe4db620de176fcc967246b3
Date: Fri, 19 Mar 1993 22:45:48 GMT
Approved: kent@sparky.imd.sterling.com

Submitted-by: jkl@osc.edu (Jan Labanowski)
Posting-number: Volume 36, Issue 29
Archive-name: translit/part07
Environment: UNIX, MS-DOS, VMS

#! /bin/sh
# This is a shell archive.  Remove anything before this line, then feed it
# into a shell via "sh file" or similar.  To overwrite existing files,
# type "sh file -c".
# Contents:  alt-gos.rus example.alt.UU example.ko8.UU translit.txt.B
# Wrapped by kent@sparky on Fri Mar 19 16:00:14 1993
PATH=/bin:/usr/bin:/usr/ucb:/usr/local/bin:/usr/lbin ; export PATH
echo If this archive is complete, you will see the following message:
echo '          "shar: End of archive 7 (of 10)."'
if test -f 'alt-gos.rus' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'alt-gos.rus'\"
else
  echo shar: Extracting \"'alt-gos.rus'\" \(4653 characters\)
  sed "s/^X//" >'alt-gos.rus' <<'END_OF_FILE'
X# Jan Labanowski, jkl@osc.edu, Dec. 30, 1992
X# File alt-gos.rus
X
X# This is a transliteration data file for converting from ALT (Bryabrins
X# alternativnyj variant) to GOSTSCII 84 (approx. ISO-8859-5?)
X
X# To be used with translit.c program by Jan Labanowski
X
X   1            file version number
X
X   "    "      # string delimiters
X   [    ]      # list delimites
X   {    }      # regular expression delimiters
X
X
X#starting sequence for LaTeX
X""
X
X
X#ending sequence
X""
X
X   0     # number of input SHIFT sequences, only one set of input characters
X
X   0     # number of output SHIFT sequences, only one set of output characters
X  
X# conversion table
X# inp_set_numb  inp_seq        out_set_numb  out_seq
X     0         "\0xF0"              0       "\0xF0"   #capital Yo
X     0         "\0xf1"              0       "\0xF1"   #small yo
X
X     0         "\0x80"              0       "\0xB0"    A
X     0         "\0x81"              0       "\0xB1"    Be
X     0         "\0x82"              0       "\0xB2"    Ve
X     0         "\0x83"              0       "\0xB3"    Ghe
X     0         "\0x84"              0       "\0xB4"    De
X     0         "\0x85"              0       "\0xB5"    Ie
X     0         "\0x86"              0       "\0xB6"    Zhe
X     0         "\0x87"              0       "\0xB7"    Ze
X     0         "\0x88"              0       "\0xB8"    I
X     0         "\0x89"              0       "\0xB9"    short I
X     0         "\0x8A"              0       "\0xBA"    Ka
X     0         "\0x8B"              0       "\0xBB"    El
X     0         "\0x8C"              0       "\0xBC"    Em
X     0         "\0x8D"              0       "\0xBD"    En
X     0         "\0x8E"              0       "\0xBE"    O
X     0         "\0x8F"              0       "\0xBF"    Pe
X     0         "\0x90"              0       "\0xC0"    Er
X     0         "\0x91"              0       "\0xC1"    Es
X     0         "\0x92"              0       "\0xC2"    Te
X     0         "\0x93"              0       "\0xC3"    U
X     0         "\0x94"              0       "\0xC4"    Ef
X     0         "\0x95"              0       "\0xC5"    Kha
X     0         "\0x96"              0       "\0xC6"    Tse
X     0         "\0x97"              0       "\0xC7"    Che
X     0         "\0x98"              0       "\0xC8"    Sha
X     0         "\0x99"              0       "\0xC9"    Shcha
X     0         "\0x9A"              0       "\0xCA"   hard sign (Ier)
X     0         "\0x9B"              0       "\0xCB"    Y (Iery)
X     0         "\0x9C"              0       "\0xCC"   soft sign (Ierik)
X     0         "\0x9D"              0       "\0xCD"    reverse rounded E
X     0         "\0x9E"              0       "\0xCE"    Yu
X     0         "\0x9F"              0       "\0xCF"    Ya
X     0         "\0xA0"              0       "\0xD0"    a
X     0         "\0xA1"              0       "\0xD1"    be
X     0         "\0xA2"              0       "\0xD2"    ve
X     0         "\0xA3"              0       "\0xD3"    ghe
X     0         "\0xA4"              0       "\0xD4"    de
X     0         "\0xA5"              0       "\0xD5"    ie
X     0         "\0xA6"              0       "\0xD6"    zhe
X     0         "\0xA7"              0       "\0xD7"    z
X     0         "\0xA8"              0       "\0xD8"    i
X     0         "\0xA9"              0       "\0xD9"    short i
X     0         "\0xAA"              0       "\0xDA"    ka
X     0         "\0xAB"              0       "\0xDB"    el
X     0         "\0xAC"              0       "\0xDC"    em
X     0         "\0xAD"              0       "\0xDD"    en
X     0         "\0xAE"              0       "\0xDE"    o
X     0         "\0xAF"              0       "\0xDF"    pe
X     0         "\0xE0"              0       "\0xE0"    er
X     0         "\0xE1"              0       "\0xE1"    es
X     0         "\0xE2"              0       "\0xE2"    te
X     0         "\0xE3"              0       "\0xE3"    u
X     0         "\0xE4"              0       "\0xE4"    ef
X     0         "\0xE5"              0       "\0xE5"    kha
X     0         "\0xE6"              0       "\0xE6"    tse
X     0         "\0xE7"              0       "\0xE7"    che
X     0         "\0xE8"              0       "\0xE8"    sha
X     0         "\0xE9"              0       "\0xE9"    shcha
X     0         "\0xEA"              0       "\0xEA"   hard sign (ier)
X     0         "\0xEB"              0       "\0xEB"    y (iery)
X     0         "\0xEC"              0       "\0xEC"   soft sign (ierik)
X     0         "\0xED"              0       "\0xED"    reverse rounded e
X     0         "\0xEE"              0       "\0xEE"    yu
X     0         "\0xEF"              0       "\0xEF"    ya
END_OF_FILE
  if test 4653 -ne `wc -c <'alt-gos.rus'`; then
    echo shar: \"'alt-gos.rus'\" unpacked with wrong size!
  fi
  # end of 'alt-gos.rus'
fi
if test -f 'example.alt.UU' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'example.alt.UU'\"
else
  echo shar: Extracting \"'example.alt.UU'\" \(9714 characters\)
  sed "s/^X//" >'example.alt.UU' <<'END_OF_FILE'
Xbegin 644 example.alt
XM@""!(((@@R"$((4@\""&((<@B"")((H@BR",((T@CB"/() @D2"2(),@E""5
XM()8@ER"8()D@FB";()P@G2">()\@\PT*H""A(*(@HR"D(*4@\2"F(*<@J""I
XM(*H@JR"L(*T@KB"O(. @X2#B(.,@Y"#E(.8@YR#H(.D@ZB#K(.P@[2#N(.\@
XM] T*(" @(" @(" @(" @(" @(" HJ*<@HZ"GI>+K(/.,KN&JKJ+AJJBE(*VN
XMHJ[AXJCT+" V+C$R+CDR*0T*(" @(" @(" @(" @(" @(" @(" @(" @(" @
XM(" @((*;AXZ"(" @*.>@X>+L(*^EX**@[RD-"B @("""(*J@JJZI(.'CI>*E
XM(*SK(.&EHZZDK>\@IJBB\:PN(""$H*:E(*^NJZCBJ*J@+""H(.*@(*2@HJVN
XM(..FI0T*KZ7@I>'BH*N@(*V@X2"GH*VHK*#B["X@((SK(*ZAX*#IH*6L(*V@
XM(*VE\2"BK:BLH*VHI2#BKJOLJJX@XJZCI* L(*JNHZ2@#0JMH**EX.7C(."@
XMIZ.NX*"EXN'O(*[GI>"EI*V@[R#AHJ#@H"X@((VE(**NJZWC[N(@K:#A(*@@
XMK*C@KJ+KI2"OX*ZAJZ6LZRX-"I?BKB"F+""GH*>EK*OQK:VNX>+L(*V@Z*6C
XMKB"AZ^*H[R"BKZZKK:4@KZZM[^*MH"X@(( @K*6FI.,@XJ6L(*_@KJCAY:ZD
XM[^FEI0T*HJZJX..C(*2EJ>'BHJCBI:OLK:X@K^"HKJ'@I>*@I>(@HZNNH:"K
XM[*WKI2"HIZREX*6MJ.\N#0H@(" @(" @(" @(" @(" @+BXN+BXN+BXN+BXN
XM+BXN+BXN+BXN+BXN+BXN+BXN+BXN+@T*(" @(" @(" @(" @(" @(" @(" @
XMD9&1D""3C(60+B @BI*.((^.@86$B(L_#0H@(" @+BXNB.*@JBP@XJZK[*JN
XM(.*EKZ7@[""MH.>HK:#NXB"BZ^"HX:ZBZZ*@XNSA[R"JKJWBX^#K(.*EY2"C
XMX*"MI*BNIZWKY0T*KZ[AJZ6DX>*BJ*DL(*JNXJ[@ZZ4@X:+OIZ"MZR#A(*K@
XMH.6NK""JKJRLXZVHIZR@(*(@D:ZBI>+AJJZL()&N[J>E(*@@I:.N#0K@H.&O
XMH*2NK"X@((7I\2"BYZ7@H""GH.#CH:6FK>NE(*"MH*NHXJBJJ"#A(*ZKJ*RO
XMJ*GAJJBL(*&EX:_@J.'BX*#AXJBEK T*HJ>HX*"KJ""MH""AI:?@H.'AXZ2N
XMYZWKI2"HIZ.HH>L@K:#HI:.N(*+KX.NBK:ZCKB"H(*VEKZZM[^*MKJ.N(*2B
XMJ*:EK:CO+@T*D:6CKJ2M[R#CIJ4@K*VNHZBL(.'BH*VNHJCBX>\@[^&MKBP@
XMY^*N(.'CK*'CX*WKI2"JKJVBXZOLX:BH#0JOKN'BJJZLK..MJ.'BJ.>EX:JN
XMHZX@K*C@H"#AH*SKK""MI:^NX>"EI.'BHJ6MK>NL(*ZAX*"GKJP@IZ#BX*"C
XMJ**@[N(-"J2@J^RMI:GHX^X@X>.D[*'C(*+AI:.N(*REIJ3CK:#@KJ2MKJ.N
XM(.&NKJ'II>'BHJ N(""$H"P@JJZLK..MJ*>L(.#CY:WCJRP-"I&1D9 @J.'G
XMI:<@X2"OKJNHXJCGI>&JKJD@JJ#@XNLL(*VN(.*EK"#AH*SKK""AZZN@(*>@
XMHJ7@Z*6MH"#FI:N@[R"CJZ"BH T*HB"HX>*NX*BH(*+AI:D@YJBBJ*NHIZ#F
XMJ*@N#0H@(" @C:4@XJZK[*JN(*V@X:NEI*VHJJ@@JJZLK..MJ*>LH"P@K:X@
XMJ""NX>*@J^RMKJD@K*C@(*ZJH*>@JZCA[""BI.#CHPT*KZ7@I:0@YZCAXNNL
XM(*NHX>*NK"X@((^N(*REX*4@KN&NIZV@K:CO(.WBKJ.N(.2@JN*@(*(@IZ#@
XMXZ&EIJWKY0T*KZZKJ.*HYZ7AJJCE(*K@XZ.@Y2"OI>"BH.\@[:GDKN"H[R"O
XMKJ&EI.L@K:"D(/.HK*^EX*BEJ2"GJZ#T(*@@K:6JKJ6CK@T*X:"LKN.DKJ*K
XMI>*BKN"EK:CO(.&LI:WOI>+A[R"BX?$@H:ZK[.BEJ2"NIZ"AKN>EK:VNX>+L
XM[BP@X*#AXJ7@[ZVMKN'B[.XL#0J@(*JNI2VCI*4@J""OH*VHJJZI+B @D*7G
XM[""HI/'B(*VE(.*NJ^RJKB"N(.+@I:*NHZ4L(*+KIZ*@K:VNJ0T*K:6OX*6D
XMX:J@I^.EK*[AXNSN(*_@KN:EX>&NHB"MH"#BI>#@J.*NX*BH(*+GI>"@Z*VE
XMHZX@D9&1D"X@((KAXJ#BJ"P@KZZJH T*KJVH(*VE(*_@J*WOJZ@@X>*NJ^P@
XMH*^NJJ"KJ*_AJ.>EX:JNJ2#DKN"LZRP@JJ"J(*ZFJ*2@JZ@@K*VNHZBE+""H
XM#0JOX*[BI:J@[N(@HB"NXJNHYZBE(*[B()ZCKN&KH**HJ""AKJNEI2#FJ**H
XMJZBGKJ*@K:VN+@T*(" @((*DX..C(.$@KN>EHJBDK:[AXNSN(*[BJN#KJZ[A
XM[""DX..CKJ4@+2#GXJXL(*VEX:RNXN#O(*V@(**MI>BMI0T*H*'AKJONXJWC
XM[B"OX*[BJ**NKZZKKJ:MKN'B[""GH*^@I*VNJ2"H(*JNK*SCK:CAXJCGI>&J
XMKJD@X:CAXJ6L+""NK:@-"J*GH*BLKN&B[Z>@K>LN("",I>6@K:BGK"#@H*>B
XMJ.*H[R#BKJD@J""DX..CKJDL(*J@JB#BI:^EX.P@KJ&MH.#CIJBBH*7BX>\L
XM#0JAZZL@IZ"OX*ZCX*"LK*C@KJ*@K2"MH""MH*NHYZBE(.&BKJ6CKB"@K>*@
XMHZZMJ.'BH"X-"B @(""%Z?$@K^"EI.'BKJCB(."@IZZAX*#B[.'O+""B(*J@
XMJJZI(.'BI:^EK:@@XJ4@J*NH(*BMZZ4@XJ6MI*6MYJBH#0JNH>FEX>*BI:VM
XMKJD@IJBGK:@@AZ"OH*2@(.^BJ*NHX>P@X*6GXZOLXJ#BKJP@I:.N(**MX^+@
XMI:VMZZD@[:*NJ^[FJ*@L(* -"J(@JJ"JKJD@H>NKJ""NH>/AJZZBJZ6MZR#A
XMX^FEX>*BKJ*@K:BEK""JKJRLXZVHX>*HYZ7AJJZCKB"NH>FEX>*BH"P@J T*
XMK:"NH:[@KN(N(""-KB"GH*^@I*WKJ2"LJ. L(.*@JB"DKJNCKB"H(*"JXJBB
XMK:X@I*ZAJ**@HNBHJ>'O(*JNK>:@#0JJKJRLXZVHIZR@+""NJJ"GH*OA[R"M
XMI2"OKJ2CKN*NHJNEK:WKK""J(*:HIZVH(*^NX:NE(*6CKB"OH*2EK:CO+B @
XMCJVN#0JMH.#CZ*BKKB"CJZZAH*OLK>/N(.&HX>*EK.,@H:6GKJ^@X:VNX>*H
XM(*@@KJ'II::HXJCO+""JKN*NX*#O(.&JX..OXZOQIZVN#0KAKJ>DH**@JZ#A
XM[""OKN&KI2"BXJ[@KJD@K*C@KJ*NJ2"BKJFMZRP@X^&OI:N@(*ZAX*#AXJ@@
XMX:*NI:D@H>[@KJK@H.*HI:D@J T*KZZKX^>HXNP@I*"FI2#AKJ'AXJ*EK:WC
XM[B"KKJ.HJN,@X*"GHJCBJ.\N("" (.+CXB"B(*ZDK:X@K*.MKJ*EK:BE(.WB
XMKN(-"JRHX*ZOKN#OI*ZJ(."@IZ*@JZBKX>\N#0H@(" @@JREX>*E(.$@K:BL
XM(*^NJJ#GK>.KH.'L(*+A[R#@H*>BI>*BJ_&MK:#O(.&HX>*EK* @J*WAXJCB
XMX^*NHB"H#0KFI:VMKN'BI:DL(*V@(*JNXJ[@Z^4@I*X@X:CE(*^NX""DI>"F
XMH*NNX>P@Y>#CKZJNI2"LJ."NHJZE(."@HJVNHJ7AJ*4N#0J1XJ"KKB#OX:VN
XM+"#GXJX@K:4@XJZK[*JN(*'KHNBHK""JKJRLXZVHX>*HYZ7AJJBL(*.NX>.D
XMH.#AXJ*@K"P@K:X@J T*HN&EK.,@K*C@KJ*NK.,@X:ZNH>FEX>*BXR"OX*6D
XMX>*NJ.(@J.&JH.+L(*VNHNNE(.2NX*SK(.'CZ:7AXJ*NHJ"MJ.\N#0J/X*BD
XM\>+A[R"GH*VNHJX@KN&LZ^&KJ**@XNP@K*VNHZBE(**NK^"NX>LL(*J@IZ"B
XMZ*BEX>\@X*"G(*@@K:"BX:6CI* -"N"EZ/&MK>NLJ"X@()&JH*:EK"P@X>*@
XMH:BK[*VNX>+L(*/@H*VHYB"HJZ@@KJ&EX:^EYZ6MJ*4@YJ6KKN'BK:[AXJ@-
XM"J.NX>.DH.#AXJ(N("" (*_@H**@(*V@YJBI(*V@(.&@K*ZNK^"EI*6KI:VH
XMI2P@K:ZBZZD@Y*6DI>"@JZBGK""H#0KAKN>EXJ"MJ*4@JN"HXJ7@J*6B(*V@
XMYJBNK:"K[*VNHZX@HJZGX*ZFI*6MJ.\@J""DI:RNJN"@XJBH/R @D:6CKJ2M
XM[R#MXJ@-"J*NK^"NX>L@KZZDK>_BZR"OKN'BJJZLK..MJ.'BJ.>EX:JHK*@@
XMKJ'II>'BHJ"LJ"X@((VN(**NXBVBKN(@JB"MJ*P@HJVNHNP-"J*NIZ+@H.+O
XMXN'O("CCIJ4@HJZGHN"@Z:#NXN'O*2"CKN'CI*#@X>*BH"" IZBH(*@@@.3@
XMJ*JH+""CI*4-"N&NKN*BI>+AXJ+C[NFHI2"OX*[FI>'AZR"AZZNH(*(@X:*N
XM\2"BX*6L[R"HX:KCX>'BHJ6MK:X@IZ"LKN"NIJ6MZRX-"B @(""/X*CEKJ2H
XMXN'O(*_@I:ZDKJNEHJ#B[""H(*V@Z*@@K:6DH**MJ*4@J*NK[J>HJ"X@()&J
XMKJOLJJX@H>NKK@T*HJ[AXJ[@HZZB(*^N(*^NHJZDXR#@H.&OH*2@(*&HKZZK
XM[ZVNJ2#AJ.'BI:SK(*REIJ3C(*V@X*ZDK>OE(*[BK:[HI:VHJ2P-"J^NJJZH
XMHNBEJ>'O(*V@(.&NKZ7@K:CGI>'BHJ4@J""BIZ"HK*VNK"#AI*7@IJBBH*VH
XMJ""DHN/E(.^DI>"MZ^4-"N&BI>#EI*7@IJ"B("T@D9B (*@@D9&1D"X@((3C
XMK*"KKN'L+""BKN(@KJVN+""MH.'BXZ^KI:VHI2"DH**MK@T*J.&JKJRNHZX@
XMH:6GKJ&KH.>MKJ.N(*RHX*ZOKN#OI*J@+B @C:4@XN/B+>*N(*'KJZXN(""3
XMH^"NIZ @HZNNH:"K[*VNJ0T*[Z2EX*VNJ2"JKJWDX*ZMXJ#FJ*@@I*6IX>*B
XMJ.*EJ^RMKB#AK:BGJ*N@X>PN(""-KB"BIZ"LI:T@H>NBZ*6CK@T*JJZLK..M
XMJ.'BJ.>EX:JNHZX@JZ"CI>#O(*RHX""OKJOCYZBK(.:EJ^NI(/.AXZJEXO0@
XMK^"NH:NEK" M(*@@X*ZFI*6MJ*4-"JVNHNOE(*.NX>.DH.#AXJ(L(*@@KZ7@
XMI>&LKN+@(*/@H*VHYBP@J""JKJWDJZBJXNL@KZX@KZZBKJ3C(*_@H*(-"JV@
XMYJREK>SHJ*WAXJ(L(*@@K:"JKJVEYBP@X>"@I^,@I**E(**NJ:WK("T@K: @
XM@:"KJJ"MH.4@J""*H**JH*>E+B @DJ"JKJ*N#0JOX.^LKJ4@X:NEI.'BHJBE
XM(*^@I*6MJ.\@D9&1D"P@IJ6KI:>MKJD@Y:*@XJJNJ2"OKJ2@HJOOHNBEHZXL
XM(*>@HZZM[Z+HI:.N#0JBKJ*MX^+@[""BX:4@K^"NXJBBKN"EYZCO(**MX^+@
XMJ"#AI:'O(*@@HB#AY*7@I2#AHJZEHZX@HJNH[ZVH[RP@Y^*N(.*EK T*X:"L
XMZZP@X^&HJZBBH*NN(*RNZ>P@J.4@KZ[BI:WFJ*"K[*VNHZX@HJ?@ZZ*@(*^N
XMX:NE(*+KY:ZDH""MH""OKJ*EX.6MKN'B["X-"B @(" @(" @(" @(" @(" @
XM(" @G96.()&.@H62D8J.@XX@D("1CX"$@ T*(" @((2@K:WKJ2#EKJ0@X:ZA
XMZ^*HJ2"LKJ:MKB"AZZNN(*NEHZJN(*_@KJ.MKJ>HX*ZBH.+L+B @C:X@K*"K
XMKB"JXJX@I..LH*LL#0JJH*JNHJX@H>.DI>(@HJNH[ZVHI2#AKJ*EXN&JKJ.N
XM(*K@X^BEK:CO(*V@(**GH*BLKJ[BK:[HI:VH[R"BK>/BX*@@IZ"OH*2MKJ.N
XM#0KAKJZAZ:7AXJ*@+B @D:6CKJ2M[R#CIJ4@KN>EHJBDK:XL(.?BKB"1KNZG
XM(*'KJR"MI:R@JZZBH*:MZZP@Y*"JXJ[@KJP-"N&OJZ[GI:VH[R#MXJZCKB#A
XMKJZAZ:7AXJ*@(*@@X*#AKZ"D(.&NHJ7BX:JNHZX@HZ[AXZ2@X.'BHJ @[Z*H
XMJ^'O(.*NJ^>JKJPL#0JJKN*NX.NI(./AJ*NHJR"MH""'H*^@I*4@YJ6MXN"N
XMH:6FK>NE(.*EK:2EK>:HJ"P@HNOOHJBK(*VEX:ZBKZ"DI:VHI0T*J*WBI>"E
XMX:ZB(*BMI./AXN"HH*OLK>OE(.'BX*"M+B @C: @Y*ZMI2#BI:VDI:WFJ*DL
XM(*V@K*7BJ*+HJ.7A[R"BK>/BX*@@A9$L#0JDH*OLK:6IZ*#O(.'CI.RAH""E
XMHN"NKZ6IX:JNJ2"HK>*EH^"@YJBH(..FI2"MI2"BZZ.K[Z2HXB"AI:>NH:N@
XMYZVNJ2X-"HJNK:7GK:XL(*ZAZN_AK>^EXN'O(.WBKB"BK>/BX*6MK:BLJ""O
XMX*[FI>'AH*RH(*(@IZ"OH*2MKJ6BX*ZOI:GAJJCE(.'BX*"MH.4N#0J2KN(@
XMY*"JXBP@Y^*N(*_@H*KBJ.>EX:JH(*^NHN'NI.,@K:#GH*NH(**DX..C(*.N
XMHJ[@J.+L(*VE(*ZA(*BMXJ6CX*#FJ*@L#0J@(*X@K:#FJ*ZMH*OLK>OE(*BM
XMXJ7@I>&@Y2P@XN"EH:ZBH.+L(*VE(."@X:^@Y:WCXNP@KJJMKB"B(*RHX"P@
XMH""NK^/AXJCB[ T*Z.*NX.LL(**N(*RMKJ.NK"#OHJOOI>+A[R#AJZ6DX>*B
XMJ*6L(*^NK^"@HJNEK:CO(*ZAZ:7AXJ*EK:VNHZX@K*VEK:CO+ T*H*KBJ**H
XMJ*>@YJBH(*V@YJBNK:"KJ.'BJ.>EX:JHY2"CX..OKZC@KJ*NJBP@KZZBX:6L
XMI>'BK:ZCKB#CY>.DZ*6MJ.\-"NVJKJVNK*CGI>&JKJD@X:CBXZ#FJ*@N#0H@
XM(" @C:XL(*(@X:*N[B"NYZ7@I:3L+""BX:4@[>*H(*_@KN:EX>'K(*_@[ZRN
XM(.&B[Z>@K>L@X2"HIZREK:6MJ*6L#0JOX*BBZ^>MKJ.N(*ZJX..FI:VH[R"'
XMH*^@I*VNJ2"%HJ#@KJ_K+B @CJV@(*ZJH*>@JZ#A[""KJ.:NK""J(*NHYN,@
XMX0T*K:7AXJ"AJ*OLK>NLJ""H(*VEK^"EI.&JH*?CI:SKK*@@KZ[AXJJNK*SC
XMK:CAXJCGI>&JJ*RH(*ZAZ:7AXJ*@K*@N(""7I:P-"J2@J^SHI2P@XJ6L(*&N
XMJ^SHJ*P@KZZDKJ?@I:VHI:P@IZ"OH*2MZZD@KJ'KHJ#BI:OL(.&LKN+@J.(@
XMHB"HY2#AXJ[@KJWC+ T*K:7AJ^/HH*+HJ.'L(*_@KJ.MKJ>NHB"N(*.NXJZB
XM[^FHY>'O(*>@Y:NEX>*MX^+L((6BX*ZOXR"LH.'AKJ+KY2"MH.BEX>*BJ._E
XM#0JLJ*/@H*WBKJ(@J""OX*[GJ.4@K:6OX*COXJVNX>+OY2X-"B @(""1H*SK
XMI2"JX..OK>NE+"#@H*?CK*6EXN'O+""NIJBDH.[BX>\@X:X@X>*NX*ZMZR"A
XMZZ+HI:.N()&NHJ7BX:JNHZX-"I&N[J>@+""JKN*NX.NI(.>@Z:4@HN&EHZX@
XMHJ[AK^"HK:BLH*7BX>\@JJ"J(*^NXJ6MYJB@J^RMZZD@J.'BKN>MJ*H@[Z2E
XMX*WKY0T*JJ#BH.'BX*[D(*@@JN"NHJ"BZ^4@K*6FK:#FJ*ZMH*OLK>OE(*JN
XMK>2KJ*KBKJ(N("""KN(@HJ"L(*@@KZ[GHJ @I*OO(*VNHNOE#0KAXN"@Y:ZB
XM.R"BKN(@J""HX>*NJJ@@HJVEIZ"OK:ZCKB"JKJWAI>"BH.*HHJVNHZX@JN"E
XMK: @IZ"OH*2MKJ.N(*ZAZ:7AXJ*@+ T*I:.N(.+OXJ[BI:VH[R"J(*&NJZ6E
XM(*:EX>*JKJSC(."EIJBLXRP@H""GH*ZDK:X@J""J(*VNHJZLXR#@H*>DI:NH
XMXJ6K[*VNK.,-"J>@K:"BI>'C+""JKN*NX.NI(*'K(*ZCX*"DJ*L@I:.N(*[B
XM(*V@Z*6I(.>@X>*H(.&BI>*@+@T*(" @((_@J*REX""#I>"LH*VHJ"P@X*7H
XMJ*+HI:D@HB"NXJ*EXB"MH""OKJ/@KJSK(*+KI**NX*CB[""GH"#AHJZH(*_@
XMI:2EJ^L-"N+KX>_GJ"#@XZSKK>&JJ.4@YNNCH*T@J""DH*:E(*BGK*6MJ.+L
XM(*JNK>'BJ.+CYJCN(.$@XJ6L+"#GXJZAZR"NH^"@K:CGJ.+L#0KGJ.&KKB"O
XMX*7BI:VDI:WBKJ(@K: @KZZKJ.*HYZ7AJJZE(..AI::HZ:4L(.&BJ*2EXJ6K
XM[.'BHN.EXB"N(.*NK"P@Y^*N#0JOX*"B[^FHI2"GH*^@I*WKI2"JX..CJ""B
XMZZWCIJ2EK>L@X*6@HZC@KJ*@XNP@K: @K:ZBZZ4@X>+@H.6H+B @@JZGK:BJ
XMH*7B#0JBKJ_@KN$Z(* @K:4@IZ#AXJ"B[^(@JZ@@[>*H(.'BX*#EJ""B(./A
XMJZZBJ._E(**NIZRNIJVNHZX@X^7CI.BEK:CO#0KMJJZMKJRHYZ7AJJZCKB"O
XMKJNNIJ6MJ.\@H:ZK[.BHK>'BHJ @I:+@KJ^EJ>&JJ.4@HZ[AXZ2@X.'BHB"O
XMX*ZIXJ@@J.4-"N>EX*6G(*&NJZ6GK:6MK>NE(*CAK^OBH*VH[R"MH""OX*BB
XMI>"FI:VMKN'B[""HI*7OK""DI:RNJN"@XJBH/PT*(" @(((@K^"HHJ7@IJ6M
XMK:[AXJ@@I:D@XR"MZZVEZ*VHY2"OX*"B[^FHY2#MJZCB((>@KZ"DH"#AKJRM
XMI:VHJ2"MI>(N#0J-KB"JH*JHK""AXZ2EXB"MKJ*NI2"OKJJNJZ6MJ*4@KZZK
XMJ.*HYZ7AJJCE(*2E[^*EJZ6I+""MI2"OKJFD\>(@JZ@@KJVN#0JMH""OKJ*N
XMI.,@XR"OKJ_@H**EHNBEJ2#GH.'BJ""NH>FEX>*BH#\@((^NK>_BK:XL(.?B
XMKB#MXJ[B(**NK^"NX2#GH.FE#0JBX:6CKB#AKJ_@KJ*NIJ2@I>+A[R#BX*6B
XMKJ:MZZP@HJ>CJ^^DKJP@HB#AXJ[@KJWC((.EX*R@K:BH+""OX*6BX*#IH.[I
XMI:GA[PT*X:6CKJ2M[R"B(*2NK*BMJ.#C[NFHJ2#DH*KBKN @I:+@KJ^EJ>&J
XMKJD@X>:EK>LN#0H@(" @(" @(" @(" @(" @(" @(" @**ZJKJWGH*VHI2#A
X)JZ6DXZ7B*0T*
X 
Xend
END_OF_FILE
  if test 9714 -ne `wc -c <'example.alt.UU'`; then
    echo shar: \"'example.alt.UU'\" unpacked with wrong size!
  else
    echo shar: Uudecoding \"'example.alt'\" \(7029 characters\)
    cat example.alt.UU | uudecode
    if test 7029 -ne `wc -c <'example.alt'`; then
      echo shar: \"'example.alt'\" uudecoded with wrong size!
    else
      rm example.alt.UU
    fi
  fi
  # end of 'example.alt.UU'
fi
if test -f 'example.ko8.UU' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'example.ko8.UU'\"
else
  echo shar: Extracting \"'example.ko8.UU'\" \(9718 characters\)
  sed "s/^X//" >'example.ko8.UU' <<'END_OF_FILE'
Xbegin 644 example.ko8
XMX2#B(/<@YR#D(.4@LR#V(/H@Z2#J(.L@["#M(.X@[R#P(/(@\R#T(/4@YB#H
XM(.,@_B#[(/T@_R#Y(/@@_"#@(/$@\PT*P2#"(-<@QR#$(,4@HR#6(-H@R2#*
XM(,L@S"#-(,X@SR#0(-(@TR#4(-4@QB#((,,@WB#;(-T@WR#9(-@@W"# (-$@
XM] T*(" @(" @(" @(" @(" @(" HR=H@Q\':Q=39(//MS]/+S]?3R\G%(,[/
XMU\_3U,GT+" V+C$R+CDR*0T*(" @(" @(" @(" @(" @(" @(" @(" @(" @
XM(" @(/?Y^N_W(" @*-[!T]38(-#%TM?!T2D-"B @("#W(,O!R\_*(-/5Q=3%
XM(,W9(-/%Q\_$SM$@ULG7H\TN("#DP=;%(-#/S,G4R<O!+"#)(-3!(,3!U\[/
XM(-76Q0T*T,72Q=/4P<S!(,[!TR#:P<[)S<'4V"X@(.W9(,_"TL'=P<7-(,[!
XM(,[%HR#7SLG-P<[)Q2#4S\S8R\\@U,_'Q,$L(,O/Q\3!#0K.P=?%TLC5(-+!
XMVL?/TL'%U-/1(,_>Q=+%Q,[!T2#3U\'2P2X@(.[%(-?/S,[5P-0@SL'3(,D@
XMS<G2S]?9Q2#0TL_"S,7-V2X-"O[4SR#6+"#:P=K%S<RCSL[/T]38(,[!V\7'
XMSR#"V=3)T2#7T,_,SL4@T,_.T=3.P2X@(.$@S<76Q-4@U,7-(-#2S\G3R,_$
XMT=W%Q0T*U\_+TM7'(,3%RM/4U\G4Q<S8SL\@T-+)S\+2Q=3!Q=0@Q\S/PL',
XMV,[9Q2#)VLW%TL7.R=$N#0H@(" @(" @(" @(" @(" @+BXN+BXN+BXN+BXN
XM+BXN+BXN+BXN+BXN+BXN+BXN+BXN+@T*(" @(" @(" @(" @(" @(" @(" @
XM\_/S\B#U[>7R+B @Z_3O(/#OXN7DZ>P_#0H@(" @+BXNZ=3!RRP@U,_,V,O/
XM(-3%T,72V"#.P=[)SL' U"#7V=+)T\_7V=?!U-C3T2#+S\[4U=+9(-3%R"#'
XMTL'.Q,G/VL[9R T*T,_3S,7$T]37R<HL(,O/U,_2V<4@T]?1VL'.V2#3(,O2
XMP<C/S2#+S\W-U<[)VLW!(-<@\\_7Q=33R\_-(///P-K%(,D@Q<?/#0K2P=/0
XMP<3/S2X@(.7=HR#7WL72P2#:P=+5PL76SMG%(,'.P<S)U,G+R2#3(,_,R<W0
XMR<K3R\G-(,+%T]#2R=/4TL'3U,G%S0T*U]K)TL',R2#.P2#"Q=K2P=/3U<3/
XMWL[9Q2#)VL?)PMD@SL';Q<?/(-?9TMG7SL_'SR#)(,[%T,_.T=3.S\?/(,37
XMR=;%SLG1+@T*\\7'S\3.T2#5UL4@S<[/Q\G-(-/4P<[/U\G4T]$@T=/.SRP@
XMWM3/(-/5S<+5TL[9Q2#+S\[7U<S8T\G)#0K0S]/4R\_-S=7.R=/4R=[%T\O/
XMQ\\@S<G2P2#3P<W9S2#.Q=#/T]+%Q-/4U\7.SMG-(,_"TL':S\T@VL'4TL''
XMR=?!P-0-"L3!S-C.Q<K;U< @T]7$V,+5(-?3Q<?/(,W%UL35SL'2S\3.S\?/
XM(-//S\+=Q=/4U\$N("#DP2P@R\_-S=7.R=K-(-+5R,[5S"P-"O/S\_(@R=/>
XMQ=H@TR#0S\S)U,G>Q=/+S\H@R\'2U-DL(,[/(-3%S2#3P<W9S2#"V<S!(-K!
XMU\72V\7.P2##Q<S!T2#'S,'7P0T*UR#)T]3/TLG)(-?3Q<H@P\G7R<S)VL'#
XMR<DN#0H@(" @[L4@U,_,V,O/(,[!T\S%Q,[)R\D@R\_-S=7.R=K-P2P@SL\@
XMR2#/T]3!S-C.S\H@S<G2(,_+P=K!S,G3V"#7Q-+5QPT*T,72Q<0@WLG3U-G-
XM(,S)T]3/S2X@(/#/(,W%TL4@S]//VL[!SLG1(-S4S\?/(,;!R]3!(-<@VL'2
XMU<+%UL[9R T*T,_,R=3)WL73R\G((,O2U<?!R"#0Q=+7P=$@W,K&S]+)T2#0
XMS\+%Q-D@SL'$(//)S=#%TLG%RB#:S,'T(,D@SL7+S\7'SPT*T\'-S]7$S]?,
XMQ=37S]+%SLG1(-/-Q<[1Q=33T2#7TZ,@PL_,V-O%RB#/VL'"S][%SL[/T]38
XMP"P@TL'3U,72T<[.S]/4V, L#0K!(,O/Q2W'Q,4@R2#0P<[)R\_*+B @\L7>
XMV"#)Q*/4(,[%(-3/S-C+SR#/(-32Q=?/Q\4L(-?9VM?!SL[/R@T*SL70TL7$
XMT\O!VM7%S<_3U-C (-#2S\/%T]//UR#.P2#4Q=+2R=3/TLG)(-?>Q=+!V\[%
XMQ\\@\_/S\BX@(.O3U,'4R2P@T,_+P0T*S\[)(,[%(-#2R<[1S,D@T]3/S-@@
XMP=#/R\',R=#3R=[%T\O/RB#&S]+-V2P@R\'+(,_6R<3!S,D@S<[/Q\G%+"#)
XM#0K0TL_4Q<O!P-0@UR#/U,S)WLG%(,_4(.#'S]/,P=?)R2#"S\S%Q2##R=?)
XMS,G:S]?!SL[/+@T*(" @(/?$TM7'(-,@S][%U\G$SL_3U-C (,_4R]+9S,_3
XMV"#$TM7'S\4@+2#>U,\L(,[%T\W/U-+1(,[!(-?.Q=O.Q0T*P<+3S\S U,[5
XMP"#0TL_4R=?/T,_,S];.S]/4V"#:P=#!Q,[/RB#)(,O/S<W5SLG3U,G>Q=/+
XMS\H@T\G3U,7-+"#/SLD-"M?:P<G-S]/7T=K!SMDN("#MQ<C!SLG:S2#2P=K7
XMR=3)T2#4S\H@R2#$TM7'S\HL(,O!RR#4Q=#%TM@@S\+.P=+5ULG7P<74T]$L
XM#0K"V<P@VL'0TL_'TL'-S<G2S]?!SB#.P2#.P<S)WLG%(-/7S\7'SR#!SM3!
XMQ\_.R=/4P2X-"B @("#EW:,@T-+%Q-/4S\G4(-+!VL_"TL'4V-/1+"#7(,O!
XMR\_*(-/4Q=#%SLD@U,4@R<S)(,G.V<4@U,7.Q,7.P\G)#0K/PMW%T]37Q<[.
XMS\H@ULG:SLD@^L'0P<3!(-'7R<S)T]@@TL7:U<S8U,'4S\T@Q<?/(-?.U=32
XMQ<[.V<H@W-?/S,##R<DL(,$-"M<@R\'+S\H@PMG,R2#/PM73S,_7S,7.V2#3
XMU=W%T]37S]?!SLG%S2#+S\W-U<[)T]3)WL73R\_'SR#/PMW%T]37P2P@R0T*
XMSL'/PL_2S]0N("#NSR#:P=#!Q,[9RB#-R=(L(-3!RR#$S\S'SR#)(,'+U,G7
XMSL\@Q,_"R=?!U]O)RM/1(,O/SL/!#0K+S\W-U<[)VLW!+"#/R\':P<S3T2#.
XMQ2#0S\3'S]3/U\S%SL[9S2#+(-;)VL[)(-#/T\S%(,7'SR#0P<3%SLG1+B @
XM[\[/#0K.P=+5V\G,SR#'S,_"P<S8SM7 (-/)T]3%S=4@PL7:S]#!T\[/T]3)
XM(,D@S\+=Q=;)U,G1+"#+S]3/TL'1(-/+TM70U<RCVL[/#0K3S]K$P=?!S,'3
XMV"#0S]/,Q2#7U,_2S\H@S<G2S]?/RB#7S\K.V2P@U=/0Q<S!(,_"TL'3U,D@
XMT]?/Q<H@PL#2S\O2P=3)Q<H@R0T*T,_,U=[)U-@@Q,'6Q2#3S\+3U-?%SL[5
XMP"#,S\?)R]4@TL':U\G4R=$N("#A(-35U"#7(,_$SL\@S<?.S]?%SLG%(-S4
XMS]0-"LW)TL_0S]+1Q,_+(-+!VM?!S,G,T]$N#0H@(" @]\W%T]3%(-,@SLG-
XM(-#/R\'>SM7,P=/8(-?3T2#2P=K7Q=37S*/.SL'1(-/)T]3%S<$@R<[3U,G4
XMU=3/UR#)#0K#Q<[.S]/4Q<HL(,[!(,O/U,_2V<@@Q,\@T\G((-#/TB#$Q=+6
XMP<S/T]@@R-+5T,O/Q2#-R=+/U\_%(-+!U\[/U\73R<4N#0KSU,',SR#1T\[/
XM+"#>U,\@SL4@U,_,V,O/(,+9U]O)S2#+S\W-U<[)T]3)WL73R\G-(,?/T]7$
XMP=+3U-?!S2P@SL\@R0T*U]/%S=4@S<G2S]?/S=4@T\_/PMW%T]37U2#0TL7$
XMT]3/R=0@R=/+P=38(,[/U]G%(,;/TLW9(-/5W<73U-?/U\'.R=$N#0KPTLG$
XMH]33T2#:P<[/U\\@S]/-V=/,R=?!U-@@S<[/Q\G%(-?/T-+/T]DL(,O!VL'7
XMV\G%T]$@TL':(,D@SL'7T\7'Q,$-"M+%VZ/.SMG-R2X@(//+P=;%S2P@T]3!
XMPLG,V,[/T]38(,?2P<[)PR#)S,D@S\+%T]#%WL7.R<4@P\7,S]/4SL_3U,D-
XM"L?/T]7$P=+3U-<N("#A(-#2P=?!(,[!P\G*(,[!(-/!S<_/T-+%Q,7,Q<[)
XMQ2P@SL_7V<H@QL7$Q=+!S,G:S2#)#0K3S][%U,'.R<4@R]+)U,72R<77(,[!
XMP\G/SL',V,[/Q\\@U\_:TL_6Q,7.R=$@R2#$Q<W/R]+!U,G)/R @\\7'S\3.
XMT2#<U,D-"M?/T-+/T]D@T,_$SM'4V2#0S]/4R\_-S=7.R=/4R=[%T\O)S<D@
XMS\+=Q=/4U\'-R2X@(.[/(-?/U"W7S]0@RR#.R<T@U\[/U]@-"M?/VM?2P=31
XMU-/1("C5UL4@U\_:U]+!W<' U-/1*2#'S]/5Q,'2T]37P2#AVLG)(,D@X<;2
XMR<O)+"#'Q,4-"M//S]37Q=33U-?5P-W)Q2#0TL_#Q=/3V2#"V<S)(-<@T]?/
XMHR#7TL7-T2#)T\O5T]/4U\7.SL\@VL'-S]+/UL7.V2X-"B @("#PTLG(S\3)
XMU-/1(-#2Q<_$S\S%U\'4V"#)(,[!V\D@SL7$P=?.R<4@R<S,P-K)R2X@(//+
XMS\S8R\\@PMG,SPT*U\_3U,_2Q\_7(-#/(-#/U\_$U2#2P=/0P<3!(,+)T,_,
XMT<[/RB#3R=/4Q<W9(,W%UL35(,[!TL_$SMG((,_4SL_;Q<[)RBP-"M#/R\_)
XMU]O%RM/1(,[!(-//T,72SLG>Q=/4U\4@R2#7VL')S<[/S2#3Q,72ULG7P<[)
XMR2#$U]7((-'$Q=+.V<@-"M/7Q=+(Q,72UL'7("T@\_OA(,D@\_/S\BX@(.35
XMS<',S]/8+"#7S]0@S\[/+"#.P=/4U=#,Q<[)Q2#$P=?.SPT*R=/+S\W/Q\\@
XMPL7:S\+,P=[.S\?/(,W)TL_0S]+1Q,O!+B @[L4@U-74+=3/(,+9S,\N("#U
XMQ]+/VL$@Q\S/PL',V,[/R@T*T<3%TL[/RB#+S\[&TL_.U,'#R<D@Q,7*T]37
XMR=3%S-C.SR#3SLG:R<S!T]@N("#NSR#7VL'-Q<X@PMG7V\7'SPT*R\_-S=7.
XMR=/4R=[%T\O/Q\\@S,''Q=+1(,W)TB#0S\S5WLG,(,/%S-G*(//"U<O%U/0@
XMT-+/PLS%S2 M(,D@TL_6Q,7.R<4-"L[/U]G((,?/T]7$P=+3U-<L(,D@T,72
XMQ=/-S]32(,?2P<[)PRP@R2#+S\[&S,G+U-D@T,\@T,_7S\35(-#2P=<-"L[!
XMP\W%SMC;R<[3U-<L(,D@SL'+S\[%PRP@T]+!VM4@Q-?%(-?/RL[9("T@SL$@
XMXL',R\'.P<@@R2#KP=?+P=K%+B @],'+S]?/#0K0TM'-S\4@T\S%Q-/4U\G%
XM(-#!Q,7.R=$@\_/S\BP@UL7,Q=K.S\H@R-?!U,O/RB#0S\3!U\S1U]O%Q\\L
XM(-K!Q\_.T=?;Q<?/#0K7S]?.U=32V"#7T\4@T-+/U,G7S]+%WLG1(-?.U=32
XMR2#3Q<+1(,D@UR#3QL72Q2#3U\_%Q\\@U\S)T<[)T2P@WM3/(-3%S0T*T\'-
XMV<T@U=/)S,G7P<S/(,W/W=@@R<@@T,_4Q<[#R<',V,[/Q\\@U]K2V=?!(-#/
XMT\S%(-?9R,_$P2#.P2#0S]?%TLC.S]/4V"X-"B @(" @(" @(" @(" @(" @
XM(" @_.CO(//O]^7T\^OOY^\@\N'S\.'DX0T*(" @(.3!SL[9RB#(S\0@T\_"
XMV=3)RB#-S];.SR#"V<S/(,S%Q\O/(-#2S\?.S]K)TL_7P=38+B @[L\@S<',
XMSR#+U,\@Q-7-P<PL#0K+P<O/U\\@PM7$Q=0@U\S)T<[)Q2#3S]?%U-/+S\?/
XM(,O2U=O%SLG1(,[!(-?:P<G-S\_4SL_;Q<[)T2#7SM74TLD@VL'0P<3.S\?/
XM#0K3S\_"W<73U-?!+B @\\7'S\3.T2#5UL4@S][%U\G$SL\L(-[4SR#SS\#:
XM(,+9S"#.Q<W!S,_7P=;.V<T@QL'+U,_2S\T-"M/0S,_>Q<[)T2#<U,_'SR#3
XMS\_"W<73U-?!(,D@TL'3T,'$(-//U\74T\O/Q\\@Q\_3U<3!TM/4U\$@T=?)
XMS-/1(-3/S-[+S\TL#0K+S]3/TMG*(-73R<S)S"#.P2#ZP=#!Q,4@P\7.U-+/
XMPL76SMG%(-3%SL3%SL/)R2P@U]G1U\G,(,[%T\_7T,'$Q<[)Q0T*R<[4Q=+%
XMT\_7(,G.Q-73U-+)P<S8SMG((-/4TL'.+B @[L$@QL_.Q2#4Q<[$Q<[#R<HL
XM(,[!S<74R=?;R<C3T2#7SM74TLD@Y?,L#0K$P<S8SL7*V\'1(-/5Q-C"P2#%
XMU]+/T,7*T\O/RB#)SM3%Q]+!P\G)(-76Q2#.Q2#7V<?,T<3)U"#"Q=K/PLS!
XMWL[/RBX-"NO/SL7>SL\L(,_"W]'3SM'%U-/1(-S4SR#7SM74TL7.SLG-R2#0
XMTL_#Q=/3P<W)(-<@VL'0P<3.S\77TL_0Q<K3R\G((-/4TL'.P<@N#0KTS]0@
XMQL'+U"P@WM3/(-#2P<O4R=[%T\O)(-#/U]/ Q-4@SL'>P<S)(-?$TM7'(,?/
XMU\_2R=38(,[%(,_"(,G.U,7'TL'#R<DL#0K!(,\@SL'#R<_.P<S8SMG((,G.
XMU,72Q=/!R"P@U-+%PL_7P=38(,[%(-+!T]#!R,[5U-@@S\O.SR#7(,W)TBP@
XMP2#/T-73U,G4V T*V]3/TMDL(-?/(,W.S\?/S2#1U\S1Q=33T2#3S,7$T]37
XMR<7-(-#/T-+!U\S%SLG1(,_"W<73U-?%SL[/Q\\@S<[%SLG1+ T*P<O4R=?)
XMR=K!P\G)(,[!P\G/SL',R=/4R=[%T\O)R"#'TM70T,G2S]?/RRP@T,_7T\7-
XMQ=/4SL_'SR#5R-7$V\7.R=$-"MS+S\[/S<G>Q=/+S\H@T\G4U<'#R<DN#0H@
XM(" @[L\L(-<@T]?/P"#/WL72Q<38+"#7T\4@W-3)(-#2S\/%T]/9(-#2T<W/
XM(-/7T=K!SMD@TR#)VLW%SL7.R<7-#0K0TLG7V=[.S\?/(,_+TM76Q<[)T2#Z
XMP=#!Q,[/RB#EU\'2S]#9+B @[\[!(,_+P=K!S,'3V"#,R<//S2#+(,S)P]4@
XMTPT*SL73U,'"R<S8SMG-R2#)(,[%T-+%Q-/+P=K5Q<W9S<D@T,_3U,O/S<W5
XMSLG3U,G>Q=/+R<W)(,_"W<73U-?!S<DN("#^Q<T-"L3!S-C;Q2P@U,7-(,+/
XMS-C;R<T@T,_$S]K2Q<[)Q<T@VL'0P<3.V<H@S\+9U\'4Q<S8(-/-S]32R=0@
XMUR#)R"#3U,_2S\[5+ T*SL73S-7;P=?;R=/8(-#2S\?.S]K/UR#/(,?/U,_7
XMT=W)R-/1(-K!R,S%T]3.U=38(.77TL_0U2#-P=/3S]?9R"#.P=O%T]37R='(
XM#0K-R<?2P<[4S]<@R2#0TL_>R<@@SL70TLG1U,[/T]31R"X-"B @("#SP<W9
XMQ2#+TM70SMG%+"#2P=K5S<7%U-/1+"#/ULG$P<#4T]$@T\\@T]3/TL_.V2#"
XMV=?;Q<?/(///U\74T\O/Q\\-"O//P-K!+"#+S]3/TMG*(-[!W<4@U]/%Q\\@
XMU\_3T-+)SLG-P<74T]$@R\'+(-#/U,7.P\G!S-C.V<H@R=/4S][.R<L@T<3%
XMTL[9R T*R\'4P=/4TL_&(,D@R]+/U\'7V<@@S<76SL'#R<_.P<S8SMG((,O/
XMSL;,R<O4S]<N("#WS]0@U\'-(,D@T,_>U\$@Q,S1(,[/U]G(#0K3U-+!R,_7
XM.R#7S]0@R2#)T]3/R\D@U\[%VL'0SL_'SR#+S\[3Q=+7P=3)U\[/Q\\@R]+%
XMSL$@VL'0P<3.S\?/(,_"W<73U-?!+ T*Q<?/(-31U,_4Q<[)T2#+(,+/S,7%
XM(-;%T]3+S\W5(-+%ULG-U2P@P2#:P<_$SL\@R2#+(,[/U\_-U2#2P=K$Q<S)
XMU,7,V,[/S=4-"MK!SL'7Q=/5+"#+S]3/TMG*(,+9(,_'TL'$R<P@Q<?/(,_4
XM(,[!V\7*(-[!T]3)(-/7Q=3!+@T*(" @(/#2R<W%TB#GQ=+-P<[)R2P@TL7;
XMR=?;Q<H@UR#/U-?%U"#.P2#0S\?2S\W9(-?9Q-?/TLG4V"#:P2#3U\_)(-#2
XMQ<3%S-D-"M39T]'>R2#2U<W9SM/+R<@@P]G'P<X@R2#$P=;%(,G:S<7.R=38
XM(,O/SM/4R=35P\G (-,@U,7-+"#>U,_"V2#/Q]+!SLG>R=38#0K>R=/,SR#0
XMTL74Q<[$Q<[4S]<@SL$@T,_,R=3)WL73R\_%(-7"Q=;)W<4L(-/7R<3%U,7,
XMV-/4U]7%U"#/(-3/S2P@WM3/#0K0TL'7T=W)Q2#:P=#!Q,[9Q2#+TM7'R2#7
XMV<[5UL3%SMD@TL7!Q\G2S]?!U-@@SL$@SL_7V<4@T]32P<C)+B @]\_:SLG+
XMP<74#0K7S]#2S],Z(,$@SL4@VL'3U,'7T=0@S,D@W-3)(-/4TL'(R2#7(-73
XMS,_7R='((-?/VLW/UL[/Q\\@U<C5Q-O%SLG1#0K<R\_.S\W)WL73R\_'SR#0
XMS\S/UL7.R=$@PL_,V-O)SM/4U\$@Q=?2S]#%RM/+R<@@Q\_3U<3!TM/4UR#0
XMTL_*U,D@R<@-"M[%TL7:(,+/S,7:SL7.SMG%(,G3T-G4P<[)T2#.P2#0TLG7
XMQ=+6Q<[.S]/4V"#)Q,71S2#$Q<W/R]+!U,G)/PT*(" @(/<@T-+)U\72UL7.
XMSL_3U,D@Q<H@U2#.V<[%V\[)R"#0TL'7T=W)R"#<S,G4(/K!T,'$P2#3S\W.
XMQ<[)RB#.Q=0N#0KNSR#+P<O)S2#"U<3%U"#.S]?/Q2#0S\O/S,7.R<4@T,_,
XMR=3)WL73R\G((,3%T=3%S,7*+"#.Q2#0S\K$H]0@S,D@S\[/#0K.P2#0S]?/
XMQ-4@U2#0S]#2P=?%U]O%RB#>P=/4R2#/PMW%T]37P3\@(/#/SM'4SL\L(-[4
XMSR#<U,_4(-?/T-+/TR#>P=W%#0K7T\7'SR#3S]#2S]?/UL3!Q=33T2#4TL77
XMS];.V<T@U]K'S-'$S\T@UR#3U,_2S\[5(.?%TLW!SLG)+"#0TL77TL'=P<#=
XMQ<K3T0T*T\7'S\3.T2#7(,3/S<G.R=+5P-W)RB#&P<O4S](@Q=?2S]#%RM/+
XMS\H@T\/%SMDN#0H@(" @(" @(" @(" @(" @(" @(" @*,_+S\[>P<[)Q2#3
X*S,7$U<74*0T*  H@
X 
Xend
END_OF_FILE
  if test 9718 -ne `wc -c <'example.ko8.UU'`; then
    echo shar: \"'example.ko8.UU'\" unpacked with wrong size!
  else
    echo shar: Uudecoding \"'example.ko8'\" \(7030 characters\)
    cat example.ko8.UU | uudecode
    if test 7030 -ne `wc -c <'example.ko8'`; then
      echo shar: \"'example.ko8'\" uudecoded with wrong size!
    else
      rm example.ko8.UU
    fi
  fi
  # end of 'example.ko8.UU'
fi
if test -f 'translit.txt.B' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'translit.txt.B'\"
else
  echo shar: Extracting \"'translit.txt.B'\" \(33510 characters\)
  sed "s/^X//" >'translit.txt.B' <<'END_OF_FILE'
X
X
XJKL                 Last change: 23-Jan-1993                   13
X
X
X
X
X
X
XTRANSLIT(JKL)              Version 1.0              TRANSLIT(JKL)
X
X
X
X            sequence of the new set is detected.
X        For each input character set, you have to specify a  line
X        consisting of 6 strings/expressions separated by spaces:
X          SO-match SO-subs NEST-up NEST-down SI-match SI-subs
X        where:
X        SO-match --- the string or  regular  expression  for  the
X          SHIFT-OUT  sequence  for  the current character set. If
X          detected, the input character set is  changed  to  this
X          set.
X        SO-subs --- this is usually an empty  string  (i.e.,  the
X          input  sequence  matching  SO-match is removed). But it
X          can be a replacement string or a  substitution  expres-
X          sion,  which  will  substitute  the  original  matching
X          SHIFT-OUT sequence.
X        NEST-up --- this string (or a regular expression) is usu-
X          ally an empty string). However, it can be used to count
X          brackets for detection of SHIFT-IN bracket, if SHIFT-IN
X          sequence is not unique. Its use is explained below.
X        NEST-down --- a counterpart of NEST-up. It  is  explained
X          later.
X        SI-match --- when a sequence in an input file matches the
X          string  or  regular  expression given as SI-match for a
X          current input character set, the  input  character  set
X          number is restored to the previous set. Note, that only
X          SI-match for a current set is matched with input  char-
X          acters.
X        SI-subs --- this is usually an empty string (i.e.,  input
X          sequence  which matched SI-match is removed), but if it
X          is not, the input characters which matched the SI-match
X          are replaced with the SI-subs.
X
X        The KOI7 case described above may be specified as:
X             2                     # 2 input sets
X             ""      ""      ""      ""      ""      ""      # Latin(set 1)
X             "\016"  ""      ""      ""      "\017"  ""      # Cyrillic(set 2)
X                      or
X             2                     # 2 sets
X             "\017"  ""      ""      ""      ""      ""      # Latin(set 1)
X             "\016"  ""      ""      ""      ""      ""      # Cyrillic(set 2)
X        Before the input is processed, the program is initialized
X        to the character set of the first set. In the above case,
X        it is important, since declaration:
X             2                     # 2 sets
X             "\016"  ""      ""      ""      ""      ""      # Cyrillic(set 1)
X             "\017"  ""      ""      ""      ""      ""      # Latin(set 2)
X        would be wrong and would mess  up  the  Latin  characters
X        preceding first Cyrillic sequence.
X
X        The nesting sequences are used only for  specific  situa-
X        tions.  I  needed  them  to write a transliteration table
X        from LaTeX to KOI8.  In LaTeX the { } pair  is  used  for
X        grouping and appears frequently in the text. The sequence
X
X
X
XJKL                 Last change: 23-Jan-1993                   14
X
X
X
X
X
X
XTRANSLIT(JKL)              Version 1.0              TRANSLIT(JKL)
X
X
X
X        of cyrillic characters is also a  group  in  LaTeX.   The
X        SHIFT-OUT  sequence  for  Russian letters in LaTeX is (at
X        least in my case): "{\cyr ", and the end of  the  Russian
X        letters  is  marked  by  "}",  but  the "}" has to be the
X        bracket matching the opening "{" in "{\cyr ",   not  just
X        any  bracket.  For this reason, my SHIFT-OUT/IN entry was
X        in this case:
X             "{\cyr "  ""  "{"  "}"  "}"  ""   # Cyrillic codes
X        Whenever the "{\cyr " was found, the program  zeroes  the
X        counter.   It adds +1 to it, when NEST-up sequence (i.e.,
X        the "{" here) is found, and subtracts 1 from it, when the
X        NEST-down  sequence is found (i.e., the "}").  The check-
X        ing for a SHIFT-IN sequence (i.e., the "}") for  cyrillic
X        set  is  done  only when the counter value is zero (i.e.,
X        all pairs inside the cyrillic text are matched. In  fact,
X        the  process  is  more complicated than that (the counter
X        for an opened character set is placed on the stack),  but
X        these are details you can find in the code itself.
X
X     Ad.7) Number of output "character sets". This  is  analogous
X        to  the  input  case.   The characters sent to output may
X        belong to different sets. For example, when the character
X        (or the sequence) from set 2 is followed by the character
X        (or the sequence) from set 1, the program first sends the
X        SHIFT-IN sequence for set 2 (if it is not empty) and then
X        the SHIFT-OUT sequence for set 1 (if it is not empty). If
X        the  output character (or sequence) is assigned to set 0,
X        then no SHIFT-IN/SHIFT-OUT sequences are sent to output.
X        If there is only one set of output characters, you should
X        specify 0.  Note that you may have several input sets and
X        several output sets, though this is  rare.  Usually,  you
X        have  one  input  set  and many output character sets, or
X        vice versa. Again, if you have only one output  set,  you
X        do not have any SHIFT-IN/SHIFT-OUT sequences, since those
X        are send to output only when a  set  number  is  changed.
X        But you are free to experiment.
X
X     Ad.8) SHIFT-OUT/SHIFT-IN sequences for each output character
X        set.  It is similar to the input case, however, the NEST-
X        in and NEST-up sequences are not used here. Again, before
X        any  text  is sent to output, the character set specified
X        as the first one is assumed.  If  SHIFT-OUT/IN  sequences
X        are  not  used  (i.e., you have only one output character
X        set), you  will  not  have  any  SHIFT-OUT/SHIFT-IN  data
X        lines.   The  KOI8  (single  character set containing all
X        Latin and Russian letters) to KOI7 (the set  using  over-
X        lapping codes switched by SHIFT-OUT/IN sequences) conver-
X        sion could be therefore  accomplished  by  the  following
X        table:
X             2         # 2 output sets
X             ""        ""        # Latin Letters
X             "\016"    "\017"    # Russian Letters case
X
X
X
XJKL                 Last change: 23-Jan-1993                   15
X
X
X
X
X
X
XTRANSLIT(JKL)              Version 1.0              TRANSLIT(JKL)
X
X
X
X     Ad.9) Transliteration  table  for  individual  character  or
X        their  sequences.   It  is a core of your transliteration
X        data.  There are 4 columns in the transliteration table:
X           (inp_set_no) (inp_seq) (out_set_no) (out_seq)
X        These  4   columns   are   separated   by   spaces.   The
X        (input_set_number) corresponds to the input character set
X        number as specified above  for  input  SHIFT-OUT/SHIFT-IN
X        data,  or zero.  If zero is used (even if number of input
X        sets is not zero), the (input_sequence)  will  be  always
X        matched,  irrespectively  of  the current input character
X        set imposed by the SHIFT-OUT sequence.  This  is  useful,
X        since  some  characters  are  universal (e.g., new lines,
X        spaces, pluses,  minuses,  etc.)  irrespectively  of  the
X        current  character  set.   The  (input_sequence)  is  the
X        sequence of characters to be matched with  characters  in
X        the  input  file,  and if found (within the character set
X        specified) it is replaced by  the  (output_sequence)  and
X        sent  to  output  (i.e., the matching is interrupted, the
X        (output_sequence) sent to ouput, the input  file  pointer
X        is  moved  to  the  first  character  after  the  matched
X        sequence and matching resumes).  The  (output_set_number)
X        specifies the output character set. When the output char-
X        acter set changes during transliteration, the appropriate
X        SHIFT-IN  sequence  of  the  previous set and the current
X        set's  SHIFT-OUT  sequence  is  sent   to   output.   The
X        (output_set_number)  may  also be zero (even if number of
X        output sets is not zero). In this case, the current  out-
X        put  set  status  is  not  changed,  and  no SHIFT-IN/OUT
X        sequences is sent to output. Lastly, the output set  code
X        may  be  -1, -2 or -3.  In this case, the substitution is
X        performed within input string that matched but the output
X        sequence  is not sent to the output yet. Depending on the
X        code, the following action is performed:
X          -1  --- program makes the  substitution  in  the  input
X            string  (i.e.,  substitutes  the matching string with
X            the input string in the input buffer).  It  does  not
X            send the output sequence to the output, but continues
X            matching  input  sequences  following  the  currently
X            matched one.
X          -2  --- like code -1, but matching is resumed from  the
X            first sequence on the list.
X          -3  --- like code -1, but matching is resumed from  the
X            input SHIFT-OUT/IN sequences.
X        E.g., if the unprocessed text in the input file is:
X             mental procedure was not successful since..........
X        and there was a line in transliteration table:
X             0  "me"   -1  "you"
X        the input text would be changed to:
X             yountal procedure was not successful since..........
X        and all remaining matching data would be applied to  this
X        text,  rather  than original text.  The -2 code backsteps
X        to  the  point  where  the  matching  of  transliteration
X
X
X
XJKL                 Last change: 23-Jan-1993                   16
X
X
X
X
X
X
XTRANSLIT(JKL)              Version 1.0              TRANSLIT(JKL)
X
X
X
X        starts.  The -3 code backsteps even further, to the point
X        where the input  SHIFT-OUT  and  SHIFT-IN  sequences  are
X        matched.   Since  the order of sequences to match is cru-
X        cial here, for the case of output set code -1/-2/-3  even
X        one-character  input  sequences  are matched in the order
X        specified.  BE CAREFUL  HERE.  You  may  create  infinite
X        loops.  If you use code -2/-3, be sure that the resulting
X        sequence after substitution with the code -2/-3, will not
X        match previous sequences with codes -2/-3.
X        The (output_sequence) is a sequence which substitutes the
X        corresponding  (input_sequence).  If (output_sequence) is
X        "" (i.e., empty string) then (input_sequence)  is  effec-
X        tively  deleted.  The (input_sequence)s are compared with
X        input in the order specified  unless  backstepping  -2/-3
X        code  is  used  (the  matching  is  done  from  the first
X        sequence again). I use the code -1 e.g.,  to  dehyphenate
X        words  when  changing to LaTeX.  Code -2 is useful if you
X        want to skip next comparisons, and the resulting  substi-
X        tution string will match earlier matching expressions.  I
X        do not see any use for the code -3, but you may have one.
X        The  order  for  multicharacter  sequences  is  therefore
X        important (the single character sequences are always com-
X        pared  after  all  multicharacter  sequences,  and can be
X        therefore  put  anywhere).   The  longer   multicharacter
X        sequences should be specified before shorter ones, unless
X        they are some "preprocessing" steps with codes  -1/-2/-3.
X        The  order  may sometimes be crucial.  If you need single
X        character sequences matched in a  specific  order,  enter
X        them as regular expressions, i.e., as {c} instead of "c".
X        In short, the multicharacter input sequences and  regular
X        expressions are matched to input text in the order speci-
X        fied. For the sake of efficiency,  the  single  character
X        input  sequences  (with exception of output set code -1/-
X        2/-3) and input lists are handled as a case of  remapping
X        and  are  matched in the order of character codes associ-
X        ated with them.  If you specify  the  same  single  input
X        character  twice  for a given input set, the program will
X        complain.  The following combinations of input and output
X        sequences are allowed:
X          Input Sequence        Output Sequence
X          "plain string"        only "plain string"
X          [list]                [list] or "plain string"
X          {regular expression}  {substitution expression} or
X                                 "plain string"
X        When match is found, the matching sequence is removed and
X        substituted  with  an output sequence. If this results is
X        changing the current output character set, the  appropri-
X        ate  SHIFT-IN/SHIFT-OUT pair is sent to the output before
X        the transliterated output sequence. If list  is  used  as
X        the input sequence, you may either use:
X        a) plain string as output  sequence.  In  this  case,  if
X          current  input  character belongs to the input list, it
X
X
X
XJKL                 Last change: 23-Jan-1993                   17
X
X
X
X
X
X
XTRANSLIT(JKL)              Version 1.0              TRANSLIT(JKL)
X
X
X
X          is replaced by the output string. I use  it  to  delete
X          ranges  of characters which do not have any correspond-
X          ing characters in the output set (e.g.,  some  graphics
X          characters).  In  this case, the order of characters on
X          the input list is not important.
X        b) if the output string is also a list  then  it  has  to
X          contain  exactly  the  same number of characters as the
X          input list. In this case, the 1st  character  from  the
X          input  list  is  replaced by the 1st character from the
X          output list, the 2nd one by the 2nd  one,  etc.  There-
X          fore, the order of characters is important.
X        Theoretically,  if  there  is  one-to-one  correspondence
X        between characters in the input set and characters in the
X        output set, you can make the conversion by using a single
X        line consisting of two lists. But it looks ugly... And is
X        difficult to read.  And for the program, the substitution
X        takes  the  same  time,  if  the characters are specified
X        separately, or when they are specified as matching lists.
X        If  regular expression is used to match the input charac-
X        ters, the matching sequence may be replaced  by  a  plain
X        string  or  a  substitution  string,  which was described
X        above.
X           Examples:
X              2      "CCCP"    0         ""
X           will delete all occurrences of  CCCP  from  the  input
X           file (but not Cccp or CCCp) for input set 2.
X
X              0      "\0xD1"   0         "ya"
X           will replace all occurrences of character of the  code
X           \0xD1 with a two letter sequence "ya".
X
X              0      \0xD1     2         q
X           will replace all characters \0xD1 with a character "q"
X           and output SHIFT-IN/OUT sequence if necessary.
X
X              2      "q"       0         "\0xD1"
X           will replace letter q (if the current input set is  2)
X           with a code \0xD1.
X
X              0      "\0xD1"   2         "ya"
X           will replace code \0xD1 with a sequence  ya  (assuming
X           that SHIFT-OUT and SHIFT-IN sequences for output set 2
X           are: {\cyr and }, respectively,  you  will  get  {\cyr
X           ya}).
X
X           If a character is not specified in the transliteration
X           table,  it  will be output as is, i.e., it corresponds
X           to a line:
X              0      "c"       0         "c"
X           where c is the character. If you want to  delete  cer-
X           tain  characters, you need to explicitly specify this,
X           e.g.:
X
X
X
XJKL                 Last change: 23-Jan-1993                   18
X
X
X
X
X
X
XTRANSLIT(JKL)              Version 1.0              TRANSLIT(JKL)
X
X
X
X              0      [a-z]     0         ""
X           will delete all lower  case  Latin  letters  from  the
X           text.
X        Before you decide  to  create  your  own  transliteration
X        file,  please  examine existing transliteration files. Do
X        yourself (and others) a favor --- put as many comments as
X        possible  there. If you allow others to use your transli-
X        teration files,  please  include  your  name  and  e-mail
X        address and file creation date.
X
X
X    Program  matches the sequences in a specific order:
X       1) Match/substitute input SHIFT-OUT sequences
X       2) If matched, save current set and start new one
X       3) If matched, zero nest counter for NEST sequences
X       4) Match/substitute current set SHIFT-IN-sequence
X       5) If matched, restore previous set number
X       6) If matched, restore previous set nest counter
X       7) Match/substitute transliteration sequences
X       8) If matched and code = -1  make  substitution  in  input
X        buffer and continue matching the next sequence.
X       9) If matched and code = -2 make substitution and goto 7)
X      10) If matched and code = -3 make substitution and goto 1)
X      11) Match (no substitution) NEST-up and NEST-down to  input
X        buffer
X      12) If NEST-up matched, increment counter for current set
X      13) If NEST-down matched, decrement counter for current set
X      14) If match in 7) send substitute sequence to output
X      15) If no match in 7) (or code  -1)  output  current  input
X        character
X      16) Advance input pointer to point at new characters
X      17) If End of File, break
X      18) Goto 1)
X
X
XASCII CHARACTER CODES
X       dec hx oct ch     dec   hx oct ch
X
X         0 00 000 ^@ NUL  64   40 100 @
X         1 01 001 ^A SOH  65   41 101 A
X         2 02 002 ^B STX  66   42 102 B
X         3 03 003 ^C ETX  67   43 103 C
X         4 04 004 ^D EOT  68   44 104 D
X         5 05 005 ^E ENQ  69   45 105 E
X         6 06 006 ^F ACK  70   46 106 F
X         7 07 007 ^G BEL  71   47 107 G
X         8 08 010 ^H BS   72   48 110 H
X         9 09 011 ^I HT   73   49 111 I
X        10 0a 012 ^J LF   74   4a 112 J
X        11 0b 013 ^K VT   75   4b 113 K
X        12 0c 014 ^L FF   76   4c 114 L
X        13 0d 015 ^M CR   77   4d 115 M
X
X
X
XJKL                 Last change: 23-Jan-1993                   19
X
X
X
X
X
X
XTRANSLIT(JKL)              Version 1.0              TRANSLIT(JKL)
X
X
X
X        14 0e 016 ^N SO   78   4e 116 N
X        15 0f 017 ^O SI   79   4f 117 O
X        16 10 020 ^P DLE  80   50 120 P
X        17 11 021 ^Q DC1  81   51 121 Q
X        18 12 022 ^R DC2  82   52 122 R
X        19 13 023 ^S DC3  83   53 123 S
X        20 14 024 ^T DC4  84   54 124 T
X        21 15 025 ^U NAK  85   55 125 U
X        22 16 026 ^V SYN  86   56 126 V
X        23 17 027 ^W ETB  87   57 127 W
X        24 18 030 ^X CAN  88   58 130 X
X        25 19 031 ^Y EM   89   59 131 Y
X        26 1a 032 ^Z SUB  90   5a 132 Z
X        27 1b 033 ^[ ESC  91   5b 133 [
X        28 1c 034 ^\ FS   92   5c 134 \
X        29 1d 035 ^] GS   93   5d 135 ]
X        30 1e 036 ^^ RS   94   5e 136 ^
X        31 1f 037 ^_ US   95   5f 137 _
X        32 20 040    SP   96   60 140 `
X        33 21 041 !       97   61 141 a
X        34 22 042 "       98   62 142 b
X        35 23 043 #       99   63 143 c
X        36 24 044 $      100   64 144 d
X        37 25 045 %      101   65 145 e
X        38 26 046 &      102   66 146 f
X        39 27 047 '      103   67 147 g
X        40 28 050 (      104   68 150 h
X        41 29 051 )      105   69 151 i
X        42 2a 052 *      106   6a 152 j
X        43 2b 053 +      107   6b 153 k
X        44 2c 054 ,      108   6c 154 l
X        45 2d 055 -      109   6d 155 m
X        46 2e 056 .      110   6e 156 n
X        47 2f 057 /      111   6f 157 o
X        48 30 060 0      112   70 160 p
X        49 31 061 1      113   71 161 q
X        50 32 062 2      114   72 162 r
X        51 33 063 3      115   73 163 s
X        52 34 064 4      116   74 164 t
X        53 35 065 5      117   75 165 u
X        54 36 066 6      118   76 166 v
X        55 37 067 7      119   77 167 w
X        56 38 070 8      120   78 170 x
X        57 39 071 9      121   79 171 y
X        58 3a 072 :      122   7a 172 z
X        59 3b 073 ;      123   7b 173 {
X        60 3c 074 <      124   7c 174 |
X        61 3d 075 =      125   7d 175 }
X        62 3e 076 >      126   7e 176 ~
X        63 3f 077 ?      127   7f 177 DEL
X
X
X
X
X
XJKL                 Last change: 23-Jan-1993                   20
X
X
X
X
X
X
XTRANSLIT(JKL)              Version 1.0              TRANSLIT(JKL)
X
X
X
XCONVERSION: DECIMAL<-->OCTAL<-->HEX.
X      000  000  00     064  100  40     128  200  80     192  300  C0
X      001  001  01     065  101  41     129  201  81     193  301  C1
X      002  002  02     066  102  42     130  202  82     194  302  C2
X      003  003  03     067  103  43     131  203  83     195  303  C3
X      004  004  04     068  104  44     132  204  84     196  304  C4
X      005  005  05     069  105  45     133  205  85     197  305  C5
X      006  006  06     070  106  46     134  206  86     198  306  C6
X      007  007  07     071  107  47     135  207  87     199  307  C7
X      008  010  08     072  110  48     136  210  88     200  310  C8
X      009  011  09     073  111  49     137  211  89     201  311  C9
X      010  012  0A     074  112  4A     138  212  8A     202  312  CA
X      011  013  0B     075  113  4B     139  213  8B     203  313  CB
X      012  014  0C     076  114  4C     140  214  8C     204  314  CC
X      013  015  0D     077  115  4D     141  215  8D     205  315  CD
X      014  016  0E     078  116  4E     142  216  8E     206  316  CE
X      015  017  0F     079  117  4F     143  217  8F     207  317  CF
X      016  020  10     080  120  50     144  220  90     208  320  D0
X      017  021  11     081  121  51     145  221  91     209  321  D1
X      018  022  12     082  122  52     146  222  92     210  322  D2
X      019  023  13     083  123  53     147  223  93     211  323  D3
X      020  024  14     084  124  54     148  224  94     212  324  D4
X      021  025  15     085  125  55     149  225  95     213  325  D5
X      022  026  16     086  126  56     150  226  96     214  326  D6
X      023  027  17     087  127  57     151  227  97     215  327  D7
X      024  030  18     088  130  58     152  230  98     216  330  D8
X      025  031  19     089  131  59     153  231  99     217  331  D9
X      026  032  1A     090  132  5A     154  232  9A     218  332  DA
X      027  033  1B     091  133  5B     155  233  9B     219  333  DB
X      028  034  1C     092  134  5C     156  234  9C     220  334  DC
X      029  035  1D     093  135  5D     157  235  9D     221  335  DD
X      030  036  1E     094  136  5E     158  236  9E     222  336  DE
X      031  037  1F     095  137  5F     159  237  9F     223  337  DF
X      032  040  20     096  140  60     160  240  A0     224  340  E0
X      033  041  21     097  141  61     161  241  A1     225  341  E1
X      034  042  22     098  142  62     162  242  A2     226  342  E2
X      035  043  23     099  143  63     163  243  A3     227  343  E3
X      036  044  24     100  144  64     164  244  A4     228  344  E4
X      037  045  25     101  145  65     165  245  A5     229  345  E5
X      038  046  26     102  146  66     166  246  A6     230  346  E6
X      039  047  27     103  147  67     167  247  A7     231  347  E7
X      040  050  28     104  150  68     168  250  A8     232  350  E8
X      041  051  29     105  151  69     169  251  A9     233  351  E9
X      042  052  2A     106  152  6A     170  252  AA     234  352  EA
X      043  053  2B     107  153  6B     171  253  AB     235  353  EB
X      044  054  2C     108  154  6C     172  254  AC     236  354  EC
X      045  055  2D     109  155  6D     173  255  AD     237  355  ED
X      046  056  2E     110  156  6E     174  256  AE     238  356  EE
X      047  057  2F     111  157  6F     175  257  AF     239  357  EF
X      048  060  30     112  160  70     176  260  B0     240  360  F0
X      049  061  31     113  161  71     177  261  B1     241  361  F1
X      050  062  32     114  162  72     178  262  B2     242  362  F2
X
X
X
XJKL                 Last change: 23-Jan-1993                   21
X
X
X
X
X
X
XTRANSLIT(JKL)              Version 1.0              TRANSLIT(JKL)
X
X
X
X      051  063  33     115  163  73     179  263  B3     243  363  F3
X      052  064  34     116  164  74     180  264  B4     244  364  F4
X      053  065  35     117  165  75     181  265  B5     245  365  F5
X      054  066  36     118  166  76     182  266  B6     246  366  F6
X      055  067  37     119  167  77     183  267  B7     247  367  F7
X      056  070  38     120  170  78     184  270  B8     248  370  F8
X      057  071  39     121  171  79     185  271  B9     249  371  F9
X      058  072  3A     122  172  7A     186  272  BA     250  372  FA
X      059  073  3B     123  173  7B     187  273  BB     251  373  FB
X      060  074  3C     124  174  7C     188  274  BC     252  374  FC
X      061  075  3D     125  175  7D     189  275  BD     253  375  FD
X      062  076  3E     126  176  7E     190  276  BE     254  376  FE
X      063  077  3F     127  177  7F     191  277  BF     255  377  FF
X
X
X
XINSTALLATION
X     Program is given in a source form. It was tried under  UN*X,
X     VMS and MS-DOS systems and ran. The file readme.doc contains
X     the details on how to obtain  the  whole  package.  You  can
X     retrieve  this  file from anonymous ftp on kekule.osc.edu in
X     the directory /pub/russian/translit.  You can also obtain it
X     via e-mail by sending a message:
X       get translit/readme.doc from russian
X     to OSCPOST@osc.edu or OSCPOST@OHSTPY.BITNET.
X
X     The source of the program consists of several files:
X
X     paths.h
X          must be edited before compilation. It contains its  own
X          comments what to do. The defines in this file relate to
X          the operating system you are using and the default path
X          for searching transliteration table.
X
X     translit.c
X          It contains the main program.  This was intended to  be
X          a portable code.
X
X     reg_exp.h
X          the  include  file  for  regular  expression   matching
X          library   of  Henry  Spencer  from  the  University  of
X          Toronto. This regular expression package was posted  to
X          comp.sources.misc  (volume  3).  Also  4  patches  were
X          posted (in volumes: 3, 4, 4, 10). I applied the patches
X          to  the  original  code and made small modifications to
X          the code, which are marked in the source code.
X
X     reg_exp.c
X          the regular  expression  library  for  compilation  and
X          matching of regular expressions.
X
X     reg_sub.c
X
X
X
XJKL                 Last change: 23-Jan-1993                   22
X
X
X
X
X
X
XTRANSLIT(JKL)              Version 1.0              TRANSLIT(JKL)
X
X
X
X          the regular expression substitution routine.
X
X
X     Before you compile this program you have  to  edit  paths.h.
X     Read  comments  in the file.  During compilation, all source
X     code should reside in the current directory.
X     Then you may compile the program under UN*X  as  (for  exam-
X     ple):
X       cc -o translit translit.c reg_exp.c reg_sub.c
X     and copy the program translit  to  some  standard  directory
X     which  is in users' path (for example: /usr/local/bin). Then
X     you need to copy transliteration  tables  to  the  directory
X     which  you  have chosen in paths.h.  If you get errors, then
X     it is not OK. Please, report them to the  author  (with  all
X     the  gory  details:  error  message,  line  number, machine,
X     operating system, etc.).
X
X     Under VMS (VAXes) you need to compile it as:
X       cc translit
X       cc reg_exp
X       cc reg_sub
X       link translit+reg_exp+reg_sub,sys$library:vaxcrtl/lib
X     and before you can use the program, you  need  to  type  (or
X     better put into your LOGIN.COM file) a line:
X       translit == "$SYS$USER:[ME.TRA]TRANSLIT.EXE"
X     or whatever is the full  path  to  the  translit  executable
X     image which you created with LINK. Note the quotes and the $
X     sign in front of program path.
X
X     On an IBM-PC I used MicroSoft C 5.1 as:
X      cl /FeTRANSLIT /AL /FPc /W1  /F  5000  /Ox  /Gs  translit.c
X       reg_exp.c reg_sub.c
X
X
X
XRULES, CONDITIONS AND AUTHOR'S WHISHES
X     You can distribute this  code  and  associated  files  under
X     these conditions:
X         1) You will distribute all files (even if you think that
X         they  are  garbage).  You  may get the complete set from
X         anonymous      ftp      at       kekule.osc.edu       in
X         /pub/russian/translit.  You can also get the program and
X         associated files via e-mail. To get the instructions for
X         e-mail distribution send a line:
X                send translit/readme.doc from russian
X         to OSCPOST@osc.edu or  OSCPOST@OHSTPY.BITNET.   You  are
X         not  allowed  to distribute the incomplete distribution.
X         The following files should be present in  the  distribu-
X         tion:
X           alt-gos.rus         - ALT to GOSTCII table
X           alt-koi8.rus        - ALT to KOI8 table
X           example.alt.uu      - uuencoded example in ALT
X
X
X
XJKL                 Last change: 23-Jan-1993                   23
X
X
X
X
X
X
XTRANSLIT(JKL)              Version 1.0              TRANSLIT(JKL)
X
X
X
X           example.ko8.uu      - uuencoded example in KOI8
X           example.pho         - phonetic transliteration example
X           example.tex         - LaTeX example
X           gos-alt.rus         - GOSTCII to ALT table
X           gos-koi8.rus        - GOSTCII to KOI8 table
X           koi7-8.rus          - KOI7 to KOI8 table
X           koi7nl-8.rus        - KOI7 (no Latin) to KOI8 table
X           koi8-7.rus          - KOI8 to KOI7 table
X           koi8-alt.rus        - KOI8 to ALT table
X           koi8-gos.rus        - KOI8 to GOSTCII table
X           koi8-lc.rus         - KOI8 to Library of Congress table
X           koi8-phg.rus        - KOI8 to GOST transliteration
X           koi8-php.rus        - KOI8 to Pokrovsky transliteration
X           koi8-tex.rus        - KOI8 to LaTeX conversion
X           order.txt           - Order form for ordering the program
X           paths.h             - Include file for translit.c
X           phg-koi8.rus        - GOST transliteration to KOI8
X           pho-8sim.rus        - Simple phonetic to KOI8
X           pho-koi8.rus        - Various phonetic to KOI8
X           php-koi8.rus        - Pokrovsky to KOI8
X           readme.doc          - short description of the files
X           reg_exp.c           - regular expression code by Henry Spencer
X           reg_exp.h           - include for reg_exp.c and reg_sub.c
X           reg_sub.c           - regular expression code by H. Spencer
X           tex-koi8.rus        - LaTeX to KOI8
X           translit.c          - TRANSLIT main program
X           translit.ps         - TRANSLIT manual in PostScript
X           translit.1          - TRANSLIT manual in *roff
X           translit.txt        - Plain ASCII TRANSLIT manual
X
X         2) You may expand/change the files and the  program  and
X         distribute  modified  files,  provided  that  you do not
X         delete anything (you can always comment the  unnecessary
X         portions out) and clearly mark your changes. Please send
X         the copy of the modified version to the  author,  though
X         you  are not required to do so.  I will give you all the
X         credit for your enhancements. I simply wish  that  there
X         is  a  single point of distribution for this code, so it
X         is maintained to some extent. If you  create  additional
X         transliteration  definition  files, please, send them to
X         the author if you may. I will add them  to  the  program
X         distribution.  I  want  to  fix bugs and expand/optimize
X         this code, but I need your help.  I need  your  transli-
X         teration  files  for languages which I do not know or do
X         not use currently.  Your suggestions for improving docu-
X         mentation  are  most  welcome (I am not a native English
X         speaker).
X       3) You will not charge money for the program and/or  asso-
X         ciated files, except for media and copying costs. If you
X         want to sell it, contact the author first. Bear in  mind
X         that the regular expression package by Henry Spencer has
X         some  copyright  restrictions.   But  there  are   other
X
X
X
XJKL                 Last change: 23-Jan-1993                   24
X
X
X
X
X
X
XTRANSLIT(JKL)              Version 1.0              TRANSLIT(JKL)
X
X
X
X         regular expression packages which do not have these res-
X         trictions (which are not violated by this offering).
X       4) I will gladly help you with advice  on  compiling  this
X         software  and try to fix bugs when time allows. However,
X         if you want a ready to run executable, you need to order
X         it  for a very nominal fee from JKL ENTERPRISES, INC. as
X         described in the file order.txt which must be a part  of
X         a complete distribution.
X
X
XAUTHOR
X     Jan Labanowski, P.O. Box  21821,  Columbus,  OH  43221-0821,
X     USA.  E-mail: jkl@osc.edu, JKL@OHSTPY.BITNET.
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
XJKL                 Last change: 23-Jan-1993                   25
X
X
X
END_OF_FILE
  if test 33510 -ne `wc -c <'translit.txt.B'`; then
    echo shar: \"'translit.txt.B'\" unpacked with wrong size!
  elif test -f 'translit.txt.A' ; then
    echo shar: Combining  \"'translit.txt'\" \(68330 characters\)
    cat 'translit.txt.A' 'translit.txt.B' > 'translit.txt'
    if test 68330 -ne `wc -c <'translit.txt'`; then
      echo shar: \"'translit.txt'\" combined with wrong size!
    else
      rm translit.txt.A translit.txt.B 
    fi
  fi
  # end of 'translit.txt.B'
fi
echo shar: End of archive 7 \(of 10\).
cp /dev/null ark7isdone
MISSING=""
for I in 1 2 3 4 5 6 7 8 9 10 ; do
    if test ! -f ark${I}isdone ; then
	MISSING="${MISSING} ${I}"
    fi
done
if test "${MISSING}" = "" ; then
    echo You have unpacked all 10 archives.
    rm -f ark[1-9]isdone ark[1-9][0-9]isdone
else
    echo You still must unpack the following archives:
    echo "        " ${MISSING}
fi
exit 0
exit 0 # Just in case...
