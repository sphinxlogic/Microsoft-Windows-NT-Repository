Newsgroups: comp.sources.misc
From: jkl@osc.edu (Jan Labanowski)
Subject: v36i031:  translit - transliterate foreign alphabets, Part09/10
Message-ID: <1993Mar19.224622.12487@sparky.imd.sterling.com>
X-Md4-Signature: c1d18917b7254ecd6c57514d32d390e8
Date: Fri, 19 Mar 1993 22:46:22 GMT
Approved: kent@sparky.imd.sterling.com

Submitted-by: jkl@osc.edu (Jan Labanowski)
Posting-number: Volume 36, Issue 31
Archive-name: translit/part09
Environment: UNIX, MS-DOS, VMS


#! /bin/sh
# This is a shell archive.  Remove anything before this line, then feed it
# into a shell via "sh file" or similar.  To overwrite existing files,
# type "sh file -c".
# Contents:  gos-alt.rus koi7-8.rus koi7nl-8.rus koi8-7.rus koi8-lc.rus
#   koi8-phg.rus koi8-php.rus phg-koi8.rus php-koi8.rus
# Wrapped by kent@sparky on Fri Mar 19 16:00:15 1993
PATH=/bin:/usr/bin:/usr/ucb:/usr/local/bin:/usr/lbin ; export PATH
echo If this archive is complete, you will see the following message:
echo '          "shar: End of archive 9 (of 10)."'
if test -f 'gos-alt.rus' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'gos-alt.rus'\"
else
  echo shar: Extracting \"'gos-alt.rus'\" \(5932 characters\)
  sed "s/^X//" >'gos-alt.rus' <<'END_OF_FILE'
X# Jan Labanowski, jkl@osc.edu, Dec. 30, 1992
X# File gos_alt.rus
X
X# This is a transliteration data file for converting GOSTSCII 84
X# (approx. ISO-8859-5?) to ALT (Bryabrins alternativnyj variant)
X
X# To be used with translit.c program by Jan Labanowski
X
X   1            file version number
X
X   "    "      # string delimiters
X   [    ]      # list delimites
X   {    }      # regular expression delimiters
X
X
X#starting sequence
X""
X
X
X#ending sequence
X""
X
X   0     # number of input SHIFT sequences, only one set of input characters
X
X   0     # number of output SHIFT sequences, only one set of output characters
X  
X# conversion table
X# inp_set_numb  inp_seq        out_set_numb  out_seq
X      0          "\0xA1"          0         "\0xf0"  # capital Yo
X      0          "\0xF1"          0         "\0xf1"  # small yo
X      0          "\0xB0"          0         "\0x80"  # capital A               
X      0          "\0xB1"          0         "\0x81"  # capital Be              
X      0          "\0xB2"          0         "\0x82"  # capital Ve              
X      0          "\0xB3"          0         "\0x83"  # capital Ghe             
X      0          "\0xB4"          0         "\0x84"  # capital De              
X      0          "\0xB5"          0         "\0x85"  # capital Ie              
X      0          "\0xB6"          0         "\0x86"  # capital Zhe             
X      0          "\0xB7"          0         "\0x87"  # capital Ze              
X      0          "\0xB8"          0         "\0x88"  # capital I               
X      0          "\0xB9"          0         "\0x89"  # capital short I         
X      0          "\0xBA"          0         "\0x8a"  # capital Ka              
X      0          "\0xBB"          0         "\0x8b"  # capital El              
X      0          "\0xBC"          0         "\0x8c"  # capital Em              
X      0          "\0xBD"          0         "\0x8d"  # capital En              
X      0          "\0xBE"          0         "\0x8e"  # capital O               
X      0          "\0xBF"          0         "\0x8f"  # capital Pe              
X      0          "\0xC0"          0         "\0x90"  # capital Er              
X      0          "\0xC1"          0         "\0x91"  # capital Es              
X      0          "\0xC2"          0         "\0x92"  # capital Te              
X      0          "\0xC3"          0         "\0x93"  # capital U               
X      0          "\0xC4"          0         "\0x94"  # capital Ef              
X      0          "\0xC5"          0         "\0x95"  # capital Kha             
X      0          "\0xC6"          0         "\0x96"  # capital Tse             
X      0          "\0xC7"          0         "\0x97"  # capital Che             
X      0          "\0xC8"          0         "\0x98"  # capital Sha             
X      0          "\0xC9"          0         "\0x99"  # capital Shcha           
X      0          "\0xCA"          0         "\0x9a"  # capital hard sign (Ier) 
X      0          "\0xCB"          0         "\0x9b"  # capital Y (Iery)        
X      0          "\0xCC"          0         "\0x9c"  # capital soft sign Ierik 
X      0          "\0xCD"          0         "\0x9d"  # capital reverse round E 
X      0          "\0xCE"          0         "\0x9e"  # capital Yu              
X      0          "\0xCF"          0         "\0x9f"  # capital Ya              
X      0          "\0xD0"          0         "\0xa0"  # small a                 
X      0          "\0xD1"          0         "\0xa1"  # small be                
X      0          "\0xD2"          0         "\0xa2"  # small ve                
X      0          "\0xD3"          0         "\0xa3"  # small ghe               
X      0          "\0xD4"          0         "\0xa4"  # small de                
X      0          "\0xD5"          0         "\0xa5"  # small ie                
X      0          "\0xD6"          0         "\0xa6"  # small zhe               
X      0          "\0xD7"          0         "\0xa7"  # small z                 
X      0          "\0xD8"          0         "\0xa8"  # small i                 
X      0          "\0xD9"          0         "\0xa9"  # small short i           
X      0          "\0xDA"          0         "\0xaa"  # small ka                
X      0          "\0xDB"          0         "\0xab"  # small el                
X      0          "\0xDC"          0         "\0xac"  # small em                
X      0          "\0xDD"          0         "\0xad"  # small en                
X      0          "\0xDE"          0         "\0xae"  # small o                 
X      0          "\0xDF"          0         "\0xaf"  # small pe                
X      0          "\0xE0"          0         "\0xe0"  # small er                
X      0          "\0xE1"          0         "\0xe1"  # small es                
X      0          "\0xE2"          0         "\0xe2"  # small te                
X      0          "\0xE3"          0         "\0xe3"  # small u                 
X      0          "\0xE4"          0         "\0xe4"  # small ef                
X      0          "\0xE5"          0         "\0xe5"  # small kha               
X      0          "\0xE6"          0         "\0xe6"  # small tse               
X      0          "\0xE7"          0         "\0xe7"  # small che               
X      0          "\0xE8"          0         "\0xe8"  # small sha               
X      0          "\0xE9"          0         "\0xe9"  # small shcha             
X      0          "\0xEA"          0         "\0xea"  # small hard sign (ier)   
X      0          "\0xEB"          0         "\0xeb"  # small y (iery)          
X      0          "\0xEC"          0         "\0xec"  # small soft sign (ierik) 
X      0          "\0xED"          0         "\0xed"  # small reverse rounded e 
X      0          "\0xEE"          0         "\0xee"  # small yu                
X      0          "\0xEF"          0         "\0xef"  # small ya                
END_OF_FILE
  if test 5932 -ne `wc -c <'gos-alt.rus'`; then
    echo shar: \"'gos-alt.rus'\" unpacked with wrong size!
  fi
  # end of 'gos-alt.rus'
fi
if test -f 'koi7-8.rus' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'koi7-8.rus'\"
else
  echo shar: Extracting \"'koi7-8.rus'\" \(8116 characters\)
  sed "s/^X//" >'koi7-8.rus' <<'END_OF_FILE'
X# Jan Labanowski, jkl@osc.edu, Dec. 30, 1992
X# File koi7_8.rus
X
X# This is a transliteration data file for converting from KOI7 to
X# KOI8 (RELCOM-GOST 19768-74). The KOI7 character codes for Russian letters
X# overlap with Latin letters. To mark what is in Russian and what in English,
X# The SHIFT-OUT and SHIFT-IN characters are used: The SHIFT-OUT and SHIFT-IN 
X# switch between Latin and Russian character set. The SHIFT-OUT switches
X# to Russian letters. If the sequence of Russian characters does not start
X# with the SHIFT-OUT character, it will be treated as English text!
X# The SHIFT-OUT character is CTRL-N (\14 = \0x0E = \0o16).
X# The SHIFT-IN character is CTRL-O (\15 = \0x0F = \0o17). It switches back to
X# Latin characters. 
X# If the SHIFT-OUT character is not present, whole file is assumed to be
X# written in Latin alphabet.
X# On the practical side: The KOI7 characters are frequently obtained
X# from KOI8 character set as a result of transmission through the network.
X# In most cases, the electronic-mail strips the 8th bit of KOI8 character
X# set changing it to KOI7. The problem is that in this case, there is no
X# SHIFT-IN and SHIFT-OUT codes to signal which characters are Latin and
X# which are Russian. In this case, buy using the editor, YOU HAVE TO ENCLOSE
X# RUSSIAN TEXT inside the appropriate SHIFT-OUT and SHIFT-IN sequence.
X# To obtain a true KOI7 file, these should be CTRL-N and CTRL-O, respectively.
X# However, It is sometimes difficult to obtain this control characters within
X# an editor. In this case, you may use your own character, but they should
X# not apear elsewhere in the text. Unfortunately, most "good" characters
X# are taken. I think that it is better to use a two-character sequence in
X# this situation. You are free to use your own, but I would suggest that you
X# stick with {{ (as SHIFT-OUT) and }} as SHIFT-IN (they correspoind to:
X# sh-sh and shch-shch in KOI7). Of course, if they appear in your KOI7
X# text you need to use something else. To use these characters, you need to
X# make following changes in the section of this file where input SHIFT-OUT/IN
X# sequences are read in:
X# 1) uncomment (i.e., delete # character in the first column):
X#  #   "{{"    ""    ""    ""    "}}"      ""         # Russian letters {{...}}
X# 2) comment (i.e., put # in the first column)
X#  "\0x0E"  ""    ""    ""    "\0x0F"   ""         # Russian letters ^N...^O
X
X
X# To be used with translit.c program by Jan Labanowski
X
X   1            file version number
X
X   "    "      # string delimiters
X   [    ]      # list delimites
X   {    }      # regular expression delimiters
X
X
X#starting sequence
X""
X
X
X#ending sequence
X""
X
X   2     # number of input SHIFT sequences, only one set of input characters
X   ""      ""    ""    ""    ""        ""         # Latin characters
X   "\0x0E"  ""    ""    ""    "\0x0F"   ""         # Russian letters ^N...^O
X#   "{{"     ""    ""    ""    "}}"      ""         # Russian letters {{...}}
X
X   0     # number of output SHIFT sequences, only one set of output characters
X  
X# conversion table
X#   ASCII characters (set 1) no-change
X#   Russian letters have to be entered explicitly (we could use a simple
X#   range like:
X#   2  [#$"@-~]  0   [\0xA3\0xB3\0xFF\0xC0-\0xFE]
X#  but then we would miss the nice table for the humans).
X
X# inp_set_numb  inp_seq        out_set_numb  out_seq
X      1    [\0x21-\0x7F]          0  [\0x21-\0x7F]     #Pass  ASCII, no change
X
X# Leave the " as a quote if it is at the beginning or end of the word
X# Change it to hard sign only if it is inside the word
X2 {([][\0x7d{A-Za-z\|~@'/])\0x22([][\0x7d{A-Za-z\|~@'/])}
X                                 -1        {\1\0xFF\2} # hard sign
X      2           "#"             0          "\0xA3"   #small yo
X      2           "$"             0          "\0xB3"   #capital YO
X      2           "a"             0          "\0xE1"   #capital  A
X      2           "b"             0          "\0xE2"   #capital  Be
X      2           "w"             0          "\0xF7"   #capital  Ve
X      2           "g"             0          "\0xE7"   #capital  Ghe
X      2           "d"             0          "\0xE4"   #capital  De
X      2           "e"             0          "\0xE5"   #capital  Ie
X      2           "v"             0          "\0xF6"   #capital  Zhe
X      2           "z"             0          "\0xFA"   #capital  Ze
X      2           "i"             0          "\0xE9"   #capital  I
X      2           "j"             0          "\0xEA"   #capital  short I
X      2           "k"             0          "\0xEB"   #capital  Ka
X      2           "l"             0          "\0xEC"   #capital  El
X      2           "m"             0          "\0xED"   #capital  Em
X      2           "n"             0          "\0xEE"   #capital  En
X      2           "o"             0          "\0xEF"   #capital  O
X      2           "p"             0          "\0xF0"   #capital  Pe
X      2           "r"             0          "\0xF2"   #capital  Er
X      2           "s"             0          "\0xF3"   #capital  Es
X      2           "t"             0          "\0xF4"   #capital  Te
X      2           "u"             0          "\0xF5"   #capital  U
X      2           "f"             0          "\0xE6"   #capital  Ef
X      2           "h"             0          "\0xE8"   #capital  Kha
X      2           "c"             0          "\0xE3"   #capital  Tse
X      2           "~"             0          "\0xFE"   #capital  Che
X      2           "{"             0          "\0xFB"   #capital  Sha
X      2           "}"             0          "\0xFD"   #capital  Shcha
X      2           "y"             0          "\0xF9"   #capital  Y (Iery)
X      2           "x"             0          "\0xF8"   #capit soft sign(Ierik)
X      2           "|"             0          "\0xFC"   #capit reverse rounded E
X      2           "`"             0          "\0xE0"   #capital  Yu
X      2           "q"             0          "\0xF1"   #capital  Ya
X      2           "A"             0          "\0xC1"   #small  a
X      2           "B"             0          "\0xC2"   #small  be
X      2           "W"             0          "\0xD7"   #small  ve
X      2           "G"             0          "\0xC7"   #small  ghe
X      2           "D"             0          "\0xC4"   #small  de
X      2           "E"             0          "\0xC5"   #small  ie
X      2           "V"             0          "\0xD6"   #small  zhe
X      2           "Z"             0          "\0xDA"   #small  z
X      2           "I"             0          "\0xC9"   #small  i
X      2           "J"             0          "\0xCA"   #small  short i
X      2           "K"             0          "\0xCB"   #small  ka
X      2           "L"             0          "\0xCC"   #small  el
X      2           "M"             0          "\0xCD"   #small  em
X      2           "N"             0          "\0xCE"   #small  en
X      2           "O"             0          "\0xCF"   #small  o
X      2           "P"             0          "\0xD0"   #small  pe
X      2           "R"             0          "\0xD2"   #small  er
X      2           "S"             0          "\0xD3"   #small  es
X      2           "T"             0          "\0xD4"   #small  te
X      2           "U"             0          "\0xD5"   #small  u
X      2           "F"             0          "\0xC6"   #small  ef
X      2           "H"             0          "\0xC8"   #small  kha
X      2           "C"             0          "\0xC3"   #small  tse
X      2           "^"             0          "\0xDE"   #small  che
X      2           "["             0          "\0xDB"   #small  sha
X      2           "]"             0          "\0xDD"   #small  shcha
X      2           "_"             0          "\0xDF"   #small hard sign (ier)
X      2           "Y"             0          "\0xD9"   #small  y (iery)
X      2           "X"             0          "\0xD8"   #small soft sign (ierik)
X      2           "\"             0          "\0xDC"   #small  rev rounded e
X      2           "@"             0          "\0xC0"   #small  yu
X      2           "Q"             0          "\0xD1"   #small  ya
END_OF_FILE
  if test 8116 -ne `wc -c <'koi7-8.rus'`; then
    echo shar: \"'koi7-8.rus'\" unpacked with wrong size!
  fi
  # end of 'koi7-8.rus'
fi
if test -f 'koi7nl-8.rus' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'koi7nl-8.rus'\"
else
  echo shar: Extracting \"'koi7nl-8.rus'\" \(5350 characters\)
  sed "s/^X//" >'koi7nl-8.rus' <<'END_OF_FILE'
X# Jan Labanowski, jkl@osc.edu, Dec. 30, 1992
X# File koi7nl_8.rus
X
X# This is a transliteration data file for converting from KOI7 to
X# KOI8 (RELCOM-GOST 19768-74). The KOI7 character codes for Russian letters
X# overlap with Latin letters.  This file assumes that there are no Latin
X# letters in the file (i.e., file is entirely in Russian).
X
X# To be used with translit.c program by Jan Labanowski
X
X   1            file version number
X
X   "    "      # string delimiters
X   [    ]      # list delimites
X   {    }      # regular expression delimiters
X
X
X#starting sequence
X""
X
X
X#ending sequence
X""
X
X   0     # number of input SHIFT sequences, only one set of input characters
X   0     # number of output SHIFT sequences, only one set of output characters
X  
X# conversion table
X
X# inp_set_numb  inp_seq        out_set_numb  out_seq
X      0           "#"             0          "\0xA3"   #small yo
X      0           "$"             0          "\0xB3"   #capital YO
X      0           "a"             0          "\0xE1"   #capital  A
X      0           "b"             0          "\0xE2"   #capital  Be
X      0           "w"             0          "\0xF7"   #capital  Ve
X      0           "g"             0          "\0xE7"   #capital  Ghe
X      0           "d"             0          "\0xE4"   #capital  De
X      0           "e"             0          "\0xE5"   #capital  Ie
X      0           "v"             0          "\0xF6"   #capital  Zhe
X      0           "z"             0          "\0xFA"   #capital  Ze
X      0           "i"             0          "\0xE9"   #capital  I
X      0           "j"             0          "\0xEA"   #capital  short I
X      0           "k"             0          "\0xEB"   #capital  Ka
X      0           "l"             0          "\0xEC"   #capital  El
X      0           "m"             0          "\0xED"   #capital  Em
X      0           "n"             0          "\0xEE"   #capital  En
X      0           "o"             0          "\0xEF"   #capital  O
X      0           "p"             0          "\0xF0"   #capital  Pe
X      0           "r"             0          "\0xF2"   #capital  Er
X      0           "s"             0          "\0xF3"   #capital  Es
X      0           "t"             0          "\0xF4"   #capital  Te
X      0           "u"             0          "\0xF5"   #capital  U
X      0           "f"             0          "\0xE6"   #capital  Ef
X      0           "h"             0          "\0xE8"   #capital  Kha
X      0           "c"             0          "\0xE3"   #capital  Tse
X      0           "~"             0          "\0xFE"   #capital  Che
X      0           "{"             0          "\0xFB"   #capital  Sha
X      0           "}"             0          "\0xFD"   #capital  Shcha
X      0           "\0x22"         0          "\0xFF"   #capital hard sign (Ier)
X      0           "y"             0          "\0xF9"   #capital  Y (Iery)
X      0           "x"             0          "\0xF8"   #capit soft sign(Ierik)
X      0           "|"             0          "\0xFC"   #capit reverse rounded E
X      0           "`"             0          "\0xE0"   #capital  Yu
X      0           "q"             0          "\0xF1"   #capital  Ya
X      0           "A"             0          "\0xC1"   #small  a
X      0           "B"             0          "\0xC2"   #small  be
X      0           "W"             0          "\0xD7"   #small  ve
X      0           "G"             0          "\0xC7"   #small  ghe
X      0           "D"             0          "\0xC4"   #small  de
X      0           "E"             0          "\0xC5"   #small  ie
X      0           "V"             0          "\0xD6"   #small  zhe
X      0           "Z"             0          "\0xDA"   #small  z
X      0           "I"             0          "\0xC9"   #small  i
X      0           "J"             0          "\0xCA"   #small  short i
X      0           "K"             0          "\0xCB"   #small  ka
X      0           "L"             0          "\0xCC"   #small  el
X      0           "M"             0          "\0xCD"   #small  em
X      0           "N"             0          "\0xCE"   #small  en
X      0           "O"             0          "\0xCF"   #small  o
X      0           "P"             0          "\0xD0"   #small  pe
X      0           "R"             0          "\0xD2"   #small  er
X      0           "S"             0          "\0xD3"   #small  es
X      0           "T"             0          "\0xD4"   #small  te
X      0           "U"             0          "\0xD5"   #small  u
X      0           "F"             0          "\0xC6"   #small  ef
X      0           "H"             0          "\0xC8"   #small  kha
X      0           "C"             0          "\0xC3"   #small  tse
X      0           "^"             0          "\0xDE"   #small  che
X      0           "["             0          "\0xDB"   #small  sha
X      0           "]"             0          "\0xDD"   #small  shcha
X      0           "_"             0          "\0xDF"   #small hard sign (ier)
X      0           "Y"             0          "\0xD9"   #small  y (iery)
X      0           "X"             0          "\0xD8"   #small soft sign (ierik)
X      0           "\"             0          "\0xDC"   #small  rev rounded e
X      0           "@"             0          "\0xC0"   #small  yu
X      0           "Q"             0          "\0xD1"   #small  ya
END_OF_FILE
  if test 5350 -ne `wc -c <'koi7nl-8.rus'`; then
    echo shar: \"'koi7nl-8.rus'\" unpacked with wrong size!
  fi
  # end of 'koi7nl-8.rus'
fi
if test -f 'koi8-7.rus' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'koi8-7.rus'\"
else
  echo shar: Extracting \"'koi8-7.rus'\" \(6368 characters\)
  sed "s/^X//" >'koi8-7.rus' <<'END_OF_FILE'
X# Jan Labanowski, jkl@osc.edu, Jan 10, 1993
X# File koi8_7.rus
X
X# This is a transliteration data file for converting from  KOI8 (RELCOM,
X# GOST 19768-74) to KOI7. The KOI7 character codes for Russian letters
X# overlap with Latin letters. To mark what is in Russian and what in English,
X# The SHIFT-OUT and SHIFT-IN characters are used. The SHIFT-OUT and SHIFT-IN 
X# switch between Latin and Russian character set. The SHIFT-OUT switches
X# to Russian letters. 
X# The SHIFT-OUT character is CTRL-N (\14 = \0x0E = \0o16).
X# The SHIFT-IN character is CTRL-O (\15 = \0x0F = \0o17). It switches back to
X# Latin characters. You might want to read comments in file koi7_8.rus
X#
X
X# To be used with translit.c program by Jan Labanowski
X
X   1            file version number
X
X   "    "      # string delimiters
X   [    ]      # list delimites
X   {    }      # regular expression delimiters
X
X
X#starting sequence
X""
X
X
X#ending sequence
X""
X   0     # number of input SHIFT sequences, only one set of output characters
X
X   2     # number of output SHIFT sequences, only one set of input characters
X   ""        ""         # Latin characters
X   "\0x0E"   "\0x0F"    # Russian letters ^N...^O
X#   "{{"      "}}"       # Russian letters {{...}}
X
X  
X# conversion table
X#   ASCII characters (set 1) no-change
X#   Russian letters could be given as a range like:
X#     0   [\0xA3\0xB3\0xFF\0xC0-\0xFE] 2  [#$"@-~]
X#  but then we would miss the nice table for the humans
X
X
X# inp_set_numb  inp_seq        out_set_numb  out_seq
X
X# This line is given here so the appropriate SHIFT-OUT/IN sequences are
X# sent to output. Note that it does not include control characters, spaces
X# digits, punctuation, etc.,  which can appear in both sets (at least this
X# is my understanding).
X
X    0          [#$"@-~]          1      [#$"@-~]      #Pass  ASCII, no change
X
X# Russian letters
X    0          "\0xA3"           2           "#"       #small yo
X    0          "\0xB3"           2           "$"       #capital YO
X    0          "\0xE1"           2           "a"       #capital  A
X    0          "\0xE2"           2           "b"       #capital  Be
X    0          "\0xF7"           2           "w"       #capital  Ve
X    0          "\0xE7"           2           "g"       #capital  Ghe
X    0          "\0xE4"           2           "d"       #capital  De
X    0          "\0xE5"           2           "e"       #capital  Ie
X    0          "\0xF6"           2           "v"       #capital  Zhe
X    0          "\0xFA"           2           "z"       #capital  Ze
X    0          "\0xE9"           2           "i"       #capital  I
X    0          "\0xEA"           2           "j"       #capital  short I
X    0          "\0xEB"           2           "k"       #capital  Ka
X    0          "\0xEC"           2           "l"       #capital  El
X    0          "\0xED"           2           "m"       #capital  Em
X    0          "\0xEE"           2           "n"       #capital  En
X    0          "\0xEF"           2           "o"       #capital  O
X    0          "\0xF0"           2           "p"       #capital  Pe
X    0          "\0xF2"           2           "r"       #capital  Er
X    0          "\0xF3"           2           "s"       #capital  Es
X    0          "\0xF4"           2           "t"       #capital  Te
X    0          "\0xF5"           2           "u"       #capital  U
X    0          "\0xE6"           2           "f"       #capital  Ef
X    0          "\0xE8"           2           "h"       #capital  Kha
X    0          "\0xE3"           2           "c"       #capital  Tse
X    0          "\0xFE"           2           "~"       #capital  Che
X    0          "\0xFB"           2           "{"       #capital  Sha
X    0          "\0xFD"           2           "}"       #capital  Shcha
X    0          "\0xFF"           2           "\0x22"   #capital hard sign (Ier)
X    0          "\0xF9"           2           "y"       #capital  Y (Iery)
X    0          "\0xF8"           2           "x"       #capit soft sign(Ierik)
X    0          "\0xFC"           2           "|"       #capit reverse rounded E
X    0          "\0xE0"           2           "`"       #capital  Yu
X    0          "\0xF1"           2           "q"       #capital  Ya
X    0          "\0xC1"           2           "A"       #small  a
X    0          "\0xC2"           2           "B"       #small  be
X    0          "\0xD7"           2           "W"       #small  ve
X    0          "\0xC7"           2           "G"       #small  ghe
X    0          "\0xC4"           2           "D"       #small  de
X    0          "\0xC5"           2           "E"       #small  ie
X    0          "\0xD6"           2           "V"       #small  zhe
X    0          "\0xDA"           2           "Z"       #small  z
X    0          "\0xC9"           2           "I"       #small  i
X    0          "\0xCA"           2           "J"       #small  short i
X    0          "\0xCB"           2           "K"       #small  ka
X    0          "\0xCC"           2           "L"       #small  el
X    0          "\0xCD"           2           "M"       #small  em
X    0          "\0xCE"           2           "N"       #small  en
X    0          "\0xCF"           2           "O"       #small  o
X    0          "\0xD0"           2           "P"       #small  pe
X    0          "\0xD2"           2           "R"       #small  er
X    0          "\0xD3"           2           "S"       #small  es
X    0          "\0xD4"           2           "T"       #small  te
X    0          "\0xD5"           2           "U"       #small  u
X    0          "\0xC6"           2           "F"       #small  ef
X    0          "\0xC8"           2           "H"       #small  kha
X    0          "\0xC3"           2           "C"       #small  tse
X    0          "\0xDE"           2           "^"       #small  che
X    0          "\0xDB"           2           "["       #small  sha
X    0          "\0xDD"           2           "]"       #small  shcha
X    0          "\0xDF"           2           "_"       #small hard sign (ier)
X    0          "\0xD9"           2           "Y"       #small  y (iery)
X    0          "\0xD8"           2           "X"       #small soft sign (ierik)
X    0          "\0xDC"           2           "\"       #small  rev rounded e
X    0          "\0xC0"           2           "@"       #small  yu
X    0          "\0xD1"           2           "Q"       #small  ya
END_OF_FILE
  if test 6368 -ne `wc -c <'koi8-7.rus'`; then
    echo shar: \"'koi8-7.rus'\" unpacked with wrong size!
  fi
  # end of 'koi8-7.rus'
fi
if test -f 'koi8-lc.rus' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'koi8-lc.rus'\"
else
  echo shar: Extracting \"'koi8-lc.rus'\" \(5463 characters\)
  sed "s/^X//" >'koi8-lc.rus' <<'END_OF_FILE'
X# Jan Labanowski, jkl@osc.edu, Jan. 10, 1992
X# File koi8-lc.dat
X
X# This is a transliteration data file for converting from KOI-8 as used
X# by RELCOM (GOST 19768-74) to approximate Library of Congress (phonetic)
X# transliteration. I personally think, that LC transliteration is a bad one.
X# It is not possible to exactly represent Library of Congress transliteration
X# since it uses the accented letters which are not present in the ASCII
X# character set. Several changes are made to the letter of LC.
X# The English text has to be embraced in braces {}, while
X# the Russian one, is outside the braces.
X# To be used with translit.c program by Jan Labanowski. For a format of
X# this file consult translit documentation.
X
X   1            file version number
X
X   "    "      # string delimiters
X   [    ]      # list delimites
X   {    }      # regular expression delimiters
X
X
X
X#starting sequence for LaTeX
X""
X
X#ending sequence
X""
X
X   0     # number of input SHIFT sequences, only one set of input characters
X
X   2     # number of output SHIFT sequences, two sets of input characters
X  
X# SHIFT-OUT      SHIFT-IN
X    ""             ""         #cyrillic enclosed in {\cyr ... }
X    "{"            "}"        #shift sequences for Latin
X
X# conversion table
X# inp_set     inp_seq           out_set    out_seq
X
X# Latin(ASCII) embrace it in {}
X     0  ["'A-Za-z]                   2      ["'A-Za-z]
X     
X# Cyrillic letters  
X     0         "\0xA3"              1       "jo"    # small jo
X     0         "\0xB3"              1       "JO"    # capital Jo
X     0         "\0xE1"              1       "A"             
X     0         "\0xE2"              1       "B"             
X     0         "\0xF7"              1       "V"             
X     0         "\0xE7"              1	    "G"             
X     0         "\0xE4"              1       "D"             
X     0         "\0xE5"              1       "E"             
X     0         "\0xF6"              1       "ZH"            
X     0         "\0xFA"              1       "Z"             
X     0         "\0xE9"              1       "I"             
X     0         "\0xEA"              1       "J"     # I kratkoje 
X     0         "\0xEB"              1       "K"             
X     0         "\0xEC"              1       "L"             
X     0         "\0xED"              1       "M"             
X     0         "\0xEE"              1       "N"             
X     0         "\0xEF"              1       "O"             
X     0         "\0xF0"              1       "P"             
X     0         "\0xF2"              1       "R"             
X     0         "\0xF3"              1       "S"             
X     0         "\0xF4"              1       "T"             
X     0         "\0xF5"              1       "U"             
X     0         "\0xE6"              1       "F"             
X     0         "\0xE8"              1       "KH"            
X     0         "\0xE3"              1       "C"             
X     0         "\0xFE"              1       "Ch"            
X     0         "\0xFB"              1       "Sh"            
X     0         "\0xFD"              1       "Shch"          
X     0         "\0xFF"              1       "\0x22"   # Tverdyj znak 
X     0         "\0xF9"              1       "Y"             
X     0         "\0xF8"              1       "'"    # Myagkij znak 
X     0         "\0xFC"              1       "EH"   # E oborotnoe
X     0         "\0xE0"              1       "JU"            
X     0         "\0xF1"              1       "JA"            
X     0         "\0xC1"              1       "a"             
X     0         "\0xC2"              1       "b"             
X     0         "\0xD7"              1       "v"             
X     0         "\0xC7"              1       "g"             
X     0         "\0xC4"              1       "d"             
X     0         "\0xC5"              1       "e"             
X     0         "\0xD6"              1       "zh"            
X     0         "\0xDA"              1       "z"             
X     0         "\0xC9"              1       "i"             
X     0         "\0xCA"              1       "j"             
X     0         "\0xCB"              1       "k"             
X     0         "\0xCC"              1       "l"             
X     0         "\0xCD"              1       "m"             
X     0         "\0xCE"              1       "n"             
X     0         "\0xCF"              1       "o"             
X     0         "\0xD0"              1       "p"             
X     0         "\0xD2"              1       "r"             
X     0         "\0xD3"              1       "s"             
X     0         "\0xD4"              1       "t"             
X     0         "\0xD5"              1       "u"             
X     0         "\0xC6"              1       "f"             
X     0         "\0xC8"              1       "kh"            
X     0         "\0xC3"              1       "c"             
X     0         "\0xDE"              1       "ch"            
X     0         "\0xDB"              1       "sh"            
X     0         "\0xDD"              1       "shch"          
X     0         "\0xDF"              1       "\0x22"    
X     0         "\0xD9"              1       "y"             
X     0         "\0xD8"              1       "'"     
X     0         "\0xDC"              1       "eh"       # e oborotnoe
X     0         "\0xC0"              1       "ju"            
X     0         "\0xD1"              1       "ja"            
END_OF_FILE
  if test 5463 -ne `wc -c <'koi8-lc.rus'`; then
    echo shar: \"'koi8-lc.rus'\" unpacked with wrong size!
  fi
  # end of 'koi8-lc.rus'
fi
if test -f 'koi8-phg.rus' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'koi8-phg.rus'\"
else
  echo shar: Extracting \"'koi8-phg.rus'\" \(5726 characters\)
  sed "s/^X//" >'koi8-phg.rus' <<'END_OF_FILE'
X
X# Jan Labanowski, jkl@osc.edu, Dec. 30, 1992
X# File koi8-phg.rus
X
X# This is a transliteration data file for converting from
X# KOI8 as used by RELCOM to transliteration defined in the GOST 16876-71
X# standard.
X# Since I never had a chance to look at the GOST 16876-71 document,
X# the actual table is based on the info which I read on some list
X# (I believe it was posted by Glenn Thobe on RUS-TEX)
X# To be used with translit.c program by Jan Labanowski
X
X   1            file version number
X
X   "    "      # string delimiters
X   [    ]      # list delimites
X   {    }      # regular expression delimiters
X
X
X#starting sequence
X""
X
X
X#ending sequence
X""
X
X   0     # number of input SHIFT sequences
X
X   2     # number of output SHIFT sequences, only one set of output characters
X   ""    ""            # russian outside brackets
X   "{"   "}"           # ascii, inside brackets
X  
X# conversion table
X
X# Latin(ASCII) is embraced in {}
X     0         [A-Za-z]        2  [A-Za-z]
X
X# White space and control characters
X     0         [\0x01-\0x20]        0  [\0x01-\0x20]  # spaces and controll
X# punctuation and digits
X     0  [\0x21-\0x26\0x28-\0x3F\0x5B-\0x5F\0x7C\0x7e]
X                               0 [\0x21-\0x26\0x28-\0x3F\0x5B-\0x5F\0x7C\0x7e]
X
X
X# inp_set_numb  inp_seq        out_set_numb  out_seq
X     0          "\0xE1"           1     "A"          # capital A
X     0          "\0xE2"           1     "B"          # capital Be
X     0          "\0xF7"           1     "V"          # capital Ve
X     0          "\0xE7"           1     "G"          # capital Ghe
X     0          "\0xE4"           1     "D"          # capital De
X     0          "\0xE5"           1     "E"          # capital Je
X     0          "\0xB3"           1     "JO"         # capital Yo
X     0          "\0xF6"           1     "ZH"         # capital Zhe
X     0          "\0xFA"           1     "Z"          # capital Ze
X     0          "\0xE9"           1     "I"          # capital I
X     0          "\0xEA"           1     "JJ"         # capital short I
X     0          "\0xEB"           1     "K"          # capital Ka
X     0          "\0xEC"           1     "L"          # capital El
X     0          "\0xED"           1     "M"          # capital Em
X     0          "\0xEE"           1     "N"          # capital En
X     0          "\0xEF"           1     "O"          # capital O
X     0          "\0xF0"           1     "P"          # capital Pe
X     0          "\0xF2"           1     "R"          # capital Er
X     0          "\0xF3"           1     "S"          # capital Es
X     0          "\0xF4"           1     "T"          # capital Te
X     0          "\0xF5"           1     "U"          # capital U
X     0          "\0xE6"           1     "F"          # capital Ef
X     0          "\0xE8"           1     "Kh"         # capital Kha
X     0          "\0xE3"           1     "C"          # capital Tse
X     0          "\0xFE"           1     "CH"         # capital Che
X     0          "\0xFB"           1     "SH"         # capital Sha
X     0          "\0xFD"           1     "HH"         # capital Shcha
X     0          "\0xFF"           1     "``"         # capital hard sign (Ier)
X     0          "\0xF9"           1     "Y"          # capital Y (Iery)
X     0          "\0xF8"           1     "`"          # capital soft sign Ierik
X     0          "\0xFC"           1     "EH"         # capital reverse round E
X     0          "\0xE0"           1     "JU"         # capital Yu
X     0          "\0xF1"           1     "JA"         # capital Ya
X                       
X     0          "\0xC1"           1     "a"          # small a
X     0          "\0xC2"           1     "b"          # small be
X     0          "\0xD7"           1     "v"          # small ve
X     0          "\0xC7"           1     "g"          # small ghe
X     0          "\0xC4"           1     "d"          # small de
X     0          "\0xC5"           1     "e"          # small je
X     0          "\0xA3"           1     "jo"         # small yo
X     0          "\0xD6"           1     "zh"         # small zhe
X     0          "\0xDA"           1     "z"          # small z
X     0          "\0xC9"           1     "i"          # small i
X     0          "\0xCA"           1     "jj"         # small short i
X     0          "\0xCB"           1     "k"          # small ka
X     0          "\0xCC"           1     "l"          # small el
X     0          "\0xCD"           1     "m"          # small em
X     0          "\0xCE"           1     "n"          # small en
X     0          "\0xCF"           1     "o"          # small o
X     0          "\0xD0"           1     "p"          # small pe
X     0          "\0xD2"           1     "r"          # small er
X     0          "\0xD3"           1     "s"          # small es
X     0          "\0xD4"           1     "t"          # small te
X     0          "\0xD5"           1     "u"          # small u
X     0          "\0xC6"           1     "f"          # small ef
X     0          "\0xC8"           1     "kh"         # small kha
X     0          "\0xC3"           1     "c"          # small tse
X     0          "\0xDE"           1     "ch"         # small che
X     0          "\0xDB"           1     "sh"         # small sha
X     0          "\0xDD"           1     "hh"         # small shcha
X     0          "\0xDF"           1     "''"         # small hard sign (ier)
X     0          "\0xD9"           1     "y"          # small y (iery)
X     0          "\0xD8"           1     "'"          # small soft sign (ierik)
X     0          "\0xDC"           1     "eh"         # small reverse rounded e
X     0          "\0xC0"           1     "ju"         # small yu
X     0          "\0xD1"           1     "ja"         # small ya
END_OF_FILE
  if test 5726 -ne `wc -c <'koi8-phg.rus'`; then
    echo shar: \"'koi8-phg.rus'\" unpacked with wrong size!
  fi
  # end of 'koi8-phg.rus'
fi
if test -f 'koi8-php.rus' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'koi8-php.rus'\"
else
  echo shar: Extracting \"'koi8-php.rus'\" \(5502 characters\)
  sed "s/^X//" >'koi8-php.rus' <<'END_OF_FILE'
X# Jan Labanowski, jkl@osc.edu, Dec. 30, 1992
X# File koi8-php.rus
X
X# This is a transliteration data file for converting from
X# KOI8 as used by RELCOM to transliteration defined as Pokrovsky EuroTex-92
X# (posted to RUSTEX by Joseph Romanovsky)
X# standard.
X# To be used with translit.c program by Jan Labanowski
X
X   1            file version number
X
X   "    "      # string delimiters
X   [    ]      # list delimites
X   {    }      # regular expression delimiters
X
X
X#starting sequence
X""
X
X
X#ending sequence
X""
X
X   0     # number of input SHIFT sequences
X
X   2     # number of output SHIFT sequences, only one set of output characters
X   ""    ""            # russian outside brackets
X   "{"   "}"           # ascii, inside brackets
X  
X# conversion table
X
X# Latin(ASCII) is embraced in {}
X     0         [A-Za-z]        2  [A-Za-z]
X
X# White space and control characters
X     0         [\0x01-\0x20]        0  [\0x01-\0x20]
X
X# punctuation and digits
X 0 [\0x21-\0x3F\0x5B-\0x60\0x7B-\0x7E] 0 [\0x21-\0x3F\0x5B-\0x60\0x7B-\0x7E]
X
X# inp_set_numb  inp_seq        out_set_numb  out_seq
X     0          "\0xE1"           1     "A"          # capital A
X     0          "\0xE2"           1     "B"          # capital Be
X     0          "\0xF7"           1     "V"          # capital Ve
X     0          "\0xE7"           1     "G"          # capital Ghe
X     0          "\0xE4"           1     "D"          # capital De
X     0          "\0xE5"           1     "E"          # capital Je
X     0          "\0xB3"           1     "Jo"         # capital Yo
X     0          "\0xF6"           1     "Zh"         # capital Zhe
X     0          "\0xFA"           1     "Z"          # capital Ze
X     0          "\0xE9"           1     "I"          # capital I
X     0          "\0xEA"           1     "Ji"         # capital short I
X     0          "\0xEB"           1     "K"          # capital Ka
X     0          "\0xEC"           1     "L"          # capital El
X     0          "\0xED"           1     "M"          # capital Em
X     0          "\0xEE"           1     "N"          # capital En
X     0          "\0xEF"           1     "O"          # capital O
X     0          "\0xF0"           1     "P"          # capital Pe
X     0          "\0xF2"           1     "R"          # capital Er
X     0          "\0xF3"           1     "S"          # capital Es
X     0          "\0xF4"           1     "T"          # capital Te
X     0          "\0xF5"           1     "U"          # capital U
X     0          "\0xE6"           1     "F"          # capital Ef
X     0          "\0xE8"           1     "Kh"         # capital Kha
X     0          "\0xE3"           1     "C"          # capital Tse
X     0          "\0xFE"           1     "Ch"         # capital Che
X     0          "\0xFB"           1     "Sh"         # capital Sha
X     0          "\0xFD"           1     "W"          # capital Shcha
X     0          "\0xFF"           1     "X"         # capital hard sign (Ier)
X     0          "\0xF9"           1     "Y"          # capital Y (Iery)
X     0          "\0xF8"           1     "Q"          # capital soft sign Ierik
X     0          "\0xFC"           1     "Eh"         # capital reverse round E
X     0          "\0xE0"           1     "Ju"         # capital Yu
X     0          "\0xF1"           1     "Ja"         # capital Ya
X                       
X     0          "\0xC1"           1     "a"          # small a
X     0          "\0xC2"           1     "b"          # small be
X     0          "\0xD7"           1     "v"          # small ve
X     0          "\0xC7"           1     "g"          # small ghe
X     0          "\0xC4"           1     "d"          # small de
X     0          "\0xC5"           1     "e"          # small je
X     0          "\0xA3"           1     "jo"         # small yo
X     0          "\0xD6"           1     "zh"         # small zhe
X     0          "\0xDA"           1     "z"          # small z
X     0          "\0xC9"           1     "i"          # small i
X     0          "\0xCA"           1     "ji"         # small short i
X     0          "\0xCB"           1     "k"          # small ka
X     0          "\0xCC"           1     "l"          # small el
X     0          "\0xCD"           1     "m"          # small em
X     0          "\0xCE"           1     "n"          # small en
X     0          "\0xCF"           1     "o"          # small o
X     0          "\0xD0"           1     "p"          # small pe
X     0          "\0xD2"           1     "r"          # small er
X     0          "\0xD3"           1     "s"          # small es
X     0          "\0xD4"           1     "t"          # small te
X     0          "\0xD5"           1     "u"          # small u
X     0          "\0xC6"           1     "f"          # small ef
X     0          "\0xC8"           1     "kh"         # small kha
X     0          "\0xC3"           1     "c"          # small tse
X     0          "\0xDE"           1     "ch"         # small che
X     0          "\0xDB"           1     "sh"         # small sha
X     0          "\0xDD"           1     "w"          # small shcha
X     0          "\0xDF"           1     "x"          # small hard sign (ier)
X     0          "\0xD9"           1     "y"          # small y (iery)
X     0          "\0xD8"           1     "q"          # small soft sign (ierik)
X     0          "\0xDC"           1     "eh"         # small reverse rounded e
X     0          "\0xC0"           1     "ju"         # small yu
X     0          "\0xD1"           1     "ja"         # small ya
END_OF_FILE
  if test 5502 -ne `wc -c <'koi8-php.rus'`; then
    echo shar: \"'koi8-php.rus'\" unpacked with wrong size!
  fi
  # end of 'koi8-php.rus'
fi
if test -f 'phg-koi8.rus' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'phg-koi8.rus'\"
else
  echo shar: Extracting \"'phg-koi8.rus'\" \(5906 characters\)
  sed "s/^X//" >'phg-koi8.rus' <<'END_OF_FILE'
X
X# Jan Labanowski, jkl@osc.edu, Dec. 30, 1992
X# File phg-koi8.rus
X
X# This is a transliteration data file for converting from transliteration
X# defined in the GOST 16876-71 standard to KOI8 as used by RELCOM.
X# Since I never had a chance to look at the GOST 16876-71 document,
X# the actual table is based on the info which I read on some list
X# (I believe it was posted by Glenn Thobe on RUS-TEX)
X# To be used with translit.c program by Jan Labanowski
X
X   1            file version number
X
X   "    "      # string delimiters
X   [    ]      # list delimites
X   {    }      # regular expression delimiters
X
X
X#starting sequence
X""
X
X
X#ending sequence
X""
X
X   2     # number of input SHIFT sequences
X""  ""  ""  ""  ""  ""    # no SHIFT-OUT/IN for Russian letters
X"{" ""  ""  ""  "}" ""    # Latin text in braces {}
X
X   0     # number of output SHIFT sequences, only one set of output characters
X  
X# conversion table
X
X# Latin(ASCII) is embraced in {}
X     2         [\0x21-\0x79]        0  [\0x21-\0x79]
X
X# White space and control characters
X     0         [\0x01-\0x20]        0  [\0x01-\0x20]
X# punctuation and digits
X     0  [\0x21-\0x26\0x28-\0x3F\0x5B-\0x5F\0x7C\0x7e]
X                               0 [\0x21-\0x26\0x28-\0x3F\0x5B-\0x5F\0x7C\0x7e]
X# inp_set_numb  inp_seq        out_set_numb  out_seq
X     1         {K[Hh]}              0       "\0xE8"  # capital Kha
X     1         {E[Hh]}              0       "\0xFC"  # capital reverse round E
X     1         {J[Oo]}              0       "\0xB3"  # capital Yo
X     1         {J[Ee]}              0       "\0xE5"  # capital Je
X     1         {Z[Hh]}              0       "\0xF6"  # capital Zhe
X     1         {J[Jj]}              0       "\0xEA"  # capital short I
X     1         {S[Hh][Cc][Hh]}      0       "\0xFD"  # capital Shcha
X     1         {C[Hh]}              0       "\0xFE"  # capital Che
X     1         {S[Hh]}              0       "\0xFB"  # capital Sha
X     1         {H[Hh]}              0       "\0xFD"  # capital Shcha
X     1         "``"                 0       "\0xFF"  # capital hard sign (Ier)
X     1         {J[Uu]}              0       "\0xE0"  # capital Yu
X     1         {J[Aa]}              0       "\0xF1"  # capital Ya
X     1         "kh"                 0       "\0xC8"  # small kha
X     1         "eh"                 0       "\0xDC"  # small reverse rounded e
X     1         "jo"                 0       "\0xA3"  # small yo
X     1         "zh"                 0       "\0xD6"  # small zhe
X     1         "jj"                 0       "\0xCA"  # small short i
X     1         "shch"               0       "\0xDD"  # small shcha
X     1         "ch"                 0       "\0xDE"  # small che
X     1         "sh"                 0       "\0xDB"  # small sha
X     1         "hh"                 0       "\0xDD"  # small shcha
X     1         "''"                 0       "\0xDF"  # small hard sign (ier)
X     1         "ju"                 0       "\0xC0"  # small yu
X     1         "ja"                 0       "\0xD1"  # small ya
X     1         "A"                  0       "\0xE1"  # capital A
X     1         "B"                  0       "\0xE2"  # capital Be
X     1         "V"                  0       "\0xF7"  # capital Ve
X     1         "G"                  0       "\0xE7"  # capital Ghe
X     1         "D"                  0       "\0xE4"  # capital De
X     1         "E"                  0       "\0xE5"  # capital Je
X     1         "Z"                  0       "\0xFA"  # capital Ze
X     1         "I"                  0       "\0xE9"  # capital I
X     1         "K"                  0       "\0xEB"  # capital Ka
X     1         "L"                  0       "\0xEC"  # capital El
X     1         "M"                  0       "\0xED"  # capital Em
X     1         "N"                  0       "\0xEE"  # capital En
X     1         "O"                  0       "\0xEF"  # capital O
X     1         "P"                  0       "\0xF0"  # capital Pe
X     1         "R"                  0       "\0xF2"  # capital Er
X     1         "S"                  0       "\0xF3"  # capital Es
X     1         "T"                  0       "\0xF4"  # capital Te
X     1         "U"                  0       "\0xF5"  # capital U
X     1         "F"                  0       "\0xE6"  # capital Ef
X     1         "C"                  0       "\0xE3"  # capital Tse
X     1         "Y"                  0       "\0xF9"  # capital Y (Iery)
X     1         "`"                  0       "\0xF8"  # capital soft sign Ierik
X
X     1         "a"                  0       "\0xC1"  # small a
X     1         "b"                  0       "\0xC2"  # small be
X     1         "v"                  0       "\0xD7"  # small ve
X     1         "g"                  0       "\0xC7"  # small ghe
X     1         "d"                  0       "\0xC4"  # small de
X     1         "e"                  0       "\0xC5"  # small je
X     1         "z"                  0       "\0xDA"  # small z
X     1         "i"                  0       "\0xC9"  # small i
X     1         "k"                  0       "\0xCB"  # small ka
X     1         "l"                  0       "\0xCC"  # small el
X     1         "m"                  0       "\0xCD"  # small em
X     1         "n"                  0       "\0xCE"  # small en
X     1         "o"                  0       "\0xCF"  # small o
X     1         "p"                  0       "\0xD0"  # small pe
X     1         "r"                  0       "\0xD2"  # small er
X     1         "s"                  0       "\0xD3"  # small es
X     1         "t"                  0       "\0xD4"  # small te
X     1         "u"                  0       "\0xD5"  # small u
X     1         "f"                  0       "\0xC6"  # small ef
X     1         "c"                  0       "\0xC3"  # small tse
X     1         "y"                  0       "\0xD9"  # small y (iery)
X     1         "'"                  0       "\0xD8"  # small soft sign (ierik)
END_OF_FILE
  if test 5906 -ne `wc -c <'phg-koi8.rus'`; then
    echo shar: \"'phg-koi8.rus'\" unpacked with wrong size!
  fi
  # end of 'phg-koi8.rus'
fi
if test -f 'php-koi8.rus' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'php-koi8.rus'\"
else
  echo shar: Extracting \"'php-koi8.rus'\" \(5732 characters\)
  sed "s/^X//" >'php-koi8.rus' <<'END_OF_FILE'
X# Jan Labanowski, jkl@osc.edu, Dec. 30, 1992
X# File php-koi8.rus
X
X# This is a transliteration data file for converting from transliteration
X# called Pokrovsky and announced at EuroTex92 (from the message to RUSTEX
X# by Joseph Romanovsky). to KOI8 as used by RELCOM.
X# To be used with translit.c program by Jan Labanowski
X
X   1            file version number
X
X   "    "      # string delimiters
X   [    ]      # list delimites
X   {    }      # regular expression delimiters
X
X
X#starting sequence
X""
X
X
X#ending sequence
X""
X
X   2     # number of input SHIFT sequences
X""  ""  ""  ""  ""  ""    # no SHIFT-OUT/IN for Russian letters
X"{" ""  ""  ""  "}" ""    # Latin text in braces {}
X
X   0     # number of output SHIFT sequences, only one set of output characters
X  
X# conversion table
X
X# Latin(ASCII) is embraced in {}
X     2         [A-Za-z]        0  [A-Za-z]
X
X# White space and control characters
X     0         [\0x01-\0x20]        0  [\0x01-\0x20]
X# punctuation and digits
X 0 [\0x21-\0x3F\0x5B-\0x60\0x7B-\0x7E] 0 [\0x21-\0x3F\0x5B-\0x60\0x7B-\0x7E]
X
X# inp_set_numb  inp_seq        out_set_numb  out_seq
X     1         {K[Hh]}              0       "\0xE8"  # capital Kha
X     1         {E[Hh]}              0       "\0xFC"  # capital reverse round E
X     1         {J[Oo]}              0       "\0xB3"  # capital Yo
X     1         {J[Ee]}              0       "\0xE5"  # capital Je
X     1         {Z[Hh]}              0       "\0xF6"  # capital Zhe
X     1         {J[Ii]}              0       "\0xEA"  # capital short I
X     1         {S[Hh][Cc][Hh]}      0       "\0xFD"  # capital Shcha (in case)
X     1         {C[Hh]}              0       "\0xFE"  # capital Che
X     1         {S[Hh]}              0       "\0xFB"  # capital Sha
X     1         {J[Uu]}              0       "\0xE0"  # capital Yu
X     1         {J[Aa]}              0       "\0xF1"  # capital Ya
X     1         "kh"                 0       "\0xC8"  # small kha
X     1         "eh"                 0       "\0xDC"  # small reverse rounded e
X     1         "jo"                 0       "\0xA3"  # small yo
X     1         "zh"                 0       "\0xD6"  # small zhe
X     1         "ji"                 0       "\0xCA"  # small short i
X     1         "shch"               0       "\0xDD"  # small shcha (in case)
X     1         "ch"                 0       "\0xDE"  # small che
X     1         "sh"                 0       "\0xDB"  # small sha
X     1         "ju"                 0       "\0xC0"  # small yu
X     1         "ja"                 0       "\0xD1"  # small ya
X     1         "A"                  0       "\0xE1"  # capital A
X     1         "B"                  0       "\0xE2"  # capital Be
X     1         "V"                  0       "\0xF7"  # capital Ve
X     1         "G"                  0       "\0xE7"  # capital Ghe
X     1         "D"                  0       "\0xE4"  # capital De
X     1         "E"                  0       "\0xE5"  # capital Je
X     1         "Z"                  0       "\0xFA"  # capital Ze
X     1         "I"                  0       "\0xE9"  # capital I
X     1         "K"                  0       "\0xEB"  # capital Ka
X     1         "L"                  0       "\0xEC"  # capital El
X     1         "M"                  0       "\0xED"  # capital Em
X     1         "N"                  0       "\0xEE"  # capital En
X     1         "O"                  0       "\0xEF"  # capital O
X     1         "P"                  0       "\0xF0"  # capital Pe
X     1         "R"                  0       "\0xF2"  # capital Er
X     1         "S"                  0       "\0xF3"  # capital Es
X     1         "T"                  0       "\0xF4"  # capital Te
X     1         "U"                  0       "\0xF5"  # capital U
X     1         "F"                  0       "\0xE6"  # capital Ef
X     1         "C"                  0       "\0xE3"  # capital Tse 
X     1         "W"                  0       "\0xFD"  # capital Shcha
X     1         "X"                  0       "\0xFF"  # capital hard sign (Ier)
X     1         "Y"                  0       "\0xF9"  # capital Y (Iery)
X     1         "Q"                  0       "\0xF8"  # capital soft sign Ierik
X
X     1         "a"                  0       "\0xC1"  # small a
X     1         "b"                  0       "\0xC2"  # small be
X     1         "v"                  0       "\0xD7"  # small ve
X     1         "g"                  0       "\0xC7"  # small ghe
X     1         "d"                  0       "\0xC4"  # small de
X     1         "e"                  0       "\0xC5"  # small je
X     1         "z"                  0       "\0xDA"  # small z
X     1         "i"                  0       "\0xC9"  # small i
X     1         "k"                  0       "\0xCB"  # small ka
X     1         "l"                  0       "\0xCC"  # small el
X     1         "m"                  0       "\0xCD"  # small em
X     1         "n"                  0       "\0xCE"  # small en
X     1         "o"                  0       "\0xCF"  # small o
X     1         "p"                  0       "\0xD0"  # small pe
X     1         "r"                  0       "\0xD2"  # small er
X     1         "s"                  0       "\0xD3"  # small es
X     1         "t"                  0       "\0xD4"  # small te
X     1         "u"                  0       "\0xD5"  # small u
X     1         "f"                  0       "\0xC6"  # small ef
X     1         "c"                  0       "\0xC3"  # small tse
X     1         "w"                  0       "\0xDD"  # small shcha
X     1         "x"                  0       "\0xDF"  # small hard sign (ier)
X     1         "y"                  0       "\0xD9"  # small y (iery)
X     1         "q"                  0       "\0xD8"  # small soft sign (ierik)
END_OF_FILE
  if test 5732 -ne `wc -c <'php-koi8.rus'`; then
    echo shar: \"'php-koi8.rus'\" unpacked with wrong size!
  fi
  # end of 'php-koi8.rus'
fi
echo shar: End of archive 9 \(of 10\).
cp /dev/null ark9isdone
MISSING=""
for I in 1 2 3 4 5 6 7 8 9 10 ; do
    if test ! -f ark${I}isdone ; then
	MISSING="${MISSING} ${I}"
    fi
done
if test "${MISSING}" = "" ; then
    echo You have unpacked all 10 archives.
    rm -f ark[1-9]isdone ark[1-9][0-9]isdone
else
    echo You still must unpack the following archives:
    echo "        " ${MISSING}
fi
exit 0
exit 0 # Just in case...
