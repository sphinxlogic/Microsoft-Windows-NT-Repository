Newsgroups: comp.sources.misc
From: jkl@osc.edu (Jan Labanowski)
Subject: v36i032:  translit - transliterate foreign alphabets, Part10/10
Message-ID: <1993Mar19.224636.12570@sparky.imd.sterling.com>
X-Md4-Signature: b458c29d412e027cbf355648b00c1308
Date: Fri, 19 Mar 1993 22:46:36 GMT
Approved: kent@sparky.imd.sterling.com

Submitted-by: jkl@osc.edu (Jan Labanowski)
Posting-number: Volume 36, Issue 32
Archive-name: translit/part10
Environment: UNIX, MS-DOS, VMS

#! /bin/sh
# This is a shell archive.  Remove anything before this line, then feed it
# into a shell via "sh file" or similar.  To overwrite existing files,
# type "sh file -c".
# Contents:  alt-koi8.rus announcement gos-koi8.rus koi8-alt.rus
#   koi8-gos.rus paths.h
# Wrapped by kent@sparky on Fri Mar 19 16:00:17 1993
PATH=/bin:/usr/bin:/usr/ucb:/usr/local/bin:/usr/lbin ; export PATH
echo If this archive is complete, you will see the following message:
echo '          "shar: End of archive 10 (of 10)."'
if test -f 'alt-koi8.rus' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'alt-koi8.rus'\"
else
  echo shar: Extracting \"'alt-koi8.rus'\" \(5082 characters\)
  sed "s/^X//" >'alt-koi8.rus' <<'END_OF_FILE'
X# Jan Labanowski, jkl@osc.edu, Dec. 30, 1992
X# File alt-koi8.rus
X
X# This is a transliteration data file for converting from ALT to KOI8
X# KOI8 is meant to be GOST 19768-74 (as used by RELCOM).
X# To be used with translit.c program by Jan Labanowski
X
X   1            file version number
X
X   "    "      # string delimiters
X   [    ]      # list delimites
X   {    }      # regular expression delimiters
X
X
X#starting sequence
X""
X
X
X#ending sequence
X""
X
X   0     # number of input SHIFT sequences, only one set of input characters
X
X   0     # number of output SHIFT sequences, only one set of output characters
X  
X# conversion table
X# inp_set_numb  inp_seq        out_set_numb  out_seq
X     0         "\0xf0"              0       "\0xB3"  # capital Yo
X     0         "\0xf1"              0       "\0xA3"  # small yo
X     0         "\0x80"              0       "\0xE1"  # capital A
X     0         "\0x81"              0       "\0xE2"  # capital Be
X     0         "\0x82"              0       "\0xF7"  # capital Ve
X     0         "\0x83"              0       "\0xE7"  # capital Ghe
X     0         "\0x84"              0       "\0xE4"  # capital De
X     0         "\0x85"              0       "\0xE5"  # capital Ie
X     0         "\0x86"              0       "\0xF6"  # capital Zhe
X     0         "\0x87"              0       "\0xFA"  # capital Ze
X     0         "\0x88"              0       "\0xE9"  # capital I
X     0         "\0x89"              0       "\0xEA"  # capital short I
X     0         "\0x8a"              0       "\0xEB"  # capital Ka
X     0         "\0x8b"              0       "\0xEC"  # capital El
X     0         "\0x8c"              0       "\0xED"  # capital Em
X     0         "\0x8d"              0       "\0xEE"  # capital En
X     0         "\0x8e"              0       "\0xEF"  # capital O
X     0         "\0x8f"              0       "\0xF0"  # capital Pe
X     0         "\0x90"              0       "\0xF2"  # capital Er
X     0         "\0x91"              0       "\0xF3"  # capital Es
X     0         "\0x92"              0       "\0xF4"  # capital Te
X     0         "\0x93"              0       "\0xF5"  # capital U
X     0         "\0x94"              0       "\0xE6"  # capital Ef
X     0         "\0x95"              0       "\0xE8"  # capital Kha
X     0         "\0x96"              0       "\0xE3"  # capital Tse
X     0         "\0x97"              0       "\0xFE"  # capital Che
X     0         "\0x98"              0       "\0xFB"  # capital Sha
X     0         "\0x99"              0       "\0xFD"  # capital Shcha
X     0         "\0x9a"              0       "\0xFF"  # capital hard sign (Ier)
X     0         "\0x9b"              0       "\0xF9"  # capital Y (Iery)
X     0         "\0x9c"              0       "\0xF8"  # capital soft sign Ierik
X     0         "\0x9d"              0       "\0xFC"  # capital reverse round E
X     0         "\0x9e"              0       "\0xE0"  # capital Yu
X     0         "\0x9f"              0       "\0xF1"  # capital Ya
X     0         "\0xa0"              0       "\0xC1"  # small a
X     0         "\0xa1"              0       "\0xC2"  # small be
X     0         "\0xa2"              0       "\0xD7"  # small ve
X     0         "\0xa3"              0       "\0xC7"  # small ghe
X     0         "\0xa4"              0       "\0xC4"  # small de
X     0         "\0xa5"              0       "\0xC5"  # small ie
X     0         "\0xa6"              0       "\0xD6"  # small zhe
X     0         "\0xa7"              0       "\0xDA"  # small z
X     0         "\0xa8"              0       "\0xC9"  # small i
X     0         "\0xa9"              0       "\0xCA"  # small short i
X     0         "\0xaa"              0       "\0xCB"  # small ka
X     0         "\0xab"              0       "\0xCC"  # small el
X     0         "\0xac"              0       "\0xCD"  # small em
X     0         "\0xad"              0       "\0xCE"  # small en
X     0         "\0xae"              0       "\0xCF"  # small o
X     0         "\0xaf"              0       "\0xD0"  # small pe
X     0         "\0xe0"              0       "\0xD2"  # small er
X     0         "\0xe1"              0       "\0xD3"  # small es
X     0         "\0xe2"              0       "\0xD4"  # small te
X     0         "\0xe3"              0       "\0xD5"  # small u
X     0         "\0xe4"              0       "\0xC6"  # small ef
X     0         "\0xe5"              0       "\0xC8"  # small kha
X     0         "\0xe6"              0       "\0xC3"  # small tse
X     0         "\0xe7"              0       "\0xDE"  # small che
X     0         "\0xe8"              0       "\0xDB"  # small sha
X     0         "\0xe9"              0       "\0xDD"  # small shcha
X     0         "\0xea"              0       "\0xDF"  # small hard sign (ier)
X     0         "\0xeb"              0       "\0xD9"  # small y (iery)
X     0         "\0xec"              0       "\0xD8"  # small soft sign (ierik)
X     0         "\0xed"              0       "\0xDC"  # small reverse rounded e
X     0         "\0xee"              0       "\0xC0"  # small yu
X     0         "\0xef"              0       "\0xD1"  # small ya
END_OF_FILE
  if test 5082 -ne `wc -c <'alt-koi8.rus'`; then
    echo shar: \"'alt-koi8.rus'\" unpacked with wrong size!
  fi
  # end of 'alt-koi8.rus'
fi
if test -f 'announcement' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'announcement'\"
else
  echo shar: Extracting \"'announcement'\" \(2044 characters\)
  sed "s/^X//" >'announcement' <<'END_OF_FILE'
XTranslit --- general transliteration program is available. It transliterates
Xbetween different alphabet representations of different languages.
X
XIt is frequently necessary to convert from one representation to another
Xrepresentation of the foreign alphabet. E.g., in the Library of Congress
Xtransliteration, the Russian letter sha is transliterated as two Latin
Xletters "sh" while the popular word processors use a code 232 (decimal),
Xthe RELCOM network uses a code 221, and the KOI7 set uses character "["
Xfor the same letter. So if your screen driver, printer, word processor,
Xetc. uses different codes than the text file which you have, you need to
Xtransliterate.
X
XThe TRANSLIT program is a powerful tool for such tasks. It converts an input
Xfile in one representation to the output file in another representation using
Xappropriate, user defined, transliteration table. Transliteration table allows
Xfor very elaborate transliteration tasks and includes provisions for plain
Xcharacter sequences, character lists, regular expressions (flexible matches),
XSHIFT-OUT/IN sequences and more. The program comes with documentation and
Xexamples of popular transliteration schemes. The Russian language serves
Xas an example. Other files will be added with your collaboration.
X
XHow to get the program?
X
XFirst, retrieve file: readme.doc --- it describes the files in the program
Xdistribution and has detailed instructions on how to obtain the program.
X
XVia FTP (if you are on Internet):
X---------------------------------
X  ftp kekule.osc.edu           (or ftp 128.146.36.48)
X  Login: anonymous
X  Password: Your_email_address (Please...)
X  ftp> ascii  
X  ftp> cd pub/russian/translit
X  ftp> get readme.doc
X  ftp> quit
X
XVia E-mail:
X-----------
X  Send message:
X     send translit/readme.doc from russian
X  to OSCPOST@osc.edu or OSCPOST@OHSTPY.BITNET.  The file readme.doc will be
Xforwarded to your mailbox.
X
XEnjoy,
X
XAuthor coordinates:
XJan Labanowski
XP.O. Box 21821
XColumbus, OH 43221-0821, USA
Xjkl@osc.edu, JKL@OHSTPY.BITNET
X------------------------------
END_OF_FILE
  if test 2044 -ne `wc -c <'announcement'`; then
    echo shar: \"'announcement'\" unpacked with wrong size!
  fi
  # end of 'announcement'
fi
if test -f 'gos-koi8.rus' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'gos-koi8.rus'\"
else
  echo shar: Extracting \"'gos-koi8.rus'\" \(5211 characters\)
  sed "s/^X//" >'gos-koi8.rus' <<'END_OF_FILE'
X# Jan Labanowski, jkl@osc.edu, Dec. 30, 1992
X# File gos_koi8.rus
X
X# This is a transliteration data file for converting GOSTSCII 84
X# (approx. ISO-8859-5?) to KOI8 used by RELCOM 
X# KOI8 is meant to be GOST 19768-74
X
X# To be used with translit.c program by Jan Labanowski
X
X   1            file version number
X
X   "    "      # string delimiters
X   [    ]      # list delimites
X   {    }      # regular expression delimiters
X
X
X#starting sequence
X""
X
X
X#ending sequence
X""
X
X   0     # number of input SHIFT sequences, only one set of input characters
X
X   0     # number of output SHIFT sequences, only one set of output characters
X  
X# conversion table
X# inp_set_numb  inp_seq        out_set_numb  out_seq
X      0          "\0xF0"           0         "\0xB3"
X      0          "\0xF1"           0         "\0xA3"   #small yo
X      0          "\0xB0"           0         "\0xE1"   #capital  A
X      0          "\0xB1"           0         "\0xE2"   #capital  Be
X      0          "\0xB2"           0         "\0xF7"   #capital  Ve
X      0          "\0xB3"           0         "\0xE7"   #capital  Ghe
X      0          "\0xB4"           0         "\0xE4"   #capital  De
X      0          "\0xB5"           0         "\0xE5"   #capital  Ie
X      0          "\0xB6"           0         "\0xF6"   #capital  Zhe
X      0          "\0xB7"           0         "\0xFA"   #capital  Ze
X      0          "\0xB8"           0         "\0xE9"   #capital  I
X      0          "\0xB9"           0         "\0xEA"   #capital  short I
X      0          "\0xBA"           0         "\0xEB"   #capital  Ka
X      0          "\0xBB"           0         "\0xEC"   #capital  El
X      0          "\0xBC"           0         "\0xED"   #capital  Em
X      0          "\0xBD"           0         "\0xEE"   #capital  En
X      0          "\0xBE"           0         "\0xEF"   #capital  O
X      0          "\0xBF"           0         "\0xF0"   #capital  Pe
X      0          "\0xC0"           0         "\0xF2"   #capital  Er
X      0          "\0xC1"           0         "\0xF3"   #capital  Es
X      0          "\0xC2"           0         "\0xF4"   #capital  Te
X      0          "\0xC3"           0         "\0xF5"   #capital  U
X      0          "\0xC4"           0         "\0xE6"   #capital  Ef
X      0          "\0xC5"           0         "\0xE8"   #capital  Kha
X      0          "\0xC6"           0         "\0xE3"   #capital  Tse
X      0          "\0xC7"           0         "\0xFE"   #capital  Che
X      0          "\0xC8"           0         "\0xFB"   #capital  Sha
X      0          "\0xC9"           0         "\0xFD"   #capital  Shcha
X      0          "\0xCA"           0         "\0xFF"   #capital hard sign (Ier)
X      0          "\0xCB"           0         "\0xF9"   #capital  Y (Iery)
X      0          "\0xCC"           0         "\0xF8"   #capit soft sign(Ierik)
X      0          "\0xCD"           0         "\0xFC"   #capit reverse rounded E
X      0          "\0xCE"           0         "\0xE0"   #capital  Yu
X      0          "\0xCF"           0         "\0xF1"   #capital  Ya
X      0          "\0xD0"           0         "\0xC1"   #small  a
X      0          "\0xD1"           0         "\0xC2"   #small  be
X      0          "\0xD2"           0         "\0xD7"   #small  ve
X      0          "\0xD3"           0         "\0xC7"   #small  ghe
X      0          "\0xD4"           0         "\0xC4"   #small  de
X      0          "\0xD5"           0         "\0xC5"   #small  ie
X      0          "\0xD6"           0         "\0xD6"   #small  zhe
X      0          "\0xD7"           0         "\0xDA"   #small  z
X      0          "\0xD8"           0         "\0xC9"   #small  i
X      0          "\0xD9"           0         "\0xCA"   #small  short i
X      0          "\0xDA"           0         "\0xCB"   #small  ka
X      0          "\0xDB"           0         "\0xCC"   #small  el
X      0          "\0xDC"           0         "\0xCD"   #small  em
X      0          "\0xDD"           0         "\0xCE"   #small  en
X      0          "\0xDE"           0         "\0xCF"   #small  o
X      0          "\0xDF"           0         "\0xD0"   #small  pe
X      0          "\0xE0"           0         "\0xD2"   #small  er
X      0          "\0xE1"           0         "\0xD3"   #small  es
X      0          "\0xE2"           0         "\0xD4"   #small  te
X      0          "\0xE3"           0         "\0xD5"   #small  u
X      0          "\0xE4"           0         "\0xC6"   #small  ef
X      0          "\0xE5"           0         "\0xC8"   #small  kha
X      0          "\0xE6"           0         "\0xC3"   #small  tse
X      0          "\0xE7"           0         "\0xDE"   #small  che
X      0          "\0xE8"           0         "\0xDB"   #small  sha
X      0          "\0xE9"           0         "\0xDD"   #small  shcha
X      0          "\0xEA"           0         "\0xDF"   #small hard sign (ier)
X      0          "\0xEB"           0         "\0xD9"   #small  y (iery)
X      0          "\0xEC"           0         "\0xD8"   #small soft sign (ierik)
X      0          "\0xED"           0         "\0xDC"   #small  rev rounded e
X      0          "\0xEE"           0         "\0xC0"   #small  yu
X      0          "\0xEF"           0         "\0xD1"   #small  ya
END_OF_FILE
  if test 5211 -ne `wc -c <'gos-koi8.rus'`; then
    echo shar: \"'gos-koi8.rus'\" unpacked with wrong size!
  fi
  # end of 'gos-koi8.rus'
fi
if test -f 'koi8-alt.rus' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'koi8-alt.rus'\"
else
  echo shar: Extracting \"'koi8-alt.rus'\" \(5096 characters\)
  sed "s/^X//" >'koi8-alt.rus' <<'END_OF_FILE'
X# Jan Labanowski, jkl@osc.edu, Dec. 30, 1992
X# File koi8_alt.rus
X
X# This is a transliteration data file for converting from KOI8
X# KOI8 is meant to be GOST 19768-74, to ALT (Bryabrins alternativnyj variant)
X# To be used with translit.c program by Jan Labanowski
X
X   1            file version number
X
X   "    "      # string delimiters
X   [    ]      # list delimites
X   {    }      # regular expression delimiters
X
X
X#starting sequence
X""
X
X
X#ending sequence
X""
X
X   0     # number of input SHIFT sequences, only one set of input characters
X
X   0     # number of output SHIFT sequences, only one set of output characters
X  
X# conversion table
X# inp_set_numb  inp_seq        out_set_numb  out_seq
X     0          "\0xB3"             0       "\0xf0"  # capital Yo
X     0          "\0xA3"             0       "\0xf1"  # small yo
X     0          "\0xE1"             0       "\0x80"  # capital A
X     0          "\0xE2"             0       "\0x81"  # capital Be
X     0          "\0xF7"             0       "\0x82"  # capital Ve
X     0          "\0xE7"             0       "\0x83"  # capital Ghe
X     0          "\0xE4"             0       "\0x84"  # capital De
X     0          "\0xE5"             0       "\0x85"  # capital Ie
X     0          "\0xF6"             0       "\0x86"  # capital Zhe
X     0          "\0xFA"             0       "\0x87"  # capital Ze
X     0          "\0xE9"             0       "\0x88"  # capital I
X     0          "\0xEA"             0       "\0x89"  # capital short I
X     0          "\0xEB"             0       "\0x8a"  # capital Ka
X     0          "\0xEC"             0       "\0x8b"  # capital El
X     0          "\0xED"             0       "\0x8c"  # capital Em
X     0          "\0xEE"             0       "\0x8d"  # capital En
X     0          "\0xEF"             0       "\0x8e"  # capital O
X     0          "\0xF0"             0       "\0x8f"  # capital Pe
X     0          "\0xF2"             0       "\0x90"  # capital Er
X     0          "\0xF3"             0       "\0x91"  # capital Es
X     0          "\0xF4"             0       "\0x92"  # capital Te
X     0          "\0xF5"             0       "\0x93"  # capital U
X     0          "\0xE6"             0       "\0x94"  # capital Ef
X     0          "\0xE8"             0       "\0x95"  # capital Kha
X     0          "\0xE3"             0       "\0x96"  # capital Tse
X     0          "\0xFE"             0       "\0x97"  # capital Che
X     0          "\0xFB"             0       "\0x98"  # capital Sha
X     0          "\0xFD"             0       "\0x99"  # capital Shcha
X     0          "\0xFF"             0       "\0x9a"  # capital hard sign (Ier)
X     0          "\0xF9"             0       "\0x9b"  # capital Y (Iery)
X     0          "\0xF8"             0       "\0x9c"  # capital soft sign Ierik
X     0          "\0xFC"             0       "\0x9d"  # capital reverse round E
X     0          "\0xE0"             0       "\0x9e"  # capital Yu
X     0          "\0xF1"             0       "\0x9f"  # capital Ya
X     0          "\0xC1"             0       "\0xa0"  # small a
X     0          "\0xC2"             0       "\0xa1"  # small be
X     0          "\0xD7"             0       "\0xa2"  # small ve
X     0          "\0xC7"             0       "\0xa3"  # small ghe
X     0          "\0xC4"             0       "\0xa4"  # small de
X     0          "\0xC5"             0       "\0xa5"  # small ie
X     0          "\0xD6"             0       "\0xa6"  # small zhe
X     0          "\0xDA"             0       "\0xa7"  # small z
X     0          "\0xC9"             0       "\0xa8"  # small i
X     0          "\0xCA"             0       "\0xa9"  # small short i
X     0          "\0xCB"             0       "\0xaa"  # small ka
X     0          "\0xCC"             0       "\0xab"  # small el
X     0          "\0xCD"             0       "\0xac"  # small em
X     0          "\0xCE"             0       "\0xad"  # small en
X     0          "\0xCF"             0       "\0xae"  # small o
X     0          "\0xD0"             0       "\0xaf"  # small pe
X     0          "\0xD2"             0       "\0xe0"  # small er
X     0          "\0xD3"             0       "\0xe1"  # small es
X     0          "\0xD4"             0       "\0xe2"  # small te
X     0          "\0xD5"             0       "\0xe3"  # small u
X     0          "\0xC6"             0       "\0xe4"  # small ef
X     0          "\0xC8"             0       "\0xe5"  # small kha
X     0          "\0xC3"             0       "\0xe6"  # small tse
X     0          "\0xDE"             0       "\0xe7"  # small che
X     0          "\0xDB"             0       "\0xe8"  # small sha
X     0          "\0xDD"             0       "\0xe9"  # small shcha
X     0          "\0xDF"             0       "\0xea"  # small hard sign (ier)
X     0          "\0xD9"             0       "\0xeb"  # small y (iery)
X     0          "\0xD8"             0       "\0xec"  # small soft sign (ierik)
X     0          "\0xDC"             0       "\0xed"  # small reverse rounded e
X     0          "\0xC0"             0       "\0xee"  # small yu
X     0          "\0xD1"             0       "\0xef"  # small ya
END_OF_FILE
  if test 5096 -ne `wc -c <'koi8-alt.rus'`; then
    echo shar: \"'koi8-alt.rus'\" unpacked with wrong size!
  fi
  # end of 'koi8-alt.rus'
fi
if test -f 'koi8-gos.rus' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'koi8-gos.rus'\"
else
  echo shar: Extracting \"'koi8-gos.rus'\" \(5220 characters\)
  sed "s/^X//" >'koi8-gos.rus' <<'END_OF_FILE'
X# Jan Labanowski, jkl@osc.edu, Dec. 30, 1992
X# File koi8_gos.rus
X
X# This is a transliteration data file for converting from KOI8 (Relcom)
X# KOI8 is meant to be GOST 19768-74, to GOSTSCII 84 (approx. ISO-8859-5)
X# To be used with translit.c program by Jan Labanowski
X
X   1            file version number
X
X   "    "      # string delimiters
X   [    ]      # list delimites
X   {    }      # regular expression delimiters
X
X
X#starting sequence
X""
X
X
X#ending sequence
X""
X
X   0     # number of input SHIFT sequences, only one set of input characters
X
X   0     # number of output SHIFT sequences, only one set of output characters
X  
X# conversion table
X# inp_set_numb  inp_seq        out_set_numb  out_seq
X      0          "\0xB3"           0          "\0xF0   #capital Yo
X      0          "\0xA3"           0          "\0xF1"  #small yo
X      0          "\0xE1"           0          "\0xB0"  #capital  A
X      0          "\0xE2"           0          "\0xB1"  #capital  Be
X      0          "\0xF7"           0          "\0xB2"  #capital  Ve
X      0          "\0xE7"           0          "\0xB3"  #capital  Ghe
X      0          "\0xE4"           0          "\0xB4"  #capital  De
X      0          "\0xE5"           0          "\0xB5"  #capital  Ie
X      0          "\0xF6"           0          "\0xB6"  #capital  Zhe
X      0          "\0xFA"           0          "\0xB7"  #capital  Ze
X      0          "\0xE9"           0          "\0xB8"  #capital  I
X      0          "\0xEA"           0          "\0xB9"  #capital  short I
X      0          "\0xEB"           0          "\0xBA"  #capital  Ka
X      0          "\0xEC"           0          "\0xBB"  #capital  El
X      0          "\0xED"           0          "\0xBC"  #capital  Em
X      0          "\0xEE"           0          "\0xBD"  #capital  En
X      0          "\0xEF"           0          "\0xBE"  #capital  O
X      0          "\0xF0"           0          "\0xBF"  #capital  Pe
X      0          "\0xF2"           0          "\0xC0"  #capital  Er
X      0          "\0xF3"           0          "\0xC1"  #capital  Es
X      0          "\0xF4"           0          "\0xC2"  #capital  Te
X      0          "\0xF5"           0          "\0xC3"  #capital  U
X      0          "\0xE6"           0          "\0xC4"  #capital  Ef
X      0          "\0xE8"           0          "\0xC5"  #capital  Kha
X      0          "\0xE3"           0          "\0xC6"  #capital  Tse
X      0          "\0xFE"           0          "\0xC7"  #capital  Che
X      0          "\0xFB"           0          "\0xC8"  #capital  Sha
X      0          "\0xFD"           0          "\0xC9"  #capital  Shcha
X      0          "\0xFF"           0          "\0xCA"  #capital hard sign (Ier)
X      0          "\0xF9"           0          "\0xCB"  #capital  Y (Iery)
X      0          "\0xF8"           0          "\0xCC"  #capit soft sign(Ierik)
X      0          "\0xFC"           0          "\0xCD"  #capit reverse rounded E
X      0          "\0xE0"           0          "\0xCE"  #capital  Yu
X      0          "\0xF1"           0          "\0xCF"  #capital  Ya
X      0          "\0xC1"           0          "\0xD0"  #small  a
X      0          "\0xC2"           0          "\0xD1"  #small  be
X      0          "\0xD7"           0          "\0xD2"  #small  ve
X      0          "\0xC7"           0          "\0xD3"  #small  ghe
X      0          "\0xC4"           0          "\0xD4"  #small  de
X      0          "\0xC5"           0          "\0xD5"  #small  ie
X      0          "\0xD6"           0          "\0xD6"  #small  zhe
X      0          "\0xDA"           0          "\0xD7"  #small  z
X      0          "\0xC9"           0          "\0xD8"  #small  i
X      0          "\0xCA"           0          "\0xD9"  #small  short i
X      0          "\0xCB"           0          "\0xDA"  #small  ka
X      0          "\0xCC"           0          "\0xDB"  #small  el
X      0          "\0xCD"           0          "\0xDC"  #small  em
X      0          "\0xCE"           0          "\0xDD"  #small  en
X      0          "\0xCF"           0          "\0xDE"  #small  o
X      0          "\0xD0"           0          "\0xDF"  #small  pe
X      0          "\0xD2"           0          "\0xE0"  #small  er
X      0          "\0xD3"           0          "\0xE1"  #small  es
X      0          "\0xD4"           0          "\0xE2"  #small  te
X      0          "\0xD5"           0          "\0xE3"  #small  u
X      0          "\0xC6"           0          "\0xE4"  #small  ef
X      0          "\0xC8"           0          "\0xE5"  #small  kha
X      0          "\0xC3"           0          "\0xE6"  #small  tse
X      0          "\0xDE"           0          "\0xE7"  #small  che
X      0          "\0xDB"           0          "\0xE8"  #small  sha
X      0          "\0xDD"           0          "\0xE9"  #small  shcha
X      0          "\0xDF"           0          "\0xEA"  #small hard sign (ier)
X      0          "\0xD9"           0          "\0xEB"  #small  y (iery)
X      0          "\0xD8"           0          "\0xEC"  #small soft sign (ierik)
X      0          "\0xDC"           0          "\0xED"  #small  rev rounded e
X      0          "\0xC0"           0          "\0xEE"  #small  yu
X      0          "\0xD1"           0          "\0xEF"  #small  ya
END_OF_FILE
  if test 5220 -ne `wc -c <'koi8-gos.rus'`; then
    echo shar: \"'koi8-gos.rus'\" unpacked with wrong size!
  fi
  # end of 'koi8-gos.rus'
fi
if test -f 'paths.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'paths.h'\"
else
  echo shar: Extracting \"'paths.h'\" \(2971 characters\)
  sed "s/^X//" >'paths.h' <<'END_OF_FILE'
X/* Include file for translit.c program
X * Copyright (c) 1993 Jan Labanowski and JKL Enterprises, Inc.
X *   Jan Labanowski, jkl@osc.edu, JKL@OHSTPY.BITNET Jan. 5, 1993
X * You must modify this file before you try to compile the program
X */
X
X
X/* these are "standard" include files. Some may have different names on
X   your system. If program complains here, you need to check it */
X
X#include <stdio.h>
X#include <string.h>     /* some older machines have <strings.h> !!! */
X#include <stdlib.h>     /* some machines use <unix.h> here or some/no-thing */
X#include <ctype.h>
X
X
X/* These are some defines which relate to the system and compiler
X * you are running:
X *     1 (one) means YES, TRUE,
X *     0 (zero) means NO, FALSE
X */
X#define GETOPT  1   /* does your C compiler have getopt routine? Most compilers
X                       do, but for example VAX C does not. Some PCs do not,
X                       UN*X usually has.  Enter 1 if you have
X                       getopt and 0 if you do not. */
X
X#define GETENV  1   /* does your C compiler and system have getenv routine?
X                       To my knowledge all UN*X, VAX-VMS and MS-DOS have.
X                       Enter 1 if you have it, and 0 if you do not. If you do
X                       not have GETENV, you do not have environment. */
X
X#define STRCHR  1   /* the routine finding a position of a character in 
X                       a string is called strchr. If you do not have this
X                       routine, say 0, if you have it, say 1 */
X
X#define STRCSPN 1   /* some compiler libaries do not have the strcspn routine.
X                       If you have it enter 1, if you do not, enter 0 */
X
X#define STATICFUN   1   /* if your compiler supports declarations of 
X                           static functions:
X                                static int boo(foo)
X                           enter 1. If it chokes on it, change to 0.  */
X
X
X/* if transliteration table file is not found in the current directory
X * program looks for this file in directory pointed by PATH. For UNIX
X * it might be something like "/usr/local/lib/", and for MS-DOS it maybe
X * something like: "C:\\INCLUDE\\". Remember to put a slash(backslash)
X * after last subdirectory name. For DOS remember that backslashes have
X * to be quoted, i.e., you enter the backslash twice. I did not check it
X * for the VAX.
X */
X                 /* search path for transliteration rules files */
X#define TPATH    "/usr/local/lib/translit/"
X
X/* DECONVNAME --- default file name for conversion table (no path, just
X * file name.
X */
X#define DEFCONVNAME "koi8-tex.rus"
X
X
X/* if environment variables TRANSP and TRANSF are defined, the
X   TPATH and DECONVNAME are taken from them, not from the above defs.
X   If these environment variables are booked you need to put here
X   something else.  */
X
X/* name of envoronment variable with TPATH */
X#define TRANSPATH "TRANSP"
X
X/* name of environment variable with DEFCONVNAME */
X#define DEFNAME   "TRANSF"
X
END_OF_FILE
  if test 2971 -ne `wc -c <'paths.h'`; then
    echo shar: \"'paths.h'\" unpacked with wrong size!
  fi
  # end of 'paths.h'
fi
echo shar: End of archive 10 \(of 10\).
cp /dev/null ark10isdone
MISSING=""
for I in 1 2 3 4 5 6 7 8 9 10 ; do
    if test ! -f ark${I}isdone ; then
	MISSING="${MISSING} ${I}"
    fi
done
if test "${MISSING}" = "" ; then
    echo You have unpacked all 10 archives.
    rm -f ark[1-9]isdone ark[1-9][0-9]isdone
else
    echo You still must unpack the following archives:
    echo "        " ${MISSING}
fi
exit 0
exit 0 # Just in case...
