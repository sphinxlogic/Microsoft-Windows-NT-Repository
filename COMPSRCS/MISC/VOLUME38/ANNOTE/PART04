Newsgroups: comp.sources.misc
From: arrouye@cosmos.imag.fr (Yves Arrouye)
Subject: v38i008:  annote - BibTeX styles supporting annotations, v1.5.1, Part04/04
Message-ID: <1993Jun17.185647.10453@sparky.imd.sterling.com>
X-Md4-Signature: b7bc6fe0da7727ad845b2efcb6141beb
Sender: kent@sparky.imd.sterling.com (Kent Landfield)
Organization: IMAG Institute, University of Grenoble
Date: Thu, 17 Jun 1993 18:56:47 GMT
Approved: kent@sparky.imd.sterling.com

Submitted-by: arrouye@cosmos.imag.fr (Yves Arrouye)
Posting-number: Volume 38, Issue 8
Archive-name: annote/part04
Environment: LaTex
Supersedes: annote: Volume 37, Issue 57-59

#! /bin/sh
# This is a shell archive.  Remove anything before this line, then unpack
# it by saving it into a file and typing "sh file".  To overwrite existing
# files, type "sh file -c".  You can also feed this as standard input via
# unshar, or by typing "sh <file", e.g..  If this archive is complete, you
# will see the following message at the end:
#		"End of shell archive."
# Contents:  siam.bst fsiam.bst lsiam.bst
# Wrapped by arrouye@cosmos on Tue Jun  8 13:47:10 1993
PATH=/bin:/usr/bin:/usr/ucb ; export PATH
if test -f 'siam.bst' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'siam.bst'\"
else
echo shar: Extracting \"'siam.bst'\" \(19083 characters\)
sed "s/^X//" >'siam.bst' <<'END_OF_FILE'
X% Style file modified on Tue Jun  8 12:31:16 1993 with `annotebib.el' v1.5.1
X%                     by Yves.Arrouye <arrouye@cosmos>
X%                     to support the `annote' annotation field.
X% Style file modified on Tue Jun  8 12:31:16 1993 with `annotebib.el' v1.5.1
X%                     by Yves.Arrouye <arrouye@cosmos>
X%                     to support the `commentaire' annotation field.
X
X% This bibliography style was made `annote'-compatible by "annotebib.el".
X% It can be used for both annotated and non-annotated bibliographies listing
X% (`annote' package by Yves Arrouye <arrouye@imag.imag.fr>).
X
X% SIAM bibliography style (29-Jan-88 version)
X%    numeric labels, alphabetic order, Mathematical Reviews abbreviations,
X%    names in \sc, titles in italics, book titles mixed upper-lower and article
X%    titles lowercase, commas separate all fields except before "notes".
X%
X%   History
X%    1/30/86	(HWT)	Original version, by Howard Trickey.
X%    6/15/87	(HWT)	Fix format.editors---Martin Costabel.
X%    1/29/88	(OP&HWT) Updated for BibTeX version 0.99a, Oren Patashnik;
X%			THIS `siam' VERSION DOES NOT WORK WITH BIBTEX 0.98i.
X
XENTRY
X  { annote
X    commentaire
X    address
X    author
X    booktitle
X    chapter
X    edition
X    editor
X    howpublished
X    institution
X    journal
X    key
X    month
X    note
X    number
X    organization
X    pages
X    publisher
X    school
X    series
X    title
X    type
X    volume
X    year
X  }
X  {}
X  { label }
X
XINTEGERS { output.state before.all mid.sentence after.block }
X
XFUNCTION {init.state.consts}
X{ #0 'before.all :=
X  #1 'mid.sentence :=
X  #2 'after.block :=
X}
X
XSTRINGS { s t }
X
XFUNCTION {output.nonnull}
X{ 's :=
X  output.state mid.sentence =
X    { ", " * write$ }
X    { output.state after.block =
X	{ add.period$ write$
X	  newline$
X	  "\newblock " write$
X	}
X	'write$
X      if$
X      mid.sentence 'output.state :=
X    }
X  if$
X  s
X}
X
XFUNCTION {output}
X{ duplicate$ empty$
X    'pop$
X    'output.nonnull
X  if$
X}
X
XFUNCTION {output.check}
X{ 't :=
X  duplicate$ empty$
X    { pop$ "empty " t * " in " * cite$ * warning$ }
X    'output.nonnull
X  if$
X}
X
XFUNCTION {output.bibitem}
X{ newline$
X  "\bibitem{" write$
X  cite$ write$
X  "}" write$
X  newline$
X  ""
X  before.all 'output.state :=
X}
X
XFUNCTION {annotebib.format.commentaire}
X{ commentaire empty$
X        { "" }
X        { "\ifx\commentaire\undefined\else\begin{commentaire} "
X          commentaire
X          * " \end{commentaire}\fi " *
X        }
X      if$
X}
X
XFUNCTION {annotebib.format.annote}
X{ annote empty$
X        { "" }
X        { "\ifx\annote\undefined\else\begin{annote} "
X          annote
X          * " \end{annote}\fi " *
X        }
X      if$
X}
X
XFUNCTION {fin.entry}
X{ add.period$
X  write$
X  newline$
X  annotebib.format.commentaire write$
X  annotebib.format.annote write$
X}
X
XFUNCTION {new.block}
X{ output.state before.all =
X    'skip$
X    { after.block 'output.state := }
X  if$
X}
X
XFUNCTION {not}
X{   { #0 }
X    { #1 }
X  if$
X}
X
XFUNCTION {and}
X{   'skip$
X    { pop$ #0 }
X  if$
X}
X
XFUNCTION {or}
X{   { pop$ #1 }
X    'skip$
X  if$
X}
X
XFUNCTION {new.block.checka}
X{ empty$
X    'skip$
X    'new.block
X  if$
X}
X
XFUNCTION {field.or.null}
X{ duplicate$ empty$
X    { pop$ "" }
X    'skip$
X  if$
X}
X
XFUNCTION {emphasize}
X{ duplicate$ empty$
X    { pop$ "" }
X    { "{\em " swap$ * "}" * }
X  if$
X}
X
XFUNCTION {scapify}
X{ duplicate$ empty$
X    { pop$ "" }
X    { "{\sc " swap$ * "}" * }
X  if$
X}
X
XINTEGERS { nameptr namesleft numnames }
X
XFUNCTION {format.names}
X{ 's :=
X  #1 'nameptr :=
X  s num.names$ 'numnames :=
X  numnames 'namesleft :=
X    { namesleft #0 > }
X    { s nameptr "{f.~}{vv~}{ll}{, jj}" format.name$ 't :=
X      nameptr #1 >
X	{ namesleft #1 >
X	    { ", " * t * }
X	    { numnames #2 >
X		{ "," * }
X		'skip$
X	      if$
X	      t "others" =
X		{ " et~al." * }
X		{ " and " * t * }
X	      if$
X	    }
X	  if$
X	}
X	't
X      if$
X      nameptr #1 + 'nameptr :=
X      namesleft #1 - 'namesleft :=
X    }
X  while$
X}
X
XSTRINGS { last.authors }
X
XFUNCTION {init.last.authors}
X{ "" 'last.authors :=
X}
X
XFUNCTION {format.authors}
X{ author empty$
X    { "" 'last.authors :=
X      ""
X    }
X    { author last.authors =
X        { "\leavevmode\vrule height 2pt depth -1.6pt width 23pt" }
X        { author format.names scapify }
X      if$
X      author 'last.authors :=
X    }
X  if$
X}
X
XFUNCTION {format.organization}
X{ organization empty$
X    { "" 'last.authors :=
X      ""
X    }
X    { organization last.authors =
X        { "\leavevmode\vrule height 2pt depth -1.6pt width 23pt" }
X        { organization scapify }
X      if$
X      organization 'last.authors :=
X    }
X  if$
X}
X
XFUNCTION {format.editors}
X{ editor empty$
X    { "" 'last.authors :=
X      ""
X    }
X    { editor last.authors =
X        { "\leavevmode\vrule height 2pt depth -1.6pt width 23pt" }
X	{ editor format.names scapify }
X      if$
X      editor num.names$ #1 >
X        { ", eds." * }
X	{ ", ed." * }
X      if$
X      editor 'last.authors :=
X    }
X  if$
X}
X
XFUNCTION {format.ineditors}
X{ editor empty$
X    { "" }
X    { editor format.names
X      editor num.names$ #1 >
X	{ ", eds." * }
X	{ ", ed." * }
X      if$
X    }
X  if$
X}
X
XFUNCTION {format.title}
X{ title empty$
X    { "" }
X    { title "t" change.case$ emphasize }
X  if$
X}
X
XFUNCTION {n.dashify}
X{ 't :=
X  ""
X    { t empty$ not }
X    { t #1 #1 substring$ "-" =
X	{ t #1 #2 substring$ "--" = not
X	    { "--" *
X	      t #2 global.max$ substring$ 't :=
X	    }
X	    {   { t #1 #1 substring$ "-" = }
X		{ "-" *
X		  t #2 global.max$ substring$ 't :=
X		}
X	      while$
X	    }
X	  if$
X	}
X	{ t #1 #1 substring$ *
X	  t #2 global.max$ substring$ 't :=
X	}
X      if$
X    }
X  while$
X}
X
XFUNCTION {format.date}
X{ year empty$
X    { month empty$
X	{ "" }
X	{ "there's a month but no year in " cite$ * warning$
X	  month
X	}
X      if$
X    }
X    { month empty$
X	'year
X	{ month " " * year * }
X      if$
X    }
X  if$
X}
X
XFUNCTION {format.btitle}
X{ title emphasize
X}
X
XFUNCTION {tie.or.space.connect}
X{ duplicate$ text.length$ #3 <
X    { "~" }
X    { " " }
X  if$
X  swap$ * *
X}
X
XFUNCTION {either.or.check}
X{ empty$
X    'pop$
X    { "can't use both " swap$ * " fields in " * cite$ * warning$ }
X  if$
X}
X
XFUNCTION {format.bvolume}
X{ volume empty$
X    { "" }
X    { "vol.~" volume *
X      series empty$
X	'skip$
X	{ " of " * series * }
X      if$
X      "volume and number" number either.or.check
X    }
X  if$
X}
X
XFUNCTION {format.number.series}
X{ volume empty$
X    { number empty$
X	{ series field.or.null }
X	{ "no.~" number *
X	  series empty$
X	    { "there's a number but no series in " cite$ * warning$ }
X	    { " in " * series * }
X	  if$
X	}
X      if$
X    }
X    { "" }
X  if$
X}
X
XFUNCTION {format.edition}
X{ edition empty$
X    { "" }
X    { edition "l" change.case$ "~ed." * }
X  if$
X}
X
XINTEGERS { multiresult }
X
XFUNCTION {multi.page.check}
X{ 't :=
X  #0 'multiresult :=
X    { multiresult not
X      t empty$ not
X      and
X    }
X    { t #1 #1 substring$
X      duplicate$ "-" =
X      swap$ duplicate$ "," =
X      swap$ "+" =
X      or or
X	{ #1 'multiresult := }
X	{ t #2 global.max$ substring$ 't := }
X      if$
X    }
X  while$
X  multiresult
X}
X
XFUNCTION {format.pages}
X{ pages empty$
X    { "" }
X    { pages multi.page.check
X	{ "pp.~" pages n.dashify * }
X	{ "p.~" pages * }
X      if$
X    }
X  if$
X}
X
XFUNCTION {format.vol.year}
X{ volume field.or.null
X  year empty$
X    { "empty year in " cite$ * warning$ }
X    { " (" year * ")" * * }
X  if$
X}
X
XFUNCTION {format.chapter.pages}
X{ chapter empty$
X    'format.pages
X    { type empty$
X	{ "ch.~" chapter * }
X	{ type "l" change.case$ chapter tie.or.space.connect }
X      if$
X      pages empty$
X	'skip$
X	{ ", " * format.pages * }
X      if$
X    }
X  if$
X}
X
XFUNCTION {format.in.ed.booktitle}
X{ booktitle empty$
X    { "" }
X    { editor empty$
X	{ "in " booktitle * }
X	{ "in " booktitle * ", " * format.ineditors * }
X      if$
X    }
X  if$
X}
X
XFUNCTION {empty.misc.check}
X{ author empty$ title empty$ howpublished empty$
X  month empty$ year empty$ note empty$
X  and and and and and
X  key empty$ not and
X    { "all relevant fields are empty in " cite$ * warning$ }
X    'skip$
X  if$
X}
X
XFUNCTION {format.thesis.type}
X{ type empty$
X    'skip$
X    { pop$
X      type "l" change.case$
X    }
X  if$
X}
X
XFUNCTION {format.tr.number}
X{ type empty$
X    { "Tech. Rep." }
X    'type
X  if$
X  number empty$
X    { "l" change.case$ }
X    { number tie.or.space.connect }
X  if$
X}
X
XFUNCTION {format.article.crossref}
X{ key empty$
X    { journal empty$
X	{ "need key or journal for " cite$ * " to crossref " * crossref *
X	  warning$
X	  ""
X	}
X	{ "in " journal * }
X      if$
X    }
X    { "in " key * }
X  if$
X  " \cite{" * crossref * "}" *
X}
X
XFUNCTION {format.crossref.editor}
X{ editor #1 "{vv~}{ll}" format.name$
X  editor num.names$ duplicate$
X  #2 >
X    { pop$ " et~al." * }
X    { #2 <
X	'skip$
X	{ editor #2 "{ff }{vv }{ll}{ jj}" format.name$ "others" =
X	    { " et~al." * }
X	    { " and " * editor #2 "{vv~}{ll}" format.name$ * }
X	  if$
X	}
X      if$
X    }
X  if$
X}
X
XFUNCTION {format.book.crossref}
X{ volume empty$
X    { "empty volume in " cite$ * "'s crossref of " * crossref * warning$
X      "in "
X    }
X    { "vol.~" volume *
X      " of " *
X    }
X  if$
X  editor empty$
X  editor field.or.null author field.or.null =
X  or
X    { key empty$
X	{ series empty$
X	    { "need editor, key, or series for " cite$ * " to crossref " *
X	      crossref * warning$
X	      "" *
X	    }
X	    { series * }
X	  if$
X	}
X	{ key * }
X      if$
X    }
X    { format.crossref.editor * }
X  if$
X  " \cite{" * crossref * "}" *
X}
X
XFUNCTION {format.incoll.inproc.crossref}
X{ editor empty$
X  editor field.or.null author field.or.null =
X  or
X    { key empty$
X	{ booktitle empty$
X	    { "need editor, key, or booktitle for " cite$ * " to crossref " *
X	      crossref * warning$
X	      ""
X	    }
X	    { "in " booktitle * }
X	  if$
X	}
X	{ "in " key * }
X      if$
X    }
X    { "in " format.crossref.editor * }
X  if$
X  " \cite{" * crossref * "}" *
X}
X
XFUNCTION {article}
X{ output.bibitem
X  format.authors "author" output.check
X  format.title "title" output.check
X  crossref missing$
X    { journal "journal" output.check
X      format.vol.year output
X    }
X    { format.article.crossref output.nonnull }
X  if$
X  format.pages output
X  new.block
X  note output
X  fin.entry
X}
X
XFUNCTION {book}
X{ output.bibitem
X  author empty$
X    { format.editors "author and editor" output.check }
X    { format.authors output.nonnull
X      crossref missing$
X	{ "author and editor" editor either.or.check }
X	'skip$
X      if$
X    }
X  if$
X  format.btitle "title" output.check
X  crossref missing$
X    { format.bvolume output
X      format.number.series output
X      publisher "publisher" output.check
X      address output
X    }
X    { format.book.crossref output.nonnull }
X  if$
X  format.edition output
X  format.date "year" output.check
X  new.block
X  note output
X  fin.entry
X}
X
XFUNCTION {booklet}
X{ output.bibitem
X  format.authors output
X  format.title "title" output.check
X  howpublished new.block.checka
X  howpublished output
X  address output
X  format.date output
X  new.block
X  note output
X  fin.entry
X}
X
XFUNCTION {inbook}
X{ output.bibitem
X  author empty$
X    { format.editors "author and editor" output.check }
X    { format.authors output.nonnull
X      crossref missing$
X	{ "author and editor" editor either.or.check }
X	'skip$
X      if$
X    }
X  if$
X  format.btitle "title" output.check
X  crossref missing$
X    { format.bvolume output
X      format.number.series output
X      publisher "publisher" output.check
X      address output
X    }
X    { format.book.crossref output.nonnull }
X  if$
X  format.edition output
X  format.date "year" output.check
X  format.chapter.pages "chapter and pages" output.check
X  new.block
X  note output
X  fin.entry
X}
X
XFUNCTION {incollection}
X{ output.bibitem
X  format.authors "author" output.check
X  format.title "title" output.check
X  crossref missing$
X    { format.in.ed.booktitle "booktitle" output.check
X      format.bvolume output
X      format.number.series output
X      publisher "publisher" output.check
X      address output
X      format.edition output
X      format.date "year" output.check
X    }
X    { format.incoll.inproc.crossref output.nonnull }
X  if$
X  format.chapter.pages output
X  new.block
X  note output
X  fin.entry
X}
X
XFUNCTION {inproceedings}
X{ output.bibitem
X  format.authors "author" output.check
X  format.title "title" output.check
X  crossref missing$
X    { format.in.ed.booktitle "booktitle" output.check
X      format.bvolume output
X      format.number.series output
X      address empty$
X	{ organization output
X	  publisher output
X	  format.date "year" output.check
X	}
X	{ address output.nonnull
X	  format.date "year" output.check
X	  organization output
X	  publisher output
X	}
X      if$
X    }
X    { format.incoll.inproc.crossref output.nonnull }
X  if$
X  format.pages output
X  new.block
X  note output
X  fin.entry
X}
X
XFUNCTION {conference} { inproceedings }
X
XFUNCTION {manual}
X{ output.bibitem
X  author empty$
X    { format.organization output }
X    { format.authors output.nonnull }
X  if$
X  format.btitle "title" output.check
X  author empty$
X    'skip$
X    { organization output }
X  if$
X  address output
X  format.edition output
X  format.date output
X  new.block
X  note output
X  fin.entry
X}
X
XFUNCTION {mastersthesis}
X{ output.bibitem
X  format.authors "author" output.check
X  format.title "title" output.check
X  "Master's thesis" format.thesis.type output.nonnull
X  school "school" output.check
X  address output
X  format.date "year" output.check
X  new.block
X  note output
X  fin.entry
X}
X
XFUNCTION {misc}
X{ output.bibitem
X  format.authors output
X  format.title output
X  howpublished new.block.checka
X  howpublished output
X  format.date output
X  new.block
X  note output
X  fin.entry
X  empty.misc.check
X}
X
XFUNCTION {phdthesis}
X{ output.bibitem
X  format.authors "author" output.check
X  format.btitle "title" output.check
X  "PhD thesis" format.thesis.type output.nonnull
X  school "school" output.check
X  address output
X  format.date "year" output.check
X  new.block
X  note output
X  fin.entry
X}
X
XFUNCTION {proceedings}
X{ output.bibitem
X  editor empty$
X    { format.organization output }
X    { format.editors output.nonnull }
X  if$
X  format.btitle "title" output.check
X  format.bvolume output
X  format.number.series output
X  address empty$
X    { editor empty$
X	'skip$
X	{ organization output }
X      if$
X      publisher output
X      format.date "year" output.check
X    }
X    { address output.nonnull
X      format.date "year" output.check
X      editor empty$
X	'skip$
X	{ organization output }
X      if$
X      publisher output
X    }
X  if$
X  new.block
X  note output
X  fin.entry
X}
X
XFUNCTION {techreport}
X{ output.bibitem
X  format.authors "author" output.check
X  format.title "title" output.check
X  format.tr.number output.nonnull
X  institution "institution" output.check
X  address output
X  format.date "year" output.check
X  new.block
X  note output
X  fin.entry
X}
X
XFUNCTION {unpublished}
X{ output.bibitem
X  format.authors "author" output.check
X  format.title "title" output.check
X  new.block
X  note "note" output.check
X  format.date output
X  fin.entry
X}
X
XFUNCTION {default.type} { misc }
X
XMACRO {jan} {"Jan."}
X
XMACRO {feb} {"Feb."}
X
XMACRO {mar} {"Mar."}
X
XMACRO {apr} {"Apr."}
X
XMACRO {may} {"May"}
X
XMACRO {jun} {"June"}
X
XMACRO {jul} {"July"}
X
XMACRO {aug} {"Aug."}
X
XMACRO {sep} {"Sept."}
X
XMACRO {oct} {"Oct."}
X
XMACRO {nov} {"Nov."}
X
XMACRO {dec} {"Dec."}
X
XMACRO {acmcs} {"ACM Comput. Surveys"}
X
XMACRO {acta} {"Acta Inf."}
X
XMACRO {cacm} {"Comm. ACM"}
X
XMACRO {ibmjrd} {"IBM J. Res. Dev."}
X
XMACRO {ibmsj} {"IBM Syst.~J."}
X
XMACRO {ieeese} {"IEEE Trans. Softw. Eng."}
X
XMACRO {ieeetc} {"IEEE Trans. Comput."}
X
XMACRO {ieeetcad}
X {"IEEE Trans. Comput.-Aided Design Integrated Circuits"}
X
XMACRO {ipl} {"Inf. Process. Lett."}
X
XMACRO {jacm} {"J.~Assoc. Comput. Mach."}
X
XMACRO {jcss} {"J.~Comput. System Sci."}
X
XMACRO {scp} {"Sci. Comput. Programming"}
X
XMACRO {sicomp} {"SIAM J. Comput."}
X
XMACRO {tocs} {"ACM Trans. Comput. Syst."}
X
XMACRO {tods} {"ACM Trans. Database Syst."}
X
XMACRO {tog} {"ACM Trans. Gr."}
X
XMACRO {toms} {"ACM Trans. Math. Softw."}
X
XMACRO {toois} {"ACM Trans. Office Inf. Syst."}
X
XMACRO {toplas} {"ACM Trans. Prog. Lang. Syst."}
X
XMACRO {tcs} {"Theoretical Comput. Sci."}
X
XREAD
X
XFUNCTION {sortify}
X{ purify$
X  "l" change.case$
X}
X
XINTEGERS { len }
X
XFUNCTION {chop.word}
X{ 's :=
X  'len :=
X  s #1 len substring$ =
X    { s len #1 + global.max$ substring$ }
X    's
X  if$
X}
X
XFUNCTION {sort.format.names}
X{ 's :=
X  #1 'nameptr :=
X  ""
X  s num.names$ 'numnames :=
X  numnames 'namesleft :=
X    { namesleft #0 > }
X    { nameptr #1 >
X	{ "   " * }
X	'skip$
X      if$
X      s nameptr "{vv{ } }{ll{ }}{  f{ }}{  jj{ }}" format.name$ 't :=
X      nameptr numnames = t "others" = and
X	{ "et al" * }
X	{ t sortify * }
X      if$
X      nameptr #1 + 'nameptr :=
X      namesleft #1 - 'namesleft :=
X    }
X  while$
X}
X
XFUNCTION {sort.format.title}
X{ 't :=
X  "A " #2
X    "An " #3
X      "The " #4 t chop.word
X    chop.word
X  chop.word
X  sortify
X  #1 global.max$ substring$
X}
X
XFUNCTION {author.sort}
X{ author empty$
X    { key empty$
X	{ "to sort, need author or key in " cite$ * warning$
X	  ""
X	}
X	{ key sortify }
X      if$
X    }
X    { author sort.format.names }
X  if$
X}
X
XFUNCTION {author.editor.sort}
X{ author empty$
X    { editor empty$
X	{ key empty$
X	    { "to sort, need author, editor, or key in " cite$ * warning$
X	      ""
X	    }
X	    { key sortify }
X	  if$
X	}
X	{ editor sort.format.names }
X      if$
X    }
X    { author sort.format.names }
X  if$
X}
X
XFUNCTION {author.organization.sort}
X{ author empty$
X    { organization empty$
X	{ key empty$
X	    { "to sort, need author, organization, or key in " cite$ * warning$
X	      ""
X	    }
X	    { key sortify }
X	  if$
X	}
X	{ "The " #4 organization chop.word sortify }
X      if$
X    }
X    { author sort.format.names }
X  if$
X}
X
XFUNCTION {editor.organization.sort}
X{ editor empty$
X    { organization empty$
X	{ key empty$
X	    { "to sort, need editor, organization, or key in " cite$ * warning$
X	      ""
X	    }
X	    { key sortify }
X	  if$
X	}
X	{ "The " #4 organization chop.word sortify }
X      if$
X    }
X    { editor sort.format.names }
X  if$
X}
X
XFUNCTION {presort}
X{ type$ "book" =
X  type$ "inbook" =
X  or
X    'author.editor.sort
X    { type$ "proceedings" =
X	'editor.organization.sort
X	{ type$ "manual" =
X	    'author.organization.sort
X	    'author.sort
X	  if$
X	}
X      if$
X    }
X  if$
X  "    "
X  *
X  year field.or.null sortify
X  *
X  "    "
X  *
X  title field.or.null
X  sort.format.title
X  *
X  #1 entry.max$ substring$
X  'sort.key$ :=
X}
X
XITERATE {presort}
X
XSORT
X
XSTRINGS { longest.label }
X
XINTEGERS { number.label longest.label.width }
X
XFUNCTION {initialize.longest.label}
X{ "" 'longest.label :=
X  #1 'number.label :=
X  #0 'longest.label.width :=
X}
X
XFUNCTION {longest.label.pass}
X{ number.label int.to.str$ 'label :=
X  number.label #1 + 'number.label :=
X  label width$ longest.label.width >
X    { label 'longest.label :=
X      label width$ 'longest.label.width :=
X    }
X    'skip$
X  if$
X}
X
XEXECUTE {initialize.longest.label}
X
XITERATE {longest.label.pass}
X
XFUNCTION {begin.bib}
X{ preamble$ empty$
X    'skip$
X    { preamble$ write$ newline$ }
X  if$
X  "\begin{thebibliography}{"  longest.label  * "}" * write$ newline$
X}
X
XEXECUTE {begin.bib}
X
XEXECUTE {init.state.consts}
X
XEXECUTE {init.last.authors}
X
XITERATE {call.type$}
X
XFUNCTION {end.bib}
X{ newline$
X  "\end{thebibliography}" write$ newline$
X}
X
XEXECUTE {end.bib}
END_OF_FILE
if test 19083 -ne `wc -c <'siam.bst'`; then
    echo shar: \"'siam.bst'\" unpacked with wrong size!
fi
# end of 'siam.bst'
fi
if test -f 'fsiam.bst' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'fsiam.bst'\"
else
echo shar: Extracting \"'fsiam.bst'\" \(19322 characters\)
sed "s/^X//" >'fsiam.bst' <<'END_OF_FILE'
X% Style file modified on Tue Jun  8 12:31:07 1993 with `annotebib.el' v1.5.1
X%                     by Yves.Arrouye <arrouye@cosmos>
X%                     to support the `annote' annotation field.
X% Style file modified on Tue Jun  8 12:31:07 1993 with `annotebib.el' v1.5.1
X%                     by Yves.Arrouye <arrouye@cosmos>
X%                     to support the `commentaire' annotation field.
X
X% This bibliography style was made `annote'-compatible by "annotebib.el".
X% It can be used for both annotated and non-annotated bibliographies listing
X% (`annote' package by Yves Arrouye <arrouye@imag.imag.fr>).
X
X% FSIAM bibliography style (1992), french version by arrouye@imag.imag.fr)
X% SIAM bibliography style (29-Jan-88 version)
X%    numeric labels, alphabetic order, Mathematical Reviews abbreviations,
X%    names in \sc, titles in italics, book titles mixed upper-lower and article
X%    titles lowercase, commas separate all fields except before "notes".
X%
X%   History
X%    1/30/86	(HWT)	Original version, by Howard Trickey.
X%    6/15/87	(HWT)	Fix format.editors---Martin Costabel.
X%    1/29/88	(OP&HWT) Updated for BibTeX version 0.99a, Oren Patashnik;
X%			THIS `siam' VERSION DOES NOT WORK WITH BIBTEX 0.98i.
X
XENTRY
X  { annote
X    commentaire
X    address
X    author
X    booktitle
X    chapter
X    edition
X    editor
X    howpublished
X    institution
X    journal
X    key
X    month
X    note
X    number
X    organization
X    pages
X    publisher
X    school
X    series
X    title
X    type
X    volume
X    year
X  }
X  {}
X  { label }
X
XINTEGERS { output.state before.all mid.sentence after.block }
X
XFUNCTION {init.state.consts}
X{ #0 'before.all :=
X  #1 'mid.sentence :=
X  #2 'after.block :=
X}
X
XSTRINGS { s t }
X
XFUNCTION {output.nonnull}
X{ 's :=
X  output.state mid.sentence =
X    { ", " * write$ }
X    { output.state after.block =
X	{ add.period$ write$
X	  newline$
X	  "\newblock " write$
X	}
X	'write$
X      if$
X      mid.sentence 'output.state :=
X    }
X  if$
X  s
X}
X
XFUNCTION {output}
X{ duplicate$ empty$
X    'pop$
X    'output.nonnull
X  if$
X}
X
XFUNCTION {output.check}
X{ 't :=
X  duplicate$ empty$
X    { pop$ "empty " t * " in " * cite$ * warning$ }
X    'output.nonnull
X  if$
X}
X
XFUNCTION {output.bibitem}
X{ newline$
X  "\bibitem{" write$
X  cite$ write$
X  "}" write$
X  newline$
X  ""
X  before.all 'output.state :=
X}
X
XFUNCTION {annotebib.format.commentaire}
X{ commentaire empty$
X        { "" }
X        { "\ifx\commentaire\undefined\else\begin{commentaire} "
X          commentaire
X          * " \end{commentaire}\fi " *
X        }
X      if$
X}
X
XFUNCTION {annotebib.format.annote}
X{ annote empty$
X        { "" }
X        { "\ifx\annote\undefined\else\begin{annote} "
X          annote
X          * " \end{annote}\fi " *
X        }
X      if$
X}
X
XFUNCTION {fin.entry}
X{ add.period$
X  write$
X  newline$
X  annotebib.format.commentaire write$
X  annotebib.format.annote write$
X}
X
XFUNCTION {new.block}
X{ output.state before.all =
X    'skip$
X    { after.block 'output.state := }
X  if$
X}
X
XFUNCTION {not}
X{   { #0 }
X    { #1 }
X  if$
X}
X
XFUNCTION {and}
X{   'skip$
X    { pop$ #0 }
X  if$
X}
X
XFUNCTION {or}
X{   { pop$ #1 }
X    'skip$
X  if$
X}
X
XFUNCTION {new.block.checka}
X{ empty$
X    'skip$
X    'new.block
X  if$
X}
X
XFUNCTION {field.or.null}
X{ duplicate$ empty$
X    { pop$ "" }
X    'skip$
X  if$
X}
X
XFUNCTION {emphasize}
X{ duplicate$ empty$
X    { pop$ "" }
X    { "{\em " swap$ * "}" * }
X  if$
X}
X
XFUNCTION {scapify}
X{ duplicate$ empty$
X    { pop$ "" }
X    { "{\sc " swap$ * "}" * }
X  if$
X}
X
XINTEGERS { nameptr namesleft numnames }
X
XFUNCTION {format.names}
X{ 's :=
X  #1 'nameptr :=
X  s num.names$ 'numnames :=
X  numnames 'namesleft :=
X    { namesleft #0 > }
X    { s nameptr "{f.~}{vv~}{ll}{, jj}" format.name$ 't :=
X      nameptr #1 >
X	{ namesleft #1 >
X	    { ", " * t * }
X	    { numnames #2 >
X		{ "," * }
X		'skip$
X	      if$
X	      t "others" =
X		{ " et~al." * }
X		{ " et " * t * }
X	      if$
X	    }
X	  if$
X	}
X	't
X      if$
X      nameptr #1 + 'nameptr :=
X      namesleft #1 - 'namesleft :=
X    }
X  while$
X}
X
XSTRINGS { last.authors }
X
XFUNCTION {init.last.authors}
X{ "" 'last.authors :=
X}
X
XFUNCTION {format.authors}
X{ author empty$
X    { "" 'last.authors :=
X      ""
X    }
X    { author last.authors =
X        { "\leavevmode\vrule height 2pt depth -1.6pt width 23pt" }
X        { author format.names scapify }
X      if$
X      author 'last.authors :=
X    }
X  if$
X}
X
XFUNCTION {format.organization}
X{ organization empty$
X    { "" 'last.authors :=
X      ""
X    }
X    { organization last.authors =
X        { "\leavevmode\vrule height 2pt depth -1.6pt width 23pt" }
X        { organization scapify }
X      if$
X      organization 'last.authors :=
X    }
X  if$
X}
X
XFUNCTION {format.editors}
X{ editor empty$
X    { "" 'last.authors :=
X      ""
X    }
X    { editor last.authors =
X        { "\leavevmode\vrule height 2pt depth -1.6pt width 23pt" }
X	{ editor format.names scapify }
X      if$
X      editor num.names$ #1 >
X        { ", eds." * }
X	{ ", ed." * }
X      if$
X      editor 'last.authors :=
X    }
X  if$
X}
X
XFUNCTION {format.ineditors}
X{ editor empty$
X    { "" }
X    { editor format.names
X      editor num.names$ #1 >
X	{ ", eds." * }
X	{ ", ed." * }
X      if$
X    }
X  if$
X}
X
XFUNCTION {format.title}
X{ title empty$
X    { "" }
X    { title "t" change.case$ emphasize }
X  if$
X}
X
XFUNCTION {n.dashify}
X{ 't :=
X  ""
X    { t empty$ not }
X    { t #1 #1 substring$ "-" =
X	{ t #1 #2 substring$ "--" = not
X	    { "--" *
X	      t #2 global.max$ substring$ 't :=
X	    }
X	    {   { t #1 #1 substring$ "-" = }
X		{ "-" *
X		  t #2 global.max$ substring$ 't :=
X		}
X	      while$
X	    }
X	  if$
X	}
X	{ t #1 #1 substring$ *
X	  t #2 global.max$ substring$ 't :=
X	}
X      if$
X    }
X  while$
X}
X
XFUNCTION {format.date}
X{ year empty$
X    { month empty$
X	{ "" }
X	{ "there's a month but no year in " cite$ * warning$
X	  month
X	}
X      if$
X    }
X    { month empty$
X	'year
X	{ month " " * year * }
X      if$
X    }
X  if$
X}
X
XFUNCTION {format.btitle}
X{ title emphasize
X}
X
XFUNCTION {tie.or.space.connect}
X{ duplicate$ text.length$ #3 <
X    { "~" }
X    { " " }
X  if$
X  swap$ * *
X}
X
XFUNCTION {either.or.check}
X{ empty$
X    'pop$
X    { "can't use both " swap$ * " fields in " * cite$ * warning$ }
X  if$
X}
X
XFUNCTION {format.bvolume}
X{ volume empty$
X    { "" }
X    { "vol.~" volume *
X      series empty$
X	'skip$
X	{ " de " * series * }
X      if$
X      "volume and number" number either.or.check
X    }
X  if$
X}
X
XFUNCTION {format.number.series}
X{ volume empty$
X    { number empty$
X	{ series field.or.null }
X	{ "no.~" number *
X	  series empty$
X	    { "there's a number but no series in " cite$ * warning$ }
X	    { " in " * series * }
X	  if$
X	}
X      if$
X    }
X    { "" }
X  if$
X}
X
XFUNCTION {format.edition}
X{ edition empty$
X    { "" }
X    { "ed.~" edition "l" change.case$ * }
X  if$
X}
X
XINTEGERS { multiresult }
X
XFUNCTION {multi.page.check}
X{ 't :=
X  #0 'multiresult :=
X    { multiresult not
X      t empty$ not
X      and
X    }
X    { t #1 #1 substring$
X      duplicate$ "-" =
X      swap$ duplicate$ "," =
X      swap$ "+" =
X      or or
X	{ #1 'multiresult := }
X	{ t #2 global.max$ substring$ 't := }
X      if$
X    }
X  while$
X  multiresult
X}
X
XFUNCTION {format.pages}
X{ pages empty$
X    { "" }
X    { pages multi.page.check
X	{ "pp.~" pages n.dashify * }
X	{ "p.~" pages * }
X      if$
X    }
X  if$
X}
X
XFUNCTION {format.vol.year}
X{
X%  number empty$
X%    { "" * }
X%    { " " * number * "(" * }
X%  if$
X  volume field.or.null
X%  number empty$
X%    { "" * }
X%    { ")" * }
X%  if$
X  year empty$
X    { "empty year in " cite$ * warning$ }
X    { " (" year * ")" * * }
X  if$
X}
X
XFUNCTION {format.chapter.pages}
X{ chapter empty$
X    'format.pages
X    { type empty$
X	{ "ch.~" chapter * }
X	{ type "l" change.case$ chapter tie.or.space.connect }
X      if$
X      pages empty$
X	'skip$
X	{ ", " * format.pages * }
X      if$
X    }
X  if$
X}
X
XFUNCTION {format.in.ed.booktitle}
X{ booktitle empty$
X    { "" }
X    { editor empty$
X	{ "in " booktitle * }
X	{ "in " booktitle * ", " * format.ineditors * }
X      if$
X    }
X  if$
X}
X
XFUNCTION {empty.misc.check}
X{ author empty$ title empty$ howpublished empty$
X  month empty$ year empty$ note empty$
X  and and and and and
X  key empty$ not and
X    { "all relevant fields are empty in " cite$ * warning$ }
X    'skip$
X  if$
X}
X
XFUNCTION {format.thesis.type}
X{ type empty$
X    'skip$
X    { pop$
X      type "l" change.case$
X    }
X  if$
X}
X
XFUNCTION {format.tr.number}
X{ type empty$
X    { "Rapp. Tech." }
X    'type
X  if$
X  number empty$
X    { "l" change.case$ }
X    { number tie.or.space.connect }
X  if$
X}
X
XFUNCTION {format.article.crossref}
X{ key empty$
X    { journal empty$
X	{ "need key or journal for " cite$ * " to crossref " * crossref *
X	  warning$
X	  ""
X	}
X	{ "in " journal * }
X      if$
X    }
X    { "in " key * }
X  if$
X  " \cite{" * crossref * "}" *
X}
X
XFUNCTION {format.crossref.editor}
X{ editor #1 "{vv~}{ll}" format.name$
X  editor num.names$ duplicate$
X  #2 >
X    { pop$ " et~al." * }
X    { #2 <
X	'skip$
X	{ editor #2 "{ff }{vv }{ll}{ jj}" format.name$ "others" =
X	    { " et~al." * }
X	    { " et " * editor #2 "{vv~}{ll}" format.name$ * }
X	  if$
X	}
X      if$
X    }
X  if$
X}
X
XFUNCTION {format.book.crossref}
X{ volume empty$
X    { "empty volume in " cite$ * "'s crossref of " * crossref * warning$
X      "in "
X    }
X    { "vol.~" volume *
X      " of " *
X    }
X  if$
X  editor empty$
X  editor field.or.null author field.or.null =
X  or
X    { key empty$
X	{ series empty$
X	    { "need editor, key, or series for " cite$ * " to crossref " *
X	      crossref * warning$
X	      "" *
X	    }
X	    { series * }
X	  if$
X	}
X	{ key * }
X      if$
X    }
X    { format.crossref.editor * }
X  if$
X  " \cite{" * crossref * "}" *
X}
X
XFUNCTION {format.incoll.inproc.crossref}
X{ editor empty$
X  editor field.or.null author field.or.null =
X  or
X    { key empty$
X	{ booktitle empty$
X	    { "need editor, key, or booktitle for " cite$ * " to crossref " *
X	      crossref * warning$
X	      ""
X	    }
X	    { "in " booktitle * }
X	  if$
X	}
X	{ "in " key * }
X      if$
X    }
X    { "in " format.crossref.editor * }
X  if$
X  " \cite{" * crossref * "}" *
X}
X
XFUNCTION {article}
X{ output.bibitem
X  format.authors "author" output.check
X  format.title "title" output.check
X  crossref missing$
X    { journal "journal" output.check
X      format.vol.year output
X    }
X    { format.article.crossref output.nonnull }
X  if$
X  format.pages output
X  new.block
X  note output
X  fin.entry
X  newline$
X}
X
XFUNCTION {book}
X{ output.bibitem
X  author empty$
X    { format.editors "author and editor" output.check }
X    { format.authors output.nonnull
X      crossref missing$
X	{ "author and editor" editor either.or.check }
X	'skip$
X      if$
X    }
X  if$
X  format.btitle "title" output.check
X  crossref missing$
X    { format.bvolume output
X      format.number.series output
X      publisher "publisher" output.check
X      address output
X    }
X    { format.book.crossref output.nonnull }
X  if$
X  format.edition output
X  format.date "year" output.check
X  new.block
X  note output
X  fin.entry
X  newline$
X}
X
XFUNCTION {booklet}
X{ output.bibitem
X  format.authors output
X  format.title "title" output.check
X  howpublished new.block.checka
X  howpublished output
X  address output
X  format.date output
X  new.block
X  note output
X  fin.entry
X  newline$
X}
X
XFUNCTION {inbook}
X{ output.bibitem
X  author empty$
X    { format.editors "author and editor" output.check }
X    { format.authors output.nonnull
X      crossref missing$
X	{ "author and editor" editor either.or.check }
X	'skip$
X      if$
X    }
X  if$
X  format.btitle "title" output.check
X  crossref missing$
X    { format.bvolume output
X      format.number.series output
X      publisher "publisher" output.check
X      address output
X    }
X    { format.book.crossref output.nonnull }
X  if$
X  format.edition output
X  format.date "year" output.check
X  format.chapter.pages "chapter and pages" output.check
X  new.block
X  note output
X  fin.entry
X}
X
XFUNCTION {incollection}
X{ output.bibitem
X  format.authors "author" output.check
X  format.title "title" output.check
X  crossref missing$
X    { format.in.ed.booktitle "booktitle" output.check
X      format.bvolume output
X      format.number.series output
X      publisher "publisher" output.check
X      address output
X      format.edition output
X      format.date "year" output.check
X    }
X    { format.incoll.inproc.crossref output.nonnull }
X  if$
X  format.chapter.pages output
X  new.block
X  note output
X  fin.entry
X}
X
XFUNCTION {inproceedings}
X{ output.bibitem
X  format.authors "author" output.check
X  format.title "title" output.check
X  crossref missing$
X    { format.in.ed.booktitle "booktitle" output.check
X      format.bvolume output
X      format.number.series output
X      address empty$
X	{ organization output
X	  publisher output
X	  format.date "year" output.check
X	}
X	{ address output.nonnull
X	  format.date "year" output.check
X	  organization output
X	  publisher output
X	}
X      if$
X    }
X    { format.incoll.inproc.crossref output.nonnull }
X  if$
X  format.pages output
X  new.block
X  note output
X  fin.entry
X}
X
XFUNCTION {conference} { inproceedings }
X
XFUNCTION {manual}
X{ output.bibitem
X  author empty$
X    { format.organization output }
X    { format.authors output.nonnull }
X  if$
X  format.btitle "title" output.check
X  author empty$
X    'skip$
X    { organization output }
X  if$
X  address output
X  format.edition output
X  format.date output
X  new.block
X  note output
X  fin.entry
X}
X
XFUNCTION {mastersthesis}
X{ output.bibitem
X  format.authors "author" output.check
X  format.title "title" output.check
X  "Master's thesis" format.thesis.type output.nonnull
X  school "school" output.check
X  address output
X  format.date "year" output.check
X  new.block
X  note output
X  fin.entry
X}
X
XFUNCTION {misc}
X{ output.bibitem
X  format.authors output
X  format.title output
X  howpublished new.block.checka
X  howpublished output
X  format.date output
X  new.block
X  note output
X  fin.entry
X  empty.misc.check
X}
X
XFUNCTION {phdthesis}
X{ output.bibitem
X  format.authors "author" output.check
X  format.btitle "title" output.check
X  "PhD thesis" format.thesis.type output.nonnull
X  school "school" output.check
X  address output
X  format.date "year" output.check
X  new.block
X  note output
X  fin.entry
X}
X
XFUNCTION {proceedings}
X{ output.bibitem
X  editor empty$
X    { format.organization output }
X    { format.editors output.nonnull }
X  if$
X  format.btitle "title" output.check
X  format.bvolume output
X  format.number.series output
X  address empty$
X    { editor empty$
X	'skip$
X	{ organization output }
X      if$
X      publisher output
X      format.date "year" output.check
X    }
X    { address output.nonnull
X      format.date "year" output.check
X      editor empty$
X	'skip$
X	{ organization output }
X      if$
X      publisher output
X    }
X  if$
X  new.block
X  note output
X  fin.entry
X}
X
XFUNCTION {techreport}
X{ output.bibitem
X  format.authors "author" output.check
X  format.title "title" output.check
X  format.tr.number output.nonnull
X  institution "institution" output.check
X  address output
X  format.date "year" output.check
X  new.block
X  note output
X  fin.entry
X}
X
XFUNCTION {unpublished}
X{ output.bibitem
X  format.authors "author" output.check
X  format.title "title" output.check
X  new.block
X  note "note" output.check
X  format.date output
X  fin.entry
X}
X
XFUNCTION {default.type} { misc }
X
XMACRO {jan} {"Jan."}
X
XMACRO {feb} {"F\'ev."}
X
XMACRO {mar} {"Mars"}
X
XMACRO {apr} {"Avr."}
X
XMACRO {may} {"Mai"}
X
XMACRO {jun} {"Juin"}
X
XMACRO {jul} {"Juil."}
X
XMACRO {aug} {"Ao\^{u}t"}
X
XMACRO {sep} {"Sept."}
X
XMACRO {oct} {"Oct."}
X
XMACRO {nov} {"Nov."}
X
XMACRO {dec} {"D\'ec."}
X
XMACRO {acmcs} {"ACM Comput. Surveys"}
X
XMACRO {acta} {"Acta Inf."}
X
XMACRO {cacm} {"Comm. ACM"}
X
XMACRO {ibmjrd} {"IBM J. Res. Dev."}
X
XMACRO {ibmsj} {"IBM Syst.~J."}
X
XMACRO {ieeese} {"IEEE Trans. Softw. Eng."}
X
XMACRO {ieeetc} {"IEEE Trans. Comput."}
X
XMACRO {ieeetcad}
X {"IEEE Trans. Comput.-Aided Design Integrated Circuits"}
X
XMACRO {ipl} {"Inf. Process. Lett."}
X
XMACRO {jacm} {"J.~Assoc. Comput. Mach."}
X
XMACRO {jcss} {"J.~Comput. System Sci."}
X
XMACRO {scp} {"Sci. Comput. Programming"}
X
XMACRO {sicomp} {"SIAM J. Comput."}
X
XMACRO {tocs} {"ACM Trans. Comput. Syst."}
X
XMACRO {tods} {"ACM Trans. Database Syst."}
X
XMACRO {tog} {"ACM Trans. Gr."}
X
XMACRO {toms} {"ACM Trans. Math. Softw."}
X
XMACRO {toois} {"ACM Trans. Office Inf. Syst."}
X
XMACRO {toplas} {"ACM Trans. Prog. Lang. Syst."}
X
XMACRO {tcs} {"Theoretical Comput. Sci."}
X
XREAD
X
XFUNCTION {sortify}
X{ purify$
X  "l" change.case$
X}
X
XINTEGERS { len }
X
XFUNCTION {chop.word}
X{ 's :=
X  'len :=
X  s #1 len substring$ =
X    { s len #1 + global.max$ substring$ }
X    's
X  if$
X}
X
XFUNCTION {sort.format.names}
X{ 's :=
X  #1 'nameptr :=
X  ""
X  s num.names$ 'numnames :=
X  numnames 'namesleft :=
X    { namesleft #0 > }
X    { nameptr #1 >
X	{ "   " * }
X	'skip$
X      if$
X      s nameptr "{vv{ } }{ll{ }}{  f{ }}{  jj{ }}" format.name$ 't :=
X      nameptr numnames = t "others" = and
X	{ "et al" * }
X	{ t sortify * }
X      if$
X      nameptr #1 + 'nameptr :=
X      namesleft #1 - 'namesleft :=
X    }
X  while$
X}
X
XFUNCTION {sort.format.title}
X{ 't :=
X  "A " #2
X    "An " #3
X      "The " #4 t chop.word
X    chop.word
X  chop.word
X  sortify
X  #1 global.max$ substring$
X}
X
XFUNCTION {author.sort}
X{ author empty$
X    { key empty$
X	{ "to sort, need author or key in " cite$ * warning$
X	  ""
X	}
X	{ key sortify }
X      if$
X    }
X    { author sort.format.names }
X  if$
X}
X
XFUNCTION {author.editor.sort}
X{ author empty$
X    { editor empty$
X	{ key empty$
X	    { "to sort, need author, editor, or key in " cite$ * warning$
X	      ""
X	    }
X	    { key sortify }
X	  if$
X	}
X	{ editor sort.format.names }
X      if$
X    }
X    { author sort.format.names }
X  if$
X}
X
XFUNCTION {author.organization.sort}
X{ author empty$
X    { organization empty$
X	{ key empty$
X	    { "to sort, need author, organization, or key in " cite$ * warning$
X	      ""
X	    }
X	    { key sortify }
X	  if$
X	}
X	{ "The " #4 organization chop.word sortify }
X      if$
X    }
X    { author sort.format.names }
X  if$
X}
X
XFUNCTION {editor.organization.sort}
X{ editor empty$
X    { organization empty$
X	{ key empty$
X	    { "to sort, need editor, organization, or key in " cite$ * warning$
X	      ""
X	    }
X	    { key sortify }
X	  if$
X	}
X	{ "The " #4 organization chop.word sortify }
X      if$
X    }
X    { editor sort.format.names }
X  if$
X}
X
XFUNCTION {presort}
X{ type$ "book" =
X  type$ "inbook" =
X  or
X    'author.editor.sort
X    { type$ "proceedings" =
X	'editor.organization.sort
X	{ type$ "manual" =
X	    'author.organization.sort
X	    'author.sort
X	  if$
X	}
X      if$
X    }
X  if$
X  "    "
X  *
X  year field.or.null sortify
X  *
X  "    "
X  *
X  title field.or.null
X  sort.format.title
X  *
X  #1 entry.max$ substring$
X  'sort.key$ :=
X}
X
XITERATE {presort}
X
XSORT
X
XSTRINGS { longest.label }
X
XINTEGERS { number.label longest.label.width }
X
XFUNCTION {initialize.longest.label}
X{ "" 'longest.label :=
X  #1 'number.label :=
X  #0 'longest.label.width :=
X}
X
XFUNCTION {longest.label.pass}
X{ number.label int.to.str$ 'label :=
X  number.label #1 + 'number.label :=
X  label width$ longest.label.width >
X    { label 'longest.label :=
X      label width$ 'longest.label.width :=
X    }
X    'skip$
X  if$
X}
X
XEXECUTE {initialize.longest.label}
X
XITERATE {longest.label.pass}
X
XFUNCTION {begin.bib}
X{ preamble$ empty$
X    'skip$
X    { preamble$ write$ newline$ }
X  if$
X  "\begin{thebibliography}{"  longest.label  * "}" * write$ newline$
X}
X
XEXECUTE {begin.bib}
X
XEXECUTE {init.state.consts}
X
XEXECUTE {init.last.authors}
X
XITERATE {call.type$}
X
XFUNCTION {end.bib}
X{ newline$
X  "\end{thebibliography}" write$ newline$
X}
X
XEXECUTE {end.bib}
END_OF_FILE
if test 19322 -ne `wc -c <'fsiam.bst'`; then
    echo shar: \"'fsiam.bst'\" unpacked with wrong size!
fi
# end of 'fsiam.bst'
fi
if test -f 'lsiam.bst' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'lsiam.bst'\"
else
echo shar: Extracting \"'lsiam.bst'\" \(18967 characters\)
sed "s/^X//" >'lsiam.bst' <<'END_OF_FILE'
X% Style file modified on Tue Jun  8 12:31:10 1993 with `annotebib.el' v1.5.1
X%                     by Yves.Arrouye <arrouye@cosmos>
X%                     to support the `annote' annotation field.
X% Style file modified on Tue Jun  8 12:31:10 1993 with `annotebib.el' v1.5.1
X%                     by Yves.Arrouye <arrouye@cosmos>
X%                     to support the `commentaire' annotation field.
X
X% This bibliography style was made `annote'-compatible by "annotebib.el".
X% It can be used for both annotated and non-annotated bibliographies listing
X% (`annote' package by Yves Arrouye <arrouye@imag.imag.fr>).
X
X% LSIAM bibliograohy style, labelized by Yves Arrouye (arrouye@imag.imag.fr)
X% SIAM bibliography style (29-Jan-88 version)
X%    numeric labels, alphabetic order, Mathematical Reviews abbreviations,
X%    names in \sc, titles in italics, book titles mixed upper-lower and article
X%    titles lowercase, commas separate all fields except before "notes".
X%
X%   History
X%    1/30/86	(HWT)	Original version, by Howard Trickey.
X%    6/15/87	(HWT)	Fix format.editors---Martin Costabel.
X%    1/29/88	(OP&HWT) Updated for BibTeX version 0.99a, Oren Patashnik;
X%			THIS `siam' VERSION DOES NOT WORK WITH BIBTEX 0.98i.
X%    4/16/92	(YGA)	Last change to the style to be LSIAM, that is a style
X%			producing the reference labels. This style is based
X%			on FSIAM which is a french version of SIAM
X
XENTRY
X  { annote
X    commentaire
X    address
X    author
X    booktitle
X    chapter
X    edition
X    editor
X    howpublished
X    institution
X    journal
X    key
X    month
X    note
X    number
X    organization
X    pages
X    publisher
X    school
X    series
X    title
X    type
X    volume
X    year
X  }
X  {}
X  { label }
X
XINTEGERS { output.state before.all mid.sentence after.block }
X
XFUNCTION {init.state.consts}
X{ #0 'before.all :=
X  #1 'mid.sentence :=
X  #2 'after.block :=
X}
X
XSTRINGS { s t }
X
XFUNCTION {output.nonnull}
X{ 's :=
X  output.state mid.sentence =
X    { ", " * write$ }
X    { output.state after.block =
X	{ add.period$ write$
X	  newline$
X	  "\newblock " write$
X	}
X	'write$
X      if$
X      mid.sentence 'output.state :=
X    }
X  if$
X  s
X}
X
XFUNCTION {output}
X{ duplicate$ empty$
X    'pop$
X    'output.nonnull
X  if$
X}
X
XFUNCTION {output.check}
X{ 't :=
X  duplicate$ empty$
X    { pop$ "empty " t * " in " * cite$ * warning$ }
X    'output.nonnull
X  if$
X}
X
XFUNCTION {output.bibitem}
X{ newline$
X  "\bibitem[" write$ cite$ write$ "]{" write$
X  cite$ write$
X  "}" write$
X  newline$
X  ""
X  before.all 'output.state :=
X}
X
XFUNCTION {annotebib.format.commentaire}
X{ commentaire empty$
X        { "" }
X        { "\ifx\commentaire\undefined\else\begin{commentaire} "
X          commentaire
X          * " \end{commentaire}\fi " *
X        }
X      if$
X}
X
XFUNCTION {annotebib.format.annote}
X{ annote empty$
X        { "" }
X        { "\ifx\annote\undefined\else\begin{annote} "
X          annote
X          * " \end{annote}\fi " *
X        }
X      if$
X}
X
XFUNCTION {fin.entry}
X{ add.period$
X  write$
X  newline$
X  annotebib.format.commentaire write$
X  annotebib.format.annote write$
X}
X
XFUNCTION {new.block}
X{ output.state before.all =
X    'skip$
X    { after.block 'output.state := }
X  if$
X}
X
XFUNCTION {not}
X{   { #0 }
X    { #1 }
X  if$
X}
X
XFUNCTION {and}
X{   'skip$
X    { pop$ #0 }
X  if$
X}
X
XFUNCTION {or}
X{   { pop$ #1 }
X    'skip$
X  if$
X}
X
XFUNCTION {new.block.checka}
X{ empty$
X    'skip$
X    'new.block
X  if$
X}
X
XFUNCTION {field.or.null}
X{ duplicate$ empty$
X    { pop$ "" }
X    'skip$
X  if$
X}
X
XFUNCTION {emphasize}
X{ duplicate$ empty$
X    { pop$ "" }
X    { "{\em " swap$ * "}" * }
X  if$
X}
X
XFUNCTION {scapify}
X{ duplicate$ empty$
X    { pop$ "" }
X    { "{\sc " swap$ * "}" * }
X  if$
X}
X
XINTEGERS { nameptr namesleft numnames }
X
XFUNCTION {format.names}
X{ 's :=
X  #1 'nameptr :=
X  s num.names$ 'numnames :=
X  numnames 'namesleft :=
X    { namesleft #0 > }
X    { s nameptr "{f.~}{vv~}{ll}{, jj}" format.name$ 't :=
X      nameptr #1 >
X	{ namesleft #1 >
X	    { ", " * t * }
X	    { numnames #2 >
X		{ "," * }
X		'skip$
X	      if$
X	      t "others" =
X		{ " et~al." * }
X		{ " et " * t * }
X	      if$
X	    }
X	  if$
X	}
X	't
X      if$
X      nameptr #1 + 'nameptr :=
X      namesleft #1 - 'namesleft :=
X    }
X  while$
X}
X
XSTRINGS { last.authors }
X
XFUNCTION {init.last.authors}
X{ "" 'last.authors :=
X}
X
XFUNCTION {format.authors}
X{ author empty$
X    { "" 'last.authors :=
X      ""
X    }
X    { author last.authors =
X        { "\leavevmode\vrule height 2pt depth -1.6pt width 23pt" }
X        { author format.names scapify }
X      if$
X      author 'last.authors :=
X    }
X  if$
X}
X
XFUNCTION {format.organization}
X{ organization empty$
X    { "" 'last.authors :=
X      ""
X    }
X    { organization last.authors =
X        { "\leavevmode\vrule height 2pt depth -1.6pt width 23pt" }
X        { organization scapify }
X      if$
X      organization 'last.authors :=
X    }
X  if$
X}
X
XFUNCTION {format.editors}
X{ editor empty$
X    { "" 'last.authors :=
X      ""
X    }
X    { editor last.authors =
X        { "\leavevmode\vrule height 2pt depth -1.6pt width 23pt" }
X	{ editor format.names scapify }
X      if$
X      editor num.names$ #1 >
X        { ", eds." * }
X	{ ", ed." * }
X      if$
X      editor 'last.authors :=
X    }
X  if$
X}
X
XFUNCTION {format.ineditors}
X{ editor empty$
X    { "" }
X    { editor format.names
X      editor num.names$ #1 >
X	{ ", eds." * }
X	{ ", ed." * }
X      if$
X    }
X  if$
X}
X
XFUNCTION {format.title}
X{ title empty$
X    { "" }
X    { title "t" change.case$ emphasize }
X  if$
X}
X
XFUNCTION {n.dashify}
X{ 't :=
X  ""
X    { t empty$ not }
X    { t #1 #1 substring$ "-" =
X	{ t #1 #2 substring$ "--" = not
X	    { "--" *
X	      t #2 global.max$ substring$ 't :=
X	    }
X	    {   { t #1 #1 substring$ "-" = }
X		{ "-" *
X		  t #2 global.max$ substring$ 't :=
X		}
X	      while$
X	    }
X	  if$
X	}
X	{ t #1 #1 substring$ *
X	  t #2 global.max$ substring$ 't :=
X	}
X      if$
X    }
X  while$
X}
X
XFUNCTION {format.date}
X{ year empty$
X    { month empty$
X	{ "" }
X	{ "there's a month but no year in " cite$ * warning$
X	  month
X	}
X      if$
X    }
X    { month empty$
X	'year
X	{ month " " * year * }
X      if$
X    }
X  if$
X}
X
XFUNCTION {format.btitle}
X{ title emphasize
X}
X
XFUNCTION {tie.or.space.connect}
X{ duplicate$ text.length$ #3 <
X    { "~" }
X    { " " }
X  if$
X  swap$ * *
X}
X
XFUNCTION {either.or.check}
X{ empty$
X    'pop$
X    { "can't use both " swap$ * " fields in " * cite$ * warning$ }
X  if$
X}
X
XFUNCTION {format.bvolume}
X{ volume empty$
X    { "" }
X    { "vol.~" volume *
X      series empty$
X	'skip$
X	{ " of " * series * }
X      if$
X      "volume and number" number either.or.check
X    }
X  if$
X}
X
XFUNCTION {format.number.series}
X{ volume empty$
X    { number empty$
X	{ series field.or.null }
X	{ "no.~" number *
X	  series empty$
X	    { "there's a number but no series in " cite$ * warning$ }
X	    { " in " * series * }
X	  if$
X	}
X      if$
X    }
X    { "" }
X  if$
X}
X
XFUNCTION {format.edition}
X{ edition empty$
X    { "" }
X    { edition "l" change.case$ "~ed." * }
X  if$
X}
X
XINTEGERS { multiresult }
X
XFUNCTION {multi.page.check}
X{ 't :=
X  #0 'multiresult :=
X    { multiresult not
X      t empty$ not
X      and
X    }
X    { t #1 #1 substring$
X      duplicate$ "-" =
X      swap$ duplicate$ "," =
X      swap$ "+" =
X      or or
X	{ #1 'multiresult := }
X	{ t #2 global.max$ substring$ 't := }
X      if$
X    }
X  while$
X  multiresult
X}
X
XFUNCTION {format.pages}
X{ pages empty$
X    { "" }
X    { pages multi.page.check
X	{ "pp.~" pages n.dashify * }
X	{ "p.~" pages * }
X      if$
X    }
X  if$
X}
X
XFUNCTION {format.vol.year}
X{ volume field.or.null
X  year empty$
X    { "empty year in " cite$ * warning$ }
X    { " (" year * ")" * * }
X  if$
X}
X
XFUNCTION {format.chapter.pages}
X{ chapter empty$
X    'format.pages
X    { type empty$
X	{ "ch.~" chapter * }
X	{ type "l" change.case$ chapter tie.or.space.connect }
X      if$
X      pages empty$
X	'skip$
X	{ ", " * format.pages * }
X      if$
X    }
X  if$
X}
X
XFUNCTION {format.in.ed.booktitle}
X{ booktitle empty$
X    { "" }
X    { editor empty$
X	{ "in " booktitle * }
X	{ "in " booktitle * ", " * format.ineditors * }
X      if$
X    }
X  if$
X}
X
XFUNCTION {empty.misc.check}
X{ author empty$ title empty$ howpublished empty$
X  month empty$ year empty$ note empty$
X  and and and and and
X  key empty$ not and
X    { "all relevant fields are empty in " cite$ * warning$ }
X    'skip$
X  if$
X}
X
XFUNCTION {format.thesis.type}
X{ type empty$
X    'skip$
X    { pop$
X      type "l" change.case$
X    }
X  if$
X}
X
XFUNCTION {format.tr.number}
X{ type empty$
X    { "Rapp. Tech." }
X    'type
X  if$
X  number empty$
X    { "l" change.case$ }
X    { number tie.or.space.connect }
X  if$
X}
X
XFUNCTION {format.article.crossref}
X{ key empty$
X    { journal empty$
X	{ "need key or journal for " cite$ * " to crossref " * crossref *
X	  warning$
X	  ""
X	}
X	{ "in " journal * }
X      if$
X    }
X    { "in " key * }
X  if$
X  " \cite{" * crossref * "}" *
X}
X
XFUNCTION {format.crossref.editor}
X{ editor #1 "{vv~}{ll}" format.name$
X  editor num.names$ duplicate$
X  #2 >
X    { pop$ " et~al." * }
X    { #2 <
X	'skip$
X	{ editor #2 "{ff }{vv }{ll}{ jj}" format.name$ "others" =
X	    { " et~al." * }
X	    { " et " * editor #2 "{vv~}{ll}" format.name$ * }
X	  if$
X	}
X      if$
X    }
X  if$
X}
X
XFUNCTION {format.book.crossref}
X{ volume empty$
X    { "empty volume in " cite$ * "'s crossref of " * crossref * warning$
X      "in "
X    }
X    { "vol.~" volume *
X      " of " *
X    }
X  if$
X  editor empty$
X  editor field.or.null author field.or.null =
X  or
X    { key empty$
X	{ series empty$
X	    { "need editor, key, or series for " cite$ * " to crossref " *
X	      crossref * warning$
X	      "" *
X	    }
X	    { series * }
X	  if$
X	}
X	{ key * }
X      if$
X    }
X    { format.crossref.editor * }
X  if$
X  " \cite{" * crossref * "}" *
X}
X
XFUNCTION {format.incoll.inproc.crossref}
X{ editor empty$
X  editor field.or.null author field.or.null =
X  or
X    { key empty$
X	{ booktitle empty$
X	    { "need editor, key, or booktitle for " cite$ * " to crossref " *
X	      crossref * warning$
X	      ""
X	    }
X	    { "in " booktitle * }
X	  if$
X	}
X	{ "in " key * }
X      if$
X    }
X    { "in " format.crossref.editor * }
X  if$
X  " \cite{" * crossref * "}" *
X}
X
XFUNCTION {article}
X{ output.bibitem
X  format.authors "author" output.check
X  format.title "title" output.check
X  crossref missing$
X    { journal "journal" output.check
X      format.vol.year output
X    }
X    { format.article.crossref output.nonnull }
X  if$
X  format.pages output
X  new.block
X  note output
X  fin.entry
X}
X
XFUNCTION {book}
X{ output.bibitem
X  author empty$
X    { format.editors "author and editor" output.check }
X    { format.authors output.nonnull
X      crossref missing$
X	{ "author and editor" editor either.or.check }
X	'skip$
X      if$
X    }
X  if$
X  format.btitle "title" output.check
X  crossref missing$
X    { format.bvolume output
X      format.number.series output
X      publisher "publisher" output.check
X      address output
X    }
X    { format.book.crossref output.nonnull }
X  if$
X  format.edition output
X  format.date "year" output.check
X  new.block
X  note output
X  fin.entry
X}
X
XFUNCTION {booklet}
X{ output.bibitem
X  format.authors output
X  format.title "title" output.check
X  howpublished new.block.checka
X  howpublished output
X  address output
X  format.date output
X  new.block
X  note output
X  fin.entry
X}
X
XFUNCTION {inbook}
X{ output.bibitem
X  author empty$
X    { format.editors "author and editor" output.check }
X    { format.authors output.nonnull
X      crossref missing$
X	{ "author and editor" editor either.or.check }
X	'skip$
X      if$
X    }
X  if$
X  format.btitle "title" output.check
X  crossref missing$
X    { format.bvolume output
X      format.number.series output
X      publisher "publisher" output.check
X      address output
X    }
X    { format.book.crossref output.nonnull }
X  if$
X  format.edition output
X  format.date "year" output.check
X  format.chapter.pages "chapter and pages" output.check
X  new.block
X  note output
X  fin.entry
X}
X
XFUNCTION {incollection}
X{ output.bibitem
X  format.authors "author" output.check
X  format.title "title" output.check
X  crossref missing$
X    { format.in.ed.booktitle "booktitle" output.check
X      format.bvolume output
X      format.number.series output
X      publisher "publisher" output.check
X      address output
X      format.edition output
X      format.date "year" output.check
X    }
X    { format.incoll.inproc.crossref output.nonnull }
X  if$
X  format.chapter.pages output
X  new.block
X  note output
X  fin.entry
X}
X
XFUNCTION {inproceedings}
X{ output.bibitem
X  format.authors "author" output.check
X  format.title "title" output.check
X  crossref missing$
X    { format.in.ed.booktitle "booktitle" output.check
X      format.bvolume output
X      format.number.series output
X      address empty$
X	{ organization output
X	  publisher output
X	  format.date "year" output.check
X	}
X	{ address output.nonnull
X	  format.date "year" output.check
X	  organization output
X	  publisher output
X	}
X      if$
X    }
X    { format.incoll.inproc.crossref output.nonnull }
X  if$
X  format.pages output
X  new.block
X  note output
X  fin.entry
X}
X
XFUNCTION {conference} { inproceedings }
X
XFUNCTION {manual}
X{ output.bibitem
X  author empty$
X    { format.organization output }
X    { format.authors output.nonnull }
X  if$
X  format.btitle "title" output.check
X  author empty$
X    'skip$
X    { organization output }
X  if$
X  address output
X  format.edition output
X  format.date output
X  new.block
X  note output
X  fin.entry
X}
X
XFUNCTION {mastersthesis}
X{ output.bibitem
X  format.authors "author" output.check
X  format.title "title" output.check
X  "Master's thesis" format.thesis.type output.nonnull
X  school "school" output.check
X  address output
X  format.date "year" output.check
X  new.block
X  note output
X  fin.entry
X}
X
XFUNCTION {misc}
X{ output.bibitem
X  format.authors output
X  format.title output
X  howpublished new.block.checka
X  howpublished output
X  format.date output
X  new.block
X  note output
X  fin.entry
X  empty.misc.check
X}
X
XFUNCTION {phdthesis}
X{ output.bibitem
X  format.authors "author" output.check
X  format.btitle "title" output.check
X  "PhD thesis" format.thesis.type output.nonnull
X  school "school" output.check
X  address output
X  format.date "year" output.check
X  new.block
X  note output
X  fin.entry
X}
X
XFUNCTION {proceedings}
X{ output.bibitem
X  editor empty$
X    { format.organization output }
X    { format.editors output.nonnull }
X  if$
X  format.btitle "title" output.check
X  format.bvolume output
X  format.number.series output
X  address empty$
X    { editor empty$
X	'skip$
X	{ organization output }
X      if$
X      publisher output
X      format.date "year" output.check
X    }
X    { address output.nonnull
X      format.date "year" output.check
X      editor empty$
X	'skip$
X	{ organization output }
X      if$
X      publisher output
X    }
X  if$
X  new.block
X  note output
X  fin.entry
X}
X
XFUNCTION {techreport}
X{ output.bibitem
X  format.authors "author" output.check
X  format.title "title" output.check
X  format.tr.number output.nonnull
X  institution "institution" output.check
X  address output
X  format.date "year" output.check
X  new.block
X  note output
X  fin.entry
X}
X
XFUNCTION {unpublished}
X{ output.bibitem
X  format.authors "author" output.check
X  format.title "title" output.check
X  new.block
X  note "note" output.check
X  format.date output
X  fin.entry
X}
X
XFUNCTION {default.type} { misc }
X
XMACRO {jan} {"Jan."}
X
XMACRO {feb} {"Fev."}
X
XMACRO {mar} {"Mars"}
X
XMACRO {apr} {"Avr."}
X
XMACRO {may} {"Mai"}
X
XMACRO {jun} {"Juin"}
X
XMACRO {jul} {"Juil."}
X
XMACRO {aug} {"Ao\^{u}t"}
X
XMACRO {sep} {"Sept."}
X
XMACRO {oct} {"Oct."}
X
XMACRO {nov} {"Nov."}
X
XMACRO {dec} {"Dec."}
X
XMACRO {acmcs} {"ACM Comput. Surveys"}
X
XMACRO {acta} {"Acta Inf."}
X
XMACRO {cacm} {"Comm. ACM"}
X
XMACRO {ibmjrd} {"IBM J. Res. Dev."}
X
XMACRO {ibmsj} {"IBM Syst.~J."}
X
XMACRO {ieeese} {"IEEE Trans. Softw. Eng."}
X
XMACRO {ieeetc} {"IEEE Trans. Comput."}
X
XMACRO {ieeetcad}
X {"IEEE Trans. Comput.-Aided Design Integrated Circuits"}
X
XMACRO {ipl} {"Inf. Process. Lett."}
X
XMACRO {jacm} {"J.~Assoc. Comput. Mach."}
X
XMACRO {jcss} {"J.~Comput. System Sci."}
X
XMACRO {scp} {"Sci. Comput. Programming"}
X
XMACRO {sicomp} {"SIAM J. Comput."}
X
XMACRO {tocs} {"ACM Trans. Comput. Syst."}
X
XMACRO {tods} {"ACM Trans. Database Syst."}
X
XMACRO {tog} {"ACM Trans. Gr."}
X
XMACRO {toms} {"ACM Trans. Math. Softw."}
X
XMACRO {toois} {"ACM Trans. Office Inf. Syst."}
X
XMACRO {toplas} {"ACM Trans. Prog. Lang. Syst."}
X
XMACRO {tcs} {"Theoretical Comput. Sci."}
X
XREAD
X
XFUNCTION {sortify}
X{ purify$
X  "l" change.case$
X}
X
XINTEGERS { len }
X
XFUNCTION {chop.word}
X{ 's :=
X  'len :=
X  s #1 len substring$ =
X    { s len #1 + global.max$ substring$ }
X    's
X  if$
X}
X
XFUNCTION {sort.format.names}
X{ 's :=
X  #1 'nameptr :=
X  ""
X  s num.names$ 'numnames :=
X  numnames 'namesleft :=
X    { namesleft #0 > }
X    { nameptr #1 >
X	{ "   " * }
X	'skip$
X      if$
X      s nameptr "{vv{ } }{ll{ }}{  f{ }}{  jj{ }}" format.name$ 't :=
X      nameptr numnames = t "others" = and
X	{ "et al" * }
X	{ t sortify * }
X      if$
X      nameptr #1 + 'nameptr :=
X      namesleft #1 - 'namesleft :=
X    }
X  while$
X}
X
XFUNCTION {sort.format.title}
X{ 't :=
X  "A " #2
X    "An " #3
X      "The " #4 t chop.word
X    chop.word
X  chop.word
X  sortify
X  #1 global.max$ substring$
X}
X
XFUNCTION {author.sort}
X{ author empty$
X    { key empty$
X	{ "to sort, need author or key in " cite$ * warning$
X	  ""
X	}
X	{ key sortify }
X      if$
X    }
X    { author sort.format.names }
X  if$
X}
X
XFUNCTION {author.editor.sort}
X{ author empty$
X    { editor empty$
X	{ key empty$
X	    { "to sort, need author, editor, or key in " cite$ * warning$
X	      ""
X	    }
X	    { key sortify }
X	  if$
X	}
X	{ editor sort.format.names }
X      if$
X    }
X    { author sort.format.names }
X  if$
X}
X
XFUNCTION {author.organization.sort}
X{ author empty$
X    { organization empty$
X	{ key empty$
X	    { "to sort, need author, organization, or key in " cite$ * warning$
X	      ""
X	    }
X	    { key sortify }
X	  if$
X	}
X	{ "The " #4 organization chop.word sortify }
X      if$
X    }
X    { author sort.format.names }
X  if$
X}
X
XFUNCTION {editor.organization.sort}
X{ editor empty$
X    { organization empty$
X	{ key empty$
X	    { "to sort, need editor, organization, or key in " cite$ * warning$
X	      ""
X	    }
X	    { key sortify }
X	  if$
X	}
X	{ "The " #4 organization chop.word sortify }
X      if$
X    }
X    { editor sort.format.names }
X  if$
X}
X
XFUNCTION {presort}
X{
X  cite$ 'sort.key$ :=
X}
X
XITERATE {presort}
X
XSORT
X
XSTRINGS { longest.label }
X
XINTEGERS { number.label longest.label.width }
X
XFUNCTION {initialize.longest.label}
X{ "" 'longest.label :=
X  #1 'number.label :=
X  #0 'longest.label.width :=
X}
X
XFUNCTION {longest.label.pass}
X{ 
X  cite$ 'label :=
X  label width$ longest.label.width >
X    { label 'longest.label :=
X      label width$ 'longest.label.width :=
X    }
X    'skip$
X  if$
X}
X
XEXECUTE {initialize.longest.label}
X
XITERATE {longest.label.pass}
X
XFUNCTION {begin.bib}
X{ preamble$ empty$
X    'skip$
X    { preamble$ write$ newline$ }
X  if$
X  "\begin{thebibliography}{"  longest.label  * "}" * write$ newline$
X}
X
XEXECUTE {begin.bib}
X
XEXECUTE {init.state.consts}
X
XEXECUTE {init.last.authors}
X
XITERATE {call.type$}
X
XFUNCTION {end.bib}
X{ newline$
X  "\end{thebibliography}" write$ newline$
X}
X
XEXECUTE {end.bib}
END_OF_FILE
if test 18967 -ne `wc -c <'lsiam.bst'`; then
    echo shar: \"'lsiam.bst'\" unpacked with wrong size!
fi
# end of 'lsiam.bst'
fi
echo shar: End of shell archive.
exit 0

exit 0 # Just in case...
