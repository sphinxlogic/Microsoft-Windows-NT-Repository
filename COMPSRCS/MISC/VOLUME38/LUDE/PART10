Newsgroups: comp.sources.misc
From: laplante@crim.ca (Pierre Laplante)
Subject: v38i042:  lude - A Distributed Software Library, Part10/12
Message-ID: <1993Jul11.224745.16869@sparky.imd.sterling.com>
X-Md4-Signature: 560f4bc6482197f38fc268bf2db86884
Sender: kent@sparky.imd.sterling.com (Kent Landfield)
Organization: Sterling Software
Date: Sun, 11 Jul 1993 22:47:45 GMT
Approved: kent@sparky.sterling.com

Submitted-by: laplante@crim.ca (Pierre Laplante)
Posting-number: Volume 38, Issue 42
Archive-name: lude/part10
Environment: UNIX

#! /bin/sh
# This is a shell archive.  Remove anything before this line, then feed it
# into a shell via "sh file" or similar.  To overwrite existing files,
# type "sh file -c".
# Contents:  lude-1.1/run/crim/sun4.1_sparc/bin/man2html
#   lude-1.1/run/crim/sun4.1_sparc/include/lude/ludelang.pl
#   lude-1.1/run/crim/sun4.1_sparc/lib/lude/lang/ludeindex
#   lude-1.1/run/crim/sun4.1_sparc/lib/lude/lang/ludemisc
#   lude-1.1/src/orig/config.status lude-1.1/src/orig/configure.in
#   lude-1.1/src/orig/dev.texinfo.UU lude-1.1/src/orig/lang/ludeindex
#   lude-1.1/src/orig/src/fileutil.pl
#   lude-1.1/src/orig/src/ludelang.pl
#   lude-1.1/src/orig/src/ludelistinc lude-1.1/src/orig/src/man2html
# Wrapped by kent@sparky on Sun Jul 11 15:49:16 1993
PATH=/bin:/usr/bin:/usr/ucb:/usr/local/bin:/usr/lbin ; export PATH
echo If this archive is complete, you will see the following message:
echo '          "shar: End of archive 10 (of 12)."'
if test -f 'lude-1.1/run/crim/sun4.1_sparc/bin/man2html' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'lude-1.1/run/crim/sun4.1_sparc/bin/man2html'\"
else
  echo shar: Extracting \"'lude-1.1/run/crim/sun4.1_sparc/bin/man2html'\" \(4814 characters\)
  sed "s/^X//" >'lude-1.1/run/crim/sun4.1_sparc/bin/man2html' <<'END_OF_FILE'
X#! /usr/local/bin/perl
X#
X# Program to convert the man pages into HTML World Wide Web format.
X# Copyright (C) 1993 Michel Dagenais
X#
X#
X# This file is part of Lude
X#
X# Lude is free software; you can redistribute it and/or modify
X# it under the terms of the GNU General Public License as published by
X# the Free Software Foundation; either version 2, or (at your option)
X# any later version.
X#
X# Lude is distributed in the hope that it will be useful,
X# but WITHOUT ANY WARRANTY; without even the implied warranty of
X# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X# GNU General Public License for more details.
X#
X# You should have received a copy of the GNU General Public License
X# along with Lude; see the file COPYING.  If not, write to
X# the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.
X#
X#
X##########################################################################
X#
X# This script expects a man page filename as argument. This filename
X# has an extra .man extension at the end to specify that it is a man page
X#
X
Xif ( $#ARGV != 0 ) {
X   print STDERR "man2html: wrong number of arguments (man2html filename)\n";
X   exit(1);
X }
X
X$_ = $ARGV[0];
X
X$prefix = '';
X$section = '';
X$name = '';
X$ext = '';
X
X($prefix,$section,$name,$ext) = 
X        /(.+\/)([^\/]+\/)([^\/]+)\.([^\.]+)\.man$/;
X
X
Xif ( $name eq '' ) {
X   print STDERR "man2html: filename $ARGV[0] could not be parsed\n";
X   print STDERR "valid filename example: /usr/local/man/man1/man2html.1.man\n";
X   exit(1);
X }
X
X#
X# Check if the file exists.
X#
X
X$found = 0;
X
Xif ( -e "$prefix$section$name.$ext" ) { 
X   $found = 1; 
X }
Xelse { 
X   $ext =~ tr/A-Z/a-z/;
X   if ( -e "$prefix$section$name.$ext" ) { $found = 1; }
X }
X
X#
X# check if similar files can be found
X#
X
Xif( $found == 0 ) {
X
X   if( $ext =~ /([0-9ln]).*/ ) { $num = $1; }
X   else { $num = "1"; }
X
X#
X# try variants for the extension, then for the prefix, then for the section
X#
X
X   $filelist = `ls $prefix$section$name.* 2>/dev/null`;
X
X   if( $filelist =~ /^\s*$/ ) {
X      $filelist = `ls ${prefix}man$num/$name.* 2>/dev/null`;
X    }
X
X   if( $filelist =~ /^\s*$/ ) {
X      $filelist = `ls /usr/man/man$num/$name.* 2>/dev/null`;
X    }
X
X   if( $filelist =~ /^\s*$/ ) {
X      $filelist = `ls /usr/local/man/man$num/$name.* 2>/dev/null`;
X    }
X
X   if( $filelist =~ /^\s*$/ ) {
X      $filelist = `ls /usr/man/man[nl]/$name.* 2>/dev/null`;
X    }
X
X   if( $filelist =~ /^\s*$/ ) {
X      $filelist = `ls /usr/local/man/man[nl]/$name.* 2>/dev/null`;
X    }
X
X   if( $filelist =~ /^\s*$/ ) {
X      $filelist = `ls ${prefix}man*/$name.* 2>/dev/null`;
X    }
X
X   if( $filelist =~ /^\s*$/ ) {
X      $filelist = `ls /usr/man/man*/$name.* 2>/dev/null`;
X    }
X
X   if( $filelist =~ /^\s*$/ ) {
X      $filelist = `ls /usr/local/man/man*/$name.* 2>/dev/null`;
X    }
X
X   if( $filelist =~ /^\s*$/ ) {
X      print STDERR "man2html: could not find file $prefix$section$name.$ext\n";
X      exit(1);
X    }
X
X#
X# We have found something. If more than one file was found, offer a menu.
X#
X
X   @files = split(/[\s\n]+/,$filelist);
X
X#   if( $#files == 0 ) { 
X#      ($prefix,$section,$name,$ext) = 
X#		($files[0] =~ /(.+\/)([^\/]+\/)([^\/]+)\.([^\.]+)$/);
X#    }
X#   else {
X      print "<TITLE>$name</TITLE>\n";
X      print "\n<H2>MAN page $prefix$section$name.$ext was not found</H2>\n";
X      print "But other man pages with the same base name were found:\n";
X      print "\n<DL>\n";
X      foreach $filename (@files) {
X         ($prefix,$section,$name,$ext) = 
X		($filename =~ /(.+\/)([^\/]+\/)([^\/]+)\.([^\.]+)$/);
X         print "<DT><A HREF=${filename}.man>$name.$ext</A><DD>  ($filename)\n";
X       }
X      print "</DL>\n";
X      exit(0);
X#    }
X }
X
X#
X# At this point we have a single file to process
X#
X
Xprint "<TITLE>$name</TITLE>\n<H1>$name($ext)</H1>\n";
Xprint "\n<PRE>\n";
X
Xchdir $prefix;
X
Xopen(MFILE, "nroff -man -Tcrt $prefix$section$name.$ext |")
X  || die "man2html: failing to execute nroff -man $prefix$section$name.$ext\n";
X
X#
X# eat up the first header
X#
X
Xwhile (<MFILE>) {
X	if( /^[A-Z]/ ) { last; }
X }
X
X#
X# process the rest of the file
X#
X
X$seealso = 0;
X
Xwhile (<MFILE>) {
X   s/_\010//go;
X
X#
X# remove the page numbering and eat up to next header
X#
X
X   if( /^[a-zA-Z].*change.*[\s]+.*[0-9]$/ ) {
X      while (<MFILE>) {
X	 if( /^[A-Z]/ ) { last; }
X       }
X      next;
X    }
X
X#
X# process the headings
X#
X
X   if( /^[a-zA-Z]/ ) {
X      if( $seealso == 1 ) { $seealso = 0; }
X      else { print "\n</PRE>\n"; }
X
X      chop $_;
X      print "\n<H2>$_</H2>\n";
X
X      if( /^SEE ALSO/i ) { $seealso = 1; }
X      else { print "\n<PRE>\n"; }
X      next;
X    }
X
X   if ( $seealso == 1 ) {
X      s/([a-zA-Z][a-zA-Z0-9_\-]*)\(([0-9lnLN])([a-zA-Z0-9]*)\)/<A HREF=${prefix}man$2\/$1\.$2${3}.man>$1\($2$3\)<\/A>/g;
X    }
X   print;
X }
X
Xif( $seealso == 0 ) { print "\n</PRE>\n"; }
X
Xclose(MFILE);
Xexit(0);
X
X
X
END_OF_FILE
  if test 4814 -ne `wc -c <'lude-1.1/run/crim/sun4.1_sparc/bin/man2html'`; then
    echo shar: \"'lude-1.1/run/crim/sun4.1_sparc/bin/man2html'\" unpacked with wrong size!
  fi
  chmod +x 'lude-1.1/run/crim/sun4.1_sparc/bin/man2html'
  # end of 'lude-1.1/run/crim/sun4.1_sparc/bin/man2html'
fi
if test -f 'lude-1.1/run/crim/sun4.1_sparc/include/lude/ludelang.pl' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'lude-1.1/run/crim/sun4.1_sparc/include/lude/ludelang.pl'\"
else
  echo shar: Extracting \"'lude-1.1/run/crim/sun4.1_sparc/include/lude/ludelang.pl'\" \(4473 characters\)
  sed "s/^X//" >'lude-1.1/run/crim/sun4.1_sparc/include/lude/ludelang.pl' <<'END_OF_FILE'
X# ludelang - Language support for project lude.
X
X# Copyright (C) 1992 Stephane Boucher.
X#
X# This program is free software; you can redistribute it and/or modify
X# it under the terms of the GNU General Public License as published by
X# the Free Software Foundation; either version 1, or (at your option)
X# any later version.
X#
X# This program is distributed in the hope that it will be useful,
X# but WITHOUT ANY WARRANTY; without even the implied warranty of
X# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X# GNU General Public License for more details.
X#
X# You should have received a copy of the GNU General Public License
X# along with this program; if not, write to the Free Software
X# Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X
X$FULL_VERSION.= '$Id: ludelang.pl,v 1.2 1992/11/12 01:22:42 sbo Exp $' ."\n";
X
X#-----------------------------------------------------------------------
X# Description: 
X#
X# Parameters : 
X#
X# return     : Never return if error
X#
Xsub InitLang {
X    local($defaultLang, $langpath, $langfile, @argv)=@_; 
X    local($lang)=$defaultLang;
X    local($langidx);
X
X    # If env. var. LANGUAGE is defined, overide the
X    # default language.
X    if (defined($ENV{'LANGUAGE'})) {
X	$lang=$ENV{'LANGUAGE'};
X    }
X
X    # Overide $lang with the content of -language, if specified.
X    # Search for -language in the arguments
X    # And extract the value. If -language is not found,
X    # $lang will have the default language wich is english.
X    for ($idx=$[; $idx<scalar(@argv); $idx++) {
X	if ($argv[$idx] =~ m|^-language$|) {
X	    $lang=$argv[$idx+1];
X	    last;
X	}
X    }
X
X    # Search for the language file in $langpath
X    for $path (split(/:/, $langpath)) {
X	if (-r "$path/$langfile") {
X	    local(*fp);
X	    # Load the file containing the messages
X	    # according to the chosen language
X	    open(fp, "$path/$langfile");
X
X	    # Get the index of the language that will be
X	    # used to load the message file
X	    chop($langline=<fp>);
X	    if ($langline !~ m|\b$lang\b|) {
X		# Language specified not in list
X		# of available languages. Using english.
X		print STDERR "Warning: Language \"$lang\" not valid.\n";
X		printf STDERR ("Warning: Valid Choices Are \"%s\".\n", 
X			       join("\" \"",split(/\s+/, $langline)));
X		print STDERR "Warning: Using \"english\".\n";
X		$lang='english';
X	    }
X	    $langidx=0;
X	    for $i (split(/\s+/, $langline)) {
X		last if ($i eq $lang);
X		$langidx++;
X	    }
X
X	    # Load the message file.
X	    # Note that the file must be formatted correctly
X	    # because no error checking is done so that
X	    # the loading can be as fast as possible.
X	    local($msgidx);
X	    local($msgtype)=0;	# By default, use the var type
X	    local($msgvarname);
X	    local($varname);
X	    local($accumulate)=0;
X	    while(<fp>) {	
X		next if (m|^#|); # Comment Line. Skip it.
X		if (m|^var$|io) {
X		    $msgtype=0;	# var type
X		}
X		elsif (m|^array\s+([^\s]+)$|io) {
X		    $msgtype=1;	# Array type
X		    $msgvarname=$1;
X		}
X		elsif (m|^assoc\s+([^\s]+)$|io) {
X		    $msgtype=2;	# Assoc Array type
X		    $msgvarname=$1;
X		}
X		# A line that starts with a non-blank
X		# contains an identifier for a message
X		elsif (m|^([^\s]+)$|o) {
X		    $accumulate=1;
X		    if ($msgtype==0) { # Var type
X			eval("\$$1=\"\"");
X		    }
X		    elsif ($msgtype==1) { # array type
X			eval("push(@$msgvarname,\"\");\$msgidx=\$$1=\$#$msgvarname;");
X		    }
X		    elsif ($msgtype==2) { # assoc type
X			$varname=$1;
X			eval("\$$msgvarname{\"$1\"}=\"\"");
X		    }
X		}
X		# A line that start with ' c ' is
X		# the continuation of the previous line
X		elsif ($accumulate && m|^ c (.*)$|o) {
X		    if ($msgtype==0) { # Var type
X			eval("\$$msgvarname.=\"\n$1\"");
X		    }
X		    elsif ($msgtype==1) { # array type
X			eval("\$$msgvarname[$msgidx].=\"\n$1\"");
X		    }
X		    elsif ($msgtype==2) { # assoc type
X			eval("\$$msgvarname{\"$varname\"}.=\"\n$1\"");
X		    }
X		}
X		elsif (m|^ ([0-9]+) (.*)$|) {
X		    if ($1 == $langidx) {
X			if ($msgtype==0) { # Var type
X			    eval("\$$msgvarname=\"$2\"");
X			}
X			elsif ($msgtype==1) { # array type
X			    eval("\$$msgvarname[$msgidx]=\"$2\"");
X			}
X			elsif ($msgtype==2) { # assoc type
X			    eval("\$$msgvarname{\"$varname\"}=\"$2\"");
X			}
X			$accumulate=1;
X		    }
X		    else {
X			$accumulate=0;
X		    }
X		}
X	    }
X	    close(fp);
X	    return;
X	}
X    }
X    die "Could not find the messages file in $langpath, stopped";
X}
X
X#     ;;; Local Variables: ***
X#     ;;; mode:perl ***
X#     ;;; End: ***
END_OF_FILE
  if test 4473 -ne `wc -c <'lude-1.1/run/crim/sun4.1_sparc/include/lude/ludelang.pl'`; then
    echo shar: \"'lude-1.1/run/crim/sun4.1_sparc/include/lude/ludelang.pl'\" unpacked with wrong size!
  fi
  # end of 'lude-1.1/run/crim/sun4.1_sparc/include/lude/ludelang.pl'
fi
if test -f 'lude-1.1/run/crim/sun4.1_sparc/lib/lude/lang/ludeindex' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'lude-1.1/run/crim/sun4.1_sparc/lib/lude/lang/ludeindex'\"
else
  echo shar: Extracting \"'lude-1.1/run/crim/sun4.1_sparc/lib/lude/lang/ludeindex'\" \(5073 characters\)
  sed "s/^X//" >'lude-1.1/run/crim/sun4.1_sparc/lib/lude/lang/ludeindex' <<'END_OF_FILE'
Xfrancais english
Xarray TEXT
XSEE_ALSO
X 0 Voir aussi
X 1 See also
XBAD_TYPE
X 0 type incorrect pour
X 1 incorrect type for
XBAD_ARGUMENT
X 0 argument incorrect
X 1 bad argument
XSOFT_INSTALLED
X 0 LISTE DES LOGICIELS INSTALLES
X 1 SOFTWARE PACKAGES AVAILABLE
XDIR_TITLE
X 0 REPERTOIRE DES LOGICIELS LUDE
X 1 MAIN LUDE DIRECTORY
XUSAGE_HELP
X 0 Utilisation:
X c  [-debug debuglevel] {ajuster le niveau de deverminage}
X c  [-help|-?] {pour avoir de l'aide}
X c  [-version|-full-version] {numero de version du logiciel}
X c  [-verbose] {imprime des messages informatifs sur le deroulement}
X c  [-catman] {mise a jour de l'index whatis pour les pages de manuel}
X c  [-pathcatman] {liste des repertoires vises par -catman}
X c  [-waisman] {mise a jour de la base de donnee WAIS pour les pages de manuel}
X c  [-pathwaisman] {liste des repertoires vises par -waisman}
X c  [-info] {mise a jour du menu principal pour les fichiers GNU info}
X c  [-pathinfo] {liste des repertoires vises par -info}
X c  [-wwwsoft] {genere des fichiers html WWW pour les logiciels lude}
X c  [-waissoft] {genere des fichiers WAIS pour les logiciels de lude}
X c  [-pathsoft] {liste des repertoires vises par -wwwsoft et -waissoft}
X c  [-all] {comme -catman -info -waisman -wwwsoft -waissoft}
X c  [-remotelink] {liens html vers la documentation meme pour les logiciels
X c                 qui ne sont pas installes localement}
X c  [-nowwwext] {ne pas ajouter .man et .info aux liens WWW 
X c               pour identification}
X c  [-portwww] {changer le port utilise pour le serveur WWW}
X c  [-portwais] {changer le port utilise pour le serveur WAIS}
X c  [-hostwww] {changer le nom de l'ordinateur utilise pour le serveur WWW}
X c  [-hostwais] {changer le nom de l'ordinateur utilise pour le serveur WAIS}
X 1 USAGE:
X c  [-debug debuglevel] {adjust the debugging level}
X c  [-help|-?] {get some help}
X c  [-version|-full-version] {get the version number of this program}
X c  [-verbose] {get informative messages during the execution}
X c  [-catman] {update the whatis database for the man pages}
X c  [-pathcatman] {list of paths used for option -catman}
X c  [-waisman] {update the WAIS database for the man pages}
X c  [-pathwaisman] {list of paths used for option -waisman}
X c  [-info] {update the main menu for GNU info files}
X c  [-pathinfo] {list of paths used for option -info}
X c  [-wwwsoft] {create HTML WWW files for Lude software packages}
X c  [-waissoft] {create WAIS data files for Lude software packages}
X c  [-pathsoft] {list of paths used for options -wwwsoft and -waissoft}
X c  [-all] {same as -catman -info -waisman -wwwsoft -waissoft}
X c  [-remotelink] {add html links to the documentation even for
X c                 non local Lude software packages}
X c  [-nowwwext] {do not add .man and .info to WWW links for identification
X c               purposes}
X c  [-portwww] {change the default port for the WWW server}
X c  [-portwais] {change the default port for the WAIS server}
X c  [-hostwww] {change the WWW server host name}
X c  [-hostwais] {change the WAIS server host name}
XBAD_MAN_DIR
X 0 est vide ou ne peut etre accede
X 1 is empty or cannot be accessed
XMAN_TO_DATE
X 0 est a jour
X 1 is up to date
XMAN_INDEXING
X 0 indexage des pages de manuel dans %s, %s a change
X 1 indexing man pages in %s, %s was modified
XIS_DONE
X 0 fait.
X 1 done.
XINFO_UPDATE
X 0 mise a jour du menu principal dans
X 1 updating the main menu in
XWAIS_TO_DATE
X 0 base de donnee WAIS a jour
X 1 WAIS database is up to date
XWAIS_MAN_BASE
X 0 construction de la base de donnee WAIS pour
X 1 constructing the WAIS database for
XNB_MAN_TOO_SMALL
X 0 %d pages de manuel ignorees, contenant moins de 80 caracteres
X 1 %d man pages were ignored, containing fewer than 80 characters
XIGNORING_FILE
X 0 le fichier suivant est ignore:
X 1 ignoring file
XHTML_UPDATING
X 0 mise a jour des fichiers HTML (WWW) pour les logiciels dans
X 1 updating HTML (WWW) files for software packages in
XHTML_UPDATING_MENU
X 0 construction du menu principal pour les fichiers HTML
X 1 constructing the main menu for HTML files
XSOFT_AVAILABILITY
X 0 CLASSES ET MODIFICATIONS DISPONIBLES
X 1 CLASSES AND MODIFICATIONS AVAILABLE
XCLASS_IS_LINKED
X 0 Le logiciel %s, modification %s, classe %s est disponible localement 
X 1 Software %s, modification %s, class %s is available locally
XCLASS_IS_LOCAL
X 0 Le logiciel %s, modification %s, classe %s est disponible localement dans %s
X 1 Software %s, modification %s, class %s is available locally in %s
XCLASS_ON_SERVER
X 0 Le logiciel %s, modification %s, classe %s est disponible sur le serveur %s 
X 1 Software %s, modification %s, class %s is available on server %s
XCLASS_ELSEWHERE
X 0 Le logiciel %s, modification %s, classe %s est disponible dans %s
X 1 Software %s, modification %s, class %s is available in %s
XWAIS_INDEXING
X 0 indexage des bases de donnees WAIS
X 1 indexing WAIS databases
XCANNOT_ACCESS
X 0 le fichier suivant ne peut etre accede
X 1 the following file cannot be accessed
Xarray FIELD
XUSAGE
X 0 UTILISATION:
X 1 USAGE:
XINSTALL
X 0 INSTALLATION:
X 1 INSTALL:
XDESCRIPTION
X 0 DOCUMENTATION:
X 1 DESCRIPTION:
XABSTRACT
X 0 RESUME:
X 1 ABSTRACT:
X
X
END_OF_FILE
  if test 5073 -ne `wc -c <'lude-1.1/run/crim/sun4.1_sparc/lib/lude/lang/ludeindex'`; then
    echo shar: \"'lude-1.1/run/crim/sun4.1_sparc/lib/lude/lang/ludeindex'\" unpacked with wrong size!
  fi
  # end of 'lude-1.1/run/crim/sun4.1_sparc/lib/lude/lang/ludeindex'
fi
if test -f 'lude-1.1/run/crim/sun4.1_sparc/lib/lude/lang/ludemisc' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'lude-1.1/run/crim/sun4.1_sparc/lib/lude/lang/ludemisc'\"
else
  echo shar: Extracting \"'lude-1.1/run/crim/sun4.1_sparc/lib/lude/lang/ludemisc'\" \(4277 characters\)
  sed "s/^X//" >'lude-1.1/run/crim/sun4.1_sparc/lib/lude/lang/ludemisc' <<'END_OF_FILE'
Xfrancais english
Xarray MSGS
XWARN_NOTLINK
X 0 Le fichier %s n'est pas un lien symbolique. Le lien ne sera pas fait.
X 1 File %s is not a link. Link wont be removed.
XWARN_WRONG_LINK
X 0 Le fichier est un lien symbolique vers le mauvais repertoire: %s.
X 1 File %s is a link to the wrong directory: %s.
XWARN_NOFILE
X 0 Le fichier %s n'existe pas.
X 1 File %s does not exist. Link wont be remove.
XWARN_NOCMD
X 0 La commande %s n'est pas dans le chemin $ENV{'PATH'}
X 1 Command %s is not in the path $ENV{'PATH'}
XWARN_CMD
X 0 Execution de %s
X 1 Execution of %s
XWARN_NOINFO
X 0 Ce logiciel n'a pas de fichier(s) info.
X 1 This software does not have info files.
XWARN_DIR
X 0 Le repertoire %s n'existe pas.
X 1 Directory %s does not exist.
XWARN_OUT
X 0 %s
X 1 %s
XWARN_RMDIR
X 0 Impossible d'enlever le repertoire %s: %s
X 1 Can't rmdir %s: %s
XWARN_MKDIR
X 0 Impossible de creer le repertoire %s: %s
X 1 Can't make directory %s: %s
XWARN_SYMLINK
X 0 Impossible de creer le lien symbolique entre %s et %s: %s
X 1 Can't make symlink between %s and %s: %s
XWARN_RMSYMLINK
X 0 Impossible d'enlever le lien symbolique %s
X 1 Can't remove symlink %s
XWARN_EXEC
X 0 Impossible d'executer %s: %s
X 1 Can't execute %s: %s
XWARN_NOTINSTALLED
X 0 Ce logiciel n'est pas completement installe.
X 1 The software is not completely installed.
XWARN_MSG
X 0 Avertissement: %s.
X 1 Warning: %s.
XERR_NO_LUDE_VERSION_USED_FOR_SOFT
X 0 La version utilise pour installer le logiciel n'est pas valide ou n'a pas ete trouve.
X 1 The Version used to install the software is not valid or was not found.
XERR_VAR
X 0 La variable %s doit etre initialise.
X 1 Variable %s Must Be Initialize
XERR_DIR
X 0 Le repertoire \"%s\" n'existe pas.
X 1 Directory \"%s\" Does Not Exist.
XERR_FILE
X 0 Le fichier \"%s\" n'existe pas.
X 1 File \"%s\" Does Not Exist.
XERR_OPEN
X 0 Impossible d'ouvrir le fichier \"%s\": %s
X 1 Can't Open File \"%s\": %s
XERR_REN
X 0 Impossible de renommer le fichier \"%s\": %s
X 1 Can't Rename File \"%s\": %s
XERR_USAGE
X 0 Erreur d'utilisation.
X 1 Error On Utilisation.
XERR_ARG
X 0 L'argument %s doit etre suivit de %s.
X 1 Argument %s Must Be Followed By %s.
XERR_NOSER
X 0 Le logiciel %s n'existe pas.
X 1 The Software %s Does Not Exist.
XINVALID_ARGUMENT
X 0 L'argument %s est invalide.
X 1 Argument %s Is Invalid.
XERR_ARG_REQUIRED
X 0 L'argument %s est requis.
X 1 Argument %s Is Required.
XERR_CMD
X 0 Pas de %s dans $ENV{'PATH'}.
X 1 No %s In $ENV{'PATH'}.
XERR_MKDIR
X 0 Impossible de creer le repertoire \"%s\": %d
X 1 Can't Make Directory \"%s\": %d
XERR_SYMLINK
X 0 Impossible de faire le lien symbolique entre \"%s\" et \"%s\": %s
X 1 Can't Make Symlink Between \"%s\" and \"%s\": %s
XERR_RMDIR
X 0 Impossible d'enlever le repertoire \"%s\": %s
X 1 Can't Rmdir \"%s\": %s
XERR_INVCMD
X 0 Commande de \"Mapping\" invalide: \"%s\"
X 1 Invalid Mapping Command: \"%s\"
XERR_WRONG_FILE_TYPE
X 0 Type de fichier incorrect: \"%s\". Devrait etre un fichier ordinaire, un lien symbolique ou un repertoire.
X 1 Wrong File Type: \"%s\". Should Be A Regular File, A Symlink Or A Directory.
XERR_INTERNAL
X 0 Erreur interne %s.
X 1 Internal Error %s.
XERR_INCOMP_ARGS
X 0 Impossible d'utiliser %s avec n'importe quel de %s.
X 1 Can't Use %s With Any Of %s.
XERR_ARG_REQUIRES
X 0 L'argument %s requiert %s.
X 1 Argument %s requires %s.
XERR_RMSYMLINK
X 0 Impossible d'enlever le lien symbolique: \"%s\".
X 1 Can't Remove Symlink: \"%s\".
XERR_UNLINK
X 0 Impossible d'enlever le fichier: \"%s\".
X 1 Can't Remove File: \"%s\".
XERR_ACCESS
X 0 Impossible d'acceder \"%s\".
X 1 Can't Access \"%s\".
XERR_NO_R_PERM
X 0 Pas de permission de lire: %d.
X 1 Don't Have Read Permission: %d.
XERR_NO_W_PERM
X 0 Pas de permission d'ecriture: %d.
X 1 Don't Have Write Permission: %d.
XERR_HIST
X 0 Erreur pendant la mise a jour du fichier history. 
X 1 Error While Trying To Update The History File.
XERR_READ
X 0 Erreur de lecture dans le fichier %s.
X 1 Error Reading From File %s.
XERR_WRITE
X 0 Erreur d'ecriture dans le fichier %s.
X 1 Error Writing To File %s.
XERR_READ_DIR
X 0 Impossible de lire le repertoire %s.
X 1 Can't Read Directory %s.
XERR_WRITE_DIR
X 0 Impossible d'ecrire dans le repertoire %s.
X 1 Can't Write To Directory %s.
XERR_DIR_TYPE_EXPECTED
X 0 Un repertoire etait attendu pour %s. 
X 1 A Directory Was Expected For %s.
XERR_VALUE_DIR
X 0 Le repertoire %s n'est pas valide.
X 1 Directory %s Is Invalid.
END_OF_FILE
  if test 4277 -ne `wc -c <'lude-1.1/run/crim/sun4.1_sparc/lib/lude/lang/ludemisc'`; then
    echo shar: \"'lude-1.1/run/crim/sun4.1_sparc/lib/lude/lang/ludemisc'\" unpacked with wrong size!
  fi
  # end of 'lude-1.1/run/crim/sun4.1_sparc/lib/lude/lang/ludemisc'
fi
if test -f 'lude-1.1/src/orig/config.status' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'lude-1.1/src/orig/config.status'\"
else
  echo shar: Extracting \"'lude-1.1/src/orig/config.status'\" \(2583 characters\)
  sed "s/^X//" >'lude-1.1/src/orig/config.status' <<'END_OF_FILE'
X#!/bin/sh
X# Generated automatically by configure.
X# Run this file to recreate the current configuration.
X# This directory was configured as follows,
X# on host mason:
X#
X# ./configure 
X
Xcase "$1" in
X  -recheck | --recheck | --rechec | --reche | --rech | --rec | --re | --r)
X  exec /bin/sh ./configure  ;;
Xesac
X
Xtrap 'rm -f Makefile src/Makefile src/config.pl info/Makefile lang/Makefile html/Makefile; exit 1' 1 3 15
XCAT='cat'
XCHMOD='chmod'
XCOMPRESS='compress'
XCP='cp'
XECHO='echo'
XEMACS='emacs'
XMAKE='make'
XMKDIR='mkdir'
XMV='mv'
XSED='sed'
XSH='sh'
XPROG_TAR='tar'
XPROG_CMP='cmp'
XPROG_MOUNT_TFS='mount_tfs'
XPROG_UMOUNT_TFS='umount_tfs'
XCONF_HAVE_TFS='1'
XPROG_HOSTNAME='hostname'
XCONF_HAVE_HOSTNAME='1'
XPROG_DOMAINNAME='domainname'
XPROG_DOMAINAME=''
XCONF_HAVE_DOMAINNAME='1'
XPROG_MAKEWHATIS='catman -w -M'
XCONF_SYS_MAN_PATH='/usr/man'
XFIRST_CLASS='sun4.1_sparc'
XOTHER_CLASSES=''
XPREFIX='/usr/local/soft/lude-1.1/run/crim/sun4.1_sparc'
XCONF_LANG_DEFAULT='english'
XCONF_LANG_DEFAULT_ABREV='eng'
XLANG_INFO='fra eng'
XVERSION='1.1'
XLIBS=''
Xsrcdir='.'
XDEFS=' -DCONF_HAVE_HOSTNAME=1'
Xprefix=''
Xexec_prefix=''
Xprsub=''
X
Xtop_srcdir=$srcdir
Xfor file in Makefile src/Makefile src/config.pl info/Makefile lang/Makefile html/Makefile; do
X  srcdir=$top_srcdir
X  # Remove last slash and all that follows it.  Not all systems have dirname.
X  dir=`echo $file|sed 's%/[^/][^/]*$%%'`
X  if test "$dir" != "$file"; then
X    test "$top_srcdir" != . && srcdir=$top_srcdir/$dir
X    test ! -d $dir && mkdir $dir
X  fi
X  echo creating $file
X  rm -f $file
X  echo "# Generated automatically from `basename $file`.in by configure." > $file
X  sed -e "
X$prsub
Xs%@CAT@%$CAT%g
Xs%@CHMOD@%$CHMOD%g
Xs%@COMPRESS@%$COMPRESS%g
Xs%@CP@%$CP%g
Xs%@ECHO@%$ECHO%g
Xs%@EMACS@%$EMACS%g
Xs%@MAKE@%$MAKE%g
Xs%@MKDIR@%$MKDIR%g
Xs%@MV@%$MV%g
Xs%@SED@%$SED%g
Xs%@SH@%$SH%g
Xs%@PROG_TAR@%$PROG_TAR%g
Xs%@PROG_CMP@%$PROG_CMP%g
Xs%@PROG_MOUNT_TFS@%$PROG_MOUNT_TFS%g
Xs%@PROG_UMOUNT_TFS@%$PROG_UMOUNT_TFS%g
Xs%@CONF_HAVE_TFS@%$CONF_HAVE_TFS%g
Xs%@PROG_HOSTNAME@%$PROG_HOSTNAME%g
Xs%@CONF_HAVE_HOSTNAME@%$CONF_HAVE_HOSTNAME%g
Xs%@PROG_DOMAINNAME@%$PROG_DOMAINNAME%g
Xs%@PROG_DOMAINAME@%$PROG_DOMAINAME%g
Xs%@CONF_HAVE_DOMAINNAME@%$CONF_HAVE_DOMAINNAME%g
Xs%@PROG_MAKEWHATIS@%$PROG_MAKEWHATIS%g
Xs%@CONF_SYS_MAN_PATH@%$CONF_SYS_MAN_PATH%g
Xs%@FIRST_CLASS@%$FIRST_CLASS%g
Xs%@OTHER_CLASSES@%$OTHER_CLASSES%g
Xs%@PREFIX@%$PREFIX%g
Xs%@CONF_LANG_DEFAULT@%$CONF_LANG_DEFAULT%g
Xs%@CONF_LANG_DEFAULT_ABREV@%$CONF_LANG_DEFAULT_ABREV%g
Xs%@LANG_INFO@%$LANG_INFO%g
Xs%@VERSION@%$VERSION%g
Xs%@LIBS@%$LIBS%g
Xs%@srcdir@%$srcdir%g
Xs%@DEFS@%$DEFS%" $top_srcdir/${file}.in >> $file
Xdone
X
END_OF_FILE
  if test 2583 -ne `wc -c <'lude-1.1/src/orig/config.status'`; then
    echo shar: \"'lude-1.1/src/orig/config.status'\" unpacked with wrong size!
  fi
  chmod +x 'lude-1.1/src/orig/config.status'
  # end of 'lude-1.1/src/orig/config.status'
fi
if test -f 'lude-1.1/src/orig/configure.in' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'lude-1.1/src/orig/configure.in'\"
else
  echo shar: Extracting \"'lude-1.1/src/orig/configure.in'\" \(5256 characters\)
  sed "s/^X//" >'lude-1.1/src/orig/configure.in' <<'END_OF_FILE'
Xdnl Process this file with autoconf to produce a configure script.
X
Xdnl Add some things to the path, in case the user running this script
Xdnl has an incomplete path
XPATH=${PATH}:/usr/etc:/usr/lib:/usr/local/bin
X
XAC_INIT(lude.dir)
X
Xdnl --------------------------------------------------------
XAC_PROGRAMS_CHECK(CAT, cat)
XAC_PROGRAMS_CHECK(CHMOD, chmod)
XAC_PROGRAMS_CHECK(COMPRESS, compress gzip)
XAC_PROGRAMS_CHECK(CP, cp)
XAC_PROGRAMS_CHECK(ECHO, echo)
XAC_PROGRAMS_CHECK(EMACS, emacs xemacs lemacs)
XAC_PROGRAMS_CHECK(MAKE, gnumake gmake make pmake)
XAC_PROGRAMS_CHECK(MKDIR, mkdir)
XAC_PROGRAMS_CHECK(MV, mv)
XAC_PROGRAMS_CHECK(SED, sed)
XAC_PROGRAMS_CHECK(SH, sh bash ksh)
X
XAC_PROGRAMS_CHECK(PROG_TAR,  gnutar gtar tar)
Xif test -z "$PROG_TAR"; then
X	echo " prog tar not found. aborting ..."
X	exit 1;
Xfi
X
Xdnl --------------------------------------------------------
XAC_PROGRAMS_CHECK(PROG_CMP, cmp)
Xif test -z "$PROG_CMP"; then
X	echo You do not seem to have an equivalent to cmp. aborting...
X	exit 1
Xelse 
X	if $PROG_CMP Makefile.in Makefile.in; then
X		if $PROG_CMP Makefile.in COPYING >& /dev/null; then
X			echo $PROG_CMP does not work as expected. aborting...
X			exit 1
X		else
X			echo $PROG_CMP works as expected
X		fi
X	else
X		echo $PROG_CMP does not work as expected. aborting...
X		exit 1
X	fi
Xfi
X
Xdnl --------------------------------------------------------
XAC_PROGRAMS_CHECK(PROG_MOUNT_TFS, mount_tfs)
XAC_PROGRAMS_CHECK(PROG_UMOUNT_TFS, umount_tfs)
XCONF_HAVE_TFS=0;
Xif test -z "$PROG_MOUNT_TFS"; then
X	echo "TFS doesn't seem to be supported on your system, but it's ok."
Xelse
X	CONF_HAVE_TFS=1;
X	echo "TFS seems to be supported on your system."
Xfi
XAC_SUBST(CONF_HAVE_TFS)
X
Xdnl --------------------------------------------------------
XAC_PROGRAMS_CHECK(PROG_HOSTNAME, hostname uname)
XCONF_HAVE_HOSTNAME=0;
Xif test -z "$PROG_HOSTNAME"; then
X	echo "No way to identify the hostname"
Xelse
X	AC_DEFINE(CONF_HAVE_HOSTNAME, 1)
X	case "$PROG_HOSTNAME" in
X	hostname) 
X		CONF_HAVE_HOSTNAME=1;  
X		;;
X	uname) 
X 		CONF_HAVE_HOSTNAME=1;
X		PROG_HOSTNAME='uname -n';
X		;;
X	*)    	;; 
X	esac
Xfi
XAC_SUBST(PROG_HOSTNAME)
XAC_SUBST(CONF_HAVE_HOSTNAME)
X
Xdnl --------------------------------------------------------
XAC_PROGRAMS_CHECK(PROG_DOMAINNAME, domainname)
XCONF_HAVE_DOMAINNAME=0;
Xif test -z "$PROG_DOMAINNAME"; then
X	echo "No way to identify the domain name"
Xelse
X	case "$PROG_DOMAINNAME" in
X	domainname)
X		CONF_HAVE_DOMAINNAME=1;
X		;;
X	*)      ;;
X	esac
Xfi
XAC_SUBST(PROG_DOMAINAME)
XAC_SUBST(CONF_HAVE_DOMAINNAME)
X
Xdnl --------------------------------------------------------
XAC_PROGRAMS_CHECK(PROG_MAKEWHATIS, catman makewhatis)
Xcase "$PROG_MAKEWHATIS" in
Xcatman) PROG_MAKEWHATIS='catman -w -M'
X	;;
X*makewhatis)
X	;;
X*)	echo 'Did not find the application to rebuild the whatis database.'
X	exit 1
X	;;
Xesac
XAC_SUBST(PROG_MAKEWHATIS)
X
Xdnl --------------------------------------------------------
Xecho
Xecho 'What is the path for you system manpaths?'
Xecho 'This should not have local man (typicaly in /usr/local/man)'
Xecho 'This should be a ':' seperated list [[/usr/man]]:'
Xread CONF_SYS_MAN_PATH
Xif test -z "$CONF_SYS_MAN_PATH"; then
X	CONF_SYS_MAN_PATH='/usr/man'
Xfi
Xecho
XAC_SUBST(CONF_SYS_MAN_PATH)
X
Xdnl --------------------------------------------------------
XAC_FUNC_CHECK(symlink,
X[echo  Your system seems to support symbolic links.] ,
X[echo  Your system does not seem to support symbolic links.
X  echo That is bad because you need it. Aborting...
X  exit 1;] )
X
Xdnl --------------------------------------------------------
Xecho
Xecho 'What is the class of the current machine?:'
Xread FIRST_CLASS
Xecho
XAC_SUBST(FIRST_CLASS)
X
Xdnl --------------------------------------------------------
X
Xecho
Xecho 'What are the other classes that the current machine'
Xecho 'can be identified with? (list of classes seprated'
Xecho 'with blanks):'
Xread OTHER_CLASSES
Xecho
XAC_SUBST(OTHER_CLASSES)
X
Xdnl --------------------------------------------------------
Xecho
Xecho 'What is the location where lude should be installed?'
Xecho '(the path should be of the form:'
Xecho '  /usr/local/soft/lude-someversion/run/somemod/somclass):'
Xread PREFIX
Xecho
XAC_SUBST(PREFIX)
X
Xdnl --------------------------------------------------------
Xecho
Xecho 'What language do you want to be the default?'
Xecho 'Possible choices are francais or english'
Xecho '(francais|english) [[english]]'
Xread CONF_LANG_DEFAULT
Xif test -z "$CONF_LANG_DEFAULT"; then
X	CONF_LANG_DEFAULT='english'
Xfi
Xcase "$CONF_LANG_DEFAULT" in
Xfrancais) CONF_LANG_DEFAULT_ABREV='fra'
X	;;
Xenglish)  CONF_LANG_DEFAULT_ABREV='eng'
X	;;
Xesac
Xecho
XAC_SUBST(CONF_LANG_DEFAULT)
XAC_SUBST(CONF_LANG_DEFAULT_ABREV)
X
Xdnl --------------------------------------------------------
Xecho
Xecho 'What language(s) of the documentation do you want?'
Xecho 'Possible choices are fra for version francaise, and'
Xecho 'eng for english version. You can specify one or more'
Xecho 'seperated with blanks ( fra | eng ) [[fra eng]]'
Xread LANG_INFO
Xif test -z "$LANG_INFO"; then
X	LANG_INFO='fra eng'
Xfi
Xecho
XAC_SUBST(LANG_INFO)
X
Xdnl --------------------------------------------------------
XVERSION=`cat lude-version`
XAC_SUBST(VERSION)
X
Xdnl --------------------------------------------------------
XAC_OUTPUT(Makefile src/Makefile src/config.pl info/Makefile lang/Makefile html/Makefile)
END_OF_FILE
  if test 5256 -ne `wc -c <'lude-1.1/src/orig/configure.in'`; then
    echo shar: \"'lude-1.1/src/orig/configure.in'\" unpacked with wrong size!
  fi
  # end of 'lude-1.1/src/orig/configure.in'
fi
if test -f 'lude-1.1/src/orig/dev.texinfo.UU' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'lude-1.1/src/orig/dev.texinfo.UU'\"
else
  echo shar: Extracting \"'lude-1.1/src/orig/dev.texinfo.UU'\" \(5268 characters\)
  sed "s/^X//" >'lude-1.1/src/orig/dev.texinfo.UU' <<'END_OF_FILE'
Xbegin 644 lude-1.1/src/orig/dev.texinfo
XM7&9H>7!H"EQI;G!U="!T97AI;F9O(" @($!C("TJ+71E>&EN9F\M*BT*0&-O
XM;6UE;G0@)2HJ<W1A<G0@;V8@:&5A9&5R("A4:&ES(&ES(&9O<B!R=6YN:6YG
XM(%1E>&EN9F\@;VX@82!R96=I;VXN*0I 8V]M;65N=" M+2TM+2TM+2TM+2TM
XM+2TM+2TM+2TM+2TM+2TM+2TM+2TM+2TM+2TM+2TM+2TM+2TM+2TM+2TM+2TM
XM+2TM+0I 8V]M;65N=" D260Z(&1E=BYT97AI;F9O+'8@,2XS(#$Y.3,O,#,O
XM,3@@,34Z,S<Z,# @<V)O($5X<" D"D!C;VUM96YT("TM+2TM+2TM+2TM+2TM
XM+2TM+2TM+2TM+2TM+2TM+2TM+2TM+2TM+2TM+2TM+2TM+2TM+2TM+2TM+2TM
XM+2TM"D!S971F:6QE;F%M92!L=61E9&5V+FEN9F\*0'-E='1I=&QE($Q51$4Z
XM(&1O8W5M96YT871I;VX@<W5R(&QE(&3I=F5L;W!P96UE;G0*0&-O;6UE;G0@
XM)2HJ96YD(&]F(&AE861E<B H5&AI<R!I<R!F;W(@<G5N;FEN9R!497AI;F9O
XM(&]N(&$@<F5G:6]N+BD*0&-O;6UE;G0@+2TM+2TM+2TM+2TM+2TM+2TM+2TM
XM+2TM+2TM+2TM+2TM+2TM+2TM+2TM+2TM+2TM+2TM+2TM+2TM+2TM+2T*"@I 
XM:69T97@*0&9I;F%L;W5T"D!E;F0@:69T97@*"D!T:71L97!A9V4*7$!S<" Q
XM, I 8V5N=&5R($!T:71L969O;G1[3%5$13H@1&]C=6UE;G0@<W5R(&QE(&3I
XM=F5L;W!P96UE;G1]"D!S<" R"D!C96YT97(@4&%R.@I <W @,@I 8V5N=&5R
XM(%!I97)R92!,87!L86YT92 H;&%P;&%N=&5 0&-R:6TN8V$I"D!C96YT97(@
XM0V5N=')E(&1E(%)E8VAE<F-H92!);F9O<FUA=&EQ=64@9&4@36]N='+I86P*
XM0'-P(#(*0&-E;G1E<B!-:6-H96P@1&%G96YA:7,@*&1A9V5N86ES0$!V;'-I
XM+G!O;'EM=&PN8V$I"D!C96YT97(@16-O;&4@4&]L>71E8VAN:7%U92!D92!-
XM;VYT<NEA; I <W @,@I 8V5N=&5R(%)O8F5R="!'Z7)I;BU,86IO:64@*')G
XM;$! :7)O+G5M;VYT<F5A;"YC82D*0&-E;G1E<B!5;FEV97)S:73I(&1E($UO
XM;G1RZ6%L"D!S<" R"D!C96YT97(@4W3I<&AA;F4@0F]U8VAE<B H<V)O0$!V
XM;'-I+G!O;'EM=&PN8V$I"D!C96YT97(@16-O;&4@4&]L>71E8VAN:7%U92!D
XM92!-;VYT<NEA; I <W @,@I 8V5N=&5R(%9E<G-I;VX@9'4@;6%N=65L("12
XM979I<VEO;CH@,2XS("0*0'-P(#(*0&-E;G1E<B!697)S:6]N(&1U(&QO9VEC
XM:65L("5)3E-615)324].)0I <W @,@I 8V5N=&5R($-O<'ER:6=H="! 8V]P
XM>7)I9VAT>WT@,3DY,B!P87(@;&5S(&%U=&5U<G,*0&-E;G1E<B!#92!D;V-U
XM;65N="!P975T(.IT<F4@8V]P:>D@<V5L;VX@;&5S(&WJ;65S(&-O;F1I=&EO
XM;G,*0&-E;G1E<B!Q=64@;&4@;&]G:6-I96P@0'-A;7![;'5D97T@<74G:6P@
XM9.EC<FET+@H*0&5N9"!T:71L97!A9V4*"@I 8V]M;65N=" @+2TM+2TM+2TM
XM+2TM+2TM+2TM+2TM+2TM+2TM+2TM+2TM+2TM+2TM+2TM+2TM+2TM+2T*0&YO
XM9&4@5&]P+" L("AD:7(I+" H9&ER*0I 8V]M;65N=" @;F]D92UN86UE+" @
XM;F5X="P@('!R979I;W5S+" @=7 *"D!M96YU"@HJ(%-T86YD87)D.CH@(" @
XM(" @(" @(" @(" @(" @(%-T86YD87)D(&1E(&-O9&%G92!P;W5R(&QU9&4N
XM"BH@1F]N8W1I;VYS.CH)"0E&;VYC=&EO;G,@82 H;F4@<&%S*2!U=&EL:7-E
XM<BX**B!C;VYF:6<M<&PZ.B @(" @(" @(" @(" @(" @("!&:6-H:65R(&-O
XM;G1E;F%N="!L82!C;VYF:6=U<F%T:6]N(&1E<R!O=71I;',N"@I 96YD(&UE
XM;G4*"D!C;VUM96YT(" M+2TM+2TM+2TM+2TM+2TM+2TM+2TM+2TM+2TM+2TM
XM+2TM+2TM+2TM+2TM+2TM+2TM+0I ;F]D92!3=&%N9&%R9"P@+" L(%1O< I 
XM8V]M;65N=" @;F]D92UN86UE+" @;F5X="P@('!R979I;W5S+" @=7 *"D!I
XM=&5M:7IE($!B=6QL970*0&ET96T*3&5S('9A<FEA8FQE<R!G;&]B86QE<R!D
XM;VEV96YT(&3I8G5T97(@<&%R('5N92!L971T<F4*;6%J=7-C=6QE+@H*0&ET
XM96T*3&5S('9A<FEA8FQE<R!L;V-A;&5S(&1O:79E;G0@9.EB=71E<B!P87(@
XM=6YE(&QE='1R90IM:6YU<V-U;&4N"@I :71E;0I,97,@;F]M<R!D92!F;VYC
XM=&EO;G,@9&]I=F5N="!D96)U=&5R('!A<B!U;F4@;6%J=7-C=6QE+"!E= IP
XM<NEFZ7)A8FQE;65N="P@8VAA<75E(&UO="!C;VUP;W-A;G0@;&4@;F]M(&1E
XM(&9O;F-T:6]N(&1O:70*875S<VD@9&5B=71E<B!P87(@=6YE(&UA:G5S8W5L
XM92X*"D!I=&5M"D1A;G,@;&$@;65S=7)E(&1U('!O<W-I8FQE+"!N)V%V;VER
XM('%U)W5N('!O:6YT(&0G96YT<NEE(&5T('5N"G!O:6YT(&1E('-O<G1I92!P
XM87(@9F]N8W1I;VXN"@I :71E;0I);"!F875T(.EV:71E<B!D92!T97)M:6YE
XM<B!L)V5XZ6-U=&EO;B!D)W5N('!R;V=R86UM92!A=0IM:6QI974@9&4@;"=E
XM>.EC=71I;VX@X"!L82!M;VEN9')E(&5R<F5U<BX*"D!I=&5M"DXG=71I;&ES
XM97(@<75E(&QA(&9O<FT@=')A9&ET:6]N;F5L(&1E<R!C;VYD:71I;VYN96QS
XM( HH92YG+B!I9B H*2![?2!E;'-I9B![?2!E;'-E('M]*2X@179I=&5R(&0G
XM=71I;&ES97(@9&5S('-T<G5C='5R97,@9'4*9V5N<F4Z('!R:6YT("(B(&EF
XM("@D>#T],2D[+"!O=2!E;F-O<F4@*"1X/3TQ*2 F)B!P<FEN=" B(BX*0V5L
XM82!R96YD<F$@;&4@8V]D92!P;'5S(&QI<VEB;&4N"@I :71E;0I!=2!D96)U
XM="!D92!C:&%Q=64@9F]N8W1I;VXL('9E<FEF:65R('%U92!L92!N;VUB<F4@
XM9&4@<&%R86UE=')E(&5S= IV86QI9&4N"@I 96YD(&ET96UI>F4*"@I 8V]M
XM;65N=" @+2TM+2TM+2TM+2TM+2TM+2TM+2TM+2TM+2TM+2TM+2TM+2TM+2TM
XM+2TM+2TM+2TM+2T*0&YO9&4@1F]N8W1I;VYS+"!C;VYF:6<M<&PL(%-T86YD
XM87)D+"!4;W *0&-O;6UE;G0@(&YO9&4M;F%M92P@(&YE>'0L("!P<F5V:6]U
XM<RP@('5P"@I.92!P87,@=71I;&ES97(@;&$@9F]N8W1I;VX@8VAD:7(N( H*
XM571I;&ES97(@<&QU=&]T(&QA(&9O;F-T:6]N($-H1&ER(&9A:7-A;G0@<&%R
XM=&EE(&1E(&QU9&4N"@I5=&EL:7-E<B!.1D5R<F]R(&1A;G,@;&4@8V%S(&0G
XM97)R975R<R!.3TXM1D%404PN"@I5=&EL:7-E<B!&17)R;W(@9&%N<R!L92!C
XM87,@9"=E<G)E=7)S($9!5$%,+@H*0&-O;6UE;G0@("TM+2TM+2TM+2TM+2TM
XM+2TM+2TM+2TM+2TM+2TM+2TM+2TM+2TM+2TM+2TM+2TM+2TM"D!N;V1E(&-O
XM;F9I9RUP;"P@+"!&;VYC=&EO;G,L(%1O< I 8V]M;65N=" @;F]D92UN86UE
XM+" @;F5X="P@('!R979I;W5S+" @=7 *"DQE(&9I8VAI97(@9&4@8V]N9FEG
XM=7)A=&EO;B!D97,@87!P;&EC871I;VYS('!E<FP@<V4@<')E<V5N=&4*8V]M
XM;64@<W5I=#H*"D!I=&5M:7IE($!B=6QL970*0&ET96T*0'-T<F]N9WM04D]'
XM7SQC;VUM86YD93Y].B!);F1I<75E(&QE(&YO;2!D=2!P<F]G<F%M;64@<74G
XM:6P@9F%U= IE>.EC=71E<B!P;W5R(&5F9F5C='5E<B!U;F4@8V5R=&%I;F4@
XM8V]M;6%N9&4N"@I 97AA;7!L90HD4%)/1U]405(])W1A<B<["D!E;F0@97AA
XM;7!L90H*0&ET96T*0'-T<F]N9WM#3TY&7TA!5D5?/&9O;F-T/GTZ($EN9&EQ
XM=64@;&$@*&YO;BED:7-P;VYI8FEL:71E(&0G=6YE(&-E<G1A:6YE"F9O;F-T
XM:6]N;F%L:71E('-U<B!L92!S>7-TZ&UE(&]U(&QE<R!O=71I;',@<V]N="!I
XM;G-T86QLZ2X@0V5T=&4*9F]N8W1I;VYN86QI=.D@97-T(&)I96X@<W5R(&]P
XM=&EO;FYE;"X@56YE('9A;&5U<B!D92 Q(&EN9&EQ=64@;&$*9&ES<&]N:6)I
XM;&ETZ2P@970@=6YE('9A;&5U<B!D92 P(&EN9&EQ=64@;"=A8G-E;F-E(&1E
XM(&QA(&9O;F-T:6]N;F%L:73I+@H*0&5X86UP;&4*)$-/3D9?2$%615]41E,]
XM,3L*0&5N9"!E>&%M<&QE"@I 96YD(&ET96UI>F4*"D!C;VUM96YT(" M+2TM
XM+2TM+2TM+2TM+2TM+2TM+2TM+2TM+2TM+2TM+2TM+2TM+2TM+2TM+2TM+2TM
X'+0I 8GEE"BTM
X 
Xend
END_OF_FILE
  if test 5268 -ne `wc -c <'lude-1.1/src/orig/dev.texinfo.UU'`; then
    echo shar: \"'lude-1.1/src/orig/dev.texinfo.UU'\" unpacked with wrong size!
  else
    echo shar: Uudecoding \"'lude-1.1/src/orig/dev.texinfo'\" \(3787 characters\)
    cat lude-1.1/src/orig/dev.texinfo.UU | uudecode
    if test 3787 -ne `wc -c <'lude-1.1/src/orig/dev.texinfo'`; then
      echo shar: \"'lude-1.1/src/orig/dev.texinfo'\" uudecoded with wrong size!
    else
      rm lude-1.1/src/orig/dev.texinfo.UU
    fi
  fi
  # end of 'lude-1.1/src/orig/dev.texinfo.UU'
fi
if test -f 'lude-1.1/src/orig/lang/ludeindex' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'lude-1.1/src/orig/lang/ludeindex'\"
else
  echo shar: Extracting \"'lude-1.1/src/orig/lang/ludeindex'\" \(5073 characters\)
  sed "s/^X//" >'lude-1.1/src/orig/lang/ludeindex' <<'END_OF_FILE'
Xfrancais english
Xarray TEXT
XSEE_ALSO
X 0 Voir aussi
X 1 See also
XBAD_TYPE
X 0 type incorrect pour
X 1 incorrect type for
XBAD_ARGUMENT
X 0 argument incorrect
X 1 bad argument
XSOFT_INSTALLED
X 0 LISTE DES LOGICIELS INSTALLES
X 1 SOFTWARE PACKAGES AVAILABLE
XDIR_TITLE
X 0 REPERTOIRE DES LOGICIELS LUDE
X 1 MAIN LUDE DIRECTORY
XUSAGE_HELP
X 0 Utilisation:
X c  [-debug debuglevel] {ajuster le niveau de deverminage}
X c  [-help|-?] {pour avoir de l'aide}
X c  [-version|-full-version] {numero de version du logiciel}
X c  [-verbose] {imprime des messages informatifs sur le deroulement}
X c  [-catman] {mise a jour de l'index whatis pour les pages de manuel}
X c  [-pathcatman] {liste des repertoires vises par -catman}
X c  [-waisman] {mise a jour de la base de donnee WAIS pour les pages de manuel}
X c  [-pathwaisman] {liste des repertoires vises par -waisman}
X c  [-info] {mise a jour du menu principal pour les fichiers GNU info}
X c  [-pathinfo] {liste des repertoires vises par -info}
X c  [-wwwsoft] {genere des fichiers html WWW pour les logiciels lude}
X c  [-waissoft] {genere des fichiers WAIS pour les logiciels de lude}
X c  [-pathsoft] {liste des repertoires vises par -wwwsoft et -waissoft}
X c  [-all] {comme -catman -info -waisman -wwwsoft -waissoft}
X c  [-remotelink] {liens html vers la documentation meme pour les logiciels
X c                 qui ne sont pas installes localement}
X c  [-nowwwext] {ne pas ajouter .man et .info aux liens WWW 
X c               pour identification}
X c  [-portwww] {changer le port utilise pour le serveur WWW}
X c  [-portwais] {changer le port utilise pour le serveur WAIS}
X c  [-hostwww] {changer le nom de l'ordinateur utilise pour le serveur WWW}
X c  [-hostwais] {changer le nom de l'ordinateur utilise pour le serveur WAIS}
X 1 USAGE:
X c  [-debug debuglevel] {adjust the debugging level}
X c  [-help|-?] {get some help}
X c  [-version|-full-version] {get the version number of this program}
X c  [-verbose] {get informative messages during the execution}
X c  [-catman] {update the whatis database for the man pages}
X c  [-pathcatman] {list of paths used for option -catman}
X c  [-waisman] {update the WAIS database for the man pages}
X c  [-pathwaisman] {list of paths used for option -waisman}
X c  [-info] {update the main menu for GNU info files}
X c  [-pathinfo] {list of paths used for option -info}
X c  [-wwwsoft] {create HTML WWW files for Lude software packages}
X c  [-waissoft] {create WAIS data files for Lude software packages}
X c  [-pathsoft] {list of paths used for options -wwwsoft and -waissoft}
X c  [-all] {same as -catman -info -waisman -wwwsoft -waissoft}
X c  [-remotelink] {add html links to the documentation even for
X c                 non local Lude software packages}
X c  [-nowwwext] {do not add .man and .info to WWW links for identification
X c               purposes}
X c  [-portwww] {change the default port for the WWW server}
X c  [-portwais] {change the default port for the WAIS server}
X c  [-hostwww] {change the WWW server host name}
X c  [-hostwais] {change the WAIS server host name}
XBAD_MAN_DIR
X 0 est vide ou ne peut etre accede
X 1 is empty or cannot be accessed
XMAN_TO_DATE
X 0 est a jour
X 1 is up to date
XMAN_INDEXING
X 0 indexage des pages de manuel dans %s, %s a change
X 1 indexing man pages in %s, %s was modified
XIS_DONE
X 0 fait.
X 1 done.
XINFO_UPDATE
X 0 mise a jour du menu principal dans
X 1 updating the main menu in
XWAIS_TO_DATE
X 0 base de donnee WAIS a jour
X 1 WAIS database is up to date
XWAIS_MAN_BASE
X 0 construction de la base de donnee WAIS pour
X 1 constructing the WAIS database for
XNB_MAN_TOO_SMALL
X 0 %d pages de manuel ignorees, contenant moins de 80 caracteres
X 1 %d man pages were ignored, containing fewer than 80 characters
XIGNORING_FILE
X 0 le fichier suivant est ignore:
X 1 ignoring file
XHTML_UPDATING
X 0 mise a jour des fichiers HTML (WWW) pour les logiciels dans
X 1 updating HTML (WWW) files for software packages in
XHTML_UPDATING_MENU
X 0 construction du menu principal pour les fichiers HTML
X 1 constructing the main menu for HTML files
XSOFT_AVAILABILITY
X 0 CLASSES ET MODIFICATIONS DISPONIBLES
X 1 CLASSES AND MODIFICATIONS AVAILABLE
XCLASS_IS_LINKED
X 0 Le logiciel %s, modification %s, classe %s est disponible localement 
X 1 Software %s, modification %s, class %s is available locally
XCLASS_IS_LOCAL
X 0 Le logiciel %s, modification %s, classe %s est disponible localement dans %s
X 1 Software %s, modification %s, class %s is available locally in %s
XCLASS_ON_SERVER
X 0 Le logiciel %s, modification %s, classe %s est disponible sur le serveur %s 
X 1 Software %s, modification %s, class %s is available on server %s
XCLASS_ELSEWHERE
X 0 Le logiciel %s, modification %s, classe %s est disponible dans %s
X 1 Software %s, modification %s, class %s is available in %s
XWAIS_INDEXING
X 0 indexage des bases de donnees WAIS
X 1 indexing WAIS databases
XCANNOT_ACCESS
X 0 le fichier suivant ne peut etre accede
X 1 the following file cannot be accessed
Xarray FIELD
XUSAGE
X 0 UTILISATION:
X 1 USAGE:
XINSTALL
X 0 INSTALLATION:
X 1 INSTALL:
XDESCRIPTION
X 0 DOCUMENTATION:
X 1 DESCRIPTION:
XABSTRACT
X 0 RESUME:
X 1 ABSTRACT:
X
X
END_OF_FILE
  if test 5073 -ne `wc -c <'lude-1.1/src/orig/lang/ludeindex'`; then
    echo shar: \"'lude-1.1/src/orig/lang/ludeindex'\" unpacked with wrong size!
  fi
  # end of 'lude-1.1/src/orig/lang/ludeindex'
fi
if test -f 'lude-1.1/src/orig/src/fileutil.pl' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'lude-1.1/src/orig/src/fileutil.pl'\"
else
  echo shar: Extracting \"'lude-1.1/src/orig/src/fileutil.pl'\" \(5290 characters\)
  sed "s/^X//" >'lude-1.1/src/orig/src/fileutil.pl' <<'END_OF_FILE'
X# fileutil - a library of functions to work on files and directories.
X# Copyright (C) 1992,1993 Stephane Boucher.
X#
X# This program is free software; you can redistribute it and/or modify
X# it under the terms of the GNU General Public License as published by
X# the Free Software Foundation; either version 1, or (at your option)
X# any later version.
X#
X# This program is distributed in the hope that it will be useful,
X# but WITHOUT ANY WARRANTY; without even the implied warranty of
X# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X# GNU General Public License for more details.
X#
X# You should have received a copy of the GNU General Public License
X# along with this program; if not, write to the Free Software
X# Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X
X$FULL_VERSION.= '$Id: fileutil.pl,v 1.3 1993/03/17 14:56:43 sbo Exp $' ."\n";
X
X
X#-----------------------------------------------------------------------
X# Description : Delete the files given in parameters.
X#
X# Parameters  : $options - commands influencing the
X#                          behavior of the deletion process
X#                          This parameter is a string of letters
X#                          where each letter modifies the behavior.
X#                          Currently available:
X#                          'r' - recursive deletion.
X#               @files   - List of files to delete.
X#
X# Returns     : The number of files successfuly removed.
X#               A removed directory counts as one, even
X#               though the recursion process might have removed
X#               many others.
X#
Xsub RmFiles {
X    # Make sure that the number of parameters is correct
X    if(scalar(@_)<1){die "Incorrect Number Of Parameters, stopped";}
X    local($options, @files)=@_;
X    local($recursive)=0;	# Recursion off by default
X    local($remFiles)=0;		# So far, 0 file was removed
X
X    # Scan options
X    foreach $opt (split(//, $options)) {
X	if ($opt eq 'r') {
X	    $recursive=1;
X	}
X	else {
X	    die "Unknown option $opt, stopped";
X	}
X    }
X
X    stat('.');
X    if (-w _) {
X      foreach $f (@files) {
X	# The links should not be followed, so lstat is used
X	# instead of stat
X	lstat($f); 
X	if (-f _ || -l _) {
X	  if (unlink($f)) {
X	    $remFiles++;
X	  }
X	}
X	elsif (-d _ && $recursive) {
X	  local(*dir);
X	  local($savedir)=&GetCwd();
X	  local(@files);
X	  # Number of files removed in the directory $f
X	  local($dirRmFiles)=0;
X	  
X	  opendir(dir, $f);
X	  @files=grep(!/^\.{1,2}$/, readdir(dir));
X	  closedir(dir);
X	    
X	  if (! &ChDir($f)) {
X	    # Can't change directory
X	    # Ignore that file
X	  }
X	  else {
X	    $dirRmFiles=&RmFiles($options, @files);
X	    
X	    # Go back to the previous current directory
X	    &ChDir($savedir);
X	    
X	    # If all files in directory $f were removed...
X	    if ($dirRmFiles == scalar(@files)) { 
X	      # Remove the directory
X	      if (rmdir($f)) {
X		$remFiles++;
X	      }
X	    }
X	  }
X	}
X      }
X    }
X    else {
X      # Don't have write permission on the directory, so it will not
X      # be possible to remove anything.
X    }
X
X    return $remFiles;
X}
X
X#-----------------------------------------------------------------------
X# Find out what the current directory is
X#
X$libdir'CWD=`pwd`;
Xif ($? != 0) {
X    # The pwd command did not succeed.
X    # Let's try something else...
X    if (defined($ENV{'CWD'})) {
X        $libdir'CWD=$ENV{'CWD'};
X    }
X    else {
X      die "Could not find out what the current directory is, stopped";
X    }
X}
Xif ($libdir'CWD !~ m|^/|) {
X    die "CWD=\"$libdir'CWD\" Is Not an acceptable value\n" .
X        "The CWD should be an absolute path,\nstopped";
X}
X
X#-----------------------------------------------------------------------
X# Description : Same thing as the built in chdir
X#
X# Parameters  : Same thing as the built in chdir
X#
X# Returns     : Same thing that chdir would return.
X#               $! is also set the same way it would be if
X#               chdir was called.
X#
Xsub ChDir {
X    if(scalar(@_)!=1){die "Wrong Number Of Argument To ChDir, stopped";}
X    local($dir)=@_;
X    local($newdir);
X    local($retval)=0;
X
X    if ($dir eq '.') {
X	# Directory does not change
X	$newdir=$libdir'CWD;
X    }
X    else {
X        if ($dir =~ m|^/|) {
X            $newdir=$dir;
X        }
X        else {
X	    $newdir="$libdir'CWD/$dir";
X        }
X	# Add a trailing '/' if none is present
X        if ($newdir !~ m|[/]$|) {
X            $newdir.='/';
X        }
X        # Remove path component before //
X        $newdir =~ s|^.*[/]([/].*)$|$1|;
X        # Remove ./
X        while($newdir =~ s|[/]\.[/]|/|) {}
X        # Remove something/../
X	while ($newdir =~ s|[/][^/]+[/]\.\.[/]|/|) {}
X        # Remove trailing '/'
X	chop($newdir);
X    }
X    if ($retval=chdir($newdir)) {
X        $libdir'CWD=$newdir;
X    }
X    # Note that $! is unchanged after chdir, so ChDir
X    # has the same functionnality as chdir.
X    return $retval;
X}
X
X#-----------------------------------------------------------------------
X# Description : Get the current working directory.
X#
X# Parameters  : none.
X#
X# Returns     : Return the current directory found.
X#
Xsub GetCwd {
X    if (scalar(@_)!=0) {
X	die "Wrong Number Of Argument To GetCwd, stopped";
X    }
X    return $libdir'CWD;
X}
X
X1;
X
X#     ;;; Local Variables: ***
X#     ;;; mode:perl ***
X#     ;;; End: ***
END_OF_FILE
  if test 5290 -ne `wc -c <'lude-1.1/src/orig/src/fileutil.pl'`; then
    echo shar: \"'lude-1.1/src/orig/src/fileutil.pl'\" unpacked with wrong size!
  fi
  # end of 'lude-1.1/src/orig/src/fileutil.pl'
fi
if test -f 'lude-1.1/src/orig/src/ludelang.pl' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'lude-1.1/src/orig/src/ludelang.pl'\"
else
  echo shar: Extracting \"'lude-1.1/src/orig/src/ludelang.pl'\" \(4473 characters\)
  sed "s/^X//" >'lude-1.1/src/orig/src/ludelang.pl' <<'END_OF_FILE'
X# ludelang - Language support for project lude.
X
X# Copyright (C) 1992 Stephane Boucher.
X#
X# This program is free software; you can redistribute it and/or modify
X# it under the terms of the GNU General Public License as published by
X# the Free Software Foundation; either version 1, or (at your option)
X# any later version.
X#
X# This program is distributed in the hope that it will be useful,
X# but WITHOUT ANY WARRANTY; without even the implied warranty of
X# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X# GNU General Public License for more details.
X#
X# You should have received a copy of the GNU General Public License
X# along with this program; if not, write to the Free Software
X# Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X
X$FULL_VERSION.= '$Id: ludelang.pl,v 1.2 1992/11/12 01:22:42 sbo Exp $' ."\n";
X
X#-----------------------------------------------------------------------
X# Description: 
X#
X# Parameters : 
X#
X# return     : Never return if error
X#
Xsub InitLang {
X    local($defaultLang, $langpath, $langfile, @argv)=@_; 
X    local($lang)=$defaultLang;
X    local($langidx);
X
X    # If env. var. LANGUAGE is defined, overide the
X    # default language.
X    if (defined($ENV{'LANGUAGE'})) {
X	$lang=$ENV{'LANGUAGE'};
X    }
X
X    # Overide $lang with the content of -language, if specified.
X    # Search for -language in the arguments
X    # And extract the value. If -language is not found,
X    # $lang will have the default language wich is english.
X    for ($idx=$[; $idx<scalar(@argv); $idx++) {
X	if ($argv[$idx] =~ m|^-language$|) {
X	    $lang=$argv[$idx+1];
X	    last;
X	}
X    }
X
X    # Search for the language file in $langpath
X    for $path (split(/:/, $langpath)) {
X	if (-r "$path/$langfile") {
X	    local(*fp);
X	    # Load the file containing the messages
X	    # according to the chosen language
X	    open(fp, "$path/$langfile");
X
X	    # Get the index of the language that will be
X	    # used to load the message file
X	    chop($langline=<fp>);
X	    if ($langline !~ m|\b$lang\b|) {
X		# Language specified not in list
X		# of available languages. Using english.
X		print STDERR "Warning: Language \"$lang\" not valid.\n";
X		printf STDERR ("Warning: Valid Choices Are \"%s\".\n", 
X			       join("\" \"",split(/\s+/, $langline)));
X		print STDERR "Warning: Using \"english\".\n";
X		$lang='english';
X	    }
X	    $langidx=0;
X	    for $i (split(/\s+/, $langline)) {
X		last if ($i eq $lang);
X		$langidx++;
X	    }
X
X	    # Load the message file.
X	    # Note that the file must be formatted correctly
X	    # because no error checking is done so that
X	    # the loading can be as fast as possible.
X	    local($msgidx);
X	    local($msgtype)=0;	# By default, use the var type
X	    local($msgvarname);
X	    local($varname);
X	    local($accumulate)=0;
X	    while(<fp>) {	
X		next if (m|^#|); # Comment Line. Skip it.
X		if (m|^var$|io) {
X		    $msgtype=0;	# var type
X		}
X		elsif (m|^array\s+([^\s]+)$|io) {
X		    $msgtype=1;	# Array type
X		    $msgvarname=$1;
X		}
X		elsif (m|^assoc\s+([^\s]+)$|io) {
X		    $msgtype=2;	# Assoc Array type
X		    $msgvarname=$1;
X		}
X		# A line that starts with a non-blank
X		# contains an identifier for a message
X		elsif (m|^([^\s]+)$|o) {
X		    $accumulate=1;
X		    if ($msgtype==0) { # Var type
X			eval("\$$1=\"\"");
X		    }
X		    elsif ($msgtype==1) { # array type
X			eval("push(@$msgvarname,\"\");\$msgidx=\$$1=\$#$msgvarname;");
X		    }
X		    elsif ($msgtype==2) { # assoc type
X			$varname=$1;
X			eval("\$$msgvarname{\"$1\"}=\"\"");
X		    }
X		}
X		# A line that start with ' c ' is
X		# the continuation of the previous line
X		elsif ($accumulate && m|^ c (.*)$|o) {
X		    if ($msgtype==0) { # Var type
X			eval("\$$msgvarname.=\"\n$1\"");
X		    }
X		    elsif ($msgtype==1) { # array type
X			eval("\$$msgvarname[$msgidx].=\"\n$1\"");
X		    }
X		    elsif ($msgtype==2) { # assoc type
X			eval("\$$msgvarname{\"$varname\"}.=\"\n$1\"");
X		    }
X		}
X		elsif (m|^ ([0-9]+) (.*)$|) {
X		    if ($1 == $langidx) {
X			if ($msgtype==0) { # Var type
X			    eval("\$$msgvarname=\"$2\"");
X			}
X			elsif ($msgtype==1) { # array type
X			    eval("\$$msgvarname[$msgidx]=\"$2\"");
X			}
X			elsif ($msgtype==2) { # assoc type
X			    eval("\$$msgvarname{\"$varname\"}=\"$2\"");
X			}
X			$accumulate=1;
X		    }
X		    else {
X			$accumulate=0;
X		    }
X		}
X	    }
X	    close(fp);
X	    return;
X	}
X    }
X    die "Could not find the messages file in $langpath, stopped";
X}
X
X#     ;;; Local Variables: ***
X#     ;;; mode:perl ***
X#     ;;; End: ***
END_OF_FILE
  if test 4473 -ne `wc -c <'lude-1.1/src/orig/src/ludelang.pl'`; then
    echo shar: \"'lude-1.1/src/orig/src/ludelang.pl'\" unpacked with wrong size!
  fi
  # end of 'lude-1.1/src/orig/src/ludelang.pl'
fi
if test -f 'lude-1.1/src/orig/src/ludelistinc' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'lude-1.1/src/orig/src/ludelistinc'\"
else
  echo shar: Extracting \"'lude-1.1/src/orig/src/ludelistinc'\" \(4639 characters\)
  sed "s/^X//" >'lude-1.1/src/orig/src/ludelistinc' <<'END_OF_FILE'
X# ludelistinc - Project lude.
X# Copyright (C) 1992,1993 Stephane Boucher, Ecole Polytechnique de Montreal.
X#
X# This program is free software; you can redistribute it and/or modify
X# it under the terms of the GNU General Public License as published by
X# the Free Software Foundation; either version 1, or (at your option)
X# any later version.
X#
X# This program is distributed in the hope that it will be useful,
X# but WITHOUT ANY WARRANTY; without even the implied warranty of
X# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X# GNU General Public License for more details.
X#
X# You should have received a copy of the GNU General Public License
X# along with this program; if not, write to the Free Software
X# Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X
X$FULL_VERSION.= '$Id: ludelistinc,v 1.4 1993/03/17 19:44:11 sbo Exp $' ."\n";
X
X#-----------------------------------------------------------------------
X#
X#	Local definitions
X#
X
Xsub LocalDef {
X
X    # Environnement
X    $ENV{'SHELL'} = '/bin/sh' if $ENV{'SHELL'} ne '';
X
X    # debug level
X    if (!defined($Debugvalue)) { $Debugvalue=$DEFAULTDEBUGLEVEL; }
X    
X    # get progname
X    $Progname=&BaseName($0);
X
X    $SHORT_LISTING=0; $LONG_LISTING=1; $RAW_LISTING=2;
X    $Server=$Software=$Modification="";
X    @SoftFound=();
X    $Listingtype=$SHORT_LISTING;
X}
X
X
Xsub ExecCommands {
X    local($retval)=1;		# Success by default
X
X    &List($Listingtype, @SoftFound);
X
X    return $retval;
X}
X
X
X#-----------------------------------------------------------------------
X#
X#	Initialisation
X#
X
Xsub Initialisation {
X    local($retval)=1;		# Success by default
X    local($displayVersion)=$FALSE;
X    local($displayFullVersion)=$FALSE;
X    
X    # Locals definitions
X    &LocalDef();
X    
X    # scan aguments
X    local($class_arg)       =&BldRegexpMinRqr("class", 1);
X    local($debug_arg)       =&BldRegexpMinRqr("debug", 1);
X    local($full_version_arg)=&BldRegexpMinRqr("full-version", 1);
X    local($help_arg)        =&BldRegexpMinRqr("help", 1);
X    local($language_arg)    ='language';
X    local($long_arg)        =&BldRegexpMinRqr("long", 2);
X    local($modification_arg)=&BldRegexpMinRqr("modification", 1);
X    local($raw_arg)         =&BldRegexpMinRqr("raw", 1);
X    local($server_arg)      =&BldRegexpMinRqr("server", 2);
X    local($short_arg)       =&BldRegexpMinRqr("short", 2);
X    local($software_arg)    =&BldRegexpMinRqr("software", 2);
X    local($version_arg)     =&BldRegexpMinRqr("version", 1);
X
X    while ($_=$ARGV[0],/^-/) {
X
X	last if (/^--$/);
X
X	shift(@ARGV);
X	  
X	if (/^-$class_arg$/o)        { &Arg($_, *Class, '[\-\w+.]+'); }
X	elsif (/^-$debug_arg$/o)     { &Arg($_, *Debuglevel, '[0-9]+'); }
X	elsif (/^-$full_version_arg$/o) { $displayFullVersion=$TRUE; }
X	elsif (/^-($help_arg)|([?])$/o) { &Help; }
X        elsif (/^-$language_arg$/o)  { shift @ARGV; } # Just ignore it  
X	elsif (/^-$long_arg$/o)      { $Listingtype=$LONG_LISTING; }
X	elsif (/^-$modification_arg$/o) { 
X	    &Arg($_, *Modification, '[\-\w+.]+'); 
X	}
X	elsif (/^-$raw_arg$/o)       { $Listingtype=$RAW_LISTING; }
X	elsif (/^-$server_arg$/o)    { &Arg($_, *Server, '([\-\w+.]+)|[/]'); }
X	elsif (/^-$short_arg$/o)     { $Listingtype=$SHORT_LISTING; }
X	elsif (/^-$version_arg$/o)   { $DisplayVersion=$TRUE; }
X	elsif (/^-$software_arg$/o)  { 
X	    &Arg($_, *Software, '[\-\w+.]+'); 
X	}
X	else {
X	    &Usage($INVALID_ARGUMENT, $_);
X	}
X    }
X
X    # Display the version immediately if requested
X    if ($DisplayVersion) {
X	print $OUT $VERSION ."\n";
X    }
X    # Display the full version (i.e. RCS revs) immediately if requested
X    if ($displayFullVersion) {
X	print $OUT $FULL_VERSION ."\n";
X    }
X
X    #
X    # Validation of the arguments
X    #
X    # Extra and invalid argument 
X    if ( $ARGV[0] ne "" ) { 
X	&Usage($INVALID_ARGUMENT, $ARGV[0]);
X    }
X
X    # -class with anything
X    # -debug with anything
X    # -long with anything
X    # -modification with anything
X    # -server with anything
X    # -short with anything
X    # -software with anything
X
X    # Find the default class if not already specified
X    local(@classes);
X    if ($Class eq '') {
X	@classes=split(/\s+/, `class -l`);
X    }
X    elsif ($Class eq 'all') {
X	# sub FindSoftware does not know about class=all.
X	# Instead, it takes class='' to indicate that all
X	# found classes are valid.
X	@classes=('');
X    }
X    else {
X	@classes=($Class);
X    }
X    
X    local($searchcmd)='sa';
X    local(@softs)=();
X    @softs=&FindSoftware($searchcmd, $Server, $Software, $Modification, @classes);
X    @SoftFound=sort SortSoftware @softs;
X
X    return $retval;
X}	
X
X1;
X
X#     ;;; Local Variables: ***
X#     ;;; mode:perl ***
X#     ;;; End: ***
END_OF_FILE
  if test 4639 -ne `wc -c <'lude-1.1/src/orig/src/ludelistinc'`; then
    echo shar: \"'lude-1.1/src/orig/src/ludelistinc'\" unpacked with wrong size!
  fi
  # end of 'lude-1.1/src/orig/src/ludelistinc'
fi
if test -f 'lude-1.1/src/orig/src/man2html' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'lude-1.1/src/orig/src/man2html'\"
else
  echo shar: Extracting \"'lude-1.1/src/orig/src/man2html'\" \(4814 characters\)
  sed "s/^X//" >'lude-1.1/src/orig/src/man2html' <<'END_OF_FILE'
X#! /usr/local/bin/perl
X#
X# Program to convert the man pages into HTML World Wide Web format.
X# Copyright (C) 1993 Michel Dagenais
X#
X#
X# This file is part of Lude
X#
X# Lude is free software; you can redistribute it and/or modify
X# it under the terms of the GNU General Public License as published by
X# the Free Software Foundation; either version 2, or (at your option)
X# any later version.
X#
X# Lude is distributed in the hope that it will be useful,
X# but WITHOUT ANY WARRANTY; without even the implied warranty of
X# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X# GNU General Public License for more details.
X#
X# You should have received a copy of the GNU General Public License
X# along with Lude; see the file COPYING.  If not, write to
X# the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.
X#
X#
X##########################################################################
X#
X# This script expects a man page filename as argument. This filename
X# has an extra .man extension at the end to specify that it is a man page
X#
X
Xif ( $#ARGV != 0 ) {
X   print STDERR "man2html: wrong number of arguments (man2html filename)\n";
X   exit(1);
X }
X
X$_ = $ARGV[0];
X
X$prefix = '';
X$section = '';
X$name = '';
X$ext = '';
X
X($prefix,$section,$name,$ext) = 
X        /(.+\/)([^\/]+\/)([^\/]+)\.([^\.]+)\.man$/;
X
X
Xif ( $name eq '' ) {
X   print STDERR "man2html: filename $ARGV[0] could not be parsed\n";
X   print STDERR "valid filename example: /usr/local/man/man1/man2html.1.man\n";
X   exit(1);
X }
X
X#
X# Check if the file exists.
X#
X
X$found = 0;
X
Xif ( -e "$prefix$section$name.$ext" ) { 
X   $found = 1; 
X }
Xelse { 
X   $ext =~ tr/A-Z/a-z/;
X   if ( -e "$prefix$section$name.$ext" ) { $found = 1; }
X }
X
X#
X# check if similar files can be found
X#
X
Xif( $found == 0 ) {
X
X   if( $ext =~ /([0-9ln]).*/ ) { $num = $1; }
X   else { $num = "1"; }
X
X#
X# try variants for the extension, then for the prefix, then for the section
X#
X
X   $filelist = `ls $prefix$section$name.* 2>/dev/null`;
X
X   if( $filelist =~ /^\s*$/ ) {
X      $filelist = `ls ${prefix}man$num/$name.* 2>/dev/null`;
X    }
X
X   if( $filelist =~ /^\s*$/ ) {
X      $filelist = `ls /usr/man/man$num/$name.* 2>/dev/null`;
X    }
X
X   if( $filelist =~ /^\s*$/ ) {
X      $filelist = `ls /usr/local/man/man$num/$name.* 2>/dev/null`;
X    }
X
X   if( $filelist =~ /^\s*$/ ) {
X      $filelist = `ls /usr/man/man[nl]/$name.* 2>/dev/null`;
X    }
X
X   if( $filelist =~ /^\s*$/ ) {
X      $filelist = `ls /usr/local/man/man[nl]/$name.* 2>/dev/null`;
X    }
X
X   if( $filelist =~ /^\s*$/ ) {
X      $filelist = `ls ${prefix}man*/$name.* 2>/dev/null`;
X    }
X
X   if( $filelist =~ /^\s*$/ ) {
X      $filelist = `ls /usr/man/man*/$name.* 2>/dev/null`;
X    }
X
X   if( $filelist =~ /^\s*$/ ) {
X      $filelist = `ls /usr/local/man/man*/$name.* 2>/dev/null`;
X    }
X
X   if( $filelist =~ /^\s*$/ ) {
X      print STDERR "man2html: could not find file $prefix$section$name.$ext\n";
X      exit(1);
X    }
X
X#
X# We have found something. If more than one file was found, offer a menu.
X#
X
X   @files = split(/[\s\n]+/,$filelist);
X
X#   if( $#files == 0 ) { 
X#      ($prefix,$section,$name,$ext) = 
X#		($files[0] =~ /(.+\/)([^\/]+\/)([^\/]+)\.([^\.]+)$/);
X#    }
X#   else {
X      print "<TITLE>$name</TITLE>\n";
X      print "\n<H2>MAN page $prefix$section$name.$ext was not found</H2>\n";
X      print "But other man pages with the same base name were found:\n";
X      print "\n<DL>\n";
X      foreach $filename (@files) {
X         ($prefix,$section,$name,$ext) = 
X		($filename =~ /(.+\/)([^\/]+\/)([^\/]+)\.([^\.]+)$/);
X         print "<DT><A HREF=${filename}.man>$name.$ext</A><DD>  ($filename)\n";
X       }
X      print "</DL>\n";
X      exit(0);
X#    }
X }
X
X#
X# At this point we have a single file to process
X#
X
Xprint "<TITLE>$name</TITLE>\n<H1>$name($ext)</H1>\n";
Xprint "\n<PRE>\n";
X
Xchdir $prefix;
X
Xopen(MFILE, "nroff -man -Tcrt $prefix$section$name.$ext |")
X  || die "man2html: failing to execute nroff -man $prefix$section$name.$ext\n";
X
X#
X# eat up the first header
X#
X
Xwhile (<MFILE>) {
X	if( /^[A-Z]/ ) { last; }
X }
X
X#
X# process the rest of the file
X#
X
X$seealso = 0;
X
Xwhile (<MFILE>) {
X   s/_\010//go;
X
X#
X# remove the page numbering and eat up to next header
X#
X
X   if( /^[a-zA-Z].*change.*[\s]+.*[0-9]$/ ) {
X      while (<MFILE>) {
X	 if( /^[A-Z]/ ) { last; }
X       }
X      next;
X    }
X
X#
X# process the headings
X#
X
X   if( /^[a-zA-Z]/ ) {
X      if( $seealso == 1 ) { $seealso = 0; }
X      else { print "\n</PRE>\n"; }
X
X      chop $_;
X      print "\n<H2>$_</H2>\n";
X
X      if( /^SEE ALSO/i ) { $seealso = 1; }
X      else { print "\n<PRE>\n"; }
X      next;
X    }
X
X   if ( $seealso == 1 ) {
X      s/([a-zA-Z][a-zA-Z0-9_\-]*)\(([0-9lnLN])([a-zA-Z0-9]*)\)/<A HREF=${prefix}man$2\/$1\.$2${3}.man>$1\($2$3\)<\/A>/g;
X    }
X   print;
X }
X
Xif( $seealso == 0 ) { print "\n</PRE>\n"; }
X
Xclose(MFILE);
Xexit(0);
X
X
X
END_OF_FILE
  if test 4814 -ne `wc -c <'lude-1.1/src/orig/src/man2html'`; then
    echo shar: \"'lude-1.1/src/orig/src/man2html'\" unpacked with wrong size!
  fi
  chmod +x 'lude-1.1/src/orig/src/man2html'
  # end of 'lude-1.1/src/orig/src/man2html'
fi
echo shar: End of archive 10 \(of 12\).
cp /dev/null ark10isdone
MISSING=""
for I in 1 2 3 4 5 6 7 8 9 10 11 12 ; do
    if test ! -f ark${I}isdone ; then
	MISSING="${MISSING} ${I}"
    fi
done
if test "${MISSING}" = "" ; then
    echo You have unpacked all 12 archives.
    rm -f ark[1-9]isdone ark[1-9][0-9]isdone
else
    echo You still must unpack the following archives:
    echo "        " ${MISSING}
fi
exit 0
exit 0 # Just in case...
