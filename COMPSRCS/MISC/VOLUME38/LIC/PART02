Newsgroups: comp.sources.misc
From: casey@gauss.llnl.gov (Casey Leedom)
Subject: v38i105:  lic - LLNL Line Integral Convolution, v1.2, Part02/10
Message-ID: <1993Aug12.013754.13937@sparky.sterling.com>
X-Md4-Signature: b6ad5468c8b8d4c9f0c5c12e2ca54eb4
Sender: kent@sparky.sterling.com (Kent Landfield)
Organization: Sterling Software
Date: Thu, 12 Aug 1993 01:37:54 GMT
Approved: kent@sparky.sterling.com

Submitted-by: casey@gauss.llnl.gov (Casey Leedom)
Posting-number: Volume 38, Issue 105
Archive-name: lic/part02
Environment: UNIX

#! /bin/sh
# This is a shell archive.  Remove anything before this line, then feed it
# into a shell via "sh file" or similar.  To overwrite existing files,
# type "sh file -c".
# Contents:  lic.1.2/MEMO lic.1.2/doc/siggraph93/paper.ps.C
# Wrapped by kent@sparky on Wed Aug 11 19:38:02 1993
PATH=/bin:/usr/bin:/usr/ucb:/usr/local/bin:/usr/lbin ; export PATH
echo If this archive is complete, you will see the following message:
echo '          "shar: End of archive 2 (of 10)."'
if test -f 'lic.1.2/MEMO' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'lic.1.2/MEMO'\"
else
  echo shar: Extracting \"'lic.1.2/MEMO'\" \(912 characters\)
  sed "s/^X//" >'lic.1.2/MEMO' <<'END_OF_FILE'
X						Monday, May 17, 1993
X
XTo: Marliss Rash
X
XFrom: Leith (Casey) Leedom
X
XRegarding: Memo of understanding for release of ``LIC'' software
X
X
XMarliss,
X
XThe Line Integral Convolution (LIC) software is a prototype
Ximplementation of a new vector visualization algorithm that Brian
XCabral and I have jointly developed.  The algorithm is described in a
Xpaper written by us in the upcoming 1993 SIGGRAPH conference:
X``Imaging Vector Fields Using Line Integral Convolution.''
X
XThe SIGGRAPH conference is putting together a CD-ROM of conference
Xpaper materials.  SIGGRAPH would like to include source code whenever
Xpossible in order that other researchers be able to duplicate results
Xpresented in the papers.  We would like to supply SIGGRAPH with our
Xexperimental software since this will significantly enhance our
Xability to work with other researchers in this area.
X
X
X					Yours sincerely,
X
X					Leith (Casey) Leedom
END_OF_FILE
  if test 912 -ne `wc -c <'lic.1.2/MEMO'`; then
    echo shar: \"'lic.1.2/MEMO'\" unpacked with wrong size!
  fi
  # end of 'lic.1.2/MEMO'
fi
if test -f 'lic.1.2/doc/siggraph93/paper.ps.C' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'lic.1.2/doc/siggraph93/paper.ps.C'\"
else
  echo shar: Extracting \"'lic.1.2/doc/siggraph93/paper.ps.C'\" \(61490 characters\)
  sed "s/^X//" >'lic.1.2/doc/siggraph93/paper.ps.C' <<'END_OF_FILE'
XLT0
X1008 1938 M
X1008 1938 L
X1068 2328 L
X1128 2727 L
X1189 3122 L
X1249 3497 L
X1309 3839 L
X1369 4136 L
X1429 4377 L
X1490 4553 L
X1550 4659 L
X1610 4689 L
X1670 4643 L
X1731 4524 L
X1791 4334 L
X1851 4081 L
X1911 3774 L
X1971 3424 L
X2032 3044 L
X2092 2647 L
X2152 2248 L
X2212 1862 L
X2272 1502 L
X2333 1180 L
X2393 910 L
X2453 701 L
X2513 559 L
X2574 491 L
X2634 499 L
X2694 582 L
X2754 737 L
X2814 960 L
X2875 1241 L
X2935 1571 L
X2995 1938 L
X3055 2328 L
X3115 2727 L
X3176 3122 L
X3236 3497 L
X3296 3839 L
X3356 4136 L
X3416 4377 L
X3477 4553 L
X3537 4659 L
X3597 4689 L
X3657 4643 L
X3718 4524 L
X3778 4334 L
X3838 4081 L
X3898 3774 L
X3958 3424 L
X4019 3044 L
X4079 2647 L
X4139 2248 L
X4199 1862 L
X4259 1502 L
X4320 1180 L
X4380 910 L
X4440 701 L
X4500 559 L
X4561 491 L
X4621 499 L
X4681 582 L
X4741 737 L
X4801 960 L
X4862 1241 L
X4922 1571 L
X4982 1938 L
X5042 2328 L
X5102 2727 L
X5163 3122 L
X5223 3497 L
X5283 3839 L
X5343 4136 L
X5403 4377 L
X5464 4553 L
X5524 4659 L
X5584 4689 L
X5644 4643 L
X5705 4524 L
X5765 4334 L
X5825 4081 L
X5885 3774 L
X5945 3424 L
X6006 3044 L
X6066 2647 L
X6126 2248 L
X6186 1862 L
X6246 1502 L
X6307 1180 L
X6367 910 L
X6427 701 L
X6487 559 L
X6548 491 L
X6608 499 L
X6668 582 L
X6728 737 L
X6788 960 L
X6849 1241 L
X6909 1571 L
X6969 1938 L
Xstroke
Xgrestore
Xend
Xshowpage
X%%Trailer
X%%Pages: 1
X
X%%EndDocument
XFMENDEPSF
X270 50 50 554 770 72 48 412.18 738 FMBEGINEPSF
X%%BeginDocument: /home/u06/cabral/avs/data/final.paper/h03.ps
X%!PS-Adobe-3.0 EPSF-3.0
X%%Creator: gnuplot
X%%DocumentFonts: Courier
X%%BoundingBox: 50 50 554 770
X%%Pages: (atend)
X%%EndComments
X/gnudict 40 dict def
Xgnudict begin
X/Color false def
X/gnulinewidth 15.0 def
X/vshift -46 def
X/dl {10 mul} def
X/hpt 31.5 def
X/vpt 31.5 def
X/vpt2 vpt 2 mul def
X/hpt2 hpt 2 mul def
X/Lshow { currentpoint stroke moveto
X  0 vshift rmoveto show } def
X/Rshow { currentpoint stroke moveto
X  dup stringwidth pop neg vshift rmoveto show } def
X/Cshow { currentpoint stroke moveto
X  dup stringwidth pop -2 div vshift rmoveto show } def
X/DL { Color {setrgbcolor [] 0 setdash pop}
X {pop pop pop 0 setdash} ifelse } def
X/BL { stroke gnulinewidth 2 mul setlinewidth } def
X/AL { stroke gnulinewidth 2 div setlinewidth } def
X/PL { stroke gnulinewidth setlinewidth } def
X/LTb { BL [] 0 0 0 DL } def
X/LTa { AL [1 dl 2 dl] 0 setdash 0 0 0 setrgbcolor } def
X/LT0 { PL [] 0 1 0 DL } def
X/LT1 { PL [4 dl 2 dl] 0 0 1 DL } def
X/LT2 { PL [2 dl 3 dl] 1 0 0 DL } def
X/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
X/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
X/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
X/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
X/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
X/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
X/M {moveto} def
X/L {lineto} def
X/P { stroke [] 0 setdash
X  currentlinewidth 2 div sub moveto
X  0 currentlinewidth rlineto  stroke } def
X/D { stroke [] 0 setdash  2 copy  vpt add moveto
X  hpt neg vpt neg rlineto  hpt vpt neg rlineto
X  hpt vpt rlineto  hpt neg vpt rlineto  closepath  stroke
X  P  } def
X/A { stroke [] 0 setdash  vpt sub moveto  0 vpt2 rlineto
X  currentpoint stroke moveto
X  hpt neg vpt neg rmoveto  hpt2 0 rlineto stroke
X  } def
X/B { stroke [] 0 setdash  2 copy  exch hpt sub exch vpt add moveto
X  0 vpt2 neg rlineto  hpt2 0 rlineto  0 vpt2 rlineto
X  hpt2 neg 0 rlineto  closepath  stroke
X  P  } def
X/C { stroke [] 0 setdash  exch hpt sub exch vpt add moveto
X  hpt2 vpt2 neg rlineto  currentpoint  stroke  moveto
X  hpt2 neg 0 rmoveto  hpt2 vpt2 rlineto stroke  } def
X/T { stroke [] 0 setdash  2 copy  vpt 1.12 mul add moveto
X  hpt neg vpt -1.62 mul rlineto
X  hpt 2 mul 0 rlineto
X  hpt neg vpt 1.62 mul rlineto  closepath  stroke
X  P  } def
X/S { 2 copy A C} def
Xend
X%%EndProlog
X%%Page: 1 1
Xgnudict begin
Xgsave
X50 50 translate
X0.100 0.100 scale
X90 rotate
X0 -5040 translate
X0 setgray
X/Courier findfont 140 scalefont setfont
Xnewpath
XLTa
XLTb
X1008 491 M
X6969 491 L
X3989 491 M
X3989 4689 L
XLTb
XLTb
XLT0
XLT0
X1008 4291 M
X1008 4291 L
X1068 4494 L
X1128 4628 L
X1189 4689 L
X1249 4674 L
X1309 4583 L
X1369 4421 L
X1429 4192 L
X1490 3906 L
X1550 3572 L
X1610 3202 L
X1670 2811 L
X1731 2411 L
X1791 2018 L
X1851 1646 L
X1911 1308 L
X1971 1016 L
X2032 781 L
X2092 612 L
X2152 514 L
X2212 491 L
X2272 544 L
X2333 671 L
X2393 868 L
X2453 1126 L
X2513 1438 L
X2574 1791 L
X2634 2174 L
X2694 2571 L
X2754 2969 L
X2814 3353 L
X2875 3710 L
X2935 4027 L
X2995 4291 L
X3055 4494 L
X3115 4628 L
X3176 4689 L
X3236 4674 L
X3296 4583 L
X3356 4421 L
X3416 4192 L
X3477 3906 L
X3537 3572 L
X3597 3202 L
X3657 2811 L
X3718 2411 L
X3778 2018 L
X3838 1646 L
X3898 1308 L
X3958 1016 L
X4019 781 L
X4079 612 L
X4139 514 L
X4199 491 L
X4259 544 L
X4320 671 L
X4380 868 L
X4440 1126 L
X4500 1438 L
X4561 1791 L
X4621 2174 L
X4681 2571 L
X4741 2969 L
X4801 3353 L
X4862 3710 L
X4922 4027 L
X4982 4291 L
X5042 4494 L
X5102 4628 L
X5163 4689 L
X5223 4674 L
X5283 4583 L
X5343 4421 L
X5403 4192 L
X5464 3906 L
X5524 3572 L
X5584 3202 L
X5644 2811 L
X5705 2411 L
X5765 2018 L
X5825 1646 L
X5885 1308 L
X5945 1016 L
X6006 781 L
X6066 612 L
X6126 514 L
X6186 491 L
X6246 544 L
X6307 671 L
X6367 868 L
X6427 1126 L
X6487 1438 L
X6548 1791 L
X6608 2174 L
X6668 2571 L
X6728 2969 L
X6788 3353 L
X6849 3710 L
X6909 4027 L
X6969 4291 L
Xstroke
Xgrestore
Xend
Xshowpage
X%%Trailer
X%%Pages: 1
X
X%%EndDocument
XFMENDEPSF
X270 50 50 554 770 72 48 460.52 738 FMBEGINEPSF
X%%BeginDocument: /home/u06/cabral/avs/data/final.paper/h04.ps
X%!PS-Adobe-3.0 EPSF-3.0
X%%Creator: gnuplot
X%%DocumentFonts: Courier
X%%BoundingBox: 50 50 554 770
X%%Pages: (atend)
X%%EndComments
X/gnudict 40 dict def
Xgnudict begin
X/Color false def
X/gnulinewidth 15.0 def
X/vshift -46 def
X/dl {10 mul} def
X/hpt 31.5 def
X/vpt 31.5 def
X/vpt2 vpt 2 mul def
X/hpt2 hpt 2 mul def
X/Lshow { currentpoint stroke moveto
X  0 vshift rmoveto show } def
X/Rshow { currentpoint stroke moveto
X  dup stringwidth pop neg vshift rmoveto show } def
X/Cshow { currentpoint stroke moveto
X  dup stringwidth pop -2 div vshift rmoveto show } def
X/DL { Color {setrgbcolor [] 0 setdash pop}
X {pop pop pop 0 setdash} ifelse } def
X/BL { stroke gnulinewidth 2 mul setlinewidth } def
X/AL { stroke gnulinewidth 2 div setlinewidth } def
X/PL { stroke gnulinewidth setlinewidth } def
X/LTb { BL [] 0 0 0 DL } def
X/LTa { AL [1 dl 2 dl] 0 setdash 0 0 0 setrgbcolor } def
X/LT0 { PL [] 0 1 0 DL } def
X/LT1 { PL [4 dl 2 dl] 0 0 1 DL } def
X/LT2 { PL [2 dl 3 dl] 1 0 0 DL } def
X/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
X/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
X/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
X/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
X/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
X/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
X/M {moveto} def
X/L {lineto} def
X/P { stroke [] 0 setdash
X  currentlinewidth 2 div sub moveto
X  0 currentlinewidth rlineto  stroke } def
X/D { stroke [] 0 setdash  2 copy  vpt add moveto
X  hpt neg vpt neg rlineto  hpt vpt neg rlineto
X  hpt vpt rlineto  hpt neg vpt rlineto  closepath  stroke
X  P  } def
X/A { stroke [] 0 setdash  vpt sub moveto  0 vpt2 rlineto
X  currentpoint stroke moveto
X  hpt neg vpt neg rmoveto  hpt2 0 rlineto stroke
X  } def
X/B { stroke [] 0 setdash  2 copy  exch hpt sub exch vpt add moveto
X  0 vpt2 neg rlineto  hpt2 0 rlineto  0 vpt2 rlineto
X  hpt2 neg 0 rlineto  closepath  stroke
X  P  } def
X/C { stroke [] 0 setdash  exch hpt sub exch vpt add moveto
X  hpt2 vpt2 neg rlineto  currentpoint  stroke  moveto
X  hpt2 neg 0 rmoveto  hpt2 vpt2 rlineto stroke  } def
X/T { stroke [] 0 setdash  2 copy  vpt 1.12 mul add moveto
X  hpt neg vpt -1.62 mul rlineto
X  hpt 2 mul 0 rlineto
X  hpt neg vpt 1.62 mul rlineto  closepath  stroke
X  P  } def
X/S { 2 copy A C} def
Xend
X%%EndProlog
X%%Page: 1 1
Xgnudict begin
Xgsave
X50 50 translate
X0.100 0.100 scale
X90 rotate
X0 -5040 translate
X0 setgray
X/Courier findfont 140 scalefont setfont
Xnewpath
XLTa
XLTb
X1008 491 M
X6969 491 L
X3989 491 M
X3989 4689 L
XLTb
XLTb
XLT0
XLT0
X1008 4291 M
X1008 4291 L
X1068 4027 L
X1128 3710 L
X1189 3353 L
X1249 2969 L
X1309 2571 L
X1369 2174 L
X1429 1791 L
X1490 1438 L
X1550 1126 L
X1610 868 L
X1670 671 L
X1731 544 L
X1791 491 L
X1851 514 L
X1911 612 L
X1971 781 L
X2032 1016 L
X2092 1308 L
X2152 1646 L
X2212 2018 L
X2272 2411 L
X2333 2811 L
X2393 3202 L
X2453 3572 L
X2513 3906 L
X2574 4192 L
X2634 4421 L
X2694 4583 L
X2754 4674 L
X2814 4689 L
X2875 4628 L
X2935 4494 L
X2995 4291 L
X3055 4027 L
X3115 3710 L
X3176 3353 L
X3236 2969 L
X3296 2571 L
X3356 2174 L
X3416 1791 L
X3477 1438 L
X3537 1126 L
X3597 868 L
X3657 671 L
X3718 544 L
X3778 491 L
X3838 514 L
X3898 612 L
X3958 781 L
X4019 1016 L
X4079 1308 L
X4139 1646 L
X4199 2018 L
X4259 2411 L
X4320 2811 L
X4380 3202 L
X4440 3572 L
X4500 3906 L
X4561 4192 L
X4621 4421 L
X4681 4583 L
X4741 4674 L
X4801 4689 L
X4862 4628 L
X4922 4494 L
X4982 4291 L
X5042 4027 L
X5102 3710 L
X5163 3353 L
X5223 2969 L
X5283 2571 L
X5343 2174 L
X5403 1791 L
X5464 1438 L
X5524 1126 L
X5584 868 L
X5644 671 L
X5705 544 L
X5765 491 L
X5825 514 L
X5885 612 L
X5945 781 L
X6006 1016 L
X6066 1308 L
X6126 1646 L
X6186 2018 L
X6246 2411 L
X6307 2811 L
X6367 3202 L
X6427 3572 L
X6487 3906 L
X6548 4192 L
X6608 4421 L
X6668 4583 L
X6728 4674 L
X6788 4689 L
X6849 4628 L
X6909 4494 L
X6969 4291 L
Xstroke
Xgrestore
Xend
Xshowpage
X%%Trailer
X%%Pages: 1
X
X%%EndDocument
XFMENDEPSF
X270 50 50 554 770 72 48 508.85 738 FMBEGINEPSF
X%%BeginDocument: /home/u06/cabral/avs/data/final.paper/h05.ps
X%!PS-Adobe-3.0 EPSF-3.0
X%%Creator: gnuplot
X%%DocumentFonts: Courier
X%%BoundingBox: 50 50 554 770
X%%Pages: (atend)
X%%EndComments
X/gnudict 40 dict def
Xgnudict begin
X/Color false def
X/gnulinewidth 15.0 def
X/vshift -46 def
X/dl {10 mul} def
X/hpt 31.5 def
X/vpt 31.5 def
X/vpt2 vpt 2 mul def
X/hpt2 hpt 2 mul def
X/Lshow { currentpoint stroke moveto
X  0 vshift rmoveto show } def
X/Rshow { currentpoint stroke moveto
X  dup stringwidth pop neg vshift rmoveto show } def
X/Cshow { currentpoint stroke moveto
X  dup stringwidth pop -2 div vshift rmoveto show } def
X/DL { Color {setrgbcolor [] 0 setdash pop}
X {pop pop pop 0 setdash} ifelse } def
X/BL { stroke gnulinewidth 2 mul setlinewidth } def
X/AL { stroke gnulinewidth 2 div setlinewidth } def
X/PL { stroke gnulinewidth setlinewidth } def
X/LTb { BL [] 0 0 0 DL } def
X/LTa { AL [1 dl 2 dl] 0 setdash 0 0 0 setrgbcolor } def
X/LT0 { PL [] 0 1 0 DL } def
X/LT1 { PL [4 dl 2 dl] 0 0 1 DL } def
X/LT2 { PL [2 dl 3 dl] 1 0 0 DL } def
X/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
X/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
X/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
X/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
X/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
X/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
X/M {moveto} def
X/L {lineto} def
X/P { stroke [] 0 setdash
X  currentlinewidth 2 div sub moveto
X  0 currentlinewidth rlineto  stroke } def
X/D { stroke [] 0 setdash  2 copy  vpt add moveto
X  hpt neg vpt neg rlineto  hpt vpt neg rlineto
X  hpt vpt rlineto  hpt neg vpt rlineto  closepath  stroke
X  P  } def
X/A { stroke [] 0 setdash  vpt sub moveto  0 vpt2 rlineto
X  currentpoint stroke moveto
X  hpt neg vpt neg rmoveto  hpt2 0 rlineto stroke
X  } def
X/B { stroke [] 0 setdash  2 copy  exch hpt sub exch vpt add moveto
X  0 vpt2 neg rlineto  hpt2 0 rlineto  0 vpt2 rlineto
X  hpt2 neg 0 rlineto  closepath  stroke
X  P  } def
X/C { stroke [] 0 setdash  exch hpt sub exch vpt add moveto
X  hpt2 vpt2 neg rlineto  currentpoint  stroke  moveto
X  hpt2 neg 0 rmoveto  hpt2 vpt2 rlineto stroke  } def
X/T { stroke [] 0 setdash  2 copy  vpt 1.12 mul add moveto
X  hpt neg vpt -1.62 mul rlineto
X  hpt 2 mul 0 rlineto
X  hpt neg vpt 1.62 mul rlineto  closepath  stroke
X  P  } def
X/S { 2 copy A C} def
Xend
X%%EndProlog
X%%Page: 1 1
Xgnudict begin
Xgsave
X50 50 translate
X0.100 0.100 scale
X90 rotate
X0 -5040 translate
X0 setgray
X/Courier findfont 140 scalefont setfont
Xnewpath
XLTa
XLTb
X1008 491 M
X6969 491 L
X3989 491 M
X3989 4689 L
XLTb
XLTb
XLT0
XLT0
X1008 1938 M
X1008 1938 L
X1068 1571 L
X1128 1241 L
X1189 960 L
X1249 737 L
X1309 582 L
X1369 499 L
X1429 491 L
X1490 559 L
X1550 701 L
X1610 910 L
X1670 1180 L
X1731 1502 L
X1791 1862 L
X1851 2248 L
X1911 2647 L
X1971 3044 L
X2032 3424 L
X2092 3774 L
X2152 4081 L
X2212 4334 L
X2272 4524 L
X2333 4643 L
X2393 4689 L
X2453 4659 L
X2513 4553 L
X2574 4377 L
X2634 4136 L
X2694 3839 L
X2754 3497 L
X2814 3122 L
X2875 2727 L
X2935 2328 L
X2995 1938 L
X3055 1571 L
X3115 1241 L
X3176 960 L
X3236 737 L
X3296 582 L
X3356 499 L
X3416 491 L
X3477 559 L
X3537 701 L
X3597 910 L
X3657 1180 L
X3718 1502 L
X3778 1862 L
X3838 2248 L
X3898 2647 L
X3958 3044 L
X4019 3424 L
X4079 3774 L
X4139 4081 L
X4199 4334 L
X4259 4524 L
X4320 4643 L
X4380 4689 L
X4440 4659 L
X4500 4553 L
X4561 4377 L
X4621 4136 L
X4681 3839 L
X4741 3497 L
X4801 3122 L
X4862 2727 L
X4922 2328 L
X4982 1938 L
X5042 1571 L
X5102 1241 L
X5163 960 L
X5223 737 L
X5283 582 L
X5343 499 L
X5403 491 L
X5464 559 L
X5524 701 L
X5584 910 L
X5644 1180 L
X5705 1502 L
X5765 1862 L
X5825 2248 L
X5885 2647 L
X5945 3044 L
X6006 3424 L
X6066 3774 L
X6126 4081 L
X6186 4334 L
X6246 4524 L
X6307 4643 L
X6367 4689 L
X6427 4659 L
X6487 4553 L
X6548 4377 L
X6608 4136 L
X6668 3839 L
X6728 3497 L
X6788 3122 L
X6849 2727 L
X6909 2328 L
X6969 1938 L
Xstroke
Xgrestore
Xend
Xshowpage
X%%Trailer
X%%Pages: 1
X
X%%EndDocument
XFMENDEPSF
X270 50 50 554 770 72 48 412.18 666.33 FMBEGINEPSF
X%%BeginDocument: /home/u06/cabral/avs/data/final.paper/hanning.ps
X%!PS-Adobe-3.0 EPSF-3.0
X%%Creator: gnuplot
X%%DocumentFonts: Courier
X%%BoundingBox: 50 50 554 770
X%%Pages: (atend)
X%%EndComments
X/gnudict 40 dict def
Xgnudict begin
X/Color false def
X/gnulinewidth 15.000 def
X/vshift -46 def
X/dl {10 mul} def
X/hpt 31.5 def
X/vpt 31.5 def
X/vpt2 vpt 2 mul def
X/hpt2 hpt 2 mul def
X/Lshow { currentpoint stroke moveto
X  0 vshift rmoveto show } def
X/Rshow { currentpoint stroke moveto
X  dup stringwidth pop neg vshift rmoveto show } def
X/Cshow { currentpoint stroke moveto
X  dup stringwidth pop -2 div vshift rmoveto show } def
X/DL { Color {setrgbcolor [] 0 setdash pop}
X {pop pop pop 0 setdash} ifelse } def
X/BL { stroke gnulinewidth 2 mul setlinewidth } def
X/AL { stroke gnulinewidth 2 div setlinewidth } def
X/PL { stroke gnulinewidth setlinewidth } def
X/LTb { BL [] 0 0 0 DL } def
X/LTa { AL [1 dl 2 dl] 0 setdash 0 0 0 setrgbcolor } def
X/LT0 { PL [] 0 1 0 DL } def
X/LT1 { PL [4 dl 2 dl] 0 0 1 DL } def
X/LT2 { PL [2 dl 3 dl] 1 0 0 DL } def
X/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
X/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
X/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
X/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
X/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
X/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
X/M {moveto} def
X/L {lineto} def
X/P { stroke [] 0 setdash
X  currentlinewidth 2 div sub moveto
X  0 currentlinewidth rlineto  stroke } def
X/D { stroke [] 0 setdash  2 copy  vpt add moveto
X  hpt neg vpt neg rlineto  hpt vpt neg rlineto
X  hpt vpt rlineto  hpt neg vpt rlineto  closepath  stroke
X  P  } def
X/A { stroke [] 0 setdash  vpt sub moveto  0 vpt2 rlineto
X  currentpoint stroke moveto
X  hpt neg vpt neg rmoveto  hpt2 0 rlineto stroke
X  } def
X/B { stroke [] 0 setdash  2 copy  exch hpt sub exch vpt add moveto
X  0 vpt2 neg rlineto  hpt2 0 rlineto  0 vpt2 rlineto
X  hpt2 neg 0 rlineto  closepath  stroke
X  P  } def
X/C { stroke [] 0 setdash  exch hpt sub exch vpt add moveto
X  hpt2 vpt2 neg rlineto  currentpoint  stroke  moveto
X  hpt2 neg 0 rmoveto  hpt2 vpt2 rlineto stroke  } def
X/T { stroke [] 0 setdash  2 copy  vpt 1.12 mul add moveto
X  hpt neg vpt -1.62 mul rlineto
X  hpt 2 mul 0 rlineto
X  hpt neg vpt 1.62 mul rlineto  closepath  stroke
X  P  } def
X/S { 2 copy A C} def
Xend
X%%EndProlog
X%%Page: 1 1
Xgnudict begin
Xgsave
X50 50 translate
X0.100 0.100 scale
X90 rotate
X0 -5040 translate
X0 setgray
X/Courier findfont 140 scalefont setfont
Xnewpath
XLTb
X1008 491 M
X6969 491 L
X3989 491 M
X3989 4689 L
XLTb
XLTb
XLT0
XLT0
X1008 491 M
X1008 491 L
X1068 495 L
X1128 508 L
X1189 529 L
X1249 558 L
X1309 596 L
X1369 641 L
X1429 695 L
X1490 756 L
X1550 824 L
X1610 900 L
X1670 982 L
X1731 1071 L
X1791 1166 L
X1851 1267 L
X1911 1373 L
X1971 1484 L
X2032 1599 L
X2092 1718 L
X2152 1841 L
X2212 1967 L
X2272 2096 L
X2333 2226 L
X2393 2358 L
X2453 2491 L
X2513 2624 L
X2574 2757 L
X2634 2889 L
X2694 3021 L
X2754 3150 L
X2814 3277 L
X2875 3402 L
X2935 3523 L
X2995 3640 L
X3055 3753 L
X3115 3862 L
X3176 3965 L
X3236 4063 L
X3296 4155 L
X3356 4241 L
X3416 4320 L
X3477 4392 L
X3537 4457 L
X3597 4514 L
X3657 4563 L
X3718 4605 L
X3778 4638 L
X3838 4664 L
X3898 4681 L
X3958 4689 L
X4019 4689 L
X4079 4681 L
X4139 4664 L
X4199 4638 L
X4259 4605 L
X4320 4563 L
X4380 4514 L
X4440 4457 L
X4500 4392 L
X4561 4320 L
X4621 4241 L
X4681 4155 L
X4741 4063 L
X4801 3965 L
X4862 3862 L
X4922 3753 L
X4982 3640 L
X5042 3523 L
X5102 3402 L
X5163 3277 L
X5223 3150 L
X5283 3021 L
X5343 2889 L
X5403 2757 L
X5464 2624 L
X5524 2491 L
X5584 2358 L
X5644 2226 L
X5705 2096 L
X5765 1967 L
X5825 1841 L
X5885 1718 L
X5945 1599 L
X6006 1484 L
X6066 1373 L
X6126 1267 L
X6186 1166 L
X6246 1071 L
X6307 982 L
X6367 900 L
X6427 824 L
X6487 756 L
X6548 695 L
X6608 641 L
X6668 596 L
X6728 558 L
X6788 529 L
X6849 508 L
X6909 495 L
X6969 491 L
Xstroke
Xgrestore
Xend
Xshowpage
X%%Trailer
X%%Pages: 1
X
X%%EndDocument
XFMENDEPSF
X270 50 50 554 770 72 48 317.74 593.55 FMBEGINEPSF
X%%BeginDocument: /home/u06/cabral/avs/data/final.paper/h11.ps
X%!PS-Adobe-3.0 EPSF-3.0
X%%Creator: gnuplot
X%%DocumentFonts: Courier
X%%BoundingBox: 50 50 554 770
X%%Pages: (atend)
X%%EndComments
X/gnudict 40 dict def
Xgnudict begin
X/Color false def
X/gnulinewidth 15.0 def
X/vshift -46 def
X/dl {10 mul} def
X/hpt 31.5 def
X/vpt 31.5 def
X/vpt2 vpt 2 mul def
X/hpt2 hpt 2 mul def
X/Lshow { currentpoint stroke moveto
X  0 vshift rmoveto show } def
X/Rshow { currentpoint stroke moveto
X  dup stringwidth pop neg vshift rmoveto show } def
X/Cshow { currentpoint stroke moveto
X  dup stringwidth pop -2 div vshift rmoveto show } def
X/DL { Color {setrgbcolor [] 0 setdash pop}
X {pop pop pop 0 setdash} ifelse } def
X/BL { stroke gnulinewidth 2 mul setlinewidth } def
X/AL { stroke gnulinewidth 2 div setlinewidth } def
X/PL { stroke gnulinewidth setlinewidth } def
X/LTb { BL [] 0 0 0 DL } def
X/LTa { AL [1 dl 2 dl] 0 setdash 0 0 0 setrgbcolor } def
X/LT0 { PL [] 0 1 0 DL } def
X/LT1 { PL [4 dl 2 dl] 0 0 1 DL } def
X/LT2 { PL [2 dl 3 dl] 1 0 0 DL } def
X/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
X/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
X/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
X/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
X/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
X/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
X/M {moveto} def
X/L {lineto} def
X/P { stroke [] 0 setdash
X  currentlinewidth 2 div sub moveto
X  0 currentlinewidth rlineto  stroke } def
X/D { stroke [] 0 setdash  2 copy  vpt add moveto
X  hpt neg vpt neg rlineto  hpt vpt neg rlineto
X  hpt vpt rlineto  hpt neg vpt rlineto  closepath  stroke
X  P  } def
X/A { stroke [] 0 setdash  vpt sub moveto  0 vpt2 rlineto
X  currentpoint stroke moveto
X  hpt neg vpt neg rmoveto  hpt2 0 rlineto stroke
X  } def
X/B { stroke [] 0 setdash  2 copy  exch hpt sub exch vpt add moveto
X  0 vpt2 neg rlineto  hpt2 0 rlineto  0 vpt2 rlineto
X  hpt2 neg 0 rlineto  closepath  stroke
X  P  } def
X/C { stroke [] 0 setdash  exch hpt sub exch vpt add moveto
X  hpt2 vpt2 neg rlineto  currentpoint  stroke  moveto
X  hpt2 neg 0 rmoveto  hpt2 vpt2 rlineto stroke  } def
X/T { stroke [] 0 setdash  2 copy  vpt 1.12 mul add moveto
X  hpt neg vpt -1.62 mul rlineto
X  hpt 2 mul 0 rlineto
X  hpt neg vpt 1.62 mul rlineto  closepath  stroke
X  P  } def
X/S { 2 copy A C} def
Xend
X%%EndProlog
X%%Page: 1 1
Xgnudict begin
Xgsave
X50 50 translate
X0.100 0.100 scale
X90 rotate
X0 -5040 translate
X0 setgray
X/Courier findfont 140 scalefont setfont
Xnewpath
XLTa
XLTb
X1008 491 M
X6969 491 L
X3989 491 M
X3989 4689 L
XLTb
XLTb
XLT0
XLT0
X1008 491 M
X1008 491 L
X1068 491 L
X1128 492 L
X1189 494 L
X1249 500 L
X1309 513 L
X1369 535 L
X1429 569 L
X1490 617 L
X1550 682 L
X1610 763 L
X1670 860 L
X1731 972 L
X1791 1095 L
X1851 1225 L
X1911 1357 L
X1971 1484 L
X2032 1599 L
X2092 1696 L
X2152 1769 L
X2212 1812 L
X2272 1822 L
X2333 1795 L
X2393 1733 L
X2453 1636 L
X2513 1509 L
X2574 1359 L
X2634 1194 L
X2694 1023 L
X2754 859 L
X2814 713 L
X2875 595 L
X2935 518 L
X2995 491 L
X3055 521 L
X3115 612 L
X3176 767 L
X3236 986 L
X3296 1262 L
X3356 1590 L
X3416 1957 L
X3477 2353 L
X3537 2761 L
X3597 3166 L
X3657 3552 L
X3718 3903 L
X3778 4203 L
X3838 4441 L
X3898 4605 L
X3958 4689 L
X4019 4689 L
X4079 4605 L
X4139 4441 L
X4199 4203 L
X4259 3903 L
X4320 3552 L
X4380 3166 L
X4440 2761 L
X4500 2353 L
X4561 1957 L
X4621 1590 L
X4681 1262 L
X4741 986 L
X4801 767 L
X4862 612 L
X4922 521 L
X4982 491 L
X5042 518 L
X5102 595 L
X5163 713 L
X5223 859 L
X5283 1023 L
X5343 1194 L
X5403 1359 L
X5464 1509 L
X5524 1636 L
X5584 1733 L
X5644 1795 L
X5705 1822 L
X5765 1812 L
X5825 1769 L
X5885 1696 L
X5945 1599 L
X6006 1484 L
X6066 1357 L
X6126 1225 L
X6186 1095 L
X6246 972 L
X6307 860 L
X6367 763 L
X6427 682 L
X6487 617 L
X6548 569 L
X6608 535 L
X6668 513 L
X6728 500 L
X6788 494 L
X6849 492 L
X6909 491 L
X6969 491 L
Xstroke
Xgrestore
Xend
Xshowpage
X%%Trailer
X%%Pages: 1
X
X%%EndDocument
XFMENDEPSF
X270 50 50 554 770 72 48 364.96 593.55 FMBEGINEPSF
X%%BeginDocument: /home/u06/cabral/avs/data/final.paper/h12.ps
X%!PS-Adobe-3.0 EPSF-3.0
X%%Creator: gnuplot
X%%DocumentFonts: Courier
X%%BoundingBox: 50 50 554 770
X%%Pages: (atend)
X%%EndComments
X/gnudict 40 dict def
Xgnudict begin
X/Color false def
X/gnulinewidth 15.0 def
X/vshift -46 def
X/dl {10 mul} def
X/hpt 31.5 def
X/vpt 31.5 def
X/vpt2 vpt 2 mul def
X/hpt2 hpt 2 mul def
X/Lshow { currentpoint stroke moveto
X  0 vshift rmoveto show } def
X/Rshow { currentpoint stroke moveto
X  dup stringwidth pop neg vshift rmoveto show } def
X/Cshow { currentpoint stroke moveto
X  dup stringwidth pop -2 div vshift rmoveto show } def
X/DL { Color {setrgbcolor [] 0 setdash pop}
X {pop pop pop 0 setdash} ifelse } def
X/BL { stroke gnulinewidth 2 mul setlinewidth } def
X/AL { stroke gnulinewidth 2 div setlinewidth } def
X/PL { stroke gnulinewidth setlinewidth } def
X/LTb { BL [] 0 0 0 DL } def
X/LTa { AL [1 dl 2 dl] 0 setdash 0 0 0 setrgbcolor } def
X/LT0 { PL [] 0 1 0 DL } def
X/LT1 { PL [4 dl 2 dl] 0 0 1 DL } def
X/LT2 { PL [2 dl 3 dl] 1 0 0 DL } def
X/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
X/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
X/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
X/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
X/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
X/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
X/M {moveto} def
X/L {lineto} def
X/P { stroke [] 0 setdash
X  currentlinewidth 2 div sub moveto
X  0 currentlinewidth rlineto  stroke } def
X/D { stroke [] 0 setdash  2 copy  vpt add moveto
X  hpt neg vpt neg rlineto  hpt vpt neg rlineto
X  hpt vpt rlineto  hpt neg vpt rlineto  closepath  stroke
X  P  } def
X/A { stroke [] 0 setdash  vpt sub moveto  0 vpt2 rlineto
X  currentpoint stroke moveto
X  hpt neg vpt neg rmoveto  hpt2 0 rlineto stroke
X  } def
X/B { stroke [] 0 setdash  2 copy  exch hpt sub exch vpt add moveto
X  0 vpt2 neg rlineto  hpt2 0 rlineto  0 vpt2 rlineto
X  hpt2 neg 0 rlineto  closepath  stroke
X  P  } def
X/C { stroke [] 0 setdash  exch hpt sub exch vpt add moveto
X  hpt2 vpt2 neg rlineto  currentpoint  stroke  moveto
X  hpt2 neg 0 rmoveto  hpt2 vpt2 rlineto stroke  } def
X/T { stroke [] 0 setdash  2 copy  vpt 1.12 mul add moveto
X  hpt neg vpt -1.62 mul rlineto
X  hpt 2 mul 0 rlineto
X  hpt neg vpt 1.62 mul rlineto  closepath  stroke
X  P  } def
X/S { 2 copy A C} def
Xend
X%%EndProlog
X%%Page: 1 1
Xgnudict begin
Xgsave
X50 50 translate
X0.100 0.100 scale
X90 rotate
X0 -5040 translate
X0 setgray
X/Courier findfont 140 scalefont setfont
Xnewpath
XLTa
XLTb
X1008 491 M
X6969 491 L
X3989 491 M
X3989 4689 L
XLTb
XLTb
XLT0
XLT0
X1008 491 M
X1008 491 L
X1068 493 L
X1128 500 L
X1189 516 L
X1249 541 L
X1309 578 L
X1369 627 L
X1429 688 L
X1490 758 L
X1550 836 L
X1610 917 L
X1670 997 L
X1731 1072 L
X1791 1135 L
X1851 1182 L
X1911 1210 L
X1971 1214 L
X2032 1194 L
X2092 1149 L
X2152 1081 L
X2212 995 L
X2272 895 L
X2333 790 L
X2393 688 L
X2453 598 L
X2513 530 L
X2574 494 L
X2634 499 L
X2694 552 L
X2754 657 L
X2814 819 L
X2875 1037 L
X2935 1307 L
X2995 1625 L
X3055 1981 L
X3115 2365 L
X3176 2762 L
X3236 3158 L
X3296 3537 L
X3356 3885 L
X3416 4185 L
X3477 4425 L
X3537 4594 L
X3597 4683 L
X3657 4689 L
X3718 4610 L
X3778 4448 L
X3838 4210 L
X3898 3907 L
X3958 3549 L
X4019 3154 L
X4079 2737 L
X4139 2315 L
X4199 1907 L
X4259 1528 L
X4320 1193 L
X4380 915 L
X4440 703 L
X4500 563 L
X4561 497 L
X4621 504 L
X4681 579 L
X4741 714 L
X4801 900 L
X4862 1123 L
X4922 1369 L
X4982 1625 L
X5042 1876 L
X5102 2109 L
X5163 2312 L
X5223 2476 L
X5283 2594 L
X5343 2662 L
X5403 2677 L
X5464 2642 L
X5524 2560 L
X5584 2436 L
X5644 2279 L
X5705 2097 L
X5765 1899 L
X5825 1695 L
X5885 1492 L
X5945 1298 L
X6006 1121 L
X6066 964 L
X6126 830 L
X6186 721 L
X6246 637 L
X6307 576 L
X6367 534 L
X6427 509 L
X6487 496 L
X6548 491 L
X6608 492 L
X6668 494 L
X6728 495 L
X6788 495 L
X6849 494 L
X6909 492 L
X6969 491 L
Xstroke
Xgrestore
Xend
Xshowpage
X%%Trailer
X%%Pages: 1
X
X%%EndDocument
XFMENDEPSF
X270 50 50 554 770 72 48 412.18 593.55 FMBEGINEPSF
X%%BeginDocument: /home/u06/cabral/avs/data/final.paper/h13.ps
X%!PS-Adobe-3.0 EPSF-3.0
X%%Creator: gnuplot
X%%DocumentFonts: Courier
X%%BoundingBox: 50 50 554 770
X%%Pages: (atend)
X%%EndComments
X/gnudict 40 dict def
Xgnudict begin
X/Color false def
X/gnulinewidth 15.0 def
X/vshift -46 def
X/dl {10 mul} def
X/hpt 31.5 def
X/vpt 31.5 def
X/vpt2 vpt 2 mul def
X/hpt2 hpt 2 mul def
X/Lshow { currentpoint stroke moveto
X  0 vshift rmoveto show } def
X/Rshow { currentpoint stroke moveto
X  dup stringwidth pop neg vshift rmoveto show } def
X/Cshow { currentpoint stroke moveto
X  dup stringwidth pop -2 div vshift rmoveto show } def
X/DL { Color {setrgbcolor [] 0 setdash pop}
X {pop pop pop 0 setdash} ifelse } def
X/BL { stroke gnulinewidth 2 mul setlinewidth } def
X/AL { stroke gnulinewidth 2 div setlinewidth } def
X/PL { stroke gnulinewidth setlinewidth } def
X/LTb { BL [] 0 0 0 DL } def
X/LTa { AL [1 dl 2 dl] 0 setdash 0 0 0 setrgbcolor } def
X/LT0 { PL [] 0 1 0 DL } def
X/LT1 { PL [4 dl 2 dl] 0 0 1 DL } def
X/LT2 { PL [2 dl 3 dl] 1 0 0 DL } def
X/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
X/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
X/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
X/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
X/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
X/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
X/M {moveto} def
X/L {lineto} def
X/P { stroke [] 0 setdash
X  currentlinewidth 2 div sub moveto
X  0 currentlinewidth rlineto  stroke } def
X/D { stroke [] 0 setdash  2 copy  vpt add moveto
X  hpt neg vpt neg rlineto  hpt vpt neg rlineto
X  hpt vpt rlineto  hpt neg vpt rlineto  closepath  stroke
X  P  } def
X/A { stroke [] 0 setdash  vpt sub moveto  0 vpt2 rlineto
X  currentpoint stroke moveto
X  hpt neg vpt neg rmoveto  hpt2 0 rlineto stroke
X  } def
X/B { stroke [] 0 setdash  2 copy  exch hpt sub exch vpt add moveto
X  0 vpt2 neg rlineto  hpt2 0 rlineto  0 vpt2 rlineto
X  hpt2 neg 0 rlineto  closepath  stroke
X  P  } def
X/C { stroke [] 0 setdash  exch hpt sub exch vpt add moveto
X  hpt2 vpt2 neg rlineto  currentpoint  stroke  moveto
X  hpt2 neg 0 rmoveto  hpt2 vpt2 rlineto stroke  } def
X/T { stroke [] 0 setdash  2 copy  vpt 1.12 mul add moveto
X  hpt neg vpt -1.62 mul rlineto
X  hpt 2 mul 0 rlineto
X  hpt neg vpt 1.62 mul rlineto  closepath  stroke
X  P  } def
X/S { 2 copy A C} def
Xend
X%%EndProlog
X%%Page: 1 1
Xgnudict begin
Xgsave
X50 50 translate
X0.100 0.100 scale
X90 rotate
X0 -5040 translate
X0 setgray
X/Courier findfont 140 scalefont setfont
Xnewpath
XLTa
XLTb
X1008 491 M
X6969 491 L
X3989 491 M
X3989 4689 L
XLTb
XLTb
XLT0
XLT0
X1008 491 M
X1008 491 L
X1068 496 L
X1128 511 L
X1189 536 L
X1249 570 L
X1309 611 L
X1369 656 L
X1429 702 L
X1490 744 L
X1550 778 L
X1610 801 L
X1670 810 L
X1731 803 L
X1791 780 L
X1851 742 L
X1911 693 L
X1971 637 L
X2032 581 L
X2092 533 L
X2152 500 L
X2212 492 L
X2272 516 L
X2333 579 L
X2393 689 L
X2453 847 L
X2513 1057 L
X2574 1317 L
X2634 1621 L
X2694 1964 L
X2754 2336 L
X2814 2724 L
X2875 3114 L
X2935 3492 L
X2995 3842 L
X3055 4147 L
X3115 4396 L
X3176 4574 L
X3236 4674 L
X3296 4689 L
X3356 4617 L
X3416 4459 L
X3477 4220 L
X3537 3912 L
X3597 3545 L
X3657 3136 L
X3718 2703 L
X3778 2265 L
X3838 1841 L
X3898 1450 L
X3958 1109 L
X4019 834 L
X4079 634 L
X4139 519 L
X4199 493 L
X4259 554 L
X4320 698 L
X4380 917 L
X4440 1198 L
X4500 1527 L
X4561 1886 L
X4621 2258 L
X4681 2625 L
X4741 2970 L
X4801 3276 L
X4862 3529 L
X4922 3720 L
X4982 3842 L
X5042 3889 L
X5102 3862 L
X5163 3766 L
X5223 3605 L
X5283 3389 L
X5343 3130 L
X5403 2839 L
X5464 2530 L
X5524 2216 L
X5584 1908 L
X5644 1618 L
X5705 1354 L
X5765 1122 L
X5825 928 L
X5885 772 L
X5945 654 L
X6006 572 L
X6066 521 L
X6126 496 L
X6186 491 L
X6246 500 L
X6307 516 L
X6367 534 L
X6427 550 L
X6487 561 L
X6548 565 L
X6608 562 L
X6668 552 L
X6728 538 L
X6788 521 L
X6849 506 L
X6909 495 L
X6969 491 L
Xstroke
Xgrestore
Xend
Xshowpage
X%%Trailer
X%%Pages: 1
X
X%%EndDocument
XFMENDEPSF
X270 50 50 554 770 72 48 460.52 593.55 FMBEGINEPSF
X%%BeginDocument: /home/u06/cabral/avs/data/final.paper/h14.ps
X%!PS-Adobe-3.0 EPSF-3.0
X%%Creator: gnuplot
X%%DocumentFonts: Courier
X%%BoundingBox: 50 50 554 770
X%%Pages: (atend)
X%%EndComments
X/gnudict 40 dict def
Xgnudict begin
X/Color false def
X/gnulinewidth 15.0 def
X/vshift -46 def
X/dl {10 mul} def
X/hpt 31.5 def
X/vpt 31.5 def
X/vpt2 vpt 2 mul def
X/hpt2 hpt 2 mul def
X/Lshow { currentpoint stroke moveto
X  0 vshift rmoveto show } def
X/Rshow { currentpoint stroke moveto
X  dup stringwidth pop neg vshift rmoveto show } def
X/Cshow { currentpoint stroke moveto
X  dup stringwidth pop -2 div vshift rmoveto show } def
X/DL { Color {setrgbcolor [] 0 setdash pop}
X {pop pop pop 0 setdash} ifelse } def
X/BL { stroke gnulinewidth 2 mul setlinewidth } def
X/AL { stroke gnulinewidth 2 div setlinewidth } def
X/PL { stroke gnulinewidth setlinewidth } def
X/LTb { BL [] 0 0 0 DL } def
X/LTa { AL [1 dl 2 dl] 0 setdash 0 0 0 setrgbcolor } def
X/LT0 { PL [] 0 1 0 DL } def
X/LT1 { PL [4 dl 2 dl] 0 0 1 DL } def
X/LT2 { PL [2 dl 3 dl] 1 0 0 DL } def
X/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
X/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
X/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
X/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
X/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
X/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
X/M {moveto} def
X/L {lineto} def
X/P { stroke [] 0 setdash
X  currentlinewidth 2 div sub moveto
X  0 currentlinewidth rlineto  stroke } def
X/D { stroke [] 0 setdash  2 copy  vpt add moveto
X  hpt neg vpt neg rlineto  hpt vpt neg rlineto
X  hpt vpt rlineto  hpt neg vpt rlineto  closepath  stroke
X  P  } def
X/A { stroke [] 0 setdash  vpt sub moveto  0 vpt2 rlineto
X  currentpoint stroke moveto
X  hpt neg vpt neg rmoveto  hpt2 0 rlineto stroke
X  } def
X/B { stroke [] 0 setdash  2 copy  exch hpt sub exch vpt add moveto
X  0 vpt2 neg rlineto  hpt2 0 rlineto  0 vpt2 rlineto
X  hpt2 neg 0 rlineto  closepath  stroke
X  P  } def
X/C { stroke [] 0 setdash  exch hpt sub exch vpt add moveto
X  hpt2 vpt2 neg rlineto  currentpoint  stroke  moveto
X  hpt2 neg 0 rmoveto  hpt2 vpt2 rlineto stroke  } def
X/T { stroke [] 0 setdash  2 copy  vpt 1.12 mul add moveto
X  hpt neg vpt -1.62 mul rlineto
X  hpt 2 mul 0 rlineto
X  hpt neg vpt 1.62 mul rlineto  closepath  stroke
X  P  } def
X/S { 2 copy A C} def
Xend
X%%EndProlog
X%%Page: 1 1
Xgnudict begin
Xgsave
X50 50 translate
X0.100 0.100 scale
X90 rotate
X0 -5040 translate
X0 setgray
X/Courier findfont 140 scalefont setfont
Xnewpath
XLTa
XLTb
X1008 491 M
X6969 491 L
X3989 491 M
X3989 4689 L
XLTb
XLTb
XLT0
XLT0
X1008 491 M
X1008 491 L
X1068 495 L
X1128 506 L
X1189 521 L
X1249 538 L
X1309 552 L
X1369 562 L
X1429 565 L
X1490 561 L
X1550 550 L
X1610 534 L
X1670 516 L
X1731 500 L
X1791 491 L
X1851 496 L
X1911 521 L
X1971 572 L
X2032 654 L
X2092 772 L
X2152 928 L
X2212 1122 L
X2272 1354 L
X2333 1618 L
X2393 1908 L
X2453 2216 L
X2513 2530 L
X2574 2839 L
X2634 3130 L
X2694 3389 L
X2754 3605 L
X2814 3766 L
X2875 3862 L
X2935 3889 L
X2995 3842 L
X3055 3720 L
X3115 3529 L
X3176 3276 L
X3236 2970 L
X3296 2625 L
X3356 2258 L
X3416 1886 L
X3477 1527 L
X3537 1198 L
X3597 917 L
X3657 698 L
X3718 554 L
X3778 493 L
X3838 519 L
X3898 634 L
X3958 834 L
X4019 1109 L
X4079 1450 L
X4139 1841 L
X4199 2265 L
X4259 2703 L
X4320 3136 L
X4380 3545 L
X4440 3912 L
X4500 4220 L
X4561 4459 L
X4621 4617 L
X4681 4689 L
X4741 4674 L
X4801 4574 L
X4862 4396 L
X4922 4147 L
X4982 3842 L
X5042 3492 L
X5102 3114 L
X5163 2724 L
X5223 2336 L
X5283 1964 L
X5343 1621 L
X5403 1317 L
X5464 1057 L
X5524 847 L
X5584 689 L
X5644 579 L
X5705 516 L
X5765 492 L
X5825 500 L
X5885 533 L
X5945 581 L
X6006 637 L
X6066 693 L
X6126 742 L
X6186 780 L
X6246 803 L
X6307 810 L
X6367 801 L
X6427 778 L
X6487 744 L
X6548 702 L
X6608 656 L
X6668 611 L
X6728 570 L
X6788 536 L
X6849 511 L
X6909 496 L
X6969 491 L
Xstroke
Xgrestore
Xend
Xshowpage
X%%Trailer
X%%Pages: 1
X
X%%EndDocument
XFMENDEPSF
X270 50 50 554 770 72 47.99 508.85 593.55 FMBEGINEPSF
X%%BeginDocument: /home/u06/cabral/avs/data/final.paper/h15.ps
X%!PS-Adobe-3.0 EPSF-3.0
X%%Creator: gnuplot
X%%DocumentFonts: Courier
X%%BoundingBox: 50 50 554 770
X%%Pages: (atend)
X%%EndComments
X/gnudict 40 dict def
Xgnudict begin
X/Color false def
X/gnulinewidth 15.0 def
X/vshift -46 def
X/dl {10 mul} def
X/hpt 31.5 def
X/vpt 31.5 def
X/vpt2 vpt 2 mul def
X/hpt2 hpt 2 mul def
X/Lshow { currentpoint stroke moveto
X  0 vshift rmoveto show } def
X/Rshow { currentpoint stroke moveto
X  dup stringwidth pop neg vshift rmoveto show } def
X/Cshow { currentpoint stroke moveto
X  dup stringwidth pop -2 div vshift rmoveto show } def
X/DL { Color {setrgbcolor [] 0 setdash pop}
X {pop pop pop 0 setdash} ifelse } def
X/BL { stroke gnulinewidth 2 mul setlinewidth } def
X/AL { stroke gnulinewidth 2 div setlinewidth } def
X/PL { stroke gnulinewidth setlinewidth } def
X/LTb { BL [] 0 0 0 DL } def
X/LTa { AL [1 dl 2 dl] 0 setdash 0 0 0 setrgbcolor } def
X/LT0 { PL [] 0 1 0 DL } def
X/LT1 { PL [4 dl 2 dl] 0 0 1 DL } def
X/LT2 { PL [2 dl 3 dl] 1 0 0 DL } def
X/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
X/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
X/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
X/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
X/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
X/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
X/M {moveto} def
X/L {lineto} def
X/P { stroke [] 0 setdash
X  currentlinewidth 2 div sub moveto
X  0 currentlinewidth rlineto  stroke } def
X/D { stroke [] 0 setdash  2 copy  vpt add moveto
X  hpt neg vpt neg rlineto  hpt vpt neg rlineto
X  hpt vpt rlineto  hpt neg vpt rlineto  closepath  stroke
X  P  } def
X/A { stroke [] 0 setdash  vpt sub moveto  0 vpt2 rlineto
X  currentpoint stroke moveto
X  hpt neg vpt neg rmoveto  hpt2 0 rlineto stroke
X  } def
X/B { stroke [] 0 setdash  2 copy  exch hpt sub exch vpt add moveto
X  0 vpt2 neg rlineto  hpt2 0 rlineto  0 vpt2 rlineto
X  hpt2 neg 0 rlineto  closepath  stroke
X  P  } def
X/C { stroke [] 0 setdash  exch hpt sub exch vpt add moveto
X  hpt2 vpt2 neg rlineto  currentpoint  stroke  moveto
X  hpt2 neg 0 rmoveto  hpt2 vpt2 rlineto stroke  } def
X/T { stroke [] 0 setdash  2 copy  vpt 1.12 mul add moveto
X  hpt neg vpt -1.62 mul rlineto
X  hpt 2 mul 0 rlineto
X  hpt neg vpt 1.62 mul rlineto  closepath  stroke
X  P  } def
X/S { 2 copy A C} def
Xend
X%%EndProlog
X%%Page: 1 1
Xgnudict begin
Xgsave
X50 50 translate
X0.100 0.100 scale
X90 rotate
X0 -5040 translate
X0 setgray
X/Courier findfont 140 scalefont setfont
Xnewpath
XLTa
XLTb
X1008 491 M
X6969 491 L
X3989 491 M
X3989 4689 L
XLTb
XLTb
XLT0
XLT0
X1008 491 M
X1008 491 L
X1068 492 L
X1128 494 L
X1189 495 L
X1249 495 L
X1309 494 L
X1369 492 L
X1429 491 L
X1490 496 L
X1550 509 L
X1610 534 L
X1670 576 L
X1731 637 L
X1791 721 L
X1851 830 L
X1911 964 L
X1971 1121 L
X2032 1298 L
X2092 1492 L
X2152 1695 L
X2212 1899 L
X2272 2097 L
X2333 2279 L
X2393 2436 L
X2453 2560 L
X2513 2642 L
X2574 2677 L
X2634 2662 L
X2694 2594 L
X2754 2476 L
X2814 2312 L
X2875 2109 L
X2935 1876 L
X2995 1625 L
X3055 1369 L
X3115 1123 L
X3176 900 L
X3236 714 L
X3296 579 L
X3356 504 L
X3416 497 L
X3477 563 L
X3537 703 L
X3597 915 L
X3657 1193 L
X3718 1528 L
X3778 1907 L
X3838 2315 L
X3898 2737 L
X3958 3154 L
X4019 3549 L
X4079 3907 L
X4139 4210 L
X4199 4448 L
X4259 4610 L
X4320 4689 L
X4380 4683 L
X4440 4594 L
X4500 4425 L
X4561 4185 L
X4621 3885 L
X4681 3537 L
X4741 3158 L
X4801 2762 L
X4862 2365 L
X4922 1981 L
X4982 1625 L
X5042 1307 L
X5102 1037 L
X5163 819 L
X5223 657 L
X5283 552 L
X5343 499 L
X5403 494 L
X5464 530 L
X5524 598 L
X5584 688 L
X5644 790 L
X5705 895 L
X5765 995 L
X5825 1081 L
X5885 1149 L
X5945 1194 L
X6006 1214 L
X6066 1210 L
X6126 1182 L
X6186 1135 L
X6246 1072 L
X6307 997 L
X6367 917 L
X6427 836 L
X6487 758 L
X6548 688 L
X6608 627 L
X6668 578 L
X6728 541 L
X6788 516 L
X6849 500 L
X6909 493 L
X6969 491 L
Xstroke
Xgrestore
Xend
Xshowpage
X%%Trailer
X%%Pages: 1
X
X%%EndDocument
XFMENDEPSF
X0 0 612 792 C
XFMENDPAGE
X%%EndPage: "5" 6
X%%Page: "6" 6
X612 792 0 FMBEGINPAGE
X1 9 Q
X0 X
X0 K
X0.92 (trast stretching must go to in\336nity as well. The images in all the) 54 403.43 P
X(\336gures are contrast stretched.) 54 392.93 T
X0 F
X(4.3  IMPLEMENT) 54 372.93 T
X(A) 123.75 372.93 T
X(TION AND APPLICA) 129.57 372.93 T
X(TION) 214.29 372.93 T
X1 F
X1.63 (The LIC algorithm is designed as a function which maps an) 63 359.93 P
X0.36 (input vector \336eld and texture to a \336ltered version of the input tex-) 54 349.44 P
X0.03 (ture. The dimension of the output texture is that of the vector \336eld.) 54 338.95 P
X0.1 (If the input texture is smaller than the vector \336eld the implementa-) 54 328.45 P
X0.77 (tion of the algorithm wraps the texture using a toroidal topology) 54 317.96 P
X0.77 (.) 291.75 317.96 P
X1.33 (That is, the right and left edges wrap as do the top and bottom) 54 307.47 P
X1.12 (edges. If the texture is too lar) 54 296.97 P
X1.12 (ge it is cropped to the vector \336eld) 165.62 296.97 P
X0.3 (dimensions. Careful attention must be paid to the size of the input) 54 286.48 P
X0.57 (texture relative to that of the vector \336eld. If too small a texture is) 54 275.99 P
X0.78 (used, the periodicity induced by the texture tiling will be visible.) 54 265.49 P
X1.39 (For scienti\336c applications this is unacceptable. One must insure) 54 255 P
X2.8 (that the input texture is lar) 317.29 569.86 P
X2.8 (ge enough so that the periodicity) 425.72 569.86 P
X(induced by the coordinate wrapping is not apparent.) 317.29 559.86 T
X-0.17 (The algorithm can be used as a data operator in conjunction with) 326.29 548.25 P
X0.76 (other operators much like those of Sims[17] and Perlin[14]. Spe-) 317.29 538.25 P
X0.47 (ci\336cally) 317.29 528.25 P
X0.47 (, both the texture and the vector \336eld can be preprocessed) 345.66 528.25 P
X0.41 (and combined with post processing on the output image. The LIC) 317.29 518.25 P
X-0.18 (implementation is a module in a data \337ow system like that found in) 317.29 508.25 P
X0.37 (a number of public domain and commercial products. This imple-) 317.29 498.25 P
X0.36 (mentation allows for rapid exploration of various combinations of) 317.29 488.25 P
X(operators.) 317.29 478.25 T
X0 F
X(4.3.1  POST PROCESSING) 317.29 459.65 T
X1 F
X0.2 (The output of the LIC algorithm can be operated on in a variety) 326.29 448.05 P
X1.46 (of ways. In this section several standard techniques are used in) 317.29 438.05 P
X(combination with LIC to produce novel results.) 317.29 428.05 T
X2.87 (An interesting example of constant kernel normalization is) 326.29 416.45 P
X0.53 (shown in \336gure 9. A simple basket weave pattern is generated by) 317.29 406.45 P
X3.12 (alternating vector directions in a checkerboard fashion. Each) 317.29 396.45 P
X1.61 (checker is surrounded by null vectors. This vector \336eld is then) 317.29 386.45 P
X0.43 (used to convolve white noise. The LIC is truncated as it nears the) 317.29 376.45 P
X0.01 (edges of the checkers which results in a gradual attenuation. When) 317.29 366.45 P
X1.82 (that output is gradient shaded, the basket weave becomes very) 317.29 356.45 P
X0.51 (realistic. While other techniques could be used to generate such a) 317.29 346.45 P
X0.76 (texture, the simplicity of the source data illustrates the versatility) 317.29 336.45 P
X(of LIC.) 317.29 326.45 T
X-0.14 (A surface wind velocity \336eld is imaged in \336gure 10 using LIC to) 326.29 314.84 P
X0.58 (blur 1/) 317.29 304.84 P
X3 F
X0.58 (f) 341.58 304.84 P
X1 F
X0.58 ( noise. The resulting image is composed over an image of) 344.08 304.84 P
X0.11 (North America to present scale and location. The LIC algorithm is) 317.29 294.84 P
X0.18 (slightly modi\336ed to image vector magnitude by varying the length) 317.29 284.84 P
X0.09 (of the line integral, 2) 317.29 274.84 P
X3 F
X0.09 (L) 392.79 274.84 P
X1 F
X0.09 (, as a function of the vector \336eld magnitude.) 397.79 274.84 P
X-0.08 (In \336gure 10 this ef) 317.29 264.84 P
X-0.08 (fect is seen as clumpiness in 1/) 383.2 264.84 P
X3 F
X-0.08 (f) 493.55 264.84 P
X1 F
X-0.08 ( cloud-like struc-) 496.05 264.84 P
X(tures where the wind velocity \336eld is small.) 317.29 254.84 T
X54 413.93 293.98 738 C
X54 413.93 293.98 738 R
X7 X
X0 K
XV
X54 413.93 293.98 440.93 R
XV
X5 8 Q
X0 X
X(Figur) 54 435.6 T
X(e 8: White noise convolved with \337uid dynamics vector) 72.09 435.6 T
X(\336eld using variable nor) 54 426.6 T
X(malization \050top\051 versus \336xed nor) 140.98 426.6 T
X(maliza-) 262.84 426.6 T
X(tion \050bottom\051.) 54 417.6 T
X54.72 446.18 293.26 737.28 R
X7 X
XV
X0.1 H
X2 Z
X14 X
XN
X0 0 612 792 C
X317.3 580.46 557.28 738 C
X317.3 580.46 557.28 738 R
X7 X
X0 K
XV
X317.3 580.46 557.28 616.46 R
XV
X5 8 Q
X0 X
X(Figur) 317.3 611.13 T
X(e 9: White noise convolved with checkerboar) 335.4 611.13 T
X(d vector) 510.64 611.13 T
X-0.32 (\336eld using \336xed nor) 317.3 602.13 P
X-0.32 (malization \050left\051, and then gradient shaded) 390.14 602.13 P
X(\050right\051 to give the appearance of a r) 317.3 593.13 T
X(ough woven sur) 458.75 593.13 T
X(face tex-) 520.67 593.13 T
X(tur) 317.3 584.13 T
X(e.) 327.25 584.13 T
X318.02 621.72 556.56 737.28 R
X7 X
XV
X0.1 H
X2 Z
X14 X
XN
X0 0 612 792 C
X54 72 293.98 247.54 C
X54 72 293.98 247.54 R
X7 X
X0 K
XV
X54 72 293.98 99 R
XV
X5 8 Q
X0 X
X(Figur) 54 93.67 T
X(e 10: A wind velocity visualization is cr) 72.09 93.67 T
X(eated by composit-) 216.8 93.67 T
X(ing an image of North America under an image of the veloc-) 54 84.67 T
X(ity \336eld r) 54 75.67 T
X(ender) 85.57 75.67 T
X(ed using variable length LIC over 1/) 108.69 75.67 T
X6 F
X(f) 245.92 75.67 T
X5 F
X( noise.) 248.43 75.67 T
X54.72 104.26 293.26 246.82 R
X7 X
XV
X0.1 H
X2 Z
X14 X
XN
X0 0 612 792 C
X317.3 72 557.28 247.54 C
X317.3 72 557.28 247.54 R
X7 X
X0 K
XV
X317.3 72 557.28 99 R
XV
X5 8 Q
X0 X
X(Figur) 317.3 93.67 T
X(e 11: The \336xed nor) 335.4 93.67 T
X(malization \337uid dynamics \336eld imaged) 405.16 93.67 T
X(in \336gur) 317.3 84.67 T
X(e 8 is multiplied by a color image of the magnitude of) 342.51 84.67 T
X(the vector \336eld.) 317.3 75.67 T
X318.02 104.26 556.56 246.82 R
X7 X
XV
X0.1 H
X2 Z
X14 X
XN
X0 0 612 792 C
XFMENDPAGE
X%%EndPage: "6" 7
X%%Page: "7" 7
X612 792 0 FMBEGINPAGE
X1 9 Q
X0 X
X0 K
X0.29 (Another method to add vector magnitude information is seen in) 63 403.43 P
X-0.21 (\336gure 1) 54 393.43 P
X-0.21 (1. The [\336xed normalization] \337uid dynamics \336eld of \336gure 8) 81.17 393.43 P
X-0.06 (is multiplied by a color image of the vector magnitude. The advan-) 54 383.43 P
X1.92 (tage of this approach over variable length LIC is that the \336ne) 54 373.43 P
X1.29 (grained detail generated by \336xed length LIC is retained even in) 54 363.43 P
X(low magnitude areas.) 54 353.43 T
X-0.01 (The LIC algorithm can be used to process an image using a vec-) 63 340.64 P
X-0.05 (tor \336eld generated from the image itself. In \336gure 12, a vector \336eld) 54 330.64 P
X0.31 (is generated from the input image by low-pass \336ltering the image,) 54 320.64 P
X0.49 (taking the gradient of the resulting image and rotating the vectors) 54 310.64 P
X(by 90) 54 300.64 T
X4 F
X(\260) 74.22 300.64 T
X1 F
X(.) 77.82 300.64 T
X0.87 (The LIC algorithm can also be used to post process images to) 63 287.86 P
X0.98 (generate motion blur) 54 277.86 P
X0.98 (. A rendering algorithm or paint system can) 130.36 277.86 P
X0.01 (easily specify a pixel by pixel velocity \336eld for objects. By using a) 54 267.86 P
X0.79 (biased triangle \336lter[10] and variable length LIC the input image) 54 257.86 P
X-0.1 (can be motion blurred in the direction of apparent motion. This has) 54 247.86 P
X0.84 (precisely the desired results for motion blurring as seen in \336gure) 54 237.86 P
X(13.) 54 227.86 T
X0 F
X(4.4  THREE-DIMENSIONAL LIC) 317.29 732 T
X1 F
X2.47 (The LIC algorithm easily generalizes to higher dimensions.) 326.29 721.25 P
X0.69 (Equations \0501\051, \0503\051 and \0505\051 trivially extend to three dimensions. In) 317.29 711.25 P
X0.19 (the three-dimensional case, cell edges are replaced with cell faces.) 317.29 701.25 P
X0.34 (Both the input vector \336eld and input texture must be three-dimen-) 317.29 691.25 P
X1.81 (sional. The output of the three-dimensional LIC algorithm is a) 317.29 681.25 P
X2.39 (three-dimensional image or scalar \336eld. This \336eld is rendered) 317.29 671.25 P
X-0.06 (using volume rendering techniques such as those found in [21] and) 317.29 661.25 P
X([6].) 317.29 651.25 T
X1.48 (Figure 14 is a three-dimensional rendering of an electrostatic) 326.29 640.5 P
X0.07 (\336eld with two point char) 317.29 630.5 P
X0.07 (ges placed a \336xed distance apart from one) 405.79 630.5 P
X0.57 (another) 317.29 620.5 P
X0.57 (. In this volumetric rendering, the magnitude of the vector) 343.74 620.5 P
X1.13 (\336eld is used to control the opacity transfer functions. Great ef) 317.29 610.5 P
X1.13 (\336-) 549.3 610.5 P
X0.33 (ciency gains can be achieved if the LIC algorithm exploits this by) 317.29 600.5 P
X0.79 (avoiding rendering for vector \336eld cells whose magnitude is out-) 317.29 590.5 P
X(side of the volume renderer) 317.29 580.5 T
X(\325) 416.45 580.5 T
X(s min/max threshold window) 418.95 580.5 T
X(.) 522.97 580.5 T
X0 F
X(5.  PERFORMANCE) 317.29 562.75 T
X1 F
X1.38 (There is a distinct performance and quality trade-of) 326.29 552 P
X1.38 (f between) 520.72 552 P
X0.36 (the DDA convolution algorithm and LIC. LIC is roughly an order) 317.29 542 P
X0.21 (of magnitude slower than the DDA method. Both algorithms were) 317.29 532 P
X2.03 (timed using cells processed per second \050CPS\051 as the \336gure of) 317.29 522 P
X-0.22 (merit. The tests were run on an unloaded IBM 550 RISC 6000. The) 317.29 512 P
X1.2 (DDA algorithm averages about 30,000 CPS while LIC averages) 317.29 502 P
X(about 3,000 CPS.) 317.29 492 T
X1.67 (The three-dimensional algorithm only mar) 326.29 481.26 P
X1.67 (ginally degrades in) 485.56 481.26 P
X0.42 (performance with the increase in dimensionality) 317.29 471.26 P
X0.42 (, processing some) 492.29 471.26 P
X3.51 (1,200 CPS. Since the algorithm remains one-dimensional in) 317.29 461.26 P
X1.26 (nature, the cost per cell only increases by a factor of three as a) 317.29 451.26 P
X-0.2 (function of dimension. Using the thresholding described above, the) 317.29 441.26 P
X0.09 (performance of the three-dimensional LIC algorithm has exceeded) 317.29 431.26 P
X(30,000 CPS.) 317.29 421.26 T
X0 F
X(6.  FUTURE WORK) 317.29 403.51 T
X1 F
X1.73 (A number of research directions relating to LIC remain out-) 326.29 392.76 P
X(standing.) 317.29 382.76 T
X1.29 (Currently no methods exist for determining the accuracy of a) 326.29 372.01 P
X1.31 (vector \336eld representation, such as those created by LIC or any) 317.29 362.01 P
X-0.11 (other method. These accuracy metrics would necessarily be related) 317.29 352.01 P
X54 413.93 293.98 738 C
X54 413.93 293.98 738 R
X7 X
X0 K
XV
X54 413.93 293.98 440.93 R
XV
X5 8 Q
X0 X
X(Figur) 54 435.6 T
X(e 12: A photograph \050top\051 of the Flavian Amphitheater is) 72.09 435.6 T
X-0.14 (used to cr) 54 426.6 P
X-0.14 (eate a vector \336eld. The \336eld is then used to image a) 92.29 426.6 P
X(\322painted\323 version of the same photograph \050bottom\051) 54 417.6 T
X7 F
X(.) 256.43 417.6 T
X54.72 446.18 293.26 737.28 R
X7 X
XV
X0.1 H
X2 Z
X14 X
XN
X0 0 612 792 C
X54 72 293.98 220.54 C
X54 72 293.98 220.54 R
X7 X
X0 K
XV
X54 72 293.98 99 R
XV
X5 8 Q
X0 X
X(Figur) 54 93.67 T
X(e 13: The original photo on the left shows no motion blur-) 72.09 93.67 T
X(ring The photo on the right uses variable length LIC to motion) 54 84.67 T
X(blur Boris Y) 54 75.67 T
X(eltsin\325s waving ar) 93.71 75.67 T
X(m, simulating a slower shutter) 159.61 75.67 T
X54.72 104.26 293.26 219.82 R
X7 X
XV
X0.1 H
X2 Z
X14 X
XN
X0 0 612 792 C
X317.3 72 557.28 343.51 C
X317.3 72 557.28 343.51 R
X7 X
X0 K
XV
X317.3 72 557.28 99 R
XV
X5 8 Q
X0 X
X(Figur) 317.3 93.67 T
X(e 14: A thr) 335.4 93.67 T
X(ee-dimensional 512) 374.19 93.67 T
X5 6 Q
X(3) 449.27 96.87 T
X5 8 Q
X( electr) 452.59 93.67 T
X(ostatic \336eld is) 477.06 93.67 T
X-0.1 (imaged by volumetrically ray tracing a thr) 317.3 84.67 P
X-0.1 (ee-dimensional sca-) 479.2 84.67 P
X(lar \336eld pr) 317.3 75.67 T
X(oduced using LIC over white noise.) 355.2 75.67 T
X318.02 104.26 556.56 342.79 R
X7 X
XV
X0.1 H
X2 Z
X14 X
XN
X0 0 612 792 C
XFMENDPAGE
X%%EndPage: "7" 8
X%%Page: "8" 8
X612 792 0 FMBEGINPAGE
X1 9 Q
X0 X
X0 K
X0.03 (to the dif) 54 732 P
X0.03 (ferential topology of the entire vector \336eld. As mentioned) 86.35 732 P
X-0.12 (above, much work in theoretical and applied mathematics has been) 54 722 P
X-0.11 (done in this area. This work needs to be studied and applied to ef) 54 712 P
X-0.11 (\336-) 286.01 712 P
X(cient vector \336eld imaging algorithms.) 54 702 T
X2.37 (LIC is conceptually independent of the advection algorithm) 63 691.67 P
X2.07 (used to de\336ne the parametric support used by the convolution) 54 681.67 P
X0.39 (operation. The method described here might be best characterized) 54 671.67 P
X2.08 (as a variable step Euler) 54 661.67 P
X2.08 (\325) 146 661.67 P
X2.08 (s method. Other techniques such as a) 148.5 661.67 P
X2.11 (fourth order Runge-Kutta could produce dif) 54 651.67 P
X2.11 (fering or improved) 221.89 651.67 P
X2.26 (results. A thorough investigation into this issue is beyond the) 54 641.67 P
X0.65 (scope of this paper) 54 631.67 P
X0.65 (. It does, however) 123.1 631.67 P
X0.65 (, represent an area deserving) 188.83 631.67 P
X(special attention.) 54 621.67 T
X1.73 (V) 63 611.33 P
X1.73 (isualizing the orthogonal complement of a two-dimensional) 68.95 611.33 P
X0.08 (vector \336eld is accomplished by rotating the individual vectors 90) 54 601.33 P
X4 F
X0.08 (\260) 288.16 601.33 P
X1 F
X0.08 (.) 291.75 601.33 P
X1.03 (However) 54 591.33 P
X1.03 (, in three-dimensional vector \336elds the orthogonal com-) 86.58 591.33 P
X0.53 (plement of a vector is a plane. This suggests that a generalization) 54 581.33 P
X0.07 (of the one-dimensional LIC \336lter would be a two-dimensional sur-) 54 571.33 P
X0.32 (face \336lter) 54 561.33 P
X0.32 (. This \336lter would have as its geometric support a dif) 88.01 561.33 P
X0.32 (fer-) 281.03 561.33 P
X0.16 (ential surface whose normals would be de\336ned by the vector \336eld,) 54 551.33 P
X1.37 (thus creating a Surface Integral Convolution \050SIC\051. As with the) 54 541.33 P
X-0.04 (LIC, an arbitrary two-dimensional \336lter could then be used to \336lter) 54 531.33 P
X(the three-dimensional input image.) 54 521.33 T
X-0.21 (Another direction for generalization is to develop versions of the) 63 511 P
X2.37 (algorithm which operate directly on curvilinear and arbitrarily) 54 501 P
X1.37 (grided vector \336elds without resampling the input data. The LIC) 54 491 P
X0.96 (algorithm could easily be modi\336ed to handle arbitrary line inter-) 54 481 P
X0.35 (sections and topologies of both type of grids. As with the rectilin-) 54 471 P
X6.05 (ear LIC, it would have an analogous three-dimensional) 54 461 P
X0.05 (generalization. T) 54 451 P
X0.05 (wo additional problems remain however: generat-) 114.32 451 P
X1.36 (ing curvilinear and arbitrarily girded textures and output resam-) 54 441 P
X(pling.) 54 431 T
X0.12 (One possible image processing application of LIC is the deblur-) 63 420.67 P
X1.59 (ring of motion blurred images. Images acquired with a moving) 54 410.67 P
X1.43 (CCD camera often exhibit such blurring. If the CCD frequency) 54 400.67 P
X1.58 (response curves and the camera motion are known, one-dimen-) 54 390.67 P
X0.04 (sional deconvolution techniques could be used in conjunction with) 54 380.67 P
X(LIC to deblur the images.) 54 370.67 T
X0.19 (The local nature of the LIC algorithm suggests a parallel imple-) 63 360.33 P
X1.26 (mentation. Such an implementation could, in principle, compute) 54 350.33 P
X0.21 (all pixels simultaneously) 54 340.33 P
X0.21 (. This would allow for interactive genera-) 143.22 340.33 P
X(tion of periodic motion animations and special ef) 54 330.33 T
X(fects.) 230.32 330.33 T
X0 F
X(7.  SUMMAR) 54 313 T
X(Y) 106.59 313 T
X1 F
X0.55 (Line integral convolution represents a new and general method) 63 302.67 P
X1.39 (for imaging two- and three-dimensional vector \336elds. The algo-) 54 292.67 P
X0.37 (rithm \336lters an input image along local stream lines de\336ned by an) 54 282.67 P
X0.54 (input vector \336eld and generates an output image. The one-dimen-) 54 272.67 P
X0.83 (sional \336lter shape is independent of either input and can be arbi-) 54 262.67 P
X2.16 (trary) 54 252.67 P
X2.16 (. T) 70.38 252.67 P
X2.16 (o indicate directional \337ow of the vector \336eld, a whole) 81.9 252.67 P
X0.21 (family of continuous motion \336lters has been introduced. These \336l-) 54 242.67 P
X0.67 (ters give apparent motion in the direction of the vector \336eld. The) 54 232.67 P
X0.71 (technique can also be used to create special ef) 54 222.67 P
X0.71 (fects. Additionally) 224.73 222.67 P
X0.71 (,) 291.75 222.67 P
X0.07 (the local nature of the algorithm lends itself to ef) 54 212.67 P
X0.07 (\336cient and simple) 229.95 212.67 P
X(implementations.) 54 202.67 T
X0 F
X(8.  ACKNOWLEDGMENTS) 54 185.33 T
X1 F
X-0.11 (This work was performed under the auspices of the U.S. Depart-) 63 175 P
X2.83 (ment of Ener) 54 165 P
X2.83 (gy by Lawrence Livermore National Laboratory) 106.41 165 P
X1.11 (under contract W) 54 155 P
X1.11 (-7405-ENG-48. The SIGGRAPH \32493 reviewers) 118.11 155 P
X0.14 (provided many helpful comments and suggestions. Thanks to Nel-) 54 145 P
X0.29 (son Max who suggested using higher order functions within a cell) 54 135 P
X1.77 (and who provided critical assessment all along the way) 54 125 P
X1.77 (. Roger) 265.77 125 P
X0.17 (Craw\336s deserves special thanks for various conversations over the) 54 115 P
X1.31 (past couple of years on the topic of vector visualization. Chuck) 54 105 P
X0.05 (Grant provided helpful suggestions clarifying the language used to) 54 95 P
X0.34 (discuss periodic motion \336lters. John Bell and Jef) 54 85 P
X0.34 (f Greenough pro-) 230.94 85 P
X0.34 (vided the turbulent computational \337uid dynamics data used in \336g-) 54 75 P
X0.14 (ures 2, 4, 8 and 1) 317.29 732 P
X0.14 (1 and for using the algorithm in their work. Dean) 379.3 732 P
X-0.06 (W) 317.29 722 P
X-0.06 (illiams and Jerry Potter provided the North America wind veloc-) 325.41 722 P
X-0.21 (ity data. Lastly) 317.29 712 P
X-0.21 (, thanks to John Zych who helped with the rendering) 369.96 712 P
X(of the North America image.) 317.29 702 T
X0 F
X(REFERENCES) 317.29 684.44 T
X1 F
X(1.) 317.29 673.88 T
X0.98 (Bresenham, J. Algorithm for Computer Control of a Digital) 335.29 673.88 P
X(Plotter) 335.29 663.88 T
X(. In) 358.76 663.88 T
X3 F
X(IBM Systems Journal) 372.99 663.88 T
X1 F
X( 4, 1 \0501965\051, 25-30.) 449.87 663.88 T
X(2.) 317.29 651.32 T
X0.88 (Bronstein, I. and Semendyayev) 335.29 651.32 P
X0.88 (, K.) 449.92 651.32 P
X3 F
X0.88 (Handbook of Mathemat-) 467.16 651.32 P
X(ics) 335.29 641.32 T
X1 F
X(. V) 345.27 641.32 T
X(an Norstrand Reinholt \0501985\051, 291-293.) 355.26 641.32 T
X(3.) 317.29 628.76 T
X-0.03 (Chang, S.) 335.29 628.76 P
X3 F
X-0.03 (Fundamentals Handbook of Electrical Engineering) 372.68 628.76 P
X0.34 (and Computer Engineering) 335.29 618.76 P
X1 F
X0.34 (. John W) 434.31 618.76 P
X0.34 (iley & Sons, Inc. \0501982\051,) 466.83 618.76 P
X(264-266.) 335.29 608.76 T
X(4.) 317.29 596.2 T
X1.09 (Chui, K.) 335.29 596.2 P
X3 F
X1.09 (An Intr) 370.43 596.2 P
X1.09 (oduction to W) 396.9 596.2 P
X1.09 (avelets) 448.68 596.2 P
X1 F
X1.09 (. Academic Press, Inc.) 473.64 596.2 P
X(\0501992\051, 49-60.) 335.29 586.2 T
X(5.) 317.29 573.64 T
X2.31 (Craw\336s, R. and Max, M. Direct V) 335.29 573.64 P
X2.31 (olume V) 470.82 573.64 P
X2.31 (isualization of) 503.8 573.64 P
X1.12 (Three-Dimensional V) 335.29 563.64 P
X1.12 (ector Fields.) 414.04 563.64 P
X3 F
X1.12 (Pr) 462.97 563.64 P
X1.12 (oceedings of the W) 471.62 563.64 P
X1.12 (ork-) 542.31 563.64 P
X1.64 (shop on V) 335.29 553.64 P
X1.64 (olume V) 373.52 553.64 P
X1.64 (isualization) 404.2 553.64 P
X1 F
X1.64 (, Kaufman and Lorensen Eds) 446.15 553.64 P
X(\0501992\051.) 335.29 543.64 T
X(6.) 317.29 531.08 T
X0.23 (Drebin, R., Carpenter) 335.29 531.08 P
X0.23 (, L. and Hanaran, P) 413.02 531.08 P
X0.23 (. V) 482.59 531.08 P
X0.23 (olume Rendering.) 492.65 531.08 P
X3 F
X(Computer Graphics) 335.29 521.08 T
X1 F
X( 22, 4 \050August 1988\051, 65-74.) 406.93 521.08 T
X(7.) 317.29 508.52 T
X0.63 (Dumortier) 335.29 508.52 P
X0.63 (, F) 372.37 508.52 P
X0.63 (., Roussarie, R., Sotomayor) 381.77 508.52 P
X0.63 (, J. and Zoladek, H.,) 482.14 508.52 P
X1.34 (Study of Field Bifurcations.) 335.29 498.52 P
X3 F
X1.34 (Lectur) 443.26 498.52 P
X1.34 (e Notes in Mathematics) 466.39 498.52 P
X1 F
X1.34 (,) 555.04 498.52 P
X(Springer) 335.29 488.52 T
X(-V) 366.06 488.52 T
X(erlag \0501991\051.) 374.54 488.52 T
X(8.) 317.29 475.96 T
X1.85 (Freeman, W) 335.29 475.96 P
X1.85 (., Adelson, E. and Heeger) 380.73 475.96 P
X1.85 (, D. Motion without) 480.09 475.96 P
X(Movement.) 335.29 465.96 T
X3 F
X(Computer Graphics) 378.72 465.96 T
X1 F
X( 25, 4 \050July 1991\051, 27-30.) 450.37 465.96 T
X(9.) 317.29 453.4 T
X0.94 (Haeberli, P) 335.29 453.4 P
X0.94 (. Paint By Numbers: Abstract Image Representa-) 375.66 453.4 P
X(tion.) 335.29 443.4 T
X3 F
X( Computer Graphics) 351.52 443.4 T
X1 F
X( 24, 4 \050August 1990\051, 207-214.) 425.41 443.4 T
X(10.) 317.29 430.84 T
X2.68 (Heckbert, P) 335.29 430.84 P
X2.68 (. Filtering by Repeated Integration.) 379.39 430.84 P
X3 F
X2.68 (Computer) 521.34 430.84 P
X(Graphics) 335.29 420.84 T
X1 F
X( 20, 4 \050August 1986\051, 315-321.) 368.74 420.84 T
X(1) 317.29 408.28 T
X(1.) 321.45 408.28 T
X0.04 (Kajiya, J. and Kay) 335.29 408.28 P
X0.04 (, T) 401.46 408.28 P
X0.04 (. Rendering Fur with Three Dimensional) 410.82 408.28 P
X(T) 335.29 398.28 T
X(extures.) 340.15 398.28 T
X3 F
X(Computer Graphics) 370.6 398.28 T
X1 F
X( 23, 3 \050July 1989\051, 271-280.) 442.24 398.28 T
X(12.) 317.29 385.72 T
X0.33 (Kenwright, D. and Mallinson, G. A 3-D Streamline T) 335.29 385.72 P
X0.33 (racking) 530.33 385.72 P
X0.45 (Algorithm Using Dual Stream Functions.) 335.29 375.72 P
X3 F
X0.45 (IEEE V) 488.34 375.72 P
X0.45 (isualization) 515.33 375.72 P
X(\32492 Confer) 335.29 365.72 T
X(ence Pr) 374.15 365.72 T
X(oceedings) 401.51 365.72 T
X1 F
X( \050October 1992\051, 62-68.) 437.45 365.72 T
X(13.) 317.29 353.16 T
X(Max, Nelson. Personal Communication \0501992\051.) 335.29 353.16 T
X(14.) 317.29 340.6 T
X1.16 (Perlin, K. An Image Synthesizer) 335.29 340.6 P
X1.16 (.) 456.27 340.6 P
X3 F
X1.16 (Computer Graphics) 461.92 340.6 P
X1 F
X1.16 ( 19, 3) 534.74 340.6 P
X(\050August 1985\051, 287-296.) 335.29 330.6 T
X(15.) 317.29 318.04 T
X3.01 (Perlin, K. Hypertexture.) 335.29 318.04 P
X3 F
X3.01 (Computer Graphics) 433.17 318.04 P
X1 F
X3.01 ( 23, 3 \050July) 507.82 318.04 P
X(1989\051, 253-262.) 335.29 308.04 T
X(16.) 317.29 295.48 T
X1.45 (Pratt, W) 335.29 295.48 P
X1.45 (.) 365.87 295.48 P
X3 F
X1.45 (Digital Image Pr) 371.81 295.48 P
X1.45 (ocessing) 435.8 295.48 P
X1 F
X1.45 (. 2nd ed. John W) 466.75 295.48 P
X1.45 (iley &) 533.11 295.48 P
X(Sons, Inc. \0501991\051, 243-245.) 335.29 285.48 T
X(17.) 317.29 272.92 T
X1.19 (Sims, K. Arti\336cial Evolution for Computer Graphics.) 335.29 272.92 P
X3 F
X1.19 (Com-) 537.32 272.92 P
X(puter Graphics) 335.29 262.92 T
X1 F
X( 25, 4 \050August 1991\051, 319-328.) 389.96 262.92 T
X(18.) 317.29 250.36 T
X0.41 (Sims, K. Choreographed Image Flow) 335.29 250.36 P
X0.41 (.) 470.66 250.36 P
X3 F
X0.41 (The Journal of V) 475.57 250.36 P
X0.41 (isual-) 536.81 250.36 P
X0.44 (ization and Computer Animation) 335.29 240.36 P
X1 F
X0.44 ( 3, 1 \050January-March 1992\051,) 454.7 240.36 P
X(31-43.) 335.29 230.36 T
X(19.) 317.29 217.8 T
X2.17 (T) 335.29 217.8 P
X2.17 (ufte, E. The V) 340.46 217.8 P
X2.17 (isual Display of Quantitative Information.) 397.59 217.8 P
X3 F
X(Chesir) 335.29 207.8 T
X(e, CT) 358.92 207.8 T
X(: Graphics Pr) 377.9 207.8 T
X(ess) 427.5 207.8 T
X1 F
X( \0501983\051.) 438.48 207.8 T
X(20.) 317.29 195.24 T
X1.79 (T) 335.29 195.24 P
X1.79 (urk, G. Generating T) 340.46 195.24 P
X1.79 (extures on Arbitrary Surfaces Using) 420.33 195.24 P
X0.52 (Reaction-Dif) 335.29 185.24 P
X0.52 (fusion T) 382.05 185.24 P
X0.52 (extures.) 412.14 185.24 P
X3 F
X0.52 (Computer Graphics) 443.11 185.24 P
X1 F
X0.52 ( 25, 4 \050July) 515.28 185.24 P
X(1991\051, 289-298.) 335.29 175.24 T
X(21.) 317.29 162.68 T
X0.55 (Upson, C. and Keeler) 335.29 162.68 P
X0.55 (, M. V) 414.2 162.68 P
X0.55 (-Buf) 437.94 162.68 P
X0.55 (fer: V) 454.25 162.68 P
X0.55 (isible V) 475.47 162.68 P
X0.55 (olume Render-) 503.07 162.68 P
X(ing.) 335.29 152.68 T
X3 F
X(Computer Graphics) 351.27 152.68 T
X1 F
X( 22, 4 \050August 1988\051, 59-64.) 422.91 152.68 T
X(22.) 317.29 140.12 T
X-0.05 (V) 335.29 140.12 P
X-0.05 (an Gelder) 340.78 140.12 P
X-0.05 (, A. and W) 375.55 140.12 P
X-0.05 (ilhelms, J. Interactive Animated V) 414.24 140.12 P
X-0.05 (isual-) 537.32 140.12 P
X0.61 (ization of Flow Fields.) 335.29 130.12 P
X3 F
X0.61 (Pr) 421.36 130.12 P
X0.61 (oceedings of the W) 430.01 130.12 P
X0.61 (orkshop on V) 499.15 130.12 P
X0.61 (ol-) 547.3 130.12 P
X(ume V) 335.29 120.12 T
X(isualization) 357.33 120.12 T
X1 F
X(, Kaufman and Lorensen Eds. \0501992\051.) 399.29 120.12 T
X(23.) 317.29 107.56 T
X-0.1 (V) 335.29 107.56 P
X-0.1 (an W) 340.78 107.56 P
X-0.1 (ijk, J. Spot Noise T) 359.54 107.56 P
X-0.1 (exture Synthesis for Data V) 427.92 107.56 P
X-0.1 (isualiza-) 526.84 107.56 P
X(tion.) 335.29 97.56 T
X3 F
X(Computer Graphics) 353.76 97.56 T
X1 F
X( 25, 4 \050July 1991\051, 309-318.) 425.41 97.56 T
X(24.) 317.29 85 T
X0.78 (W) 335.29 85 P
X0.78 (itkin, A. and Kass, M. Reaction-Dif) 343.41 85 P
X0.78 (fusion T) 475.72 85 P
X0.78 (extures.) 506.08 85 P
X3 F
X0.78 (Com-) 537.32 85 P
X(puter Graphics) 335.29 75 T
X1 F
X(25, 4 \050July 1991\051, 299-308.) 392.2 75 T
XFMENDPAGE
X%%EndPage: "8" 9
X%%Trailer
X%%BoundingBox: 0 0 612 792
X%%Pages: 8 1
X%%DocumentFonts: Helvetica-Bold
X%%+ Times-Roman
X%%+ Times-Bold
X%%+ Times-Italic
X%%+ Symbol
X%%+ AvantGarde-Book
X%%+ AvantGarde-BookOblique
X%%+ AvantGarde-DemiOblique
END_OF_FILE
  if test 61490 -ne `wc -c <'lic.1.2/doc/siggraph93/paper.ps.C'`; then
    echo shar: \"'lic.1.2/doc/siggraph93/paper.ps.C'\" unpacked with wrong size!
  elif test -f 'lic.1.2/doc/siggraph93/paper.ps.A' && test -f 'lic.1.2/doc/siggraph93/paper.ps.B'; then
    echo shar: Combining  \"'lic.1.2/doc/siggraph93/paper.ps'\" \(170079 characters\)
    cat 'lic.1.2/doc/siggraph93/paper.ps.A' 'lic.1.2/doc/siggraph93/paper.ps.B'
'lic.1.2/doc/siggraph93/paper.ps.C' > 'lic.1.2/doc/siggraph93/paper.ps'
    if test 170079 -ne `wc -c <'lic.1.2/doc/siggraph93/paper.ps'`; then
      echo shar: \"'lic.1.2/doc/siggraph93/paper.ps'\" combined with wrong size!    else
      rm lic.1.2/doc/siggraph93/paper.ps.A lic.1.2/doc/siggraph93/paper.ps.B lic.1.2/doc/siggraph93/paper.ps.C
    fi
  fi
  # end of 'lic.1.2/doc/siggraph93/paper.ps.C'
fi
echo shar: End of archive 2 \(of 10\).
cp /dev/null ark2isdone
MISSING=""
for I in 1 2 3 4 5 6 7 8 9 10 ; do
    if test ! -f ark${I}isdone ; then
	MISSING="${MISSING} ${I}"
    fi
done
if test "${MISSING}" = "" ; then
    echo You have unpacked all 10 archives.
    rm -f ark[1-9]isdone ark[1-9][0-9]isdone
else
    echo You still must unpack the following archives:
    echo "        " ${MISSING}
fi
exit 0
exit 0 # Just in case...
