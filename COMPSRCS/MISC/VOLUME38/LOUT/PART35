Newsgroups: comp.sources.misc
From: jeff@joyce.cs.su.oz.au (Jeff Kingston)
Subject: v38i103:  lout - Lout document formatting system, v2.05, Part35/35
Message-ID: <1993Aug10.132627.19867@sparky.sterling.com>
X-Md4-Signature: 8700bc53a5b658f53aa3298a4005f417
Sender: kent@sparky.sterling.com (Kent Landfield)
Organization: Sterling Software
Date: Tue, 10 Aug 1993 13:26:27 GMT
Approved: kent@sparky.sterling.com

Submitted-by: jeff@joyce.cs.su.oz.au (Jeff Kingston)
Posting-number: Volume 38, Issue 103
Archive-name: lout/part35
Environment: UNIX
Supersedes: lout: Volume 37, Issue 99-128

#! /bin/sh
# This is a shell archive.  Remove anything before this line, then feed it
# into a shell via "sh file" or similar.  To overwrite existing files,
# type "sh file -c".
# Contents:  data/README doc/tr.begin/README doc/tr.begin/s00
#   doc/tr.begin/setup doc/tr.eq/README doc/tr.impl/README
#   doc/tr.impl/s2.0 doc/tr.impl/s2.9 doc/tr.impl/s3.9
#   doc/tr.impl/s5.9 doc/tr.impl/s6.9 doc/tr.lout/README
#   doc/tr.lout/ch1.99 doc/tr.lout/ch2.00 doc/tr.lout/ch2.99
#   doc/tr.lout/ch3.00 doc/tr.lout/ch3.05 doc/tr.lout/ch3.09
#   doc/tr.lout/ch3.14 doc/tr.lout/ch3.99 doc/tr.lout/ch4.99
#   doc/tr.over/README doc/tr.tab/README
# Wrapped by kent@sparky on Sun Aug  8 12:29:36 1993
PATH=/bin:/usr/bin:/usr/ucb:/usr/local/bin:/usr/lbin ; export PATH
echo If this archive is complete, you will see the following message:
echo '          "shar: End of archive 35 (of 35)."'
if test -f 'data/README' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'data/README'\"
else
  echo shar: Extracting \"'data/README'\" \(351 characters\)
  sed "s/^X//" >'data/README' <<'END_OF_FILE'
XDirectory lout/data
X
XThis directory contains Lout database files:
X
X    loutrefs.ld		References used in the various reports
X    refstyles.ld	Reference printing styles
X    standard.ld		Roman numerals, months, etc.
X
XCorresponding .li files will be created in this directory the
Xfirst time each database is accessed.
X
XJeffrey H. Kingston
X22 December 1992
END_OF_FILE
  if test 351 -ne `wc -c <'data/README'`; then
    echo shar: \"'data/README'\" unpacked with wrong size!
  fi
  # end of 'data/README'
fi
if test -f 'doc/tr.begin/README' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'doc/tr.begin/README'\"
else
  echo shar: Extracting \"'doc/tr.begin/README'\" \(540 characters\)
  sed "s/^X//" >'doc/tr.begin/README' <<'END_OF_FILE'
XDirectory lout/doc/tr.begin
X
XThis directory contains the Lout source files for
Xthe Beginners' Guide to Lout technical report.  To
Xproduce the report, type the command
X
X	lout setup s?? > outfile.ps
X
Xin this directory.  This must be done three times to
Xcompletely resolve all cross references, although
Xthe PostScript file outfile.ps is printable after
Xthe first run.  Auxiliary files with .li and .ld
Xsuffixes will be created in this directory.  A copy
Xof the final outfile.ps is included.
X
XJeffrey H. Kingston
X30 July 1991
X22 December 1992
END_OF_FILE
  if test 540 -ne `wc -c <'doc/tr.begin/README'`; then
    echo shar: \"'doc/tr.begin/README'\" unpacked with wrong size!
  fi
  # end of 'doc/tr.begin/README'
fi
if test -f 'doc/tr.begin/s00' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'doc/tr.begin/s00'\"
else
  echo shar: Extracting \"'doc/tr.begin/s00'\" \(713 characters\)
  sed "s/^X//" >'doc/tr.begin/s00' <<'END_OF_FILE'
X@Report
X   @Title { A Beginners' Guide to Lout }
X   @Author { Jeffrey H. Kingston }
X   @Institution { Basser Department of Computer Science
XThe University of Sydney 2006
XAustralia }
X   @DateLine { 27 July, 1992 }
X   @Columns { Double }
X//
X
X@Abstract {
XThis report is a beginners' guide to the Lout document formatting
Xsystem.  It shows in a very practical, step-by-step way how to produce
Xdocuments with paragraphs, headings, fonts, displays and lists,
Xfootnotes, numbered sections, references, tables and figures, and so on,
Xusing the DocumentLayout package (Version 2), which is designed for
Xproducing simple documents, technical reports, and books.  The underlying
Xprinciples of Lout are not explained here.
X}
END_OF_FILE
  if test 713 -ne `wc -c <'doc/tr.begin/s00'`; then
    echo shar: \"'doc/tr.begin/s00'\" unpacked with wrong size!
  fi
  # end of 'doc/tr.begin/s00'
fi
if test -f 'doc/tr.begin/setup' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'doc/tr.begin/setup'\"
else
  echo shar: Extracting \"'doc/tr.begin/setup'\" \(708 characters\)
  sed "s/^X//" >'doc/tr.begin/setup' <<'END_OF_FILE'
X
X######################################################
X#                                                    #
X#  Lout setup file for producing a technical report  #
X#                                                    #
X#  Jeffrey H. Kingston                               #
X#  8 June 1991                                       #
X#                                                    #
X######################################################
X
X@SysInclude { ft  }
X@SysInclude { dl  }
X@SysInclude { eq  }
X@SysInclude { tab }
X@SysInclude { pas }
X@SysInclude { fig }
X
X   def @Code
X      right x
X   { { Helvetica Base -1p } @Font lines @Break x
X   }
X
X@Use { @DocumentLayout }
X
X@SysDatabase @Reference { loutrefs }
END_OF_FILE
  if test 708 -ne `wc -c <'doc/tr.begin/setup'`; then
    echo shar: \"'doc/tr.begin/setup'\" unpacked with wrong size!
  fi
  # end of 'doc/tr.begin/setup'
fi
if test -f 'doc/tr.eq/README' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'doc/tr.eq/README'\"
else
  echo shar: Extracting \"'doc/tr.eq/README'\" \(557 characters\)
  sed "s/^X//" >'doc/tr.eq/README' <<'END_OF_FILE'
XDirectory lout/doc/tr.eq
X
XThis directory contains the Lout source files for the
Xtechnical report describing the Eq equation formatting
Xpackage.  To produce the report, type the command
X
X	lout setup s? > outfile.ps
X
Xin this directory.  This must be done three times to
Xcompletely resolve all cross references, although
Xthe PostScript file outfile.ps is printable after
Xthe first run.  Auxiliary files with .li and .ld
Xsuffixes will be created in this directory.  A copy
Xof the final outfile.ps is included.
X
XJeffrey H. Kingston
X30 July 1991
X22 December 1992
END_OF_FILE
  if test 557 -ne `wc -c <'doc/tr.eq/README'`; then
    echo shar: \"'doc/tr.eq/README'\" unpacked with wrong size!
  fi
  # end of 'doc/tr.eq/README'
fi
if test -f 'doc/tr.impl/README' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'doc/tr.impl/README'\"
else
  echo shar: Extracting \"'doc/tr.impl/README'\" \(650 characters\)
  sed "s/^X//" >'doc/tr.impl/README' <<'END_OF_FILE'
XDirectory lout/doc/tr.impl
X
XThis directory contains the Lout source files for the
Xreport entitled `The design and implementation of the
XLout document formatting language'  which has been
Xaccepted for publication in Software - Practice and
XExperience.  To produce the report, type the command
X
X	lout setup s?.? > outfile.ps
X
Xin this directory.  This must be done three times to
Xcompletely resolve all cross references, although
Xthe PostScript file outfile.ps is printable after
Xthe first run.  Auxiliary files with .li and .ld
Xsuffixes will be created in this directory.  A copy
Xof the final outfile.ps is included.
X
XJeffrey H. Kingston
X22 April 1993
END_OF_FILE
  if test 650 -ne `wc -c <'doc/tr.impl/README'`; then
    echo shar: \"'doc/tr.impl/README'\" unpacked with wrong size!
  fi
  # end of 'doc/tr.impl/README'
fi
if test -f 'doc/tr.impl/s2.0' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'doc/tr.impl/s2.0'\"
else
  echo shar: Extracting \"'doc/tr.impl/s2.0'\" \(616 characters\)
  sed "s/^X//" >'doc/tr.impl/s2.0' <<'END_OF_FILE'
X@Section
X    @Title { Objects }
X@Begin
X@PP
XThe essence of any move to a higher level is the introduction of some
Xabstraction which serves to organize the low-level operations,
Xresulting in a more succinct expression of their
Xcommon combinations at the cost of some loss of detailed control.  The
Xearly part of the Lout project was spent in the development of such an
Xabstraction for the building blocks of documents, one which could
Xexplain, not just the simple phenomena of words, lines, and paragraphs,
Xbut also the alignment of columns in tables, and the complex nested
Xstructures of equations.
X@BeginSubSections
END_OF_FILE
  if test 616 -ne `wc -c <'doc/tr.impl/s2.0'`; then
    echo shar: \"'doc/tr.impl/s2.0'\" unpacked with wrong size!
  fi
  # end of 'doc/tr.impl/s2.0'
fi
if test -f 'doc/tr.impl/s2.9' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'doc/tr.impl/s2.9'\"
else
  echo shar: Extracting \"'doc/tr.impl/s2.9'\" \(30 characters\)
  sed "s/^X//" >'doc/tr.impl/s2.9' <<'END_OF_FILE'
X@EndSubSections
X@End @Section
END_OF_FILE
  if test 30 -ne `wc -c <'doc/tr.impl/s2.9'`; then
    echo shar: \"'doc/tr.impl/s2.9'\" unpacked with wrong size!
  fi
  # end of 'doc/tr.impl/s2.9'
fi
if test -f 'doc/tr.impl/s3.9' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'doc/tr.impl/s3.9'\"
else
  echo shar: Extracting \"'doc/tr.impl/s3.9'\" \(30 characters\)
  sed "s/^X//" >'doc/tr.impl/s3.9' <<'END_OF_FILE'
X@EndSubSections
X@End @Section
END_OF_FILE
  if test 30 -ne `wc -c <'doc/tr.impl/s3.9'`; then
    echo shar: \"'doc/tr.impl/s3.9'\" unpacked with wrong size!
  fi
  # end of 'doc/tr.impl/s3.9'
fi
if test -f 'doc/tr.impl/s5.9' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'doc/tr.impl/s5.9'\"
else
  echo shar: Extracting \"'doc/tr.impl/s5.9'\" \(30 characters\)
  sed "s/^X//" >'doc/tr.impl/s5.9' <<'END_OF_FILE'
X@EndSubSections
X@End @Section
END_OF_FILE
  if test 30 -ne `wc -c <'doc/tr.impl/s5.9'`; then
    echo shar: \"'doc/tr.impl/s5.9'\" unpacked with wrong size!
  fi
  # end of 'doc/tr.impl/s5.9'
fi
if test -f 'doc/tr.impl/s6.9' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'doc/tr.impl/s6.9'\"
else
  echo shar: Extracting \"'doc/tr.impl/s6.9'\" \(30 characters\)
  sed "s/^X//" >'doc/tr.impl/s6.9' <<'END_OF_FILE'
X@EndSubSections
X@End @Section
END_OF_FILE
  if test 30 -ne `wc -c <'doc/tr.impl/s6.9'`; then
    echo shar: \"'doc/tr.impl/s6.9'\" unpacked with wrong size!
  fi
  # end of 'doc/tr.impl/s6.9'
fi
if test -f 'doc/tr.lout/README' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'doc/tr.lout/README'\"
else
  echo shar: Extracting \"'doc/tr.lout/README'\" \(592 characters\)
  sed "s/^X//" >'doc/tr.lout/README' <<'END_OF_FILE'
XDirectory lout/doc/tr.lout
X
XThis directory contains the Lout source files for the
Xreport `Document Formatting with Lout (Second Edition)',
Xalso known as  the Lout user manual.  To produce the
Xreport, type the command
X
X	lout setup ch?.?? > outfile.ps
X
Xin this directory.  This must be done four times to
Xcompletely resolve all cross references, although
Xthe PostScript file outfile.ps is printable after
Xthe first run.  Auxiliary files with .li and .ld
Xsuffixes will be created in this directory.  A copy
Xof the final outfile.ps is included.
X
XJeffrey H. Kingston
X23 December 1992
X27 July 1993
END_OF_FILE
  if test 592 -ne `wc -c <'doc/tr.lout/README'`; then
    echo shar: \"'doc/tr.lout/README'\" unpacked with wrong size!
  fi
  # end of 'doc/tr.lout/README'
fi
if test -f 'doc/tr.lout/ch1.99' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'doc/tr.lout/ch1.99'\"
else
  echo shar: Extracting \"'doc/tr.lout/ch1.99'\" \(27 characters\)
  sed "s/^X//" >'doc/tr.lout/ch1.99' <<'END_OF_FILE'
X@EndSections
X@End @Chapter
END_OF_FILE
  if test 27 -ne `wc -c <'doc/tr.lout/ch1.99'`; then
    echo shar: \"'doc/tr.lout/ch1.99'\" unpacked with wrong size!
  fi
  # end of 'doc/tr.lout/ch1.99'
fi
if test -f 'doc/tr.lout/ch2.00' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'doc/tr.lout/ch2.00'\"
else
  echo shar: Extracting \"'doc/tr.lout/ch2.00'\" \(73 characters\)
  sed "s/^X//" >'doc/tr.lout/ch2.00' <<'END_OF_FILE'
X@Chapter
X   @Title { Details }
X   @Tag { details }
X@Begin
X@BeginSections
END_OF_FILE
  if test 73 -ne `wc -c <'doc/tr.lout/ch2.00'`; then
    echo shar: \"'doc/tr.lout/ch2.00'\" unpacked with wrong size!
  fi
  # end of 'doc/tr.lout/ch2.00'
fi
if test -f 'doc/tr.lout/ch2.99' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'doc/tr.lout/ch2.99'\"
else
  echo shar: Extracting \"'doc/tr.lout/ch2.99'\" \(27 characters\)
  sed "s/^X//" >'doc/tr.lout/ch2.99' <<'END_OF_FILE'
X@EndSections
X@End @Chapter
END_OF_FILE
  if test 27 -ne `wc -c <'doc/tr.lout/ch2.99'`; then
    echo shar: \"'doc/tr.lout/ch2.99'\" unpacked with wrong size!
  fi
  # end of 'doc/tr.lout/ch2.99'
fi
if test -f 'doc/tr.lout/ch3.00' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'doc/tr.lout/ch3.00'\"
else
  echo shar: Extracting \"'doc/tr.lout/ch3.00'\" \(84 characters\)
  sed "s/^X//" >'doc/tr.lout/ch3.00' <<'END_OF_FILE'
X@Chapter
X   @Title { Predefined symbols }
X   @Tag { symbols }
X@Begin
X@BeginSections
END_OF_FILE
  if test 84 -ne `wc -c <'doc/tr.lout/ch3.00'`; then
    echo shar: \"'doc/tr.lout/ch3.00'\" unpacked with wrong size!
  fi
  # end of 'doc/tr.lout/ch3.00'
fi
if test -f 'doc/tr.lout/ch3.05' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'doc/tr.lout/ch3.05'\"
else
  echo shar: Extracting \"'doc/tr.lout/ch3.05'\" \(611 characters\)
  sed "s/^X//" >'doc/tr.lout/ch3.05' <<'END_OF_FILE'
X@Section
X   @Title { "@Space" }
X   @Tag { space }
X@Begin
X@PP
XThe @@Space symbol
Xspace.sym @Index { @@Space symbol }
Xchanges the value of the @Code s unit of measurement (Section
Xs.unit.space @SubIndex { and @@Space symbol }
X{@NumberOf concatenation}) within its right parameter to the value
Xgiven by the left parameter:
X@ID {
X@Code "1c @Space { a b c d }"
X}
Xhas result
X@ID {
X1c @Space { a b c d }
X}
XAs for the @@Break symbol, the left parameter of @@Space may be given
Xrelative to the enclosing @Code s unit, and it may include a gap
Xmode.  Note that the @@Font symbol also sets the @Code s unit.
X@End @Section
END_OF_FILE
  if test 611 -ne `wc -c <'doc/tr.lout/ch3.05'`; then
    echo shar: \"'doc/tr.lout/ch3.05'\" unpacked with wrong size!
  fi
  # end of 'doc/tr.lout/ch3.05'
fi
if test -f 'doc/tr.lout/ch3.09' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'doc/tr.lout/ch3.09'\"
else
  echo shar: Extracting \"'doc/tr.lout/ch3.09'\" \(642 characters\)
  sed "s/^X//" >'doc/tr.lout/ch3.09' <<'END_OF_FILE'
X@Section
X   @Title { "@HContract" and "@VContract" }
X   @Tag { hcontract }
X@Begin
X@PP
Xhcontract @Index { @@HContract symbol }
Xvcontract @Index { @@VContract symbol }
Xcontraction @Index { Contraction of object }
XThe @@HContract symbol reduces the size of its right parameter to a
Xreasonable minimum (after paragraph breaking).  For example,
X@ID @Code "5i @Wide @HContract { A |1rt B }"
Xhas result
X@ID { 5i @Wide @HContract { A |1rt B } }
Xin which the B is much closer to the A than it would otherwise have
Xbeen.  @@VContract is similar, but in a vertical direction.  See Section
X{@NumberOf size} for a more extensive discussion.
X@End @Section
END_OF_FILE
  if test 642 -ne `wc -c <'doc/tr.lout/ch3.09'`; then
    echo shar: \"'doc/tr.lout/ch3.09'\" unpacked with wrong size!
  fi
  # end of 'doc/tr.lout/ch3.09'
fi
if test -f 'doc/tr.lout/ch3.14' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'doc/tr.lout/ch3.14'\"
else
  echo shar: Extracting \"'doc/tr.lout/ch3.14'\" \(556 characters\)
  sed "s/^X//" >'doc/tr.lout/ch3.14' <<'END_OF_FILE'
X@Section
X   @Title { "@Next" }
X   @Tag { next }
X@Begin
X@PP
Xnext.sym @Index { @@Next symbol }
XThe symbol @@Next returns its parameter
Xplus one.  It is rather clever at working this out:  it hunts through
Xthe parameter from right to left, looking for a number to increment:
X@ID @Code {
X"@Next (3.99)"
X}
Xhas result {@Next (3.99)}.  If @@Next cannot find a digit inside
Xits parameter, it is an error.  Roman numerals are handled by storing
Xthem in a database, as explained in Section {@NumberOf paras};
X@@Next will not increment a Roman numeral.
X@End @Section
END_OF_FILE
  if test 556 -ne `wc -c <'doc/tr.lout/ch3.14'`; then
    echo shar: \"'doc/tr.lout/ch3.14'\" unpacked with wrong size!
  fi
  # end of 'doc/tr.lout/ch3.14'
fi
if test -f 'doc/tr.lout/ch3.99' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'doc/tr.lout/ch3.99'\"
else
  echo shar: Extracting \"'doc/tr.lout/ch3.99'\" \(27 characters\)
  sed "s/^X//" >'doc/tr.lout/ch3.99' <<'END_OF_FILE'
X@EndSections
X@End @Chapter
END_OF_FILE
  if test 27 -ne `wc -c <'doc/tr.lout/ch3.99'`; then
    echo shar: \"'doc/tr.lout/ch3.99'\" unpacked with wrong size!
  fi
  # end of 'doc/tr.lout/ch3.99'
fi
if test -f 'doc/tr.lout/ch4.99' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'doc/tr.lout/ch4.99'\"
else
  echo shar: Extracting \"'doc/tr.lout/ch4.99'\" \(27 characters\)
  sed "s/^X//" >'doc/tr.lout/ch4.99' <<'END_OF_FILE'
X@EndSections
X@End @Chapter
END_OF_FILE
  if test 27 -ne `wc -c <'doc/tr.lout/ch4.99'`; then
    echo shar: \"'doc/tr.lout/ch4.99'\" unpacked with wrong size!
  fi
  # end of 'doc/tr.lout/ch4.99'
fi
if test -f 'doc/tr.over/README' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'doc/tr.over/README'\"
else
  echo shar: Extracting \"'doc/tr.over/README'\" \(665 characters\)
  sed "s/^X//" >'doc/tr.over/README' <<'END_OF_FILE'
XDirectory lout/doc/tr.over
X
XThis directory contains the Lout source files for the
Xreport entitled `A new approach to document formatting',
Xwhich has so far been submitted to two journals without
Xsuccess.  I still think it's worth reading! To produce
Xthe report, type the command
X
X	lout setup s? > outfile.ps
X
Xin this directory.  This must be done three times to
Xcompletely resolve all cross references, although
Xthe PostScript file outfile.ps is printable after
Xthe first run.  Auxiliary files with .li and .ld
Xsuffixes will be created in this directory.  A copy
Xof the final outfile.ps is included.
X
XJeffrey H. Kingston
X15 August 1991
XReformatted 23 December 1992
END_OF_FILE
  if test 665 -ne `wc -c <'doc/tr.over/README'`; then
    echo shar: \"'doc/tr.over/README'\" unpacked with wrong size!
  fi
  # end of 'doc/tr.over/README'
fi
if test -f 'doc/tr.tab/README' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'doc/tr.tab/README'\"
else
  echo shar: Extracting \"'doc/tr.tab/README'\" \(545 characters\)
  sed "s/^X//" >'doc/tr.tab/README' <<'END_OF_FILE'
XDirectory lout/doc/tr.tab
X
XThis directory contains the Lout source files for
Xthe Tab table formatting package technical report.
XTo produce the report, type the command
X
X	lout setup s? > outfile.ps
X
Xin this directory.  This must be done three times to
Xcompletely resolve all cross references, although
Xthe PostScript file outfile.ps is printable after
Xthe first run.  Auxiliary files with .li and .ld
Xsuffixes will be created in this directory.  A copy
Xof the final outfile.ps is included.
X
XJeffrey H. Kingston
X24 September 1991
X22 December 1992
END_OF_FILE
  if test 545 -ne `wc -c <'doc/tr.tab/README'`; then
    echo shar: \"'doc/tr.tab/README'\" unpacked with wrong size!
  fi
  # end of 'doc/tr.tab/README'
fi
echo shar: End of archive 35 \(of 35\).
cp /dev/null ark35isdone
MISSING=""
for I in 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 ; do
    if test ! -f ark${I}isdone ; then
	MISSING="${MISSING} ${I}"
    fi
done
if test "${MISSING}" = "" ; then
    echo You have unpacked all 35 archives.
    rm -f ark[1-9]isdone ark[1-9][0-9]isdone
else
    echo You still must unpack the following archives:
    echo "        " ${MISSING}
fi
exit 0
exit 0 # Just in case...
