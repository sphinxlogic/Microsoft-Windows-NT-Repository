patch20   "$var{$foo'bar}" didn't scan subscript correctly
patch20   "foo"x1024 now legal without space after x
patch20   &ctime didn't handle $[ != 0
patch20   &getcap eventually dumped core in bsdcurses
patch20   &shellwords looped on bad input, and used inefficient regular exprs
patch20   ($<,$>) = ... didn't work on some architectures
patch20   -e 'cmd' no longer fails silently if /tmp runs out of space
patch20   /^stuff/ wrongly assumed an implicit $* == 1
patch20   /x{0}/ was wrongly interpreted as /x{0,}/
patch20   2. now eats the dot
patch20   <@ARGV> now notices @ARGV
patch20   @ in unpack failed too often
patch20   Configure growing-library-list bug fixed
patch20   Configure now allows optional continuation with files missing
patch20   OSF/1 support added
patch20   O_PIPE conflicted with Atari
patch20   PERLLIB now supports multiple directories
patch20   Perl now distinguishes overlapped copies from non-overlapped
patch20   SH files didn't work well with symbolic links
patch20   Tom's famous double-ended pipe opener, open2(), is now included
patch20   a splice on non-existent array elements could dump core
patch20   a2p was installed unexecutable
patch20   added ... as variant on ..
patch20   added Atari ST portability
patch20   added \W, \S and \D inside /[...]/
patch20   added explicit time_t support
patch20   alternate config.h files upgraded
patch20   an EXPR may now start with a bareword
patch20   an eval block containing a null block or statement could dump core
patch20   an expression may now start with a bareword
patch20   bcopy() and memcpy() now tested for overlap safety
patch20   better support in chat2 for multiple children
patch20   big*.pl library files upgraded
patch20   clarified debugging output for literals and double-quoted strings
patch20   clarified that DATA may only be read from main script
patch20   config.H updated to reflect more recent config.h
patch20   couldn't require . files
patch20   cray didn't give enough memory to /bin/sh
patch20   dbmclose(%array) didn't work
patch20   debugger sometimes displayed wrong source line
patch20   delete could cause %array to give too low a count of buckets filled
patch20   deleted some minor memory leaks
patch20   disabled cpp test if cppstdin not yet installed
patch20   documented PERLLIB and PERLDB
patch20   documented limit on size of regexp
patch20   documented need for 1; at the end of a required file
patch20   documented that numbers may contain underline
patch20   end of file latch not reset on reopen of STDIN
patch20   eval "1 #comment" didn't work
patch20   find.pl got confused by unreadable directories
patch20   find2perl assumed . in PATH
patch20   find2perl didn't always stat at the right time
patch20   find2perl didn't output portable startup code
patch20   fixed confusion between a *var's real name and its effective name
patch20   fixed double debug break in foreach with implicit array assignment
patch20   fixed memory leak in doube-quote interpretation
patch20   fixed memory leak on system() for vfork() machines
patch20   fixed some memory leaks in splice
patch20   form feed for formats is now specifiable via $^L
patch20   function key support added to curses.mus
patch20   g pattern modifer sometimes returned extra values
patch20   get*by* routines now return something useful in a scalar context
patch20   h_errno now accessible via $?
patch20   hash tables now split only if the memory is available to do so
patch20   hints now auto selected on uname -s as well as uname -m
patch20   if {block} {block} didn't work any more
patch20   illegal lvalue message could be followed by core dump
patch20   in a2p, do {...} while ... was missing some reconstruction code
patch20   in a2p, getline should allow variable to be array element
patch20   in a2p, made RS="" translate to $/ = "\n\n"
patch20   in a2p, now allows [ to be backslashed in pattern
patch20   in a2p, now allows numbers of the form 2.
patch20   in a2p, now warns about spurious backslashes
patch20   in a2p, simplified the filehandle model
patch20   in some cases $` and $' didn't get set by match
patch20   installperl didn't warn on failed manpage installation
patch20   isascii() may now be supplied by a library routine
patch20   join() now pre-extends target string to avoid excessive copying
patch20   m/$pattern/g didn't work
patch20   made /\$$foo/ look for literal '$foo'
patch20   makefiles now display new shift/reduce expectations
patch20   many more hints added
patch20   many more hints files added
patch20   modulus with highest bit in left operand set didn't always work
patch20   new OS/2 support
patch20   new version of newgetopt.pl
patch20   new warning for ambiguous use of unary operators
patch20   new warning for use of x with non-numeric right operand
patch20   new warning on missing $ for foreach variable
patch20   new warning on print accidentally used as function
patch20   new warning on spurious backslash
patch20   new warnings for failed use of stat operators on filenames with \n
patch20   paragraph mode now skips extra newlines automatically
patch20   pattern modifiers i and g didn't interact right
patch20   pattern modifiers i and o didn't interact right
patch20   perl - The perl programming language, Patch20
patch20   perl -P now uses location of sed determined by Configure
patch20   perldb couldn't debug file containing '-', such as STDIN designator
patch20   print $fh EXPR can now expect term rather than operator in EXPR
patch20   realloc(0, size) now does malloc in case library routines call it
patch20   relaxed requirement for semicolon at the end of a block
patch20   removed implicit int declarations on functions
patch20   running taintperl explicitly now does checks even if $< == $>
patch20   s()() and tr()()
patch20   s2p didn't output portable startup code
patch20   s2p didn't translate s/pat/\&/ or s/pat/\$/ or s/pat/\\1/ right
patch20   scalar keys %array now counts keys for you
patch20   seek(HANDLE, 0, 1) went to eof because of ancient Ultrix workaround
patch20   seekdir(), telldir() and rewinddir() now checked for independently
patch20   semantic compilation errors didn't abort execution
patch20   slice on null list in scalar context returned random value
patch20   some machines don't define ENOTSOCK in errno.h
patch20   splice with negative offset didn't work with $[ = 1
patch20   subroutines didn't localize $`, $&, $', $1 et al correctly
patch20   support added to installperl for cross-compilation
patch20   support added to pwd.pl to strip automounter crud
patch20   support for MSDOS folded into perldb.pl
patch20   termcap.pl didn't parse termcap terminal names right
patch20   the debugger made perl forget the last pattern used by //
patch20   the debugger now warns you on lines that can't set a breakpoint
patch20   the switch optimizer didn't do anything in subroutines
patch20   timelocal could loop on bad input
patch20   timelocal now calculates DST itself
patch20   tr/// now lets you say \-
patch20   tr/stuff// wasn't working right
patch20   usersub routines didn't reclaim temp values soon enough
patch20   various error messages have been clarified
patch20   wait failed when STDOUT or STDERR reopened to a pipe
patch21   patch #20, continued
patch21   perl - The perl programming language, Patch21
patch22   patch #20, continued
patch22   perl - The perl programming language, Patch22
patch23   patch #20, continued
patch23   perl - The perl programming language, Patch23
patch24   patch #20, continued
patch24   perl - The perl programming language, Patch24
patch25   patch #20, continued
patch25   perl - The perl programming language, Patch25
patch26   patch #20, continued
patch26   perl - The perl programming language, Patch26
patch27   patch #20, continued
patch27   perl - The perl programming language, Patch27
patch28   patch #20, continued
patch28   perl - The perl programming language, Patch28
patch29   patch #20, continued
patch29   perl - The perl programming language, Patch29
patch30   patch #20, continued
patch30   perl - The perl programming language, Patch30
patch31   patch #20, continued
patch31   perl - The perl programming language, Patch31
patch32   patch #20, continued
patch32   perl - The perl programming language, Patch32
patch33   patch #20, continued
patch33   perl - The perl programming language, Patch33
patch34   boneheaded typo in my_bcopy()
patch34   changed perlsh to use $/ = "\n\n"
patch34   expectterm incorrectly set to indicate start of program or block
patch34   join with null list attempted negative allocation
patch34   library files were installed without guaranteed permissions
patch34   perl - The perl programming language, Patch34
patch34   pidgone() wasn't declared right
patch34   quotes containing subscripts containing variables didn't parse right
patch34   some systems don't declare h_errno extern in header files
patch34   sprintf("%6.4s", "abcdefg") didn't print "abcd  "
patch34   tests for safe bcopy and memcpy sometimes needed libraries
