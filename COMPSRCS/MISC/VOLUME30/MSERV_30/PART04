Newsgroups: comp.sources.misc
From: jv@mh.nl (Johan Vromans)
Subject:  v30i049:  mserv-3.0 - Squirrel Mail Server Software, Part04/04
Message-ID: <1992Jun14.005925.18927@sparky.imd.sterling.com>
X-Md4-Signature: ae4ec1901b8b963730d0546e0b75f0c1
Date: Sun, 14 Jun 1992 00:59:25 GMT
Approved: kent@sparky.imd.sterling.com

Submitted-by: jv@mh.nl (Johan Vromans)
Posting-number: Volume 30, Issue 49
Archive-name: mserv-3.0/part04
Environment: Perl

#! /bin/sh
# This is a shell archive.  Remove anything before this line, then feed it
# into a shell via "sh file" or similar.  To overwrite existing files,
# type "sh file -c".
# The tool that generated this appeared in the comp.sources.unix newsgroup;
# send mail to comp-sources-unix@uunet.uu.net if you want that tool.
# Contents:  MANIFEST CRONTAB.sample do_runq.sh ixlookup.patch
#   mserv.hints mserv.notes
# Wrapped by kent@sparky on Sat Jun 13 19:46:23 1992
PATH=/bin:/usr/bin:/usr/ucb ; export PATH
echo If this archive is complete, you will see the following message:
echo '          "shar: End of archive 4 (of 4)."'
if test -f 'MANIFEST' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'MANIFEST'\"
else
  echo shar: Extracting \"'MANIFEST'\" \(362 characters\)
  sed "s/^X//" >'MANIFEST' <<'END_OF_FILE'
XREADME
XINSTALL
XMANIFEST
XCRONTAB.sample
XChangeLog
XHELP
XMakefile
Xchkconfig.pl
Xdo_report.pl
Xdo_runq.sh
Xdorequest.pl
Xdr_mail.pl
Xdr_pack.pl
Xdr_uucp.pl
Xixlookup.patch
Xmakeindex.pl
Xmlistener.pl
Xms_lock.pl
Xmserv.hints
Xmserv.notes
Xmserv_common.pl
Xmserv_config.pl
Xpr_doindex.pl
Xpr_dowork.pl
Xpr_dsearch.pl
Xpr_isearch.pl
Xprocess.pl
Xreport.pl
Xrfc822.pl
Xtestlock.pl
Xunpack.pl
END_OF_FILE
  if test 362 -ne `wc -c <'MANIFEST'`; then
    echo shar: \"'MANIFEST'\" unpacked with wrong size!
  fi
  # end of 'MANIFEST'
fi
if test -f 'CRONTAB.sample' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'CRONTAB.sample'\"
else
  echo shar: Extracting \"'CRONTAB.sample'\" \(287 characters\)
  sed "s/^X//" >'CRONTAB.sample' <<'END_OF_FILE'
X# CRONTAB -- cron entries for mail server -- @(#)@ CRONTAB.sample	1.2
X30 0,2,4,6,18,20,22 * * * /usr/local/lib/mserv/do_runq
X0 3 * * * /usr/local/lib/mserv/makeindex
X0 7 * * * /usr/local/lib/mserv/do_report -errors -since .errrun
X10 7 * * 7 /usr/local/lib/mserv/do_report -full -collect
END_OF_FILE
  if test 287 -ne `wc -c <'CRONTAB.sample'`; then
    echo shar: \"'CRONTAB.sample'\" unpacked with wrong size!
  fi
  # end of 'CRONTAB.sample'
fi
if test -f 'do_runq.sh' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'do_runq.sh'\"
else
  echo shar: Extracting \"'do_runq.sh'\" \(328 characters\)
  sed "s/^X//" >'do_runq.sh' <<'END_OF_FILE'
X#!/bin/sh
X# do_runq.sh -- run mail server queue
X# SCCS Status     : @(#)@ do_runq	1.1
X# Author          : Johan Vromans
X# Created On      : Sat May  2 14:15:16 1992
X# Last Modified By: Johan Vromans
X# Last Modified On: Sat May  2 14:16:50 1992
X# Update Count    : 1
X# Status          : OK
X
Xexec `dirname $0`/dorequest ${1+"$@"}
END_OF_FILE
  if test 328 -ne `wc -c <'do_runq.sh'`; then
    echo shar: \"'do_runq.sh'\" unpacked with wrong size!
  fi
  # end of 'do_runq.sh'
fi
if test -f 'ixlookup.patch' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'ixlookup.patch'\"
else
  echo shar: Extracting \"'ixlookup.patch'\" \(1123 characters\)
  sed "s/^X//" >'ixlookup.patch' <<'END_OF_FILE'
X# ixlookup.patch -- patch to GNU locate
X# SCCS Status     : @(#)@ ixlookup.patch	1.3
X# Author          : Johan Vromans
X# Created On      : Thu May  7 20:51:33 1992
X# Last Modified By: Johan Vromans
X# Last Modified On: Wed Jun 10 11:57:25 1992
X# Update Count    : 2
X# Status          : OK
X
XThis patch enhances GNU locate with the possibility to select a
Xdatabase using environment variable FCODES.
X
XThis patch is based on GNU find 3.5.
X
X*** /usr/local/src/find-3.5/locate/locate.c	Tue Dec 24 08:37:44 1991
X--- ixlookup.c	Wed Apr 22 13:28:51 1992
X***************
X*** 97,106 ****
X    int path_max;
X    char bigram1[128], bigram2[128];
X    int found = NO;
X  
X!   fp = fopen (FCODES, "r");
X    if (fp == NULL)
X!     error (1, errno, "%s", FCODES);
X  
X    path_max = PATH_MAX;
X    if (path_max < 1)
X--- 97,109 ----
X    int path_max;
X    char bigram1[128], bigram2[128];
X    int found = NO;
X+   char *fcodes = (char*) getenv ("LOCATE_DB");
X+   if ( fcodes == NULL )
X+     fcodes = FCODES;
X  
X!   fp = fopen (fcodes, "r");
X    if (fp == NULL)
X!     error (1, errno, "%s", fcodes);
X  
X    path_max = PATH_MAX;
X    if (path_max < 1)
END_OF_FILE
  if test 1123 -ne `wc -c <'ixlookup.patch'`; then
    echo shar: \"'ixlookup.patch'\" unpacked with wrong size!
  fi
  # end of 'ixlookup.patch'
fi
if test -f 'mserv.hints' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'mserv.hints'\"
else
  echo shar: Extracting \"'mserv.hints'\" \(410 characters\)
  sed "s/^X//" >'mserv.hints' <<'END_OF_FILE'
XYou may obtain the following packages from the server:
X
X    btoa	btoa/atob support programs
X    uudecode	uuencode/uudecode support programs
X    xxdecode	xxencode/xxdecode support programs
X    uux		Dumas' uud/uue encoding programs
X    compress	compress/uncompress support programs
X    mail-server The mail server software itself
X
XExcept for the mail-server, these packages are send unencoded, in
X"shar" format.
END_OF_FILE
  if test 410 -ne `wc -c <'mserv.hints'`; then
    echo shar: \"'mserv.hints'\" unpacked with wrong size!
  fi
  # end of 'mserv.hints'
fi
if test -f 'mserv.notes' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'mserv.notes'\"
else
  echo shar: Extracting \"'mserv.notes'\" \(181 characters\)
  sed "s/^X//" >'mserv.notes' <<'END_OF_FILE'
X*** This version of the Mail Server is still under development.
X    Things can --and will-- change in the future.
X
X>>> PLEASE DO NOT REPLY TO THIS MESSAGE -- NOONE WILL LISTEN <<<
X
END_OF_FILE
  if test 181 -ne `wc -c <'mserv.notes'`; then
    echo shar: \"'mserv.notes'\" unpacked with wrong size!
  fi
  # end of 'mserv.notes'
fi
echo shar: End of archive 4 \(of 4\).
cp /dev/null ark4isdone
MISSING=""
for I in 1 2 3 4 ; do
    if test ! -f ark${I}isdone ; then
	MISSING="${MISSING} ${I}"
    fi
done
if test "${MISSING}" = "" ; then
    echo You have unpacked all 4 archives.
    rm -f ark[1-9]isdone
else
    echo You still must unpack the following archives:
    echo "        " ${MISSING}
fi
exit 0
exit 0 # Just in case...
