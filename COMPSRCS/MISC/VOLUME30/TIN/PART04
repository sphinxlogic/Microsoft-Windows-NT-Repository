Newsgroups: comp.sources.misc
From: iain%anl433.uucp@germany.eu.net (Iain J. Lea)
Subject:  v30i004:  tin - threaded full screen newsreader, Part04/14
Message-ID: <1992May20.172322.28702@sparky.imd.sterling.com>
X-Md4-Signature: 8f14dced18ca22d0bf4e8ef69e60b962
Date: Wed, 20 May 1992 17:23:22 GMT
Approved: kent@sparky.imd.sterling.com

Submitted-by: iain%anl433.uucp@germany.eu.net (Iain J. Lea)
Posting-number: Volume 30, Issue 4
Archive-name: tin/part04
Environment: BSD, SCO, ISC, SUNOS, SYSVR3, SYSVR4, ULTRIX, XENIX
Supersedes: tin: Volume 29, Issue 19-30

#! /bin/sh
# This is a shell archive.  Remove anything before this line, then feed it
# into a shell via "sh file" or similar.  To overwrite existing files,
# type "sh file -c".
# The tool that generated this appeared in the comp.sources.unix newsgroup;
# send mail to comp-sources-unix@uunet.uu.net if you want that tool.
# Contents:  page.c tin.nrf.UU.b
# Wrapped by kent@sparky on Tue May 19 13:38:02 1992
PATH=/bin:/usr/bin:/usr/ucb ; export PATH
echo If this archive is complete, you will see the following message:
echo '          "shar: End of archive 4 (of 14)."'
if test -f 'page.c' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'page.c'\"
else
  echo shar: Extracting \"'page.c'\" \(22466 characters\)
  sed "s/^X//" >'page.c' <<'END_OF_FILE'
X/*
X *  Project   : tin - a threaded Netnews reader
X *  Module    : page.c
X *  Author    : I.Lea & R.Skrenta
X *  Created   : 01-04-91
X *  Updated   : 02-05-92
X *  Notes     :
X *  Copyright : (c) Copyright 1991-92 by Iain Lea & Rich Skrenta
X *              You may  freely  copy or  redistribute  this software,
X *              so  long as there is no profit made from its use, sale
X *              trade or  reproduction.  You may not change this copy-
X *              right notice, and it must be included in any copy made
X */
X
X#include	"tin.h"
X
Xextern int cur_groupnum;
X
Xchar note_h_path[LEN];			/* Path:	*/
Xchar note_h_date[LEN];			/* Date:	*/
Xchar note_h_subj[LEN];			/* Subject:	*/
Xchar note_h_org[LEN];			/* Organization: */
Xchar note_h_newsgroups[LEN];		/* Newsgroups:	*/
Xchar note_h_messageid[LEN];		/* Message-ID:	*/
Xchar note_h_distrib[LEN];		/* Distribution: */
Xchar note_h_followup[LEN];		/* Followup-To: */
X
Xchar *glob_page_group;
X
XFILE *note_fp;					/* the body of the current article */
X
Xint glob_respnum;
Xint last_resp;					/* current & previous article for - command */
Xint note_end;					/* we're done showing this article */
Xint note_line;
Xint note_page;					/* what page we're on */
Xint rotate;						/* 0=normal, 13=rot13 decode */
Xint this_resp;
X
Xlong note_mark[MAX_PAGES];		/* ftells on beginnings of pages */
Xlong note_size;					/* stat size in bytes of article */
X
X
Xint show_page (respnum, threadnum, group, group_path)
X	int respnum;
X	int *threadnum;		/* to allow movement in thread mode */
X	char *group;
X	char *group_path;
X{
X#ifndef INDEX_DAEMON
X
X	char ch;
X	int i, n = 0;
X	int copy_text;
X	int kill_state = NO_KILLING;
X	int old_sort_art_type = sort_art_type;
X	int old_top;
X	int posted;
X	int ret_code;
X	long old_artnum;
X	long art;
X
Xrestart:
X
X	glob_respnum = respnum;
X	glob_page_group = group;
X
X	set_signals_page ();
X	
X	if (respnum != this_resp) {	   /* remember current & previous */
X		last_resp = this_resp;	   /* articles for - command */
X		this_resp = respnum;
X	}
X
X	rotate = 0;			/* normal mode, not rot13 */
X	art = arts[respnum].artnum;
X	arts[respnum].unread = ART_READ;	/* mark article as read */
X
X	if ((note_page = art_open (art, group_path)) == ART_UNAVAILABLE) {
X		sprintf (msg, txt_art_unavailable, art);
X		error_message (msg, "");
X		return (which_thread (respnum));
X	} else {
X		show_note_page (respnum, group);
X	}
X
X	while (TRUE) {
X		ch = (char) ReadCh();
X
X		if (ch >= '0' && ch <= '9') {
X			n = prompt_response (ch, respnum);
X			if (n != -1) {
X				respnum = n;
X				goto restart;
X			}
X			continue;
X		}
X		switch (ch) {
X			case ESC:
X				switch (get_arrow_key ()) {
X					case KEYMAP_PAGE_UP:
X						goto page_up;
X
X					case KEYMAP_PAGE_DOWN:
X						goto page_down;
X
X					case KEYMAP_HOME:
X						goto begin_of_article;
X
X					case KEYMAP_END:
X						goto end_of_article;
X				}
X				break;
X
X#ifndef NO_SHELL_ESCAPE
X			case '!':
X				shell_escape ();
X				redraw_page (respnum, group);
X				break;
X#endif
X
X			case '$':	/* goto end of article */
X			case 'G':	/* 'less' compatible */
Xend_of_article:			
X				if (show_last_page ()) {
X					show_note_page (respnum, group);
X				}
X				break;
X
X			case '-':	/* show last viewed article */
X				if (last_resp < 0) {
X					info_message (txt_no_last_message);
X					break;
X				}
X				art_close ();
X				respnum = last_resp;
X				goto restart;
X
X			case '|':	/* pipe article/thread/tagged arts to command */
X				feed_articles (FEED_PIPE, PAGE_LEVEL, "Pipe", respnum, group_path);
X				break;
X
X			case '/':	/* search forwards in article */
X				if (search_article (TRUE)) {
X					show_note_page (respnum, group);
X				}
X				break;
X
X			case '<':	/* goto first article in current thread */
X				if (arts[respnum].inthread) {
X					n = which_thread (respnum);
X					if (n >= 0 && base[n] != respnum) {
X						assert (n < top_base);
X						respnum = base[n];
X						art_close ();
X						goto restart;
X					}
X				}
X				break;
X
X			case '>':	/* goto last article in current thread */
X				for (i = respnum; i >= 0; i = arts[i].thread) {
X					n = i;
X				}
X				if (n != respnum) {
X					respnum = n;
X					art_close ();
X					goto restart;
X				}
X				break;
X
X			case ' ': 			/* next page or response */
X			case ctrl('D'):		/* vi style */
X			case ctrl('V'):		/* emacs style */
Xpage_down:
X				if (note_page == ART_UNAVAILABLE) {
X					n = next_response (respnum);
X					if (n == -1) {
X						return (which_thread (respnum));
X					}
X					respnum = n;
X					goto restart;
X				} else if (note_end) {
X					art_close ();
X					n = next_response (respnum);
X					if (n == -1) {
X						return (which_thread (respnum));
X					}
X					respnum = n;
X					goto restart;
X				} else
X					show_note_page (respnum, group);
X				break;
X
X			case '\r':
X			case '\n':	/* go to start of next thread */
X				art_close ();
X				n = next_thread (respnum);
X				if (n == -1)
X					return (which_thread (respnum));
X				respnum = n;
X				goto restart;
X
X			case '\t': 	/* goto next unread article */
X#ifndef TAB_GOTO_NEXT_UNREAD
X				if (note_page == ART_UNAVAILABLE) {
X					n = next_unread (next_response (respnum));
X					if (n == -1) {
X						return (which_thread (respnum));
X					}
X					respnum = n;
X					goto restart;
X				} else if (note_end) {
X					art_close ();
X					n = next_unread (next_response (respnum));
X					if (n == -1) {
X						return (which_thread (respnum));
X					}
X					respnum = n;
X					goto restart;
X				} else {
X					show_note_page (respnum, group);
X				}	
X#else
X				if (note_page != ART_UNAVAILABLE) {
X					art_close();
X				}
X				n = next_unread (next_response (respnum));
X				if (n == -1) {
X					return (which_thread (respnum));
X				}
X				respnum = n;
X				goto restart;
X#endif
X				break;
X
X			case ctrl('H'):	/* show article headers */
X				if (note_page == ART_UNAVAILABLE) {
X					n = next_response (respnum);
X					if (n == -1)
X						return (which_thread (respnum));
X					respnum = n;
X					goto restart;
X				} else {
X					note_page = 0;
X					note_end = FALSE;
X					fseek(note_fp, 0L, 0);
X					show_note_page(respnum, group);
X				}
X				break;
X
X			case ctrl('K'):		/* kill article */
X				if (kill_art_menu (group, respnum)) {
X					i = which_thread (respnum);
X					if (kill_any_articles (group)) {
X						make_threads (FALSE);
X						find_base (show_only_unread);
X						if (i >= top_base)
X							i = top_base - 1;
X						respnum = base[i];	
X					}
X				}
X				redraw_page (respnum, group);
X				break;
X
X			case ctrl('L'):		/* redraw current page of article */
X				redraw_page (respnum, group);
X				break;
X
X			case ctrl('R'):		/* redraw beginning of article */
X			case 'g':			/* 'less' compatible */
Xbegin_of_article:			
X				if (note_page == ART_UNAVAILABLE) {
X					ClearScreen ();
X					printf (txt_art_unavailable, arts[respnum].artnum);
X					fflush (stdout);
X				} else {
X					note_page = 0;
X					note_end = FALSE;
X					fseek (note_fp, note_mark[0], 0);
X					show_note_page (respnum, group);
X				}
X				break;
X
X			case ctrl('X'):
X			case '%':
X			case 'd':	/* toggle rot-13 mode */
X				if (rotate)
X					rotate = 0;
X				else
X					rotate = 13;
X				redraw_page (respnum, group);
X				info_message (txt_toggled_rot13);
X				break;
X
X			case 'a':	/* author search forward */
X			case 'A':	/* author search backward */
X				i = (ch == 'a');
X				n = search_author (show_only_unread, respnum, i);
X				if (n < 0)
X					break;
X				respnum = n;
X				goto restart;
X				/* NOTREACHED */
X
X			case ctrl('U'):
X			case 'b':		/* back a page */
Xpage_up:
X				if (note_page == ART_UNAVAILABLE) {
X					art_close ();
X					n = prev_response (respnum);
X					if (n == -1)
X						return (which_response (respnum));
X					respnum = n;
X					goto restart;
X
X				} else {
X					if (note_page <= 1) {
X						info_message (txt_begin_of_art);
X					} else {
X						note_page -= 2;
X						note_end = FALSE;
X						fseek (note_fp, note_mark[note_page], 0);
X						show_note_page (respnum, group);
X					}
X				}
X				break;
X
X			case 'B':	/* bug/gripe/comment mailed to author */
X				mail_bug_report ();
X				redraw_page (respnum, group);
X				break;
X				
X			case 'c':	/* catchup--mark all articles as read */
X				if (!confirm_action || prompt_yn (LINES, txt_mark_all_read, 'y')) {
X					for (n = 0; n < top; n++) {
X						arts[n].unread = ART_READ;
X					}
X					fix_new_highest (cur_groupnum);
X					if (cur_groupnum + 1 < group_top) {
X						cur_groupnum++;
X					}
X					art_close ();
X					return -1;
X				}
X				break;
X
X			case 'C':	/* cancel an article */
X				if (cancel_article (group, respnum)) {
X					redraw_page (respnum, group);
X				}
X				break;
X	
X			case 'f':	/* post a followup to this article */
X			case 'F':
X				if (! can_post) {
X					info_message (txt_cannot_post);
X					break;
X				}
X				copy_text = (ch == 'f' ? FALSE : TRUE);
X				ret_code = post_response (group, respnum, copy_text);
X				redraw_page (respnum, group);
X				break;
X
X			case 'h':	/* help */
X				show_info_page (HELP_INFO, help_page, txt_art_pager_com);
X				redraw_page (respnum, group);
X				break;
X
X			case 'q':	/* return to index page */
Xreturn_to_index:
X				art_close ();
X				if (kill_state == NO_KILLING &&
X					sort_art_type != old_sort_art_type) {
X					make_threads (TRUE);
X					find_base (show_only_unread);
X				}
X				i = which_thread (respnum);
X				*threadnum = which_response (respnum);
X				if (kill_state == KILLING) {
X					old_top = top;
X					old_artnum = arts[respnum].artnum;
X					kill_any_articles (group);
X					make_threads (FALSE);
X					find_base (show_only_unread);
X					i = find_new_pos (old_top, old_artnum, i);
X				}
X				return (i);
X
X			case 'I':	/* toggle inverse video */
X				toggle_inverse_video ();
X				redraw_page (respnum, group);
X				break;
X
X			case 'k':
X				if (note_page == ART_UNAVAILABLE) {
X					n = next_unread (next_response(respnum));
X					if (n == -1)
X						return (which_thread (respnum));
X				} else {
X					art_close ();
X					n = next_unread (next_response (respnum));
X					if (n == -1)
X						return (which_thread (respnum));
X				}
X				respnum = n;
X				goto restart;
X				/* NOTREACHED */
X
X			case 'K':	/* mark rest of thread as read */
X				for (n = respnum; n >= 0; n = arts[n].thread)
X					arts[n].unread = ART_READ;
X				n = next_unread (next_response (respnum));
X				if (n == -1)
X					goto return_to_index;
X				art_close ();
X				respnum = n;
X				goto restart;
X				/* NOTREACHED */
X
X			case 'm':	/* mail article/thread/tagged articles to somebody */
X				feed_articles (FEED_MAIL, PAGE_LEVEL, "Mail", respnum, group_path);
X				break;
X
X			case 'M':	/* options menu */
X				if (change_rcfile (group, FALSE) == KILLING) {
X					kill_state = KILLING;
X				} 
X				redraw_page (respnum, group);
X			    break;
X
X			case 'n':	/* skip to next article */
X				art_close ();
X				n = next_response (respnum);
X				if (n == -1)
X					return (which_thread(respnum));
X				respnum = n;
X				goto restart;
X				/* NOTREACHED */
X				
X			case 'N':	/* next unread article */
X				n = next_unread (next_response (respnum));
X				if (n == -1)
X					info_message (txt_no_next_unread_art);
X				else {
X					art_close ();
X					respnum = n;
X					goto restart;
X				}
X				break;
X
X			case 'o':	/* output art/thread/tagged arts to printer */
X				feed_articles (FEED_PRINT, PAGE_LEVEL, "Print", respnum, group_path);
X				break;
X
X			case 'p':	/* previous article */
X				art_close ();
X				n = prev_response (respnum);
X				if (n == -1)
X					return (which_response (respnum));
X				respnum = n;
X				goto restart;
X
X			case 'P':	/* previous unread article */
X				n = prev_unread (prev_response (respnum));
X				if (n == -1)
X				    info_message (txt_no_prev_unread_art);
X				else {
X					art_close ();
X					respnum = n;
X					goto restart;
X				}
X				break;
X
X			case 'Q':	/* quit */
X				return -2;
X				break;
X	
X			case 'r':	/* reply to author through mail */
X			case 'R':
X				copy_text = (ch == 'r' ? FALSE : TRUE);
X				mail_to_author (group, respnum, copy_text);
X				redraw_page (respnum, group);
X				break;
X
X			case 's':	/* save article/thread/tagged articles */
X				feed_articles (FEED_SAVE, PAGE_LEVEL, "Save", respnum, group_path);
X				break;
X
X			case 't':	/* return to group selection page */
X				art_close ();
X				if (kill_state == KILLING) {
X					kill_any_articles (group);
X					make_threads (FALSE);
X					find_base (show_only_unread);
X				}
X				update_newsrc (group, my_group[cur_groupnum], FALSE);
X				fix_new_highest (cur_groupnum);
X				return -1;
X
X			case 'T':	/* tag/untag article for saving */
X				if (arts[respnum].tagged) {
X					arts[respnum].tagged = 0;
X					info_message (txt_untagged_art);
X				} else {
X					arts[respnum].tagged = ++num_of_tagged_arts;
X					info_message (txt_tagged_art);
X				}
X				break;
X
X			case 'v':
X				info_message (cvers);
X				break;
X
X			case 'w':	/* post a basenote */
X				if (! can_post) {
X					info_message (txt_cannot_post);
X					break;
X				}
X				if (post_base (group, &posted)) {
X					redraw_page (respnum, group);
X				}
X				break;
X
X			case 'W':	/* display messages posted by user */
X				if (user_posted_messages ()) {
X					redraw_page (respnum, group);
X				}
X				break;
X
X			case 'x':	/* crosspost current article */
X				feed_articles (FEED_XPOST, PAGE_LEVEL, "Crosspost", respnum, group_path);
X				break;
X
X			case 'z':	/* mark article as unread (to return) */
X				arts[respnum].unread = ART_WILL_RETURN;
X				info_message (txt_art_marked_as_unread);
X				break;
X
X			default:
X			    info_message(txt_bad_command);
X		}
X	}
X
X#endif /* INDEX_DAEMON */
X}
X
X
Xvoid redraw_page (respnum, group)
X	int respnum;
X	char *group;
X{
X	if (note_page == ART_UNAVAILABLE) {
X		ClearScreen ();
X		printf (txt_art_unavailable, arts[respnum].artnum);
X		fflush (stdout);
X	} else if (note_page > 0) {
X		note_page--;
X		fseek (note_fp, note_mark[note_page], 0);
X		show_note_page (respnum, group);
X	}
X}
X
X
Xvoid show_note_page (respnum, group)
X	int respnum;
X	char *group;
X{
X#ifndef INDEX_DAEMON
X
X	char buf[LEN];
X	char buf2[LEN+50];
X	char *p, *q;
X	int i, j;
X	int ctrl_L;		/* form feed character detected */
X	long tmp_pos;
X
X	ClearScreen ();
X
X	note_line = 1;
X
X	if (note_size == 0L) {
X		tmp_pos = ftell (note_fp);
X		fseek (note_fp, 0L, 2);			/* goto end of article */
X		note_size = ftell (note_fp);
X		fseek (note_fp, tmp_pos, 0);	/* goto old position */
X	}
X	
X	if (note_page == 0)
X		show_first_header (respnum, group);
X	else
X		show_cont_header (respnum);
X
X	ctrl_L = FALSE;
X	while (note_line < LINES) {
X		if (fgets (buf, sizeof (buf), note_fp) == NULL) {
X			note_end = TRUE;
X			break;
X		}
X
X		buf[LEN-1] = '\0';
X		if (rotate)
X			for (p = buf, q = buf2; *p && *p != '\n' && q < &buf2[LEN]; p++) {
X				if (*p == '\b' && q > buf2) {
X					q--;
X				} else if (*p == 12) {		/* ^L */
X					*q++ = '^';
X					*q++ = 'L';
X					ctrl_L = TRUE;
X				} else if (*p == '\t') {
X					i = q - buf2;
X					j = (i|7) + 1;
X
X					while (i++ < j)
X						*q++ = ' ';
X				} else if (((*p) & 0xFF) < ' ') {
X					*q++ = '^';
X					*q++ = ((*p) & 0xFF) + '@';
X				} else if (*p >= 'A' && *p <= 'Z')
X					*q++ = 'A' + (*p - 'A' + rotate) % 26;
X				else if (*p >= 'a' && *p <= 'z')
X					*q++ = 'a' + (*p - 'a' + rotate) % 26;
X				else
X					*q++ = *p;
X			}
X		else
X			for (p = buf, q = buf2; *p && *p != '\n' && q < &buf2[LEN]; p++) {
X				if (*p == '\b' && q > buf2) {
X					q--;
X				} else if (*p == 12) {		/* ^L */
X					*q++ = '^';
X					*q++ = 'L';
X					ctrl_L = TRUE;
X				} else if (*p == '\t') {
X					i = q - buf2;
X					j = (i|7) + 1;
X
X					while (i++ < j)
X						*q++ = ' ';
X				} else if (((*p) & 0xFF) < ' ') {
X					*q++ = '^';
X					*q++ = ((*p) & 0xFF) + '@';
X				} else
X					*q++ = *p;
X			}
X
X		*q = '\0';
X
X		printf("%s\r\n", buf2);
X
X		note_line += ((int) strlen (buf2) / COLS) + 1;
X
X		if (ctrl_L) {
X			break;
X		}
X	}
X
X	note_mark[++note_page] = ftell (note_fp);
X
X	if (note_mark[note_page] == note_size) {
X		note_end = TRUE;
X	}
X
X	if (note_end) {
X		MoveCursor (LINES, MORE_POS-(5+BLANK_PAGE_COLS));
X		StartInverse ();	
X		if (arts[respnum].thread != -1) {
X			fputs (txt_next_resp, stdout);
X			fflush (stdout);
X		} else {
X			fputs (txt_last_resp, stdout);
X			fflush (stdout);
X		}
X		EndInverse ();
X	} else {
X		if (note_size > 0) {
X			draw_percent_mark ((int) note_mark[note_page], (int) note_size);
X		} else {
X			MoveCursor (LINES, MORE_POS-BLANK_PAGE_COLS);
X			StartInverse ();	
X			fputs (txt_more, stdout);
X			fflush (stdout);
X			EndInverse ();
X		}
X	}
X	MoveCursor (LINES, 0);
X
X#endif /* INDEX_DAEMON */
X}
X
X
Xvoid show_first_header (respnum, group)
X	int respnum;
X	char *group;
X{
X	int whichresp;
X	int x_resp;
X	char buf[LEN];
X	char tmp[LEN];
X	int pos, i;
X	int n;
X
X	whichresp = which_response (respnum);
X	x_resp = num_of_responses (which_thread (respnum));
X
X	ClearScreen ();
X
X	strcpy (buf, note_h_date);
X	pos = (COLS - (int) strlen (group)) / 2;
X	for (i = strlen(buf); i < pos; i++)
X		buf[i] = ' ';
X	buf[i] = '\0';
X
X	strcat (buf, group);
X
X	for (i = strlen(buf); i < RIGHT_POS ; i++)
X		buf[i] = ' ';
X	buf[i] = '\0';
X
X	printf (txt_thread_x_of_n, buf, which_thread (respnum) + 1, top_base);
X
X	sprintf (buf, txt_art, arts[respnum].artnum);
X	n = strlen (buf);
X	fputs (buf, stdout);
X
X	strcpy (buf, note_h_subj);
X	buf[RIGHT_POS - 5 - n] = '\0';
X
X	pos = ((COLS - (int) strlen (buf)) / 2) - 2;
X
X	if (pos > n) {
X		MoveCursor (1, pos);
X	} else {
X		MoveCursor (1, n);
X	}
X
X	StartInverse ();
X	fputs (buf, stdout);
X	EndInverse ();
X
X	MoveCursor (1, RIGHT_POS);
X	if (whichresp)
X		printf (txt_resp_x_of_n, whichresp, x_resp);
X	else {
X		if (x_resp == 0)
X			fputs (txt_no_resp, stdout);
X		else if (x_resp == 1)
X			fputs (txt_1_resp, stdout);
X		else
X			printf (txt_x_resp, x_resp);
X	}
X
X	if (*note_h_org) {
X		if (strcmp (arts[respnum].from, arts[respnum].name) == 0) {
X			strcpy (tmp, note_h_org);
X		} else {
X			sprintf (tmp, txt_s_at_s, arts[respnum].name, note_h_org);
X		}
X	} else {
X		strcpy (tmp, arts[respnum].name);
X	}
X
X	tmp[LEN-1] = '\0';
X
X	sprintf (buf, "%s  ", arts[respnum].from);
X
X	pos = COLS - 1 - (int) strlen(tmp);
X	if ((int) strlen (buf) + (int) strlen (tmp) >= COLS - 1) {
X		strncat (buf, tmp, COLS - 1 - (int) strlen(buf));
X		buf[COLS-1] = '\0';
X	} else {
X		for (i = strlen(buf); i < pos; i++)
X			buf[i] = ' ';
X		buf[i] = '\0';
X		strcat (buf, tmp);
X	}
X	printf ("%s\r\n\r\n", buf);
X
X	note_line += 4;
X}
X
X
Xvoid show_cont_header (respnum)
X	int respnum;
X{
X	int whichresp;
X	int whichbase;
X	char buf[LEN];
X
X	whichresp = which_response (respnum);
X	whichbase = which_thread (respnum);
X
X	assert (whichbase < top_base);
X
X	if (whichresp)
X		sprintf(buf, txt_thread_resp_page,
X			whichbase + 1,
X			top_base,
X			whichresp,
X			note_page + 1,
X			note_h_subj);
X	else
X		sprintf(buf, txt_thread_page,
X			whichbase + 1,
X			top_base,
X			note_page + 1,
X			note_h_subj);
X
X	buf[COLS-1] = '\0';
X	printf("%s\r\n\r\n", buf);
X
X	note_line += 2;
X}
X
X
Xint art_open (art, group_path)
X	long art;
X	char *group_path;
X{
X	char buf[1025];
X	char *p;
X
X	note_page = 0;
X
X	art_close ();	/* just in case */
X
X	if ((note_fp = open_art_fp (group_path, art)) == NULL) {
X		return (ART_UNAVAILABLE);
X	}
X
X	note_h_path[0] = '\0';
X	note_h_subj[0] = '\0';
X	note_h_org[0] = '\0';
X	note_h_date[0] = '\0';
X	note_h_newsgroups[0] = '\0';
X	note_h_messageid[0] = '\0';
X	note_h_distrib[0] = '\0';
X	note_h_followup[0] = '\0';
X
X	while (fgets(buf, sizeof buf, note_fp) != NULL) {
X		buf[1024] = '\0';
X
X		for (p=buf ; *p && *p != '\n' ; p++) {
X			if (((*p) & 0xFF) < ' ')
X				*p = ' ';
X		}
X		*p = '\0';
X		
X		if (*buf == '\0')
X			break;
X
X  		if (match_header (buf, "Path", note_h_path, LEN))
X  			continue;
X  		if (match_header (buf, "Subject", note_h_subj, LEN))
X  			continue;
X  		if (match_header (buf, "Organization", note_h_org, LEN))
X  			continue;
X  		if (match_header (buf, "Date", note_h_date, LEN))
X  			continue;
X  		if (match_header (buf, "Newsgroups", note_h_newsgroups, LEN))
X  			continue;
X  		if (match_header (buf, "Message-ID", note_h_messageid, LEN))
X  			continue;
X  		if (match_header (buf, "Message-Id", note_h_messageid, LEN))
X  			continue;
X  		if (match_header (buf, "Distribution", note_h_distrib, LEN))
X  			continue;
X  		if (match_header (buf, "Followup-To", note_h_followup, LEN))
X  			continue;
X	}
X
X	note_mark[0] = ftell (note_fp);
X	note_end = FALSE;
X
X	return (0);
X}
X
X
Xvoid art_close ()
X{
X	if (note_fp && note_page != ART_UNAVAILABLE) {
X		fclose (note_fp);
X		note_fp = (FILE *) 0;
X	}
X}
X
X
Xint prompt_response (ch, respnum)
X	int ch;
X	int respnum;
X{
X	int num;
X
X	clear_message ();
X
X	if ((num = prompt_num (ch, txt_read_resp)) == -1) {
X		clear_message ();
X		return -1;
X	}
X
X	return choose_response (which_thread (respnum), num);
X}
X
X
Xvoid yank_to_addr (orig, addr)
X	char *orig;
X	char *addr;
X{
X	char *p;
X
X	for (p = orig; *p; p++)
X		if (((*p) & 0xFF) < ' ')
X			*p = ' ';
X
X	while (*addr)
X		addr++;
X
X	while (*orig) {
X		while (*orig && (*orig == ' ' || *orig == '"' || *orig == ','))
X			orig++;
X		*addr++ = ' ';
X		while (*orig && (*orig != ' ' && *orig != ',' && *orig != '"'))
X			*addr++ = *orig++;
X		while (*orig && (*orig == ' ' || *orig == '"' || *orig == ','))
X			orig++;
X		if (*orig == '(') {
X			while (*orig && *orig != ')')
X				orig++;
X			if (*orig == ')')
X				orig++;
X		}
X	}
X	*addr = '\0';
X}
X
X
Xint show_last_page ()
X{
X	char buf[LEN];
X	char buf2[LEN+50];
X	char *p, *q;
X	int ctrl_L;		/* form feed character detected */
X	int i, j;
X	long tmp_pos;
X	
X	if (note_end) {
X		return FALSE;
X	}
X
X	if (note_size == 0L) {
X		tmp_pos = ftell (note_fp);
X		fseek (note_fp, 0L, 2);			/* goto end of article */
X		note_size = ftell (note_fp);
X		fseek (note_fp, tmp_pos, 0);	/* goto old position */
X	}
X
X	while (! note_end) {
X		note_line = 1;
X		ctrl_L = FALSE;
X
X		if (note_page == 0) {
X			note_line += 4;
X		} else {
X			note_line += 2;
X		}
X		while (note_line < LINES) {
X			if (fgets (buf, sizeof buf, note_fp) == NULL) {
X				note_end = TRUE;
X				break;
X			}
X			buf[LEN-1] = '\0';
X			for (p = buf, q = buf2;	*p && *p != '\n' && q<&buf2[LEN]; p++) {
X				if (*p == '\b' && q > buf2) {
X					q--;
X				} else if (*p == 12) {		/* ^L */
X					*q++ = '^';
X					*q++ = 'L';
X					ctrl_L = TRUE;
X				} else if (*p == '\t') {
X					i = q - buf2;
X					j = (i|7) + 1;
X
X					while (i++ < j) {
X						*q++ = ' ';
X					}
X				} else if (((*p) & 0xFF) < ' ') {
X					*q++ = '^';
X					*q++ = ((*p) & 0xFF) + '@';
X				} else {
X					*q++ = *p;
X				}
X			}
X			*q = '\0';
X			note_line += ((int) strlen (buf2) / COLS) + 1;
X
X			if (ctrl_L) {
X				break;
X			}
X		}
X		if (note_mark[note_page] == note_size) {
X			note_end = TRUE;
X			note_page--;
X			break;
X		} else if (! note_end) {
X			note_mark[++note_page] = ftell(note_fp);
X		}
X	}
X	fseek (note_fp, note_mark[note_page], 0);
X	return TRUE;
X}
X
X
Xint match_header (buf, pat, body, len)
X	char *buf;
X	char *pat;
X	char *body;
X	int	len;
X{
X	int	plen = strlen (pat);
X
X	if(strncmp (buf, pat, plen) == 0 && buf[plen] == ':' && buf[plen + 1] == ' ') {
X		plen += 2;
X		while (buf[plen] == ' ')
X			plen++;
X		strncpy (body, &buf[plen], len);
X		body[len - 1] = '\0';
X		return TRUE;
X	}
X	return FALSE;
X}
END_OF_FILE
  if test 22466 -ne `wc -c <'page.c'`; then
    echo shar: \"'page.c'\" unpacked with wrong size!
  fi
  # end of 'page.c'
fi
if test -f 'tin.nrf.UU.b' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'tin.nrf.UU.b'\"
else
  echo shar: Extracting \"'tin.nrf.UU.b'\" \(29300 characters\)
  sed "s/^X//" >'tin.nrf.UU.b' <<'END_OF_FILE'
XM(&-U<G)E;G0@=&AR96%D+@H*3PA/4 A05 A420A)3PA/3@A.4PA3($T(344(
XM14X(3E4(50H@(" @(%1H:7,@;65N=2!I<R!A8V-E<W-E9"!B>2!P<F5S<VEN
XM9R G32<@870@86QL(&QE=F5L<RX@270@86QL;W=S('1H90H@(" @('5S97(@
XM=&\@8W5S=&]M:7IE('1H92!B96AA=FEO=7(@;V8@=&EN+B!4:&4@;W!T:6]N
XM<R!A<F4@<V%V960@=&\*(" @("!T:&4@9FEL92 D7PA(7PA/7PA-7PA%+RY?
XM"'1?"&E?"&XO7PAT7PAI7PAN7PAR7PAC+B!5<V4@/%-004-%/B!T;R!T;V=G
XM;&4@=&AE(')E<75I<F5D"B @(" @;W!T:6]N(&%N9" \0U(^('1O('-E="X*
XM"B @(" @00A!=0AU= AT;PAO(',(<V$(878(=F4(90H*"@H*,3(@(" @(" @
XM(" @(" @(" @(" @(" @(" @(" @4F5L96%S92 T+C%2(" @(" @(" @(" @
XM(" @(" @(" @("!.15=3+4]3"@H*"@H*5$E.*#$I(" @(" @(" @(" @(" @
XM(" @(" @(" @(" @3$]#04P@(" @(" @(" @(" @(" @(" @(" @(" @(" @
XM5$E.*#$I"@H*"B @(" @(" @($%U=&]M871I8V%L;'D@<V%V92!A<G1I8VQE
XM<R]T:')E861S(&)Y($%R8VAI=F4M;F%M93H@;&EN92!I;@H@(" @(" @("!A
XM<G1I8VQE(&AE861E<B!A;F0@<&]S="!P<F]C97-S('1H96T@:68@<')O8V5S
XM<R!T>7!E(&ES(&YO="!S970*(" @(" @(" @=&\@3F]N92X*"B @(" @10A%
XM9 AD:0AI= AT;PAO<@AR(&\(;V8(9F8(9G,(<V4(970(= H@(" @(" @("!3
XM970@3TX@:68@=&AE(&5D:71O<B!U<V5D(&9O<B!P;W-T:6YG+"!F;VQL;W<M
XM=7!S(&%N9"!B=6<*(" @(" @(" @<F5P;W)T<R!H87,@=&AE(&-A<&%B:6QI
XM='D@;V8@<W1A<G1I;F<@86YD('!O<VET:6]N:6YG('1H90H@(" @(" @("!C
XM=7)S;W(@870@82!S<&5C:69I960@;&EN92!W:71H:6X@82!F:6QE+@H*(" @
XM("!-"$UA"&%R"')K"&L@<PAS80AA=@AV90AE9 AD('((<F4(96$(860(9 H@
XM(" @(" @("!!;&QO=W,@<V%V960@87)T:6-L97,O=&AR96%D<R!T;R!B92!A
XM=71O;6%T:6-A;&QY(&UA<FME9"!A<PH@(" @(" @("!R96%D+@H*(" @("!#
XM"$-O"&]N"&YF"&9I"&ER"')M"&T@0PA#;PAO;0AM;0AM80AA;@AN9 AD"B @
XM(" @(" @($%L;&]W<R!C97)T86EN(&-O;6UA;F1S("AI92X@)V,G(&-A=&-H
XM=7 I('1H870@<F5Q=6ER92!U<V5R"B @(" @(" @(&-O;F9I<FUA=&EO;B!T
XM;R!B92!E>&5C=71E9"!I;6UE9&EA=&5L>2!I9B!S970@3T9&+@H*(" @("!$
XM"$1R"')A"&%W"'<@80AA<@AR<@AR;PAO=PAW"B @(" @(" @($%L;&]W<R!G
XM<F]U<',O87)T:6-L97,@=&\@8F4@<V5L96-T960@8GD@86X@87)R;W<@)RT^
XM)R!I9B!S970*(" @(" @(" @3TX@;W(@8GD@86X@:&EG:&QI9VAT960@8F%R
XM(&EF('-E="!/1D8N"@H@(" @(% (4'((<FD(:6X(;G0(="!H"&AE"&5A"&%D
XM"&1E"&5R"'(*(" @(" @(" @5&AI<R!A;&QO=W,@=&AE(&-O;7!L971E(&UA
XM:6P@:&5A9&5R(&]R(&]N;'D@=&AE(%-I=6)J96-T.B!A;F0*(" @(" @(" @
XM1G)O;3H@9FEE;&1S('1O(&)E(&]U='!U="!W:&5N('!R:6YT:6YG(&%R=&EC
XM;&5S+@H*(" @("!'"$=O"&]T"'1O"&\@,0@Q<PAS= AT('4(=6X(;G((<F4(
XM96$(860(9 H@(" @(" @("!4:&ES(&%L;&]W<R!T:&4@8W5R<V]R('1O(&)E
XM('!L86-E9"!A="!T:&4@9FER<W0@+R!L87-T('5N<F5A9 H@(" @(" @("!A
XM<G1I8VQE('5P;VX@96YT97)I;F<@82!N97=S9W)O=7 @=VET:"!U;G)E860@
XM;F5W<RX*"B @(" @4PA38PAC<@AR;PAO; AL; AL(&8(9G4(=6P(;&P(;"!P
XM"'!A"&%G"&=E"&4*(" @(" @(" @268@<V5T($].('-C<F]L;&EN9R!O9B!G
XM<F]U<',O87)T:6-L97,@=VEL;"!B92!A(&9U;&P@<&%G92!A="!A"B @(" @
XM(" @('1I;64L(&]T:&5R=VES92!H86QF(&$@<&%G92!A="!A('1I;64N"@H@
XM(" @($,(0V$(870(=&,(8V@(:'4(=7 (<"!O"&]N"&X@<0AQ=0AU:0AI= AT
XM"B @(" @(" @($EF('-E="!/3B!T:&4@=7-E<B!I<R!A<VME9"!W:&5N('%U
XM:71T:6YG(&EF(&%L;"!G<F]U<',@<F5A9 H@(" @(" @("!D=7)I;F<@=&AE
XM(&-U<G)E;G0@<V5S<VEO;B!S:&]U;&0@8F4@;6%R:V5D(')E860N"@H@(" @
XM(%0(5&@(:'((<F4(96$(860(9"!A"&%R"')T"'1I"&EC"&-L"&QE"&5S"',*
XM(" @(" @(" @268@<V5T($].(&%R=&EC;&5S('=I;&P@8F4@=&AR96%D960@
XM:6X@86QL(&=R;W5P<R H9&5F875L="DL"B @(" @(" @(&]T:&5R=VES92!A
XM<G1I8VQE<R!W:6QL(&)E('-H;W=N('5N=&AR96%D960N($EF('-E="!/3B!B
XM=70*(" @(" @(" @8V5R=&%I;B!U<V5R('-P96-I9FEE9"!G<F]U<',@87)E
XM(&EN("1?"$A?"$]?"$U?"$4O+E\(=%\(:5\(;B]?"'5?"&Y?"'1?"&A?"')?
XM"&5?"&%?"&0L('1H90H@(" @(" @("!S<&5C:69I960@9W)O=7!S('=I;&P@
XM8F4@=6YT:')E861E9"!A;F0@=&AE(')E<W0@=VEL;"!B90H@(" @(" @("!T
XM:')E861E9"X*"B @(" @4PA3: AH;PAO=PAW(&\(;VX(;FP(;'D(>2!U"'5N
XM"&YR"')E"&5A"&%D"&0*(" @(" @(" @268@<V5T($].('-H;W<@;VYL>2!N
XM97<O=6YR96%D(&%R=&EC;&5S+"!O=&AE<G=I<V4@<VAO=R!A;&P*(" @(" @
XM(" @87)T:6-L97,N"@H@(" @(%,(4V@(:&\(;W<(=R!!"$%U"'5T"'1H"&AO
XM"&]R"'(*(" @(" @(" @268@<V5T("=.;VYE)R!O;FQY('1H92!3=6)J96-T
XM.B!L:6YE('=I;&P@8F4@9&ES<&QA>65D+B!)9B!S970*(" @(" @(" @)T%D
XM9'(G(%-U8FIE8W0Z(&QI;F4@)B!T:&4@861D<F5S<R!P87)T(&]F('1H92!&
XM<F]M.B!L:6YE(&%R90H@(" @(" @("!D:7-P;&%Y960N($EF('-E=" G3F%M
XM92<@4W5B:F5C=#H@;&EN92 F('1H92!A=71H;W)S(&9U;&P@;F%M90H*"@H*
XM3D574RU/4R @(" @(" @(" @(" @(" @(" @(" @4F5L96%S92 T+C%2(" @
XM(" @(" @(" @(" @(" @(" @(" @(" @(#$S"@H*"@H*5$E.*#$I(" @(" @
XM(" @(" @(" @(" @(" @(" @(" @3$]#04P@(" @(" @(" @(" @(" @(" @
XM(" @(" @(" @5$E.*#$I"@H*"B @(" @(" @('!A<G0@;V8@=&AE($9R;VTZ
XM(&QI;F4@87)E(&1I<W!L87EE9"X@268@<V5T("=";W1H)R!3=6)J96-T.@H@
XM(" @(" @("!L:6YE("8@86QL(&]F('1H92!&<F]M.B!L:6YE(&%R92!D:7-P
XM;&%Y960N"@H@(" @(% (4'((<F\(;V,(8V4(97,(<W,(<R!T"'1Y"'EP"'!E
XM"&4*(" @(" @(" @5&AI<R!S<&5C:69I97,@=&AE(&1E9F%U;'0@='EP92!O
XM9B!P;W-T('!R;V-E<W-I;F<@=&\@<&5R9F]R;0H@(" @(" @("!O;B!S879E
XM9"!A<G1I8VQE<RX@5&AE(&9O;&QO=VEN9R!T>7!E<R!O9B!P<F]C97-S:6YG
XM(&%R90H@(" @(" @("!A;&QO=V5D.@H@(" @(" @(" @(" @+6YO;F4N"B @
XM(" @(" @(" @(" M=6YP86-K:6YG(&]F(&UU;'1I+7!A<G0@<VAE;&P@87)C
XM:&EV97,N"B @(" @(" @(" @(" M=6YP86-K:6YG(&]F(&UU;'1I+7!A<G0@
XM=75E;F-O9&5D(&9I;&5S+@H@(" @(" @(" @(" @+75N<&%C:VEN9R!O9B!M
XM=6QT:2UP87)T('5U96YC;V1E9"!F:6QE<R!T:&%T('!R;V1U8V4@80H@(" @
XM(" @(" @(" @("HN>F]O(&%R8VAI=F4@=VAO<V4@8V]N=&5N=',@:7,@;&ES
XM=&5D+@H@(" @(" @(" @(" @+75N<&%C:VEN9R!O9B!M=6QT:2UP87)T('5U
XM96YC;V1E9"!F:6QE<R!T:&%T('!R;V1U8V4@80H@(" @(" @(" @(" @("HN
XM>F]O(&%R8VAI=F4@=VAO<V4@8V]N=&5N=',@:7,@97AT<F%C=&5D+@H*(" @
XM("!3"%-O"&]R"')T"'0@80AA<@AR= AT:0AI8PAC; AL90AE<PAS(&((8GD(
XM>0H@(" @(" @("!4:&ES('-P96-I9FEE<R!H;W<@87)T:6-L97,@<VAO=6QD
XM(&)E('-O<G1E9"X@5&AE(&9O;&QO=VEN9PH@(" @(" @("!S;W)T('1Y<&5S
XM(&%R92!A;&QO=V5D.@H@(" @(" @(" @(" @+61O;B=T('-O<G0@87)T:6-L
XM97,@*&1E9F%U;'0I+@H@(" @(" @(" @(" @+7-O<G0@87)T:6-L97,@8GD@
XM4W5B:F5C=#H@9FEE;&0@*&%S8V5N9&EN9R F(&1E<V-E;F1I;F<I+@H@(" @
XM(" @(" @(" @+7-O<G0@87)T:6-L97,@8GD@1G)O;3H@9FEE;&0@*&%S8V5N
XM9&EN9R F(&1E<V-E;F1I;F<I+@H@(" @(" @(" @(" @+7-O<G0@87)T:6-L
XM97,@8GD@1&%T93H@9FEE;&0@*&%S8V5N9&EN9R F(&1E<V-E;F1I;F<I+@H*
XM(" @("!3"%-A"&%V"'9E"&4@9 AD:0AI<@AR90AE8PAC= AT;PAO<@AR>0AY
XM"B @(" @(" @(%1H92!D:7)E8W1O<GD@=VAE<F4@87)T:6-L97,O=&AR96%D
XM<R!A<F4@=&\@8F4@<V%V960N($1E9F%U;'0*(" @(" @(" @:7,@)%\(2%\(
XM3U\(35\(12]?"$Y?"&5?"'=?"',N"@H@(" @($T(36$(86D(:6P(;"!D"&1I
XM"&ER"')E"&5C"&-T"'1O"&]R"')Y"'D*(" @(" @(" @5&AE(&1I<F5C=&]R
XM>2!W:&5R92!A<G1I8VQE<R]T:')E861S(&%R92!T;R!B92!S879E9"!I;B!M
XM86EL8F]X"B @(" @(" @(&9O<FUA="X@(%1H:7,@9F5A='5R92!I<R!M86EN
XM;'D@9F]R('5S92!W:71H('1H92!%;&T@;6%I; H@(" @(" @("!P<F]G<F%M
XM+B!)="!A;&QO=W,@=&AE('5S97(@=&\@<V%V92!A<G1I8VQE<R]T:')E861S
XM+V=R;W5P<PH@(" @(" @("!S:6UP;'D@8GD@9VEV:6YG("<])R!A<R!T:&4@
XM9FEL96YA;64@=&\@<V%V92!T;RX*"B @(" @4 A0<@AR:0AI;@AN= AT90AE
XM<@AR"B @(" @(" @(%1H92!P<FEN=&5R('!R;V=R86T@=VET:"!O<'1I;VYS
XM('1H870@:7,@=&\@8F4@=7-E9"!T;R!P<FEN= H@(" @(" @("!A<G1I8VQE
XM<RX@1&5F875L="!I<R!L<'(@9F]R($)31"!M86-H:6YE<R!A;F0@;' @9F]R
XM(%-Y<U8*(" @(" @(" @;6%C:&EN97,N"@I+"$M)"$E,"$Q,"$P@00A!4@A2
XM5 A420A)0PA#3 A,10A%($T(344(14X(3E4(50H@(" @(%1H:7,@;65N=2!I
XM<R!A8V-E<W-E9"!B>2!P<F5S<VEN9R G7DLG(&%T('1H92!G<F]U<"!A;F0@
XM<&%G90H@(" @(&QE=F5L<RX@270@86QL;W=S('1H92!U<V5R('1O(&MI;&P@
XM86X@87)T:6-L92!T:&%T(&UA=&-H97,@=&AE"B @(" @8W5R<F5N="!3=6)J
XM96-T.B!L:6YE+"!&<F]M.B!L:6YE(&]R(&$@<W1R:6YG(&5N=&5R960@8GD@
XM=&AE('5S97(N"B @(" @5&AE('5S97(@96YT97)E9"!S=')I;F<@8V%N(&)E
XM(&%P<&QI960@=&\@=&AE(%-U8FIE8W0Z(&]R($9R;VTZ"B @(" @;&EN97,@
XM;V8@86X@87)T:6-L92X@5&AE(&MI;&P@9&5S8W)I<'1I;VX@8V%N(&)E(&QI
XM;6ET960@=&\@=&AE"B @(" @8W5R<F5N="!N97=S9W)O=7 @;W(@:70@8V%N
XM(&%P<&QY('1O(&%L;"!N97=S9W)O=7!S+B @3VYC92!E;G1E<F5D"B @(" @
XM=&AE('5S97(@8V%N(&%B;W)T('1H92!C;VUM86YD(&%N9"!N;W0@<V%V92!T
XM:&4@:VEL;"!D97-C<FEP=&EO;BP*(" @("!E9&ET('1H92!K:6QL(&9I;&4@
XM;W(@<V%V92!T:&4@:VEL;"!D97-C<FEP=&EO;BX*"B @(" @3VX@<W1A<G1I
XM;F<@=&EN('1H92!U<V5R<R!K:6QL9FEL92 D7PA(7PA/7PA-7PA%+RY?"'1?
XM"&E?"&XO7PAK7PAI7PAL7PAL(&ES(')E860@86YD(&]N"B @(" @96YT97)I
XM;F<@82!N97=S9W)O=7 @86YY(&MI;&P@9&5S8W)I<'1I;VYS(&%R92!A<'!L
XM:65D+B!!<G1I8VQE<PH@(" @('1H870@;6%T8V@@82!K:6QL(&1E<V-R:7!T
XM:6]N(&%R92!M87)K960@:VEL;&5D(&%N9"!A<F4@;F]T"B @(" @9&ES<&QA
XM>65D+@H*"@H*,30@(" @(" @(" @(" @(" @(" @(" @(" @(" @4F5L96%S
XM92 T+C%2(" @(" @(" @(" @(" @(" @(" @("!.15=3+4]3"@H*"@H*5$E.
XM*#$I(" @(" @(" @(" @(" @(" @(" @(" @(" @3$]#04P@(" @(" @(" @
XM(" @(" @(" @(" @(" @(" @5$E.*#$I"@H*"E (4$\(3U,(4U0(5$D(24X(
XM3D<(1R!!"$%2"%)4"%1)"$E#"$-,"$Q%"$53"%,*(" @("!4:6X@86QL;W=S
XM('!O<W1I;F<@;V8@87)T:6-L97,L(&9O;&QO=RUU<"!T;R!A;')E861Y('!O
XM<W1E9 H@(" @(&%R=&EC;&5S(&%N9"!R97!L>6EN9R!D:7)E8W0@=&AR;W5G
XM:"!M86EL('1O('1H92!A=71H;W(@;V8@86X*(" @("!A<G1I8VQE+@H*(" @
XM("!5<V4@=&AE("=W)R!C;VUM86YD('1O('!O<W0@86X@87)T:6-L92!T;R!A
XM(&YE=W-G<F]U<"X@069T97(*(" @("!E;G1E<FEN9R!T:&4@<&]S="!S=6)J
XM96-T('1H92!D969A=6QT(&5D:71O<B H:64N('9I*2!O<B!T:&4@961I=&]R
XM"B @(" @<W!E8VEF:65D(&)Y('1H92 D5DE354%,(&5N=FER;VYM96YT('9A
XM<FEA8FQE('=I;&P@8F4@<W1A<G1E9"!A;F0*(" @("!T:&4@87)T:6-L92!C
XM86X@8F4@96YT97)E9"X@5&\@8W)O<W-P;W-T(&%R=&EC;&5S('-I;7!L>2!A
XM9&0@80H@(" @(&-O;6UA(&%N9"!T:&4@;F%M92!O9B!T:&4@;F5W<V=R;W5P
XM*',I('1O('1H92!E;F0@;V8@=&AE"B @(" @3F5W<V=R;W5P<SH@;&EN92!A
XM="!T:&4@8F5G:6YN:6YG(&]F('1H92!A<G1I8VQE+B!!9G1E<B!S879I;F<@
XM86YD"B @(" @97AI=&EN9R!T:&4@961I=&]R('EO=2!A<F4@87-K960@:68@
XM>6]U('=I<V@@=&\@82EB;W)T('!O<W1I;F<@=&AE"B @(" @87)T:6-L92P@
XM92ED:70@=&AE(&%R=&EC;&4@86=A:6X@;W(@<"EO<W0@=&AE(&%R=&EC;&4@
XM=&\@=&AE"B @(" @<W!E8VEF:65D(&YE=W-G<F]U<"AS*2X*"B @(" @57-E
XM('1H92 G5R<@8V]M;6%N9"!T;R!D:7-P;&%Y(&$@:&ES=&]R>2!O9B!T:&4@
XM87)T:6-L97,@>6]U(&AA=F4*(" @("!P;W-T960N("!4:&4@9&%T92!T:&4@
XM87)T:6-L92!W87,@<&]S=&5D+"!W:&EC:"!N97=S9W)O=7!S('1H90H@(" @
XM(&%R=&EC;&4@=V%S('!O<W1E9"!T;R!A;F0@=&AE(&%R=&EC;&5S('-U8FIE
XM8W0@;&EN92!A<F4@9&ES<&QA>65D+@H*(" @("!5<V4@=&AE("=F)R O("=&
XM)R!C;VUM86YD('1O('!O<W0@82!F;VQL;W<M=7 @87)T:6-L92!T;R!A;B!A
XM;')E861Y"B @(" @<&]S=&5D(&%R=&EC;&4N(%1H92 G1B<@8V]M;6%N9"!W
XM:6QL(&-O<'D@=&AE('1E>'0@;V8@=&AE(&]R:6=I;F%L"B @(" @87)T:6-L
XM92!I;G1O('1H92!E9&ET;W(N(%1H92!E9&ET:6YG('!R;V-E9'5R92!I<R!T
XM:&4@<V%M92!A<R!W:&5N"B @(" @<&]S=&EN9R!A;B!A<G1I8VQE('=I=&@@
XM=&AE("=W)R!C;VUM86YD+@H*(" @("!5<V4@=&AE("=R)R O("=2)R!C;VUM
XM86YD('1O(')E<&QY(&1I<F5C="!T:')O=6=H(&UA:6P@=&\@=&AE"B @(" @
XM875T:&]R(&]F(&%N(&%L<F5A9'D@<&]S=&5D(&%R=&EC;&4N(%1H92 G4B<@
XM8V]M;6%N9"!W:6QL(&-O<'D@=&AE"B @(" @=&5X="!O9B!T:&4@;W)I9VEN
XM86P@87)T:6-L92!I;G1O('1H92!E9&ET;W(N(%1H92!E9&ET:6YG('!R;V-E
XM9'5R90H@(" @(&ES('1H92!S86UE(&%S('=H96X@<&]S=&EN9R!A;B!A<G1I
XM8VQE('=I=&@@=&AE("=W)R!C;VUM86YD+B!!9G1E<@H@(" @('-A=FEN9R!A
XM;F0@97AI=&EN9R!T:&4@961I=&]R('EO=2!A<F4@87-K960@:68@>6]U('=I
XM<V@@=&\@82EB;W)T"B @(" @<V5N9&EN9R!T:&4@87)T:6-L92P@92ED:70@
XM=&AE(&%R=&EC;&4@86=A:6X@;W(@<REE;F0@=&AE(&%R=&EC;&4*(" @("!T
XM;R!T:&4@875T:&]R+@H*30A-00A!20A)3 A,20A)3@A.1PA'(% (4$D(25 (
XM4$D(24X(3D<(1R!0"%!2"%))"$E."$Y4"%1)"$E."$Y'"$<@4@A210A%4 A0
XM3PA/4PA35 A420A)3@A.1PA'($$(04X(3D0(1"!3"%-!"$%6"%9)"$E."$Y'
XM"$<@00A!4@A25 A420A)0PA#3 A,10A%4PA3"B @(" @5&AE(&-O;6UA;F0@
XM:6YT97)F86-E('1O(&UA:6P@*"=M)RDL('!I<&4@*"=\)RDL('!R:6YT("@G
XM;R<I+ H@(" @(&-R;W-S<&]S=" H)W@G*2!A;F0@<V%V92 H)W,G*2!A<G1I
XM8VQE<R!I<R!T:&4@<V%M92!F;W(@96%S92!O9@H@(" @('5S92X*"B @(" @
XM5&AE(&EN:71I86P@8V]M;6%N9"!W:6QL(&%S:R!Y;W4@=&\@<V5L96-T('=H
XM:6-H(&$I<G1I8VQE+"!T*6AR96%D+ H@(" @(&@I;W0@*&%U=&\@<V5L96-T
XM960I('(I96=E>"!P871T97)N+"!T*6%G9V5D(&%R=&EC;&5S('EO=2!W:7-H
XM('1O"B @(" @;6%I;"P@<&EP92!E=&,N"@H@(" @(%1A9V=E9"!A<G1I8VQE
XM<R!M=7-T(&AA=F4@86QR96%D>2!B965N('1A9V=E9"!W:71H('1H92 G5"<@
XM8V]M;6%N9"X*(" @("!!;&P@=&%G9V5D(&%R=&EC;&5S(&-A;B!B92!U;G1A
XM9V=E9"!B>2!T:&4@)U4G('5N=&%G(&-O;6UA;F0N"@H@(" @($EF(')E9V5X
XM('!A='1E<FX@;6%T8VAI;F<@:7,@<V5L96-T960@>6]U(&%R92!A<VME9"!T
XM;R!E;G1E<B!A"B @(" @<F5G=6QA<B!E>'!R97-S:6]N("AI92X@=&\@;6%T
XM8V@@86QL(&%R=&EC;&5S('-U8FIE8W0@;&EN97,*(" @("!C;VYT86EN:6YG
XM("=N970@3F5W<R<@>6]U(&UU<W0@96YT97(@)RIN970@3F5W<RHG*2X@06YY
XM(&%R=&EC;&5S"B @(" @=&AA="!M871C:"!T:&4@96YT97)E9"!E>'!R97-S
XM:6]N('=I;&P@8F4@;6%I;&5D+"!P:7!E9"!E=&,N"@H@(" @(%1O('-A=F4@
XM87)T:6-L97,@=&\@82!M86EL8F]X('=I=&@@=&AE(&YA;64@;V8@=&AE(&-U
XM<G)E;G0*(" @("!N97=S9W)O=7 @*&EE+B!!;'0N<V]U<F-E<RD@96YT97(@
XM)STG(&]R("<]/&UA:6QB;W@@;F%M93XG('=H96X*(" @("!A<VME9"!F;W(@
XM=&AE('-A=F4@9FEL96YA;64N"@H*"@I.15=3+4]3(" @(" @(" @(" @(" @
XM(" @(" @("!296QE87-E(#0N,5(@(" @(" @(" @(" @(" @(" @(" @(" @
XM(" @,34*"@H*"@I424XH,2D@(" @(" @(" @(" @(" @(" @(" @(" @("!,
XM3T-!3" @(" @(" @(" @(" @(" @(" @(" @(" @("!424XH,2D*"@H*(" @
XM("!4;R!S879E(&%R=&EC;&5S(&EN(#QN97=S9W)O=7 @;F%M93XO/&9I;&5N
XM86UE/B!F;W)M870@96YT97(*(" @(" G*SQF:6QE;F%M93XG+@H*(" @("!7
XM:&5N('-A=FEN9R!A<G1I8VQE<R!Y;W4@8V%N('-P96-I9GD@=VAE=&AE<B!T
XM:&4@<V%V960@9FEL97,@<VAO=6QD"B @(" @8F4@<&]S="!P<F]C97-S960@
XM*&EE+B!U;G-H87(@<VAE;&P@87)C:&EV92P@=75D96-O9&4@;75L=&EP;&4*
XM(" @("!P87)T<R!E=&,I+B @02!D969A=6QT('!R;V-E<W,@='EP92!C86X@
XM8F4@<V5T(&)Y('1H92 G4')O8V5S<PH@(" @('1Y<&4Z)R!I;B!T:&4@)TTG
XM(&]P=&EO;G,@;65N=2X*"D$(054(550(5$\(3TT(34$(050(5$D(24,(0R!-
XM"$U!"$%)"$E,"$Q)"$E."$Y'"$<@00A!3@A.1 A$(%,(4T$(058(5DD(24X(
XM3D<(1R!."$Y%"$57"%<@3@A.10A%5PA74PA3"B @(" @5&EN(&%L;&]W<R!N
XM97<O=6YR96%D(&YE=W,@87)T:6-L97,@=&\@8F4@;6%I;&5D("@M32!O<'1I
XM;VXI+W-A=F5D"B @(" @*"U3(&]P=&EO;BD@:6X@8F%T8V@@;6]D92!F;W(@
XM;&%T97(@<F5A9&EN9RX@57-E9G5L('=H96X@9V]I;F<@;VX*(" @("!H;VQI
XM9&%Y(&%N9"!Y;W4@9&]N)W0@=V%N="!T;R!R971U<FX@86YD(&9I;F0@=&AA
XM="!E>'!I<F4@:&%S"B @(" @<F5M;W9E9"!A('=H;VQE(&QO860@;V8@=6YR
XM96%D(&%R=&EC;&5S+B!"97-T('1O(')U;B!F<F]M(&-R;VYT86(*(" @("!E
XM=F5R>61A>2!W:&EL92!A=V%Y+"!A9G1E<B!W:&EC:"!Y;W4@=VEL;"!B92!M
XM86EL960@82!R97!O<G0@;V8*(" @("!W:&EC:"!A<G1I8VQE<R!W97)E(&UA
XM:6QE9"]S879E9"!F<F]M('=H:6-H(&YE=W-G<F]U<',@86YD('1H90H@(" @
XM('1O=&%L(&YU;6)E<B!O9B!A<G1I8VQE<R!M86EL960O<V%V960N("!!<G1I
XM8VQE<R!A<F4@<V%V960@:6X@80H@(" @('!R:79A=&4@;F5W<R!S=')U8W1U
XM<F4@=6YD97(@>6]U<B \<V%V961I<CX@9&ER96-T;W)Y("AD969A=6QT(&ES
XM"B @(" @)%\(2%\(3U\(35\(12]?"$Y?"&5?"'=?"',I+B!"92!C87)E9G5L
XM(&]F('5S:6YG('1H:7,@;W!T:6]N(&EF('EO=2!R96%D(&$@;&]T(&]F"B @
XM(" @9W)O=7!S(&)E8V%U<V4@>6]U(&-O=6QD(&]V97)F;&]W('EO=7(@9FEL
XM97-Y<W1E;2X@268@>6]U(&]N;'D@=V%N= H@(" @('1O('-A=F4@82!F97<@
XM9W)O=7!S(&ET('=O=6QD(&)E(&)E<W0@=&\@8F%C:W5P('EO=7(@9G5L; H@
XM(" @("1?"$A?"$]?"$U?"$4O+E\(;E\(95\(=U\(<U\(<E\(8R!A;F0@8W)E
XM871E(&$@;F5W(&]N92!T:&%T(&]N;'D@8V]N=&%I;G,@=&AE"B @(" @;F5W
XM<V=R;W5P<R!Y;W4@=V%N="!T;R!M86EL+W-A=F4N("!3879E9"!N97=S(&-A
XM;B!B92!R96%D(&QA=&5R(&)Y"B @(" @<W1A<G1I;F<@=&EN('=I=&@@=&AE
XM("U2(&]P=&EO;BX*"B @(" @=&EN("U-(&EA:6X@+68@;F5W<W)C+FUA:6P@
XM*&UA:6P@86YY('5N<F5A9"!A<G1I8VQE<R!I;B!N97=G<F]U<',*(" @("!S
XM<&5C:69I960@:6X@9FEL92!N97=S<F,N;6%I;"D*"B @(" @=&EN("U3("UF
XM(&YE=W-R8RYS879E("AS879E(&%N>2!U;G)E860@87)T:6-L97,@:6X@;F5W
XM9W)O=7!S"B @(" @<W!E8VEF:65D(&EN(&9I;&4@;F5W<W)C+G-A=F4I"@H@
XM(" @('1I;B M4B H<F5A9"!A;GD@=6YR96%D(&%R=&EC;&5S('-A=F5D(&)Y
XM('1I;B M4R!O<'1I;VXI"@I3"%-)"$E'"$=."$Y!"$%4"%15"%52"%)%"$53
XM"%,*(" @("!4:6X@=VEL;"!R96-O9VYI>F4@82!S:6=N871U<F4@:6X@96ET
XM:&5R("1?"$A?"$]?"$U?"$4O+E\(<U\(:5\(9U\(;E\(85\(=%\(=5\(<E\(
XM92!O<@H@(" @("1?"$A?"$]?"$U?"$4O+E\(4U\(:5\(9RX@268@)%\(2%\(
XM3U\(35\(12\N7PAS7PAI7PAG7PAN7PAA7PAT7PAU7PAR7PAE(&5X:7-T<RP@
XM=&AE;B!T:&4@<VEG;F%T=7)E('=I;&P@8F4*(" @("!P=6QL960@:6YT;R!T
XM:&4@961I=&]R(&9O<B!4:6X@;6%I;"!C;VUM86YD<RX@($$@<VEG;F%T=7)E
XM(&EN"B @(" @)%\(2%\(3U\(35\(12\N7PAS7PAI7PAG7PAN7PAA7PAT7PAU
XM7PAR7PAE('=I;&P@;F]T(&)E('!U;&QE9"!I;G1O('1H92!E9&ET;W(@9F]R
XM('!O<W1I;F<*(" @("!C;VUM86YD<R!S:6YC92!T:&4@:6YE=W,@<')O9W)A
XM;2!W:6QL(&%P<&5N9"!T:&4@<VEG;F%T=7)E(&ET<V5L9BX*"B @(" @02!S
XM:6=N871U<F4@:6X@)%\(2%\(3U\(35\(12\N7PA37PAI7PAG('=I;&P@8F4@
XM<'5L;&5D(&EN=&\@=&AE(&5D:71O<B!F;W(@8F]T: H@(" @('!O<W1I;F<@
XM86YD(&UA:6QI;F<@8V]M;6%N9',N"@H@(" @(%1H92!F;VQL;W=I;F<@:7,@
XM86X@97AA;7!L92!O9B!A("1?"$A?"$]?"$U?"$4O+E\(4U\(:5\(9R!F:6QE
XM.@H@(" @(" @(" @3D%-12 @($EA:6X@3&5A"B @(" @(" @("!%34%)3" @
XM:6%I;B5A;FPT,S,N=75C<$!'97)M86YY+D55+FYE= H@(" @(" @(" @4TY!
XM24P@($)R=65C:V5N(%-T<F%S<V4@,3(L(#@U,# @3G5E<FYB97)G(#DP+"!'
XM97)M86YY"B @(" @(" @("!02$].12 @*S0Y+3DQ,2TS,S$Y-C,@*&AO;64I
XM(" K-#DM.3$Q+3,P.#DM-# W("AW;W)K*0H*10A%3@A.5@A620A)4@A23PA/
XM30A-10A%3@A.5 A4(%8(5D$(05((4DD(24$(04((0DP(3$4(15,(4PH@(" @
XM(%0(5$D(24X(3D0(1$D(25((4@H@(" @(" @(" @1&5F:6YE('1H:7,@=F%R
XM:6%B;&4@:68@>6]U(&1O(&YO="!W86YT('1I;B=S("YT:6X@9&ER96-T;W)Y
XM"B @(" @(" @("!I;B D2$]-12\N=&EN+B @*&EE+B!I9B!Y;W4@=V%N="!A
XM;&P@=&EN)W,@<')I=F%T92!F:6QE<R!I;@H*"@H*,38@(" @(" @(" @(" @
XM(" @(" @(" @(" @(" @4F5L96%S92 T+C%2(" @(" @(" @(" @(" @(" @
XM(" @("!.15=3+4]3"@H*"@H*5$E.*#$I(" @(" @(" @(" @(" @(" @(" @
XM(" @(" @3$]#04P@(" @(" @(" @(" @(" @(" @(" @(" @(" @5$E.*#$I
XM"@H*"B @(" @(" @(" O=&UP+RYT:6X@>6]U('=O=6QD('-E="!424Y$25(@
XM=&\@8V]N=&%I;B O=&UP+@H*(" @("!."$Y."$Y4"%10"%!3"%-%"$52"%)6
XM"%9%"$52"%(*(" @(" @(" @(%1H92!D969A=6QT($Y.5% @<V5R=F5R('1O
XM(')E;6]T96QY(')E860@;F5W<R!F<F]M+B!4:&ES"B @(" @(" @("!V87)I
XM86)L92!O;FQY(&YE961S('1O(&)E('-E="!I9B!T:&4@+7(@8V]M;6%N9"!L
XM:6YE(&]P=&EO;B!I<PH@(" @(" @(" @<W!E8VEF:65D(&%N9"!T:&4@9FEL
XM92 O7PAE7PAT7PAC+U\(;E\(;E\(=%\(<%\(<U\(95\(<E\(=E\(95\(<B!D
XM;V5S(&YO="!E>&ES="X*"B @(" @1 A$20A)4PA35 A44@A220A)0@A"50A5
XM5 A420A)3PA/3@A."B @(" @(" @("!3970@=&AE(&%R=&EC;&4@:&5A9&5R
XM(&9I96QD($1I<W1R:6)U=&EO;CH@=&\@=&AE(&-O;G1E;G1S(&]F"B @(" @
XM(" @("!T:&4@=F%R:6%B;&4@:6YS=&5A9"!O9B!T:&4@<WES=&5M(&1E9F%U
XM;'0N"@H@(" @($\(3U((4D<(1T$(04X(3DD(25H(6D$(050(5$D(24\(3TX(
XM3@H@(" @(" @(" @4V5T('1H92!A<G1I8VQE(&AE861E<B!F:65L9"!/<F=A
XM;FEZ871I;VXZ('1O('1H92!C;VYT96YT<R!O9@H@(" @(" @(" @=&AE('9A
XM<FEA8FQE(&EN<W1E860@;V8@=&AE('-Y<W1E;2!D969A=6QT+B!4:&ES('9A
XM<FEA8FQE(&AA<PH@(" @(" @(" @<')E8V5D96YC92!O=F5R('1H92!F:6QE
XM("1?"$A?"$]?"$U?"$4O+E\(=%\(:5\(;B]?"&]?"')?"&=?"&%?"&Y?"&E?
XM"'I?"&%?"'1?"&E?"&]?"&X@=&AA="!M87D@86QS;PH@(" @(" @(" @8V]N
XM=&%I;B!A;B!O<F=A;FEZ871I;VX@<W1R:6YG+B!)9B!R96%D:6YG(&YE=W,@
XM;VX@86X@07!O;&QO"B @(" @(" @("!$;VUA:6Y/4R!M86-H:6YE('1H92!E
XM;G9I<F]N;65N="!V87)I86)L92!.15=33U)'(&AA<R!T;R!B90H@(" @(" @
XM(" @=7-E9"!I;G-T96%D(&]F($]21T%.25I!5$E/3BX*"B @(" @4@A210A%
XM4 A03 A,60A95 A43PA/"B @(" @(" @("!3970@=&AE(&%R=&EC;&4@:&5A
XM9&5R(&9I96QD(%)E<&QY+51O.B!T;R!T:&4@<F5T=7)N(&%D9')E<W,*(" @
XM(" @(" @('-P96-I9FEE9"!B>2!T:&4@=F%R:6%B;&4N("!4:&ES(&ES('5S
XM969U;"!I9B!T:&4@;6%C:&EN92!I<PH@(" @(" @(" @;F]T(')E9VES=&5R
XM960@:6X@=&AE(%550U @;6%I;"!M87!S(&]R(&EF('EO=2!W:7-H('1O(')E
XM8VEE=F4*(" @(" @(" @(')E<&QI97,@870@82!D:69F97)E;G0@;6%C:&EN
XM92X@(%1H:7,@=F%R:6%B;&4@:&%S('!R96-E9&5N8V4*(" @(" @(" @(&]V
XM97(@=&AE(&9I;&4@)%\(2%\(3U\(35\(12\N7PAT7PAI7PAN+U\(<E\(95\(
XM<%\(;%\(>5\(=%\(;R!T:&%T(&UA>2!A;'-O(&-O;G1A:6X@80H@(" @(" @
XM(" @<F5T=7)N(&%D9')E<W,N"@H@(" @($$(040(1$0(1%]!"$%$"$1$"$12
XM"%)%"$53"%-3"%,*(" @(" @(" @(%1H:7,@8V%N(&-O;G1A:6X@86X@861D
XM<F5S<R!T;R!A<'!E;F0@=&\@=&AE(')E='5R;B!A9&1R97-S"B @(" @(" @
XM("!W:&5N(')E<&QY:6YG(&1I<F5C=&QY('1H<F]U9V@@;6%I;"!T;R!S;VUE
XM8F]D>2!W:&]S92!M86EL"B @(" @(" @("!A9&1R97-S(&ES(&YO="!D:7)E
XM8W1L>2!R96-O9VYI>F5D(&)Y('1H92!L;V-A;"!H;W-T+B!&;W(*(" @(" @
XM(" @(&5X86UP;&4@<V%Y('1H92!R971U<FX@861D<F5S<R!I<R!?"'5?"'-?
XM"&5?"') 7PAB7PAI7PAG7PAV7PAA7PAX+"!B=70@7PAB7PAI7PAG7PAV7PAA
XM7PAX(&ES"B @(" @(" @("!N;W0@<F5C;V=N:7IE9"!B>2!Y;W5R(&AO<W0L
XM('-O('1H97)F;W)E('1H92!M86EL('=I;&P@;F]T"B @(" @(" @("!R96%C
XM:"!?"'5?"'-?"&5?"'(N($)U="!T:&4@:&]S="!?"&Q?"&E?"'1?"'1?"&5?
XM"'9?"&%?"'@@:7,@:VYO=VX@=&\@<F5C;V=N:7IE('EO=7(*(" @(" @(" @
XM(&AO<W0@86YD(%\(8E\(:5\(9U\(=E\(85\(>"P@<V\@:68@041$7T%$1%)%
XM4U,@:7,@<V5T("AI92X@)W-E=&5N=@H@(" @(" @(" @041$7T%$1%)%4U,@
XM0&QI='1E=F%X)R!F;W(@8W-H(&]R("=S970@041$7T%$1%)%4U,@0&QI='1E
XM=F%X)PH@(" @(" @(" @86YD("=E>'!O<G0@041$7T%$1%)%4U,G(&9O<B!S
XM:"D@=&AE(&%D9')E<W,*(" @(" @(" @(%\(=5\(<U\(95\(<D!?"&)?"&E?
XM"&=?"'9?"&%?"'A 7PAL7PAI7PAT7PAT7PAL7PAE7PAV7PAA7PAX('=I;&P@
XM8F4@=7-E9"!A;F0@=&AE(&UA:6P@=VEL;"!R96%C: H@(" @(" @(" @7PAU
XM7PAS7PAE7PAR0%\(8E\(:5\(9U\(=E\(85\(>"X@(%1H:7,@=F%R:6%B;&4@
XM:&%S('!R96-E9&5N8V4@;W9E<B!T:&4@9FEL90H@(" @(" @(" @)%\(2%\(
XM3U\(35\(12\N7PAT7PAI7PAN+U\(85\(9%\(9%]?"&%?"&1?"&1?"')?"&5?
XM"'-?"',@=&AA="!M87D@86QS;R!C;VYT86EN(&%N(&%D9')E<W,N"@H@(" @
XM($((0E4(54<(1U]!"$%$"$1$"$12"%)%"$53"%-3"%,*(" @(" @(" @($EF
XM('1H92 G0B<@8V]M;6%N9"!B=6<@<F5P;W)T(&UA:6P@861D<F5S<R!I<R!N
XM;W0@8V]R<F5C="!T:&ES"B @(" @(" @("!V87)I86)L92!S:&]U;&0@8F4@
XM<V5T('1O('1H92!C;W)R96-T(&UA:6P@861D<F5S<RX@5&AI<PH@(" @(" @
XM(" @=F%R:6%B;&4@:&%S('!R96-E9&5N8V4@;W9E<B!T:&4@9FEL92 D7PA(
XM7PA/7PA-7PA%+RY?"'1?"&E?"&XO7PAB7PAU7PAG7U\(85\(9%\(9%\(<E\(
XM95\(<U\(<PH@(" @(" @(" @=&AA="!M87D@86QS;R!C;VYT86EN(&$@;6%I
XM;"!A9&1R97-S+@H*(" @("!-"$U!"$%)"$E,"$Q%"$52"%(*(" @(" @(" @
XM(%1H:7,@=F%R:6%B;&4@:&%S('!R96-E9&5N8V4@;W9E<B!T:&4@9&5F875L
XM="!M86EL97(@=&AA="!I<PH@(" @(" @(" @=7-E9"!I;B!A;&P@;6%I;&EN
XM9R!O<&5R871I;VYS('=I=&AI;B!T:6X@*&EE+B!R97!L>6EN9R G<E(G+ H@
XM(" @(" @(" @86YD(&)U9R!R97!O<G1S("=")RDN"@H*"@H*3D574RU/4R @
XM(" @(" @(" @(" @(" @(" @(" @4F5L96%S92 T+C%2(" @(" @(" @(" @
XM(" @(" @(" @(" @(" @(#$W"@H*"@H*5$E.*#$I(" @(" @(" @(" @(" @
XM(" @(" @(" @(" @3$]#04P@(" @(" @(" @(" @(" @(" @(" @(" @(" @
XM5$E.*#$I"@H*"B @(" @5@A620A)4PA350A500A!3 A,"B @(" @(" @("!4
XM:&ES('9A<FEA8FQE(&AA<R!P<F5C961E;F-E(&]V97(@=&AE(&1E9F%U;'0@
XM961I=&]R("AI92X@=FDI"B @(" @(" @("!T:&%T(&ES('5S960@:6X@86QL
XM(&5D:71I;F<@;W!E<F%T:6]N<R!W:71H:6X@=&EN("AI92X@<&]S=&EN9PH@
XM(" @(" @(" @)W<G+"!R97!L>6EN9R G<E(G+"!F;VQL;W<M=7!S("=F1B<@
XM86YD(&)U9R!R97!O<G1S("=")RDN"@I4"%1)"$E0"%!3"%,@00A!3@A.1 A$
XM(%0(5%((4DD(24,(0TL(2U,(4PH@(" @(%1H92!F;VQL;W=I;F<@;F5W<V=R
XM;W5P<R!P<F]V:61E('5S969U;"!I;F9O<FUA=&EO;B!C;VYC97)N:6YG(&YE
XM=W,*(" @("!S;V9T=V%R93H*(" @(" @(" @+6YE=W,N<V]F='=A<F4N<F5A
XM9&5R<R H:6YF;RX@86)O=70@;F5W<R!U<V5R(&%G96YT<PH@(" @(" @(" @
XM=&EN+')N+&YN+'9N(&5T8RXI"B @(" @(" @("UN97=S+G-O9G1W87)E+FYN
XM=' @*&EN9F\N(&%B;W5T($Y.5% I"B @(" @(" @("UN97=S+G-O9G1W87)E
XM+F(@*&EN9F\N(&%B;W5T(&YE=W,@=')A;G-P;W)T(&%G96YT<R!";F5W<R F
XM"B @(" @(" @("!#;F5W<RD*(" @(" @(" @+6YE=W,N86YS=V5R<R H1G)E
XM<75E;G1L>2!!<VME9"!1=65S=&EO;G,@*$9!42D@86)O=70@;6%N>0H@(" @
XM(" @(" @9&EF9F5R96YT('1H96UE<RD*"B @(" @36%N>2!P<F]M<'1S("AI
XM92X@)TUA<FL@979E<GET:&EN9R!A<R!R96%D/R H>2]N*3H@>2<I('=I=&AI
XM;B!T:6X*(" @("!O9F9E<B!A(&1E9F%U;'0@8VAO:6-E('1H870@=&AE(&-U
XM<G-O<B!I<R!P;W-I=&EO;F5D(&]N+B!">0H@(" @('!R97-S:6YG(#Q#4CX@
XM=&AE(&1E9F%U;'0@=F%L=64@:7,@=&%K96XN"@H@(" @(%=H96X@=&EN(&ES
XM(')U;B!I;B!A;B!X=&5R;2!W:6YD;W<@:70@=VEL;"!R97-I>F4@:71S96QF
XM(&5A8V@@=&EM90H@(" @('1H92!X=&5R;2!I<R!R97-I>F5D+@H*(" @("!4
XM:6X@=VEL;"!R97)E860@=&AE(&%C=&EV92!F:6QE(&%T('-E="!I;G1E<G9A
XM;',@=&\@<VAO=R!A;GD@;F5W"B @(" @;F5W<RX*"D8(1DD(24P(3$4(15,(
XM4PH@(" @("1?"$A?"$]?"$U?"$4O+E\(;E\(95\(=U\(<U\(<E\(8R @(" @
XM(" @(" @("!S=6)S8W)I8F5D('1O(&YE=V=R;W5P<RX*(" @(" D7PA(7PA/
XM7PA-7PA%+RY?"'1?"&E?"&XO7PAT7PAI7PAN7PAR7PAC(" @(" @(" @(&]P
XM=&EO;G,N"B @(" @)%\(2%\(3U\(35\(12\N7PAT7PAI7PAN+RY?"&E?"&Y?
XM"&1?"&5?"'@@(" @(" @("!N97=S9W)O=7 @:6YD97@@9FEL97,@9&ER96-T
XM;W)Y+@H@(" @("1?"$A?"$]?"$U?"$4O+E\(=%\(:5\(;B]?"&%?"&1?"&1?
XM7PAA7PAD7PAD7PAR7PAE7PAS7PAS(" @(&%D9')E<W,@=&\@861D('1O('=H
XM96X@<F5P;'EI;F<@=&AR;W5G:"!M86EL+@H@(" @("1?"$A?"$]?"$U?"$4O
XM+E\(=%\(:5\(;B]?"&%?"&-?"'1?"&E?"'9?"&4@(" @(" @("!U<V5D(&)Y
XM("UN(&]P=&EO;B!F;W(@;F]T:69Y:6YG('5S97(@;V8@;F5W(&=R;W5P<RX*
XM(" @(" D7PA(7PA/7PA-7PA%+RY?"'1?"&E?"&XO7PAB7PAU7PAG7U\(85\(
XM9%\(9%\(<E\(95\(<U\(<R @("!A9&1R97-S('1O('-E;F0@8G5G(')E<&]R
XM=',@=&\N"B @(" @)%\(2%\(3U\(35\(12\N7PAT7PAI7PAN+U\(:U\(:5\(
XM;%\(;" @(" @(" @(" @:VEL;"!F:6QE+@H@(" @("1?"$A?"$]?"$U?"$4O
XM+E\(=%\(:5\(;B]?"&]?"')?"&=?"&%?"&Y?"&E?"'I?"&%?"'1?"&E?"&]?
XM"&X@("!S=')I;F<@=&\@<F5P;&%C92!D969A=6QT(&]R9V%N:7IA=&EO;BX*
XM(" @(" D7PA(7PA/7PA-7PA%+RY?"'1?"&E?"&XO7PAP7PAO7PAS7PAT7PAE
XM7PAD(" @(" @(" @:&ES=&]R>2!O9B!A<G1I8VQE<R!P;W-T960@8GD@=7-E
XM<BX*(" @(" D7PA(7PA/7PA-7PA%+RY?"'1?"&E?"&XO7PAR7PAE7PAP7PAL
XM7PAY7PAT7PAO(" @(" @("!H;W-T(&%D9')E<W,@=&\@=7-E(&EN(%)E<&QY
XM+51O.B!M86EL(&AE861E<BX*(" @(" D7PA(7PA/7PA-7PA%+RY?"'1?"&E?
XM"&XO7PAU7PAN7PAT7PAH7PAR7PAE7PAA7PAD(" @(" @(&-O;G1A:6YS(&=R
XM;W5P<R!T:&%T(&%R92!N;W0@=&\@8F4@=&AR96%D960N"B @(" @)%\(2%\(
XM3U\(35\(12\N7PAS7PAI7PAG7PAN7PAA7PAT7PAU7PAR7PAE(" @(" @(" @
XM('-I9VYA='5R92X*(" @(" D7PA(7PA/7PA-7PA%+RY?"%-?"&E?"&<@(" @
XM(" @(" @(" @(" @<VEG;F%T=7)E+@H*0@A"50A51PA'4PA3"B @(" @5&AE
XM<F4@87)E(&)U9W,@<V]M97=H97)E(&%M;VYG('1H92!C<F5E<&EN9R!F96%T
XM=7)I<VTN($%N>2!B=6=S"B @(" @9F]U;F0@<VAO=6QD(&)E(')E<&]R=&5D
XM(&)Y('1H92 G0B<@*&)U9R!R97!O<G0I(&-O;6UA;F0N"@H@(" @(%=I;&P@
XM;F]T('5U9&5C;V1E('-O;64@;V8@=&AE(&EM86=E<R!I;B!A;'0N8FEN87)I
XM97,N<&EC='5R97,*(" @("!B96-A=7-E(&UO<F4@=&AA;B!O;F4@:6UA9V4@
XM:7,@:6X@=&AE(&UU;'1I+7!A<G0@9FEL92!T;R!U=61E8V]D92X*(" @("!/
XM;FQY('1H92!F:7)S="!I;6%G92!W:6QL(&)E('5U9&5C;V1E9"X*"B @(" @
XM1&]E<R!N;W0@>65T(&AA;F1L92!8<F5F.B!H96%D97)S(&9O<B!C<F]S<RUP
XM;W-T960@87)T:6-L97,N"@H*"@H*"C$X(" @(" @(" @(" @(" @(" @(" @
XM(" @(" @(%)E;&5A<V4@-"XQ4B @(" @(" @(" @(" @(" @(" @(" @3D57
XM4RU/4PH*"@H*"E1)3B@Q*2 @(" @(" @(" @(" @(" @(" @(" @(" @($Q/
XM0T%,(" @(" @(" @(" @(" @(" @(" @(" @(" @(%1)3B@Q*0H*"@I("$A)
XM"$E3"%-4"%1/"$]2"%)9"%D*(" @("!"87-E9"!O;B!T:&4@=&%S<R!N97=S
XM<F5A9&5R('1H870@=V%S(&1E=F5L;W!E9"!B>2!2:6-H(%-K<F5N=&$@86YD
XM"B @(" @<&]S=&5D('1O(&%L="YS;W5R8V5S(&EN($UA<F-H(#$Y.3$N(%1A
XM<W,@=V%S(&ET<V5L9B!H96%V:6QY"B @(" @:6YF;&5U96YC960@8GD@3D]4
XM15,@=VAI8V@@=V%S(&1E=F5L;W!E9"!A="!T:&4@56YI=F5R<VET>2!O9@H@
XM(" @($EL;&EN;VES(&)Y(%)A>2!%<W-I8VL@86YD(%)O8B!+;VQS=&%D(&EN
XM(#$Y.#(N"@H@(" @(%1I;B!V,2XP," H9G5L;"!D:7-T<FEB=71I;VXI('=A
XM<R!P;W-T960@:6X@."!P87)T<R!T;R!A;'0N<V]U<F-E<PH@(" @(&]N(#(S
XM($%U9R Q.3DQ+@H@(" @(%1I;B!V,2XP(%!,,2 H9G5L;"!D:7-T<FEB=71I
XM;VXI('=A<R!P;W-T960@:6X@."!P87)T<R!T;PH@(" @(&%L="YS;W5R8V5S
XM(&]N(# S(%-E<" Q.3DQ+@H@(" @(%1I;B!V,2XP(%!,,B H9G5L;"!D:7-T
XM<FEB=71I;VXI('=A<R!P;W-T960@:6X@.2!P87)T<R!T;PH@(" @(&%L="YS
XM;W5R8V5S(&]N(#(T(%-E<" Q.3DQ+@H@(" @(%1I;B!V,2XP(%!,,R H<&%T
XM8V@I('=A<R!P;W-T960@:6X@-"!P87)T<R!T;R!A;'0N<V]U<F-E<R!O;B S
XM,"!397 *(" @(" Q.3DQ+@H@(" @(%1I;B!V,2XP(%!,-" H<&%T8V@I('=A
XM<R!P;W-T960@:6X@,B!P87)T<R!T;R!A;'0N<V]U<F-E<R!O;B P,B!/8W0*
XM(" @(" Q.3DQ+@H@(" @(%1I;B!V,2XP(%!,-2 H<&%T8V@I('=A<R!P;W-T
XM960@:6X@-"!P87)T<R!T;R!A;'0N<V]U<F-E<R!O;B Q-R!/8W0*(" @(" Q
XM.3DQ+@H@(" @(%1I;B!V,2XP(%!,-B H<&%T8V@I('=A<R!P;W-T960@:6X@
XM-2!P87)T<R!T;R!A;'0N<V]U<F-E<R!O;B R-R!.;W8*(" @(" Q.3DQ+@H@
XM(" @(%1I;B!V,2XP(%!,-R H<&%T8V@I('=A<R!P;W-T960@:6X@,B!P87)T
XM<R!T;R!A;'0N<V]U<F-E<R!O;B R-R!.;W8*(" @(" Q.3DQ+@H@(" @(%1I
XM;B!V,2XQ(%!,," H9G5L;"!D:7-T<FEB=71I;VXI('=A<R!P;W-T960@:6X@
XM,3$@<&%R=',@=&\*(" @("!A;'0N<V]U<F-E<R!O;B Q,R!&96(@,3DY,BX*
XM(" @("!4:6X@=C$N,2!03#$@*&9U;&P@9&ES=')I8G5T:6]N*2!W87,@<&]S
XM=&5D(&EN(#$R('!A<G1S('1O"B @(" @86QT+G-O=7)C97,@;VX@,C0@36%R
XM(#$Y.3(N"B @(" @5&EN('8Q+C$@4$PR("AP871C:"D@=V%S('!O<W1E9"!I
XM;B T('!A<G1S('1O(&%L="YS;W5R8V5S(&]N(#,P($UA<@H@(" @(#$Y.3(N
XM"B @(" @5&EN('8Q+C$@4$PS("AF=6QL(&1I<W1R:6)U=&EO;BD@=V%S('!O
XM<W1E9"!I;B _/R!P87)T<R!T;PH@(" @(&%L="YS;W5R8V5S(&]N(#$S($UA
XM>2 Q.3DR+@H*0PA#4@A210A%1 A$20A)5 A44PA3"B @(" @4FEC:"!3:W)E
XM;G1A"B @(" @(" @("!A=71H;W(@;V8@=&%S<R!V,RXR('=H:6-H('1H:7,@
XM;F5W<W)E861E<B!U<V5D(&%S(&ET<R!B87-E+@H*(" @("!$879E(%1A>6QO
XM<@H@(" @(" @(" @875T:&]R(&]F(&-U<G-E<RYC(&9R;VT@=&AE(&5L;2!M
XM86EL<F5A9&5R+@H*(" @("!2:6-H(%-A;'H*(" @(" @(" @(&%U=&AO<B!O
XM9B!W:6QD;6%T+F,@<&%T=&5R;B!M871C:&EN9R!R;W5T:6YE+@H*(" @("!#
XM:')I<R!4:&5W86QT"B @(" @(" @("!A=71H;W(@;V8@9V5T;&EN92YC(&5M
XM86-S('-T>6QE(&5D:71I;F<@<F]U=&EN92X*"B @(" @1&EE=&5R($)E8VME
XM<@H@(" @(" @(" @9F]R(&=E;F5R;W5S;'D@<&]S=&EN9R!C97)T86EN('9E
XM<G-I;VYS(&%N9"!P871C:&5S(&9O<B!M90H@(" @(" @(" @=VAE;B!M>2!N
XM970@8V]N;F5C=&EO;B!W87,@<F5M;W9E9"!B>2!A(&=R;W5P(&]F('9E<GD@
XM<VAO<G0*(" @(" @(" @('-I9VAT960@<&5O<&QE+@H*(" @("!)('=I<V@@
XM=&\@=&AA;FL@=&AE(&9O;&QO=VEN9R!P96]P;&4@9F]R('-U<'!L>6EN9R!P
XM871C:',Z"@H@(" @($%N=&]N($%Y;'=A<F0L($1I971E<B!"96-K97(L($1A
XM;B!"97)R>2P@36%R8R!";W5C:&5R+"!,96EL80H*"@H*3D574RU/4R @(" @
XM(" @(" @(" @(" @(" @(" @4F5L96%S92 T+C%2(" @(" @(" @(" @(" @
XM(" @(" @(" @(" @(#$Y"@H*"@H*5$E.*#$I(" @(" @(" @(" @(" @(" @
XM(" @(" @(" @3$]#04P@(" @(" @(" @(" @(" @(" @(" @(" @(" @5$E.
XM*#$I"@H*"B @(" @0G5R<F5L;"U$879I<RP@4F]B97)T($-L865S;VXL(%-T
XM979E;B!#;V=S=V5L;"P@3F5D($1A;FEE;&5Y+"!"<F5N= H@(" @($5R;6QI
XM8VLL($-A<FP@2&%G92P@4&%U;"!(86QS96UA+"!%9"!(86YW87DL(%1O<G-T
XM96X@2&]M97EE<BP*(" @("!.96QS;VX@2V%D:6YG+"!&<FET>B!+;&5E;6%N
XM+"!+87)L+4MO96YI9R!+;V5N:6=S<V]N+"!+<FES($MU9V5L+ H@(" @($AA
XM:V%N($QE;FYE<W1A;"P@0VQI9F9O<F0@3'5K92P@36EC:&%E;"!&875R;W0L
XM($1A=FED($UA8TME;GII92P*(" @("!":6QL(%!O:71R87,L($II;2!2;V)I
XM;G-O;BP@4W1E<&AE;B!2;W-E;6%N+"!.:6-K;VQA>2!3875K:"P@4FEC: H@
XM(" @(%-A;'HL($IO:&X@4V%U=&5R+"!"87)T(%-E87)S+"!+87)L+4]L878@
XM4V5R<F%N9&5R+"!$;W5G(%-E=V5L;"P*(" @("!#;&EF9B!3=&%N9F]R9"P@
XM4W1E=F4@4W1A<F-K+"!-:6-H865L(%1R875B+"!!9')I(%9E<FAO968L($-A
XM<GD*(" @("!7:&ET;F5Y+"!,;&]Y9"!7<FEG:'0*"B @(" @22!W:7-H('1O
XM('1H86YK('1H92!F;VQL;W=I;F<@<&5O<&QE(&9O<B!B=6<@<F5P;W)T<R]C
XM;VUM96YT<SH*"B @(" @2VQA=7,@07)Z:6<L(%-C;W1T($)A8F(L(%)E:6YE
XM<B!"86QL:6YG+"!0<F5S=&]N($)A;FYI<W1E<BP@0FEL;"!D90H@(" @($)E
XM86)I96XL(%9O;&ME<B!"97EE<BP@171I96YN92!":61O+"!2;V=E<B!":6YN
XM<RP@1V5O<F<@0FEE:&QE<BP*(" @("!*96%N+4UA<F,@0F]N;F%U9&5T+"!)
XM86X@0G)O=VXL($%N9')E87,@0G)O<VEG+"!4;VT@0WIA<FYI:RP@1&%V:60*
XM(" @("!$;VYO=F%N+"!0971E<B!$<F5S<VQE<BP@1V5R:&%R9"!%<FUE<BP@
XM2'5G:"!&861E<BP@2F]A8VAI;2!&96QD+ H@(" @(%!A=6P@1F]X+"!"97)N
XM:&%R9"!';65L8V@L(%9I970@2&]A;F<L($%N9'D@2F%C:W-O;BP@2F]E($IO
XM:&YS;VXL"B @(" @0WER:6QL($IU;F<L($MU;RU#:&5I;B!+86DL($AA;G,M
XM2G5E<F=E;B!+;F]P<"P@0F5R;FAA<F0@2W)O96YU;F<L"B @(" @375R<F%Y
XM($QA:6YG+"!097(@3&EN9'%V:7-T+"!";V(@3'5K87,L($MA>G5S:&D@36%R
XM=6MA=V$L(%!H:6QL:7 *(" @("!-;VQL;WDL(%1O;FD@365T>BP@1W)E9R!-
XM:6QL97(L($ML875S($YE=6)E<F=E<BP@3W1T;R!.:65S<V5R+ H@(" @(%)E
XM:6YE<B!/96QH868L(%=O;&8@4&%U;"P@2F]H;B!086QK;W9I8RP@06YD<F5W
XM(%!H:6QL:7!S+"!3=&5F86X*(" @("!2871H;6%N;BP@2F]N87,@4G=G;7ER
XM+"!4960@4FEC:&%R9',L($1A96UO;B!38VAA969E<BP@2VQA;65R"B @(" @
XM4V-H=71T92P@1G)E9'D@4V-H=V%T>BP@0F5R;F0@4V-H=V5R:6XL($-H<FES
XM(%-M:71H+"!$86YI96P@4VUI=&@L"B @(" @4W1E=F4@4W!E87)M86XL($AI
XM<F]N;V)U(%1A:V%H87-H:2P@4W9E;B!797)N97(L($<N(%=O;V1B=7)Y+"!/
XM<F5S= H@(" @(%IB;W)O<VMI"@I!"$%5"%54"%1("$A/"$]2"%(*(" @("!)
XM86EN($QE80H@(" @(" @(" @*&EA:6XE86YL-#,S+G5U8W! 1V5R;6%N>2Y%
XM52YN970I"@H*"@H*"@H*"@H*"@H*"@H*"@H*"@H*"@H*"@HR," @(" @(" @
XM(" @(" @(" @(" @(" @(" @("!296QE87-E(#0N,5(@(" @(" @(" @(" @
X4(" @(" @(" @($Y%5U,M3U,*"@I2
X 
Xend
END_OF_FILE
  if test 29300 -ne `wc -c <'tin.nrf.UU.b'`; then
    echo shar: \"'tin.nrf.UU.b'\" unpacked with wrong size!
  elif test -f tin.nrf.UU.a; then
    echo shar: \"'Uudecoding tin.nrf'\"
    cat tin.nrf.UU.a tin.nrf.UU.b | uudecode
    if test 48215 -ne `wc -c <'tin.nrf'`; then
        echo shar: \"'tin.nrf'\" uudecoded with wrong size!
    else
        rm -f tin.nrf.UU.a tin.nrf.UU.b 
    fi
  fi
  # end of 'tin.nrf.UU.b'
fi
echo shar: End of archive 4 \(of 14\).
cp /dev/null ark4isdone
MISSING=""
for I in 1 2 3 4 5 6 7 8 9 10 11 12 13 14 ; do
    if test ! -f ark${I}isdone ; then
	MISSING="${MISSING} ${I}"
    fi
done
if test "${MISSING}" = "" ; then
    echo You have unpacked all 14 archives.
    rm -f ark[1-9]isdone ark[1-9][0-9]isdone
else
    echo You still must unpack the following archives:
    echo "        " ${MISSING}
fi
exit 0
exit 0 # Just in case...
