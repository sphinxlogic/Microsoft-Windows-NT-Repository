Newsgroups: comp.sources.misc
From: tynor@prism.gatech.edu (STEVE TYNOR)
Subject:  v30i084:  fplan-1.3 - Fplan 1.3 (Flight Planner), Part04/04
Message-ID: <1992Jun28.183436.3173@sparky.imd.sterling.com>
X-Md4-Signature: 3312872f4b0171e361cde7ae2ce7044f
Date: Sun, 28 Jun 1992 18:34:36 GMT
Approved: kent@sparky.imd.sterling.com

Submitted-by: tynor@prism.gatech.edu (STEVE TYNOR)
Posting-number: Volume 30, Issue 84
Archive-name: fplan-1.3/part04
Environment: K&R C, BSD, MSDOS, Sunview (optional)
Supersedes: fplan: Volume 09, Issue 11-16

#! /bin/sh
# This is a shell archive.  Remove anything before this line, then feed it
# into a shell via "sh file" or similar.  To overwrite existing files,
# type "sh file -c".
# The tool that generated this appeared in the comp.sources.unix newsgroup;
# send mail to comp-sources-unix@uunet.uu.net if you want that tool.
# Contents:  EXAMPLE.fplan mystring.h paddb.1
# Wrapped by kent@sparky on Sun Jun 28 11:39:12 1992
PATH=/bin:/usr/bin:/usr/ucb ; export PATH
echo If this archive is complete, you will see the following message:
echo '          "shar: End of archive 4 (of 4)."'
if test -f 'EXAMPLE.fplan' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'EXAMPLE.fplan'\"
else
  echo shar: Extracting \"'EXAMPLE.fplan'\" \(812 characters\)
  sed "s/^X//" >'EXAMPLE.fplan' <<'END_OF_FILE'
X# $Id: EXAMPLE.fplan,v 1.2 89/11/05 11:44:32 tynor Exp $
X# This is an example FPLAN planfile. 
X#
X# It illustrates a simple flight from Chicago O'Hare to Champaign, IL
X# via the DuPage VOR with a 5 knot wind from 320. True airspeed is set
X# for 95 knots. VOR cross fixes from the Peotone VOR (EON) will be
X# computed. Initial fuel is 24.5 gallons and fuel economy is set to 5.4
X# gallons per hour.
X#
X# To generate a flight plan from this plan, type:
X#     fplan EXAMPLE.fplan
X# Since the default format is only 80 columns, the VOR-fix from EON is not
X# show with the previous fplan invocation. If you have a wider terminal, or
X# a wide printer, use the wide format to include the VOR-fix:
X#     fplan -w EXAMPLE.fplan
X
Xnav(2) EON;
Xfuel_amt  24.5;
Xfuel_rate 5.4;
Xtas 95;
Xwind 230@5;
Xfrom ORD;
Xvia  DPA;
Xto   CMI;
X
END_OF_FILE
  if test 812 -ne `wc -c <'EXAMPLE.fplan'`; then
    echo shar: \"'EXAMPLE.fplan'\" unpacked with wrong size!
  fi
  # end of 'EXAMPLE.fplan'
fi
if test -f 'mystring.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'mystring.h'\"
else
  echo shar: Extracting \"'mystring.h'\" \(1597 characters\)
  sed "s/^X//" >'mystring.h' <<'END_OF_FILE'
X/*
X * $Id: mystring.h,v 1.2 89/11/11 19:17:04 tynor Exp $
X *----------------------------------------------------------------------------
X *	FPLAN - Flight Planner
X *	Steve Tynor
X *	tynor@prism.gatech.edu
X *
X *	This program is in the public domain. Permission to copy,
X * distribute, modify this program is hearby given as long as this header
X * remains. If you redistribute this program after modifying it, please
X * document your changes so that I do not take the blame (or credit) for
X * those changes.  If you fix bugs or add features, please send me a
X * patch so that I can keep the 'official' version up-to-date.
X *
X *	Bug reports are welcome and I'll make an attempt to fix those
X * that are reported.
X *
X *	USE AT YOUR OWN RISK! I assume no responsibility for any
X * errors in this program, its database or documentation. I will make an
X * effort to fix bugs, but if you crash and burn because, for example,
X * fuel estimates in this program were inaccurate, it's your own fault
X * for trusting somebody else's code! Remember, as PIC, it's _your_
X * responsibility to do complete preflight planning. Use this program as
X * a flight planning aid, but verify its results before using them.
X *----------------------------------------------------------------------------
X */
X
X/*
X * define a couple of functions that are in SunOS string(3), but apparently
X * aren't 'standard' - so much for the wonder of the portability of the 
X * standard C library...
X *
X * The only thing we count on is strlen().
X */
X
Xextern char *strdup();
Xextern char *strtok();
Xextern char *index();
Xextern int strlen();
END_OF_FILE
  if test 1597 -ne `wc -c <'mystring.h'`; then
    echo shar: \"'mystring.h'\" unpacked with wrong size!
  fi
  # end of 'mystring.h'
fi
if test -f 'paddb.1' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'paddb.1'\"
else
  echo shar: Extracting \"'paddb.1'\" \(850 characters\)
  sed "s/^X//" >'paddb.1' <<'END_OF_FILE'
X.\" -*- nroff -*
X.\" $Id: paddb.1,v 1.2 89/11/11 19:09:26 tynor Exp $
X.\"-------------------------------------------
X.TH PADDB 1 "11 November 1989"  PADDB "Flight Planning"
X.\"-------------------------------------------
X.SH NAME
Xpaddb \- flight planner database formatter
X.\"-------------------------------------------
X.SH SYNOPSIS
X.LP
X\fBpaddb\fP \fItext-file database-file\fP
X.br
X.\"-------------------------------------------
X.SH DESCRIPTION
X.LP
X\fBpaddb\fP reads a \fItext_file\fP and formats it into
X\fIdatabase-file\fP which can be used by \fBfplan(1)\fP by padding
XASCII NULL characters at the end of each record to make each record of
Xequal length. 
X.\"-------------------------------------------
X.SH SEE ALSO
X\fBfplan(1)\fP, \fBfplan(5)\fP
X.LP 
X.\"-------------------------------------------
X.SH AUTHOR
XSteve Tynor \- tynor@prism.gatech.edu
END_OF_FILE
  if test 850 -ne `wc -c <'paddb.1'`; then
    echo shar: \"'paddb.1'\" unpacked with wrong size!
  fi
  # end of 'paddb.1'
fi
echo shar: End of archive 4 \(of 4\).
cp /dev/null ark4isdone
MISSING=""
for I in 1 2 3 4 ; do
    if test ! -f ark${I}isdone ; then
	MISSING="${MISSING} ${I}"
    fi
done
if test "${MISSING}" = "" ; then
    echo You have unpacked all 4 archives.
    rm -f ark[1-9]isdone
else
    echo You still must unpack the following archives:
    echo "        " ${MISSING}
fi
exit 0
exit 0 # Just in case...
