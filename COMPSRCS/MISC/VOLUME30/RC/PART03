Newsgroups: comp.sources.misc
From: byron@archone.tamu.edu (Byron Rakitzis)
Subject:  v30i026:  rc - A Plan 9 shell reimplementation, v1.4, Part03/07
Message-ID: <1992May30.031635.5381@sparky.imd.sterling.com>
X-Md4-Signature: 3348c5b9e8df1e60bbbc89f972374a56
Date: Sat, 30 May 1992 03:16:35 GMT
Approved: kent@sparky.imd.sterling.com

Submitted-by: byron@archone.tamu.edu (Byron Rakitzis)
Posting-number: Volume 30, Issue 26
Archive-name: rc/part03
Environment: UNIX
Supersedes: rc: Volume 23, Issue 61-66

#! /bin/sh
# This is a shell archive.  Remove anything before this line, then feed it
# into a shell via "sh file" or similar.  To overwrite existing files,
# type "sh file -c".
# The tool that generated this appeared in the comp.sources.unix newsgroup;
# send mail to comp-sources-unix@uunet.uu.net if you want that tool.
# Contents:  EXAMPLES.uu input.c plan9.ps.a
# Wrapped by kent@sparky on Fri May 29 20:55:23 1992
PATH=/bin:/usr/bin:/usr/ucb ; export PATH
echo If this archive is complete, you will see the following message:
echo '          "shar: End of archive 3 (of 7)."'
if test -f 'EXAMPLES.uu' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'EXAMPLES.uu'\"
else
  echo shar: Extracting \"'EXAMPLES.uu'\" \(22983 characters\)
  sed "s/^X//" >'EXAMPLES.uu' <<'END_OF_FILE'
Xbegin 644 EXAMPLES
XM5&AE<F4@:7,@;F\@<F5P;W-I=&]R>2!F;W(@=7-E9G5L(')C(&-O9&4@<VYI
XM<'!E=',@87,@>65T+"!S;R!))VT@:6YC;'5D:6YG"F$@*'-H;W)T*2!F:6QE
XM(&EN('1H92!D:7-T<FEB=71I;VX@=VET:"!S;VUE(&AE;'!F=6PO:6YT<FEG
XM=6EN9R!P:65C97,@;V8*<F,@8V]D92X*"D$@<V%M<&QE("YR8W)C"BTM+2TM
XM+2TM+2TM+2TM"DAE<F4@:7,@=&AE("YR8W)C($D@=7-E(&]N(&%R8VAO;F4Z
XM"@IU;6%S:R P,C(@"G!A=&@]*"]B:6X@+W5S<B]B:6X@+W5S<B]U8V(I"FAT
XM/6 O=7-R+V%R8V@O8FEN+VAO<W1T>7!E"F@])&AO;64*:&ES=&]R>3TD:"\N
XM:&ES=&]R>0IB:6X])&@O8FEN+R1H= IL:6(])&@O;&EB+R1H= IS:#TD:"]B
XM:6XO<V@*:6YC;'5D93TD:"]L:6(O:6YC;'5D90H*<W=I=&-H("@D:'0I('L*
XM8V%S92!S=6XJ"@E/0D523TX])RX@)R1H+V]T:&5R+V]B97)O;@H)<#TO=7-R
XM+W5C8@H)8V]M<&EL97(])V=C8R M5V%L;" M3R M9R<*"4U!3E!!5$@])&@O
XM;6%N.B]U<W(O87)C:"]M86XZ+W5S<B]M86X*"6EF("@A('X@)%1%4DT@*"DI
XM('L*"0ES='1Y(&1E8PH)"2]U<W(O87)C:"]B:6XO;7-G<R M<0H)?0IC87-E
XM(&YE>'0*"7 ]*"]U<W(O=6-B("]U<W(O8FEN("].97AT07!P<RD*"6-O;7!I
XM;&5R/2=C8R M5V%L;" M3R M9R M1$Y/1$E214Y4)PH)34%.4$%42#TD:"]M
XM86XZ+W5S<B]A<F-H+VUA;CHO=7-R+VUA;@H):68@*"$@?B D5$5232 H*2D*
XM"0ES='1Y(&1E8PIC87-E('-G:0H)<#TH+W5S<B]U8V(@+W5S<B]S8FEN("]U
XM<W(O8FEN*0H)8V]M<&EL97(])V=C8R M5V%L;" M3R M9R M1$Y/4TE'0TQ$
XM)PH)34%.4$%42#TD:"]M86XZ+W5S<B]A<F-H+VUA;CHO=7-R+V-A=&UA;@H)
XM:68@*"%[?B D5$5232 H*2!\?"!^("1415)-("II<FES*GTI"@D)<W1T>2!L
XM:6YE(#$@:6YT<B G R<@97)A<V4@)W\G(&MI;&P@)Q4G"F-A<V4@*@H)96-H
XM;R N<F-R8R!N;W0@8V]N9FEG=7)E9"!F;W(@=&AI<R!M86-H:6YE"GT*"G!A
XM=&@]*"X@)'-H("1B:6X@+W5S<B]A<F-H+V)I;B D<" O8FEN("]U<W(O8FEN
XM+U@Q,2 O971C("]U<W(O971C*0IC9'!A=&@]*"X@+BX@)&@@)&@O<W)C("1H
XM+VUI<V,@)&@O;W1H97(@)&@O861M*0I23DE.250]+60D:"<@+70@+4T@+3(T
XM,# M:" M,C0P,"MH9G)O;2<[($1/5$1)4CTD:"]M:7-C+VYE=W,*4%))3E1%
XM4CUL=PH*9FX@<R!["@EE8VAO("1S=&%T=7,*?0IF;B!C9"!["@EB=6EL=&EN
XM(&-D("0Q("8F(%P*"7-W:71C:" H)#$I('L*"6-A<V4@*"D*"0ED:7(])&AO
XM;64*"6-A<V4@*@H)"61I<CTH*0H)?0I]"F9N('!W9"!["@EI9B H?B D9&ER
XM("@I*0H)"61I<CU@+V)I;B]P=V0*"65C:&\@)&1I<@I]"F9N('@@>PH):68@
XM*'X@8'1T>2 O9&5V+V-O;G-O;&4I"@D)8VQE87)?8V]L;W)M87 *"6-L96%R
XM"@EE>&ET"GT*9FX@<"!["@EI9B H?B D:&ES=&]R>2 H*2D@>PH)"65C:&\@
XM)R1H:7-T;W)Y(&YO="!S970G(#Y;,3TR70H)"7)E='5R;B Q"@E]"@H):68@
XM*"$@?B D(RH@," Q(#(I('L*"0EE8VAO('5S86=E.B D," G6V5G<F5P('!A
XM='1E<FY=(%MS960@8V]M;6%N9%TG(#Y;,3TR70H)"7)E='5R;B Q"@E]"@H)
XM8V]M;6%N9#U@>PH)"65G<F5P("UV("=>6R )72IP*%L)(%TK?"0I)R D:&ES
XM=&]R>2!\('-W:71C:" H)",J*2!["@D)8V%S92 P"@D)"6-A= H)"6-A<V4@
XM,0H)"0EE9W)E<" D,0H)"6-A<V4@,@H)"0EE9W)E<" D,2!\('-E9" D,@H)
XM"7T@?"!T86EL("TQ"@E]"@H)96-H;R D8V]M;6%N9 H)979A;" D8V]M;6%N
XM9 I]"@II9B H?B D5$5232!D:6%L=7 @;F5T=V]R:RD@>PH)5$5233UV=#$P
XM, H)8FEF9B!Y"GT*"D$@9G)O;G0M96YD('1O($YE6%0G<R B;W!E;F9I;&4B
XM"BTM+2TM+2TM+2TM+2TM+2TM+2TM+2TM+2TM+2TM+2TM"@I.86UE9"!A9G1E
XM<B!T:&4@<V%M(")"(B!C;VUM86YD(&9O<B!O<&5N:6YG(&$@9FEL92P@=&AI
XM<R!S8W)I<'0@=V%S('=R:71T96X*8GD@4&%U;"!(86%H<BX@*$%S<W5M97,@
XM=&AE(")P:6-K(B!C;VUM86YD(&9R;VT@2V5R;FEG:&%N(&%N9"!0:6ME(&ES
XM(&%L<V\*:6X@>6]U<B!P871H+BD*"B,A+V)I;B]R8PII9B H?B D(RH@,"D*
XM(" @(" @("!E>&5C(&]P96YF:6QE"F-R96%T92 ]("@I"F9I;&5S(#T@*"D*
XM9F]R("AI(&EN("0J*0H@(" @(" @(&EF("AT97-T("UF("1I*2!["B @(" @
XM(" @(" @(" @("!F:6QE<R ]("@D9FEL97,@)&DI"B @(" @(" @?2!E;'-E
XM('L*(" @(" @(" @(" @(" @(&-R96%T92 ]("@D8W)E871E("1I*0H)?0IC
XM<F5A=&4@/2!@>R!P:6-K("1C<F5A=&4@?0IF:6QE<R ]("@D9FEL97,@)&-R
XM96%T92D*9F]R("AI(&EN("1C<F5A=&4I"B @(" @(" @/B D:0II9B H(2!^
XM("0C9FEL97,@,"D*"6]P96YF:6QE("1F:6QE<PH*02!R96%D(&9U;F-T:6]N
XM"BTM+2TM+2TM+2TM+2TM+0H*56YL:6ME('-H+"!R8R!D;V5S;B=T(&AA=F4@
XM82!R96%D+B!4:&ES(&-L979E<B!A;'1E<FYA=&EV92!R971U<FYS(&%N"F5X
XM:70@<W1A='5S(&%S('=E;&P@87,@9F5T8V@@82!V87)I86)L92X@57-E(&%S
XM"@H)<F5A9"!F;V\*"G1O('-E=" D9F]O('1O(&$@<VEN9VQE(&QI;F4@9G)O
XM;2!T:&4@=&5R;6EN86PN"@HH9'5E('1O($IO:&X@36%C:VEN(#QJ;VAN0'-Y
XM9"YD:70N8W-I<F\N874^*0H*9FX@<F5A9"!["B @(" @(" @>#TH*2!["B @
XM(" @(" @(" @(" @("!X(#T@8& @*"1N;"D@>R!A=VL@)WMP<FEN=#L@<')I
XM;G0@,#L@97AI='TG(%X@)&YL(%X@7 H@(" @(" @(" @(" @(" @(" @(" @
XM(" @(" @(" @(" @("=%3D0@>W!R:6YT(#$[('!R:6YT(#%])R!]"B @(" @
XM(" @(" @(" @(" D,2 ]("1X*#$I"B @(" @(" @(" @(" @("!R971U<FX@
XM)'@H,BD*(" @(" @("!]"GT*"D9R;VT@8W,N=VES8RYE9'4A9'=S($9R:2!!
XM=6<@(#(@,3@Z,38Z,30@,3DY,0H*(RTM+2TM+2T*(R!L<R!F<F]N="!E;F0*
XM(RTM+2TM+2T*9FX@;',)7 I["@ET97-T("UT(#$@)B8@*B ]("@M1D-B("0J
XM*0H)8G5I;'1I;B!L<R D*@I]"B,M+2TM+2TM"B,@;FP@+2!H;VQD<R!A(&YE
XM=VQI;F4L('5S969U;"!I;B!C97)T86EN(&-O;6UA;F0@<W5B<W1I='5T:6]N
XM<PHC+2TM+2TM+0IN;#TG"B<*(RTM+2TM+2T*(R!S:&]W("T@=&5L;"!M92!A
XM8F]U="!A(&YA;64*(PHC(%)U;G,@<&]S<VEB;'D@9&%N9V5R;W5S('1H:6YG
XM<R!T:')O=6=H(&-A=" M=B!I;B!O<F1E<B!T;R!P<F]T96-T"B,@;64@9G)O
XM;2!T:&4@969F96-T<R!O9B!C;VYT<F]L(&-H87)A8W1E<G,@22!M:6=H="!H
XM879E(&EN('1H90HC(&5N=FER;VYM96YT+@HC+2TM+2TM+0IF;B!S:&]W"5P*
XM>PH)*B ](&!@("1N;"![=VAA=&ES("TM("0J?0H)9F]R*&ET:7,I"@E["@D)
XM<W=I=&-H*"1>:71I<RD*"0E["@D)8V%S92 G9FX@)RH).R!E8VAO("1I=&ES
XM('P@8V%T("UV("UT"@D)8V%S92!B=6EL=&EN*@D[(&5C:&\@)&ET:7,*"0EC
XM87-E("\J"0D[(&9I;&4@)&ET:7,[(&QS("UL9" D:71I<PH)"6-A<V4@*B<]
XM)RH).R!E8VAO("1I=&ES('P@8V%T("UV("UT"@D)8V%S92 J"0D[(&5C:&\@
XM)&ET:7,Z(%5.2TY/5TXZ('5P9&%T92!S:&]W"@D)?0H)?0H):71I<R ]("@I
XM"GT*(RTM+2TM+2T*(R!496QL(&UE(&%U=&]M871I8V%L;'D@=VAE;B!A(&-O
XM;6UA;F0@:&%S(&$@;F]N>F5R;R!S=&%T=7,N"B,M+2TM+2TM"F9N('!R;VUP
XM= E<"GL*"5-T871U<R ]("1S=&%T=7,*"7X@)%-T871U<R P('Q\(&5C:&\@
XM)UMS=&%T=7,@)R13=&%T=7,G72<*?0H*(RTM+2TM+2T*(R!C:&]P("T@96-H
XM;R!T:&4@9VEV96X@;&ES="P@;&5S<R!I=',@9FEN86P@;65M8F5R"B,*(R!E
XM+F<N(&-H;W @*&$@8B!C*2 M/B H82!B*0HC+2TM+2TM+0IF;B!C:&]P('L*
XM"7X@)",J(# @,2 F)B!R971U<FX@, H)86YS(#T@)R<@>PDC(&QO8V%L('9A
XM<FEA8FQE"@D)86YS(#T@*"D*"0EW:&EL92@A('X@)",J(#$I"@D)>PH)"0EA
XM;G,@/2 H)&%N<R D,2D*"0D)<VAI9G0*"0E]"@D)96-H;R D86YS"@E]"GT*
XM"D9R;VT@87)N;VQD0&%U9&EO9F%X+F-O;2!4:'4@36%Y(#,P(# X.C0Y.C4Q
XM(#$Y.3$*"B,@8V0N<F,@+2TM('-O=7!E9"!U<"!V97)S:6]N(&]F(&-D"@HC
XM('1H:7,@:7,@9&5S:6=N960@=&\@96UU;&%T92!T:&4@9F%N8WD@=F5R<VEO
XM;B!O9B!C9"!I;B!K<V@L"B,@<V\@:68@>6]U)W)E(&$@<'5R:7-T+"!F965L
XM(&9R964@=&\@9V%G"@I?8W=D/21H;VUE"E]O;&1C=V0])&AO;64*"F9N(&-D
XM('L*"6EF("A^("0C*B P*2!["@D):68@*'X@)%]C=V0@)&AO;64I('L)(R!D
XM;R!N;W1H:6YG"@D)?2!E;'-E('L*"0D)8G5I;'1I;B!C9" F)B![(%]O;&1C
XM=V0])%]C=V0@.R!?8W=D/21H;VUE('T*"0E]"@E](&5L<V4@:68@*'X@)",J
XM(#$I('L*"0EI9B H?B D,2 M*2!["@D)"5]T/21?8W=D"@D)"6)U:6QT:6X@
XM8V0@)%]O;&1C=V0@)B8@>PH)"0D)7V-W9#TD7V]L9&-W9 H)"0D)7V]L9&-W
XM9#TD7W0*"0D)"65C:&\@)%]C=V0*"0D)?0H)"0E?=#TH*0H)"7T@96QS92![
XM"@D)"2,@:68@82!C9"!H87!P96YS('1H<F]U9V@@=&AE(&-D<&%T:"P@<F,@
XM96-H;W,*"0D)(R!T:&4@9&ER96-T;W)Y(&]N(&ET<R!O=VXN("!A;&P@=V4@
XM:&%V92!T;R!D;PH)"0DC(&ES('1R86-K('=H97)E('=E(&5N9"!U< H)"0E?
XM9&]P=V0@/2 Q"@D)"7L@?B D,2 O*B!]("8F(%]D;W!W9" ](# )(R!A8G-O
XM;'5T92!P871H"@D)"6)U:6QT:6X@8V0@)#$@)B8@>PH)"0D)7V]L9&-W9#TD
XM7V-W9 H)"0D)7V-W9#TD,0H)"0D)>R!^("1?9&]P=V0@,2!]("8F(%]C=V0]
XM8"]B:6XO<'=D"@D)"7T*"0D)7V1O<'=D/2@I"@D)?0H)?2!E;'-E(&EF("A^
XM("0C*B R*2!["@D)7W0]8'L@96-H;R D7V-W9"!\('-E9" G<SPG)#$G/"<D
XM,B<\)R!]"@D)8G5I;'1I;B!C9" D7W0@)B8@>PH)"0E?;VQD8W=D/21?8W=D
XM"@D)"5]C=V0])%]T"@D)"65C:&\@)%]C=V0*"0E]"@D)7W0]*"D*"7T@96QS
XM92!["@D)96-H;R!C9#H@=&%K97,@,"P@,2P@;W(@,B!A<F=U;65N=',@/ELQ
XM/3)="@D)8G5I;'1I;B!C9" D,2 F)B![(%]O;&1C=V0])%]C=V0@.R!?8W=D
XM/6 O8FEN+W!W9" [(&5C:&\@)%]C=V0@?0H)?0I]"@IF;B!P=V0@>R!E8VAO
XM("1?8W=D('T*"D9R;VT@=FQS:2YC<RYC86QT96-H+F5D=2%D<F%Z96X@5'5E
XM($IA;B R,2 Q-CHP,SHQ-" Q.3DR"@HC($$@:VEL;"!B=6EL=&EN+@H*(VEF
XM9&5F($)?2TE,3 HC:6YC;'5D92 \8W1Y<&4N:#X*<W1A=&EC('9O:60@8E]K
XM:6QL*&-H87(@*BIA=BD*>PH@(" @:6YT('-I9VYA;" ](%-)1U1%4DT["B @
XM("!I;G0@;B ](#$["B @("!P:61?="!P:60["B @("!B;V]L96%N(')E<SL*
XM"B @("!I9B H(6%V6S%=*2!["B @(" @(" @<V5T*%12544I.PH@(" @(" @
XM(')E='5R;CL*(" @('T*(W5N9&5F("!35%)#35 *(V1E9FEN92!35%)#35 @
XM<W1R8VUP"B @("!I9B H("<M)R ]/2!A=ELQ75LP72D@>PH@(" @(" @(&-H
XM87(@*G @/2 Q*V%V6S%=.PH@(" @(" @(&EF("@P(#T]('-T<F-M<"AA=ELQ
XM72P@(BUL(BDI>PH@(" @(" @(" @("!I;G0@<CL@8V]N<W0@:6YT(&YS:6<@
XM/2!.54U/1E-)1TY!3%,["B @(" @(" @(" @(&-O;G-T(&EN="!#(#T@-"P@
XM4B ](#$@*R H:6YT*2@H;G-I9RTR*2]#*3L*(" @(" @(" @(" @9F]R("AR
XM/3$[('(\/5([('(K*RE["B @(" @(" @(" @(" @:6YT(&H["B @(" @(" @
XM(" @(" @9F]R("AJ/7([(&H\;G-I9SL@:BL]4BE["B @(" @(" @(" @(" @
XM("!F<')I;G0H,2P@(B5S)60N("5S7'0B+"!J/#$P/R(@(CHB(BP@:BP@<VEG
XM;F%L<UMJ75LP72D["B @(" @(" @(" @(" @?0H@(" @(" @(" @(" @(&9P
XM<FEN="@Q+")<;B(I.PH@(" @(" @(" @("!]"B @(" @(" @(" @('-E="A4
XM4E5%*3L*(" @(" @(" @(" @<F5T=7)N.PH@(" @(" @('T*(" @(" @("!N
XM*RL["B @(" @(" @:68@*" H<VEG;F%L/6$R=2AP*2D@/" P*7L*(" @(" @
XM(" @(" @:6YT(&D["B @(" @(" @(" @(&9O<B H:2 ](#$[(&D@/"!.54U/
XM1E-)1TY!3%,[(&DK*RE["B @(" @(" @(" @(" @("!C:&%R(%504$526S,Q
XM72P@*G4]55!015(L("IQ.PH@(" @(" @(" @(" @(" @9F]R("AQ/7-I9VYA
XM;'-;:5U;,%T[("IQ.R!Q*RLL('4K*RD@*G4@/2!T;W5P<&5R*"IQ*3L*(" @
XM(" @(" @(" @(" @("IU(#T@)UPP)SL*"B @(" @(" @(" @(" @("!I9B H
XM*G-I9VYA;'-;:5U;,%T@)B8*(" @(" @(" @(" @(" @(" @*"%35%)#35 H
XM<VEG;F%L<UMI75LP72P@<"D@?'P@(5-44D--4"@S*W-I9VYA;'-;:5U;,%TL
XM<"D*(" @(" @(" @(" @(" @(" @('Q\("%35%)#35 H55!015(L(' I('Q\
XM("%35%)#35 H,RM54%!%4BP@<"D@*2 @*0H@(" @(" @(" @(" @(" @>PH@
XM(" @(" @(" @(" @(" @(" @('-I9VYA;" ](&D["B @(" @(" @(" @(" @
XM(" @(" @8G)E86L["B @(" @(" @(" @(" @("!]"B @(" @(" @(" @('T*
XM(" @(" @(" @(" @:68@*'-I9VYA;" \(# I>PH@(" @(" @(" @(" @(" @
XM9G!R:6YT*#(L(FMI;&PZ(&)A9"!S:6=N86P@)7-<;B(L(&%V6S%=*3L*(" @
XM(" @(" @(" @(" @('-E="A&04Q312D["B @(" @(" @(" @(" @("!R971U
XM<FX["B @(" @(" @(" @('T*(" @(" @("!]"B @("!]"B-U;F1E9B!35%)#
XM35 *"B @("!F;W(@*')E<SU44E5%.R!A=EMN73L@;BLK*7L*(" @(" @("!I
XM9B@@*'!I9" ]("AP:61?="D@83)U*&%V6VY=*2D@/" P*7L*(" @(" @(" @
XM(" @9G!R:6YT*#(L(")K:6QL.B!B860@<')O8V5S<R!N=6UB97(@)7-<;B(L
XM(&%V6VY=*3L*(" @(" @(" @(" @<F5S(#T@1D%,4T4["B @(" @(" @(" @
XM(&-O;G1I;G5E.PH@(" @(" @('T*(" @(" @("!I9B H:VEL;"AP:60L<VEG
XM;F%L*2E["B @(" @(" @(" @('5E<G)O<B@B:VEL;"(I.PH@(" @(" @(" @
XM("!R97,@/2!&04Q313L*(" @(" @(" @(" @8V]N=&EN=64["B @(" @(" @
XM?0H@(" @?0H@(" @<V5T*')E<RD["GT*(V5N9&EF"D9R;VT@86-C+G-T;VQA
XM9BYE9'4A<75A;G-T<F\@5&AU($%P<B @,B P,CHU,3HQ," Q.3DR"E)E8V5I
XM=F5D.B!F<F]M('1H;W(N86-C+G-T;VQA9BYE9'4@*%LQ,S N-S$N,3DR+C%=
XM*2!B>2!A<F-H;VYE+G1A;74N961U('=I=&@@4TU44"!I9" \-#4S,SD^.R!4
XM:'4L(#(@07!R(#$Y.3(@,#(Z-3 Z-38@+3 V,# *4F5C96EV960Z(&)Y('1H
XM;W(N86-C+G-T;VQA9BYE9'4[(%1H=2P@,B!!<'(@.3(@,#(Z-#DZ,S$@+3 V
XM,# *1&%T93H@5&AU+" R($%P<B Q.3DR(# R.C0Y.C,Q("TP-C P"D9R;VTZ
XM('%U86YS=')O0&%C8RYS=&]L868N961U"DUE<W-A9V4M260Z(#PY,C T,#(P
XM.#0Y+D%!,C8U-C9 =&AO<BYA8V,N<W1O;&%F+F5D=3X*5&\Z(&)Y<F]N0&%R
XM8VAO;F4N=&%M=2YE9'4*4W5B:F5C=#H@15A!35!,15,@:6X@,2XT8F5T80I3
XM=&%T=7,Z(%)/"@H*22!H879E(&$@;&ET=&QE(&)I="!O9B!C;V1E('=H:6-H
XM(&UI9VAT(&)E(&$@;&ET=&QE(&UO<F4@9V5N97)A;"!T:&%N"G1H92!S;W5P
XM960M=7 @=F5R<VEO;B!T:&%T(&ES(&%L<F5A9'D@=&AE<F4N($AE<F4@:70@
XM:7,L(&EF('EO=2!A<F4*:6YT97)E<W1E9"X@"@HC(&1I<F5C=&]R>2!F=6YC
XM=&EO;G,@(R,C(R,C(R,C(R,C(R,C(R,C(R,C(R,C(R,C(R,C(R,C(R,C(R,C
XM(R,C(R,C(R,C(R,C"F9N('!W9"![(&5C:&\@)%!71#L@?0H*9FX@<'5S:&0@
XM>PH@(&1I<G,@/2 H)%!71" D9&ER<RD["0D*("!B=6EL=&EN(&-D("0J.PH@
XM(%!71" ](&![8G5I;'1I;B!P=V1].PI]"@IF;B!P;W!D('L*("!S=VET8V@@
XM*"0C*BD*(" @('L*(" @(&-A<V4@, H@(" @(" ["B @("!C87-E(#$*(" @
XM(" @96-H;R G<&]P9#H@87)G=6UE;G0@)UXD,5XG(&EG;F]R960N)R ^6S$]
XM,ET["B @("!C87-E("H*(" @(" @96-H;R G<&]P9#H@=7-A9V4Z('!O<&0@
XM6VY=+B<["B @("!]"@H@(&EF("@A('X@)&1I<G,@*"DI( H@(" @>PH@(" @
XM("!B=6EL=&EN(&-D("1D:7)S*#$I.PH@(" @("!05T0@/2 D9&ER<R@Q*3L*
XM(" @(" @96-H;R D4%=$.PH@(" @(" J(#T@)&1I<G,["B @(" @('-H:69T
XM"B @(" @(&1I<G,@/2 D*CL*(" @('T*?0H*9FX@8V0@>PH@('X@)"H@*"D@
XM)B8@*B ]("1H;VUE.PH@("%^("0C*B Q("8F(&5C:&\@)V-D.B!T;V\@;6%N
XM>2!A<F=U;65N=',G(#Y;,3TR72 F)B!R971U<FX@,3L*"B @:68@*'1E<W0@
XM+7(@)"H@*2!["B @("!P=7-H9" D*CL*("!](&5L<V4@>PH@(" @96-H;R!C
XM9#H@)"H@9&]E<R!N;W0@97AI<W0N(#Y;,3TR70H@(" @<F5T=7)N(#$["B @
XM?2 *?0H*9FX@8F%C:R![('!O<&0@)"H[('T*"F9N($)A8VL@>R *("!C9" D
XM:&]M93L*("!05T0@/2 D:&]M93L*("!D:7)S(#T@*"D["GT*"F9N(&1I<G,@
XM>PH@(&5C:&\@)&1I<G,["GT*"E!71" ](&![8G5I;'1I;B!P=V1](#L@9&ER
XM<R ]("105T0)"2,@:VEC:W-T87)T"@H*"@H*1G)O;2!A8V,N<W1O;&%F+F5D
XM=2%Q=6%N<W1R;R!4:'4@07!R(" R(# R.C4S.C0P(#$Y.3(*4F5C96EV960Z
XM(&9R;VT@=&AO<BYA8V,N<W1O;&%F+F5D=2 H6S$S,"XW,2XQ.3(N,5TI(&)Y
XM(&%R8VAO;F4N=&%M=2YE9'4@=VET:"!33510(&ED(#PT-3,S.3X[(%1H=2P@
XM,B!!<'(@,3DY,B P,CHU,SHS." M,#8P, I296-E:79E9#H@8GD@=&AO<BYA
XM8V,N<W1O;&%F+F5D=3L@5&AU+" R($%P<B Y,B P,CHU,3HT-B M,#8P, I$
XM871E.B!4:'4L(#(@07!R(#$Y.3(@,#(Z-3$Z-#8@+3 V,# *1G)O;3H@<75A
XM;G-T<F] 86-C+G-T;VQA9BYE9'4*365S<V%G92U)9#H@/#DR,#0P,C X-3$N
XM04$R-C4W,T!T:&]R+F%C8RYS=&]L868N961U/@I4;SH@8GER;VY 87)C:&]N
XM92YT86UU+F5D=0I3=6)J96-T.B!%6$%-4$Q%4PI3=&%T=7,Z(%)/"@H*3&ET
XM=&QE('EP(&AA8VL@=VAI8V@@86-T)W,@;&EK92!^('<O;R!S>6YT871I8R!S
XM=6=A<B H9F]R('1H;W-E('=H;R!D;PIN;W0@:&%V92!T:&4@;'5X=7)Y(&]F
XM('-E=&EN9R!U<"!S>6UB;VQI8R!L:6YK<R!T;R!A;&P@=7-E<B=S(&AO;65S
XM"@HC('5S97(@9G5N8W1I;VX@(R,C(R,C(R,C(R,C(R,C(R,C(R,C(R,C(R,C
XM(R,C(R,C(R,C(R,C(R,C(R,C(R,C(R,C(R,C(R,C"F9N('4@=7-E<B![(" *
XM("!I;F9O(#T@*"D*("!I;F9O(#T@8& @*"<Z)RD@>WEP;6%T8V@@)#$@<&%S
XM<W=D(#Y;,ET@+V1E=B]N=6QL('T*"B @:68@*'X@)&EN9F\@*"DI('L*(" @
XM(&5C:&\@=7-E<B D,2!U;FMN;W=N(#Y;,3TR73L*(" @(')E='5R;B Q.PH@
XM('T@96QS92!["B @("!E8VAO("1I;F9O*#8I"B @("!I9B H?B D,"!U<V5R
XM*2 *(" @(" @8V0@)&EN9F\H-BD*("!]"GT*"@I&<F]M('-T;VQA9BYE9'4A
XM<75A;G-T<F\@4W5N($%P<B @-2 P-#HU,SHS-" Q.3DR"D1A=&4Z(%-U;BP@
XM-2!!<'(@,3DY,B P-#HU,SHP." M,#4P, I&<F]M.B!Q=6%N<W1R;T!S=&]L
XM868N961U("A%<FEK(%%U86YS=')O;2D*5&\Z(&)Y<F]N0&%R8VAO;F4N=&%M
XM=2YE9'4*4W5B:F5C=#H@;6%N('=R:71T96X@:6X@<F,@"E-T871U<SH@4D\*
XM"DD@=VAI<'!E9"!T:&ES('5P(&)E8V%U<V4@=&AE($YE6%1S(&AE<F4@:6YS
XM:7-T(&]N('5S:6YG($U!3E!!1T52"FEN<W1E860@;V8@4$%'15(@86YD(&]T
XM:&5R=VES92!B96EN9R!O8FYO>&EO=7,@+B N("X@"@I!;GEW87D@+BXN($D@
XM:&]P92!Y;W4@87!P<F]V90H*(R$O8FEN+W)C"B,C(R,C(R,C(R,C(R,C(R,C
XM(R,C(R,C(R,C(R,C(R,C(R,C(R,C(R,C(R,C(R,C(R,C(R,C(R,C(R,C(R,C
XM(R,C(R,C(R,C(R,*(R!F:6QE.@D);6%N"0D)"0D)"2,*(PD)"0D)"0D)"2,*
XM(R!O8FIE8W0Z"61I<W!L87D@;6%N('!A9V5S"0D)"0DC"B,)"0D)"0D)"0DC
XM"B,@8G5G<SH)"2H@<VQO=PD)"0D)"0DC"B,)"2H@9&]E<R!N;W0@:VYO=R!A
XM8F]U="!F;70@9FEL97,)"0D)(PHC"0D)"0D)"0D)(PHC($5R:6L@475A;G-T
XM<F]M"0D)"0D)"2,*(R Q,2X@1F5B<G5A<B Q.3DR"0D)"0D)"2,*(R,C(R,C
XM(R,C(R,C(R,C(R,C(R,C(R,C(R,C(R,C(R,C(R,C(R,C(R,C(R,C(R,C(R,C
XM(R,C(R,C(R,C(R,C(R,C(R,C(R,C(PI0051(/2]B:6XZ+W5S<B]B:6XZ+W5S
XM<B]U8V(Z+W5S<B]L;V-A;"]B:6XZ)%!!5$@@.R *5%)/1D8@/2 H;G)O9F8@
XM+6AQ("U48W)T*3L*;6%C<F]S/6%N.PIS96-T:6]N<STH8V%T,2!C870R(&-A
XM=#,@8V%T-"!C870U(&-A=#8@8V%T-R!C870X(&-A=&P@;6%N,2!M86XR(&UA
XM;C,@;6%N-"!<"@D@(&UA;C4@;6%N-B!M86XW(&UA;C@@;6%N;"D*)&YL/2<*
XM)PIF;B!S:6=I;G0@<VEG:'5P('-I9W%U:70@<VEG86QR;2!S:6=T97)M('L@
XM<FT@+68@)$)A=#L@97AI=" R.WT*(" *9FX@=7-A9V4@>PH@(&5C:&\@=7-A
XM9V4Z("0P(%LM72!;+71=(%LM32!P871H72!;+50@;6%C<F]S72!;6W-E8W1I
XM;VY=('1I=&QE72 N+BX^6S$],ET["B @97AI=" Q.PI]"@IN/2@I.PIF;B!S
XM:&EF=&X@>PH@(&X]*"1N(#$I"GT*"GX@)%!!1T52("@I("8F('1E<W0@+70@
XM,2 F)B!004=%4CUM;W)E.R C9&5F875L="!P86=E<@H@(" @( IW:&EL92 H
XM?B D,2 M*BD*("![( H@(" @<W=I=&-H("@D,2D*(" @(" @>PH@(" @("!C
XM87-E("T*"6EF("A^("1004=%4B!T<F]F9BD*"2 @96-H;R!B860@8V]M8FEN
XM871I;VX@;V8@9FQA9W,@/ELQ/3)=("8F('5S86=E.PH)4$%'15(]8V%T.PH@
XM(" @("!C87-E("UT"@E^(%123T9&("@I("8F(%123T9&(#T@*'1R;V9F("UT
XM*3L*"7X@5$-!5" @*"D@)B8@4$%'15(]*&QP<B M="D["B @(" @(&-A<V4@
XM+4T*"7-H:69T.PH)?B D,2 H*2 F)B!U<V%G93L*"0H)34%.4$%42#TD,3L*
XM(" @(" @8V%S92 M5 H)<VAI9G0["@E^("0Q("@I("8F('5S86=E.PH);6%C
XM<F]S/20Q.PH@(" @("!C87-E("UK"@EF9FQA9STH*3L@:V9L86<],3L*(" @
XM(" @("!S:&EF=#L*(" @(" @("!B<F5A:SL*(" @(" @8V%S92 M9@H)(R!L
XM;V-A=&4@<F5L871E9"!T;V\@9FEL96YA;65S"@EK9FQA9STH*3L@9F9L86<]
XM,3L*(" @(" @("!S:&EF=#L*(" @(" @("!B<F5A:SL*(" @(" @8V%S92 M
XM*@H)96-H;R!B860@9FQA9R G8"=>)#%>)R<G)R ^6S$],ET["@EU<V%G93L*
XM(" @(" @?0H@(" @<VAI9G0["B @?0H*:68@*"%^("0C*B Q*2!["B @?B D
XM,2!;;#$M.%T@)B8@>R!S;F%M93TD,2 [('-E8W1I;VYS/2AC870@;6%N*5XD
XM,2 [('-H:69T('T*(" C:&%C:R!F;W(@<W5N+7-T>6QE(&UA;B!P86=E<PH@
XM('X@)#$@6VPQ+3A=/R F)B![('-N86UE/20Q(#L@<V5C=&EO;G,]*&-A="!M
XM86XI7F![96-H;R D,7P@8W5T("UC,7T@.R!S:&EF="!]"GT*"FEF("A^(#$@
XM)&9F;&%G("1K9FQA9RD@>PH@(&1I<FQI<W0]*"D["B @9F]R("AD(&EN(&!@
XM*#HD;FPI('ME8VAO("1-04Y0051(?2D*(" @('1E<W0@+7,@)&1>+W=H871I
XM<R F)B!D:7)L:7-T/2@D9&ER;&ES=" D9%XO=VAA=&ES*3L*(" *("!^("0Q
XM("@I("8F('5S86=E.PH@( H@(&EF("A^("1F9FQA9R Q*2![( H@(" @=VAI
XM;&4@*"%^("0Q("@I*2!["B @(" @(&-M9#U@>V5C:&\@)#$@?"!S960@)W,O
XM7BXJ7"\O+V<G?0H@(" @("!E9W)E<" M:" G7B=>)&-M9"<@)R D9&ER;&ES
XM=#L*(" @(" @<VAI9G0["B @("!]"B @?2!E;'-E('L*(" @('=H:6QE("@A
XM?B D,2 H*2D@>PH@(" @("!G<F5P("UH("0Q("1D:7)L:7-T.PH@(" @("!S
XM:&EF=#L*(" @('T*("!]"B!E>&ET(# ["GT*"G,],#L)( IW:&EL92 H(7X@
XM)#$@*"DI('L*("!F;W(@*&1I<B!I;B!@8"@Z)&YL*2![96-H;R D34%.4$%4
XM2'TI('L*(" @(&9I;&5L:7-T/2@D9FEL96QI<W0@8'ME8VAO("1D:7(O7B1S
XM96-T:6]N<UXO)#%>+BH@?%P*"0D)(" @('1R("<@)R G7#$R)R!\(&=R97 @
XM+78@)RHG?2D*"B @(" C(&-O;65N="!T:&ES(&]U="!I9B!Y;W4@9&]N)W0@
XM8V%R92!A8F]U="!S<&5E9"P@8G5T( H@(" @(R!W;W5L9"!R871H97(@9FEN
XM9"!A;&P@=&AE('!A9V5S+@H@(" @?B D9FEL96QI<W0@*"D@?'P@8G)E86L[
XM"B @?0H*("!I9B H?B D9FEL96QI<W0@*"DI('L*(" @(&EF("A^("0C<V5C
XM=&EO;G,@,BD@>PH@(" @("!E8VAO(&YO(&5N=')Y(&9O<B D,2!I;B!S96-T
XM:6]N("=@)R1S;F%M92<G)R<@;V8@=&AE(&UA;G5A;" ^6S$],ET["B @("!]
XM(&5L<V4@>PH@(" @("!E8VAO(&YO(&5N=')Y(&9O<B G8"<D,2<G)R<@9F]U
XM;F0N(#Y;,3TR73L*(" @('T*(" @(',],3L*("!](&5L<V4@>PH*(" @(&5C
XM:&\@)&9I;&5L:7-T("<H)R D(V9I;&5L:7-T("<I)R ^6S$],ET["@H@(" @
XM9F]R("AF:6QE(&EN("1F:6QE;&ES="D@>PH@(" @("!I9B H?B D9FEL92 J
XM+V-A=%LQ+3AL72\J*2!["@E#870@/2 H)$-A=" D9FEL92D["B @(" @('T@
XM96QS92!["@DC('-E87)C:"!F;W(@9'5P<PH)9&]N=#TH*0H)9F]R("AX(&EN
XM("1#870I('L*"2 @:68@*'X@8'ME8VAO("1X('P@('-E9" G<R]<+UMM8UUA
XM6VYT75LQ+3AL72\O)WT@7 H)(" @(" @("!@>V5C:&\@)&9I;&4@?" @<V5D
XM("=S+UPO6VUC76%;;G1=6S$M.&Q=+R\G?2D@>PH)(" @(&1O;G0],3L*"2 @
XM("!B<F5A:SL*"2 @?0H)?0H*"6EF("A^("1D;VYT("@I*2!["@D@(&-D(&![
XM96-H;R D9FEL92!\('-E9" G<R]M86Y;,2TX72XJ+R\G?0H)("!E8VAO("UN
XM($9O<FUA='1I;F<@+BXN"@D@("144D]&1B M;5XD;6%C<F]S("1F:6QE(#X@
XM+W1M<"]M86Y>)'!I9%XD(VX@)B8@7 H)"4)A=" ]("@D0F%T("]T;7 O;6%N
XM7B1P:61>)"-N*0H*"2 @<VAI9G1N.PH)("!E8VAO("<@)V1O;F4N"@E]"B @
XM(" @('T*(" @('T*("!]( H@('-H:69T.PI]"@I[("%^("@I("1#870@?'P@
XM(7X@*"D@)$)A="!]("8F("1004=%4B D0V%T("1"870["@IR;2 M9B D0F%T
XM.PI^("1S("@I('Q\(&5X:70@)',["B @(" @"F5X:70@,#L*"@H*1G)O;2!O
XM<V8N;W)G(7)S86QZ(%1H=2!!<'(@,C,@,38Z,C(Z,S(@,3DY,@I$871E.B!4
XM:'4L(#(S($%P<B Q.3DR(#$V.C(R.C W("TP-3 P"D9R;VTZ(')S86QZ0&]S
XM9BYO<F<*5&\Z(&)Y<F]N0&%R8VAO;F4N=&%M=2YE9'4*4W5B:F5C=#H@3VYE
XM(&9O<B!Y;W5R($5804U03$53(&9I;&4*4W1A='5S.B!23PH*57-E"@ET<FEM
XM:&ES="!;+2-L:6YE<UT*=')I;7,@>6]U<B!H:7-T;W)Y(&9I;&4@8F%C:SL@
XM=7-E9G5L(&9O<B!F;VQK<R!W:71H(&1I<R!Q=6]T82=S(#HM*0IF;B!T<FEM
XM:&ES="![(' Q/2TQ,# @>PH@(" @8W @)&AI<W1O<GD@)&AI<W1O<GE>)WXG
XM"B @("!^("0C*B Q("8F(' Q/20Q"B @("!T86EL("1P,2 \)&AI<W1O<GE>
XM)WXG(#XD:&ES=&]R>0H@(" @<FT@)&AI<W1O<GE>)WXG"GT@?0H*1G)O;2!0
XM82YD96,N8V]M(75U8W @36]N($%P<B R-R Q,CHR-3HP,B Q.3DR"D1A=&4Z
XM($UO;BP@,C<@07!R(#$Y.3(@,3(Z,34Z,3@@+3 U,# *1G)O;3H@:&%A:') 
XM861O8F4N8V]M"E1O.B!">7)O;B!286MI='II<R \8GER;VY 87)C:&]N92YT
XM86UU+F5D=3X*4W5B:F5C=#H@82!N96%T(&QI='1L92!R8R!S8W)I<'0*"G=H
XM870@>6]U(&AA=F4@=&\@:VYO=R!T;R!U;F1E<G-T86YD('1H:7,Z"@DD;60@
XM9F]R(&UE(&ES('5S=6%L;'D@;V)J+B1M86-H:6YE"@EM>2!M:V9I;&5S(&)U
XM:6QD("HN;RP@*BYA+"!A;F0@=&AE(&$N;W5T<R!I;B D;60*"71H:7,@:7,@
XM;7D@86-C('-C<FEP="P@=VAI8V@@:2!U<V4@9F]R(&-O;7!I;&EN9R!A9&]B
XM92!R;W5T:6YE<PHM+2T*(R$@+W5S97(O:&%A:'(O8FEN+VYE>'0O<F,*"F-C
XM(#T@8V,*<')O=&\@/2 G+4104D]43U194$53/3$G"@IS=VET8V@@*"1M9"D@
XM>PIC87-E(&YO<')O=&\N)&UA8VAI;F4["7!R;W1O(#T@)RU$4%)/5$]465!%
XM4STP)PIC87-E(&=P<F]F+B1M86-H:6YE.PEC8R ]("@D8V,@+7!G*0IC87-E
XM('!R;V8N)&UA8VAI;F4["6-C(#T@*"1C8R M<"D*8V%S92!L8V]M<"XD;6%C
XM:&EN93L)8V,@/2!L8V]M< I]"F5X96,@)&-C("1P<F]T;R G+41004-+04=%
XM7U-014-3/2)P86-K86=E+F@B)R G+41)4U ]:7-P7VUC-C@P,C G("<M1$]3
XM/6]S7VUA8V@G("0J"@I&<F]M(')C+6]W;F5R(%1U92!-87D@,3(@,30Z-30Z
XM,3 @,3DY,@I296-E:79E9#H@9G)O;2!P;W-T;6%N+F]S9BYO<F<@*%LQ,S N
XM,3 U+C$N,34R72D@8GD@87)C:&]N92YT86UU+F5D=2!W:71H(%--5% @:60@
XM/#0U,S,W/CL@5'5E+" Q,B!-87D@,3DY,B Q-#HS.#HQ-B M,#4P, I296-E
XM:79E9#H@9G)O;2!E87)T:"YO<V8N;W)G(&)Y('!O<W1M86XN;W-F+F]R9R H
XM-2XV-"LO3U-&(#$N,"D*"6ED($%!,30T.# [(%1U92P@,3(@36%Y(#DR(#$S
XM.C(U.C S("TP-# P"E)E8V5I=F5D.B!B>2!E87)T:"YO<V8N;W)G("@U+C8T
XM+S0N-RD@:60@04$P,S0Y.3L@5'5E+" Q,B!-87D@.3(@,3,Z,C4Z,#(@+3 T
XM,# *1&%T93H@5'5E+" Q,B!-87D@,3DY,B Q,CHR-3HP,B M,#4P, I&<F]M
XM.B!R<V%L>D!O<V8N;W)G"DUE<W-A9V4M260Z(#PY,C U,3(Q-S(U+D%!,#,T
XM.3E 96%R=&@N;W-F+F]R9SX*5&\Z(')C0&%R8VAO;F4N=&%M=2YE9'4*4W5B
XM:F5C=#H@57-E9G5L(&9U;F-T:6]N"E-T871U<SH@4@H*270@;&]O:W,@;&EK
XM92!L:6YE(&YO:7-E+"!B=70@:70@='5R;G,@=&AI;F=S(&QI:V4*"2]H;VUE
XM+W)S86QZ+V9O;R]B87(*:6YT;PH)?B]F;V\O8F%R"@I5<V5F=6P@9F]R('=H
XM96X@>6]U('!U="!Y;W5R(&-U<G)E;G0@9&ER96-T;W)Y('5P(&EN('EO=7(@
XM:6-O;B!T:71L92X*0GD@9'5P;&EC871I;F<@=&AE("1H;VUE('-E8W1I;VX@
XM>6]U(&-A;B!M86ME('1H:6YG<R!L:6ME"@DO<')O:F5C="]D8V4O8G5I;&0O
XM9&-E,2XP+C$O<W)C+W)P8PIB96-O;64*"21-64)4+W-R8R]R<&,*"B,C("!)
XM9B!A('!A=&AN86UE('-T87)T<R!W:71H("1H;VUE+"!T=7)N("1H;VUE(&EN
XM=&\@?BX@(%5S97,@86QL(&)U:6QT+6EN<RX*9FX@=&EL9&5P871H('L@<#$]
XM*"D@:3TH*2!["B @("!P,3TD,0H@(" @<W=I=&-H("@D<#$I('L*(" @(&-A
XM<V4@)&AO;64@)&AO;64O*@H)(R!3<&QI="!A<F<@:6YT;R!C;VUP;VYE;G1S
XM"@DJ/6!@("@O*2![(&5C:&\@+6X@)' Q('T*"2,@4VAI9G0@9&]W;B!B>2!N
XM=6UB97(@;V8@8V]M<&]N96YT<R!I;B D:&]M90H)9F]R("AI(&EN(&!@("@O
XM*2![(&5C:&\@+6X@)&AO;64@?2 I('-H:69T"@DC($=L=64@8F%C:R!T;V=E
XM=&AE<@H)<#$])WXG"@EF;W(@*&DI(' Q/21P,2!>("<O)R!>("1I"@EE8VAO
XM("1P,0H@(" @8V%S92 J"@EE8VAO("1P,0H@(" @?0H@(" @<F5T=7)N(# *
XM?2!]"@I&<F]M(&]S9BYO<F<A<G-A;'H@5'5E($UA>2 Q,B Q-3HT-SHQ,B Q
XM.3DR"E)E8V5I=F5D.B!F<F]M('!O<W1M86XN;W-F+F]R9R H6S$S,"XQ,#4N
XM,2XQ-3)=*2!B>2!A<F-H;VYE+G1A;74N961U('=I=&@@4TU44"!I9" \-#4S
XM,38^.R!4=64L(#$R($UA>2 Q.3DR(#$U.C0W.C V("TP-3 P"E)E8V5I=F5D
XM.B!F<F]M(&5A<G1H+F]S9BYO<F<@8GD@<&]S=&UA;BYO<V8N;W)G("@U+C8T
XM*R]/4T8@,2XP*0H):60@04$R,3 W,#L@5'5E+" Q,B!-87D@.3(@,38Z-#8Z
XM-3@@+3 T,# *4F5C96EV960Z(&)Y(&5A<G1H+F]S9BYO<F<@*#4N-C0O-"XW
XM*2!I9"!!03 Y,SDV.R!4=64L(#$R($UA>2 Y,B Q-CHT-CHU-B M,#0P, I$
XM871E.B!4=64L(#$R($UA>2 Q.3DR(#$U.C0V.C4V("TP-3 P"D9R;VTZ(')S
XM86QZ0&]S9BYO<F<*365S<V%G92U)9#H@/#DR,#4Q,C(P-#8N04$P.3,Y-D!E
XM87)T:"YO<V8N;W)G/@I4;SH@8GER;VY 87)C:&]N92YT86UU+F5D=0I3=6)J
XM96-T.B!293H@57-E9G5L(&9U;F-T:6]N"E-T871U<SH@4@H*/G=O=RX@=&AA
XM;FMS+"!I)VQL(&%D9"!I="!T;R!%6$%-4$Q%4RX*1VQA9"!Y;W4@;&EK92X@
XM($=E='1I;F<@<V]M971H:6YG(&%D9&5D('1O($5804U03$53(&AA<R!B965N
XM(&$@9V]A;"!O9B!M:6YE+BXN"@I))W9E(&)E96X@=&AI;FMI;F<L(&$@8FET
XM+"!A8F]U="!A(&UO<F4@9V5N97)A;"!W87D@;V8@9&]I;F<@:70N("!)('=A
XM;G0*82 B<')E9FEX+7-U8B(@9G5N8W1I;VXL(&QI:V4@=&AI<PH)<')E9FEX
XM("1S;VUE7W!A=&@@=F%R,2!V87(R('9A<C,@=F%R-"!V87(U"E1H870@=V]U
XM;&0@=&%K92!S;VUE7W!A=&@@86YD(')E<&QA8V4@86YY(&QE861I;F<@)'9A
XM<C$@*&5T8RD@=F%L=65S"G=I=&@@=&AE('9A<FEA8FQE(&YA;64N("!2971U
XM<FX@;VX@=&AE(&9I<G-T(&UA=&-H+@H*2&UM("TM(&-O;64@=&\@=&AI;FL@
XM;V8@:70L('1H870G<R!V97)Y(&5A<WD@=&\@9&\Z"@HC(%5S92!P871H<')E
XM9FEX(&9I;&5N86UE('9A<C$@=F%R,B!V87(S"B,@<F5T=7)N<R!F:6QE;F%M
XM92P@=VET:"!L96%D:6YG('!R969I>&5S("AI;B D=F%R,2XN+BD@='5R;F5D
XM(&EN=&\@=&AE"B,@<W1R:6YG("1V87(Q+BXN"F9N('!A=&AP<F5F:7@@>R!P
XM,3TH*2!I/2@I(&H]*"D@>PH@(" @<#$])#$@.R!S:&EF= H@(" @9F]R("AI
XM*2!["@E^("1P,2 D)&D@)"1I7B\J("8F('L*"2 @(" J/6!@("@O*2![(&5C
XM:&\@+6X@)' Q('T*"2 @("!F;W(@*&H@:6X@8& @*"\I('L@96-H;R M;B D
XM)&D@?2 I('-H:69T"@D@(" @<#$])R0G7B1I"@D@(" @9F]R("AJ*2!P,3TD
XM<#$@7B G+R<@7B D:@H)(" @(&5C:&\@)' Q"@D@(" @<F5T=7)N(# *"7T*
XM(" @('T*(" @(&5C:&\@)' Q"B @("!R971U<FX@, I]('T*"FAO;64]+W5S
XM97(O=7-E<G,O<G-A;'H*>CTO=7-R+W5S97)S"G!A=&AP<F5F:7@@+W5S<B]U
XM<V5R<R]R<V%L>B!H;VUE('5S<@DC("TM/B D:&]M90IP871H<')E9FEX("]U
XM<W(O=7-E<G,O<G-A;'H@>@D)(R M+3X@)'HO<G-A;'H*<&%T:'!R969I>" O
XM=7-R+W5S97)S+W)S86QZ+V9O;R!Z(&AO;64)(R M+3X@)'HO<G-A;'HO9F]O
XM"G!A=&AP<F5F:7@@+W5S<B]U<V5R<R]R<V%L>B]F;V\@:&]M90DC("TM/B D
X*:&]M92]F;V\*"G@@
X 
Xend
END_OF_FILE
  if test 22983 -ne `wc -c <'EXAMPLES.uu'`; then
    echo shar: \"'EXAMPLES.uu'\" unpacked with wrong size!
  else
    echo shar: Uudecoding \"'EXAMPLES.uu'\" \(16660 characters\)
    cat EXAMPLES.uu | uudecode
    if test -f EXAMPLES ; then
        rm EXAMPLES.uu
    fi
  fi
  # end of 'EXAMPLES.uu'
fi
if test -f 'input.c' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'input.c'\"
else
  echo shar: Extracting \"'input.c'\" \(7955 characters\)
  sed "s/^X//" >'input.c' <<'END_OF_FILE'
X/* input.c: i/o routines for files and pseudo-files (strings) */
X
X#include <errno.h>
X#include <setjmp.h>
X#include "rc.h"
X#include "jbwrap.h"
X
X/*
X   NB: character unget is supported for up to two characters, but NOT
X   in the case of EOF. Since EOF does not fit in a char, it is easiest
X   to support only one unget of EOF.
X*/
X
Xtypedef struct Input {
X	inputtype t;
X	char *ibuf;
X	int fd, index, read, lineno, last;
X	bool saved, eofread;
X} Input;
X
X#define BUFSIZE ((SIZE_T) 256)
X
X#ifdef READLINE
Xextern char *readline(char *);
Xextern void add_history(char *);
Xstatic char *rlinebuf;
X#endif
X
Xchar *prompt, *prompt2;
Xbool rcrc;
X
Xstatic int dead(void);
Xstatic int fdgchar(void);
Xstatic int stringgchar(void);
Xstatic void history(void);
Xstatic void ugdead(int);
Xstatic void pushcommon(void);
X
Xstatic char *inbuf;
Xstatic SIZE_T istacksize, chars_out, chars_in;
Xstatic bool eofread = FALSE, save_lineno = TRUE;
Xstatic Input *istack, *itop;
Xstatic char *histstr;
Xstatic int histfd;
X
Xstatic int (*realgchar)(void);
Xstatic void (*realugchar)(int);
X
Xint last;
X
Xextern int gchar() {
X	if (eofread) {
X		eofread = FALSE;
X		return last = EOF;
X	}
X	return (*realgchar)();
X}
X
Xextern void ugchar(int c) {
X	(*realugchar)(c);
X}
X
Xstatic int dead() {
X	return last = EOF;
X}
X
Xstatic void ugdead(int c) {
X	return;
X}
X
Xstatic void ugalive(int c) {
X	if (c == EOF)
X		eofread = TRUE;
X	else
X		inbuf[--chars_out] = c;
X}
X
X/* get the next character from a string. */
X
Xstatic int stringgchar() {
X	return last = (inbuf[chars_out] == '\0' ? EOF : inbuf[chars_out++]);
X}
X
X/* signal-safe readline wrapper */
X
X#ifdef READLINE
X#ifndef SVSIGS
Xstatic char *rc_readline(char *prompt) {
X	char *r;
X	interrupt_happened = FALSE;
X	if (!setjmp(slowbuf.j)) {
X		slow = TRUE;
X		if (!interrupt_happened)
X			r = readline(prompt);
X		else
X			r = NULL;
X	} else
X		r = NULL;
X	slow = FALSE;
X	if (r == NULL)
X		errno = EINTR;
X	SIGCHK;
X	return r;
X}
X#else
X#define rc_readline readline
X#endif /* SVSIGS */
X#endif /* READLINE */
X
X/*
X   read a character from a file-descriptor. If GNU readline is defined, add a newline and doctor
X   the buffer to look like a regular fdgchar buffer.
X*/
X
Xstatic int fdgchar() {
X	if (chars_out >= chars_in + 2) { /* has the buffer been exhausted? if so, replenish it */
X		while (1) {
X#ifdef READLINE
X			if (interactive && istack->fd == 0) {
X				rlinebuf = readline(prompt);
X				if (rlinebuf == NULL) {
X					chars_in = 0;
X				} else {
X					if (*rlinebuf != '\0')
X						add_history(rlinebuf);
X					chars_in = strlen(rlinebuf) + 1;
X					efree(inbuf);
X					inbuf = ealloc(chars_in + 3);
X					strcpy(inbuf+2, rlinebuf);
X					strcat(inbuf+2, "\n");
X				}
X			} else
X#endif
X				{
X				long /*ssize_t*/ r = rc_read(istack->fd, inbuf + 2, BUFSIZE);
X				if (r < 0) {
X					if (errno == EINTR)
X						continue; /* Suppose it was interrupted by a signal */
X					uerror("read");
X					rc_exit(1);
X				}
X				chars_in = (SIZE_T) r;
X			}
X			break;
X		}
X		if (chars_in == 0)
X			return last = EOF;
X		chars_out = 2;
X		if (dashvee)
X			writeall(2, inbuf + 2, chars_in);
X		history();
X	}
X	return last = inbuf[chars_out++];
X}
X
X/* set up the input stack, and put a "dead" input at the bottom, so that yyparse will always read eof */
X
Xextern void initinput() {
X	istack = itop = ealloc(istacksize = 256 * sizeof (Input));
X	istack->t = iFd;
X	istack->fd = -1;
X	realugchar = ugalive;
X}
X
X/* push an input source onto the stack. set up a new input buffer, and set gchar() */
X
Xstatic void pushcommon() {
X	SIZE_T idiff;
X	istack->index = chars_out;
X	istack->read = chars_in;
X	istack->ibuf = inbuf;
X	istack->lineno = lineno;
X	istack->saved = save_lineno;
X	istack->last = last;
X	istack->eofread = eofread;
X	istack++;
X	idiff = istack - itop;
X	if (idiff >= istacksize / sizeof (Input)) {
X		itop = erealloc(itop, istacksize *= 2);
X		istack = itop + idiff;
X	}
X	realugchar = ugalive;
X	chars_out = 2;
X	chars_in = 0;
X}
X
Xextern void pushfd(int fd) {
X	pushcommon();
X	istack->t = iFd;
X	save_lineno = TRUE;
X	istack->fd = fd;
X	realgchar = fdgchar;
X	inbuf = ealloc(BUFSIZE + 2);
X	lineno = 1;
X}
X
Xextern void pushstring(char **a, bool save) {
X	pushcommon();
X	istack->t = iString;
X	save_lineno = save;
X	inbuf = mprint("..%A", a);
X	realgchar = stringgchar;
X	if (save_lineno)
X		lineno = 1;
X	else
X		--lineno;
X}
X
X/* remove an input source from the stack. restore the right kind of getchar (string,fd) etc. */
X
Xextern void popinput() {
X	if (istack->t == iFd)
X		close(istack->fd);
X	efree(inbuf);
X	--istack;
X	realgchar = (istack->t == iString ? stringgchar : fdgchar);
X	if (istack->fd == -1) { /* top of input stack */
X		realgchar = dead;
X		realugchar = ugdead;
X	}
X	last = istack->last;
X	eofread = istack->eofread;
X	inbuf = istack->ibuf;
X	chars_out = istack->index;
X	chars_in = istack->read;
X	if (save_lineno)
X		lineno = istack->lineno;
X	else
X		lineno++;
X	save_lineno = istack->saved;
X}
X
X/* flush input characters upto newline. Used by scanerror() */
X
Xextern void flushu() {
X	int c;
X	if (last == '\n' || last == EOF)
X		return;
X	while ((c = gchar()) != '\n' && c != EOF)
X		; /* skip to newline */
X	if (c == EOF)
X		ugchar(c);
X}
X
X/* the wrapper loop in rc: prompt for commands until EOF, calling yyparse and walk() */
X
Xextern Node *doit(bool execit) {
X	bool eof;
X	Jbwrap j;
X	Estack e1, e2;
X	Edata jerror;
X	if (dashen)
X		execit = FALSE;
X	setjmp(j.j);
X	jerror.jb = &j;
X	except(eError, jerror, &e1);
X	for (eof = FALSE; !eof;) {
X		Edata block;
X		block.b = newblock();
X		except(eArena, block, &e2);
X		SIGCHK;
X		if (dashell) {
X			char *fname[3];
X			fname[1] = concat(varlookup("home"), word("/.rcrc", NULL))->w;
X			fname[2] = NULL;
X			rcrc = TRUE;
X			dashell = FALSE;
X			b_dot(fname);
X		}
X		if (interactive) {
X			List *s;
X			if (!dashen && fnlookup("prompt") != NULL) {
X				static char *arglist[] = { "prompt", NULL };
X				funcall(arglist);
X			}
X			if ((s = varlookup("prompt")) != NULL) {
X#ifdef READLINE
X				prompt = s->w;
X#else
X				fprint(2, "%s", s->w);
X#endif
X				prompt2 = (s->n == NULL ? "" : s->n->w);
X			}
X		}
X		inityy();
X		if (yyparse() == 1 && execit)
X			rc_raise(eError);
X		eof = (last == EOF); /* "last" can be clobbered during a walk() */
X		if (parsetree != NULL) {
X			if (execit)
X				walk(parsetree, TRUE);
X			else if (dashex && dashen)
X				fprint(2, "%T\n", parsetree);
X		}
X		unexcept(); /* eArena */
X	}
X	popinput();
X	unexcept(); /* eError */
X	return parsetree;
X}
X
X/* parse a function imported from the environment */
X
Xextern Node *parseline(char *extdef) {
X	int i = interactive;
X	char *in[2];
X	Node *fun;
X	in[0] = extdef;
X	in[1] = NULL;
X	interactive = FALSE;
X	pushstring(in, TRUE);
X	fun = doit(FALSE);
X	interactive = i;
X	return fun;
X}
X
X/* write last command out to a file. Check to see if $history has changed, also */
X
Xstatic void history() {
X	List *histlist;
X	SIZE_T a;
X	if (!interactive)
X		return;
X	if ((histlist = varlookup("history")) == NULL) {
X		if (histstr != NULL) {
X			efree(histstr);
X			close(histfd);
X			histstr = NULL;
X		}
X		return;
X	}
X	if (histstr == NULL || !streq(histstr, histlist->w)) { /* open new file */
X		if (histstr != NULL) {
X			efree(histstr);
X			close(histfd);
X		}
X		histstr = ecpy(histlist->w);
X		histfd = rc_open(histstr, rAppend);
X		if (histfd < 0) {
X			uerror(histstr);
X			efree(histstr);
X			histstr = NULL;
X			varrm("history", FALSE);
X		}
X	}
X	/*
X	   Small unix hack: since read() reads only up to a newline
X	   from a terminal, then presumably this write() will write at
X	   most only one input line at a time.
X	*/
X	for (a = 2; a < chars_in + 2; a++) { /* skip empty lines and comments in history. */
X		if (inbuf[a] == '#' || inbuf[a] == '\n')
X			return;
X		if (inbuf[a] != ' ' && inbuf[a] != '\t')
X			break;
X	}
X	writeall(histfd, inbuf + 2, chars_in);
X}
X
X/* close file descriptors after a fork() */
X
Xextern void closefds() {
X	Input *i;
X	if (histstr != NULL) {			/* Close an open history file */
X		close(histfd);
X		histstr = NULL;			/* But prevent re-closing of the same file-descriptor */
X	}
X	for (i = istack; i != itop; --i)	/* close open scripts */
X		if (i->t == iFd && i->fd > 2) {
X			close(i->fd);
X			i->fd = -1;
X		}
X}
END_OF_FILE
  if test 7955 -ne `wc -c <'input.c'`; then
    echo shar: \"'input.c'\" unpacked with wrong size!
  fi
  # end of 'input.c'
fi
if test -f 'plan9.ps.a' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'plan9.ps.a'\"
else
  echo shar: Extracting \"'plan9.ps.a'\" \(26880 characters\)
  sed "s/^X//" >'plan9.ps.a' <<'END_OF_FILE'
X%!PS
X%%Version: 3.3
X%%DocumentFonts: (atend)
X%%Pages: (atend)
X%%EndComments
X%
X% Version 3.3 prologue for troff files.
X%
X
X/#copies 1 store
X/aspectratio 1 def
X/formsperpage 1 def
X/landscape false def
X/linewidth .3 def
X/magnification 1 def
X/margin 0 def
X/orientation 0 def
X/resolution 720 def
X/rotation 1 def
X/xoffset 0 def
X/yoffset 0 def
X
X/roundpage true def
X/useclippath true def
X/pagebbox [0 0 612 792] def
X
X/R  /Times-Roman def
X/I  /Times-Italic def
X/B  /Times-Bold def
X/BI /Times-BoldItalic def
X/H  /Helvetica def
X/HI /Helvetica-Oblique def
X/HB /Helvetica-Bold def
X/HX /Helvetica-BoldOblique def
X/CW /Courier def
X/CO /Courier def
X/CI /Courier-Oblique def
X/CB /Courier-Bold def
X/CX /Courier-BoldOblique def
X/PA /Palatino-Roman def
X/PI /Palatino-Italic def
X/PB /Palatino-Bold def
X/PX /Palatino-BoldItalic def
X/Hr /Helvetica-Narrow def
X/Hi /Helvetica-Narrow-Oblique def
X/Hb /Helvetica-Narrow-Bold def
X/Hx /Helvetica-Narrow-BoldOblique def
X/KR /Bookman-Light def
X/KI /Bookman-LightItalic def
X/KB /Bookman-Demi def
X/KX /Bookman-DemiItalic def
X/AR /AvantGarde-Book def
X/AI /AvantGarde-BookOblique def
X/AB /AvantGarde-Demi def
X/AX /AvantGarde-DemiOblique def
X/NR /NewCenturySchlbk-Roman def
X/NI /NewCenturySchlbk-Italic def
X/NB /NewCenturySchlbk-Bold def
X/NX /NewCenturySchlbk-BoldItalic def
X/ZD /ZapfDingbats def
X/ZI /ZapfChancery-MediumItalic def
X/S  /S def
X/S1 /S1 def
X/GR /Symbol def
X
X/inch {72 mul} bind def
X/min {2 copy gt {exch} if pop} bind def
X
X/setup {
X	counttomark 2 idiv {def} repeat pop
X
X	landscape {/orientation 90 orientation add def} if
X	/scaling 72 resolution div def
X	linewidth setlinewidth
X	1 setlinecap
X
X	pagedimensions
X	xcenter ycenter translate
X	orientation rotation mul rotate
X	width 2 div neg height 2 div translate
X	xoffset inch yoffset inch neg translate
X	margin 2 div dup neg translate
X	magnification dup aspectratio mul scale
X	scaling scaling scale
X
X	/Symbol /S Sdefs cf
X	/Times-Roman /S1 S1defs cf
X	0 0 moveto
X} def
X
X/pagedimensions {
X	useclippath userdict /gotpagebbox known not and {
X		/pagebbox [clippath pathbbox newpath] def
X		roundpage currentdict /roundpagebbox known and {roundpagebbox} if
X	} if
X	pagebbox aload pop
X	4 -1 roll exch 4 1 roll 4 copy
X	landscape {4 2 roll} if
X	sub /width exch def
X	sub /height exch def
X	add 2 div /xcenter exch def
X	add 2 div /ycenter exch def
X	userdict /gotpagebbox true put
X} def
X
X/pagesetup {
X	/page exch def
X	currentdict /pagedict known currentdict page known and {
X		page load pagedict exch get cvx exec
X	} if
X} def
X
X/decodingdefs [
X	{counttomark 2 idiv {y moveto show} repeat}
X	{neg /y exch def counttomark 2 idiv {y moveto show} repeat}
X	{neg moveto {2 index stringwidth pop sub exch div 0 32 4 -1 roll widthshow} repeat}
X	{neg moveto {spacewidth sub 0.0 32 4 -1 roll widthshow} repeat}
X	{counttomark 2 idiv {y moveto show} repeat}
X	{neg setfunnytext}
X] def
X
X/setdecoding {/t decodingdefs 3 -1 roll get bind def} bind def
X
X/w {neg moveto show} bind def
X/m {neg dup /y exch def moveto} bind def
X/done {/lastpage where {pop lastpage} if} def
X
X/f {
X	dup /font exch def findfont exch
X	dup /ptsize exch def scaling div dup /size exch def scalefont setfont
X	linewidth ptsize mul scaling 10 mul div setlinewidth
X	/spacewidth ( ) stringwidth pop def
X} bind def
X
X/changefont {
X	/fontheight exch def
X	/fontslant exch def
X	currentfont [
X		1 0
X		fontheight ptsize div fontslant sin mul fontslant cos div
X		fontheight ptsize div
X		0 0
X	] makefont setfont
X} bind def
X
X/sf {f} bind def
X
X/cf {
X	dup length 2 idiv
X	/entries exch def
X	/chtab exch def
X	/newfont exch def
X
X	findfont dup length 1 add dict
X	/newdict exch def
X	{1 index /FID ne {newdict 3 1 roll put} {pop pop} ifelse} forall
X
X	newdict /Metrics entries dict put
X	newdict /Metrics get
X	begin
X		chtab aload pop
X		1 1 entries {pop def} for
X		newfont newdict definefont pop
X	end
X} bind def
X
X%
X% A few arrays used to adjust reference points and character widths in some
X% of the printer resident fonts. If square roots are too high try changing
X% the lines describing /radical and /radicalex to,
X%
X%	/radical	[0 -75 550 0]
X%	/radicalex	[-50 -75 500 0]
X%
X% Move braceleftbt a bit - default PostScript character is off a bit.
X%
X
X/Sdefs [
X	/bracketlefttp		[201 500]
X	/bracketleftbt		[201 500]
X	/bracketrighttp		[-81 380]
X	/bracketrightbt		[-83 380]
X	/braceleftbt		[203 490]
X	/bracketrightex		[220 -125 500 0]
X	/radical		[0 0 550 0]
X	/radicalex		[-50 0 500 0]
X	/parenleftex		[-20 -170 0 0]
X	/integral		[100 -50 500 0]
X	/infinity		[10 -75 730 0]
X] def
X
X/S1defs [
X	/underscore		[0 80 500 0]
X	/endash			[7 90 650 0]
X] def
X%
X% Tries to round clipping path dimensions, as stored in array pagebbox, so they
X% match one of the known sizes in the papersizes array. Lower left coordinates
X% are always set to 0.
X%
X
X/roundpagebbox {
X    7 dict begin
X	/papersizes [8.5 inch 11 inch 14 inch 17 inch] def
X
X	/mappapersize {
X		/val exch def
X		/slop .5 inch def
X		/diff slop def
X		/j 0 def
X		0 1 papersizes length 1 sub {
X			/i exch def
X			papersizes i get val sub abs
X			dup diff le {/diff exch def /j i def} {pop} ifelse
X		} for
X		diff slop lt {papersizes j get} {val} ifelse
X	} def
X
X	pagebbox 0 0 put
X	pagebbox 1 0 put
X	pagebbox dup 2 get mappapersize 2 exch put
X	pagebbox dup 3 get mappapersize 3 exch put
X    end
X} bind def
X
X%%EndProlog
X%%BeginSetup
Xmark
X/linewidth 0.5 def
X/xoffset 0 def
X/yoffset 0 def
X/#copies 1 store
X/magnification 1 def
X%%FormsPerPage: 1
X/formsperpage 1 def
X
X/landscape false def
X/resolution 720 def
Xsetup
X2 setdecoding
X%%EndSetup
X%%Page: 1 1
X/saveobj save def
Xmark
X1 pagesetup
X12 B f
X(Rc \320 A Shell for Plan 9 and UNIX Systems)9 2230 1 1765 1230 t
X10 I f
X(Tom Duff)1 381 1 2689 1470 t
X10 R f
X(AT&T Bell Laboratories)2 993 1 2383 1650 t
X(Murray Hill, New Jersey 07974)4 1267 1 2246 1770 t
X10 I f
X(ABSTRACT)2643 2150 w
X(Rc)1330 2410 w
X10 R f
X( also runs on a variety of traditional sys-)8 1641( It)1 115( interpreter for Plan 9.)4 900(is a command)2 561 4 1463 2410 t
X( provides similar facilities to Bourne's)5 1580( It)1 120( SunOS and the Tenth Edition.)5 1273(tems, including)1 627 4 1080 2530 t
X10 I f
X(/bin/sh)1080 2650 w
X10 R f
X( paper intro-)2 497( This)1 229(, with some small additions and mostly less idiosyncratic syntax.)9 2601 3 1353 2650 t
X(duces)1080 2770 w
X10 I f
X(rc)1335 2770 w
X10 R f
X( why it varies)3 547('s highlights with numerous examples, and discusses its design and)9 2715 2 1418 2770 t
X(from Bourne's.)1 610 1 1080 2890 t
X10 B f
X(1. Introduction)1 670 1 720 3250 t
X10 R f
X( new)1 208( porting the Bourne shell to an incompatible)7 1875( As)1 177(Plan 9 needs a command-programming language.)5 2060 4 720 3406 t
X( new command interpreter, called)4 1350(environment seemed a daunting task, I chose to write a)9 2232 2 720 3526 t
X10 I f
X(rc)4330 3526 w
X10 R f
X(because it runs)2 599 1 4441 3526 t
X( could hardly resist trying to)5 1220( tinkering with perfection is a dangerous business, I)8 2197(commands. Although)1 903 3 720 3646 t
X( Thus)1 250(`improve' on Bourne's design.)3 1226 2 720 3766 t
X10 I f
X(rc)2221 3766 w
X10 R f
X(is similar in spirit but different in detail from Bourne's shell.)10 2424 1 2329 3766 t
X(The bulk of this paper describes)5 1318 1 720 3922 t
X10 I f
X(rc)2071 3922 w
X10 R f
X( features with many small examples and a few larger ones.)10 2426('s principal)1 460 2 2154 3922 t
X(We close with a discussion of the principles guiding)8 2143 1 720 4042 t
X10 I f
X(rc)2895 4042 w
X10 R f
X( it differs from Bourne's design.)5 1317('s design and why)3 745 2 2978 4042 t
X( features, as individual details)4 1198(The descriptive sections include little discussion of the rationale for particular)10 3122 2 720 4162 t
X( skip to the discussion at the end before)8 1632( impatient reader may wish to)5 1230( The)1 213(are hard to justify in isolation.)5 1245 4 720 4282 t
X(skimming the expository parts of the paper.)6 1740 1 720 4402 t
X10 B f
X( commands)1 486(2. Simple)1 420 2 720 4642 t
X10 R f
X(For the simplest uses)3 881 1 720 4798 t
X10 I f
X(rc)1639 4798 w
X10 R f
X( all of the following behave as)6 1293( Thus)1 263(has syntax familiar to Bourne-shell users.)5 1724 3 1760 4798 t
X(expected:)720 4918 w
X9 CW f
X(date)1008 5088 w
X(con alice)1 486 1 1008 5198 t
X(who >user.names)1 810 1 1008 5308 t
X(who >>user.names)1 864 1 1008 5418 t
X(wc <file)1 432 1 1008 5528 t
X(echo [a-f]*.c)1 702 1 1008 5638 t
X(who | wc)2 432 1 1008 5748 t
X(who; date)1 486 1 1008 5858 t
X(cc *.c &)2 432 1 1008 5968 t
X(cyntax *.c && cc -g -o cmd *.c)7 1620 1 1008 6078 t
X(rm -r junk || echo rm failed!)6 1566 1 1008 6188 t
X10 B f
X(3. Quotation)1 559 1 720 6488 t
X10 R f
X(An argument that contains a space or one of)8 1813 1 720 6644 t
X10 I f
X(rc)2565 6644 w
X10 R f
X( in apostrophes)2 621('s other syntax characters must be enclosed)6 1771 2 2648 6644 t
X(\()720 6764 w
X10 CW f
X(')753 6764 w
X10 R f
X(\):)813 6764 w
X9 CW f
X(rm 'odd file name')3 972 1 1008 6934 t
X10 R f
X(An apostrophe in a quoted argument must be doubled:)8 2170 1 720 7114 t
Xcleartomark
Xshowpage
Xsaveobj restore
X%%EndPage: 1 1
X%%Page: 2 2
X/saveobj save def
Xmark
X2 pagesetup
X10 R f
X(- 2 -)2 166 1 2797 480 t
X9 CW f
X(echo 'How''s your father?')3 1404 1 1008 830 t
X10 B f
X(4. Variables)1 536 1 720 1130 t
X10 I f
X(Rc)720 1286 w
X10 R f
X( by typing, for)3 602( may be given values)4 879( Variables)1 441(provides variables whose values are lists of arguments.)7 2259 4 859 1286 t
X(example:)720 1406 w
X9 CW f
X(path=\(. /bin /usr/bin\))2 1188 1 1008 1576 t
X(user=td)1008 1686 w
X(tty=/dev/tty8)1008 1796 w
X10 R f
X(The parentheses indicate that the value assigned to)7 2049 1 720 1976 t
X10 CW f
X(path)2798 1976 w
X10 R f
X( strings. The variables)3 897(is a list of three)4 632 2 3067 1976 t
X10 CW f
X(user)4626 1976 w
X10 R f
X(and)4896 1976 w
X10 CW f
X(tty)720 2096 w
X10 R f
X(are assigned lists containing a single string.)6 1735 1 925 2096 t
X(The value of a variable can be substituted into a command by preceding its name with a)16 3505 1 720 2252 t
X10 CW f
X($)4250 2252 w
X10 R f
X(, like this:)2 398 1 4310 2252 t
X9 CW f
X(echo $path)1 540 1 1008 2422 t
X10 R f
X(If)720 2602 w
X10 CW f
X(path)811 2602 w
X10 R f
X(had been set as above, this would be equivalent to)9 1997 1 1076 2602 t
X9 CW f
X(echo . /bin /usr/bin)3 1080 1 1008 2772 t
X10 R f
X(Variables may be subscripted by numbers or lists of numbers, like this:)11 2842 1 720 2952 t
X9 CW f
X(echo $path\(2\))1 702 1 1008 3122 t
X(echo $path\(3 2 1\))3 918 1 1008 3232 t
X10 R f
X(These are equivalent to)3 928 1 720 3412 t
X9 CW f
X(echo /bin)1 486 1 1008 3582 t
X(echo /usr/bin /bin .)3 1080 1 1008 3692 t
X10 R f
X( the subscript)2 555( Otherwise,)1 496(There can be no space separating the variable's name from the left parenthesis.)12 3269 3 720 3872 t
X(would be considered a separate parenthesized list.)6 1992 1 720 3992 t
X(The number of strings in a variable can be determined by the)11 2431 1 720 4148 t
X10 CW f
X($#)3176 4148 w
X10 R f
X( example,)1 388(operator. For)1 546 2 3321 4148 t
X9 CW f
X(echo $#path)1 594 1 1008 4318 t
X10 R f
X(would print the number of entries in)6 1443 1 720 4498 t
X10 CW f
X($path)2188 4498 w
X10 R f
X(.)2488 4498 w
X(The following two assignments are subtly different:)6 2070 1 720 4654 t
X9 CW f
X(empty=\(\))1008 4824 w
X(null='')1008 4934 w
X10 R f
X(The first sets)2 538 1 720 5114 t
X10 CW f
X(empty)1294 5114 w
X10 R f
X( second sets)2 501( The)1 217( list containing no strings.)4 1085(to a)1 158 4 1630 5114 t
X10 CW f
X(null)3628 5114 w
X10 R f
X(to a list containing a single)5 1135 1 3905 5114 t
X(string, but the string contains no characters.)6 1742 1 720 5234 t
X( indistinguishable\),)1 775(Although these may seem like more or less the same thing \(in Bourne's shell, they are)15 3545 2 720 5390 t
X( other things)2 500( Among)1 350(they behave differently in almost all circumstances.)6 2060 3 720 5510 t
X9 CW f
X(echo $#empty)1 648 1 1008 5680 t
X10 R f
X(prints 0, whereas)2 679 1 720 5860 t
X9 CW f
X(echo $#null)1 594 1 1008 6030 t
X10 R f
X(prints 1.)1 328 1 720 6210 t
X(All variables that have never been set have the value)9 2097 1 720 6366 t
X10 CW f
X(\(\))2842 6366 w
X10 R f
X(.)2962 6366 w
X10 B f
X(5. Arguments)1 602 1 720 6606 t
X10 R f
X(When)720 6762 w
X10 I f
X(rc)983 6762 w
X10 R f
X( from a file, the file has access to the arguments supplied on)12 2405(is reading its input)3 742 2 1091 6762 t
X10 I f
X(rc)4264 6762 w
X10 R f
X('s command line.)2 693 1 4347 6762 t
X(The variable)1 504 1 720 6882 t
X10 CW f
X($*)1252 6882 w
X10 R f
X( names)1 282( The)1 207( it.)1 108(initially has the list of arguments assigned to)7 1807 4 1400 6882 t
X10 CW f
X($1)3831 6882 w
X10 R f
X(,)3951 6882 w
X10 CW f
X($2)4003 6882 w
X10 R f
X(, etc. are synonyms for)4 917 1 4123 6882 t
X10 CW f
X($*\(1\))720 7002 w
X10 R f
X(,)1020 7002 w
X10 CW f
X($*\(2\))1070 7002 w
X10 R f
X( addition,)1 378( In)1 133(, etc.)1 191 3 1370 7002 t
X10 CW f
X($0)2097 7002 w
X10 R f
X(is the name of the file from which)7 1356 1 2242 7002 t
X10 I f
X(rc)3623 7002 w
X10 R f
X('s input is being read.)4 863 1 3706 7002 t
Xcleartomark
Xshowpage
Xsaveobj restore
X%%EndPage: 2 2
X%%Page: 3 3
X/saveobj save def
Xmark
X3 pagesetup
X10 R f
X(- 3 -)2 166 1 2797 480 t
X10 B f
X(6. Concatenation)1 747 1 720 840 t
X10 I f
X(Rc)720 996 w
X10 R f
X(has a string concatenation operator, the caret)6 1781 1 850 996 t
X10 CW f
X(\303)2656 996 w
X10 R f
X(, to build arguments out of pieces.)6 1360 1 2716 996 t
X9 CW f
X(echo hully\303gully)1 864 1 1008 1166 t
X10 R f
X(is exactly equivalent to)3 924 1 720 1346 t
X9 CW f
X(echo hullygully)1 810 1 1008 1516 t
X10 R f
X(Suppose variable)1 685 1 720 1696 t
X10 CW f
X(i)1430 1696 w
X10 R f
X( Then)1 255(contains the name of a command.)5 1342 2 1515 1696 t
X9 CW f
X(cc -o $i $i\303.c)3 756 1 1008 1866 t
X10 R f
X(might compile the command's source code, leaving the result in the appropriate file.)12 3367 1 720 2046 t
X(Concatenation distributes over lists. The following)5 2027 1 720 2202 t
X9 CW f
X(echo \(a b c\)\303\(1 2 3\))5 1080 1 1008 2372 t
X(src=\(main subr io\))2 972 1 1008 2482 t
X(cc $src\303.c)1 540 1 1008 2592 t
X10 R f
X(are equivalent to)2 665 1 720 2772 t
X9 CW f
X(echo a1 b2 c3)3 702 1 1008 2942 t
X(cc main.c subr.c io.c)3 1134 1 1008 3052 t
X10 R f
X(In detail, the rule is: if both operands of)8 1640 1 720 3232 t
X10 CW f
X(\303)2392 3232 w
X10 R f
X( non-zero number of strings, they are con-)7 1735(are lists of the same)4 821 2 2484 3232 t
X( if one of the operands is a single string, it is concatenated with each mem-)15 3059( Otherwise,)1 491(catenated pairwise.)1 770 3 720 3352 t
X( other combination of operands is an error.)7 1702( Any)1 222(ber of the other operand in turn.)6 1272 3 720 3472 t
X10 B f
X( carets)1 279(7. Free)1 318 2 720 3712 t
X10 R f
X(User demand has dictated that)4 1263 1 720 3868 t
X10 I f
X(rc)2023 3868 w
X10 R f
X( syntax look more like the)5 1121(insert carets in certain places, to make the)7 1773 2 2146 3868 t
X( example, this:)2 586( For)1 189(Bourne shell.)1 533 3 720 3988 t
X9 CW f
X(cc -$flags $stems.c)2 1026 1 1008 4158 t
X10 R f
X(is equivalent to)2 611 1 720 4338 t
X9 CW f
X(cc -\303$flags $stems\303.c)2 1134 1 1008 4508 t
X10 R f
X(In general,)1 440 1 720 4688 t
X10 I f
X(rc)1199 4688 w
X10 R f
X(will insert)1 417 1 1321 4688 t
X10 CW f
X(\303)1777 4688 w
X10 R f
X( Specifically,)1 567( not separated by white space.)5 1272(between two arguments that are)4 1325 3 1876 4688 t
X(whenever one of)2 668 1 720 4808 t
X10 CW f
X($'`)1415 4808 w
X10 R f
X(follows a quoted or unquoted word, or an unquoted word follows a quoted word with)14 3418 1 1622 4808 t
X(no intervening blanks or tabs, a)5 1264 1 720 4928 t
X10 CW f
X(\303)2011 4928 w
X10 R f
X( an unquoted word immediately following)5 1700( If)1 119( between the two.)3 713(is inserted)1 410 4 2098 4928 t
X(a)720 5048 w
X10 CW f
X($)797 5048 w
X10 R f
X(contains a character other than an alphanumeric, underscore or)8 2564 1 890 5048 t
X10 CW f
X(*)3487 5048 w
X10 R f
X(, a)1 102 1 3547 5048 t
X10 CW f
X(\303)3682 5048 w
X10 R f
X( the first such)3 562(is inserted before)2 703 2 3775 5048 t
X(character.)720 5168 w
X10 B f
X( substitution)1 532(8. Command)1 575 2 720 5408 t
X10 R f
X( list from the output of a command.)7 1444(It is often useful to build an argument)7 1528 2 720 5564 t
X10 I f
X(Rc)3746 5564 w
X10 R f
X(allows a command, enclosed)3 1160 1 3880 5564 t
X(in braces and preceded by a left quote,)7 1569 1 720 5684 t
X10 CW f
X(`{...})2319 5684 w
X10 R f
X( command is)2 519( The)1 209( an argument is required.)4 1011(, anywhere that)2 622 4 2679 5684 t
X( characters stored in the variable)5 1333( The)1 213( its standard output captured.)4 1189(executed and)1 530 4 720 5804 t
X10 CW f
X(ifs)4018 5804 w
X10 R f
X(are used to split the)4 809 1 4231 5804 t
X( example,)1 388( For)1 189(output into arguments.)2 903 3 720 5924 t
X9 CW f
X(cat `{ls -tr|sed 10q})3 1134 1 1008 6094 t
X10 R f
X(will catenate the ten oldest files in the current directory in temporal order.)12 2947 1 720 6274 t
X10 B f
X( branching)1 465(9. Pipeline)1 470 2 720 6514 t
X10 R f
X( occasionally it is useful to have)6 1312( Very)1 254( for almost all cases.)4 838(The normal pipeline notation is general enough)6 1916 4 720 6670 t
X( can require arbitrarily large pipe)5 1350( topologies more general than trees)5 1440( Pipeline)1 386(pipelines that are not linear.)4 1144 4 720 6790 t
X(buffers, or worse, can cause deadlock.)5 1567 1 720 6910 t
X10 I f
X(Rc)2346 6910 w
X10 R f
X( of non-linear but treelike pipelines.)5 1481(has syntax for some kinds)4 1074 2 2485 6910 t
X(For example,)1 527 1 720 7030 t
X9 CW f
X(cmp <{old} <{new})2 918 1 1440 7200 t
Xcleartomark
Xshowpage
Xsaveobj restore
X%%EndPage: 3 3
X%%Page: 4 4
X/saveobj save def
Xmark
X4 pagesetup
X10 R f
X(- 4 -)2 166 1 2797 480 t
X(will regression test a new version of a command.)8 1963 1 720 840 t
X10 CW f
X(<)2734 840 w
X10 R f
X(or)2820 840 w
X10 CW f
X(>)2929 840 w
X10 R f
X( in braces causes the com-)5 1054(followed by a command)3 971 2 3015 840 t
X( parent command \()3 751( The)1 205( be run with its standard output or input attached to a pipe.)12 2334(mand to)1 326 4 720 960 t
X10 CW f
X(cmp)4336 960 w
X10 R f
X(in the exam-)2 499 1 4541 960 t
X( descriptor or other, and with an argument)7 1701(ple\) is started with the other end of the pipe attached to some file)13 2619 2 720 1080 t
X( connect to the pipe when opened \(e.g.)7 1601(that will)1 341 2 720 1200 t
X10 CW f
X(/dev/fd/6)2721 1200 w
X10 R f
X( systems without)2 691(.\) On)1 239 2 3261 1200 t
X10 CW f
X(/dev/fd)4225 1200 w
X10 R f
X(or some-)1 361 1 4679 1200 t
X(thing similar \(SunOS for example\) this feature does not work.)9 2475 1 720 1320 t
X10 B f
X( status)1 275(10. Exit)1 353 2 720 1560 t
X10 R f
X( Plan 9 status is a character)6 1153( On)1 184( executed it.)2 509(When a command exits it returns status to the program that)10 2474 4 720 1716 t
X( normal termination it is empty.)5 1267( On)1 172(string describing an error condition.)4 1434 3 720 1836 t
X10 I f
X(Rc)720 1992 w
X10 R f
X( the variable)2 537(captures commands' exit statuses in)4 1521 2 871 1992 t
X10 CW f
X($status)2976 1992 w
X10 R f
X( a simple command the value of)6 1408(. For)1 236 2 3396 1992 t
X10 CW f
X($status)720 2112 w
X10 R f
X( a pipeline)2 420( For)1 191(is just as described above.)4 1048 3 1167 2112 t
X10 CW f
X($status)2853 2112 w
X10 R f
X( to the concatenation of the statuses of)7 1535(is set)1 205 2 3300 2112 t
X(the pipeline components with)3 1180 1 720 2232 t
X10 CW f
X(|)1925 2232 w
X10 R f
X(characters for separators.)2 998 1 2010 2232 t
X10 I f
X(Rc)720 2388 w
X10 R f
X( control flow, many of them conditioned by the status returned from previously)12 3286(has a several kinds of)4 895 2 859 2388 t
X( Any)1 224(executed commands.)1 839 2 720 2508 t
X10 CW f
X($status)1810 2508 w
X10 R f
X(containing only)1 627 1 2257 2508 t
X10 CW f
X(0)2911 2508 w
X10 R f
X('s and)1 243 1 2971 2508 t
X10 CW f
X(|)3241 2508 w
X10 R f
X('s has boolean value)3 818 1 3301 2508 t
X10 I f
X(true)4146 2508 w
X10 R f
X( other status)2 485(. Any)1 248 2 4307 2508 t
X(is)720 2628 w
X10 I f
X(false)812 2628 w
X10 R f
X(.)1001 2628 w
X10 B f
X( grouping)1 415(11. Command)1 625 2 720 2868 t
X10 R f
X(A sequence of commands enclosed in)5 1505 1 720 3024 t
X10 CW f
X({})2250 3024 w
X10 R f
X( example:)1 391( For)1 189(may be used anywhere a command is required.)7 1873 3 2395 3024 t
X9 CW f
X({sleep 3600;echo 'Time''s up!'}&)3 1728 1 1008 3194 t
X10 R f
X( the braces:)2 454( Without)1 378(will wait an hour in the background, then print a message.)10 2319 3 720 3374 t
X9 CW f
X(sleep 3600;echo 'Time''s up!'&)3 1620 1 1008 3544 t
X10 R f
X(this would lock up the terminal for an hour, then print the message in the background!)15 3440 1 720 3724 t
X10 B f
X( flow \320)2 333(12. Control)1 508 2 720 3964 t
X10 CW f
X(for)1586 3964 w
X10 R f
X(A command may be executed once for each member of a list by typing, for example:)15 3387 1 720 4120 t
X9 CW f
X(for\(i in printf scanf putchar\) look $i /usr/td/lib/dw.dat)7 3078 1 1008 4290 t
X10 R f
X(This looks for each of the words)6 1292 1 720 4470 t
X10 CW f
X(printf)2037 4470 w
X10 R f
X(,)2397 4470 w
X10 CW f
X(scanf)2447 4470 w
X10 R f
X(and)2772 4470 w
X10 CW f
X(putchar)2941 4470 w
X10 R f
X( general form is)3 629( The)1 205(in the given file.)3 655 3 3386 4470 t
X9 CW f
X(for\()1008 4640 w
X9 I f
X(name)1224 4640 w
X9 CW f
X(in)1473 4640 w
X9 I f
X(list)1635 4640 w
X9 CW f
X(\))1745 4640 w
X9 I f
X(command)1853 4640 w
X10 R f
X(or)720 4820 w
X9 CW f
X(for\()1008 4990 w
X9 I f
X(name)1224 4990 w
X9 CW f
X(\))1419 4990 w
X9 I f
X(command)1527 4990 w
X10 R f
X( first case)2 394(In the)1 235 2 720 5170 t
X10 I f
X(command)1380 5170 w
X10 R f
X(is executed once for each member of)6 1503 1 1799 5170 t
X10 I f
X(list)3333 5170 w
X10 R f
X(with that member assigned to variable)5 1553 1 3487 5170 t
X10 I f
X(name)720 5290 w
X10 R f
X(. If)1 141 1 936 5290 t
X10 CW f
X(in)1102 5290 w
X10 I f
X(list)1247 5290 w
X10 R f
X(is not given,)2 492 1 1395 5290 t
X10 I f
X($*)1912 5290 w
X10 R f
X(is used.)1 300 1 2037 5290 t
X10 B f
X( execution \320)2 555(13. Conditional)1 682 2 720 5530 t
X10 CW f
X(if)1982 5530 w
X10 I f
X(Rc)720 5686 w
X10 R f
X( example:)1 391( For)1 189(also provides a general if-statement.)4 1444 3 850 5686 t
X9 CW f
X(if\(cyntax *.c\) cc -g -o cmd *.c)6 1674 1 1008 5856 t
X10 R f
X(runs the C compiler whenever)4 1259 1 720 6036 t
X10 CW f
X(cyntax)2018 6036 w
X10 R f
X(finds no problems with)3 967 1 2417 6036 t
X10 CW f
X(*.c)3423 6036 w
X10 R f
X( `if not' statement provides a)5 1226(. An)1 211 2 3603 6036 t
X( example:)1 391( For)1 189(two-tailed conditional.)1 905 3 720 6156 t
X9 CW f
X(for\(i\){)1008 6326 w
X(if\(test -f /tmp/$i\) echo $i already in /tmp)7 2322 1 1224 6436 t
X(if not cp $i /tmp)4 918 1 1224 6546 t
X(})1008 6656 w
X10 R f
X(This loops over each file in)5 1090 1 720 6836 t
X10 CW f
X($*)1835 6836 w
X10 R f
X(, copying to)2 475 1 1955 6836 t
X10 CW f
X(/tmp)2455 6836 w
X10 R f
X(those that do not already appear there, and printing a mes-)10 2320 1 2720 6836 t
X(sage for those that do.)4 879 1 720 6956 t
Xcleartomark
Xshowpage
Xsaveobj restore
X%%EndPage: 4 4
X%%Page: 5 5
X/saveobj save def
Xmark
X5 pagesetup
X10 R f
X(- 5 -)2 166 1 2797 480 t
X10 B f
X( flow \320)2 333(14. Control)1 508 2 720 840 t
X10 CW f
X(while)1586 840 w
X10 I f
X(Rc)720 996 w
X10 R f
X('s while statement looks like this:)5 1342 1 825 996 t
X9 CW f
X(while\(newer subr.c subr.o\) sleep 5)4 1836 1 1008 1166 t
X10 R f
X(This waits until)2 623 1 720 1346 t
X10 CW f
X(subr.o)1368 1346 w
X10 R f
X(is newer than)2 532 1 1753 1346 t
X10 CW f
X(subr.c)2310 1346 w
X10 R f
X(\(presumably because the C compiler finished with it.\))7 2147 1 2695 1346 t
X10 B f
X( flow \320)2 333(15. Control)1 508 2 720 1586 t
X10 CW f
X(switch)1586 1586 w
X10 I f
X(Rc)720 1742 w
X10 R f
X( general form is)3 629( Its)1 150(provides a switch statement to do pattern-matching on arbitrary strings.)9 2852 3 850 1742 t
X9 CW f
X(switch\()1008 1912 w
X9 I f
X(word)1386 1912 w
X9 CW f
X(\){)1571 1912 w
X(case)1008 2022 w
X9 I f
X(pattern ...)1 352 1 1278 2022 t
X(commands)1224 2132 w
X9 CW f
X(case)1008 2242 w
X9 I f
X(pattern ...)1 352 1 1278 2242 t
X(commands)1224 2352 w
X9 CW f
X(...)1008 2462 w
X(})1008 2572 w
X10 I f
X(Rc)720 2752 w
X10 R f
X( are the same as)4 647( Patterns)1 376(attempts to match the word against the patterns in each case statement in turn.)13 3164 3 853 2752 t
X(for filename matching, except that)4 1372 1 720 2872 t
X10 CW f
X(/)2117 2872 w
X10 R f
X(and the first characters of)4 1013 1 2202 2872 t
X10 CW f
X(.)3240 2872 w
X10 R f
X(and)3350 2872 w
X10 CW f
X(..)3519 2872 w
X10 R f
X(need not be matched explicitly.)4 1251 1 3689 2872 t
X( to the next case \(or the end of the switch\) are)11 1864(If any pattern matches, the commands following that case up)9 2456 2 720 3028 t
X( example,)1 388( For)1 189(executed, and execution of the switch is complete.)7 2010 3 720 3148 t
X9 CW f
X(switch\($#*\){)1008 3318 w
X(case 1)1 324 1 1008 3428 t
X(cat >>$1)1 432 1 1224 3538 t
X(case 2)1 324 1 1008 3648 t
X(cat >>$2 <$1)2 648 1 1224 3758 t
X(case *)1 324 1 1008 3868 t
X(echo 'Usage: append [from] to')4 1620 1 1224 3978 t
X(})1008 4088 w
X10 R f
X( two, the first)3 536( With)1 251( with one file argument, it tacks standard input to its end.)11 2279( Called)1 311(is an append command.)3 943 5 720 4268 t
X( other number elicits a usage message.)6 1533( Any)1 222(is appended to the second.)4 1051 3 720 4388 t
X(The built-in)1 475 1 720 4544 t
X10 CW f
X(\304)1220 4544 w
X10 R f
X( arguments are a)3 659( Its)1 151( more concise than a switch.)5 1136(command also matches patterns, and is often)6 1789 4 1305 4544 t
X( sets)1 181( It)1 118(string and a list of patterns.)5 1123 3 720 4664 t
X10 CW f
X($status)2173 4664 w
X10 R f
X(to true if and only if any of the patterns matches the string.)12 2416 1 2624 4664 t
X(The following example processes option arguments for the)7 2349 1 720 4784 t
X10 I f
X(man)3094 4784 w
X10 R f
X(\(1\) command:)1 563 1 3266 4784 t
X9 CW f
X(opt=\(\))1008 4954 w
X(while\(\304 $1 -* [1-9] 10\){)4 1296 1 1008 5064 t
X(switch\($1\){)1224 5174 w
X(case [1-9] 10)2 702 1 1224 5284 t
X(sec=$1 secn=$1)1 756 1 1440 5394 t
X(case -f)1 378 1 1224 5504 t
X(c=f s=f)1 378 1 1440 5614 t
X(case -[qwnt])1 648 1 1224 5724 t
X(cmd=$1)1440 5834 w
X(case -T*)1 432 1 1224 5944 t
X(T=$1)1440 6054 w
X(case -*)1 378 1 1224 6164 t
X(opt=\($opt $1\))1 702 1 1440 6274 t
X(})1224 6384 w
X(shift)1224 6494 w
X(})1008 6604 w
Xcleartomark
Xshowpage
Xsaveobj restore
X%%EndPage: 5 5
X%%Page: 6 6
X/saveobj save def
Xmark
X6 pagesetup
X10 R f
X(- 6 -)2 166 1 2797 480 t
X10 B f
X(16. Functions)1 598 1 720 840 t
X10 R f
X(Functions may be defined by typing)5 1441 1 720 996 t
X9 CW f
X(fn)1008 1166 w
X9 I f
X(name)1170 1166 w
X9 CW f
X({)1419 1166 w
X9 I f
X(commands)1527 1166 w
X9 CW f
X(})1966 1166 w
X10 R f
X(Subsequently, whenever a command named)4 1795 1 720 1346 t
X10 I f
X(name)2550 1346 w
X10 R f
X(is encountered, the remainder of the command's argu-)7 2238 1 2802 1346 t
X( to)1 106(ment list will assigned)3 910 2 720 1466 t
X10 CW f
X($*)1764 1466 w
X10 R f
X(and)1912 1466 w
X10 I f
X(rc)2084 1466 w
X10 R f
X(will execute the)2 638 1 2195 1466 t
X10 I f
X(commands)2861 1466 w
X10 R f
X( value of)2 355(. The)1 233 2 3288 1466 t
X10 CW f
X($*)3904 1466 w
X10 R f
X(will be restored on com-)4 988 1 4052 1466 t
X( example:)1 391(pletion. For)1 492 2 720 1586 t
X9 CW f
X(fn g {)2 324 1 1008 1756 t
X(gre -e $1 *.[hcyl])3 972 1 1224 1866 t
END_OF_FILE
  if test 26880 -ne `wc -c <'plan9.ps.a'`; then
    echo shar: \"'plan9.ps.a'\" unpacked with wrong size!
  elif test -f plan9.ps.b; then
    echo shar: Creating \"'plan9.ps'\" \(67056 characters\)
    cat plan9.ps.a plan9.ps.b > plan9.ps
    if test -f plan9.ps ; then
      rm plan9.ps.a plan9.ps.b
    fi
  fi
  # end of 'plan9.ps.a'
fi
echo shar: End of archive 3 \(of 7\).
cp /dev/null ark3isdone
MISSING=""
for I in 1 2 3 4 5 6 7 ; do
    if test ! -f ark${I}isdone ; then
	MISSING="${MISSING} ${I}"
    fi
done
if test "${MISSING}" = "" ; then
    echo You have unpacked all 7 archives.
    rm -f ark[1-9]isdone
else
    echo You still must unpack the following archives:
    echo "        " ${MISSING}
fi
exit 0
exit 0 # Just in case...
