Newsgroups: comp.sources.misc
From: Raphael Manfredi <ram@acri.fr>
Subject: v39i028:  dist-3.0 - Configure script generator and related tools, Part24/28
Message-ID: <1993Aug20.131643.22358@sparky.sterling.com>
X-Md4-Signature: 6384835b911cba7be5a5140a989c0aee
Sender: kent@sparky.sterling.com (Kent Landfield)
Organization: Advanced Computer Research Institute, Lyon, France.
Date: Fri, 20 Aug 1993 13:16:43 GMT
Approved: kent@sparky.sterling.com

Submitted-by: Raphael Manfredi <ram@acri.fr>
Posting-number: Volume 39, Issue 28
Archive-name: dist-3.0/part24
Environment: UNIX, Perl, RCS

#! /bin/sh
# This is a shell archive.  Remove anything before this line, then feed it
# into a shell via "sh file" or similar.  To overwrite existing files,
# type "sh file -c".
# The tool that generated this appeared in the comp.sources.unix newsgroup;
# send mail to comp-sources-unix@uunet.uu.net if you want that tool.
# Contents:  kit/kitsend.man kit/manifake.SH mcon/U/Rcs.U
#   mcon/U/d_getpwent.U mcon/U/d_getwd.U mcon/U/d_memmove.U
#   mcon/U/d_sem.U mcon/U/d_siglist.U mcon/U/d_xdrs.U mcon/U/etc.U
#   mcon/U/i_sysselct.U mcon/U/i_systypes.U mcon/U/i_varargs.U
#   mcon/U/inc.U mcon/U/lib.U mcon/U/libdbm.U mcon/U/libflex.U
#   mcon/U/libnlist.U mcon/U/libnm.U mcon/U/libyacc.U mcon/U/maildir.U
#   mcon/U/n.U mcon/U/rcs_branch.U mcon/U/startsh.U mcon/U/stdchar.U
#   mcon/U/sysman.U mcon/pl/files.pl pat/Jmakefile pl/comment.pl
#   pl/fullname.pl pl/manifake.pl
# Wrapped by ram@soft208 on Wed Aug 18 14:42:25 1993
PATH=/bin:/usr/bin:/usr/ucb ; export PATH
echo If this archive is complete, you will see the following message:
echo '          "shar: End of archive 24 (of 28)."'
if test -f 'kit/kitsend.man' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'kit/kitsend.man'\"
else
  echo shar: Extracting \"'kit/kitsend.man'\" \(1246 characters\)
  sed "s/^X//" >'kit/kitsend.man' <<'END_OF_FILE'
X''' $Id: kitsend.man,v 3.0 1993/08/18 12:04:26 ram Exp $
X'''
X'''  Copyright (c) 1991-1993, Raphael Manfredi
X'''  
X'''  You may redistribute only under the terms of the Artistic Licence,
X'''  as specified in the README file that comes with the distribution.
X'''  You may reuse parts of this distribution only within the terms of
X'''  that same Artistic Licence; a copy of which may be found at the root
X'''  of the source tree for dist 3.0.
X'''
X''' $Log: kitsend.man,v $
X''' Revision 3.0  1993/08/18  12:04:26  ram
X''' Baseline for dist 3.0 netwide release.
X'''
X.TH KITSEND 1 ram
X.SH NAME
Xkitsend \- sends distribution kits
X.SH SYNOPSIS
X.B kitsend
X[ \fIkits\fR ] \fIrecipients\fR
X.SH DESCRIPTION
X.I Kitsend
Xsends distribution kits made by \fImakedist\fR to some recipients specified
Xon the command line. If you do not specify any kit list, then all the
Xkits are sent. Otherwise, only the specified kits will be (re)sent.
X.PP
XA kit list may include ranges, \fI1-10\fR specifying kits 1 through 10,
Xand \fI5-\fR meaning kits 5 up to the last one. You may also specify kit
Xnumbers by separating them with commas or spaces, and even mix with ranges,
Xsuch as: \fI1 3 5-7 9\fR.
X.SH AUTHOR
XHarlan Stenn <harlan@mumps.pfcs.com>
X.SH "SEE ALSO"
Xmakedist(1)
END_OF_FILE
  if test 1246 -ne `wc -c <'kit/kitsend.man'`; then
    echo shar: \"'kit/kitsend.man'\" unpacked with wrong size!
  fi
  # end of 'kit/kitsend.man'
fi
if test -f 'kit/manifake.SH' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'kit/manifake.SH'\"
else
  echo shar: Extracting \"'kit/manifake.SH'\" \(1296 characters\)
  sed "s/^X//" >'kit/manifake.SH' <<'END_OF_FILE'
Xcase $CONFIG in
X'')
X	if test -f config.sh; then TOP=.;
X	elif test -f ../config.sh; then TOP=..;
X	elif test -f ../../config.sh; then TOP=../..;
X	elif test -f ../../../config.sh; then TOP=../../..;
X	elif test -f ../../../../config.sh; then TOP=../../../..;
X	else
X		(echo "Can't find config.sh."; exit 1)
X	fi
X	. $TOP/config.sh
X	;;
Xesac
Xcase "$0" in
X*/*) cd `expr X$0 : 'X\(.*\)/'` ;;
Xesac
Xecho "Extracting kit/manifake (with variable substitutions)"
X$spitshell >manifake <<!GROK!THIS!
X$startperl
X	eval "exec perl -i~ -S \$0 \$*"
X		if \$running_under_some_shell;
X
X# $Id: manifake.SH,v 3.0 1993/08/18 12:04:32 ram Exp $
X#
X#  Copyright (c) 1991-1993, Raphael Manfredi
X#  
X#  You may redistribute only under the terms of the Artistic Licence,
X#  as specified in the README file that comes with the distribution.
X#  You may reuse parts of this distribution only within the terms of
X#  that same Artistic Licence; a copy of which may be found at the root
X#  of the source tree for dist 3.0.
X#
X# $Log: manifake.SH,v $
X# Revision 3.0  1993/08/18  12:04:32  ram
X# Baseline for dist 3.0 netwide release.
X#
X
X!GROK!THIS!
X$spitshell >>manifake <<'!NO!SUBS!'
X$NEWMANI = 'MANIFEST.new';
X$MANI = 'MANIFEST';
X
X&manifake;
X
X!NO!SUBS!
Xchmod 755 manifake
X$grep -v '^;#' ../pl/manifake.pl >> manifake
X$eunicefix manifake
END_OF_FILE
  if test 1296 -ne `wc -c <'kit/manifake.SH'`; then
    echo shar: \"'kit/manifake.SH'\" unpacked with wrong size!
  fi
  chmod +x 'kit/manifake.SH'
  # end of 'kit/manifake.SH'
fi
if test -f 'mcon/U/Rcs.U' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'mcon/U/Rcs.U'\"
else
  echo shar: Extracting \"'mcon/U/Rcs.U'\" \(1261 characters\)
  sed "s/^X//" >'mcon/U/Rcs.U' <<'END_OF_FILE'
X?RCS: $Id: Rcs.U,v 3.0 1993/08/18 12:05:15 ram Exp $
X?RCS:
X?RCS: Copyright (c) 1991-1993, Raphael Manfredi
X?RCS: 
X?RCS: You may redistribute only under the terms of the Artistic Licence,
X?RCS: as specified in the README file that comes with the distribution.
X?RCS: You may reuse parts of this distribution only within the terms of
X?RCS: that same Artistic Licence; a copy of which may be found at the root
X?RCS: of the source tree for dist 3.0.
X?RCS:
X?RCS: $Log: Rcs.U,v $
X?RCS: Revision 3.0  1993/08/18  12:05:15  ram
X?RCS: Baseline for dist 3.0 netwide release.
X?RCS:
X?X: 
X?X: This is a unit that helps people who write SH scripts and keep them under
X?X: RCS, but don't think to protect the $Log and other $Id keywords from
X?X: variable substitution (or people like me who do not like to).
X?X: 
X?MAKE:Author Date Header Id Locker Log RCSfile Revision Source State: Oldconfig 
X?MAKE:	-pick weed $@ %<
X?LINT:describe Author Date Header Id Locker Log RCSfile Revision Source State
X: preserve RCS keywords in files with variable substitution, grrr
X?Author:Author='$Author'
X?Date:Date='$Date'
X?Header:Header='$Header'
X?Id:Id='$Id'
X?$Locker'
X?Log:Log='$Log'
X?RCSfile:RCSfile='$RCSfile'
X?Revision:Revision='$Revision'
X?Source:Source='$Source'
X?State:State='$State'
X
END_OF_FILE
  if test 1261 -ne `wc -c <'mcon/U/Rcs.U'`; then
    echo shar: \"'mcon/U/Rcs.U'\" unpacked with wrong size!
  fi
  # end of 'mcon/U/Rcs.U'
fi
if test -f 'mcon/U/d_getpwent.U' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'mcon/U/d_getpwent.U'\"
else
  echo shar: Extracting \"'mcon/U/d_getpwent.U'\" \(1301 characters\)
  sed "s/^X//" >'mcon/U/d_getpwent.U' <<'END_OF_FILE'
X?RCS: $Id: d_getpwent.U,v 3.0 1993/08/18 12:06:17 ram Exp $
X?RCS:
X?RCS: Copyright (c) 1991-1993, Raphael Manfredi
X?RCS: 
X?RCS: You may redistribute only under the terms of the Artistic Licence,
X?RCS: as specified in the README file that comes with the distribution.
X?RCS: You may reuse parts of this distribution only within the terms of
X?RCS: that same Artistic Licence; a copy of which may be found at the root
X?RCS: of the source tree for dist 3.0.
X?RCS:
X?RCS: $Log: d_getpwent.U,v $
X?RCS: Revision 3.0  1993/08/18  12:06:17  ram
X?RCS: Baseline for dist 3.0 netwide release.
X?RCS:
X?MAKE:d_getpwent: Csym Setvar
X?MAKE:	-pick add $@ %<
X?S:d_getpwent:
X?S:	This variable conditionally defines the HAS_GETPWENT symbol, which
X?S:	indicates to the C program that it should use the getpwent()
X?S:	routine instead of the getpw() routine.
X?S:.
X?C:HAS_GETPWENT (GETPWENT):
X?C:	This symbol, if defined, indicates that the getpwent() routine
X?C:	should be used instead of the getpw() routine.
X?C:.
X?H:#$d_getpwent HAS_GETPWENT	/**/
X?H:.
X?LINT:set d_getpwent
X: see if there is a getpwent
Xecho " "
Xif set getpwent val -f d_getpwent; eval $csym; $val; then
X	echo "getpwent() found." >&4
X	val="$define"
Xelse
X	echo "No getpwent() found -- will use getpw() instead." >&4
X	val="$undef"
Xfi
Xset d_getpwent
Xeval $setvar
X
END_OF_FILE
  if test 1301 -ne `wc -c <'mcon/U/d_getpwent.U'`; then
    echo shar: \"'mcon/U/d_getpwent.U'\" unpacked with wrong size!
  fi
  # end of 'mcon/U/d_getpwent.U'
fi
if test -f 'mcon/U/d_getwd.U' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'mcon/U/d_getwd.U'\"
else
  echo shar: Extracting \"'mcon/U/d_getwd.U'\" \(1255 characters\)
  sed "s/^X//" >'mcon/U/d_getwd.U' <<'END_OF_FILE'
X?RCS: $Id: d_getwd.U,v 3.0 1993/08/18 12:06:18 ram Exp $
X?RCS:
X?RCS: Copyright (c) 1991-1993, Raphael Manfredi
X?RCS: 
X?RCS: You may redistribute only under the terms of the Artistic Licence,
X?RCS: as specified in the README file that comes with the distribution.
X?RCS: You may reuse parts of this distribution only within the terms of
X?RCS: that same Artistic Licence; a copy of which may be found at the root
X?RCS: of the source tree for dist 3.0.
X?RCS:
X?RCS: $Log: d_getwd.U,v $
X?RCS: Revision 3.0  1993/08/18  12:06:18  ram
X?RCS: Baseline for dist 3.0 netwide release.
X?RCS:
X?MAKE:d_getwd: Csym Setvar
X?MAKE:	-pick add $@ %<
X?S:d_getwd:
X?S:	This variable conditionally defines HAS_GETWD if getwd() is
X?S:	available to get working directory. If not, you should
X?S:	probably use getcwd().
X?S:.
X?C:HAS_GETWD (GETWD):
X?C:	This symbol, if defined, indicates that the getwd routine is
X?C:	available to get working directory. If not, you should
X?C:	probably use getcwd().
X?C:.
X?H:#$d_getwd HAS_GETWD		/**/
X?H:.
X?LINT:set d_getwd
X: see if getwd exists
Xecho " "
Xif set getwd val -f d_getwd; eval $csym; $val; then
X	echo 'getwd() found.' >&4
X	val="$define"
Xelse
X	echo 'getwd() not found. Assuming getcwd() exists.' >&4
X	val="$undef"
Xfi
Xset d_getwd
Xeval $setvar
X
END_OF_FILE
  if test 1255 -ne `wc -c <'mcon/U/d_getwd.U'`; then
    echo shar: \"'mcon/U/d_getwd.U'\" unpacked with wrong size!
  fi
  # end of 'mcon/U/d_getwd.U'
fi
if test -f 'mcon/U/d_memmove.U' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'mcon/U/d_memmove.U'\"
else
  echo shar: Extracting \"'mcon/U/d_memmove.U'\" \(1227 characters\)
  sed "s/^X//" >'mcon/U/d_memmove.U' <<'END_OF_FILE'
X?RCS: $Id: d_memmove.U,v 3.0 1993/08/18 12:06:35 ram Exp $
X?RCS:
X?RCS: Copyright (c) 1991-1993, Raphael Manfredi
X?RCS: 
X?RCS: You may redistribute only under the terms of the Artistic Licence,
X?RCS: as specified in the README file that comes with the distribution.
X?RCS: You may reuse parts of this distribution only within the terms of
X?RCS: that same Artistic Licence; a copy of which may be found at the root
X?RCS: of the source tree for dist 3.0.
X?RCS:
X?RCS: $Log: d_memmove.U,v $
X?RCS: Revision 3.0  1993/08/18  12:06:35  ram
X?RCS: Baseline for dist 3.0 netwide release.
X?RCS:
X?MAKE:d_memmove: Inlibc
X?MAKE:	-pick add $@ %<
X?S:d_memmove:
X?S:	This variable conditionally defines the HAS_MEMMOVE symbol, which
X?S:	indicates to the C program that the memmove() routine is available
X?S:	to copy potentatially overlapping blocks of memory.
X?S:.
X?C:HAS_MEMMOVE:
X?C:	This symbol, if defined, indicates that the memmove routine is available
X?C:	to copy potentially overlapping blocks of memory. This should be used
X?C:	only when HAS_SAFE_BCOPY is not defined. If neither is there, roll your
X?C:	own version.
X?C:.
X?H:#$d_memmove HAS_MEMMOVE	/**/
X?H:.
X?LINT:set d_memmove
X: see if memmove exists
Xset memmove d_memmove
Xeval $inlibc
X
END_OF_FILE
  if test 1227 -ne `wc -c <'mcon/U/d_memmove.U'`; then
    echo shar: \"'mcon/U/d_memmove.U'\" unpacked with wrong size!
  fi
  # end of 'mcon/U/d_memmove.U'
fi
if test -f 'mcon/U/d_sem.U' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'mcon/U/d_sem.U'\"
else
  echo shar: Extracting \"'mcon/U/d_sem.U'\" \(1344 characters\)
  sed "s/^X//" >'mcon/U/d_sem.U' <<'END_OF_FILE'
X?RCS: $Id: d_sem.U,v 3.0 1993/08/18 12:07:03 ram Exp $
X?RCS:
X?RCS: Copyright (c) 1991-1993, Raphael Manfredi
X?RCS: 
X?RCS: You may redistribute only under the terms of the Artistic Licence,
X?RCS: as specified in the README file that comes with the distribution.
X?RCS: You may reuse parts of this distribution only within the terms of
X?RCS: that same Artistic Licence; a copy of which may be found at the root
X?RCS: of the source tree for dist 3.0.
X?RCS:
X?RCS: $Log: d_sem.U,v $
X?RCS: Revision 3.0  1993/08/18  12:07:03  ram
X?RCS: Baseline for dist 3.0 netwide release.
X?RCS:
X?MAKE:d_sem: test d_semctl d_semget d_semop Setvar Findhdr
X?MAKE:	-pick add $@ %<
X?S:d_sem:
X?S:	This variable conditionally defines the HAS_SEM symbol, which
X?S:	indicates that the entire sem*(2) library is present.
X?S:.
X?C:HAS_SEM:
X?C:	This symbol, if defined, indicates that the entire sem*(2) library is
X?C:	supported.
X?C:.
X?H:#$d_sem HAS_SEM		/**/
X?H:.
X?T:h_sem
X?LINT:set d_sem
X: see how much of the 'sem*(2)' library is present.
Xh_sem=true
Xecho " "
Xcase "$d_semctl$d_semget$d_semop" in
X*"$undef"*) h_sem=false;;
Xesac
X: we could also check for sys/ipc.h ...
Xif $h_sem && $test `./findhdr sys/sem.h`; then
X	echo "You have the full sem*(2) library." >&4
X	val="$define"
Xelse
X	echo "You don't have the full sem*(2) library." >&4
X	val="$undef"
Xfi
Xset d_sem
Xeval $setvar
X
END_OF_FILE
  if test 1344 -ne `wc -c <'mcon/U/d_sem.U'`; then
    echo shar: \"'mcon/U/d_sem.U'\" unpacked with wrong size!
  fi
  # end of 'mcon/U/d_sem.U'
fi
if test -f 'mcon/U/d_siglist.U' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'mcon/U/d_siglist.U'\"
else
  echo shar: Extracting \"'mcon/U/d_siglist.U'\" \(1272 characters\)
  sed "s/^X//" >'mcon/U/d_siglist.U' <<'END_OF_FILE'
X?RCS: $Id: d_siglist.U,v 3.0 1993/08/18 12:07:22 ram Exp $
X?RCS:
X?RCS: Copyright (c) 1991-1993, Raphael Manfredi
X?RCS: 
X?RCS: You may redistribute only under the terms of the Artistic Licence,
X?RCS: as specified in the README file that comes with the distribution.
X?RCS: You may reuse parts of this distribution only within the terms of
X?RCS: that same Artistic Licence; a copy of which may be found at the root
X?RCS: of the source tree for dist 3.0.
X?RCS:
X?RCS: $Log: d_siglist.U,v $
X?RCS: Revision 3.0  1993/08/18  12:07:22  ram
X?RCS: Baseline for dist 3.0 netwide release.
X?RCS:
X?MAKE:d_siglist: Csym Setvar
X?MAKE:	-pick add $@ %<
X?S:d_siglist:
X?S:	This variable conditionally defines HAS_SYS_SIGLIST if sys_siglist[] is
X?S:	available to translate signal numbers to strings.
X?S:.
X?C:HAS_SYS_SIGLIST (SYS_SIGLIST):
X?C:	This symbol, if defined, indicates that the sys_siglist array is
X?C:	available to translate signal numbers to strings.
X?C:.
X?H:#$d_siglist HAS_SYS_SIGLIST		/**/
X?H:.
X?LINT:set d_siglist
X: see if sys_siglist[] exist
Xecho " "
Xif set sys_siglist val -a d_siglist; eval $csym; $val; then	
X	echo "You have sys_siglist[] for signal description." >&4
X	val="$define"
Xelse
X	echo "You don't have sys_siglist[]." >&4
X	val="$undef"
Xfi
Xset d_siglist
Xeval $setvar
X
END_OF_FILE
  if test 1272 -ne `wc -c <'mcon/U/d_siglist.U'`; then
    echo shar: \"'mcon/U/d_siglist.U'\" unpacked with wrong size!
  fi
  # end of 'mcon/U/d_siglist.U'
fi
if test -f 'mcon/U/d_xdrs.U' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'mcon/U/d_xdrs.U'\"
else
  echo shar: Extracting \"'mcon/U/d_xdrs.U'\" \(1325 characters\)
  sed "s/^X//" >'mcon/U/d_xdrs.U' <<'END_OF_FILE'
X?RCS: $Id: d_xdrs.U,v 3.0 1993/08/18 12:08:04 ram Exp $
X?RCS:
X?RCS: Copyright (c) 1991-1993, Raphael Manfredi
X?RCS: 
X?RCS: You may redistribute only under the terms of the Artistic Licence,
X?RCS: as specified in the README file that comes with the distribution.
X?RCS: You may reuse parts of this distribution only within the terms of
X?RCS: that same Artistic Licence; a copy of which may be found at the root
X?RCS: of the source tree for dist 3.0.
X?RCS:
X?RCS: $Log: d_xdrs.U,v $
X?RCS: Revision 3.0  1993/08/18  12:08:04  ram
X?RCS: Baseline for dist 3.0 netwide release.
X?RCS:
X?MAKE:d_xdrs: cat Csym Setvar
X?MAKE:	-pick add $@ %<
X?S:d_xdrs:
X?S:	This symbol conditionally defines HAS_XDRS which indicates to the C
X?S:	program that XDR serialization routines are available.
X?S:.
X?C:HAS_XDRS (XDRS):
X?C:	This symbol if defined indicates to the C program that the XDR
X?C:	serialization routines are available to transfer data accross
X?C:	various architectures.
X?C:.
X?H:#$d_xdrs HAS_XDRS	/**/
X?H:.
X?LINT:set d_xdrs
X: see if XDR is available
Xecho " "
Xif set xdr_int val -f d_xdrs; eval $csym; $val; then
X	echo "Ahh! You have XDR routines for network communications." >&4
X	val="$define"
Xelse
X	$cat >&4 <<EOM
XSigh! You do not have XDR routines -- Network communications may be hazardous.
XEOM
X	val="$undef"
Xfi
Xset d_xdrs
Xeval $setvar
X
END_OF_FILE
  if test 1325 -ne `wc -c <'mcon/U/d_xdrs.U'`; then
    echo shar: \"'mcon/U/d_xdrs.U'\" unpacked with wrong size!
  fi
  # end of 'mcon/U/d_xdrs.U'
fi
if test -f 'mcon/U/etc.U' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'mcon/U/etc.U'\"
else
  echo shar: Extracting \"'mcon/U/etc.U'\" \(1357 characters\)
  sed "s/^X//" >'mcon/U/etc.U' <<'END_OF_FILE'
X?RCS: $Id: etc.U,v 3.0 1993/08/18 12:08:07 ram Exp $
X?RCS:
X?RCS: Copyright (c) 1991-1993, Raphael Manfredi
X?RCS: 
X?RCS: You may redistribute only under the terms of the Artistic Licence,
X?RCS: as specified in the README file that comes with the distribution.
X?RCS: You may reuse parts of this distribution only within the terms of
X?RCS: that same Artistic Licence; a copy of which may be found at the root
X?RCS: of the source tree for dist 3.0.
X?RCS:
X?RCS: $Log: etc.U,v $
X?RCS: Revision 3.0  1993/08/18  12:08:07  ram
X?RCS: Baseline for dist 3.0 netwide release.
X?RCS:
X?MAKE:etc etcexp: Getfile Loc Oldconfig
X?MAKE:	-pick add $@ %<
X?S:etc:
X?S:	This variable holds the name of the directory in which the user wants
X?S:	to put "administrative" executable images for the package in question.
X?S:	It is most often a local directory such as /usr/local/etc. Programs
X?S:	relying on this variable must be prepared to deal with ~name
X?S:	substitutions.
X?S:.
X?S:etcexp:
X?S:	This is the same as the etc variable, but is filename expanded at
X?S:	configuration time, for convenient use in makefiles.
X?S:.
X: determine where administrative executables go
Xcase "$etc" in
X'')
X	dflt=`./loc . /local/etc /usr/local/etc /local/etc /usr/etc /etc`
X	;;
X*)
X	dflt="$etc"
X	;;
Xesac
Xfn=d~
Xrp='Where should the administrative executables go?'
X. ./getfile
Xetc="$ans"
Xetcexp="$ansexp"
X
END_OF_FILE
  if test 1357 -ne `wc -c <'mcon/U/etc.U'`; then
    echo shar: \"'mcon/U/etc.U'\" unpacked with wrong size!
  fi
  # end of 'mcon/U/etc.U'
fi
if test -f 'mcon/U/i_sysselct.U' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'mcon/U/i_sysselct.U'\"
else
  echo shar: Extracting \"'mcon/U/i_sysselct.U'\" \(1202 characters\)
  sed "s/^X//" >'mcon/U/i_sysselct.U' <<'END_OF_FILE'
X?RCS: $Id: i_sysselct.U,v 3.0 1993/08/18 12:08:35 ram Exp $
X?RCS:
X?RCS: Copyright (c) 1991-1993, Raphael Manfredi
X?RCS: 
X?RCS: You may redistribute only under the terms of the Artistic Licence,
X?RCS: as specified in the README file that comes with the distribution.
X?RCS: You may reuse parts of this distribution only within the terms of
X?RCS: that same Artistic Licence; a copy of which may be found at the root
X?RCS: of the source tree for dist 3.0.
X?RCS:
X?RCS: $Log: i_sysselct.U,v $
X?RCS: Revision 3.0  1993/08/18  12:08:35  ram
X?RCS: Baseline for dist 3.0 netwide release.
X?RCS:
X?X:
X?X:	Look wether <sys/select.h> exists
X?X:
X?MAKE:i_sysselct: Inhdr
X?MAKE:	-pick add $@ %<
X?S:i_sysselct:
X?S:	This variable conditionally defines I_SYS_SELECT, which indicates
X?S:	to the C program that it should include <sys/select.h> in order to
X?S:	get the definition of struct timeval.
X?S:.
X?C:I_SYS_SELECT (I_SYSSELECT):
X?C:	This symbol, if defined, indicates to the C program that it should
X?C:	include <sys/select.h> in order to get definition of struct timeval.
X?C:.
X?H:#$i_sysselct I_SYS_SELECT	/**/
X?H:.
X?LINT:set i_sysselct
X: see if sys/select.h has to be included
Xset sys/select.h i_sysselct
Xeval $inhdr
X
END_OF_FILE
  if test 1202 -ne `wc -c <'mcon/U/i_sysselct.U'`; then
    echo shar: \"'mcon/U/i_sysselct.U'\" unpacked with wrong size!
  fi
  # end of 'mcon/U/i_sysselct.U'
fi
if test -f 'mcon/U/i_systypes.U' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'mcon/U/i_systypes.U'\"
else
  echo shar: Extracting \"'mcon/U/i_systypes.U'\" \(1115 characters\)
  sed "s/^X//" >'mcon/U/i_systypes.U' <<'END_OF_FILE'
X?RCS: $Id: i_systypes.U,v 3.0 1993/08/18 12:08:41 ram Exp $
X?RCS:
X?RCS: Copyright (c) 1991-1993, Raphael Manfredi
X?RCS: 
X?RCS: You may redistribute only under the terms of the Artistic Licence,
X?RCS: as specified in the README file that comes with the distribution.
X?RCS: You may reuse parts of this distribution only within the terms of
X?RCS: that same Artistic Licence; a copy of which may be found at the root
X?RCS: of the source tree for dist 3.0.
X?RCS:
X?RCS: $Log: i_systypes.U,v $
X?RCS: Revision 3.0  1993/08/18  12:08:41  ram
X?RCS: Baseline for dist 3.0 netwide release.
X?RCS:
X?X:
X?X:	Look wether <sys/types.h> needs to be included.
X?X:
X?MAKE:i_systypes: Inhdr
X?MAKE:	-pick add $@ %<
X?S:i_systypes:
X?S:	This variable conditionally defines the I_SYS_TYPES symbol,
X?S:	and indicates whether a C program should include <sys/types.h>.
X?S:.
X?C:I_SYS_TYPES (I_SYSTYPES):
X?C:	This symbol, if defined, indicates to the C program that it should
X?C:	include <sys/types.h>.
X?C:.
X?H:#$i_systypes	I_SYS_TYPES		/**/
X?H:.
X?LINT:set i_systypes
X: see if sys/types.h has to be included
Xset sys/types.h i_systypes
Xeval $inhdr
X
END_OF_FILE
  if test 1115 -ne `wc -c <'mcon/U/i_systypes.U'`; then
    echo shar: \"'mcon/U/i_systypes.U'\" unpacked with wrong size!
  fi
  # end of 'mcon/U/i_systypes.U'
fi
if test -f 'mcon/U/i_varargs.U' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'mcon/U/i_varargs.U'\"
else
  echo shar: Extracting \"'mcon/U/i_varargs.U'\" \(1259 characters\)
  sed "s/^X//" >'mcon/U/i_varargs.U' <<'END_OF_FILE'
X?RCS: $Id: i_varargs.U,v 3.0 1993/08/18 12:08:48 ram Exp $
X?RCS:
X?RCS: Copyright (c) 1991-1993, Raphael Manfredi
X?RCS: 
X?RCS: You may redistribute only under the terms of the Artistic Licence,
X?RCS: as specified in the README file that comes with the distribution.
X?RCS: You may reuse parts of this distribution only within the terms of
X?RCS: that same Artistic Licence; a copy of which may be found at the root
X?RCS: of the source tree for dist 3.0.
X?RCS:
X?RCS: $Log: i_varargs.U,v $
X?RCS: Revision 3.0  1993/08/18  12:08:48  ram
X?RCS: Baseline for dist 3.0 netwide release.
X?RCS:
X?X:
X?X: This unit looks wether there is a varargs system or not
X?X:
X?MAKE:i_varargs: test Setvar Findhdr
X?MAKE:	-pick add $@ %<
X?S:i_varargs:
X?S:	This variable conditionally defines I_VARARGS, which indicates
X?S:	to the C program that it should include <varargs.h>.
X?S:.
X?C:I_VARARGS:
X?C:	This symbol, if defined, indicates to the C program that it should
X?C:	include <varargs.h>.
X?C:.
X?H:#$i_varargs I_VARARGS		/**/
X?H:.
X?LINT:set i_varargs
X: see if this is a varargs system
Xecho " "
Xif $test `./findhdr varargs.h`; then
X	val="$define"
X	echo "<varargs.h> found." >&4
Xelse
X	val="$undef"
X	echo "<varargs.h> NOT found, but that's ok (I hope)." >&4
Xfi
Xset i_varargs
Xeval $setvar
X
END_OF_FILE
  if test 1259 -ne `wc -c <'mcon/U/i_varargs.U'`; then
    echo shar: \"'mcon/U/i_varargs.U'\" unpacked with wrong size!
  fi
  # end of 'mcon/U/i_varargs.U'
fi
if test -f 'mcon/U/inc.U' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'mcon/U/inc.U'\"
else
  echo shar: Extracting \"'mcon/U/inc.U'\" \(1258 characters\)
  sed "s/^X//" >'mcon/U/inc.U' <<'END_OF_FILE'
X?RCS: $Id: inc.U,v 3.0 1993/08/18 12:08:51 ram Exp $
X?RCS:
X?RCS: Copyright (c) 1991-1993, Raphael Manfredi
X?RCS: 
X?RCS: You may redistribute only under the terms of the Artistic Licence,
X?RCS: as specified in the README file that comes with the distribution.
X?RCS: You may reuse parts of this distribution only within the terms of
X?RCS: that same Artistic Licence; a copy of which may be found at the root
X?RCS: of the source tree for dist 3.0.
X?RCS:
X?RCS: $Log: inc.U,v $
X?RCS: Revision 3.0  1993/08/18  12:08:51  ram
X?RCS: Baseline for dist 3.0 netwide release.
X?RCS:
X?MAKE:inc incexp: Loc Oldconfig Getfile usrinc
X?MAKE:	-pick add $@ %<
X?S:inc:
X?S:	This variable holds the name of the directory in which the user wants
X?S:	to put public header files for the package in question.  It is most
X?S:	often a local directory such as /usr/local/include.
X?S:.
X?S:incexp:
X?S:	This is the same as the inc variable, but is filename expaned
X?S:	at configuration time for convenient use in your makefiles.
X?S:.
X: determine where public header files go
Xcase "$inc" in
X'')
X	dflt=`./loc . "." /usr/local/include /usr/include/local $usrinc`
X	;;
X*)  dflt="$inc"
X	;;
Xesac
Xfn=d~
Xrp='Where do you want to put the public header files?'
X. ./getfile
Xinc="$ans"
Xincexp="$ansexp"
X
END_OF_FILE
  if test 1258 -ne `wc -c <'mcon/U/inc.U'`; then
    echo shar: \"'mcon/U/inc.U'\" unpacked with wrong size!
  fi
  # end of 'mcon/U/inc.U'
fi
if test -f 'mcon/U/lib.U' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'mcon/U/lib.U'\"
else
  echo shar: Extracting \"'mcon/U/lib.U'\" \(1323 characters\)
  sed "s/^X//" >'mcon/U/lib.U' <<'END_OF_FILE'
X?RCS: $Id: lib.U,v 3.0 1993/08/18 12:08:56 ram Exp $
X?RCS:
X?RCS: Copyright (c) 1991-1993, Raphael Manfredi
X?RCS: 
X?RCS: You may redistribute only under the terms of the Artistic Licence,
X?RCS: as specified in the README file that comes with the distribution.
X?RCS: You may reuse parts of this distribution only within the terms of
X?RCS: that same Artistic Licence; a copy of which may be found at the root
X?RCS: of the source tree for dist 3.0.
X?RCS:
X?RCS: $Log: lib.U,v $
X?RCS: Revision 3.0  1993/08/18  12:08:56  ram
X?RCS: Baseline for dist 3.0 netwide release.
X?RCS:
X?MAKE:lib libexp: Getfile Loc Oldconfig
X?MAKE:	-pick add $@ %<
X?S:lib:
X?S:	This variable holds the name of the directory in which the user wants
X?S:	to put public library files for the package in question.  It is most
X?S:	often a local directory such as /usr/local/lib. Programs using this
X?S:	variable must be prepared to deal with filename expansion.
X?S:.
X?S:libexp:
X?S:	This variable is the same as the lib variable, but is filename expanded
X?S:	at configuration time, for convenient use in your makefiles.
X?S:.
X: determine where public libraries go
Xcase "$lib" in
X'') dflt=`./loc . "." /usr/local/lib /usr/lib /lib`;;
X*)  dflt="$lib";;
Xesac
Xecho " "
Xfn=d~
Xrp='Where do you want to put the public libraries?'
X. ./getfile
Xlib="$ans"
Xlibexp="$ansexp"
X
END_OF_FILE
  if test 1323 -ne `wc -c <'mcon/U/lib.U'`; then
    echo shar: \"'mcon/U/lib.U'\" unpacked with wrong size!
  fi
  # end of 'mcon/U/lib.U'
fi
if test -f 'mcon/U/libdbm.U' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'mcon/U/libdbm.U'\"
else
  echo shar: Extracting \"'mcon/U/libdbm.U'\" \(1273 characters\)
  sed "s/^X//" >'mcon/U/libdbm.U' <<'END_OF_FILE'
X?RCS: $Id: libdbm.U,v 3.0 1993/08/18 12:08:58 ram Exp $
X?RCS:
X?RCS: Copyright (c) 1991-1993, Raphael Manfredi
X?RCS: 
X?RCS: You may redistribute only under the terms of the Artistic Licence,
X?RCS: as specified in the README file that comes with the distribution.
X?RCS: You may reuse parts of this distribution only within the terms of
X?RCS: that same Artistic Licence; a copy of which may be found at the root
X?RCS: of the source tree for dist 3.0.
X?RCS:
X?RCS: $Log: libdbm.U,v $
X?RCS: Revision 3.0  1993/08/18  12:08:58  ram
X?RCS: Baseline for dist 3.0 netwide release.
X?RCS:
X?MAKE:libdbm: test Loc libpth
X?MAKE:	-pick add $@ %<
X?S:libdbm:
X?S:	This variable contains the argument to pass to the loader in order
X?S:	to get the dbm library routines.  If there is no dbm or ndbm
X?S:	library, it is null.
X?S:.
X?T:xxx
X: see if we should include -ldbm
Xecho " "
Xif $test -r /usr/lib/libndbm.a || $test -r /usr/local/lib/libndbm.a ; then
X	echo "-lndbm found." >&4
X	libdbm='-lndbm'
Xelif $test -r /usr/lib/libdbm.a || $test -r /usr/local/lib/libdbm.a ; then
X	echo "-ldbm found." >&4
X	libdbm='-ldbm'
Xelse
X	xxx=`./loc libdbm.a x $libpth`
X	case "$xxx" in
X	x)
X		echo "No dbm library found." >&4
X		libdbm=''
X		;;
X	*)
X		echo "DBM library found in $xxx." >&4
X		libdbm="$xxx"
X		;;
X	esac
Xfi
X
END_OF_FILE
  if test 1273 -ne `wc -c <'mcon/U/libdbm.U'`; then
    echo shar: \"'mcon/U/libdbm.U'\" unpacked with wrong size!
  fi
  # end of 'mcon/U/libdbm.U'
fi
if test -f 'mcon/U/libflex.U' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'mcon/U/libflex.U'\"
else
  echo shar: Extracting \"'mcon/U/libflex.U'\" \(1323 characters\)
  sed "s/^X//" >'mcon/U/libflex.U' <<'END_OF_FILE'
X?RCS: $Id: libflex.U,v 3.0 1993/08/18 12:08:59 ram Exp $
X?RCS:
X?RCS: Copyright (c) 1991-1993, Raphael Manfredi
X?RCS: 
X?RCS: You may redistribute only under the terms of the Artistic Licence,
X?RCS: as specified in the README file that comes with the distribution.
X?RCS: You may reuse parts of this distribution only within the terms of
X?RCS: that same Artistic Licence; a copy of which may be found at the root
X?RCS: of the source tree for dist 3.0.
X?RCS:
X?RCS: $Log: libflex.U,v $
X?RCS: Revision 3.0  1993/08/18  12:08:59  ram
X?RCS: Baseline for dist 3.0 netwide release.
X?RCS:
X?MAKE:libflex: test Loc flex libpth
X?MAKE:	-pick add $@ %<
X?S:libflex:
X?S:	This variable contains the argument to pass to the loader in order
X?S:	to get the flex library routines.  If there is no flex or flex
X?S:	library, it is null.
X?S:.
X?T:xxx
X?O: use libswanted='-lfl' instead (see libs.U)
X: see if we should include -lfl
Xecho " "
Xcase "$flex" in
X*/flex)
X	if $test -r /usr/lib/libfl.a || $test -r /usr/local/lib/libfl.a ; then
X		echo "-lfl found." >&4
X	else
X		xxx=`./loc libfl.a x $libpth`
X		case "$xxx" in
X		x)
X			echo "No flex library found." >&4
X			libflex=''
X			;;
X		*)
X			echo "flex library found in $xxx." >&4
X			libflex="$xxx"
X			;;
X		esac
X	fi
X*)
Xecho "You don't seem to have flex, so I won't look for the flex library." >&4
X	;;
Xesac
X
END_OF_FILE
  if test 1323 -ne `wc -c <'mcon/U/libflex.U'`; then
    echo shar: \"'mcon/U/libflex.U'\" unpacked with wrong size!
  fi
  # end of 'mcon/U/libflex.U'
fi
if test -f 'mcon/U/libnlist.U' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'mcon/U/libnlist.U'\"
else
  echo shar: Extracting \"'mcon/U/libnlist.U'\" \(1267 characters\)
  sed "s/^X//" >'mcon/U/libnlist.U' <<'END_OF_FILE'
X?RCS: $Id: libnlist.U,v 3.0 1993/08/18 12:09:00 ram Exp $
X?RCS:
X?RCS: Copyright (c) 1991-1993, Raphael Manfredi
X?RCS: 
X?RCS: You may redistribute only under the terms of the Artistic Licence,
X?RCS: as specified in the README file that comes with the distribution.
X?RCS: You may reuse parts of this distribution only within the terms of
X?RCS: that same Artistic Licence; a copy of which may be found at the root
X?RCS: of the source tree for dist 3.0.
X?RCS:
X?RCS: $Log: libnlist.U,v $
X?RCS: Revision 3.0  1993/08/18  12:09:00  ram
X?RCS: Baseline for dist 3.0 netwide release.
X?RCS:
X?MAKE:libnlist: Loc libpth Guess
X?MAKE:	-pick add $@ %<
X?S:libnlist (libmld):
X?S:	This variable contains the name of the library required to get the
X?S:	definition of the nlist() function.  On a MIPS RISC/OS box, it is -lmld.
X?S:	Under Sys Vr4, it is -lelf.  Otherwise, its value is empty.
X?S:.
X?T:xxx
X: see if we need a special library for 'nlist()'
Xecho " "
X: How about doing this of nlist is not in libc...
Xif mips ; then
X	libnlist='-lmld'
Xelse
X	xxx=`./loc libelf.a x $libpth`
X	case "$xxx" in
X	x)  ;;
X	*)
X		libnlist="$xxx"
X		;;
X	esac
Xfi
Xcase "$libnlist" in
X'') echo "No special library for nlist() seems necessary." >&4
X	;;
X*)  echo "nlist() can be found in $libnlist." >&4
X	;;
Xesac
X
END_OF_FILE
  if test 1267 -ne `wc -c <'mcon/U/libnlist.U'`; then
    echo shar: \"'mcon/U/libnlist.U'\" unpacked with wrong size!
  fi
  # end of 'mcon/U/libnlist.U'
fi
if test -f 'mcon/U/libnm.U' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'mcon/U/libnm.U'\"
else
  echo shar: Extracting \"'mcon/U/libnm.U'\" \(1247 characters\)
  sed "s/^X//" >'mcon/U/libnm.U' <<'END_OF_FILE'
X?RCS: $Id: libnm.U,v 3.0 1993/08/18 12:09:01 ram Exp $
X?RCS:
X?RCS: Copyright (c) 1991-1993, Raphael Manfredi
X?RCS: 
X?RCS: You may redistribute only under the terms of the Artistic Licence,
X?RCS: as specified in the README file that comes with the distribution.
X?RCS: You may reuse parts of this distribution only within the terms of
X?RCS: that same Artistic Licence; a copy of which may be found at the root
X?RCS: of the source tree for dist 3.0.
X?RCS:
X?RCS: $Log: libnm.U,v $
X?RCS: Revision 3.0  1993/08/18  12:09:01  ram
X?RCS: Baseline for dist 3.0 netwide release.
X?RCS:
X?MAKE:libnm: test Loc libpth
X?MAKE:	-pick add $@ %<
X?S:libnm:
X?S:	This variable contains the argument to pass to the loader in order
X?S:	to get the new math library routines.  If there is no new math
X?S:	library, it is null.
X?S:.
X?T:ans
X?O: use libswanted='-lnm' instead (see libs.U).
X: see if we should include -lnm
Xecho " "
Xif $test -r /usr/lib/libnm.a || $test -r /usr/local/lib/libnm.a ; then
X	echo "New math library found." >&4
X	libnm='-lnm'
Xelse
X	ans=`./loc libnm.a x $libpth`
X	case "$ans" in
X	x)
X		echo "No nm library found--the normal math library will have to do." >&4
X		libnm=''
X		;;
X	*)
X		echo "New math library found in $ans." >&4
X		libnm="$ans"
X		;;
X	esac
Xfi
X
END_OF_FILE
  if test 1247 -ne `wc -c <'mcon/U/libnm.U'`; then
    echo shar: \"'mcon/U/libnm.U'\" unpacked with wrong size!
  fi
  # end of 'mcon/U/libnm.U'
fi
if test -f 'mcon/U/libyacc.U' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'mcon/U/libyacc.U'\"
else
  echo shar: Extracting \"'mcon/U/libyacc.U'\" \(1307 characters\)
  sed "s/^X//" >'mcon/U/libyacc.U' <<'END_OF_FILE'
X?RCS: $Id: libyacc.U,v 3.0 1993/08/18 12:09:04 ram Exp $
X?RCS:
X?RCS: Copyright (c) 1991-1993, Raphael Manfredi
X?RCS: 
X?RCS: You may redistribute only under the terms of the Artistic Licence,
X?RCS: as specified in the README file that comes with the distribution.
X?RCS: You may reuse parts of this distribution only within the terms of
X?RCS: that same Artistic Licence; a copy of which may be found at the root
X?RCS: of the source tree for dist 3.0.
X?RCS:
X?RCS: $Log: libyacc.U,v $
X?RCS: Revision 3.0  1993/08/18  12:09:04  ram
X?RCS: Baseline for dist 3.0 netwide release.
X?RCS:
X?MAKE:libyacc: Loc yacc libpth
X?MAKE:	-pick add $@ %<
X?S:libyacc:
X?S:	This variable contains the argument to pass to the loader in order
X?S:	to get the yacc library routines.  If there is no yacc or yacc
X?S:	library, it is null.
X?S:.
X?T:xxx
X?O: use libswanted='-ly' instead (see libs.U)
X: see if we should include -ly
Xecho " "
Xcase "$yacc" in
X*yacc)
X	xxx=`./loc liby.a x $libpth`
X	case "$xxx" in
X	x)
X		echo "No yacc library found." >&4
X		libyacc=''
X		;;
X	*)
X		echo "yacc library found in $xxx." >&4
X		libyacc="$xxx"
X		;;
X	esac
X	;;
X*/bison*)
X	echo "You are using bison, so I won't look for a yacc library." >&4
X	libyacc=''
X	;;
X*)
Xecho "You don't seem to have yacc, so I won't look for the yacc library." >&4
X	libyacc=''
X	;;
Xesac
X
END_OF_FILE
  if test 1307 -ne `wc -c <'mcon/U/libyacc.U'`; then
    echo shar: \"'mcon/U/libyacc.U'\" unpacked with wrong size!
  fi
  # end of 'mcon/U/libyacc.U'
fi
if test -f 'mcon/U/maildir.U' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'mcon/U/maildir.U'\"
else
  echo shar: Extracting \"'mcon/U/maildir.U'\" \(1258 characters\)
  sed "s/^X//" >'mcon/U/maildir.U' <<'END_OF_FILE'
X?RCS: $Id: maildir.U,v 3.0 1993/08/18 12:09:09 ram Exp $
X?RCS:
X?RCS: Copyright (c) 1991-1993, Raphael Manfredi
X?RCS: 
X?RCS: You may redistribute only under the terms of the Artistic Licence,
X?RCS: as specified in the README file that comes with the distribution.
X?RCS: You may reuse parts of this distribution only within the terms of
X?RCS: that same Artistic Licence; a copy of which may be found at the root
X?RCS: of the source tree for dist 3.0.
X?RCS:
X?RCS: $Log: maildir.U,v $
X?RCS: Revision 3.0  1993/08/18  12:09:09  ram
X?RCS: Baseline for dist 3.0 netwide release.
X?RCS:
X?MAKE:maildir maildirexp: Getfile Loc Oldconfig
X?MAKE:	-pick add $@ %<
X?S:maildir:
X?S:	This variable contains the name of the directory in which mail is
X?S:	spooled. Programs using this variable must be prepared to deal with
X?S:	~name substitutions.
X?S:.
X?S:maildirexp:
X?S:	This is the same as the maildir variable, but is filename expanded
X?S:	at configuration time, for programs not willing to deal with it at
X?S:	run-time.
X?S:.
X: determine where mail is spooled
Xcase "$maildir" in
X'') dflt=`./loc . /usr/spool/mail /usr/spool/mail /usr/mail`;;
X*) dflt="$maildir";;
Xesac
Xecho " "
Xfn=d~
Xrp='Where is yet-to-be-read mail spooled?'
X. ./getfile
Xmaildir="$ans"
Xmaildirexp="$ansexp"
X
END_OF_FILE
  if test 1258 -ne `wc -c <'mcon/U/maildir.U'`; then
    echo shar: \"'mcon/U/maildir.U'\" unpacked with wrong size!
  fi
  # end of 'mcon/U/maildir.U'
fi
if test -f 'mcon/U/n.U' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'mcon/U/n.U'\"
else
  echo shar: Extracting \"'mcon/U/n.U'\" \(1376 characters\)
  sed "s/^X//" >'mcon/U/n.U' <<'END_OF_FILE'
X?RCS: $Id: n.U,v 3.0 1993/08/18 12:09:19 ram Exp $
X?RCS:
X?RCS: Copyright (c) 1991-1993, Raphael Manfredi
X?RCS: 
X?RCS: You may redistribute only under the terms of the Artistic Licence,
X?RCS: as specified in the README file that comes with the distribution.
X?RCS: You may reuse parts of this distribution only within the terms of
X?RCS: that same Artistic Licence; a copy of which may be found at the root
X?RCS: of the source tree for dist 3.0.
X?RCS:
X?RCS: $Log: n.U,v $
X?RCS: Revision 3.0  1993/08/18  12:09:19  ram
X?RCS: Baseline for dist 3.0 netwide release.
X?RCS:
X?MAKE:n c: contains
X?MAKE:	-pick add $@ %<
X?S:n:
X?S:	This variable contains the -n flag if that is what causes the echo
X?S:	command to suppress newline.  Otherwise it is null.  Correct usage is
X?S:	    $echo $n "prompt for a question: $c".
X?S:.
X?S:c:
X?S:	This variable contains the \c string if that is what causes the echo
X?S:	command to suppress newline.  Otherwise it is null.  Correct usage is
X?S:	    $echo $n "prompt for a question: $c".
X?S:.
X: first determine how to suppress newline on echo command
Xecho " "
Xecho "Checking echo to see how to suppress newlines..."
X(echo "hi there\c" ; echo " ") >.echotmp
Xif $contains c .echotmp >/dev/null 2>&1 ; then
X	echo "...using -n."
X	n='-n'
X	c=''
Xelse
X	cat <<'EOM'
X...using \c
XEOM
X	n=''
X	c='\c'
Xfi
Xecho $n "The star should be here-->$c"
Xecho '*'
Xrm -f .echotmp
X
END_OF_FILE
  if test 1376 -ne `wc -c <'mcon/U/n.U'`; then
    echo shar: \"'mcon/U/n.U'\" unpacked with wrong size!
  fi
  # end of 'mcon/U/n.U'
fi
if test -f 'mcon/U/rcs_branch.U' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'mcon/U/rcs_branch.U'\"
else
  echo shar: Extracting \"'mcon/U/rcs_branch.U'\" \(1296 characters\)
  sed "s/^X//" >'mcon/U/rcs_branch.U' <<'END_OF_FILE'
X?RCS: $Id: rcs_branch.U,v 3.0 1993/08/18 12:09:40 ram Exp $
X?RCS:
X?RCS: Copyright (c) 1991-1993, Raphael Manfredi
X?RCS: 
X?RCS: You may redistribute only under the terms of the Artistic Licence,
X?RCS: as specified in the README file that comes with the distribution.
X?RCS: You may reuse parts of this distribution only within the terms of
X?RCS: that same Artistic Licence; a copy of which may be found at the root
X?RCS: of the source tree for dist 3.0.
X?RCS:
X?RCS: $Log: rcs_branch.U,v $
X?RCS: Revision 3.0  1993/08/18  12:09:40  ram
X?RCS: Baseline for dist 3.0 netwide release.
X?RCS:
X?MAKE:rcs_branch: Myread contains Loc
X?MAKE:	-pick add $@ %<
X?S:rcs_branch:
X?S:	This variable will hold "true" if rcs can take the -b<revision>
X?S:	option, which can make Life Easier on those folks who like to run
X?S:	rcsdiff manually.
X?S:.
X?T:xxx
X: Tra la la la la
Xecho " "
Xecho "Checking to see if RCS understands the -b switch..." >&4
Xxxx=`./loc rcs '' $pth`
Xcase "$xxx" in
X'')
X	rcs_branch=false
X	echo "Oh.  You don't seem to have RCS here."
X	;;
X*)
X	rcs > rcsbranch.out 2>&1
X	if $contains 'b\[rev\]' rcsbranch.out  >/dev/null 2>&1 ; then
X		rcs_branch=true
X		echo "Nice!  Your RCS is spiffy!"
X	else
X		rcs_branch=false
X	echo "Well, at least you have RCS.  You know, a newer version is available."
X	fi
X	;;
Xesac
X
END_OF_FILE
  if test 1296 -ne `wc -c <'mcon/U/rcs_branch.U'`; then
    echo shar: \"'mcon/U/rcs_branch.U'\" unpacked with wrong size!
  fi
  # end of 'mcon/U/rcs_branch.U'
fi
if test -f 'mcon/U/startsh.U' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'mcon/U/startsh.U'\"
else
  echo shar: Extracting \"'mcon/U/startsh.U'\" \(1297 characters\)
  sed "s/^X//" >'mcon/U/startsh.U' <<'END_OF_FILE'
X?RCS: $Id: startsh.U,v 3.0 1993/08/18 12:09:51 ram Exp $
X?RCS:
X?RCS: Copyright (c) 1991-1993, Raphael Manfredi
X?RCS: 
X?RCS: You may redistribute only under the terms of the Artistic Licence,
X?RCS: as specified in the README file that comes with the distribution.
X?RCS: You may reuse parts of this distribution only within the terms of
X?RCS: that same Artistic Licence; a copy of which may be found at the root
X?RCS: of the source tree for dist 3.0.
X?RCS:
X?RCS: $Log: startsh.U,v $
X?RCS: Revision 3.0  1993/08/18  12:09:51  ram
X?RCS: Baseline for dist 3.0 netwide release.
X?RCS:
X?MAKE:startsh: sharpbang eunicefix
X?MAKE:	-pick add $@ %<
X?S:startsh:
X?S:	This variable contains the string to put on the front of a shell
X?S:	script to make sure (hopefully) that it runs with sh and not some
X?S:	other shell.
X?S:.
X?T:SYSTYPE
X: figure out how to guarantee sh startup
Xecho " "
Xecho "Checking out how to guarantee sh startup..." >&4
Xcase "$SYSTYPE" in
X*bsd*|sys5*) startsh=$sharpbang"/$SYSTYPE/bin/sh";;
X*) startsh=$sharpbang'/bin/sh';;
Xesac
Xecho "Let's see if '$startsh' works..."
Xcat >try <<EOSS
X$startsh
Xset abc
Xtest "$?abc" != 1
XEOSS
X
Xchmod +x try
X$eunicefix try
Xif ./try; then
X	echo "Yup, it does."
Xelse
Xecho "Nope.  You may have to fix up the shell scripts to make sure sh runs them."
Xfi
Xrm -f try
X
END_OF_FILE
  if test 1297 -ne `wc -c <'mcon/U/startsh.U'`; then
    echo shar: \"'mcon/U/startsh.U'\" unpacked with wrong size!
  fi
  # end of 'mcon/U/startsh.U'
fi
if test -f 'mcon/U/stdchar.U' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'mcon/U/stdchar.U'\"
else
  echo shar: Extracting \"'mcon/U/stdchar.U'\" \(1220 characters\)
  sed "s/^X//" >'mcon/U/stdchar.U' <<'END_OF_FILE'
X?RCS: $Id: stdchar.U,v 3.0 1993/08/18 12:09:52 ram Exp $
X?RCS:
X?RCS: Copyright (c) 1991-1993, Raphael Manfredi
X?RCS: 
X?RCS: You may redistribute only under the terms of the Artistic Licence,
X?RCS: as specified in the README file that comes with the distribution.
X?RCS: You may reuse parts of this distribution only within the terms of
X?RCS: that same Artistic Licence; a copy of which may be found at the root
X?RCS: of the source tree for dist 3.0.
X?RCS:
X?RCS: $Log: stdchar.U,v $
X?RCS: Revision 3.0  1993/08/18  12:09:52  ram
X?RCS: Baseline for dist 3.0 netwide release.
X?RCS:
X?MAKE:stdchar: contains Findhdr
X?MAKE:	-pick add $@ %<
X?S:stdchar:
X?S:	This variable conditionally defines STDCHAR to be the type of char
X?S:	used in stdio.h.  It has the values "unsigned char" or "char".
X?S:.
X?C:STDCHAR:
X?C:	This symbol is defined to be the type of char used in stdio.h.
X?C:	It has the values "unsigned char" or "char".
X?C:.
X?H:#define STDCHAR $stdchar	/**/
X?H:.
X: see what type of char stdio uses.
Xecho " "
Xif $contains 'unsigned.*char.*_ptr;' `./findhdr stdio.h` >/dev/null 2>&1 ; then
X	echo "Your stdio uses unsigned chars." >&4
X	stdchar="unsigned char"
Xelse
X	echo "Your stdio uses signed chars." >&4
X	stdchar="char"
Xfi
X
END_OF_FILE
  if test 1220 -ne `wc -c <'mcon/U/stdchar.U'`; then
    echo shar: \"'mcon/U/stdchar.U'\" unpacked with wrong size!
  fi
  # end of 'mcon/U/stdchar.U'
fi
if test -f 'mcon/U/sysman.U' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'mcon/U/sysman.U'\"
else
  echo shar: Extracting \"'mcon/U/sysman.U'\" \(1279 characters\)
  sed "s/^X//" >'mcon/U/sysman.U' <<'END_OF_FILE'
X?RCS: $Id: sysman.U,v 3.0 1993/08/18 12:09:55 ram Exp $
X?RCS:
X?RCS: Copyright (c) 1991-1993, Raphael Manfredi
X?RCS: 
X?RCS: You may redistribute only under the terms of the Artistic Licence,
X?RCS: as specified in the README file that comes with the distribution.
X?RCS: You may reuse parts of this distribution only within the terms of
X?RCS: that same Artistic Licence; a copy of which may be found at the root
X?RCS: of the source tree for dist 3.0.
X?RCS:
X?RCS: $Log: sysman.U,v $
X?RCS: Revision 3.0  1993/08/18  12:09:55  ram
X?RCS: Baseline for dist 3.0 netwide release.
X?RCS:
X?MAKE:sysman: test Loc Oldconfig
X?MAKE:	-pick add $@ %<
X?S:sysman:
X?S:	This variable holds the place where the manual is located on this
X?S:	system. It is not the place where the user wants to put his manual
X?S:	pages. See mansrc.
X?S:.
X: determine where manual pages are on this system
Xecho " "
Xcase "$sysman" in
X'') sysman=`./loc . /usr/man/man1 /usr/man/man1 /usr/man/mann /usr/man/manl /usr/man/local/man1 /usr/man/u_man/man1 /usr/share/man/man1 /usr/catman/u_man/man1 /usr/man/l_man/man1 /usr/local/man/u_man/man1 /usr/local/man/l_man/man1 /usr/man/man.L`
X	;;
Xesac
Xif $test -d "$sysman"; then
X	echo "System manual is in $sysman." >&4
Xelse
X	echo "Could not find manual pages in source form." >&4
Xfi
X
END_OF_FILE
  if test 1279 -ne `wc -c <'mcon/U/sysman.U'`; then
    echo shar: \"'mcon/U/sysman.U'\" unpacked with wrong size!
  fi
  # end of 'mcon/U/sysman.U'
fi
if test -f 'mcon/pl/files.pl' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'mcon/pl/files.pl'\"
else
  echo shar: Extracting \"'mcon/pl/files.pl'\" \(1229 characters\)
  sed "s/^X//" >'mcon/pl/files.pl' <<'END_OF_FILE'
X;# $Id: files.pl,v 3.0 1993/08/18 12:10:23 ram Exp $
X;#
X;#  Copyright (c) 1991-1993, Raphael Manfredi
X;#  
X;#  You may redistribute only under the terms of the Artistic Licence,
X;#  as specified in the README file that comes with the distribution.
X;#  You may reuse parts of this distribution only within the terms of
X;#  that same Artistic Licence; a copy of which may be found at the root
X;#  of the source tree for dist 3.0.
X;#
X;# $Log: files.pl,v $
X;# Revision 3.0  1993/08/18  12:10:23  ram
X;# Baseline for dist 3.0 netwide release.
X;#
X;# 
X;# These two arrays record the file names of the files which may (or may not)
X;# contain shell or C symbols known by metaconfig.
X;#  @SHlist records the .SH files
X;#  @clist records the C-like files (i.e. .[chyl])
X;#
X# Extract filenames from manifest
Xsub extract_filenames {
X	print "Extracting filenames (*.[chyl] and *.SH) from $NEWMANI...\n"
X		unless $opt_s;
X	open(NEWMANI,$NEWMANI) || die "Can't open $NEWMANI.\n";
X	local($file);
X	while (<NEWMANI>) {
X		($file) = split(' ');
X		next if $file eq 'config_h.SH';			# skip config_h.SH
X		next if $file eq 'Configure';			# also skip Configure
X		push(@SHlist,$file) if $file =~ /\.SH$/;
X		push(@clist,$file) if $file =~ /\.[chyl]$/;
X	}
X}
X
END_OF_FILE
  if test 1229 -ne `wc -c <'mcon/pl/files.pl'`; then
    echo shar: \"'mcon/pl/files.pl'\" unpacked with wrong size!
  fi
  # end of 'mcon/pl/files.pl'
fi
if test -f 'pat/Jmakefile' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'pat/Jmakefile'\"
else
  echo shar: Extracting \"'pat/Jmakefile'\" \(1258 characters\)
  sed "s/^X//" >'pat/Jmakefile' <<'END_OF_FILE'
X/*
X * Jmakefile for patching tools.
X */
X
X;# $Id: Jmakefile,v 3.0 1993/08/18 12:10:32 ram Exp $
X;#
X;#  Copyright (c) 1991-1993, Raphael Manfredi
X;#  
X;#  You may redistribute only under the terms of the Artistic Licence,
X;#  as specified in the README file that comes with the distribution.
X;#  You may reuse parts of this distribution only within the terms of
X;#  that same Artistic Licence; a copy of which may be found at the root
X;#  of the source tree for dist 3.0.
X;#
X;# $Log: Jmakefile,v $
X;# Revision 3.0  1993/08/18  12:10:32  ram
X;# Baseline for dist 3.0 netwide release.
X;#
X
X/* BASE is used to give the extensions for pat* files. Usually, '//' can be
X * used to specify a null expansion pattern, but some of those new smart cpp
X * now think it's a up-to-end-of-line comment--why do they do that to us?
X */
XBASE = /^^/ cil base diff make clean col name ftp send index post
X
X/* PAT is derived from BASE and is the list of all the files to produce */
XPAT = \
X|expand f!$(BASE)!
X	pat!f \
X-expand \\
X
XNoManPages()		/* There is a single man page for all tools */
XSimpleShellScriptTarget($(PAT))
X
X>SCRIPTDIR		/* Grrr... I have to find a nicer way!! */
X>MANSRC			/* Idem!! */
X
XInstallMultipleFlags($(PAT),$(SCRIPTDIR),-m 555)
XInstallManPage(pat,$(MANSRC))
END_OF_FILE
  if test 1258 -ne `wc -c <'pat/Jmakefile'`; then
    echo shar: \"'pat/Jmakefile'\" unpacked with wrong size!
  fi
  # end of 'pat/Jmakefile'
fi
if test -f 'pl/comment.pl' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'pl/comment.pl'\"
else
  echo shar: Extracting \"'pl/comment.pl'\" \(1296 characters\)
  sed "s/^X//" >'pl/comment.pl' <<'END_OF_FILE'
X;# $Id: comment.pl,v 3.0 1993/08/18 12:10:50 ram Exp $
X;#
X;#  Copyright (c) 1991-1993, Raphael Manfredi
X;#  
X;#  You may redistribute only under the terms of the Artistic Licence,
X;#  as specified in the README file that comes with the distribution.
X;#  You may reuse parts of this distribution only within the terms of
X;#  that same Artistic Licence; a copy of which may be found at the root
X;#  of the source tree for dist 3.0.
X;#
X;# $Log: comment.pl,v $
X;# Revision 3.0  1993/08/18  12:10:50  ram
X;# Baseline for dist 3.0 netwide release.
X;#
X;#
Xsub rcscomment {
X	local($file) = @_;
X	local($comment) = '';
X	open(FILE,$file);
X	while (<FILE>) {
X		if (/^(.*)\$Log[:\$]/) {	# They know better than us (hopefully)
X			$comment = $1;
X			last;
X		}
X	}
X	close FILE;
X	unless ($comment) {
X		if ($file =~ /\.SH$|[Mm]akefile/) {	# Makefile template
X			$comment = '# ';
X		} elsif ($file =~ /\.U$/) {			# Metaconfig unit
X			$comment = '?RCS: ';
X		} elsif ($file =~ /\.man$/) {		# Manual page
X			$comment = "''' ";
X		} elsif ($file =~ /\.\d\w?$/) {		# Manual page
X			$comment = "''' ";
X		} elsif ($file =~ /\.[chyl]$/) {	# C source
X			$comment = " * ";
X		} elsif ($file =~ /\.e$/) {			# Eiffel source
X			$comment = "-- ";
X		} elsif ($file =~ /\.pl$/) {		# Perl library
X			$comment = ";# ";
X		}
X	}
X	$comment;
X}
X
END_OF_FILE
  if test 1296 -ne `wc -c <'pl/comment.pl'`; then
    echo shar: \"'pl/comment.pl'\" unpacked with wrong size!
  fi
  # end of 'pl/comment.pl'
fi
if test -f 'pl/fullname.pl' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'pl/fullname.pl'\"
else
  echo shar: Extracting \"'pl/fullname.pl'\" \(1248 characters\)
  sed "s/^X//" >'pl/fullname.pl' <<'END_OF_FILE'
X;# $Id: fullname.pl,v 3.0 1993/08/18 12:10:52 ram Exp $
X;#
X;#  Copyright (c) 1991-1993, Raphael Manfredi
X;#  
X;#  You may redistribute only under the terms of the Artistic Licence,
X;#  as specified in the README file that comes with the distribution.
X;#  You may reuse parts of this distribution only within the terms of
X;#  that same Artistic Licence; a copy of which may be found at the root
X;#  of the source tree for dist 3.0.
X;#
X;# $Log: fullname.pl,v $
X;# Revision 3.0  1993/08/18  12:10:52  ram
X;# Baseline for dist 3.0 netwide release.
X;#
X;#
Xsub getfullname {
X	local($logname) = @_;
X	local($foo,$bar);
X	if ($ENV{'NAME'}) {
X		$ENV{'NAME'};
X	} else {
X		open(PASSWD,'/etc/passwd') || die "Can't open /etc/passwd";
X		while (<PASSWD>) {
X			/(\w+):/;
X			last if $1 eq $logname;
X		}
X		close PASSWD;
X		local($login,$passwd,$uid,$gid,$gcos,$home,$shell) = split(/:/);
X		if (-f "$home/.fullname") {
X			open(FN,"$home/.fullname");
X			chop($foo = <FN>);
X			close FN;
X			$foo;
X		} elsif ($nametype eq 'bsd') {
X			$gcos =~ s/[,;].*//;
X			if ($gcos =~ /&/) {		# oh crud
X				($foo,$bar) = ($logname =~ /(.)(.*)/);
X				$foo =~ y/a-z/A-Z/;
X				$gcos =~ s/&/$foo$bar/;
X			}
X			$gcos;
X		} else {
X			$gcos =~ s/[(].*//;
X			$gcos =~ s/.*-//;
X			$gcos;
X		}
X	}
X}
X
END_OF_FILE
  if test 1248 -ne `wc -c <'pl/fullname.pl'`; then
    echo shar: \"'pl/fullname.pl'\" unpacked with wrong size!
  fi
  # end of 'pl/fullname.pl'
fi
if test -f 'pl/manifake.pl' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'pl/manifake.pl'\"
else
  echo shar: Extracting \"'pl/manifake.pl'\" \(1275 characters\)
  sed "s/^X//" >'pl/manifake.pl' <<'END_OF_FILE'
X;# $Id: manifake.pl,v 3.0 1993/08/18 12:10:55 ram Exp $
X;#
X;#  Copyright (c) 1991-1993, Raphael Manfredi
X;#  
X;#  You may redistribute only under the terms of the Artistic Licence,
X;#  as specified in the README file that comes with the distribution.
X;#  You may reuse parts of this distribution only within the terms of
X;#  that same Artistic Licence; a copy of which may be found at the root
X;#  of the source tree for dist 3.0.
X;#
X;# $Log: manifake.pl,v $
X;# Revision 3.0  1993/08/18  12:10:55  ram
X;# Baseline for dist 3.0 netwide release.
X;#
X;#
Xsub manifake {
X    # make MANIFEST and MANIFEST.new say the same thing
X    if (! -f $NEWMANI) {
X        if (-f $MANI) {
X            open(IN,$MANI) || die "Can't open $MANI";
X            open(OUT,">$NEWMANI") || die "Can't create $NEWMANI";
X            while (<IN>) {
X                if (/---/) {
X					# Everything until now was a header...
X					close OUT;
X					open(OUT,">$NEWMANI") ||
X						die "Can't recreate $NEWMANI";
X					next;
X				}
X                s/^\s*(\S+\s+)[0-9]*\s*(.*)/$1$2/;
X				print OUT;
X				print OUT "\n" unless /\n$/;	# If no description
X            }
X            close IN;
X			close OUT;
X        }
X        else {
Xdie "You need to make a $NEWMANI file, with names and descriptions.\n";
X        }
X    }
X}
X
END_OF_FILE
  if test 1275 -ne `wc -c <'pl/manifake.pl'`; then
    echo shar: \"'pl/manifake.pl'\" unpacked with wrong size!
  fi
  # end of 'pl/manifake.pl'
fi
echo shar: End of archive 24 \(of 28\).
cp /dev/null ark24isdone
MISSING=""
for I in 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 ; do
    if test ! -f ark${I}isdone ; then
	MISSING="${MISSING} ${I}"
    fi
done
if test "${MISSING}" = "" ; then
    echo You have unpacked all 28 archives.
    echo "Please run PACKNOTES through sh, read REAMDE and then type Configure."
    rm -f ark[1-9]isdone ark[1-9][0-9]isdone
else
    echo You still must unpack the following archives:
    echo "        " ${MISSING}
fi
exit 0

exit 0 # Just in case...
