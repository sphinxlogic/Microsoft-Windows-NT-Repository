Newsgroups: comp.sources.misc
From: Raphael Manfredi <ram@acri.fr>
Subject: v39i088:  dist-3.0 - Configure script generator and related tools, Patch11
Message-ID: <1993Sep16.191427.22778@sparky.sterling.com>
X-Md4-Signature: 26a06af47ed5e37e131ac6459ecf4d46
Sender: kent@sparky.sterling.com (Kent Landfield)
Organization: Advanced Computer Research Institute, Lyon, France
Date: Thu, 16 Sep 1993 19:14:27 GMT
Approved: kent@sparky.sterling.com

Submitted-by: Raphael Manfredi <ram@acri.fr>
Posting-number: Volume 39, Issue 88
Archive-name: dist-3.0/patch11
Environment: UNIX, Perl, RCS
Patch-To: dist-3.0: Volume 39, Issue 5-32

[The latest patch for dist version 3.0 is #11.]

System: dist version 3.0
Patch #: 11
Priority: LOW
Subject: patch #10, continued
Date: Mon Sep 13 18:31:43 MET DST 1993
From: Raphael Manfredi <ram@acri.fr>

Description:
	See patch #10.


Fix:	From rn, say "| patch -p -N -d DIR", where DIR is your dist source
	directory.  Outside of rn, say "cd DIR; patch -p -N <thisarticle".
	If you don't have the patch program, apply the following by hand,
	or get patch (version 2.0, latest patchlevel).

	After patching:
		Configure -ders
		make
		make install
		make install.man

	If patch indicates that patchlevel is the wrong version, you may need
	to apply one or more previous patches, or the patch may already
	have been applied.  See the patchlevel.h file to find out what has or
	has not been applied.  In any event, don't continue with the patch.

	If you are missing previous patches they can be obtained from me:

		Raphael Manfredi <ram@acri.fr>

	If you send a mail message of the following form it will greatly speed
	processing:

		Subject: Command
		@SH mailpatch PATH dist 3.0 LIST
			   ^ note the c

	where PATH is a return path FROM ME TO YOU either in Internet notation,
	or in bang notation from some well-known host, and LIST is the number
	of one or more patches you need, separated by spaces, commas, and/or
	hyphens.  Saying 35- says everything from 35 to the end.

	To get some more detailed instructions, send me the following mail:

		Subject: Command
		@SH mailhelp PATH


Index: patchlevel.h
Prereq: 10
4c4
< #define PATCHLEVEL 10
---
> #define PATCHLEVEL 11

Index: mcon/U/package.U
Prereq: 3.0
*** mcon/U/package.U.old	Mon Sep 13 18:14:31 1993
--- mcon/U/package.U	Mon Sep 13 18:14:31 1993
***************
*** 1,4 ****
! ?RCS: $Id: package.U,v 3.0 1993/08/18 12:09:28 ram Exp $
  ?RCS:
  ?RCS: Copyright (c) 1991-1993, Raphael Manfredi
  ?RCS: 
--- 1,4 ----
! ?RCS: $Id: package.U,v 3.0.1.1 1993/09/13 16:11:10 ram Exp $
  ?RCS:
  ?RCS: Copyright (c) 1991-1993, Raphael Manfredi
  ?RCS: 
***************
*** 9,23 ****
  ?RCS: of the source tree for dist 3.0.
  ?RCS:
  ?RCS: $Log: package.U,v $
  ?RCS: Revision 3.0  1993/08/18  12:09:28  ram
  ?RCS: Baseline for dist 3.0 netwide release.
  ?RCS:
! ?MAKE:package: Null
  ?MAKE:	-pick wipe $@ %<
  ?S:package:
  ?S:	This variable contains the name of the package being constructed.
  ?S:	It is primarily intended for the use of later Configure units.
  ?S:.
  : set package name
  package=<PACKAGENAME>
! 
--- 9,34 ----
  ?RCS: of the source tree for dist 3.0.
  ?RCS:
  ?RCS: $Log: package.U,v $
+ ?RCS: Revision 3.0.1.1  1993/09/13  16:11:10  ram
+ ?RCS: patch10: added spackage, suitable for starting sentences
+ ?RCS:
  ?RCS: Revision 3.0  1993/08/18  12:09:28  ram
  ?RCS: Baseline for dist 3.0 netwide release.
  ?RCS:
! ?MAKE:package spackage: Null
  ?MAKE:	-pick wipe $@ %<
  ?S:package:
  ?S:	This variable contains the name of the package being constructed.
  ?S:	It is primarily intended for the use of later Configure units.
  ?S:.
+ ?S:spackage:
+ ?S:	This variable contains the name of the package being constructed,
+ ?S:	with the first letter uppercased, i.e. suitable for starting
+ ?S:	sentences.
+ ?S:.
+ ?T:first last
  : set package name
  package=<PACKAGENAME>
! first=`echo $package | sed -e 's/^\(.\).*/\1/'`
! last=`echo $package | sed -e 's/^.\(.*\)/\1/'`
! spackage=`echo $first | tr '[a-z]' '[A-Z]'`$last

Index: mcon/U/mansrc.U
Prereq: 3.0
*** mcon/U/mansrc.U.old	Mon Sep 13 18:14:27 1993
--- mcon/U/mansrc.U	Mon Sep 13 18:14:28 1993
***************
*** 1,4 ****
! ?RCS: $Id: mansrc.U,v 3.0 1993/08/18 12:09:14 ram Exp $
  ?RCS:
  ?RCS: Copyright (c) 1991-1993, Raphael Manfredi
  ?RCS: 
--- 1,4 ----
! ?RCS: $Id: mansrc.U,v 3.0.1.1 1993/09/13 16:09:31 ram Exp $
  ?RCS:
  ?RCS: Copyright (c) 1991-1993, Raphael Manfredi
  ?RCS: 
***************
*** 9,14 ****
--- 9,17 ----
  ?RCS: of the source tree for dist 3.0.
  ?RCS:
  ?RCS: $Log: mansrc.U,v $
+ ?RCS: Revision 3.0.1.1  1993/09/13  16:09:31  ram
+ ?RCS: patch10: allows for L1 man page extension (WAD)
+ ?RCS:
  ?RCS: Revision 3.0  1993/08/18  12:09:14  ram
  ?RCS: Baseline for dist 3.0 netwide release.
  ?RCS:
***************
*** 76,82 ****
  	$cat <<EOM
  
  Since you are running AFS, I need to distinguish the directory in which
! manual page reside from the directory in which they are installed (and from
  which they are presumably copied to the former directory by occult means).
  
  EOM
--- 79,85 ----
  	$cat <<EOM
  
  Since you are running AFS, I need to distinguish the directory in which
! manual pages reside from the directory in which they are installed (and from
  which they are presumably copied to the former directory by occult means).
  
  EOM
***************
*** 85,91 ****
  	*) dflt="$installmansrc";;
  	esac
  	fn=de~
! 	rp='Where will public executables be installed?'
  	. ./getfile
  	installmansrc="$ans"
  else
--- 88,94 ----
  	*) dflt="$installmansrc";;
  	esac
  	fn=de~
! 	rp='Where will man pages be installed?'
  	. ./getfile
  	installmansrc="$ans"
  else
***************
*** 101,106 ****
--- 104,110 ----
  *p) manext=n;;
  *C) manext=C;;
  *L) manext=L;;
+ *L1) manext=L1;;
  *) manext=1;;
  esac
  

Index: mcon/U/prefshell.U
Prereq: 3.0
*** mcon/U/prefshell.U.old	Mon Sep 13 18:14:32 1993
--- mcon/U/prefshell.U	Mon Sep 13 18:14:32 1993
***************
*** 1,4 ****
! ?RCS: $Id: prefshell.U,v 3.0 1993/08/18 12:09:34 ram Exp $
  ?RCS:
  ?RCS: Copyright (c) 1991-1993, Raphael Manfredi
  ?RCS: 
--- 1,4 ----
! ?RCS: $Id: prefshell.U,v 3.0.1.1 1993/09/13 16:11:47 ram Exp $
  ?RCS:
  ?RCS: Copyright (c) 1991-1993, Raphael Manfredi
  ?RCS: 
***************
*** 9,14 ****
--- 9,17 ----
  ?RCS: of the source tree for dist 3.0.
  ?RCS:
  ?RCS: $Log: prefshell.U,v $
+ ?RCS: Revision 3.0.1.1  1993/09/13  16:11:47  ram
+ ?RCS: patch10: non-portable var substitution was used (WAD)
+ ?RCS:
  ?RCS: Revision 3.0  1993/08/18  12:09:34  ram
  ?RCS: Baseline for dist 3.0 netwide release.
  ?RCS:
***************
*** 37,48 ****
  	;;
  *)  dflt="$prefshell";;
  esac
  $cat <<EOM
  
  Give the full path name of the shell most people like to use on your system.
  This will be used by $package whenever the user wants to get a shell
  escape (for instance) and is not necessarily the same as the shell you are
! currently using (${SHELL:-/bin/sh}).
  
  EOM
  fn=f/~
--- 40,52 ----
  	;;
  *)  dflt="$prefshell";;
  esac
+ ?X: Some shells (Ultrix) do not understand ${SHELL:-/bin/sh}, sigh!
  $cat <<EOM
  
  Give the full path name of the shell most people like to use on your system.
  This will be used by $package whenever the user wants to get a shell
  escape (for instance) and is not necessarily the same as the shell you are
! currently using (${SHELL-/bin/sh}).
  
  EOM
  fn=f/~

Index: mcon/U/d_memset.U
Prereq: 3.0
*** mcon/U/d_memset.U.old	Mon Sep 13 18:14:19 1993
--- mcon/U/d_memset.U	Mon Sep 13 18:14:20 1993
***************
*** 1,4 ****
! ?RCS: $Id: d_memset.U,v 3.0 1993/08/18 12:06:36 ram Exp $
  ?RCS:
  ?RCS: Copyright (c) 1991-1993, Raphael Manfredi
  ?RCS: 
--- 1,4 ----
! ?RCS: $Id: d_memset.U,v 3.0.1.1 1993/09/13 16:03:11 ram Exp $
  ?RCS:
  ?RCS: Copyright (c) 1991-1993, Raphael Manfredi
  ?RCS: 
***************
*** 9,14 ****
--- 9,17 ----
  ?RCS: of the source tree for dist 3.0.
  ?RCS:
  ?RCS: $Log: d_memset.U,v $
+ ?RCS: Revision 3.0.1.1  1993/09/13  16:03:11  ram
+ ?RCS: patch10: removed text recommending bzero over memset (WAD)
+ ?RCS:
  ?RCS: Revision 3.0  1993/08/18  12:06:36  ram
  ?RCS: Baseline for dist 3.0 netwide release.
  ?RCS:
***************
*** 21,31 ****
  ?S:.
  ?C:HAS_MEMSET (MEMSET):
  ?C:	This symbol, if defined, indicates that the memset routine is available
! ?C:	to set blocks of memory. You should always use bzero() instead of
! ?C:	memset() because bzero is remaped to memset if necessary. This means
! ?C:	that a memset() routine must be provided in case HAS_MEMSET is not
! ?C:	defined and no bzero() is found. In other words, you must provide your
! ?C:	own copy whenever HAS_MEMSET is not defined, but call bzero().
  ?C:.
  ?H:#$d_memset HAS_MEMSET	/**/
  ?H:.
--- 24,30 ----
  ?S:.
  ?C:HAS_MEMSET (MEMSET):
  ?C:	This symbol, if defined, indicates that the memset routine is available
! ?C:	to set blocks of memory.
  ?C:.
  ?H:#$d_memset HAS_MEMSET	/**/
  ?H:.

Index: mcon/U/d_memcpy.U
Prereq: 3.0
*** mcon/U/d_memcpy.U.old	Mon Sep 13 18:14:18 1993
--- mcon/U/d_memcpy.U	Mon Sep 13 18:14:18 1993
***************
*** 1,4 ****
! ?RCS: $Id: d_memcpy.U,v 3.0 1993/08/18 12:06:34 ram Exp $
  ?RCS:
  ?RCS: Copyright (c) 1991-1993, Raphael Manfredi
  ?RCS: 
--- 1,4 ----
! ?RCS: $Id: d_memcpy.U,v 3.0.1.1 1993/09/13 16:02:58 ram Exp $
  ?RCS:
  ?RCS: Copyright (c) 1991-1993, Raphael Manfredi
  ?RCS: 
***************
*** 9,14 ****
--- 9,17 ----
  ?RCS: of the source tree for dist 3.0.
  ?RCS:
  ?RCS: $Log: d_memcpy.U,v $
+ ?RCS: Revision 3.0.1.1  1993/09/13  16:02:58  ram
+ ?RCS: patch10: removed text recommending bcopy over memcpy (WAD)
+ ?RCS:
  ?RCS: Revision 3.0  1993/08/18  12:06:34  ram
  ?RCS: Baseline for dist 3.0 netwide release.
  ?RCS:
***************
*** 21,31 ****
  ?S:.
  ?C:HAS_MEMCPY (MEMCPY):
  ?C:	This symbol, if defined, indicates that the memcpy routine is available
! ?C:	to copy blocks of memory. You should always use bcopy() instead of
! ?C:	memcpy() because bcopy is remaped to memcpy if necessary. This means
! ?C:	that a memcpy() routine must be provided in case HAS_MEMCPY is not
! ?C:	defined and no bcopy() is found, that is to say you must provided
! ?C:	your own version if and only if HAS_MEMCPY is not found.
  ?C:.
  ?H:#$d_memcpy HAS_MEMCPY	/**/
  ?H:.
--- 24,30 ----
  ?S:.
  ?C:HAS_MEMCPY (MEMCPY):
  ?C:	This symbol, if defined, indicates that the memcpy routine is available
! ?C:	to copy blocks of memory.
  ?C:.
  ?H:#$d_memcpy HAS_MEMCPY	/**/
  ?H:.

Index: mcon/U/d_memcmp.U
Prereq: 3.0
*** mcon/U/d_memcmp.U.old	Mon Sep 13 18:14:17 1993
--- mcon/U/d_memcmp.U	Mon Sep 13 18:14:17 1993
***************
*** 1,4 ****
! ?RCS: $Id: d_memcmp.U,v 3.0 1993/08/18 12:06:33 ram Exp $
  ?RCS:
  ?RCS: Copyright (c) 1991-1993, Raphael Manfredi
  ?RCS: 
--- 1,4 ----
! ?RCS: $Id: d_memcmp.U,v 3.0.1.1 1993/09/13 16:02:35 ram Exp $
  ?RCS:
  ?RCS: Copyright (c) 1991-1993, Raphael Manfredi
  ?RCS: 
***************
*** 9,14 ****
--- 9,17 ----
  ?RCS: of the source tree for dist 3.0.
  ?RCS:
  ?RCS: $Log: d_memcmp.U,v $
+ ?RCS: Revision 3.0.1.1  1993/09/13  16:02:35  ram
+ ?RCS: patch10: removed text recommending bcmp over memcmp (WAD)
+ ?RCS:
  ?RCS: Revision 3.0  1993/08/18  12:06:33  ram
  ?RCS: Baseline for dist 3.0 netwide release.
  ?RCS:
***************
*** 21,31 ****
  ?S:.
  ?C:HAS_MEMCMP (MEMCMP):
  ?C:	This symbol, if defined, indicates that the memcmp routine is available
! ?C:	to compare blocks of memory. You should always use bcmp() instead of
! ?C:	memcmp() because bcmp is remaped to memcmp if necessary. This means
! ?C:	that a memcmp() routine must be provided in case HAS_MEMCMP is not
! ?C:	defined and no bcmp() is found, but you just have to check for this
! ?C:	HAS_MEMCMP symbol to conditionally implement it.
  ?C:.
  ?H:#$d_memcmp HAS_MEMCMP	/**/
  ?H:.
--- 24,30 ----
  ?S:.
  ?C:HAS_MEMCMP (MEMCMP):
  ?C:	This symbol, if defined, indicates that the memcmp routine is available
! ?C:	to compare blocks of memory.
  ?C:.
  ?H:#$d_memcmp HAS_MEMCMP	/**/
  ?H:.

Index: mcon/U/d_strccmp.U
*** mcon/U/d_strccmp.U.old	Mon Sep 13 18:14:20 1993
--- mcon/U/d_strccmp.U	Mon Sep 13 18:14:21 1993
***************
*** 0 ****
--- 1,35 ----
+ ?RCS: $Id: d_strccmp.U,v 3.0.1.1 1993/09/13 16:04:39 ram Exp $
+ ?RCS:
+ ?RCS: Copyright (c) 1991-1993, Raphael Manfredi
+ ?RCS: 
+ ?RCS: You may redistribute only under the terms of the Artistic Licence,
+ ?RCS: as specified in the README file that comes with the distribution.
+ ?RCS: You may reuse parts of this distribution only within the terms of
+ ?RCS: that same Artistic Licence; a copy of which may be found at the root
+ ?RCS: of the source tree for dist 3.0.
+ ?RCS: 
+ ?RCS: $Log: d_strccmp.U,v $
+ ?RCS: Revision 3.0.1.1  1993/09/13  16:04:39  ram
+ ?RCS: patch10: created (WAD)
+ ?RCS:
+ ?RCS: Revision 3.0  1993/08/18  12:06:24  ram
+ ?RCS: Baseline for dist 3.0 netwide release.
+ ?RCS:
+ ?MAKE:d_strccmp: Inlibc
+ ?MAKE:	-pick add $@ %<
+ ?S:d_strccmp:
+ ?S:	This variable conditionally defines the HAS_STRCASECMP symbol, which
+ ?S:	indicates to the C program that the strcasecmp() routine is available
+ ?S:	for case-insensitive string compares.
+ ?S:.
+ ?C:HAS_STRCASECMP:
+ ?C:	This symbol, if defined, indicates that the strcasecmp() routine is
+ ?C:	available for case-insensitive string compares.
+ ?C:.
+ ?H:#$d_strccmp HAS_STRCASECMP	/**/
+ ?H:.
+ ?LINT:set d_strccmp
+ : see if strccmp exists
+ set strcasecmp d_strccmp
+ eval $inlibc
+ 

Index: mcon/U/orgname.U
Prereq: 3.0
*** mcon/U/orgname.U.old	Mon Sep 13 18:14:30 1993
--- mcon/U/orgname.U	Mon Sep 13 18:14:30 1993
***************
*** 1,4 ****
! ?RCS: $Id: orgname.U,v 3.0 1993/08/18 12:09:27 ram Exp $
  ?RCS:
  ?RCS: Copyright (c) 1991-1993, Raphael Manfredi
  ?RCS: 
--- 1,4 ----
! ?RCS: $Id: orgname.U,v 3.0.1.1 1993/09/13 16:10:25 ram Exp $
  ?RCS:
  ?RCS: Copyright (c) 1991-1993, Raphael Manfredi
  ?RCS: 
***************
*** 9,14 ****
--- 9,17 ----
  ?RCS: of the source tree for dist 3.0.
  ?RCS:
  ?RCS: $Log: orgname.U,v $
+ ?RCS: Revision 3.0.1.1  1993/09/13  16:10:25  ram
+ ?RCS: patch10: added support for /local/src to the search (WAD)
+ ?RCS:
  ?RCS: Revision 3.0  1993/08/18  12:09:27  ram
  ?RCS: Baseline for dist 3.0 netwide release.
  ?RCS:
***************
*** 28,34 ****
  ?H:.
  ?T:longshots xxx
  : get organization name
! longshots='/usr/src/new /usr/src/local /usr/local/src'
  case "$orgname" in
  '') if xxx=`./loc news/src/defs.h x $longshots`; then
  		dflt=`$sed -n 's/^.*MYORG[ 	]*"\(.*\)".*$/\1/p' $xxx`
--- 31,37 ----
  ?H:.
  ?T:longshots xxx
  : get organization name
! longshots='/local/src /usr/src/new /usr/src/local /usr/local/src'
  case "$orgname" in
  '') if xxx=`./loc news/src/defs.h x $longshots`; then
  		dflt=`$sed -n 's/^.*MYORG[ 	]*"\(.*\)".*$/\1/p' $xxx`

Index: mcon/U/Loc.U
Prereq: 3.0
*** mcon/U/Loc.U.old	Mon Sep 13 18:14:08 1993
--- mcon/U/Loc.U	Mon Sep 13 18:14:08 1993
***************
*** 1,4 ****
! ?RCS: $Id: Loc.U,v 3.0 1993/08/18 12:05:05 ram Exp $
  ?RCS:
  ?RCS: Copyright (c) 1991-1993, Raphael Manfredi
  ?RCS: 
--- 1,4 ----
! ?RCS: $Id: Loc.U,v 3.0.1.1 1993/09/13 15:47:13 ram Exp $
  ?RCS:
  ?RCS: Copyright (c) 1991-1993, Raphael Manfredi
  ?RCS: 
***************
*** 9,14 ****
--- 9,17 ----
  ?RCS: of the source tree for dist 3.0.
  ?RCS:
  ?RCS: $Log: Loc.U,v $
+ ?RCS: Revision 3.0.1.1  1993/09/13  15:47:13  ram
+ ?RCS: patch10: test program not always in /bin/test (WAD)
+ ?RCS:
  ?RCS: Revision 3.0  1993/08/18  12:05:05  ram
  ?RCS: Baseline for dist 3.0 netwide release.
  ?RCS:
***************
*** 189,202 ****
  test)
  	echo "Hopefully test is built into your sh."
  	;;
! /bin/test)
  	if sh -c "PATH= test true" >/dev/null 2>&1; then
  		echo "Using the test built into your sh."
  		test=test
  	fi
- 	;;
- *)
- 	test=test
  	;;
  esac
  ?LINT:change n c
--- 192,202 ----
  test)
  	echo "Hopefully test is built into your sh."
  	;;
! *)
  	if sh -c "PATH= test true" >/dev/null 2>&1; then
  		echo "Using the test built into your sh."
  		test=test
  	fi
  	;;
  esac
  ?LINT:change n c

Index: mcon/U/Finish.U
Prereq: 3.0.1.1
*** mcon/U/Finish.U.old	Mon Sep 13 18:14:06 1993
--- mcon/U/Finish.U	Mon Sep 13 18:14:06 1993
***************
*** 1,4 ****
! ?RCS: $Id: Finish.U,v 3.0.1.1 1993/08/30 08:55:59 ram Exp $
  ?RCS:
  ?RCS: Copyright (c) 1991-1993, Raphael Manfredi
  ?RCS: 
--- 1,4 ----
! ?RCS: $Id: Finish.U,v 3.0.1.2 1993/09/13 15:45:26 ram Exp $
  ?RCS:
  ?RCS: Copyright (c) 1991-1993, Raphael Manfredi
  ?RCS: 
***************
*** 9,14 ****
--- 9,17 ----
  ?RCS: of the source tree for dist 3.0.
  ?RCS:
  ?RCS: $Log: Finish.U,v $
+ ?RCS: Revision 3.0.1.2  1993/09/13  15:45:26  ram
+ ?RCS: patch10: fixed shell evaluation w/o shell escape while in silent mode
+ ?RCS:
  ?RCS: Revision 3.0.1.1  1993/08/30  08:55:59  ram
  ?RCS: patch8: prevents myread from blocking on empty answers, exceptionally
  ?RCS:
***************
*** 42,48 ****
  	case "$ans" in
  	'') ;;
  	*) : in case they cannot read
! 		eval $ans;;
  	esac
  	;;
  esac
--- 45,51 ----
  	case "$ans" in
  	'') ;;
  	*) : in case they cannot read
! 		sh 1>&4 -c "$ans";;
  	esac
  	;;
  esac

Index: mcon/U/AAAAA.U
Prereq: 3.0
*** mcon/U/AAAAA.U.old	Mon Sep 13 18:14:05 1993
--- mcon/U/AAAAA.U	Mon Sep 13 18:14:05 1993
***************
*** 1,4 ****
! ?RCS: $Id: AAAAA.U,v 3.0 1993/08/18 12:04:44 ram Exp $
  ?RCS:
  ?RCS: Copyright (c) 1991-1993, Raphael Manfredi
  ?RCS: 
--- 1,4 ----
! ?RCS: $Id: AAAAA.U,v 3.0.1.1 1993/09/13 15:43:57 ram Exp $
  ?RCS:
  ?RCS: Copyright (c) 1991-1993, Raphael Manfredi
  ?RCS: 
***************
*** 9,14 ****
--- 9,17 ----
  ?RCS: of the source tree for dist 3.0.
  ?RCS:
  ?RCS: $Log: AAAAA.U,v $
+ ?RCS: Revision 3.0.1.1  1993/09/13  15:43:57  ram
+ ?RCS: patch10: documents initials used for Wayne Davison's contributions
+ ?RCS:
  ?RCS: Revision 3.0  1993/08/18  12:04:44  ram
  ?RCS: Baseline for dist 3.0 netwide release.
  ?RCS:
***************
*** 22,27 ****
--- 25,31 ----
  ?X:
  ?X:		HMS: Harlan Stenn
  ?X:		RAM: Raphael Manfredi
+ ?X:		WAD: Wayne Davison
  ?X:
  ?X: Agreed, this is a weird place to document it, but I couldn't find a better
  ?X: place to do so. I've bet on the curiosity of users, who would probably

Index: mcon/U/spitshell.U
Prereq: 3.0
*** mcon/U/spitshell.U.old	Mon Sep 13 18:14:34 1993
--- mcon/U/spitshell.U	Mon Sep 13 18:14:34 1993
***************
*** 1,4 ****
! ?RCS: $Id: spitshell.U,v 3.0 1993/08/18 12:09:49 ram Exp $
  ?RCS:
  ?RCS: Copyright (c) 1991-1993, Raphael Manfredi
  ?RCS: 
--- 1,4 ----
! ?RCS: $Id: spitshell.U,v 3.0.1.1 1993/09/13 16:12:58 ram Exp $
  ?RCS:
  ?RCS: Copyright (c) 1991-1993, Raphael Manfredi
  ?RCS: 
***************
*** 9,14 ****
--- 9,17 ----
  ?RCS: of the source tree for dist 3.0.
  ?RCS:
  ?RCS: $Log: spitshell.U,v $
+ ?RCS: Revision 3.0.1.1  1993/09/13  16:12:58  ram
+ ?RCS: patch10: made #!-failure message more friendly (WAD)
+ ?RCS:
  ?RCS: Revision 3.0  1993/08/18  12:09:49  ram
  ?RCS: Baseline for dist 3.0 netwide release.
  ?RCS:
***************
*** 51,57 ****
  			echo "It does."
  			sharpbang='#! '
  		else
! 			echo "It doesn't."
  			sharpbang=': use '
  		fi
  	fi
--- 54,60 ----
  			echo "It does."
  			sharpbang='#! '
  		else
! 			echo "It's just a comment."
  			sharpbang=': use '
  		fi
  	fi

Index: mcon/U/bin.U
Prereq: 3.0
*** mcon/U/bin.U.old	Mon Sep 13 18:14:11 1993
--- mcon/U/bin.U	Mon Sep 13 18:14:11 1993
***************
*** 1,4 ****
! ?RCS: $Id: bin.U,v 3.0 1993/08/18 12:05:26 ram Exp $
  ?RCS:
  ?RCS: Copyright (c) 1991-1993, Raphael Manfredi
  ?RCS: 
--- 1,4 ----
! ?RCS: $Id: bin.U,v 3.0.1.1 1993/09/13 15:56:51 ram Exp $
  ?RCS:
  ?RCS: Copyright (c) 1991-1993, Raphael Manfredi
  ?RCS: 
***************
*** 9,14 ****
--- 9,17 ----
  ?RCS: of the source tree for dist 3.0.
  ?RCS:
  ?RCS: $Log: bin.U,v $
+ ?RCS: Revision 3.0.1.1  1993/09/13  15:56:51  ram
+ ?RCS: patch10: made prompting more explicit (WAD)
+ ?RCS:
  ?RCS: Revision 3.0  1993/08/18  12:05:26  ram
  ?RCS: Baseline for dist 3.0 netwide release.
  ?RCS:
***************
*** 52,58 ****
  	;;
  esac
  fn=d~
! rp='Where do you want to put the public executables?'
  . ./getfile
  bin="$ans"
  binexp="$ansexp"
--- 55,61 ----
  	;;
  esac
  fn=d~
! rp='Pathname where the public executables will reside?'
  . ./getfile
  bin="$ans"
  binexp="$ansexp"

Index: mcon/U/manfmt.U
Prereq: 3.0
*** mcon/U/manfmt.U.old	Mon Sep 13 18:14:26 1993
--- mcon/U/manfmt.U	Mon Sep 13 18:14:26 1993
***************
*** 1,4 ****
! ?RCS: $Id: manfmt.U,v 3.0 1993/08/18 12:09:13 ram Exp $
  ?RCS:
  ?RCS: Copyright (c) 1991-1993, Raphael Manfredi
  ?RCS: 
--- 1,4 ----
! ?RCS: $Id: manfmt.U,v 3.0.1.1 1993/09/13 16:09:22 ram Exp $
  ?RCS:
  ?RCS: Copyright (c) 1991-1993, Raphael Manfredi
  ?RCS: 
***************
*** 9,14 ****
--- 9,17 ----
  ?RCS: of the source tree for dist 3.0.
  ?RCS:
  ?RCS: $Log: manfmt.U,v $
+ ?RCS: Revision 3.0.1.1  1993/09/13  16:09:22  ram
+ ?RCS: patch10: allows for L1 man page extension (WAD)
+ ?RCS:
  ?RCS: Revision 3.0  1993/08/18  12:09:13  ram
  ?RCS: Baseline for dist 3.0 netwide release.
  ?RCS:
***************
*** 54,59 ****
--- 57,63 ----
  *p) manext=n;;
  *C) manext=C;;
  *L) manext=L;;
+ *L1) manext=L1;;
  *) manext=1;;
  esac
  

Index: MANIFEST
*** MANIFEST.old	Mon Sep 13 18:14:36 1993
--- MANIFEST	Mon Sep 13 18:14:37 1993
***************
*** 231,236 ****
--- 231,237 ----
  mcon/U/d_stat.U            Do we have stat()?
  mcon/U/d_statblks.U        Does stat know about blksize and blocks?
  mcon/U/d_stdstdio.U        How standard is stdio?
+ mcon/U/d_strccmp.U         Do we have strcasecmp()?
  mcon/U/d_strchr.U          Use strchr() or index()?
  mcon/U/d_strcspn.U         Do we have strcspn()?
  mcon/U/d_strctcpy.U        Do we do struct copies?

Index: Credits
*** Credits.old	Mon Sep 13 18:14:03 1993
--- Credits	Mon Sep 13 18:14:03 1993
***************
*** 88,91 ****
--- 88,92 ----
  	Joseph H Buehler <jhpb@sarto.gaithersburg.md.us>
  	Keith Walker <kew@timesink.spk.wa.us>
  	Scott Presnell <srp@cgl.ucsf.edu>
+ 	Wayne Davison <davison@borland.com>
  

*** End of Patch 11 ***

exit 0 # Just in case...
