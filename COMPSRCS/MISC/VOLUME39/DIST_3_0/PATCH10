Newsgroups: comp.sources.misc
From: Raphael Manfredi <ram@acri.fr>
Subject: v39i087:  dist-3.0 - Configure script generator and related tools, Patch10
Message-ID: <1993Sep16.190752.21850@sparky.sterling.com>
X-Md4-Signature: 7ec1246db795acaa12c7bdc530445386
Sender: kent@sparky.sterling.com (Kent Landfield)
Organization: Advanced Computer Research Institute, Lyon, France
Date: Thu, 16 Sep 1993 19:07:52 GMT
Approved: kent@sparky.sterling.com

Submitted-by: Raphael Manfredi <ram@acri.fr>
Posting-number: Volume 39, Issue 87
Archive-name: dist-3.0/patch10
Environment: UNIX, Perl, RCS
Patch-To: dist-3.0: Volume 39, Issue 5-32

[The latest patch for dist version 3.0 is #11.]

System: dist version 3.0
Patch #: 10
Priority: LOW
Subject: thanks to Wayne Davison for a set of updates
Subject: documents initials used for Wayne Davison's contributions: WAD
Subject: fixed shell evaluation w/o shell escape while in silent mode
Subject: minor format problems and misspellings fixed
Subject: now performs from package dir and not from UU subdir
Subject: test program not always in /bin/test (WAD)
Subject: reverted to original intent by the Author himself
Subject: force use of config.sh when -d option is used (WAD)
Subject: complain about non-existent hint files (WAD)
Subject: added Options dependency for fastread variable
Subject: made prompting more explicit (WAD)
Subject: explicitely mention -DDEBUG just in case they need it (WAD)
Subject: removed all the "tans" variable usage (WAD)
Subject: now only defines HAS_BCMP, no macro remap on memcmp (WAD)
Subject: now only defines HAS_BCOPY, no macro remap on memcpy (WAD)
Subject: now only defines HAS_BZERO, no macro remap on memset (WAD)
Subject: most mailers support Internet addresses nowadays (WAD)
Subject: removed text recommending bcmp over memcmp (WAD)
Subject: removed text recommending bcopy over memcpy (WAD)
Subject: removed text recommending bzero over memset (WAD)
Subject: created (WAD)
Subject: now only defines HAS_STRCHR, no macro remap of index (WAD)
Subject: removed automatic remapping of vfork on fork (WAD)
Subject: added compatibility code for older config.sh (WAD)
Subject: removed "(Actually, this looks more like...)" messages (WAD)
Subject: added special handling for Apollo systems (WAD)
Subject: allows for L1 man page extension (WAD)
Subject: made questions more explicit for 'Configure -s' prompting (WAD)
Subject: added support for /local/src to the search (WAD)
Subject: added spackage, suitable for starting sentences
Subject: non-portable var substitution was used (WAD)
Subject: added support for /local/lib (WAD)
Subject: prompt phrasing made more explicit (WAD)
Subject: made #!-failure message more friendly (WAD)
Subject: added support for /local/man/man1 (WAD)
Subject: added temporary syspath variable to cut down on line length
Subject: one new file
Date: Mon Sep 13 18:14:39 MET DST 1993
From: Raphael Manfredi <ram@acri.fr>

Description:
	This patch is special. It's a mere integration of other's people
	modifications (mainly from Wayne Davison, marked as WAD in the log).

	To document this patch, I found wise to reproduce the comments
	the authors have sent me. From time to time, I have added my own
	comments between square braquets [] and marked them with --RAM.

	Exceptionally, to avoid heavy editing, I have not reformatted the
	text, and the description will not start by a leading tab. I know
	I'm not conforming myself to my own standards, but that's the
	exception which enforces the rule :-)

--- Graham:
I recently noticed that MailAuthor.U wasn't quite working the way I had
originally intended. The original intention was to enable an automatic method
of letting people know when they were installing a package if it was not the
very latest version, so they could upgrade. It was intended that any time they
changed patchlevels, a message would be sent to the author's mailagent, which
could respond with a note telling them how to upgrade if they weren't running
the latest version.  This was meant to stamp out multiple people reporting the
same bugs; but the current MailAuthor.U instead defaults to sending mail if
you've asked for patches or notification before.

Also, I deliberately avoided any reference to "register"-ing, to avoid scaring
people off; it was meant more as a favour that they allow a note to be sent to
say they've tried it.

Here's a patch to alter the behaviour back to what it was originally, but
keeping all Raphael's other changes. It also eliminates the redundant question
asking if you want to override the return address; you just say "none" if you
don't want to, and it makes this the default. Busted mailers: Just Say No.

--- Wayne:
The test for the presence of the libc value we chose fails on apollos
because we've stuffed 2 or 3 libraries into the variable.  The following
patch fixes this (I hope, I don't have an apollo) and also fixes a small
typo (someone must have 4-character tabs set [Yup! I do--RAM]).

Here's some more of my metaconfig changes that I've finally managed to
port to the latest version and extract for public use.  These are based
on 3.0 PL 9.

Here's a log of my changes:

Finish.U     -  Fixed the shell evaluation of a typed command w/o the
                shell escape character when "Configure -s" is in effect.
Getfile.U    -  Fixed some minor misspellings and format problems.
             -  Changed the default directory of getfile to be the source
                dir for the app being Configured.  This allows files in the
                source dir to be specified (e.g. "./name").
Loc.U        -  Changed the "test" determination to recognize a test program
                that isn't in /bin.
Oldconfig.U  -  Always default the "use config.sh?" question to 'y' if they
                used "Configure -d".
             -  Complain about them typing hint files that don't exist so
                that they have some clue they messed up.
ccflags.U    -  Explicitly mention the -DDEBUG switch so they know if they
                need it.
d_bcmp.U     -  Changed this to only define HAS_BCMP because having the
                bcmp definition in config.h is the wrong spot.  Consider:
                we need to include one of the <string[s].h> files but we
                don't know which one until after config.h has been included.
                However, by this time bcmp gets defined and <string[s].h>
                redefines it and complains loudly.  My solution is to just
                define HAS_BCMP in config.h and force the app to do their
                own magic in any way they please after all the includes.
d_bcopy.U    -  Likewise.
d_bzero.U    -  Likewise.
d_internet.U -  Always default the "mailer understands internet addresses?"
                question to 'y'es and make it sound more likely that they
                have it (don't most people these days?).
d_memcmp.U   -  Removed text recommending that bcmp be used in preference to
                memcmp.  The user is no longer forced to do this.
d_memcpy.U   -  Likewise.
d_memset.U   -  Likewise.
d_strccmp.U  -  A simple unit to detect strcasecmp().
d_strchr.U   -  Only define HAS_STRCHR for similar reasons as the bcmp stuff.
                Also, there's no need to ask the user to choose between
                index and strchr -- just assume strchr is better.
d_vfork.U    -  I never liked d_vfork being defined when vfork isn't found
                so I changed d_vfork to only define HAS_VFORK directly.
                The user can to choose to "#define vfork fork" if they so
                desire (if HAS_VFORK is not defined).  Also included a
                hack to default d_vfork to the right value if someone is
                running Configure using an old config.sh.
i_string.U   -  Got rid of the "(Actually, this looks more like...)" messages
                just because I didn't like them.
             -  A few minor tweaks.
             -  Correctly set "strings" to its real value even if a WHOA
                sets i_string to a value we didn't choose.
manfmt.U     -  Allow for a man page extension of L1.
mansrc.U     -  Ditto.
nametype.U   -  Made the questions more explicit for those "Configure -s"
                promptings.
orgname.U    -  Added support for /local/src to the search.
package.U    -  I use a variable Package that is the same as package, just
                with the first letter upper-cased to make it easier to put
                $Package messages at the start of sentences.  ** Note:  my
                patch is wrong, as it upper-cases the whole string. **  (I
                use a hard-coded module at the moment, so I haven't had to
                fix this). [I've changed this to $spackage since we can't
				use an upper-cased var name, that's a special unit indicator.
				Also I've written a proper upper-casing for the first letter,
				but that's heavy shell code since there's no perl we can
				rely on here--RAM]
prefshell.U  -  We can't use ${VAR:-str} -- it's not portable (ugh!).
privlib.U    -  Added support for /local/lib.
             -  Changed the prompt phrasing.
spitshell.U  -  Made the #!-failure message more friendly after someone
                complained about it.
sysman.U     -  Added support for /local/man/man1.

Here's a few more changes I made to my original changes:

   o	Made first executable prompt in bin.U more explicit.
   o	Changed ccflags.U to remove "tans" usage.
   o	Fixed some spelling stuff in mansrc.U and privlib.U.
   o	Fixed the install prompt in mansrc.U.

..wayne..

Fix:	From rn, say "| patch -p -N -d DIR", where DIR is your dist source
	directory.  Outside of rn, say "cd DIR; patch -p -N <thisarticle".
	If you don't have the patch program, apply the following by hand,
	or get patch (version 2.0, latest patchlevel).

	After patching:
		*** DO NOTHING--INSTALL ALL PATCHES UP THROUGH #11 FIRST ***

	If patch indicates that patchlevel is the wrong version, you may need
	to apply one or more previous patches, or the patch may already
	have been applied.  See the patchlevel.h file to find out what has or
	has not been applied.  In any event, don't continue with the patch.

	If you are missing previous patches they can be obtained from me:

		Raphael Manfredi <ram@acri.fr>

	If you send a mail message of the following form it will greatly speed
	processing:

		Subject: Command
		@SH mailpatch PATH dist 3.0 LIST
			   ^ note the c

	where PATH is a return path FROM ME TO YOU either in Internet notation,
	or in bang notation from some well-known host, and LIST is the number
	of one or more patches you need, separated by spaces, commas, and/or
	hyphens.  Saying 35- says everything from 35 to the end.

	To get some more detailed instructions, send me the following mail:

		Subject: Command
		@SH mailhelp PATH


Index: patchlevel.h
Prereq: 9
4c4
< #define PATCHLEVEL 9
---
> #define PATCHLEVEL 10

Index: mcon/U/MailAuthor.U
Prereq: 3.0.1.1
*** mcon/U/MailAuthor.U.old	Mon Sep 13 18:14:09 1993
--- mcon/U/MailAuthor.U	Mon Sep 13 18:14:09 1993
***************
*** 1,4 ****
! ?RCS: $Id: MailAuthor.U,v 3.0.1.1 1993/08/27 14:38:38 ram Exp $
  ?RCS:
  ?RCS: Copyright (c) 1991-1993, Raphael Manfredi
  ?RCS: 
--- 1,4 ----
! ?RCS: $Id: MailAuthor.U,v 3.0.1.2 1993/09/13 15:48:49 ram Exp $
  ?RCS:
  ?RCS: Copyright (c) 1991-1993, Raphael Manfredi
  ?RCS: 
***************
*** 11,16 ****
--- 11,19 ----
  ?RCS: Original Author: Graham Stoney <greyham@research.canon.oz.au>
  ?RCS:
  ?RCS: $Log: MailAuthor.U,v $
+ ?RCS: Revision 3.0.1.2  1993/09/13  15:48:49  ram
+ ?RCS: patch10: reverted to original intent by the Author himself
+ ?RCS:
  ?RCS: Revision 3.0.1.1  1993/08/27  14:38:38  ram
  ?RCS: patch7: now prompts user for its e-mail address
  ?RCS: patch7: no longer silent when mail has been sent
***************
*** 44,75 ****
  ?S:	A '-' value means the return address will be extracted by parsing
  ?S:	the mail headers.
  ?S:.
! ?T:opt mailpatches notifypatches atsh needmail status
  : notify author that his package is used
- case "$mailpatches$notifypatches" in
- '') dflt=y;;
- *) dflt=n;;
- esac
- needmail=true
  if $test -f ../.config/mailauthor &&
  	cmp ../patchlevel.h ../.config/mailauthor >/dev/null 2>&1
  then
! 	needmail=false
! fi
! if $needmail; then
! 	$cat <<EOM
! 
! If you are able to send mail to the Internet, the author of $package would
! really appreciate you letting me send off a quick note, just to say that you've
! tried it. The author is more likely to spend time maintaining $package if it's
! known that many people are using it, and you can even ask to get sent new
! patches automagically this way if you wish. To protect your privacy, all I'll
! say in the mail is the version of $package that you're using.
! 
! EOM
! 	rp='Should I send mail to <MAINTLOC>?'
! else
! 	status="register yourself as a $package user";
  	case "$mailpatches" in
  	true) status='have patches mailed to you as they are issued';;
  	esac
--- 47,58 ----
  ?S:	A '-' value means the return address will be extracted by parsing
  ?S:	the mail headers.
  ?S:.
! ?T:opt mailpatches notifypatches atsh status
  : notify author that his package is used
  if $test -f ../.config/mailauthor &&
  	cmp ../patchlevel.h ../.config/mailauthor >/dev/null 2>&1
  then
! 	status="say that you're using $package";
  	case "$mailpatches" in
  	true) status='have patches mailed to you as they are issued';;
  	esac
***************
*** 78,89 ****
  	esac
  	$cat <<EOM
  
! You have already sent the author of $package (<MAINTLOC>) a mail to
  $status. If you wish, you may modify
  your previous request by sending a new mail with different options.
  
  EOM
  	rp='Should I send a status update to <MAINTLOC>?'
  fi
  . ./myread
  case "$ans" in
--- 61,86 ----
  	esac
  	$cat <<EOM
  
! You have already sent the author of $package (<MAINTLOC>) mail to
  $status. If you wish, you may modify
  your previous request by sending a new mail with different options.
  
  EOM
  	rp='Should I send a status update to <MAINTLOC>?'
+ 	dflt=n
+ else
+ 	$cat <<EOM
+ 
+ If you are able to send mail to the Internet, the author of $package would
+ really appreciate you letting me send off a quick note, just to say that you've
+ tried it. The author is more likely to spend time maintaining $package if it's
+ known that many people are using it, and you can even ask to get sent new
+ patches automagically this way if you wish. To protect your privacy, all I'll
+ say in the mail is the version of $package that you're using.
+ 
+ EOM
+ 	rp='Should I send mail to <MAINTLOC>?'
+ 	dflt=y
  fi
  . ./myread
  case "$ans" in
***************
*** 92,134 ****
  	echo "Great!. You cooperation is really appreciated."
  	$cat <<EOM
  
! Some sites do not set a proper return address in their outgoing mail,
! especially when connected to the Internet via UUCP. If the supplied
! address in the From: header field is wrong, the author won't be able
! to get back to you, should there be a need to do so.
  
  EOM
  	case "$usermail" in
! 	'') dflt=y;;
! 	*) dflt=n;;
  	esac
! 	rp='Would you like to supply the return address yourself?'
  	. ./myread
  	case "$ans" in
! 	[yY]*)
! 		$cat <<EOM
! 
! Ok, I need your e-mail address then, something like user@domain.top. If you
! wish to let the mail transport agent set it for you or do not know what your
! e-mail address is, use the word "none".
! 
! EOM
! 		case "$usermail" in
! 		'-') dflt=none;;
! 		'') dflt='';;
! 		*) dflt="$usermail";;
! 		esac
! 		rp='Which return address shall I use?'
! 		. ./myread
! 		case "$ans" in
! 		none) usermail='-';;
! 		*) usermail="$ans";;
! 		esac
! 		;;
  	esac
- 	case "$usermail" in
- 	'') usermail='-';;
- 	esac
  	echo " "
  	opt=''
  	rp='Would you like to have new patches automatically mailed to you?'
--- 89,113 ----
  	echo "Great!. You cooperation is really appreciated."
  	$cat <<EOM
  
! Some braindead sites do not set a proper return address in the From: header of
! their outgoing mail, making it impossible to reply to mail they generate.
! If your site is broken in this way, write to your system administrator and get
! it fixed!!! In the mean time, you can manually specify the Internet e-mail
! address by which the author can get back to you, should there be a need to do
! so. If manually specified, it should be something like "user@domain.top".
! If your mail system generates addresses correctly, specify "none".
  
  EOM
  	case "$usermail" in
! 	'-'|'') dflt=none;;
! 	*) dflt="$usermail";;
  	esac
! 	rp='Manually specify a return address to use?'
  	. ./myread
  	case "$ans" in
! 	none) usermail='-';;
! 	*) usermail="$ans";;
  	esac
  	echo " "
  	opt=''
  	rp='Would you like to have new patches automatically mailed to you?'
***************
*** 152,158 ****
  		case "$ans" in
  		[yY]*) opt=' notifypatches'; notifypatches=true;;
  		*)
! 			echo "Fine, you will only be registered as a user then."
  			notifypatches=false
  			;;
  		esac
--- 131,137 ----
  		case "$ans" in
  		[yY]*) opt=' notifypatches'; notifypatches=true;;
  		*)
! 			echo "Fine, I'll simply say that you've tried it then."
  			notifypatches=false
  			;;
  		esac

Index: mcon/U/Getfile.U
Prereq: 3.0
*** mcon/U/Getfile.U.old	Mon Sep 13 18:14:07 1993
--- mcon/U/Getfile.U	Mon Sep 13 18:14:07 1993
***************
*** 1,4 ****
! ?RCS: $Id: Getfile.U,v 3.0 1993/08/18 12:04:56 ram Exp $
  ?RCS:
  ?RCS: Copyright (c) 1991-1993, Raphael Manfredi
  ?RCS: 
--- 1,4 ----
! ?RCS: $Id: Getfile.U,v 3.0.1.1 1993/09/13 15:46:27 ram Exp $
  ?RCS:
  ?RCS: Copyright (c) 1991-1993, Raphael Manfredi
  ?RCS: 
***************
*** 9,14 ****
--- 9,18 ----
  ?RCS: of the source tree for dist 3.0.
  ?RCS:
  ?RCS: $Log: Getfile.U,v $
+ ?RCS: Revision 3.0.1.1  1993/09/13  15:46:27  ram
+ ?RCS: patch10: minor format problems and misspellings fixed
+ ?RCS: patch10: now performs from package dir and not from UU subdir
+ ?RCS:
  ?RCS: Revision 3.0  1993/08/18  12:04:56  ram
  ?RCS: Baseline for dist 3.0 netwide release.
  ?RCS:
***************
*** 24,36 ****
  ?X: If is is followed by a ~, then ~name substitution will occur. Upon return,
  ?X: $ans is set with the filename value. If a / is specified, then only a full
  ?X: path name is accepted (but ~ substitution occurs before, if needed). The
! ?X:	expanded path name is returned in that case/
  ?X:
  ?X: If a + is specified, the existence checks are skipped. This usually means
  ?X: the file/directory is under the full control of the program.
  ?X:
  ?X: If the 'n' (none) type is used, then the user may answer none.
! ?X: The 'e' (expand) switch may be used to bypass d_portable, expansing ~name.
  ?X:
  ?X: If the 'l' (locate) type is used, then it must end with a ':' and then a
  ?X:	file name. If the answer is a directory, the file name will be appended
--- 28,40 ----
  ?X: If is is followed by a ~, then ~name substitution will occur. Upon return,
  ?X: $ans is set with the filename value. If a / is specified, then only a full
  ?X: path name is accepted (but ~ substitution occurs before, if needed). The
! ?X: expanded path name is returned in that case.
  ?X:
  ?X: If a + is specified, the existence checks are skipped. This usually means
  ?X: the file/directory is under the full control of the program.
  ?X:
  ?X: If the 'n' (none) type is used, then the user may answer none.
! ?X: The 'e' (expand) switch may be used to bypass d_portable, expanding ~name.
  ?X:
  ?X: If the 'l' (locate) type is used, then it must end with a ':' and then a
  ?X:	file name. If the answer is a directory, the file name will be appended
***************
*** 99,104 ****
--- 103,109 ----
  	;;
  esac
  
+ cd ..
  while test "$type"; do
  	redo=''
  	rp="$orig_rp"
***************
*** 106,112 ****
  	case "$tilde" in
  	true) rp="$rp (~name ok)";;
  	esac
! 	. ./myread
  	case "$ans" in
  	none)
  		value=''
--- 111,117 ----
  	case "$tilde" in
  	true) rp="$rp (~name ok)";;
  	esac
! 	. UU/myread
  	case "$ans" in
  	none)
  		value=''
***************
*** 118,126 ****
  	*)
  		case "$tilde" in
  		'') value="$ans"
! 		    ansexp="$ans";;
  		*)
! 			value=`./filexp $ans`
  			case $? in
  			0)
  				if test "$ans" != "$value"; then
--- 123,131 ----
  	*)
  		case "$tilde" in
  		'') value="$ans"
! 			ansexp="$ans";;
  		*)
! 			value=`UU/filexp $ans`
  			case $? in
  			0)
  				if test "$ans" != "$value"; then
***************
*** 205,211 ****
  					dflt=n
  				fi
  				rp="$what $value doesn't exist.  Use that name anyway?"
! 				. ./myread
  				dflt=''
  				case "$ans" in
  				y*) type='';;
--- 210,216 ----
  					dflt=n
  				fi
  				rp="$what $value doesn't exist.  Use that name anyway?"
! 				. UU/myread
  				dflt=''
  				case "$ans" in
  				y*) type='';;
***************
*** 218,223 ****
--- 223,229 ----
  		;;
  	esac
  done
+ cd UU
  ans="$value"
  rp="$orig_rp"
  dflt="$orig_dflt"

Index: mcon/U/ccflags.U
Prereq: 3.0.1.2
*** mcon/U/ccflags.U.old	Mon Sep 13 18:14:12 1993
--- mcon/U/ccflags.U	Mon Sep 13 18:14:13 1993
***************
*** 1,4 ****
! ?RCS: $Id: ccflags.U,v 3.0.1.2 1993/08/27 14:39:38 ram Exp $
  ?RCS:
  ?RCS: Copyright (c) 1991-1993, Raphael Manfredi
  ?RCS: 
--- 1,4 ----
! ?RCS: $Id: ccflags.U,v 3.0.1.3 1993/09/13 15:58:29 ram Exp $
  ?RCS:
  ?RCS: Copyright (c) 1991-1993, Raphael Manfredi
  ?RCS: 
***************
*** 9,14 ****
--- 9,18 ----
  ?RCS: of the source tree for dist 3.0.
  ?RCS:
  ?RCS: $Log: ccflags.U,v $
+ ?RCS: Revision 3.0.1.3  1993/09/13  15:58:29  ram
+ ?RCS: patch10: explicitely mention -DDEBUG just in case they need it (WAD)
+ ?RCS: patch10: removed all the "tans" variable usage (WAD)
+ ?RCS:
  ?RCS: Revision 3.0.1.2  1993/08/27  14:39:38  ram
  ?RCS: patch7: added support for OSF/1 machines
  ?RCS:
***************
*** 41,47 ****
  ?S:	This variable contains any additional C partial linker flags desired by
  ?S:	the user.  It is up to the Makefile to use this.
  ?S:.
! ?T:inctest thisincl xxx flag inclwanted tans
  ?D:cppflags=''
  ?D:ccflags=''
  ?D:ldflags=''
--- 45,51 ----
  ?S:	This variable contains any additional C partial linker flags desired by
  ?S:	the user.  It is up to the Makefile to use this.
  ?S:.
! ?T:inctest thisincl xxx flag inclwanted
  ?D:cppflags=''
  ?D:ccflags=''
  ?D:ldflags=''
***************
*** 142,149 ****
  
  Your C compiler may want other flags.  For this question you should include
  -I/whatever and -DWHATEVER flags and any other flags used by the C compiler,
! but you should NOT include libraries or ld flags like -lwhatever.  To use no
! flags, specify the word "none".
  
  EOH
  ?X: strip leading space
--- 146,154 ----
  
  Your C compiler may want other flags.  For this question you should include
  -I/whatever and -DWHATEVER flags and any other flags used by the C compiler,
! but you should NOT include libraries or ld flags like -lwhatever.  If you
! want $package to honor its debug switch, you should include -DDEBUG here.
! To use no flags, specify the word "none".
  
  EOH
  ?X: strip leading space
***************
*** 152,162 ****
  dflt=${1+"$@"}
  rp="Any additional cc flags?"
  . ./myread
! tans="$ans"
! case "$tans" in
! none) tans='';
  esac
- ccflags="$tans"
  
  : the following weeds options from ccflags that are of no interest to cpp
  cppflags="$ccflags"
--- 157,166 ----
  dflt=${1+"$@"}
  rp="Any additional cc flags?"
  . ./myread
! case "$ans" in
! none) ccflags='';;
! *) ccflags="$ans";;
  esac
  
  : the following weeds options from ccflags that are of no interest to cpp
  cppflags="$ccflags"
***************
*** 196,206 ****
  echo " "
  rp="Any additional ld flags (NOT including libraries)?"
  . ./myread
! tans="$ans"
! case "$tans" in
! none) tans='';
  esac
- ldflags="$tans"
  rmlist="$rmlist pdp11"
  
  @if lkflags
--- 200,209 ----
  echo " "
  rp="Any additional ld flags (NOT including libraries)?"
  . ./myread
! case "$ans" in
! none) ldflags='';;
! *) ldflags="$ans";;
  esac
  rmlist="$rmlist pdp11"
  
  @if lkflags
***************
*** 215,224 ****
  echo " "
  rp="Partial linking flags to be used (NOT including -r)?"
  . ./myread
! tans="$ans"
! case "$tans" in
! none) tans='';
  esac
- lkflags="$tans"
  
  @end
--- 218,226 ----
  echo " "
  rp="Partial linking flags to be used (NOT including -r)?"
  . ./myread
! case "$ans" in
! none) lkflags='';;
! *)    lkflags="$ans";;
  esac
  
  @end

Index: mcon/U/d_strchr.U
Prereq: 3.0
*** mcon/U/d_strchr.U.old	Mon Sep 13 18:14:21 1993
--- mcon/U/d_strchr.U	Mon Sep 13 18:14:22 1993
***************
*** 1,4 ****
! ?RCS: $Id: d_strchr.U,v 3.0 1993/08/18 12:07:32 ram Exp $
  ?RCS:
  ?RCS: Copyright (c) 1991-1993, Raphael Manfredi
  ?RCS: 
--- 1,4 ----
! ?RCS: $Id: d_strchr.U,v 3.0.1.1 1993/09/13 16:05:26 ram Exp $
  ?RCS:
  ?RCS: Copyright (c) 1991-1993, Raphael Manfredi
  ?RCS: 
***************
*** 9,58 ****
  ?RCS: of the source tree for dist 3.0.
  ?RCS:
  ?RCS: $Log: d_strchr.U,v $
  ?RCS: Revision 3.0  1993/08/18  12:07:32  ram
  ?RCS: Baseline for dist 3.0 netwide release.
  ?RCS:
  ?MAKE:d_strchr: contains strings Setvar Myread Oldconfig Csym
  ?MAKE:	-pick add $@ %<
! ?S:d_strchr (d_index):
! ?S:	This variable conditionally defines the index and rindex symbols, which
! ?S:	remap those functions onto strchr and strrchr as necessary.
  ?S:.
! ?C:index:
! ?C:	This preprocessor symbol is defined, along with rindex, if the system
! ?C:	uses the strchr and strrchr routines instead.
  ?C:.
! ?C:rindex:
! ?C:	This preprocessor symbol is defined, along with index, if the system
! ?C:	uses the strchr and strrchr routines instead.
! ?C:.
! ?H:#$d_strchr	index strchr	/**/
! ?H:#$d_strchr	rindex strrchr	/**/
  ?H:.
  ?LINT:set d_strchr
  : index or strchr
  echo " "
- case "$d_strchr" in
- $define) dflt=n;;
- *) dflt=y;;
- esac
  if set index val -f; eval $csym; $val; then
  	if set strchr val -f d_strchr; eval $csym; $val; then
  		if $contains strchr "$strings" >/dev/null 2>&1 ; then
- 			if $contains index "$strings" >/dev/null 2>&1 ; then
- ?X: has index, strchr, and index and strchr in string header
- 				echo "Your system has both index() and strchr()." >&4
- 				rp="Shall I use index() rather than strchr()?"
- 				. ./myread
- 				case "$ans" in
- 					n*) val="$define" ;;
- 					*)  val="$undef" ;;
- 				esac
- 			else
  ?X: has index, strchr, and strchr in string header
! 				val="$define"
! 				echo "strchr() found." >&4
! 			fi
  		else
  ?X: has index, strchr, and no strchr in string header
  			val="$undef"
--- 9,42 ----
  ?RCS: of the source tree for dist 3.0.
  ?RCS:
  ?RCS: $Log: d_strchr.U,v $
+ ?RCS: Revision 3.0.1.1  1993/09/13  16:05:26  ram
+ ?RCS: patch10: now only defines HAS_STRCHR, no macro remap of index (WAD)
+ ?RCS:
  ?RCS: Revision 3.0  1993/08/18  12:07:32  ram
  ?RCS: Baseline for dist 3.0 netwide release.
  ?RCS:
  ?MAKE:d_strchr: contains strings Setvar Myread Oldconfig Csym
  ?MAKE:	-pick add $@ %<
! ?S:d_strchr:
! ?S:	This variable conditionally defines HAS_STRCHR if strchr() and
! ?S:	strrchr() are available for string searching.
  ?S:.
! ?C:HAS_STRCHR:
! ?C:	This symbol is defined to indicate that the strchr()/strrchr()
! ?C:	functions are available for string searching. If not, try the
! ?C:	index()/rindex() pair.
  ?C:.
! ?H:#$d_strchr HAS_STRCHR	/**/
  ?H:.
  ?LINT:set d_strchr
  : index or strchr
  echo " "
  if set index val -f; eval $csym; $val; then
  	if set strchr val -f d_strchr; eval $csym; $val; then
  		if $contains strchr "$strings" >/dev/null 2>&1 ; then
  ?X: has index, strchr, and strchr in string header
! 			val="$define"
! 			echo "strchr() found." >&4
  		else
  ?X: has index, strchr, and no strchr in string header
  			val="$undef"

Index: mcon/U/d_vfork.U
Prereq: 3.0
*** mcon/U/d_vfork.U.old	Mon Sep 13 18:14:22 1993
--- mcon/U/d_vfork.U	Mon Sep 13 18:14:23 1993
***************
*** 1,4 ****
! ?RCS: $Id: d_vfork.U,v 3.0 1993/08/18 12:07:55 ram Exp $
  ?RCS:
  ?RCS: Copyright (c) 1991-1993, Raphael Manfredi
  ?RCS: 
--- 1,4 ----
! ?RCS: $Id: d_vfork.U,v 3.0.1.1 1993/09/13 16:06:57 ram Exp $
  ?RCS:
  ?RCS: Copyright (c) 1991-1993, Raphael Manfredi
  ?RCS: 
***************
*** 9,51 ****
  ?RCS: of the source tree for dist 3.0.
  ?RCS:
  ?RCS: $Log: d_vfork.U,v $
  ?RCS: Revision 3.0  1993/08/18  12:07:55  ram
  ?RCS: Baseline for dist 3.0 netwide release.
  ?RCS:
! ?MAKE:d_vfork d_hvfork: Csym Setvar
  ?MAKE:	-pick add $@ %<
  ?S:d_vfork:
- ?S:	This variable conditionally defines the vfork symbol, which
- ?S:	redefines vfork to fork if the vfork() routine doesn't exist.
- ?S:.
- ?S:d_hvfork:
  ?S:	This variable conditionally defines the HAS_VFORK symbol, which
  ?S:	indicates the vfork() routine is available.
  ?S:.
- ?C:vfork:
- ?C:	This symbol, if defined, remaps the vfork routine to fork if the
- ?C:	vfork() routine isn't supported here.
- ?C:.
  ?C:HAS_VFORK (VFORK):
  ?C:	This symbol, if defined, indicates that vfork() exists.
  ?C:.
! ?H:#$d_vfork vfork fork	/**/
! ?H:#$d_hvfork HAS_VFORK	/**/
  ?H:.
  ?LINT:set d_vfork
! : see if there is a vfork
! echo " "
! if set vfork val -f d_hvfork; eval $csym; $val; then
! 	echo "vfork() found." >&4
! 	val="$undef"
! else
! 	echo "No vfork() found--will use fork() instead." >&4
! 	val="$define"
  fi
! set d_vfork
! eval $setvar
! d_hvfork="$define"
! case "$d_vfork" in
! "$define") d_hvfork="$undef";;
! esac
  
--- 9,43 ----
  ?RCS: of the source tree for dist 3.0.
  ?RCS:
  ?RCS: $Log: d_vfork.U,v $
+ ?RCS: Revision 3.0.1.1  1993/09/13  16:06:57  ram
+ ?RCS: patch10: removed automatic remapping of vfork on fork (WAD)
+ ?RCS: patch10: added compatibility code for older config.sh (WAD)
+ ?RCS:
  ?RCS: Revision 3.0  1993/08/18  12:07:55  ram
  ?RCS: Baseline for dist 3.0 netwide release.
  ?RCS:
! ?MAKE:d_vfork: Inlibc
  ?MAKE:	-pick add $@ %<
  ?S:d_vfork:
  ?S:	This variable conditionally defines the HAS_VFORK symbol, which
  ?S:	indicates the vfork() routine is available.
  ?S:.
  ?C:HAS_VFORK (VFORK):
  ?C:	This symbol, if defined, indicates that vfork() exists.
  ?C:.
! ?H:#$d_vfork HAS_VFORK	/**/
  ?H:.
  ?LINT:set d_vfork
! ?X: TO BE REMOVED in dist 4.0
! ?X:==========================
! ?T:d_hvfork
! : backward compatibility for d_hvfork
! if test X$d_hvfork != X; then
! 	d_vfork="$d_hvfork"
! 	d_hvfork=''
  fi
! ?X:==========================
! : see if there is a vfork
! set vfork d_vfork
! eval $inlibc
  

Index: mcon/U/Oldconfig.U
Prereq: 3.0
*** mcon/U/Oldconfig.U.old	Mon Sep 13 18:14:10 1993
--- mcon/U/Oldconfig.U	Mon Sep 13 18:14:10 1993
***************
*** 1,4 ****
! ?RCS: $Id: Oldconfig.U,v 3.0 1993/08/18 12:05:12 ram Exp $
  ?RCS:
  ?RCS: Copyright (c) 1991-1993, Raphael Manfredi
  ?RCS: 
--- 1,4 ----
! ?RCS: $Id: Oldconfig.U,v 3.0.1.1 1993/09/13 15:56:32 ram Exp $
  ?RCS:
  ?RCS: Copyright (c) 1991-1993, Raphael Manfredi
  ?RCS: 
***************
*** 9,14 ****
--- 9,19 ----
  ?RCS: of the source tree for dist 3.0.
  ?RCS:
  ?RCS: $Log: Oldconfig.U,v $
+ ?RCS: Revision 3.0.1.1  1993/09/13  15:56:32  ram
+ ?RCS: patch10: force use of config.sh when -d option is used (WAD)
+ ?RCS: patch10: complain about non-existent hint files (WAD)
+ ?RCS: patch10: added Options dependency for fastread variable
+ ?RCS:
  ?RCS: Revision 3.0  1993/08/18  12:05:12  ram
  ?RCS: Baseline for dist 3.0 netwide release.
  ?RCS:
***************
*** 17,23 ****
  ?X: for the sake of setting defaults.
  ?X: 
  ?MAKE:Oldconfig hint myuname: Instruct Myread uname sed test cat rm n c \
! 	contains Loc
  ?MAKE:	-pick wipe $@ %<
  ?S:myuname:
  ?S: The output of 'uname -a' if available, otherwise the hostname.
--- 22,28 ----
  ?X: for the sake of setting defaults.
  ?X: 
  ?MAKE:Oldconfig hint myuname: Instruct Myread uname sed test cat rm n c \
! 	contains Loc Options
  ?MAKE:	-pick wipe $@ %<
  ?S:myuname:
  ?S: The output of 'uname -a' if available, otherwise the hostname.
***************
*** 37,43 ****
  ?X: old SUN-OS 3.2 would not execute hostname in (uname -a || hostname). Sigh!
  myuname=`( ($uname -a) 2>/dev/null || hostname) 2>&1`
  dflt=n
! if test -f ../config.sh; then
  ?X: The value from config.sh will superseed the one we've just computed
  ?X: ... but not if we choose to ignore config.sh, so eval oldmyuname here.
  	oldmyuname=''
--- 42,50 ----
  ?X: old SUN-OS 3.2 would not execute hostname in (uname -a || hostname). Sigh!
  myuname=`( ($uname -a) 2>/dev/null || hostname) 2>&1`
  dflt=n
! if test "$fastread" = yes; then
! 	dflt=y
! elif test -f ../config.sh; then
  ?X: The value from config.sh will superseed the one we've just computed
  ?X: ... but not if we choose to ignore config.sh, so eval oldmyuname here.
  	oldmyuname=''
***************
*** 175,180 ****
--- 182,191 ----
  		if $test -f $file.sh; then
  			. ./$file.sh
  			$cat $file.sh >> ../UU/config.sh
+ 		elif $test X$ans = X -o X$ans = Xnone ; then
+ 			: nothing
+ 		else
+ 			echo "$file.sh does not exist -- ignored"
  		fi
  	done
  	hint=recommended

Index: mcon/U/d_internet.U
Prereq: 3.0
*** mcon/U/d_internet.U.old	Mon Sep 13 18:14:16 1993
--- mcon/U/d_internet.U	Mon Sep 13 18:14:16 1993
***************
*** 1,4 ****
! ?RCS: $Id: d_internet.U,v 3.0 1993/08/18 12:06:24 ram Exp $
  ?RCS:
  ?RCS: Copyright (c) 1991-1993, Raphael Manfredi
  ?RCS: 
--- 1,4 ----
! ?RCS: $Id: d_internet.U,v 3.0.1.1 1993/09/13 16:02:04 ram Exp $
  ?RCS:
  ?RCS: Copyright (c) 1991-1993, Raphael Manfredi
  ?RCS: 
***************
*** 9,18 ****
  ?RCS: of the source tree for dist 3.0.
  ?RCS:
  ?RCS: $Log: d_internet.U,v $
  ?RCS: Revision 3.0  1993/08/18  12:06:24  ram
  ?RCS: Baseline for dist 3.0 netwide release.
  ?RCS:
! ?MAKE:d_internet: Myread Oldconfig Setvar mailer
  ?MAKE:	-pick add $@ %<
  ?S:d_internet:
  ?S:	This variable conditionally defines the INTERNET symbol, which
--- 9,21 ----
  ?RCS: of the source tree for dist 3.0.
  ?RCS:
  ?RCS: $Log: d_internet.U,v $
+ ?RCS: Revision 3.0.1.1  1993/09/13  16:02:04  ram
+ ?RCS: patch10: most mailers support Internet addresses nowadays (WAD)
+ ?RCS:
  ?RCS: Revision 3.0  1993/08/18  12:06:24  ram
  ?RCS: Baseline for dist 3.0 netwide release.
  ?RCS:
! ?MAKE:d_internet: Myread Oldconfig Setvar
  ?MAKE:	-pick add $@ %<
  ?S:d_internet:
  ?S:	This variable conditionally defines the INTERNET symbol, which
***************
*** 27,48 ****
  ?H:.
  ?LINT:set d_internet
  : check for internet mailer
  case "$d_internet" in
! "$define") dflt=y;;
! "$undef")	dflt=n;;
! *)
! 	dflt=n
! 	case "$mailer" in
! 	*sendmail*) dflt=y;;
! 	*smail*) dflt=y;;
! 	esac
! 	;;
  esac
  cat <<EOM
   
! Some newer mailers can deliver mail to addresses of the INTERNET persuasion,
! such as user@host.UUCP.  Other older mailers require the complete path to
! the destination to be specified in the address.
  
  EOM
  rp="Does your mailer understand INTERNET addresses?"
--- 30,44 ----
  ?H:.
  ?LINT:set d_internet
  : check for internet mailer
+ dflt=y
  case "$d_internet" in
! "$undef") dflt=n;;
  esac
  cat <<EOM
   
! Most mailers can deliver mail to addresses of the INTERNET persuasion,
! such as user@host.edu.  Some older mailers, however, require the complete
! path to the destination to be specified in the address.
  
  EOM
  rp="Does your mailer understand INTERNET addresses?"

Index: mcon/U/privlib.U
Prereq: 3.0
*** mcon/U/privlib.U.old	Mon Sep 13 18:14:33 1993
--- mcon/U/privlib.U	Mon Sep 13 18:14:33 1993
***************
*** 1,4 ****
! ?RCS: $Id: privlib.U,v 3.0 1993/08/18 12:09:35 ram Exp $
  ?RCS:
  ?RCS: Copyright (c) 1991-1993, Raphael Manfredi
  ?RCS: 
--- 1,4 ----
! ?RCS: $Id: privlib.U,v 3.0.1.1 1993/09/13 16:12:34 ram Exp $
  ?RCS:
  ?RCS: Copyright (c) 1991-1993, Raphael Manfredi
  ?RCS: 
***************
*** 9,14 ****
--- 9,18 ----
  ?RCS: of the source tree for dist 3.0.
  ?RCS:
  ?RCS: $Log: privlib.U,v $
+ ?RCS: Revision 3.0.1.1  1993/09/13  16:12:34  ram
+ ?RCS: patch10: added support for /local/lib (WAD)
+ ?RCS: patch10: prompt phrasing made more explicit (WAD)
+ ?RCS:
  ?RCS: Revision 3.0  1993/08/18  12:09:35  ram
  ?RCS: Baseline for dist 3.0 netwide release.
  ?RCS:
***************
*** 48,53 ****
--- 52,58 ----
  '')
  	dflt=/usr/lib/$package
  	$test -d /usr/local/lib && dflt=/usr/local/lib/$package
+ 	$test -d /local/lib && dflt=/local/lib/$package
  	;;
  *)  dflt="$privlib"
  	;;
***************
*** 54,66 ****
  esac
  $cat <<EOM
  
! The $package package has some auxiliary files that should be put in a library
! that is accessible by everyone.  Where do you want to put these "private" but
! accessible files?
  
  EOM
  fn=d~+
! rp='Private library path?'
  . ./getfile
  privlib="$ans"
  privlibexp="$ansexp"
--- 59,70 ----
  esac
  $cat <<EOM
  
! There are some auxiliary files for $package that need to be put into a
! private library directory that is accessible by everyone.
  
  EOM
  fn=d~+
! rp='Pathname where private library files will reside?'
  . ./getfile
  privlib="$ans"
  privlibexp="$ansexp"
***************
*** 68,74 ****
  	$cat <<EOM
  
  Since you are running AFS, I need to distinguish the directory in which
! private file reside from the directory in which they are installed (and from
  which they are presumably copied to the former directory by occult means).
  
  EOM
--- 72,78 ----
  	$cat <<EOM
  
  Since you are running AFS, I need to distinguish the directory in which
! private files reside from the directory in which they are installed (and from
  which they are presumably copied to the former directory by occult means).
  
  EOM

Index: mcon/U/i_string.U
Prereq: 3.0
*** mcon/U/i_string.U.old	Mon Sep 13 18:14:24 1993
--- mcon/U/i_string.U	Mon Sep 13 18:14:24 1993
***************
*** 1,4 ****
! ?RCS: $Id: i_string.U,v 3.0 1993/08/18 12:08:28 ram Exp $
  ?RCS:
  ?RCS: Copyright (c) 1991-1993, Raphael Manfredi
  ?RCS: 
--- 1,4 ----
! ?RCS: $Id: i_string.U,v 3.0.1.1 1993/09/13 16:07:26 ram Exp $
  ?RCS:
  ?RCS: Copyright (c) 1991-1993, Raphael Manfredi
  ?RCS: 
***************
*** 9,14 ****
--- 9,17 ----
  ?RCS: of the source tree for dist 3.0.
  ?RCS:
  ?RCS: $Log: i_string.U,v $
+ ?RCS: Revision 3.0.1.1  1993/09/13  16:07:26  ram
+ ?RCS: patch10: removed "(Actually, this looks more like...)" messages (WAD)
+ ?RCS:
  ?RCS: Revision 3.0  1993/08/18  12:08:28  ram
  ?RCS: Baseline for dist 3.0 netwide release.
  ?RCS:
***************
*** 35,58 ****
  : see which of string.h or strings.h is needed
  echo " "
  strings=`./findhdr string.h`
- val="$undef"
  if $test "$strings" && $test -r "$strings"; then
  	echo "Using <string.h> instead of <strings.h>." >&4
- 	if bsd; then
- 		echo "(Actually, this looks more like it were an USG system)"
- 	fi
  	val="$define"
  else
  	strings=`./findhdr strings.h`
  	if $test "$strings" && $test -r "$strings"; then
  		echo "Using <strings.h> instead of <string.h>." >&4
- 		if usg; then
- 			echo "(Actually, this looks more like it were a BSD system)"
- 		fi
  	else
! 		echo "No string header found--You'll surely have problems." >&4
  	fi
  fi
  set i_string
  eval $setvar
  
--- 38,59 ----
  : see which of string.h or strings.h is needed
  echo " "
  strings=`./findhdr string.h`
  if $test "$strings" && $test -r "$strings"; then
  	echo "Using <string.h> instead of <strings.h>." >&4
  	val="$define"
  else
+ 	val="$undef"
  	strings=`./findhdr strings.h`
  	if $test "$strings" && $test -r "$strings"; then
  		echo "Using <strings.h> instead of <string.h>." >&4
  	else
! 		echo "No string header found -- You'll surely have problems." >&4
  	fi
  fi
  set i_string
  eval $setvar
+ case "$i_string" in
+ "$undef") strings=`./findhdr strings.h`;;
+ *)	  strings=`./findhdr string.h`;;
+ esac
  

Index: mcon/U/libc.U
Prereq: 3.0.1.1
*** mcon/U/libc.U.old	Mon Sep 13 18:14:25 1993
--- mcon/U/libc.U	Mon Sep 13 18:14:25 1993
***************
*** 1,4 ****
! ?RCS: $Id: libc.U,v 3.0.1.1 1993/08/27 14:40:03 ram Exp $
  ?RCS:
  ?RCS: Copyright (c) 1991-1993, Raphael Manfredi
  ?RCS: 
--- 1,4 ----
! ?RCS: $Id: libc.U,v 3.0.1.2 1993/09/13 16:09:03 ram Exp $
  ?RCS:
  ?RCS: Copyright (c) 1991-1993, Raphael Manfredi
  ?RCS: 
***************
*** 9,14 ****
--- 9,17 ----
  ?RCS: of the source tree for dist 3.0.
  ?RCS:
  ?RCS: $Log: libc.U,v $
+ ?RCS: Revision 3.0.1.2  1993/09/13  16:09:03  ram
+ ?RCS: patch10: added special handling for Apollo systems (WAD)
+ ?RCS:
  ?RCS: Revision 3.0.1.1  1993/08/27  14:40:03  ram
  ?RCS: patch7: added entry for /usr/shlib/libc.so (OSF/1 machines)
  ?RCS:
***************
*** 77,84 ****
  ?X: points, we make use of (test -h), using a sub-shell in case builtin test
  ?X: does not implement the -h check for symbolic links. This makes it
  ?X: possible to preset libc in a hint file for instance and have it show up
! ?X:	as-is in the question.
  ?X:
  case "$libc" in
  unknown)
  	set /usr/ccs/lib/libc.so
--- 80,88 ----
  ?X: points, we make use of (test -h), using a sub-shell in case builtin test
  ?X: does not implement the -h check for symbolic links. This makes it
  ?X: possible to preset libc in a hint file for instance and have it show up
! ?X: as-is in the question.
  ?X:
+ xxx=normal
  case "$libc" in
  unknown)
  	set /usr/ccs/lib/libc.so
***************
*** 102,107 ****
--- 106,112 ----
  ?X: not to mention its math library in /lib/syslib...
  ?X:
  	echo "Your C library seems to be in both /lib/clib and /lib/libc."
+ 	xxx=apollo
  	libc='/lib/clib /lib/libc'
  	if $test -r /lib/syslib; then
  		echo "(Your math library is in /lib/syslib.)"
***************
*** 138,144 ****
  		libc='blurfl'
  	fi
  fi
! if $test -r "$libc" || (test -h "$libc") >/dev/null 2>&1; then
  	dflt="$libc"
  	cat <<EOM
  
--- 143,149 ----
  		libc='blurfl'
  	fi
  fi
! if $test $xxx = apollo -o -r "$libc" || (test -h "$libc") >/dev/null 2>&1; then
  	dflt="$libc"
  	cat <<EOM
  

Index: mcon/U/d_bzero.U
Prereq: 3.0
*** mcon/U/d_bzero.U.old	Mon Sep 13 18:14:15 1993
--- mcon/U/d_bzero.U	Mon Sep 13 18:14:15 1993
***************
*** 1,4 ****
! ?RCS: $Id: d_bzero.U,v 3.0 1993/08/18 12:05:46 ram Exp $
  ?RCS:
  ?RCS: Copyright (c) 1991-1993, Raphael Manfredi
  ?RCS: 
--- 1,4 ----
! ?RCS: $Id: d_bzero.U,v 3.0.1.1 1993/09/13 16:01:33 ram Exp $
  ?RCS:
  ?RCS: Copyright (c) 1991-1993, Raphael Manfredi
  ?RCS: 
***************
*** 9,14 ****
--- 9,17 ----
  ?RCS: of the source tree for dist 3.0.
  ?RCS:
  ?RCS: $Log: d_bzero.U,v $
+ ?RCS: Revision 3.0.1.1  1993/09/13  16:01:33  ram
+ ?RCS: patch10: now only defines HAS_BZERO, no macro remap on memset (WAD)
+ ?RCS:
  ?RCS: Revision 3.0  1993/08/18  12:05:46  ram
  ?RCS: Baseline for dist 3.0 netwide release.
  ?RCS:
***************
*** 18,43 ****
  ?S:	This variable conditionally defines the HAS_BZERO symbol if
  ?S:	the bzero() routine is available to set memory to 0.
  ?S:.
! ?C:bzero ~ %<:
! ?C:	This symbol is maped to memset if the bzero() routine is not
! ?C:	available to set memory to 0.
! ?C:.
! ?C:HAS_BZERO ~ %<:
  ?C:	This symbol is defined if the bzero() routine is available to
! ?C:	set a memory block to 0. You should not make use of this symbol
! ?C:	under normal circumstances but rather use bzero() directly. That
! ?C:	will get remapped to memset() when bzero is not available.
  ?C:.
! ?H:?%<:#$d_bzero HAS_BZERO	/**/
! ?H:?%<:#ifndef HAS_BZERO
! ?H:?%<:#ifdef bzero
! ?X: The following line is NOT a typo -- see Config_h.U
! ?H:?%<:#un-def bzero
! ?H:?%<:#endif
! ?H:?%<:#define bzero(s,l) memset((s),0,(l))	/* mapped to memset */
! ?H:?%<:#endif
  ?H:.
- ?W:%<:bzero
  ?LINT:set d_bzero
  : see if bzero exists
  set bzero d_bzero
--- 21,32 ----
  ?S:	This variable conditionally defines the HAS_BZERO symbol if
  ?S:	the bzero() routine is available to set memory to 0.
  ?S:.
! ?C:HAS_BZERO:
  ?C:	This symbol is defined if the bzero() routine is available to
! ?C:	set a memory block to 0.
  ?C:.
! ?H:#$d_bzero HAS_BZERO	/**/
  ?H:.
  ?LINT:set d_bzero
  : see if bzero exists
  set bzero d_bzero

Index: mcon/U/d_bcopy.U
Prereq: 3.0
*** mcon/U/d_bcopy.U.old	Mon Sep 13 18:14:14 1993
--- mcon/U/d_bcopy.U	Mon Sep 13 18:14:15 1993
***************
*** 1,4 ****
! ?RCS: $Id: d_bcopy.U,v 3.0 1993/08/18 12:05:44 ram Exp $
  ?RCS:
  ?RCS: Copyright (c) 1991-1993, Raphael Manfredi
  ?RCS: 
--- 1,4 ----
! ?RCS: $Id: d_bcopy.U,v 3.0.1.1 1993/09/13 16:01:11 ram Exp $
  ?RCS:
  ?RCS: Copyright (c) 1991-1993, Raphael Manfredi
  ?RCS: 
***************
*** 9,14 ****
--- 9,17 ----
  ?RCS: of the source tree for dist 3.0.
  ?RCS:
  ?RCS: $Log: d_bcopy.U,v $
+ ?RCS: Revision 3.0.1.1  1993/09/13  16:01:11  ram
+ ?RCS: patch10: now only defines HAS_BCOPY, no macro remap on memcpy (WAD)
+ ?RCS:
  ?RCS: Revision 3.0  1993/08/18  12:05:44  ram
  ?RCS: Baseline for dist 3.0 netwide release.
  ?RCS:
***************
*** 18,43 ****
  ?S:	This variable conditionally defines the HAS_BCOPY symbol if
  ?S:	the bcopy() routine is available to copy strings.
  ?S:.
! ?C:bcopy ~ %<:
! ?C:	This symbol is maped to memcpy if the bcopy() routine is not
! ?C:	available to copy strings.
! ?C:.
! ?C:HAS_BCOPY ~ %<:
  ?C:	This symbol is defined if the bcopy() routine is available to
! ?C:	copy blocks of memory. You should not use this symbol under
! ?C:	normal circumstances and use bcopy() directly instead, which
! ?C:	will get mapped to memcpy() if bcopy is not available.
  ?C:.
! ?H:?%<:#$d_bcopy HAS_BCOPY	/**/
! ?H:?%<:#ifndef HAS_BCOPY
! ?H:?%<:#ifdef bcopy
! ?X: The following line is NOT a typo -- see Config_h.U
! ?H:?%<:#un-def bcopy
! ?H:?%<:#endif
! ?H:?%<:#define bcopy(s,d,l) memcpy((d),(s),(l))		/* mapped to memcpy */
! ?H:?%<:#endif
  ?H:.
- ?W:%<:bcopy
  ?LINT:set d_bcopy
  : see if bcopy exists
  set bcopy d_bcopy
--- 21,32 ----
  ?S:	This variable conditionally defines the HAS_BCOPY symbol if
  ?S:	the bcopy() routine is available to copy strings.
  ?S:.
! ?C:HAS_BCOPY:
  ?C:	This symbol is defined if the bcopy() routine is available to
! ?C:	copy blocks of memory.
  ?C:.
! ?H:#$d_bcopy HAS_BCOPY	/**/
  ?H:.
  ?LINT:set d_bcopy
  : see if bcopy exists
  set bcopy d_bcopy

Index: mcon/U/d_bcmp.U
Prereq: 3.0
*** mcon/U/d_bcmp.U.old	Mon Sep 13 18:14:13 1993
--- mcon/U/d_bcmp.U	Mon Sep 13 18:14:14 1993
***************
*** 1,4 ****
! ?RCS: $Id: d_bcmp.U,v 3.0 1993/08/18 12:05:42 ram Exp $
  ?RCS:
  ?RCS: Copyright (c) 1991-1993, Raphael Manfredi
  ?RCS: 
--- 1,4 ----
! ?RCS: $Id: d_bcmp.U,v 3.0.1.1 1993/09/13 16:00:44 ram Exp $
  ?RCS:
  ?RCS: Copyright (c) 1991-1993, Raphael Manfredi
  ?RCS: 
***************
*** 9,14 ****
--- 9,17 ----
  ?RCS: of the source tree for dist 3.0.
  ?RCS:
  ?RCS: $Log: d_bcmp.U,v $
+ ?RCS: Revision 3.0.1.1  1993/09/13  16:00:44  ram
+ ?RCS: patch10: now only defines HAS_BCMP, no macro remap on memcmp (WAD)
+ ?RCS:
  ?RCS: Revision 3.0  1993/08/18  12:05:42  ram
  ?RCS: Baseline for dist 3.0 netwide release.
  ?RCS:
***************
*** 18,43 ****
  ?S:	This variable conditionally defines the HAS_BCMP symbol if
  ?S:	the bcmp() routine is available to compare strings.
  ?S:.
! ?C:bcmp ~ %<:
! ?C:	This symbol is maped to memcmp if the bcmp() routine is not
! ?C:	available to compare strings.
! ?C:.
! ?C:HAS_BCMP ~ %<:
  ?C:	This symbol is defined if the bcmp() routine is available to
! ?C:	compare blocks of memory. You should not use this symbol under
! ?C:	normal circumstances and use bcmp() directly instead, since that
! ?C:	symbol will be mapped to memcmp() should bcmp not be available.
  ?C:.
! ?H:?%<:#$d_bcmp HAS_BCMP	/**/
! ?H:?%<:#ifndef HAS_BCMP
! ?H:?%<:#ifdef bcmp
! ?X: The following line is NOT a typo -- see Config_h.U
! ?H:?%<:#un-def bcmp
! ?H:?%<:#endif
! ?H:?%<:#define bcmp(s,d,l) memcmp((s),(d),(l))	/* mapped to memcmp */
! ?H:?%<:#endif
  ?H:.
- ?W:%<:bcmp
  ?LINT:set d_bcmp
  : see if bcmp exists
  set bcmp d_bcmp
--- 21,32 ----
  ?S:	This variable conditionally defines the HAS_BCMP symbol if
  ?S:	the bcmp() routine is available to compare strings.
  ?S:.
! ?C:HAS_BCMP:
  ?C:	This symbol is defined if the bcmp() routine is available to
! ?C:	compare blocks of memory.
  ?C:.
! ?H:#$d_bcmp HAS_BCMP	/**/
  ?H:.
  ?LINT:set d_bcmp
  : see if bcmp exists
  set bcmp d_bcmp

Index: mcon/U/sysman.U
Prereq: 3.0
*** mcon/U/sysman.U.old	Mon Sep 13 18:14:35 1993
--- mcon/U/sysman.U	Mon Sep 13 18:14:35 1993
***************
*** 1,4 ****
! ?RCS: $Id: sysman.U,v 3.0 1993/08/18 12:09:55 ram Exp $
  ?RCS:
  ?RCS: Copyright (c) 1991-1993, Raphael Manfredi
  ?RCS: 
--- 1,4 ----
! ?RCS: $Id: sysman.U,v 3.0.1.1 1993/09/13 16:13:50 ram Exp $
  ?RCS:
  ?RCS: Copyright (c) 1991-1993, Raphael Manfredi
  ?RCS: 
***************
*** 9,14 ****
--- 9,18 ----
  ?RCS: of the source tree for dist 3.0.
  ?RCS:
  ?RCS: $Log: sysman.U,v $
+ ?RCS: Revision 3.0.1.1  1993/09/13  16:13:50  ram
+ ?RCS: patch10: added support for /local/man/man1 (WAD)
+ ?RCS: patch10: added temporary syspath variable to cut down on line length
+ ?RCS:
  ?RCS: Revision 3.0  1993/08/18  12:09:55  ram
  ?RCS: Baseline for dist 3.0 netwide release.
  ?RCS:
***************
*** 19,28 ****
  ?S:	system. It is not the place where the user wants to put his manual
  ?S:	pages. See mansrc.
  ?S:.
  : determine where manual pages are on this system
  echo " "
  case "$sysman" in
! '') sysman=`./loc . /usr/man/man1 /usr/man/man1 /usr/man/mann /usr/man/manl /usr/man/local/man1 /usr/man/u_man/man1 /usr/share/man/man1 /usr/catman/u_man/man1 /usr/man/l_man/man1 /usr/local/man/u_man/man1 /usr/local/man/l_man/man1 /usr/man/man.L`
  	;;
  esac
  if $test -d "$sysman"; then
--- 23,40 ----
  ?S:	system. It is not the place where the user wants to put his manual
  ?S:	pages. See mansrc.
  ?S:.
+ ?T:syspath
  : determine where manual pages are on this system
  echo " "
  case "$sysman" in
! '') 
! 	syspath='/usr/man/man1 /usr/man/man1 /usr/man/mann'
! 	syspath="$syspath /usr/man/manl /usr/man/local/man1"
! 	syspath="$syspath /usr/man/u_man/man1 /usr/share/man/man1"
! 	syspath="$syspath /usr/catman/u_man/man1 /usr/man/l_man/man1"
! 	syspath="$syspath /usr/local/man/u_man/man1 /usr/local/man/l_man/man1"
! 	syspath="$syspath /usr/man/man.L /local/man/man1"
! 	sysman=`./loc . $syspath`
  	;;
  esac
  if $test -d "$sysman"; then

Index: mcon/U/nametype.U
Prereq: 3.0
*** mcon/U/nametype.U.old	Mon Sep 13 18:14:29 1993
--- mcon/U/nametype.U	Mon Sep 13 18:14:29 1993
***************
*** 1,4 ****
! ?RCS: $Id: nametype.U,v 3.0 1993/08/18 12:09:20 ram Exp $
  ?RCS:
  ?RCS: Copyright (c) 1991-1993, Raphael Manfredi
  ?RCS: 
--- 1,4 ----
! ?RCS: $Id: nametype.U,v 3.0.1.1 1993/09/13 16:10:09 ram Exp $
  ?RCS:
  ?RCS: Copyright (c) 1991-1993, Raphael Manfredi
  ?RCS: 
***************
*** 9,14 ****
--- 9,17 ----
  ?RCS: of the source tree for dist 3.0.
  ?RCS:
  ?RCS: $Log: nametype.U,v $
+ ?RCS: Revision 3.0.1.1  1993/09/13  16:10:09  ram
+ ?RCS: patch10: made questions more explicit for 'Configure -s' prompting (WAD)
+ ?RCS:
  ?RCS: Revision 3.0  1993/08/18  12:09:20  ram
  ?RCS: Baseline for dist 3.0 netwide release.
  ?RCS:
***************
*** 76,82 ****
      guest:**paswword**:10:100:Mister Guest User:/usr/users:/bin/sh
                                ^^^^^^^^^^^^^^^^^
  EOM
! rp="Berkeley/V7 format for full name?"
  . ./myread
  case "$ans" in
  y*) d_passnames="$define"
--- 79,85 ----
      guest:**paswword**:10:100:Mister Guest User:/usr/users:/bin/sh
                                ^^^^^^^^^^^^^^^^^
  EOM
! rp="Berkeley/V7 format for full name in /etc/password?"
  . ./myread
  case "$ans" in
  y*) d_passnames="$define"
***************
*** 105,111 ****
      guest:**paswword**:10:100:000-Mister Guest User(000):/usr/users:/bin/sh
                                    ^^^^^^^^^^^^^^^^^
  EOM
! 	rp="USG format for full name?"
  	. ./myread
  	case "$ans" in
  	n*) echo "Full name will be taken from ~/.fullname"
--- 108,114 ----
      guest:**paswword**:10:100:000-Mister Guest User(000):/usr/users:/bin/sh
                                    ^^^^^^^^^^^^^^^^^
  EOM
! 	rp="USG format for full name in /etc/passwd?"
  	. ./myread
  	case "$ans" in
  	n*) echo "Full name will be taken from ~/.fullname"

*** End of Patch 10 ***

exit 0 # Just in case...
