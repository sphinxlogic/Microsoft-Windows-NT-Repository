Newsgroups: comp.sources.misc
From: Raphael Manfredi <ram@acri.fr>
Subject: v39i025:  dist-3.0 - Configure script generator and related tools, Part21/28
Message-ID: <1993Aug19.131541.6049@sparky.sterling.com>
X-Md4-Signature: cf1d50d1a9226858a25f7663892387d1
Sender: kent@sparky.sterling.com (Kent Landfield)
Organization: Advanced Computer Research Institute, Lyon, France.
Date: Thu, 19 Aug 1993 13:15:41 GMT
Approved: kent@sparky.sterling.com

Submitted-by: Raphael Manfredi <ram@acri.fr>
Posting-number: Volume 39, Issue 25
Archive-name: dist-3.0/part21
Environment: UNIX, Perl, RCS

#! /bin/sh
# This is a shell archive.  Remove anything before this line, then feed it
# into a shell via "sh file" or similar.  To overwrite existing files,
# type "sh file -c".
# The tool that generated this appeared in the comp.sources.unix newsgroup;
# send mail to comp-sources-unix@uunet.uu.net if you want that tool.
# Contents:  jmake/jmkmf.SH kit/makeSH.man lib/Jmakefile
#   lib/errnolist.a mcon/U/Filexp.U mcon/U/Inlibc.U mcon/U/active.U
#   mcon/U/d_charsprf.U mcon/U/d_ckeypad.U mcon/U/d_htonl.U
#   mcon/U/d_internet.U mcon/U/d_raster.U mcon/U/d_setregid.U
#   mcon/U/d_setreuid.U mcon/U/d_tzmin.U mcon/U/gidtype.U
#   mcon/U/i_fcntl.U mcon/U/i_niin.U mcon/U/i_syssock.U
#   mcon/U/libpth.U mcon/U/mailer.U mcon/U/newslevel.U
#   mcon/U/newsspool.U mcon/U/prefshell.U mcon/U/warnflags.U
#   pat/patindex.SH
# Wrapped by ram@soft208 on Wed Aug 18 14:42:24 1993
PATH=/bin:/usr/bin:/usr/ucb ; export PATH
echo If this archive is complete, you will see the following message:
echo '          "shar: End of archive 21 (of 28)."'
if test -f 'jmake/jmkmf.SH' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'jmake/jmkmf.SH'\"
else
  echo shar: Extracting \"'jmake/jmkmf.SH'\" \(1621 characters\)
  sed "s/^X//" >'jmake/jmkmf.SH' <<'END_OF_FILE'
Xcase $CONFIG in
X'')
X	if test -f config.sh; then TOP=.;
X	elif test -f ../config.sh; then TOP=..;
X	elif test -f ../../config.sh; then TOP=../..;
X	elif test -f ../../../config.sh; then TOP=../../..;
X	elif test -f ../../../../config.sh; then TOP=../../../..;
X	else
X		(echo "Can't find config.sh."; exit 1)
X	fi
X	. $TOP/config.sh
X	;;
Xesac
Xcase "$0" in
X*/*) cd `expr X$0 : 'X\(.*\)/'` ;;
Xesac
Xecho "Extracting jmake/jmkmf (with variable substitutions)"
X$spitshell >jmkmf <<!GROK!THIS!
X$startsh
X!GROK!THIS!
X$spitshell >>jmkmf <<'!NO!SUBS!'
X# @(#) Generates a Makefile from a Jmakefile
X
X# $Id: jmkmf.SH,v 3.0 1993/08/18 12:04:19 ram Exp $
X#
X#  Copyright (c) 1991-1993, Raphael Manfredi
X#  
X#  You may redistribute only under the terms of the Artistic Licence,
X#  as specified in the README file that comes with the distribution.
X#  You may reuse parts of this distribution only within the terms of
X#  that same Artistic Licence; a copy of which may be found at the root
X#  of the source tree for dist 3.0.
X#
X# $Log: jmkmf.SH,v $
X# Revision 3.0  1993/08/18  12:04:19  ram
X# Baseline for dist 3.0 netwide release.
X#
X
Xusage="usage:  $0 [top_of_sources_pathname [current_directory]]"
X
Xtopdir=.
Xcurdir=.
X
Xcase $# in 
X    0) ;;
X    1) topdir=$1 ;;
X    2) topdir=$1  curdir=$2 ;;
X    *) echo "$usage" 1>&2; exit 1 ;;
Xesac
X
Xcase "$topdir" in
X    -*) echo "$usage" 1>&2; exit 1 ;;
Xesac
X
Xif test -f Makefile.SH; then 
X    echo mv Makefile.SH Makefile.SH~
X    mv Makefile.SH Makefile.SH~
Xfi
X
Xargs="-DTOPDIR=$topdir -DCURDIR=$curdir"
X
Xecho jmake $args
Xjmake $args
Xecho sh Makefile.SH
Xsh Makefile.SH
X!NO!SUBS!
Xchmod 755 jmkmf
X$eunicefix jmkmf
END_OF_FILE
  if test 1621 -ne `wc -c <'jmake/jmkmf.SH'`; then
    echo shar: \"'jmake/jmkmf.SH'\" unpacked with wrong size!
  fi
  chmod +x 'jmake/jmkmf.SH'
  # end of 'jmake/jmkmf.SH'
fi
if test -f 'kit/makeSH.man' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'kit/makeSH.man'\"
else
  echo shar: Extracting \"'kit/makeSH.man'\" \(1710 characters\)
  sed "s/^X//" >'kit/makeSH.man' <<'END_OF_FILE'
X''' $Id: makeSH.man,v 3.0 1993/08/18 12:04:27 ram Exp $
X'''
X'''  Copyright (c) 1991-1993, Raphael Manfredi
X'''  
X'''  You may redistribute only under the terms of the Artistic Licence,
X'''  as specified in the README file that comes with the distribution.
X'''  You may reuse parts of this distribution only within the terms of
X'''  that same Artistic Licence; a copy of which may be found at the root
X'''  of the source tree for dist 3.0.
X'''
X''' $Log: makeSH.man,v $
X''' Revision 3.0  1993/08/18  12:04:27  ram
X''' Baseline for dist 3.0 netwide release.
X'''
X''' 
X.TH MAKESH 1 LOCAL
X.SH NAME
XmakeSH \- a .SH script maker
X.SH SYNOPSIS
X.B makeSH
X.I files
X.SH DESCRIPTION
X.I MakeSH
Xexamines one or more scripts and produces a .SH file that, when run under sh,
Xwill produce the original script.
XThe .SH script so produced has two sections containing code destined for
Xthe output.
XThe first section has variable substitutions performed on it (taking values
Xfrom config.sh), while the second section does not.
XMakeSH does not know which variables you want to have substituted, so it puts
Xthe whole script into the second section.
XIt's up to you to insert any variable substitutions in the first section
Xfor any values you want from config.sh.
X.PP
XYou should run
X.I makeSH
Xfrom within your top-level directory and use the relative path to the file
Xas an argument, so that the "Extracting ..." line printed while running
Xthe produced .SH file later on will give that same path.
X.SH AUTHOR
XLarry Wall <lwall@netlabs.com>
X.SH SEE ALSO
Xpat(1), metaconfig(1), makedist(1).
X.SH BUGS
XIt could assume that variables from metaconfig's Glossary need to be
Xinitialized in the first section, but I'm too lazy to make it do that.
END_OF_FILE
  if test 1710 -ne `wc -c <'kit/makeSH.man'`; then
    echo shar: \"'kit/makeSH.man'\" unpacked with wrong size!
  fi
  # end of 'kit/makeSH.man'
fi
if test -f 'lib/Jmakefile' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'lib/Jmakefile'\"
else
  echo shar: Extracting \"'lib/Jmakefile'\" \(1578 characters\)
  sed "s/^X//" >'lib/Jmakefile' <<'END_OF_FILE'
X/*
X * Jmakefile for lib subdirectory.
X */
X
X;# $Id: Jmakefile,v 3.0 1993/08/18 12:04:34 ram Exp $
X;#
X;#  Copyright (c) 1991-1993, Raphael Manfredi
X;#  
X;#  You may redistribute only under the terms of the Artistic Licence,
X;#  as specified in the README file that comes with the distribution.
X;#  You may reuse parts of this distribution only within the terms of
X;#  that same Artistic Licence; a copy of which may be found at the root
X;#  of the source tree for dist 3.0.
X;#
X;# $Log: Jmakefile,v $
X;# Revision 3.0  1993/08/18  12:04:34  ram
X;# Baseline for dist 3.0 netwide release.
X;#
X
XFILES = errnolist.a errnolist.mk
XFILES_SH = errnolist makedepend makedir
X
XINSTALLFLAGS = -m 444
X
Xall::		/* So that default make does not default to install */
X
X>PRIVLIB	/* Grrr.. Have to let jmake know I need this */
X
XMakeDirectories(install,$(PRIVLIB)/lib)
XInstallMultiple($(FILES),$(PRIVLIB)/lib)
X
X/*
X * InstallSingleExt:
X *	This rule installs a single file whose basename is 'file' and
X *	extension is 'old' into 'file^^new'. This allows changing the
X *	dot extension of a file, for instance file.sh can be installed as
X *	file.SH.
X */
X#define InstallSingleExt(step,file,dest,flags,old,new)	@!\
X>INSTALL @!\
X>RM @!\
Xstep:: file^^old						@@\
X	@case '${MFLAGS}' in *[i]*) set +e;; esac; \	@@\
X	(set -x; $(INSTALL) -c flags file^^old dest/file^^new)	@@\
X									@!\
Xde^^step::						@@\
X	@case '${MFLAGS}' in *[i]*) set +e;; esac; \	@@\
X	(set -x; $(RM) dest/file^^new)
X
X#define install_rule \
X	InstallSingleExt(install,!f,$(PRIVLIB)/lib,-m 444,.sh,.SH)
X
XExpand(install_rule,f!$(FILES_SH)!)
END_OF_FILE
  if test 1578 -ne `wc -c <'lib/Jmakefile'`; then
    echo shar: \"'lib/Jmakefile'\" unpacked with wrong size!
  fi
  # end of 'lib/Jmakefile'
fi
if test -f 'lib/errnolist.a' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'lib/errnolist.a'\"
else
  echo shar: Extracting \"'lib/errnolist.a'\" \(1561 characters\)
  sed "s/^X//" >'lib/errnolist.a' <<'END_OF_FILE'
X# $Id: errnolist.a,v 3.0 1993/08/18 12:04:35 ram Exp $
X#
X#  Copyright (c) 1991-1993, Raphael Manfredi
X#  
X#  You may redistribute only under the terms of the Artistic Licence,
X#  as specified in the README file that comes with the distribution.
X#  You may reuse parts of this distribution only within the terms of
X#  that same Artistic Licence; a copy of which may be found at the root
X#  of the source tree for dist 3.0.
X#
X# Original Author: Harlan Stenn <harlan@mumps.pfcs.com>
X#
X# $Log: errnolist.a,v $
X# Revision 3.0  1993/08/18  12:04:35  ram
X# Baseline for dist 3.0 netwide release.
X#
X#
X# This is a simple-minded awk script to generate an initialization for
X# sys_errnolist on systems that don't have it.
X# This file now depends only on sys/errno.h error numbers under maxerr being
X# in order.  It will complain and die if not.  NOTE: It will still produce
X# a compilable output file, even with errors, so you must check the output.
X
X
XBEGIN		{
X			format = "\t\"%s\",\n"
X			printf("/*\n** This is a generated file.  Do NOT edit it unless you really have to...\n*/\n\n")
X			printf("char *sys_errnolist[] = {\n")
X			maxerr = 89
X		}
X
X$1=="#define"	{	
X			if(count > maxerr || substr($2,1,1) != "E")
X				next   # we're not interested
X			if($3 < count) {	# this is bad
X				printf("Fatal error: %s out of order at %s\n",\
X				FILENAME, $2)>"/dev/tty"
X				exit 1
X			}
X			# fill in the blanks
X			while($3 > count) {
X				dummy=sprintf("EDUMMY%d",count)
X				printf(format,dummy)
X				count++
X			}
X			printf(format,$2)
X			count++
X		}
X
XEND		{
X			printf("\t0\n};\n")
X		}
END_OF_FILE
  if test 1561 -ne `wc -c <'lib/errnolist.a'`; then
    echo shar: \"'lib/errnolist.a'\" unpacked with wrong size!
  fi
  # end of 'lib/errnolist.a'
fi
if test -f 'mcon/U/Filexp.U' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'mcon/U/Filexp.U'\"
else
  echo shar: Extracting \"'mcon/U/Filexp.U'\" \(1550 characters\)
  sed "s/^X//" >'mcon/U/Filexp.U' <<'END_OF_FILE'
X?RCS: $Id: Filexp.U,v 3.0 1993/08/18 12:04:53 ram Exp $
X?RCS:
X?RCS: Copyright (c) 1991-1993, Raphael Manfredi
X?RCS: 
X?RCS: You may redistribute only under the terms of the Artistic Licence,
X?RCS: as specified in the README file that comes with the distribution.
X?RCS: You may reuse parts of this distribution only within the terms of
X?RCS: that same Artistic Licence; a copy of which may be found at the root
X?RCS: of the source tree for dist 3.0.
X?RCS:
X?RCS: $Log: Filexp.U,v $
X?RCS: Revision 3.0  1993/08/18  12:04:53  ram
X?RCS: Baseline for dist 3.0 netwide release.
X?RCS:
X?X: 
X?X: This unit produces a shell script which will expand filenames beginning
X?X: with tildes.  The script is deleted at the end of Configure.
X?X: 
X?MAKE:Filexp: startsh sed test expr eunicefix
X?MAKE:	-pick add $@ %<
X?T:LOGDIR dir me name failed
X: set up shell script to do ~ expansion
Xcat >filexp <<EOSS
X$startsh
X: expand filename
Xcase "\$1" in
X ~/*|~)
X	echo \$1 | $sed "s|~|\${HOME-\$LOGDIR}|"
X	;;
X ~*)
X	if $test -f /bin/csh; then
X		/bin/csh -f -c "glob \$1"
X		failed=$?
X		echo ""
X		exit \$failed
X	else
X		name=\`$expr x\$1 : '..\([^/]*\)'\`
X		dir=\`$sed -n -e "/^\${name}:/{s/^[^:]*:[^:]*:[^:]*:[^:]*:[^:]*:\([^:]*\).*"'\$'"/\1/" -e p -e q -e '}' </etc/passwd\`
X		if $test ! -d "\$dir"; then
X			me=\`basename \$0\`
X			echo "\$me: can't locate home directory for: \$name" >&2
X			exit 1
X		fi
X		case "\$1" in
X		*/*)
X			echo \$dir/\`$expr x\$1 : '..[^/]*/\(.*\)'\`
X			;;
X		*)
X			echo \$dir
X			;;
X		esac
X	fi
X	;;
X*)
X	echo \$1
X	;;
Xesac
XEOSS
Xchmod +x filexp
X$eunicefix filexp
X
END_OF_FILE
  if test 1550 -ne `wc -c <'mcon/U/Filexp.U'`; then
    echo shar: \"'mcon/U/Filexp.U'\" unpacked with wrong size!
  fi
  # end of 'mcon/U/Filexp.U'
fi
if test -f 'mcon/U/Inlibc.U' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'mcon/U/Inlibc.U'\"
else
  echo shar: Extracting \"'mcon/U/Inlibc.U'\" \(1672 characters\)
  sed "s/^X//" >'mcon/U/Inlibc.U' <<'END_OF_FILE'
X?RCS: $Id: Inlibc.U,v 3.0 1993/08/18 12:05:03 ram Exp $
X?RCS:
X?RCS: Copyright (c) 1991-1993, Raphael Manfredi
X?RCS: 
X?RCS: You may redistribute only under the terms of the Artistic Licence,
X?RCS: as specified in the README file that comes with the distribution.
X?RCS: You may reuse parts of this distribution only within the terms of
X?RCS: that same Artistic Licence; a copy of which may be found at the root
X?RCS: of the source tree for dist 3.0.
X?RCS:
X?RCS: $Log: Inlibc.U,v $
X?RCS: Revision 3.0  1993/08/18  12:05:03  ram
X?RCS: Baseline for dist 3.0 netwide release.
X?RCS:
X?X:
X?X: This unit checks for the definition of a given function.
X?X:
X?X: To use it, say:
X?X: set function d_func
X?X: eval $inlibc
X?X:
X?MAKE:Inlibc: Csym Whoa Oldconfig
X?MAKE:	-pick add $@ %<
X?LINT:define inlibc
X?LINT:use libc
X?V:inlibc
X?S:inlibc:
X?S:	This shell variable is used internally by Configure to check
X?S:	wether a given function is defined or not. A typical use is:
X?S:		set function d_func
X?S:		eval $inlibc
X?S:	That will print a message, saying wether function was found or
X?S:	not and set d_func accordingly.
X?S:.
X?T:was tx sym tres td tu var
X: define an is-in-libc? function
Xinlibc='echo " "; td=$define; tu=$undef;
Xsym=$1; var=$2; eval "was=\$$2";
Xtx=yes;
Xcase "$reuseval$was" in
Xtrue) ;;
Xtrue*) tx=no;;
Xesac;
Xcase "$tx" in
Xyes)
X	set $sym tres -f;
X	eval $csym;
X	case "$tres" in
X	true)
X		echo "$sym() found." >&4;
X		case "$was" in $undef) . whoa; esac; eval "$var=\$td";;
X	*)
X		echo "$sym() NOT found." >&4;
X		case "$was" in $define) . whoa; esac; eval "$var=\$tu";;
X	esac;;
X*)
X	case "$was" in
X	$define) echo "$sym() found." >&4;;
X	*) echo "$sym() NOT found." >&4;;
X	esac;;
Xesac'
X
END_OF_FILE
  if test 1672 -ne `wc -c <'mcon/U/Inlibc.U'`; then
    echo shar: \"'mcon/U/Inlibc.U'\" unpacked with wrong size!
  fi
  # end of 'mcon/U/Inlibc.U'
fi
if test -f 'mcon/U/active.U' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'mcon/U/active.U'\"
else
  echo shar: Extracting \"'mcon/U/active.U'\" \(1624 characters\)
  sed "s/^X//" >'mcon/U/active.U' <<'END_OF_FILE'
X?RCS: $Id: active.U,v 3.0 1993/08/18 12:05:21 ram Exp $
X?RCS:
X?RCS: Copyright (c) 1991-1993, Raphael Manfredi
X?RCS: 
X?RCS: You may redistribute only under the terms of the Artistic Licence,
X?RCS: as specified in the README file that comes with the distribution.
X?RCS: You may reuse parts of this distribution only within the terms of
X?RCS: that same Artistic Licence; a copy of which may be found at the root
X?RCS: of the source tree for dist 3.0.
X?RCS:
X?RCS: $Log: active.U,v $
X?RCS: Revision 3.0  1993/08/18  12:05:21  ram
X?RCS: Baseline for dist 3.0 netwide release.
X?RCS:
X?MAKE:active activeexp: newslib Oldconfig Getfile
X?MAKE:	-pick add $@ %<
X?S:active:
X?S:	The name of the active file for the news system.  This file contains
X?S:	the list of active newsgroups.  The name may have ~ on the front.
X?S:	The variable myactive is the expanded form.
X?S:.
X?S:activeexp (myactive):
X?S:	This is the same as the active variable, but is filename expanded
X?S:	so that later Configure units can look at the active file if desired.
X?S:.
X?C:ACTIVE:
X?C:	The name of the active file for the news system.  This file contains
X?C:	the list of active newsgroups.  The name may have ~ on the front.
X?C:.
X?C:ACTIVE_EXP:
X?C:	This is the same as ACTIVE, but is filename expanded at configuration
X?C:	time, for programs that do not want to deal with it themselves.
X?C:.
X?H:#define ACTIVE "$active"	/**/
X?H:#define ACTIVE_EXP "$activeexp"	/**/
X?H:.
X: locate active file
Xecho " "
Xcase "$active" in
X'')
X	dflt=$newslib/active
X	;;
X*)  dflt="$active";;
Xesac
Xfn=l~:active
Xrp='Where is the active file?'
X. ./getfile
Xactive="$ans"
Xactiveexp="$ansexp"
X
END_OF_FILE
  if test 1624 -ne `wc -c <'mcon/U/active.U'`; then
    echo shar: \"'mcon/U/active.U'\" unpacked with wrong size!
  fi
  # end of 'mcon/U/active.U'
fi
if test -f 'mcon/U/d_charsprf.U' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'mcon/U/d_charsprf.U'\"
else
  echo shar: Extracting \"'mcon/U/d_charsprf.U'\" \(1565 characters\)
  sed "s/^X//" >'mcon/U/d_charsprf.U' <<'END_OF_FILE'
X?RCS: $Id: d_charsprf.U,v 3.0 1993/08/18 12:05:49 ram Exp $
X?RCS:
X?RCS: Copyright (c) 1991-1993, Raphael Manfredi
X?RCS: 
X?RCS: You may redistribute only under the terms of the Artistic Licence,
X?RCS: as specified in the README file that comes with the distribution.
X?RCS: You may reuse parts of this distribution only within the terms of
X?RCS: that same Artistic Licence; a copy of which may be found at the root
X?RCS: of the source tree for dist 3.0.
X?RCS:
X?RCS: $Log: d_charsprf.U,v $
X?RCS: Revision 3.0  1993/08/18  12:05:49  ram
X?RCS: Baseline for dist 3.0 netwide release.
X?RCS:
X?MAKE:d_charsprf: cat rm +cc Setvar
X?MAKE:	-pick add $@ %<
X?S:d_charsprf:
X?S:	This variable conditionally defines CHARSPRINTF if this system
X?S:	declares "char *sprintf()" in stdio.h.  The trend seems to be to
X?S:	declare it as "int sprintf()".
X?S:.
X?C:CHARSPRINTF:
X?C:	This symbol is defined if this system declares "char *sprintf()" in
X?C:	stdio.h.  The trend seems to be to declare it as "int sprintf()".  It
X?C:	is up to the package author to declare sprintf correctly based on the
X?C:	symbol.
X?C:.
X?H:#$d_charsprf	CHARSPRINTF 	/**/
X?H:.
X?LINT:set d_charsprf
X: see if sprintf is declared as int or pointer to char
Xecho " "
X$cat >ucbsprf.c <<'EOF'
Xmain()
X{
X	int sprintf();
X	char buf[10];
X	exit((unsigned long)sprintf(buf,"%s","foo") > 10L);
X}
XEOF
Xif $cc ucbsprf.c -o ucbsprf >/dev/null 2>&1 && ./ucbsprf; then
X	echo "Your sprintf() returns (int)." >&4
X	val="$undef"
Xelse
X	echo "Your sprintf() returns (char*)." >&4
X	val="$define"
Xfi
Xset d_charsprf
Xeval $setvar
X$rm -f ucbsprf*
X
END_OF_FILE
  if test 1565 -ne `wc -c <'mcon/U/d_charsprf.U'`; then
    echo shar: \"'mcon/U/d_charsprf.U'\" unpacked with wrong size!
  fi
  # end of 'mcon/U/d_charsprf.U'
fi
if test -f 'mcon/U/d_ckeypad.U' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'mcon/U/d_ckeypad.U'\"
else
  echo shar: Extracting \"'mcon/U/d_ckeypad.U'\" \(1627 characters\)
  sed "s/^X//" >'mcon/U/d_ckeypad.U' <<'END_OF_FILE'
X?RCS: $Id: d_ckeypad.U,v 3.0 1993/08/18 12:05:50 ram Exp $
X?RCS:
X?RCS: Copyright (c) 1991-1993, Raphael Manfredi
X?RCS: 
X?RCS: You may redistribute only under the terms of the Artistic Licence,
X?RCS: as specified in the README file that comes with the distribution.
X?RCS: You may reuse parts of this distribution only within the terms of
X?RCS: that same Artistic Licence; a copy of which may be found at the root
X?RCS: of the source tree for dist 3.0.
X?RCS:
X?RCS: $Log: d_ckeypad.U,v $
X?RCS: Revision 3.0  1993/08/18  12:05:50  ram
X?RCS: Baseline for dist 3.0 netwide release.
X?RCS:
X?MAKE:d_ckeypad: cat cc termlib Setvar
X?MAKE:	-pick add $@ %<
X?S:d_ckeypad:
X?S:	This variable controls the definition of HAS_CURSES_KEYPAD,
X?S:	which tells the application that the keypad() curses function
X?S:	is available.
X?S:.
X?C:HAS_CURSES_KEYPAD:
X?C:	This symbol indicates the availability of the keypad() function
X?C:	of the curses library.
X?C:.
X?H:#$d_ckeypad HAS_CURSES_KEYPAD	/**/
X?H:.
X?LINT:set d_ckeypad
X: check for the keypad() function in the curses library
Xecho " "
Xcase "$termlib" in
X'')
X	echo "You don't have a curses library, so I won't waste time looking" >&4
X	echo "to see if has the keypad() function." >&4
X*)
Xecho "Checking the curses library ($termlib) for the keypad() function..." >&4
X	$cat >c_keypad.c <<'EOCP'
X#include <curses.h>
Xmain() {
X	keypad(stdscr, TRUE);
X	exit(0);
X}
XEOCP
X	if $cc c_keypad.c >c_keypad.out 2>&1 ; then
X		val=$define
X		echo "It appears to have the keypad() function."
X	else
X		val=$undef
X		echo "Your curses library doesn't appear to have the keypad() function."
X	fi
Xesac
Xset d_ckeypad
Xeval $setvar
X
END_OF_FILE
  if test 1627 -ne `wc -c <'mcon/U/d_ckeypad.U'`; then
    echo shar: \"'mcon/U/d_ckeypad.U'\" unpacked with wrong size!
  fi
  # end of 'mcon/U/d_ckeypad.U'
fi
if test -f 'mcon/U/d_htonl.U' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'mcon/U/d_htonl.U'\"
else
  echo shar: Extracting \"'mcon/U/d_htonl.U'\" \(1723 characters\)
  sed "s/^X//" >'mcon/U/d_htonl.U' <<'END_OF_FILE'
X?RCS: $Id: d_htonl.U,v 3.0 1993/08/18 12:06:22 ram Exp $
X?RCS:
X?RCS: Copyright (c) 1991-1993, Raphael Manfredi
X?RCS: 
X?RCS: You may redistribute only under the terms of the Artistic Licence,
X?RCS: as specified in the README file that comes with the distribution.
X?RCS: You may reuse parts of this distribution only within the terms of
X?RCS: that same Artistic Licence; a copy of which may be found at the root
X?RCS: of the source tree for dist 3.0.
X?RCS:
X?RCS: $Log: d_htonl.U,v $
X?RCS: Revision 3.0  1993/08/18  12:06:22  ram
X?RCS: Baseline for dist 3.0 netwide release.
X?RCS:
X?MAKE:d_htonl: Inlibc
X?MAKE:	-pick add $@ %<
X?S:d_htonl:
X?S:	This variable conditionally defines HAS_HTONL if htonl() and its
X?S:	friends are available to do network order byte swapping.
X?S:.
X?C:HAS_HTONL (HTONL):
X?C:	This symbol, if defined, indicates that the htonl() routine (and
X?C:	friends htons() ntohl() ntohs()) are available to do network
X?C:	order byte swapping.
X?C:.
X?C:HAS_HTONS (HTONS):
X?C:	This symbol, if defined, indicates that the htons() routine (and
X?C:	friends htonl() ntohl() ntohs()) are available to do network
X?C:	order byte swapping.
X?C:.
X?C:HAS_NTOHL (NTOHL):
X?C:	This symbol, if defined, indicates that the ntohl() routine (and
X?C:	friends htonl() htons() ntohs()) are available to do network
X?C:	order byte swapping.
X?C:.
X?C:HAS_NTOHS (NTOHS):
X?C:	This symbol, if defined, indicates that the ntohs() routine (and
X?C:	friends htonl() htons() ntohl()) are available to do network
X?C:	order byte swapping.
X?C:.
X?H:#$d_htonl HAS_HTONL		/**/
X?H:#$d_htonl HAS_HTONS		/**/
X?H:#$d_htonl HAS_NTOHL		/**/
X?H:#$d_htonl HAS_NTOHS		/**/
X?H:.
X?LINT:set d_htonl
X: see if htonl --and friends-- exists
Xset htonl d_htonl
Xeval $inlibc
X
END_OF_FILE
  if test 1723 -ne `wc -c <'mcon/U/d_htonl.U'`; then
    echo shar: \"'mcon/U/d_htonl.U'\" unpacked with wrong size!
  fi
  # end of 'mcon/U/d_htonl.U'
fi
if test -f 'mcon/U/d_internet.U' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'mcon/U/d_internet.U'\"
else
  echo shar: Extracting \"'mcon/U/d_internet.U'\" \(1624 characters\)
  sed "s/^X//" >'mcon/U/d_internet.U' <<'END_OF_FILE'
X?RCS: $Id: d_internet.U,v 3.0 1993/08/18 12:06:24 ram Exp $
X?RCS:
X?RCS: Copyright (c) 1991-1993, Raphael Manfredi
X?RCS: 
X?RCS: You may redistribute only under the terms of the Artistic Licence,
X?RCS: as specified in the README file that comes with the distribution.
X?RCS: You may reuse parts of this distribution only within the terms of
X?RCS: that same Artistic Licence; a copy of which may be found at the root
X?RCS: of the source tree for dist 3.0.
X?RCS:
X?RCS: $Log: d_internet.U,v $
X?RCS: Revision 3.0  1993/08/18  12:06:24  ram
X?RCS: Baseline for dist 3.0 netwide release.
X?RCS:
X?MAKE:d_internet: Myread Oldconfig Setvar mailer
X?MAKE:	-pick add $@ %<
X?S:d_internet:
X?S:	This variable conditionally defines the INTERNET symbol, which
X?S:	indicates to the C program that there is a mailer available which
X?S:	supports internet-style addresses (user@site.domain).
X?S:.
X?C:INTERNET:
X?C:	This symbol, if defined, indicates that there is a mailer available
X?C:	which supports internet-style addresses (user@site.domain).
X?C:.
X?H:#$d_internet	INTERNET	/**/
X?H:.
X?LINT:set d_internet
X: check for internet mailer
Xcase "$d_internet" in
X"$define") dflt=y;;
X"$undef")	dflt=n;;
X*)
X	dflt=n
X	case "$mailer" in
X	*sendmail*) dflt=y;;
X	*smail*) dflt=y;;
X	esac
X	;;
Xesac
Xcat <<EOM
X 
XSome newer mailers can deliver mail to addresses of the INTERNET persuasion,
Xsuch as user@host.UUCP.  Other older mailers require the complete path to
Xthe destination to be specified in the address.
X
XEOM
Xrp="Does your mailer understand INTERNET addresses?"
X. ./myread
Xcase "$ans" in
Xy*) val="$define";;
X*)  val="$undef";;
Xesac
Xset d_internet
Xeval $setvar
X
END_OF_FILE
  if test 1624 -ne `wc -c <'mcon/U/d_internet.U'`; then
    echo shar: \"'mcon/U/d_internet.U'\" unpacked with wrong size!
  fi
  # end of 'mcon/U/d_internet.U'
fi
if test -f 'mcon/U/d_raster.U' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'mcon/U/d_raster.U'\"
else
  echo shar: Extracting \"'mcon/U/d_raster.U'\" \(1541 characters\)
  sed "s/^X//" >'mcon/U/d_raster.U' <<'END_OF_FILE'
X?RCS: $Id: d_raster.U,v 3.0 1993/08/18 12:06:50 ram Exp $
X?RCS:
X?RCS: Copyright (c) 1991-1993, Raphael Manfredi
X?RCS: 
X?RCS: You may redistribute only under the terms of the Artistic Licence,
X?RCS: as specified in the README file that comes with the distribution.
X?RCS: You may reuse parts of this distribution only within the terms of
X?RCS: that same Artistic Licence; a copy of which may be found at the root
X?RCS: of the source tree for dist 3.0.
X?RCS:
X?RCS: $Log: d_raster.U,v $
X?RCS: Revision 3.0  1993/08/18  12:06:50  ram
X?RCS: Baseline for dist 3.0 netwide release.
X?RCS:
X?MAKE:d_raster rasterlib: cat test Setvar Myread Oldconfig
X?MAKE:	-pick add $@ %<
X?S:d_raster:
X?S:	Conditionally defines RASTER_TEK if this is a raster tech machine.
X?S:.
X?S:rasterlib (d_rasterlib):
X?S:	Set to the needed compile flag if this is a raster tech machine.
X?S:	It is up to the Makefile to use this variable.
X?S:.
X?C:RASTER_TEK:
X?C:	Defined if this is a rastertech machine.
X?C:.
X?H:#$d_raster RASTER_TEK /**/
X?H:.
X?LINT:set d_raster
X: See if this is a raster tech machine.
Xval="$undef"
Xrasterlib=''
Xif $test -r /dev/mirage; then
X	$cat <<'EOM'
X
XYou seem to have a mirage device... this is normally associated with a raster
Xtechnologies graphics workstation. If this is right, you may want to use raster
Xtech in this program.
X
XEOM
X	dflt=y
X	case "$d_raster" in
X	"$undef") dflt=n;;
X	esac
X	rp='Use raster tech?'
X	. ./myread
X	case "$ans" in
X	y*) val="$define";;
X	esac
Xfi
Xset d_raster
Xeval $setvar
X
Xcase "$d_raster" in
X"$define") rasterlib='-lphigs';;
Xesac
X
END_OF_FILE
  if test 1541 -ne `wc -c <'mcon/U/d_raster.U'`; then
    echo shar: \"'mcon/U/d_raster.U'\" unpacked with wrong size!
  fi
  # end of 'mcon/U/d_raster.U'
fi
if test -f 'mcon/U/d_setregid.U' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'mcon/U/d_setregid.U'\"
else
  echo shar: Extracting \"'mcon/U/d_setregid.U'\" \(1575 characters\)
  sed "s/^X//" >'mcon/U/d_setregid.U' <<'END_OF_FILE'
X?RCS: $Id: d_setregid.U,v 3.0 1993/08/18 12:07:12 ram Exp $
X?RCS:
X?RCS: Copyright (c) 1991-1993, Raphael Manfredi
X?RCS: 
X?RCS: You may redistribute only under the terms of the Artistic Licence,
X?RCS: as specified in the README file that comes with the distribution.
X?RCS: You may reuse parts of this distribution only within the terms of
X?RCS: that same Artistic Licence; a copy of which may be found at the root
X?RCS: of the source tree for dist 3.0.
X?RCS:
X?RCS: $Log: d_setregid.U,v $
X?RCS: Revision 3.0  1993/08/18  12:07:12  ram
X?RCS: Baseline for dist 3.0 netwide release.
X?RCS:
X?MAKE:d_setregid d_setresgid: Inlibc
X?MAKE:	-pick add $@ %<
X?S:d_setregid:
X?S:	This variable conditionally defines HAS_SETREGID if setregid() is
X?S:	available to change the real and effective gid of the current
X?S:	process.
X?S:.
X?S:d_setresgid:
X?S:	This variable conditionally defines HAS_SETRESGID if setresgid() is
X?S:	available to change the real, effective and saved gid of the current
X?S:	process.
X?S:.
X?C:HAS_SETREGID (SETREGID):
X?C:	This symbol, if defined, indicates that the setregid routine is
X?C:	available to change the real and effective gid of the current
X?C:	process.
X?C:.
X?C:HAS_SETRESGID (SETRESGID):
X?C:	This symbol, if defined, indicates that the setresgid routine is
X?C:	available to change the real, effective and saved gid of the current
X?C:	process.
X?C:.
X?H:#$d_setregid HAS_SETREGID		/**/
X?H:#$d_setresgid HAS_SETRESGID		/**/
X?H:.
X?LINT: set d_setregid d_setresgid
X: see if setregid exists
Xset setregid d_setregid
Xeval $inlibc
Xset setresgid d_setresgid
Xeval $inlibc
X
END_OF_FILE
  if test 1575 -ne `wc -c <'mcon/U/d_setregid.U'`; then
    echo shar: \"'mcon/U/d_setregid.U'\" unpacked with wrong size!
  fi
  # end of 'mcon/U/d_setregid.U'
fi
if test -f 'mcon/U/d_setreuid.U' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'mcon/U/d_setreuid.U'\"
else
  echo shar: Extracting \"'mcon/U/d_setreuid.U'\" \(1573 characters\)
  sed "s/^X//" >'mcon/U/d_setreuid.U' <<'END_OF_FILE'
X?RCS: $Id: d_setreuid.U,v 3.0 1993/08/18 12:07:13 ram Exp $
X?RCS:
X?RCS: Copyright (c) 1991-1993, Raphael Manfredi
X?RCS: 
X?RCS: You may redistribute only under the terms of the Artistic Licence,
X?RCS: as specified in the README file that comes with the distribution.
X?RCS: You may reuse parts of this distribution only within the terms of
X?RCS: that same Artistic Licence; a copy of which may be found at the root
X?RCS: of the source tree for dist 3.0.
X?RCS:
X?RCS: $Log: d_setreuid.U,v $
X?RCS: Revision 3.0  1993/08/18  12:07:13  ram
X?RCS: Baseline for dist 3.0 netwide release.
X?RCS:
X?MAKE:d_setreuid d_setresuid: Inlibc
X?MAKE:	-pick add $@ %<
X?S:d_setreuid:
X?S:	This variable conditionally defines HAS_SETREUID if setreuid() is
X?S:	available to change the real and effective uid of the current
X?S:	process.
X?S:.
X?S:d_setresuid:
X?S:	This variable conditionally defines HAS_SETREUID if setresuid() is
X?S:	available to change the real, effective and saved uid of the current
X?S:	process.
X?S:.
X?C:HAS_SETREUID (SETREUID):
X?C:	This symbol, if defined, indicates that the setreuid routine is
X?C:	available to change the real and effective uid of the current
X?C:	process.
X?C:.
X?C:HAS_SETRESUID (SETRESUID):
X?C:	This symbol, if defined, indicates that the setresuid routine is
X?C:	available to change the real, effective and saved uid of the current
X?C:	process.
X?C:.
X?H:#$d_setreuid HAS_SETREUID		/**/
X?H:#$d_setresuid HAS_SETRESUID		/**/
X?H:.
X?LINT:set d_setreuid d_setresuid
X: see if setreuid exists
Xset setreuid d_setreuid
Xeval $inlibc
Xset setresuid d_setresuid
Xeval $inlibc
X
END_OF_FILE
  if test 1573 -ne `wc -c <'mcon/U/d_setreuid.U'`; then
    echo shar: \"'mcon/U/d_setreuid.U'\" unpacked with wrong size!
  fi
  # end of 'mcon/U/d_setreuid.U'
fi
if test -f 'mcon/U/d_tzmin.U' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'mcon/U/d_tzmin.U'\"
else
  echo shar: Extracting \"'mcon/U/d_tzmin.U'\" \(1705 characters\)
  sed "s/^X//" >'mcon/U/d_tzmin.U' <<'END_OF_FILE'
X?RCS: $Id: d_tzmin.U,v 3.0 1993/08/18 12:07:49 ram Exp $
X?RCS:
X?RCS: Copyright (c) 1991-1993, Raphael Manfredi
X?RCS: 
X?RCS: You may redistribute only under the terms of the Artistic Licence,
X?RCS: as specified in the README file that comes with the distribution.
X?RCS: You may reuse parts of this distribution only within the terms of
X?RCS: that same Artistic Licence; a copy of which may be found at the root
X?RCS: of the source tree for dist 3.0.
X?RCS:
X?RCS: $Log: d_tzmin.U,v $
X?RCS: Revision 3.0  1993/08/18  12:07:49  ram
X?RCS: Baseline for dist 3.0 netwide release.
X?RCS:
X?MAKE:d_tzmin: contains cppstdin cppminus timeincl rm Setvar Guess
X?MAKE:	-pick add $@ %<
X?S:d_tzmin:
X?S:	This symbol conditionally defines TZ_MINUTESWEST if the system uses
X?S:	tz_minuteswest in time header instead of timezone.
X?S:.
X?C:TZ_MINUTESWEST:
X?C:	This symbol is defined if this system uses tz_minuteswest
X?C:	in time header instead of timezone.
X?C: If not defined, you may have to use struct timeb and ftime() rather
X?C:	than the new gettimeofday() system call.
X?C:.
X?H:#$d_tzmin TZ_MINUTESWEST		/**/
X?H:.
X?LINT:set d_tzmin
X: see if tz_minuteswest is defined in time header
Xecho " "
Xval="$undef"
X$cppstdin $cppminus < $timeincl > try 2>&1
Xif $contains 'tz_minuteswest' try >/dev/null 2>&1; then
Xecho "You have tz_minuteswest defined in $timeincl rather than timezone." >&4
X	val="$define"
Xelif $contains 'timezone' try >/dev/null 2>&1; then
Xecho "You have timezone defined in $timeincl rather than tz_minuteswest." >&4
Xelse
X	echo "Your $timeincl file looks strange." >&4
Xfi
Xif bsd; then
X	case "$d_tzmin" in
X	"$undef") echo "(Maybe your system is an USG one after all?)";;
X	esac
Xfi
Xset d_tzmin
Xeval $setvar
X$rm -f try
X
END_OF_FILE
  if test 1705 -ne `wc -c <'mcon/U/d_tzmin.U'`; then
    echo shar: \"'mcon/U/d_tzmin.U'\" unpacked with wrong size!
  fi
  # end of 'mcon/U/d_tzmin.U'
fi
if test -f 'mcon/U/gidtype.U' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'mcon/U/gidtype.U'\"
else
  echo shar: Extracting \"'mcon/U/gidtype.U'\" \(1557 characters\)
  sed "s/^X//" >'mcon/U/gidtype.U' <<'END_OF_FILE'
X?RCS: $Id: gidtype.U,v 3.0 1993/08/18 12:08:11 ram Exp $
X?RCS:
X?RCS: Copyright (c) 1991-1993, Raphael Manfredi
X?RCS: 
X?RCS: You may redistribute only under the terms of the Artistic Licence,
X?RCS: as specified in the README file that comes with the distribution.
X?RCS: You may reuse parts of this distribution only within the terms of
X?RCS: that same Artistic Licence; a copy of which may be found at the root
X?RCS: of the source tree for dist 3.0.
X?RCS:
X?RCS: $Log: gidtype.U,v $
X?RCS: Revision 3.0  1993/08/18  12:08:11  ram
X?RCS: Baseline for dist 3.0 netwide release.
X?RCS:
X?MAKE:gidtype: Myread Oldconfig contains Findhdr
X?MAKE:	-pick add $@ %<
X?S:gidtype:
X?S:	This variable defines GIDTYPE to be something like gid_t, int, 
X?S:	ushort, or whatever type is used to declare group ids in the kernel.
X?S:.
X?C:Gid_t (GIDTYPE):
X?C:	This symbol holds the type used to declare user ids in the kernel.
X?C:	It can be int, ushort, uid_t, etc... It may be necessary to include
X?C:	<sys/types.h> to get any typedef'ed information.
X?C:.
X?H:#define Gid_t $gidtype		/* Type for getgid(), etc... */
X?H:.
X?T:xxx
X: see what type gids are declared as in the kernel
Xcase "$gidtype" in
X'')
X	if $contains 'gid_t;' `./findhdr sys/types.h` >/dev/null 2>&1 ; then
X		dflt='gid_t';
X	else
X		xxx=`./findhdr sys/user.h`
X		set `grep 'groups\[NGROUPS\];' "$xxx" 2>/dev/null` unsigned short
X		case $1 in
X		unsigned) dflt="$1 $2" ;;
X		*) dflt="$1" ;;
X		esac
X	fi
X	;;
X*)  dflt="$gidtype";;
Xesac
Xecho " "
Xrp="What type are group ids on this system declared as?"
X. ./myread
Xgidtype="$ans"
X
END_OF_FILE
  if test 1557 -ne `wc -c <'mcon/U/gidtype.U'`; then
    echo shar: \"'mcon/U/gidtype.U'\" unpacked with wrong size!
  fi
  # end of 'mcon/U/gidtype.U'
fi
if test -f 'mcon/U/i_fcntl.U' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'mcon/U/i_fcntl.U'\"
else
  echo shar: Extracting \"'mcon/U/i_fcntl.U'\" \(1639 characters\)
  sed "s/^X//" >'mcon/U/i_fcntl.U' <<'END_OF_FILE'
X?RCS: $Id: i_fcntl.U,v 3.0 1993/08/18 12:08:18 ram Exp $
X?RCS:
X?RCS: Copyright (c) 1991-1993, Raphael Manfredi
X?RCS: 
X?RCS: You may redistribute only under the terms of the Artistic Licence,
X?RCS: as specified in the README file that comes with the distribution.
X?RCS: You may reuse parts of this distribution only within the terms of
X?RCS: that same Artistic Licence; a copy of which may be found at the root
X?RCS: of the source tree for dist 3.0.
X?RCS:
X?RCS: $Log: i_fcntl.U,v $
X?RCS: Revision 3.0  1993/08/18  12:08:18  ram
X?RCS: Baseline for dist 3.0 netwide release.
X?RCS:
X?MAKE:i_fcntl: h_fcntl h_sysfile +i_sysfile Inhdr Setvar
X?MAKE:	-pick add $@ %<
X?S:i_fcntl:
X?S:	This variable controls the value of I_FCNTL (which tells
X?S:	the C program to include <fcntl.h>).
X?S:.
X?C:I_FCNTL (HDR_O_STUFF FCNTL):
X?C:	This manifest constant tells the C program to include <fcntl.h>.
X?C:.
X?H:#$i_fcntl I_FCNTL	/**/
X?H:.
X?T:val
X?X: Make line lists +i_sysfile to ensure tests for <sys/file.h> will be
X?X: conducted prior tests for <fcntl.h>, hece making sure the h_sysfile
X?X: variable is correctly set when we reach that unit.
X?LINT:set i_fcntl
X?LINT:use i_sysfile
X?LINT:change h_fcntl
X: see if fcntl.h is there
Xval=''
Xset fcntl.h val
Xeval $inhdr
X
X: see if we can include fcntl.h
Xcase "$val" in
X"$define")
X	echo " "
X	if $h_fcntl; then
X		val="$define"
X		echo "We'll be including <fcntl.h>." >&4
X	else
X		val="$undef"
X		if $h_sysfile; then
X	echo "We don't need to include <fcntl.h> if we include <sys/file.h>." >&4
X		else
X			echo "We won't be including <fcntl.h>." >&4
X		fi
X	fi
X	;;
X*)
X	h_fcntl=false
X	val="$undef"
X	;;
Xesac
Xset i_fcntl
Xeval $setvar
X
END_OF_FILE
  if test 1639 -ne `wc -c <'mcon/U/i_fcntl.U'`; then
    echo shar: \"'mcon/U/i_fcntl.U'\" unpacked with wrong size!
  fi
  # end of 'mcon/U/i_fcntl.U'
fi
if test -f 'mcon/U/i_niin.U' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'mcon/U/i_niin.U'\"
else
  echo shar: Extracting \"'mcon/U/i_niin.U'\" \(1549 characters\)
  sed "s/^X//" >'mcon/U/i_niin.U' <<'END_OF_FILE'
X?RCS: $Id: i_niin.U,v 3.0 1993/08/18 12:08:24 ram Exp $
X?RCS:
X?RCS: Copyright (c) 1991-1993, Raphael Manfredi
X?RCS: 
X?RCS: You may redistribute only under the terms of the Artistic Licence,
X?RCS: as specified in the README file that comes with the distribution.
X?RCS: You may reuse parts of this distribution only within the terms of
X?RCS: that same Artistic Licence; a copy of which may be found at the root
X?RCS: of the source tree for dist 3.0.
X?RCS:
X?RCS: $Log: i_niin.U,v $
X?RCS: Revision 3.0  1993/08/18  12:08:24  ram
X?RCS: Baseline for dist 3.0 netwide release.
X?RCS:
X?X:
X?X: This unit looks wether <netinet/in.h> is available or not
X?X:
X?MAKE:i_niin i_sysin: Inhdr
X?MAKE:	-pick add $@ %<
X?S:i_niin:
X?S:	This variable conditionally defines I_NETINET_IN, which indicates
X?S:	to the C program that it should include <netinet/in.h>. Otherwise,
X?S: you may try <sys/in.h>.
X?S:.
X?S:i_sysin:
X?S:	This variable conditionally defines I_SYS_IN, which indicates
X?S:	to the C program that it should include <sys/in.h> instead of
X?S: <netinet/in.h>.
X?S:.
X?C:I_NETINET_IN:
X?C:	This symbol, if defined, indicates to the C program that it should
X?C:	include <netinet/in.h>. Otherwise, you may try <sys/in.h>.
X?C:.
X?C:I_SYS_IN (I_SYSIN):
X?C:	This symbol, if defined, indicates to the C program that it should
X?C:	include <sys/in.h> instead of <netinet/in.h>.
X?C:.
X?H:#$i_niin I_NETINET_IN	/**/
X?H:#$i_sysin I_SYS_IN		/**/
X?H:.
X?LINT:set i_niin i_sysin
X: see if this is a netinet/in.h or sys/in.h system
Xset netinet/in.h i_niin sys/in.h i_sysin
Xeval $inhdr
X
END_OF_FILE
  if test 1549 -ne `wc -c <'mcon/U/i_niin.U'`; then
    echo shar: \"'mcon/U/i_niin.U'\" unpacked with wrong size!
  fi
  # end of 'mcon/U/i_niin.U'
fi
if test -f 'mcon/U/i_syssock.U' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'mcon/U/i_syssock.U'\"
else
  echo shar: Extracting \"'mcon/U/i_syssock.U'\" \(1111 characters\)
  sed "s/^X//" >'mcon/U/i_syssock.U' <<'END_OF_FILE'
X?RCS: $Id: i_syssock.U,v 3.0 1993/08/18 12:08:36 ram Exp $
X?RCS:
X?RCS: Copyright (c) 1991-1993, Raphael Manfredi
X?RCS: 
X?RCS: You may redistribute only under the terms of the Artistic Licence,
X?RCS: as specified in the README file that comes with the distribution.
X?RCS: You may reuse parts of this distribution only within the terms of
X?RCS: that same Artistic Licence; a copy of which may be found at the root
X?RCS: of the source tree for dist 3.0.
X?RCS:
X?RCS: $Log: i_syssock.U,v $
X?RCS: Revision 3.0  1993/08/18  12:08:36  ram
X?RCS: Baseline for dist 3.0 netwide release.
X?RCS:
X?MAKE:i_syssock: Inhdr
X?MAKE:	-pick add $@ %<
X?S:i_syssock:
X?S:	This variable conditionally defines the I_SYS_SOCKET symbol, and indicates
X?S:	whether a C program should include <sys/socket.h> before performing socket
X?S: operations.
X?S:.
X?C:I_SYS_SOCKET:
X?C:	This symbol, if defined, indicates to the C program that it should
X?C:	include <sys/socket.h> before performing socket calls.
X?C:.
X?H:#$i_syssock I_SYS_SOCKET		/**/
X?H:.
X?LINT:set i_syssock
X: see if this is a sys/socket.h system
Xset sys/socket.h i_syssock
Xeval $inhdr
X
END_OF_FILE
  if test 1111 -ne `wc -c <'mcon/U/i_syssock.U'`; then
    echo shar: \"'mcon/U/i_syssock.U'\" unpacked with wrong size!
  fi
  # end of 'mcon/U/i_syssock.U'
fi
if test -f 'mcon/U/libpth.U' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'mcon/U/libpth.U'\"
else
  echo shar: Extracting \"'mcon/U/libpth.U'\" \(1626 characters\)
  sed "s/^X//" >'mcon/U/libpth.U' <<'END_OF_FILE'
X?RCS: $Id: libpth.U,v 3.0 1993/08/18 12:09:02 ram Exp $
X?RCS:
X?RCS: Copyright (c) 1991-1993, Raphael Manfredi
X?RCS: 
X?RCS: You may redistribute only under the terms of the Artistic Licence,
X?RCS: as specified in the README file that comes with the distribution.
X?RCS: You may reuse parts of this distribution only within the terms of
X?RCS: that same Artistic Licence; a copy of which may be found at the root
X?RCS: of the source tree for dist 3.0.
X?RCS:
X?RCS: $Log: libpth.U,v $
X?RCS: Revision 3.0  1993/08/18  12:09:02  ram
X?RCS: Baseline for dist 3.0 netwide release.
X?RCS:
X?X:
X?X:	This unit initializes the path for C library lookup.
X?X:
X?MAKE:libpth xlibpth plibpth: mips incpath
X?MAKE:	-pick add $@ %<
X?S:libpth:
X?S:	This variable holds the general path used to find libraries. It is
X?S:	intended to be used by other units.
X?S:.
X?S:plibpth:
X?S:	Holds the private path used by Configure to find out the libraries.
X?S:	Its value is prepend to libpth. This variable takes care of special
X?S:	machines, like the mips.
X?S:.
X?INIT:: change the next line if compiling for Xenix/286 on Xenix/386
X?INIT:xlibpth='/usr/lib/386 /lib/386'
X?INIT:
X?INIT:: general looking path for locating libraries
X?INIT:libpth='/usr/lib/large /lib '$xlibpth' /lib/large'
X?INIT:libpth=$libpth' /usr/lib/small /lib/small'
X?INIT:
X?LINT:describe xlibpth
X?LINT:use mips
X: Set private lib path
Xcase "$plibpth" in
X'') if mips; then
X?X: on mips, we DO NOT want /lib, and we want $incpath/usr/lib
X		plibpth="$incpath/usr/lib /usr/local/lib /usr/ccs/lib"
X	else
X		plibpth="/usr/ccs/lib /usr/lib /usr/ucblib /usr/local/lib"
X	fi;;
Xesac
Xlibpth="$plibpth $libpth"
X
END_OF_FILE
  if test 1626 -ne `wc -c <'mcon/U/libpth.U'`; then
    echo shar: \"'mcon/U/libpth.U'\" unpacked with wrong size!
  fi
  # end of 'mcon/U/libpth.U'
fi
if test -f 'mcon/U/mailer.U' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'mcon/U/mailer.U'\"
else
  echo shar: Extracting \"'mcon/U/mailer.U'\" \(1617 characters\)
  sed "s/^X//" >'mcon/U/mailer.U' <<'END_OF_FILE'
X?RCS: $Id: mailer.U,v 3.0 1993/08/18 12:09:10 ram Exp $
X?RCS:
X?RCS: Copyright (c) 1991-1993, Raphael Manfredi
X?RCS: 
X?RCS: You may redistribute only under the terms of the Artistic Licence,
X?RCS: as specified in the README file that comes with the distribution.
X?RCS: You may reuse parts of this distribution only within the terms of
X?RCS: that same Artistic Licence; a copy of which may be found at the root
X?RCS: of the source tree for dist 3.0.
X?RCS:
X?RCS: $Log: mailer.U,v $
X?RCS: Revision 3.0  1993/08/18  12:09:10  ram
X?RCS: Baseline for dist 3.0 netwide release.
X?RCS:
X?MAKE:mailer: test cat rmail mail smail sendmail Getfile Oldconfig
X?MAKE:	-pick add $@ %<
X?S:mailer:
X?S:	This variable contains the full pathname of a reasonable mailer.
X?S:	By reasonable, we mean some program which can understand internet
X?S:	addresses or at least forward them to some internet router. This
X?S:	mailer should be invoked as "mailer [options] recipients <mail".
X?S:.
X: determine the name of a reasonable mailer
Xcase "$mailer" in
X'')
X	if $test -f "$sendmail"; then
X		dflt="$sendmail"
X	elif $test -f "$smail"; then
X		dflt="$smail"
X	elif $test -f "$rmail"; then
X		dflt="$rmail"
X	elif $test -f /bin/mail; then
X		dflt=/bin/mail
X	else
X		dflt=$mail
X	fi
X	;;
X*)  dflt="$mailer";;
Xesac
X$cat <<EOM
X
XI need the full pathname of the program used to deliver mail on your system.
XA typical answer would be /usr/lib/sendmail or /bin/rmail, but you may choose
Xany other program, as long as it can be fed from standard input and will
Xhonour any user-supplied headers.
X
XEOM
Xfn=f
Xrp='Mail transport agent to be used?'
X. ./getfile
Xmailer="$ans"
X
END_OF_FILE
  if test 1617 -ne `wc -c <'mcon/U/mailer.U'`; then
    echo shar: \"'mcon/U/mailer.U'\" unpacked with wrong size!
  fi
  # end of 'mcon/U/mailer.U'
fi
if test -f 'mcon/U/newslevel.U' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'mcon/U/newslevel.U'\"
else
  echo shar: Extracting \"'mcon/U/newslevel.U'\" \(1665 characters\)
  sed "s/^X//" >'mcon/U/newslevel.U' <<'END_OF_FILE'
X?RCS: $Id: newslevel.U,v 3.0 1993/08/18 12:09:21 ram Exp $
X?RCS:
X?RCS: Copyright (c) 1991-1993, Raphael Manfredi
X?RCS: 
X?RCS: You may redistribute only under the terms of the Artistic Licence,
X?RCS: as specified in the README file that comes with the distribution.
X?RCS: You may reuse parts of this distribution only within the terms of
X?RCS: that same Artistic Licence; a copy of which may be found at the root
X?RCS: of the source tree for dist 3.0.
X?RCS:
X?RCS: $Log: newslevel.U,v $
X?RCS: Revision 3.0  1993/08/18  12:09:21  ram
X?RCS: Baseline for dist 3.0 netwide release.
X?RCS:
X?MAKE:newslevel: cat contains test activeexp newslib Myread Oldconfig
X?MAKE:	-pick add $@ %<
X?S:newslevel: 
X?S:	The current revision level of the Usenet news system, encoded
X?S:	as 1000 * major rev + 10 * minor rev + sub rev.  For instance,
X?S:	news 2.10.3 is encode as 2103, and 2.11 as 2110.
X?S:.
X?C:NEWSLEVEL:
X?C:	The current revision level of the Usenet news system, encoded
X?C:	as 1000 * major rev + 10 * minor rev + sub rev.  For instance,
X?C:	news 2.10.3 is encode as 2103, and 2.11 as 2110.
X?C:.
X?H:#define NEWSLEVEL $newslevel	/**/
X?H:.
X: check for news version
Xif $test -f $activeexp; then
X	if ??? >/dev/null 2>&1; then
X		dflt=2110
X	elif $test -f $newslib/cunbatch; then
X		dflt=2103
X	elif $contains ' [0-9][0-9]* [0-9]' "$activeexp" >/dev/null 2>&1; then
X		dflt=2102
X	else
X		dflt=2101
X	fi
Xelse
X	dflt=$newslevel
Xfi
X$cat <<EOM
X
XThe following news version number is a multiplexed integer:
X	1000 * major rev + 10 * minor rev + sub rev.
XNews 2.10.3 would be 2103.  2.11 comes out as 2110.
X
XEOM
Xrp="What version of news are you going to be running?"
X. ./myread
Xnewslevel="$ans"
X
END_OF_FILE
  if test 1665 -ne `wc -c <'mcon/U/newslevel.U'`; then
    echo shar: \"'mcon/U/newslevel.U'\" unpacked with wrong size!
  fi
  # end of 'mcon/U/newslevel.U'
fi
if test -f 'mcon/U/newsspool.U' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'mcon/U/newsspool.U'\"
else
  echo shar: Extracting \"'mcon/U/newsspool.U'\" \(1648 characters\)
  sed "s/^X//" >'mcon/U/newsspool.U' <<'END_OF_FILE'
X?RCS: $Id: newsspool.U,v 3.0 1993/08/18 12:09:24 ram Exp $
X?RCS:
X?RCS: Copyright (c) 1991-1993, Raphael Manfredi
X?RCS: 
X?RCS: You may redistribute only under the terms of the Artistic Licence,
X?RCS: as specified in the README file that comes with the distribution.
X?RCS: You may reuse parts of this distribution only within the terms of
X?RCS: that same Artistic Licence; a copy of which may be found at the root
X?RCS: of the source tree for dist 3.0.
X?RCS:
X?RCS: $Log: newsspool.U,v $
X?RCS: Revision 3.0  1993/08/18  12:09:24  ram
X?RCS: Baseline for dist 3.0 netwide release.
X?RCS:
X?MAKE:newsspool newsspoolexp: Getfile Oldconfig
X?MAKE:	-pick add $@ %<
X?S:newsspool:
X?S:	This variable contains the eventual value of the NEWSSPOOL symbol,
X?S:	which is the directory name where news articles are spooled.  It
X?S:	may have a ~ on the front of it.
X?S:.
X?S:newsspoolexp:
X?S:	This is the same as the newsspool variable, but is filename expanded
X?S:	at configuration time, for programs not wanting to deal with it at
X?S:	run-time.
X?S:.
X?C:NEWSSPOOL:
X?C:	This symbol contains the directory name where news articles are
X?C:	spooled.  The program must be prepared to do ~ expansion on it.
X?C:.
X?C:NEWSSPOOL_EXP:
X?C:	This is the same as NEWSSPOOL, but is filename expanded at
X?C:	configuration time, for use in programs not willing to do so
X?C:	at run-time.
X?C:.
X?H:#define NEWSSPOOL "$newsspool"	/**/
X?H:#define NEWSSPOOL_EXP "$newsspoolexp"	/**/
X?H:.
X: locate news spool directory
Xcase "$newsspool" in
X'')
X	dflt=/usr/spool/news
X	;;
X*) dflt="$newsspool";;
Xesac
Xecho " "
Xfn=d~
Xrp='Where are news spooled?'
X. ./getfile
Xnewsspool="$ans"
Xnewsspoolexp="$ansexp"
X
END_OF_FILE
  if test 1648 -ne `wc -c <'mcon/U/newsspool.U'`; then
    echo shar: \"'mcon/U/newsspool.U'\" unpacked with wrong size!
  fi
  # end of 'mcon/U/newsspool.U'
fi
if test -f 'mcon/U/prefshell.U' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'mcon/U/prefshell.U'\"
else
  echo shar: Extracting \"'mcon/U/prefshell.U'\" \(1658 characters\)
  sed "s/^X//" >'mcon/U/prefshell.U' <<'END_OF_FILE'
X?RCS: $Id: prefshell.U,v 3.0 1993/08/18 12:09:34 ram Exp $
X?RCS:
X?RCS: Copyright (c) 1991-1993, Raphael Manfredi
X?RCS: 
X?RCS: You may redistribute only under the terms of the Artistic Licence,
X?RCS: as specified in the README file that comes with the distribution.
X?RCS: You may reuse parts of this distribution only within the terms of
X?RCS: that same Artistic Licence; a copy of which may be found at the root
X?RCS: of the source tree for dist 3.0.
X?RCS:
X?RCS: $Log: prefshell.U,v $
X?RCS: Revision 3.0  1993/08/18  12:09:34  ram
X?RCS: Baseline for dist 3.0 netwide release.
X?RCS:
X?MAKE:prefshell: cat package Getfile Oldconfig ksh csh bash
X?MAKE:	-pick add $@ %<
X?S:prefshell:
X?S:	This variable contains the eventual value of the PREFSHELL symbol,
X?S:	which contains the full name of the preferred user shell on this
X?S:	system.  Usual values are /bin/csh, /bin/ksh, /bin/sh.
X?S:.
X?C:PREFSHELL:
X?C:	This symbol contains the full name of the preferred user shell on this
X?C:	system.  Usual values are /bin/csh, /bin/ksh, /bin/sh.
X?C:.
X?H:#define PREFSHELL "$prefshell"		/**/
X?H:.
X: find out which shell people like to use most
Xcase "$prefshell" in
X'')
X	case "$ksh $bash $csh" in
X	*/ksh*) dflt="$ksh" ;;
X	*/bash*) dflt="$bash" ;;
X	*/csh*) dflt="$csh" ;;
X	*) dflt='/bin/sh' ;;
X	esac
X	;;
X*)  dflt="$prefshell";;
Xesac
X$cat <<EOM
X
XGive the full path name of the shell most people like to use on your system.
XThis will be used by $package whenever the user wants to get a shell
Xescape (for instance) and is not necessarily the same as the shell you are
Xcurrently using (${SHELL:-/bin/sh}).
X
XEOM
Xfn=f/~
Xrp='Preferred shell to be used?'
X. ./getfile
Xprefshell=$ans
X
END_OF_FILE
  if test 1658 -ne `wc -c <'mcon/U/prefshell.U'`; then
    echo shar: \"'mcon/U/prefshell.U'\" unpacked with wrong size!
  fi
  # end of 'mcon/U/prefshell.U'
fi
if test -f 'mcon/U/warnflags.U' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'mcon/U/warnflags.U'\"
else
  echo shar: Extracting \"'mcon/U/warnflags.U'\" \(1552 characters\)
  sed "s/^X//" >'mcon/U/warnflags.U' <<'END_OF_FILE'
X?RCS: $Id: warnflags.U,v 3.0 1993/08/18 12:10:02 ram Exp $
X?RCS:
X?RCS: Copyright (c) 1991-1993, Raphael Manfredi
X?RCS: 
X?RCS: You may redistribute only under the terms of the Artistic Licence,
X?RCS: as specified in the README file that comes with the distribution.
X?RCS: You may reuse parts of this distribution only within the terms of
X?RCS: that same Artistic Licence; a copy of which may be found at the root
X?RCS: of the source tree for dist 3.0.
X?RCS:
X?RCS: Orginal Author: Graham Stoney <greyham@research.canon.oz.au>
X?RCS:
X?RCS: $Log: warnflags.U,v $
X?RCS: Revision 3.0  1993/08/18  12:10:02  ram
X?RCS: Baseline for dist 3.0 netwide release.
X?RCS:
X?MAKE:warnflags: cat cc contains Myread Guess Oldconfig Findhdr
X?MAKE:	-pick add $@ %<
X?S:warnflags:
X?S:	This variable contains any additional C compiler flags to generate
X?S:	warnings from the compiler. It is up to the Makefile to use this.
X?S:.
X$cat <<EOH
X
XYou may wish to compile with extra compiler warnings enabled.
XNote that doing so enhances your chance of receiving your free set of steak
Xknives, particularly if you find any bugs and report them.
XIf you don't want extra warnings, answer "none".
X  
XEOH
Xcase "$warnflags" in
X'') case "$cc" in
X	*gcc*)
X		dflt="-Wall -Wno-comment"
X		if $contains 'fprintf' `./findhdr stdio.h` >/dev/null 2>&1; then
X			:
X		else
X			dflt="$dflt -Wno-implicit"
X		fi
X		;;
X	*) dflt="none";;
X	esac
X	;;
X' ') dflt="none";;
X*) dflt="$warnflags";;
Xesac
X
Xrp="Any $cc flags to enable warnings?"
X. ./myread
Xcase "$ans" in
Xnone) warnflags=' ';;
X*) warnflags="$ans";;
Xesac
X
END_OF_FILE
  if test 1552 -ne `wc -c <'mcon/U/warnflags.U'`; then
    echo shar: \"'mcon/U/warnflags.U'\" unpacked with wrong size!
  fi
  # end of 'mcon/U/warnflags.U'
fi
if test -f 'pat/patindex.SH' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'pat/patindex.SH'\"
else
  echo shar: Extracting \"'pat/patindex.SH'\" \(1588 characters\)
  sed "s/^X//" >'pat/patindex.SH' <<'END_OF_FILE'
Xcase $CONFIG in
X'')
X	if test -f config.sh; then TOP=.;
X	elif test -f ../config.sh; then TOP=..;
X	elif test -f ../../config.sh; then TOP=../..;
X	elif test -f ../../../config.sh; then TOP=../../..;
X	elif test -f ../../../../config.sh; then TOP=../../../..;
X	else
X		(echo "Can't find config.sh."; exit 1)
X	fi
X	. $TOP/config.sh
X	;;
Xesac
Xcase "$0" in
X*/*) cd `expr X$0 : 'X\(.*\)/'` ;;
Xesac
Xecho "Extracting pat/patindex (with variable substitutions)"
X$spitshell >patindex <<!GROK!THIS!
X$startsh
X
X# $Id: patindex.SH,v 3.0 1993/08/18 12:10:44 ram Exp $
X#
X#  Copyright (c) 1991-1993, Raphael Manfredi
X#  
X#  You may redistribute only under the terms of the Artistic Licence,
X#  as specified in the README file that comes with the distribution.
X#  You may reuse parts of this distribution only within the terms of
X#  that same Artistic Licence; a copy of which may be found at the root
X#  of the source tree for dist 3.0.
X#
X# Original Author: Larry Wall <lwall@netlabs.com>
X#
X# $Log: patindex.SH,v $
X# Revision 3.0  1993/08/18  12:10:44  ram
X# Baseline for dist 3.0 netwide release.
X#
X
Xzcat='$zcat'
Xtest='$test'
Xsed='$sed'
Xgrep='$grep'
X
X!GROK!THIS!
X$spitshell >>patindex <<'!NO!SUBS!'
Xif test -d bugs; then
X	cd bugs
Xfi
Xfor i in patch? patch??; do
X	if $test -f $i; then
X		echo "=== $i ==="
X		$grep '^Subject: ' $i | $sed 's/^patch\(.*\):Subject/\1/'
X	fi
Xdone
Xfor i in patch?.Z patch??.Z; do
X	if $test -f $i; then
X		name=`echo $i | $sed "s|\.Z$||"`
X		echo "=== $name ==="
X		$zcat $i | $grep '^Subject: ' | $sed 's/^patch\(.*\):Subject/\1/'
X	fi
Xdone
X!NO!SUBS!
Xchmod 755 patindex
X$eunicefix patindex
END_OF_FILE
  if test 1588 -ne `wc -c <'pat/patindex.SH'`; then
    echo shar: \"'pat/patindex.SH'\" unpacked with wrong size!
  fi
  # end of 'pat/patindex.SH'
fi
echo shar: End of archive 21 \(of 28\).
cp /dev/null ark21isdone
MISSING=""
for I in 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 ; do
    if test ! -f ark${I}isdone ; then
	MISSING="${MISSING} ${I}"
    fi
done
if test "${MISSING}" = "" ; then
    echo You have unpacked all 28 archives.
    echo "Please run PACKNOTES through sh, read REAMDE and then type Configure."
    rm -f ark[1-9]isdone ark[1-9][0-9]isdone
else
    echo You still must unpack the following archives:
    echo "        " ${MISSING}
fi
exit 0

exit 0 # Just in case...
