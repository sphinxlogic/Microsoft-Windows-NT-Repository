Newsgroups: comp.sources.misc
From: Raphael Manfredi <ram@acri.fr>
Subject: v39i029:  dist-3.0 - Configure script generator and related tools, Part25/28
Message-ID: <1993Aug20.131715.22436@sparky.sterling.com>
X-Md4-Signature: 4b61c9594fd3a19cc6c4f45688b20164
Sender: kent@sparky.sterling.com (Kent Landfield)
Organization: Advanced Computer Research Institute, Lyon, France.
Date: Fri, 20 Aug 1993 13:17:15 GMT
Approved: kent@sparky.sterling.com

Submitted-by: Raphael Manfredi <ram@acri.fr>
Posting-number: Volume 39, Issue 29
Archive-name: dist-3.0/part25
Environment: UNIX, Perl, RCS

#! /bin/sh
# This is a shell archive.  Remove anything before this line, then feed it
# into a shell via "sh file" or similar.  To overwrite existing files,
# type "sh file -c".
# The tool that generated this appeared in the comp.sources.unix newsgroup;
# send mail to comp-sources-unix@uunet.uu.net if you want that tool.
# Contents:  mcon/README mcon/U/Warn_v7EXT.U mcon/U/d_chsize.U
#   mcon/U/d_fchmod.U mcon/U/d_fchown.U mcon/U/d_getgrps.U
#   mcon/U/d_gethbynm.U mcon/U/d_getpgrp2.U mcon/U/d_killpg.U
#   mcon/U/d_mbstowcs.U mcon/U/d_memccpy.U mcon/U/d_memchr.U
#   mcon/U/d_mkdir.U mcon/U/d_rdchk.U mcon/U/d_readdir.U
#   mcon/U/d_rename.U mcon/U/d_select.U mcon/U/d_setegid.U
#   mcon/U/d_seteuid.U mcon/U/d_setpgrp2.U mcon/U/d_setrgid.U
#   mcon/U/d_setruid.U mcon/U/d_strtok.U mcon/U/d_strtol.U
#   mcon/U/d_wcstombs.U mcon/U/defeditor.U mcon/U/i_limits.U
#   mcon/U/i_sysresrc.U mcon/U/i_sysun.U mcon/U/i_syswait.U
#   mcon/U/pager.U mcon/files/i_include.U pl/rangeargs.pl
# Wrapped by ram@soft208 on Wed Aug 18 14:42:26 1993
PATH=/bin:/usr/bin:/usr/ucb ; export PATH
echo If this archive is complete, you will see the following message:
echo '          "shar: End of archive 25 (of 28)."'
if test -f 'mcon/README' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'mcon/README'\"
else
  echo shar: Extracting \"'mcon/README'\" \(1191 characters\)
  sed "s/^X//" >'mcon/README' <<'END_OF_FILE'
XThis is the root directory for metaconfig.
X
XIf you are new to metaconfig, you may wish to have a look at the INTRO
Xfile, which gives a quick introduction.
X
XThe metaconfig you have here is a modified version of Larry Wall's 2.0
Xrelease.  The units themselves have been ripped off from some Configure
Xscripts (perl 4.0, elm 2.3).  They all carry a copyright from me, which
Xis not true, but it was automatically produced and I had no time yet to
Xset the proper copyrights for each unit.
X
XAlthough metaconfig, as being part of dist, is covered by the GNU General
XPublic Licence, a Configure script is not copyrighted and belongs to the
Xpublic domain. Units can be copyrighted, and credits for each unit may
Xappear in the generated Configure script, at the author's request.
X
XThe manual page for metaconfig is not up-to-date.  The built-in
Xinterpreter and the changes are documented in NOTES.
X
XThe units that come from dist 2.0 need to be changed. A script should be
Xprovided in the final release to do an automatic conversion, which will
Xbe fine 90% of the time. If you want to see how new features can be used,
XI would recommend you to have a look at Oldconfig.U, d_gethname.U and
Xvoidflags.U.
END_OF_FILE
  if test 1191 -ne `wc -c <'mcon/README'`; then
    echo shar: \"'mcon/README'\" unpacked with wrong size!
  fi
  # end of 'mcon/README'
fi
if test -f 'mcon/U/Warn_v7EXT.U' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'mcon/U/Warn_v7EXT.U'\"
else
  echo shar: Extracting \"'mcon/U/Warn_v7EXT.U'\" \(1119 characters\)
  sed "s/^X//" >'mcon/U/Warn_v7EXT.U' <<'END_OF_FILE'
X?RCS: $Id: Warn_v7EXT.U,v 3.0 1993/08/18 12:05:17 ram Exp $
X?RCS:
X?RCS: Copyright (c) 1991-1993, Raphael Manfredi
X?RCS: 
X?RCS: You may redistribute only under the terms of the Artistic Licence,
X?RCS: as specified in the README file that comes with the distribution.
X?RCS: You may reuse parts of this distribution only within the terms of
X?RCS: that same Artistic Licence; a copy of which may be found at the root
X?RCS: of the source tree for dist 3.0.
X?RCS:
X?RCS: $Log: Warn_v7EXT.U,v $
X?RCS: Revision 3.0  1993/08/18  12:05:17  ram
X?RCS: Baseline for dist 3.0 netwide release.
X?RCS:
X?X: 
X?X: This unit issues warnings to V7 sites that they are living dangerously.
X?X: This unit needs to get mentioned in End.U to get included.
X?X: 
X?MAKE:Warn_v7EXT: package Guess 
X?MAKE:	-pick add $@ %<
X: Warnings
Xif v7; then
X	cat <<'EOM'
X 
XNOTE: the V7 compiler may ignore some #undefs that $package uses.  If so,
Xyou may get messages about redefining EXT.  Some V7 compilers also have
Xdifficulties with #defines near buffer boundaries, so beware.  You may have
Xto play with the spacing in some .h files, believe it or not.
XEOM
Xfi
X
END_OF_FILE
  if test 1119 -ne `wc -c <'mcon/U/Warn_v7EXT.U'`; then
    echo shar: \"'mcon/U/Warn_v7EXT.U'\" unpacked with wrong size!
  fi
  # end of 'mcon/U/Warn_v7EXT.U'
fi
if test -f 'mcon/U/d_chsize.U' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'mcon/U/d_chsize.U'\"
else
  echo shar: Extracting \"'mcon/U/d_chsize.U'\" \(1128 characters\)
  sed "s/^X//" >'mcon/U/d_chsize.U' <<'END_OF_FILE'
X?RCS: $Id: d_chsize.U,v 3.0 1993/08/18 12:05:50 ram Exp $
X?RCS:
X?RCS: Copyright (c) 1991-1993, Raphael Manfredi
X?RCS: 
X?RCS: You may redistribute only under the terms of the Artistic Licence,
X?RCS: as specified in the README file that comes with the distribution.
X?RCS: You may reuse parts of this distribution only within the terms of
X?RCS: that same Artistic Licence; a copy of which may be found at the root
X?RCS: of the source tree for dist 3.0.
X?RCS:
X?RCS: $Log: d_chsize.U,v $
X?RCS: Revision 3.0  1993/08/18  12:05:50  ram
X?RCS: Baseline for dist 3.0 netwide release.
X?RCS:
X?MAKE:d_chsize: Inlibc
X?MAKE:	-pick add $@ %<
X?S:d_chsize:
X?S:	This variable conditionally defines the CHSIZE symbol, which
X?S:	indicates to the C program that the chsize() routine is available
X?S:	to truncate files.  You might need a -lx to get this routine.
X?S:.
X?C:HAS_CHSIZE (CHSIZE):
X?C:	This symbol, if defined, indicates that the chsize routine is available
X?C:	to truncate files.  You might need a -lx to get this routine.
X?C:.
X?H:#$d_chsize	HAS_CHSIZE		/**/
X?H:.
X?LINT:set d_chsize
X: see if chsize exists
Xset chsize d_chsize
Xeval $inlibc
X
END_OF_FILE
  if test 1128 -ne `wc -c <'mcon/U/d_chsize.U'`; then
    echo shar: \"'mcon/U/d_chsize.U'\" unpacked with wrong size!
  fi
  # end of 'mcon/U/d_chsize.U'
fi
if test -f 'mcon/U/d_fchmod.U' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'mcon/U/d_fchmod.U'\"
else
  echo shar: Extracting \"'mcon/U/d_fchmod.U'\" \(1102 characters\)
  sed "s/^X//" >'mcon/U/d_fchmod.U' <<'END_OF_FILE'
X?RCS: $Id: d_fchmod.U,v 3.0 1993/08/18 12:05:59 ram Exp $
X?RCS:
X?RCS: Copyright (c) 1991-1993, Raphael Manfredi
X?RCS: 
X?RCS: You may redistribute only under the terms of the Artistic Licence,
X?RCS: as specified in the README file that comes with the distribution.
X?RCS: You may reuse parts of this distribution only within the terms of
X?RCS: that same Artistic Licence; a copy of which may be found at the root
X?RCS: of the source tree for dist 3.0.
X?RCS:
X?RCS: $Log: d_fchmod.U,v $
X?RCS: Revision 3.0  1993/08/18  12:05:59  ram
X?RCS: Baseline for dist 3.0 netwide release.
X?RCS:
X?MAKE:d_fchmod: Inlibc
X?MAKE:	-pick add $@ %<
X?S:d_fchmod:
X?S:	This variable conditionally defines the HAS_FCHMOD symbol, which
X?S:	indicates to the C program that the fchmod() routine is available
X?S:	to change mode of opened files.
X?S:.
X?C:HAS_FCHMOD (FCHMOD):
X?C:	This symbol, if defined, indicates that the fchmod routine is available
X?C:	to change mode of opened files.  If unavailable, use chmod().
X?C:.
X?H:#$d_fchmod HAS_FCHMOD		/**/
X?H:.
X?LINT:set d_fchmod
X: see if fchmod exists
Xset fchmod d_fchmod
Xeval $inlibc
X
END_OF_FILE
  if test 1102 -ne `wc -c <'mcon/U/d_fchmod.U'`; then
    echo shar: \"'mcon/U/d_fchmod.U'\" unpacked with wrong size!
  fi
  # end of 'mcon/U/d_fchmod.U'
fi
if test -f 'mcon/U/d_fchown.U' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'mcon/U/d_fchown.U'\"
else
  echo shar: Extracting \"'mcon/U/d_fchown.U'\" \(1112 characters\)
  sed "s/^X//" >'mcon/U/d_fchown.U' <<'END_OF_FILE'
X?RCS: $Id: d_fchown.U,v 3.0 1993/08/18 12:06:01 ram Exp $
X?RCS:
X?RCS: Copyright (c) 1991-1993, Raphael Manfredi
X?RCS: 
X?RCS: You may redistribute only under the terms of the Artistic Licence,
X?RCS: as specified in the README file that comes with the distribution.
X?RCS: You may reuse parts of this distribution only within the terms of
X?RCS: that same Artistic Licence; a copy of which may be found at the root
X?RCS: of the source tree for dist 3.0.
X?RCS:
X?RCS: $Log: d_fchown.U,v $
X?RCS: Revision 3.0  1993/08/18  12:06:01  ram
X?RCS: Baseline for dist 3.0 netwide release.
X?RCS:
X?MAKE:d_fchown: Inlibc
X?MAKE:	-pick add $@ %<
X?S:d_fchown:
X?S:	This variable conditionally defines the HAS_FCHOWN symbol, which
X?S:	indicates to the C program that the fchown() routine is available
X?S:	to change ownership of opened files.
X?S:.
X?C:HAS_FCHOWN (FCHOWN):
X?C:	This symbol, if defined, indicates that the fchown routine is available
X?C:	to change ownership of opened files.  If unavailable, use chown().
X?C:.
X?H:#$d_fchown HAS_FCHOWN		/**/
X?H:.
X?LINT:set d_fchown
X: see if fchown exists
Xset fchown d_fchown
Xeval $inlibc
X
END_OF_FILE
  if test 1112 -ne `wc -c <'mcon/U/d_fchown.U'`; then
    echo shar: \"'mcon/U/d_fchown.U'\" unpacked with wrong size!
  fi
  # end of 'mcon/U/d_fchown.U'
fi
if test -f 'mcon/U/d_getgrps.U' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'mcon/U/d_getgrps.U'\"
else
  echo shar: Extracting \"'mcon/U/d_getgrps.U'\" \(1176 characters\)
  sed "s/^X//" >'mcon/U/d_getgrps.U' <<'END_OF_FILE'
X?RCS: $Id: d_getgrps.U,v 3.0 1993/08/18 12:06:08 ram Exp $
X?RCS:
X?RCS: Copyright (c) 1991-1993, Raphael Manfredi
X?RCS: 
X?RCS: You may redistribute only under the terms of the Artistic Licence,
X?RCS: as specified in the README file that comes with the distribution.
X?RCS: You may reuse parts of this distribution only within the terms of
X?RCS: that same Artistic Licence; a copy of which may be found at the root
X?RCS: of the source tree for dist 3.0.
X?RCS:
X?RCS: $Log: d_getgrps.U,v $
X?RCS: Revision 3.0  1993/08/18  12:06:08  ram
X?RCS: Baseline for dist 3.0 netwide release.
X?RCS:
X?MAKE:d_getgrps: Inlibc
X?MAKE:	-pick add $@ %<
X?S:d_getgrps:
X?S:	This variable conditionally defines the HAS_GETGROUPS symbol, which
X?S:	indicates to the C program that the getgroups() routine is available
X?S:	to get the list of process groups.
X?S:.
X?C:HAS_GETGROUPS (GETGROUPS):
X?C:	This symbol, if defined, indicates that the getgroups() routine is
X?C:	available to get the list of process groups.  If unavailable, multiple
X?C:	groups are probably not supported.
X?C:.
X?H:#$d_getgrps HAS_GETGROUPS		/**/
X?H:.
X?LINT:set d_getgrps
X: see if getgroups exists
Xset getgroups d_getgrps
Xeval $inlibc
X
END_OF_FILE
  if test 1176 -ne `wc -c <'mcon/U/d_getgrps.U'`; then
    echo shar: \"'mcon/U/d_getgrps.U'\" unpacked with wrong size!
  fi
  # end of 'mcon/U/d_getgrps.U'
fi
if test -f 'mcon/U/d_gethbynm.U' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'mcon/U/d_gethbynm.U'\"
else
  echo shar: Extracting \"'mcon/U/d_gethbynm.U'\" \(1192 characters\)
  sed "s/^X//" >'mcon/U/d_gethbynm.U' <<'END_OF_FILE'
X?RCS: $Id: d_gethbynm.U,v 3.0 1993/08/18 12:06:08 ram Exp $
X?RCS:
X?RCS: Copyright (c) 1991-1993, Raphael Manfredi
X?RCS: 
X?RCS: You may redistribute only under the terms of the Artistic Licence,
X?RCS: as specified in the README file that comes with the distribution.
X?RCS: You may reuse parts of this distribution only within the terms of
X?RCS: that same Artistic Licence; a copy of which may be found at the root
X?RCS: of the source tree for dist 3.0.
X?RCS:
X?RCS: $Log: d_gethbynm.U,v $
X?RCS: Revision 3.0  1993/08/18  12:06:08  ram
X?RCS: Baseline for dist 3.0 netwide release.
X?RCS:
X?MAKE:d_gethbynm: Inlibc
X?MAKE:	-pick add $@ %<
X?S:d_gethbynm (d_gethhstby):
X?S:	This variable conditionally defines the HAS_GETHOSTBYNAME symbol, which
X?S:	indicates to the C program that the gethostbyname() routine is available
X?S:	to lookup host names in some data base or other.
X?S:.
X?C:HAS_GETHOSTBYNAME (GETHOSTBYNAME):
X?C:	This symbol, if defined, indicates that the gethostbyname() routine is
X?C:	available to lookup host names in some data base or other.
X?C:.
X?H:#$d_gethbynm HAS_GETHOSTBYNAME		/**/
X?H:.
X?LINT:set d_gethbynm
X: see if gethostbyname exists
Xset gethostbyname d_gethbynm
Xeval $inlibc
X
END_OF_FILE
  if test 1192 -ne `wc -c <'mcon/U/d_gethbynm.U'`; then
    echo shar: \"'mcon/U/d_gethbynm.U'\" unpacked with wrong size!
  fi
  # end of 'mcon/U/d_gethbynm.U'
fi
if test -f 'mcon/U/d_getpgrp2.U' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'mcon/U/d_getpgrp2.U'\"
else
  echo shar: Extracting \"'mcon/U/d_getpgrp2.U'\" \(1136 characters\)
  sed "s/^X//" >'mcon/U/d_getpgrp2.U' <<'END_OF_FILE'
X?RCS: $Id: d_getpgrp2.U,v 3.0 1993/08/18 12:06:15 ram Exp $
X?RCS:
X?RCS: Copyright (c) 1991-1993, Raphael Manfredi
X?RCS: 
X?RCS: You may redistribute only under the terms of the Artistic Licence,
X?RCS: as specified in the README file that comes with the distribution.
X?RCS: You may reuse parts of this distribution only within the terms of
X?RCS: that same Artistic Licence; a copy of which may be found at the root
X?RCS: of the source tree for dist 3.0.
X?RCS:
X?RCS: $Log: d_getpgrp2.U,v $
X?RCS: Revision 3.0  1993/08/18  12:06:15  ram
X?RCS: Baseline for dist 3.0 netwide release.
X?RCS:
X?MAKE:d_getpgrp2: Inlibc
X?MAKE:	-pick add $@ %<
X?S:d_getpgrp2:
X?S:	This variable conditionally defines the HAS_GETPGRP2 symbol, which
X?S:	indicates to the C program that the getpgrp2() (as in DG/UX) routine
X?S:	is available to get the current process group.
X?S:.
X?C:HAS_GETPGRP2 (GETPGRP2):
X?C:	This symbol, if defined, indicates that the getpgrp2() (as in DG/UX)
X?C:	routine is available to get the current process group.
X?C:.
X?H:#$d_getpgrp2 HAS_GETPGRP2		/**/
X?H:.
X?LINT:set d_getpgrp2
X: see if getpgrp2 exists
Xset getpgrp2 d_getpgrp2
Xeval $inlibc
X
END_OF_FILE
  if test 1136 -ne `wc -c <'mcon/U/d_getpgrp2.U'`; then
    echo shar: \"'mcon/U/d_getpgrp2.U'\" unpacked with wrong size!
  fi
  # end of 'mcon/U/d_getpgrp2.U'
fi
if test -f 'mcon/U/d_killpg.U' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'mcon/U/d_killpg.U'\"
else
  echo shar: Extracting \"'mcon/U/d_killpg.U'\" \(1137 characters\)
  sed "s/^X//" >'mcon/U/d_killpg.U' <<'END_OF_FILE'
X?RCS: $Id: d_killpg.U,v 3.0 1993/08/18 12:06:27 ram Exp $
X?RCS:
X?RCS: Copyright (c) 1991-1993, Raphael Manfredi
X?RCS: 
X?RCS: You may redistribute only under the terms of the Artistic Licence,
X?RCS: as specified in the README file that comes with the distribution.
X?RCS: You may reuse parts of this distribution only within the terms of
X?RCS: that same Artistic Licence; a copy of which may be found at the root
X?RCS: of the source tree for dist 3.0.
X?RCS:
X?RCS: $Log: d_killpg.U,v $
X?RCS: Revision 3.0  1993/08/18  12:06:27  ram
X?RCS: Baseline for dist 3.0 netwide release.
X?RCS:
X?MAKE:d_killpg: Inlibc
X?MAKE:	-pick add $@ %<
X?S:d_killpg:
X?S:	This variable conditionally defines the HAS_KILLPG symbol, which
X?S:	indicates to the C program that the killpg() routine is available
X?S:	to kill process groups.
X?S:.
X?C:HAS_KILLPG (KILLPG):
X?C:	This symbol, if defined, indicates that the killpg routine is available
X?C:	to kill process groups.  If unavailable, you probably should use kill
X?C:	with a negative process number.
X?C:.
X?H:#$d_killpg HAS_KILLPG	/**/
X?H:.
X?LINT:set d_killpg
X: see if killpg exists
Xset killpg d_killpg
Xeval $inlibc
X
END_OF_FILE
  if test 1137 -ne `wc -c <'mcon/U/d_killpg.U'`; then
    echo shar: \"'mcon/U/d_killpg.U'\" unpacked with wrong size!
  fi
  # end of 'mcon/U/d_killpg.U'
fi
if test -f 'mcon/U/d_mbstowcs.U' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'mcon/U/d_mbstowcs.U'\"
else
  echo shar: Extracting \"'mcon/U/d_mbstowcs.U'\" \(1157 characters\)
  sed "s/^X//" >'mcon/U/d_mbstowcs.U' <<'END_OF_FILE'
X?RCS: $Id: d_mbstowcs.U,v 3.0 1993/08/18 12:06:29 ram Exp $
X?RCS:
X?RCS: Copyright (c) 1991-1993, Raphael Manfredi
X?RCS: 
X?RCS: You may redistribute only under the terms of the Artistic Licence,
X?RCS: as specified in the README file that comes with the distribution.
X?RCS: You may reuse parts of this distribution only within the terms of
X?RCS: that same Artistic Licence; a copy of which may be found at the root
X?RCS: of the source tree for dist 3.0.
X?RCS:
X?RCS: $Log: d_mbstowcs.U,v $
X?RCS: Revision 3.0  1993/08/18  12:06:29  ram
X?RCS: Baseline for dist 3.0 netwide release.
X?RCS:
X?MAKE:d_mbstowcs: Inlibc
X?MAKE:	-pick add $@ %<
X?S:d_mbstowcs:
X?S:	This variable conditionally defines the HAS_MBSTOWCS symbol, which
X?S:	indicates to the C program that the mbstowcs() routine is available
X?S:	to convert a multibyte string into a wide character string.
X?S:.
X?C:HAS_MBSTOWCS (MBSTOWCS):
X?C:	This symbol, if defined, indicates that the mbstowcs routine is
X?C:	available to covert a multibyte string into a wide character string.
X?C:.
X?H:#$d_mbstowcs	HAS_MBSTOWCS		/**/
X?H:.
X?LINT:set d_mbstowcs
X: see if mbstowcs exists
Xset mbstowcs d_mbstowcs
Xeval $inlibc
X
END_OF_FILE
  if test 1157 -ne `wc -c <'mcon/U/d_mbstowcs.U'`; then
    echo shar: \"'mcon/U/d_mbstowcs.U'\" unpacked with wrong size!
  fi
  # end of 'mcon/U/d_mbstowcs.U'
fi
if test -f 'mcon/U/d_memccpy.U' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'mcon/U/d_memccpy.U'\"
else
  echo shar: Extracting \"'mcon/U/d_memccpy.U'\" \(1152 characters\)
  sed "s/^X//" >'mcon/U/d_memccpy.U' <<'END_OF_FILE'
X?RCS: $Id: d_memccpy.U,v 3.0 1993/08/18 12:06:31 ram Exp $
X?RCS:
X?RCS: Copyright (c) 1991-1993, Raphael Manfredi
X?RCS: 
X?RCS: You may redistribute only under the terms of the Artistic Licence,
X?RCS: as specified in the README file that comes with the distribution.
X?RCS: You may reuse parts of this distribution only within the terms of
X?RCS: that same Artistic Licence; a copy of which may be found at the root
X?RCS: of the source tree for dist 3.0.
X?RCS:
X?RCS: $Log: d_memccpy.U,v $
X?RCS: Revision 3.0  1993/08/18  12:06:31  ram
X?RCS: Baseline for dist 3.0 netwide release.
X?RCS:
X?MAKE:d_memccpy: Inlibc
X?MAKE:	-pick add $@ %<
X?S:d_memccpy:
X?S:	This variable conditionally defines the HAS_MEMCCPY symbol, which
X?S:	indicates to the C program that the memccpy() routine is available
X?S:	to copy a character into a block of memory.
X?S:.
X?C:HAS_MEMCCPY (MEMCCPY):
X?C:	This symbol, if defined, indicates that the memccpy routine is available
X?C:	to copy a character into a block of memory.  Otherwise you should
X?C:	roll your own.
X?C:.
X?H:#$d_memccpy HAS_MEMCCPY		/**/
X?H:.
X?LINT:set d_memccpy
X: see if memccpy exists
Xset memccpy d_memccpy
Xeval $inlibc
X
END_OF_FILE
  if test 1152 -ne `wc -c <'mcon/U/d_memccpy.U'`; then
    echo shar: \"'mcon/U/d_memccpy.U'\" unpacked with wrong size!
  fi
  # end of 'mcon/U/d_memccpy.U'
fi
if test -f 'mcon/U/d_memchr.U' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'mcon/U/d_memchr.U'\"
else
  echo shar: Extracting \"'mcon/U/d_memchr.U'\" \(1115 characters\)
  sed "s/^X//" >'mcon/U/d_memchr.U' <<'END_OF_FILE'
X?RCS: $Id: d_memchr.U,v 3.0 1993/08/18 12:06:32 ram Exp $
X?RCS:
X?RCS: Copyright (c) 1991-1993, Raphael Manfredi
X?RCS: 
X?RCS: You may redistribute only under the terms of the Artistic Licence,
X?RCS: as specified in the README file that comes with the distribution.
X?RCS: You may reuse parts of this distribution only within the terms of
X?RCS: that same Artistic Licence; a copy of which may be found at the root
X?RCS: of the source tree for dist 3.0.
X?RCS:
X?RCS: $Log: d_memchr.U,v $
X?RCS: Revision 3.0  1993/08/18  12:06:32  ram
X?RCS: Baseline for dist 3.0 netwide release.
X?RCS:
X?MAKE:d_memchr: Inlibc
X?MAKE:	-pick add $@ %<
X?S:d_memchr:
X?S:	This variable conditionally defines the HAS_MEMCHR symbol, which
X?S:	indicates to the C program that the memchr() routine is available
X?S:	to scan a block of memory for a character.
X?S:.
X?C:HAS_MEMCHR:
X?C:	This symbol, if defined, indicates that the memchr routine is available
X?C:	to scan a block of memory for a character.  If undefined, roll your own.
X?C:.
X?H:#$d_memchr HAS_MEMCHR		/**/
X?H:.
X?LINT:set d_memchr
X: see if memchr exists
Xset memchr d_memchr
Xeval $inlibc
X
END_OF_FILE
  if test 1115 -ne `wc -c <'mcon/U/d_memchr.U'`; then
    echo shar: \"'mcon/U/d_memchr.U'\" unpacked with wrong size!
  fi
  # end of 'mcon/U/d_memchr.U'
fi
if test -f 'mcon/U/d_mkdir.U' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'mcon/U/d_mkdir.U'\"
else
  echo shar: Extracting \"'mcon/U/d_mkdir.U'\" \(1109 characters\)
  sed "s/^X//" >'mcon/U/d_mkdir.U' <<'END_OF_FILE'
X?RCS: $Id: d_mkdir.U,v 3.0 1993/08/18 12:06:37 ram Exp $
X?RCS:
X?RCS: Copyright (c) 1991-1993, Raphael Manfredi
X?RCS: 
X?RCS: You may redistribute only under the terms of the Artistic Licence,
X?RCS: as specified in the README file that comes with the distribution.
X?RCS: You may reuse parts of this distribution only within the terms of
X?RCS: that same Artistic Licence; a copy of which may be found at the root
X?RCS: of the source tree for dist 3.0.
X?RCS:
X?RCS: $Log: d_mkdir.U,v $
X?RCS: Revision 3.0  1993/08/18  12:06:37  ram
X?RCS: Baseline for dist 3.0 netwide release.
X?RCS:
X?MAKE:d_mkdir: Inlibc
X?MAKE:	-pick add $@ %<
X?S:d_mkdir:
X?S:	This variable conditionally defines the HAS_MKDIR symbol, which
X?S:	indicates to the C program that the mkdir() routine is available
X?S:	to create directories..
X?S:.
X?C:HAS_MKDIR (MKDIR):
X?C:	This symbol, if defined, indicates that the mkdir routine is available
X?C:	to create directories.  Otherwise you should fork off a new process to
X?C:	exec /bin/mkdir.
X?C:.
X?H:#$d_mkdir HAS_MKDIR		/**/
X?H:.
X?LINT:set d_mkdir
X: see if mkdir exists
Xset mkdir d_mkdir
Xeval $inlibc
X
END_OF_FILE
  if test 1109 -ne `wc -c <'mcon/U/d_mkdir.U'`; then
    echo shar: \"'mcon/U/d_mkdir.U'\" unpacked with wrong size!
  fi
  # end of 'mcon/U/d_mkdir.U'
fi
if test -f 'mcon/U/d_rdchk.U' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'mcon/U/d_rdchk.U'\"
else
  echo shar: Extracting \"'mcon/U/d_rdchk.U'\" \(1188 characters\)
  sed "s/^X//" >'mcon/U/d_rdchk.U' <<'END_OF_FILE'
X?RCS: $Id: d_rdchk.U,v 3.0 1993/08/18 12:06:51 ram Exp $
X?RCS:
X?RCS: Copyright (c) 1991-1993, Raphael Manfredi
X?RCS: 
X?RCS: You may redistribute only under the terms of the Artistic Licence,
X?RCS: as specified in the README file that comes with the distribution.
X?RCS: You may reuse parts of this distribution only within the terms of
X?RCS: that same Artistic Licence; a copy of which may be found at the root
X?RCS: of the source tree for dist 3.0.
X?RCS:
X?RCS: $Log: d_rdchk.U,v $
X?RCS: Revision 3.0  1993/08/18  12:06:51  ram
X?RCS: Baseline for dist 3.0 netwide release.
X?RCS:
X?MAKE:d_rdchk: Inlibc
X?MAKE:	-pick add $@ %<
X?S:d_rdchk:
X?S:	This variable conditionally defines the HAS_RDCHK symbol, which
X?S:	indicates to the C program that the rdchk() routine is available
X?S:	to find out if there is input pending on an IO channel.
X?S:.
X?C:HAS_RDCHK (RDCHK):
X?C:	This symbol, if defined, indicates that the rdchk routine is available
X?C:	to find out if there is input pending on an IO channel.  Generally
X?C:	the routine is used only if FIONREAD and O_NDELAY aren't available.
X?C:.
X?H:#$d_rdchk HAS_RDCHK		/**/
X?H:.
X?LINT:set d_rdchk
X: see if rdchk exists
Xset rdchk d_rdchk
Xeval $inlibc
X
END_OF_FILE
  if test 1188 -ne `wc -c <'mcon/U/d_rdchk.U'`; then
    echo shar: \"'mcon/U/d_rdchk.U'\" unpacked with wrong size!
  fi
  # end of 'mcon/U/d_rdchk.U'
fi
if test -f 'mcon/U/d_readdir.U' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'mcon/U/d_readdir.U'\"
else
  echo shar: Extracting \"'mcon/U/d_readdir.U'\" \(1129 characters\)
  sed "s/^X//" >'mcon/U/d_readdir.U' <<'END_OF_FILE'
X?RCS: $Id: d_readdir.U,v 3.0 1993/08/18 12:06:52 ram Exp $
X?RCS:
X?RCS: Copyright (c) 1991-1993, Raphael Manfredi
X?RCS: 
X?RCS: You may redistribute only under the terms of the Artistic Licence,
X?RCS: as specified in the README file that comes with the distribution.
X?RCS: You may reuse parts of this distribution only within the terms of
X?RCS: that same Artistic Licence; a copy of which may be found at the root
X?RCS: of the source tree for dist 3.0.
X?RCS:
X?RCS: $Log: d_readdir.U,v $
X?RCS: Revision 3.0  1993/08/18  12:06:52  ram
X?RCS: Baseline for dist 3.0 netwide release.
X?RCS:
X?X:	Force checking for <dirent.h> inclusion
X?X:INC: i_dirent
X?MAKE:d_readdir: Inlibc
X?MAKE:	-pick add $@ %<
X?S:d_readdir:
X?S:	This variable conditionally defines HAS_READDIR if readdir() is
X?S:	available to read directory entries.
X?S:.
X?C:HAS_READDIR (READDIR):
X?C:	This symbol, if defined, indicates that the readdir routine is
X?C:	available to read directory entries. You may have to include
X?C:	<dirent.h>. See I_DIRENT.
X?C:.
X?H:#$d_readdir HAS_READDIR		/**/
X?H:.
X?LINT:set d_readdir
X: see if readdir exists
Xset readdir d_readdir
Xeval $inlibc
X
END_OF_FILE
  if test 1129 -ne `wc -c <'mcon/U/d_readdir.U'`; then
    echo shar: \"'mcon/U/d_readdir.U'\" unpacked with wrong size!
  fi
  # end of 'mcon/U/d_readdir.U'
fi
if test -f 'mcon/U/d_rename.U' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'mcon/U/d_rename.U'\"
else
  echo shar: Extracting \"'mcon/U/d_rename.U'\" \(1108 characters\)
  sed "s/^X//" >'mcon/U/d_rename.U' <<'END_OF_FILE'
X?RCS: $Id: d_rename.U,v 3.0 1993/08/18 12:06:54 ram Exp $
X?RCS:
X?RCS: Copyright (c) 1991-1993, Raphael Manfredi
X?RCS: 
X?RCS: You may redistribute only under the terms of the Artistic Licence,
X?RCS: as specified in the README file that comes with the distribution.
X?RCS: You may reuse parts of this distribution only within the terms of
X?RCS: that same Artistic Licence; a copy of which may be found at the root
X?RCS: of the source tree for dist 3.0.
X?RCS:
X?RCS: $Log: d_rename.U,v $
X?RCS: Revision 3.0  1993/08/18  12:06:54  ram
X?RCS: Baseline for dist 3.0 netwide release.
X?RCS:
X?MAKE:d_rename: Inlibc
X?MAKE:	-pick add $@ %<
X?S:d_rename:
X?S:	This variable conditionally defines the HAS_RENAME symbol, which
X?S:	indicates to the C program that the rename() routine is available
X?S:	to rename files.
X?S:.
X?C:HAS_RENAME (RENAME):
X?C:	This symbol, if defined, indicates that the rename routine is available
X?C:	to rename files.  Otherwise you should do the unlink(), link(), unlink()
X?C:	trick.
X?C:.
X?H:#$d_rename HAS_RENAME	/**/
X?H:.
X?LINT:set d_rename
X: see if rename exists
Xset rename d_rename
Xeval $inlibc
X
END_OF_FILE
  if test 1108 -ne `wc -c <'mcon/U/d_rename.U'`; then
    echo shar: \"'mcon/U/d_rename.U'\" unpacked with wrong size!
  fi
  # end of 'mcon/U/d_rename.U'
fi
if test -f 'mcon/U/d_select.U' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'mcon/U/d_select.U'\"
else
  echo shar: Extracting \"'mcon/U/d_select.U'\" \(1155 characters\)
  sed "s/^X//" >'mcon/U/d_select.U' <<'END_OF_FILE'
X?RCS: $Id: d_select.U,v 3.0 1993/08/18 12:07:02 ram Exp $
X?RCS:
X?RCS: Copyright (c) 1991-1993, Raphael Manfredi
X?RCS: 
X?RCS: You may redistribute only under the terms of the Artistic Licence,
X?RCS: as specified in the README file that comes with the distribution.
X?RCS: You may reuse parts of this distribution only within the terms of
X?RCS: that same Artistic Licence; a copy of which may be found at the root
X?RCS: of the source tree for dist 3.0.
X?RCS:
X?RCS: $Log: d_select.U,v $
X?RCS: Revision 3.0  1993/08/18  12:07:02  ram
X?RCS: Baseline for dist 3.0 netwide release.
X?RCS:
X?MAKE:d_select: Inlibc
X?MAKE:	-pick add $@ %<
X?S:d_select:
X?S:	This variable conditionally defines HAS_SELECT if select() is
X?S:	available to select active file descriptors. A <sys/time.h>
X?S:	inclusion may be necessary for the timeout field.
X?S:.
X?C:HAS_SELECT (SELECT):
X?C:	This symbol, if defined, indicates that the select routine is
X?C:	available to select active file descriptors. If the timeout field
X?C:	is used, <sys/time.h> may need to be included.
X?C:.
X?H:#$d_select HAS_SELECT	/**/
X?H:.
X?LINT:set d_select
X: see if select exists
Xset select d_select
Xeval $inlibc
X
END_OF_FILE
  if test 1155 -ne `wc -c <'mcon/U/d_select.U'`; then
    echo shar: \"'mcon/U/d_select.U'\" unpacked with wrong size!
  fi
  # end of 'mcon/U/d_select.U'
fi
if test -f 'mcon/U/d_setegid.U' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'mcon/U/d_setegid.U'\"
else
  echo shar: Extracting \"'mcon/U/d_setegid.U'\" \(1127 characters\)
  sed "s/^X//" >'mcon/U/d_setegid.U' <<'END_OF_FILE'
X?RCS: $Id: d_setegid.U,v 3.0 1993/08/18 12:07:07 ram Exp $
X?RCS:
X?RCS: Copyright (c) 1991-1993, Raphael Manfredi
X?RCS: 
X?RCS: You may redistribute only under the terms of the Artistic Licence,
X?RCS: as specified in the README file that comes with the distribution.
X?RCS: You may reuse parts of this distribution only within the terms of
X?RCS: that same Artistic Licence; a copy of which may be found at the root
X?RCS: of the source tree for dist 3.0.
X?RCS:
X?RCS: $Log: d_setegid.U,v $
X?RCS: Revision 3.0  1993/08/18  12:07:07  ram
X?RCS: Baseline for dist 3.0 netwide release.
X?RCS:
X?MAKE:d_setegid: Inlibc
X?MAKE:	-pick add $@ %<
X?S:d_setegid:
X?S:	This variable conditionally defines the HAS_SETEGID symbol, which
X?S:	indicates to the C program that the setegid() routine is available
X?S:	to change the effective gid of the current program.
X?S:.
X?C:HAS_SETEGID (SETEGID):
X?C:	This symbol, if defined, indicates that the setegid routine is available
X?C:	to change the effective gid of the current program.
X?C:.
X?H:#$d_setegid HAS_SETEGID		/**/
X?H:.
X?LINT:set d_setegid
X: see if setegid exists
Xset setegid d_setegid
Xeval $inlibc
X
END_OF_FILE
  if test 1127 -ne `wc -c <'mcon/U/d_setegid.U'`; then
    echo shar: \"'mcon/U/d_setegid.U'\" unpacked with wrong size!
  fi
  # end of 'mcon/U/d_setegid.U'
fi
if test -f 'mcon/U/d_seteuid.U' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'mcon/U/d_seteuid.U'\"
else
  echo shar: Extracting \"'mcon/U/d_seteuid.U'\" \(1127 characters\)
  sed "s/^X//" >'mcon/U/d_seteuid.U' <<'END_OF_FILE'
X?RCS: $Id: d_seteuid.U,v 3.0 1993/08/18 12:07:08 ram Exp $
X?RCS:
X?RCS: Copyright (c) 1991-1993, Raphael Manfredi
X?RCS: 
X?RCS: You may redistribute only under the terms of the Artistic Licence,
X?RCS: as specified in the README file that comes with the distribution.
X?RCS: You may reuse parts of this distribution only within the terms of
X?RCS: that same Artistic Licence; a copy of which may be found at the root
X?RCS: of the source tree for dist 3.0.
X?RCS:
X?RCS: $Log: d_seteuid.U,v $
X?RCS: Revision 3.0  1993/08/18  12:07:08  ram
X?RCS: Baseline for dist 3.0 netwide release.
X?RCS:
X?MAKE:d_seteuid: Inlibc
X?MAKE:	-pick add $@ %<
X?S:d_seteuid:
X?S:	This variable conditionally defines the HAS_SETEUID symbol, which
X?S:	indicates to the C program that the seteuid() routine is available
X?S:	to change the effective uid of the current program.
X?S:.
X?C:HAS_SETEUID (SETEUID):
X?C:	This symbol, if defined, indicates that the seteuid routine is available
X?C:	to change the effective uid of the current program.
X?C:.
X?H:#$d_seteuid HAS_SETEUID		/**/
X?H:.
X?LINT:set d_seteuid
X: see if seteuid exists
Xset seteuid d_seteuid
Xeval $inlibc
X
END_OF_FILE
  if test 1127 -ne `wc -c <'mcon/U/d_seteuid.U'`; then
    echo shar: \"'mcon/U/d_seteuid.U'\" unpacked with wrong size!
  fi
  # end of 'mcon/U/d_seteuid.U'
fi
if test -f 'mcon/U/d_setpgrp2.U' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'mcon/U/d_setpgrp2.U'\"
else
  echo shar: Extracting \"'mcon/U/d_setpgrp2.U'\" \(1136 characters\)
  sed "s/^X//" >'mcon/U/d_setpgrp2.U' <<'END_OF_FILE'
X?RCS: $Id: d_setpgrp2.U,v 3.0 1993/08/18 12:07:10 ram Exp $
X?RCS:
X?RCS: Copyright (c) 1991-1993, Raphael Manfredi
X?RCS: 
X?RCS: You may redistribute only under the terms of the Artistic Licence,
X?RCS: as specified in the README file that comes with the distribution.
X?RCS: You may reuse parts of this distribution only within the terms of
X?RCS: that same Artistic Licence; a copy of which may be found at the root
X?RCS: of the source tree for dist 3.0.
X?RCS:
X?RCS: $Log: d_setpgrp2.U,v $
X?RCS: Revision 3.0  1993/08/18  12:07:10  ram
X?RCS: Baseline for dist 3.0 netwide release.
X?RCS:
X?MAKE:d_setpgrp2: Inlibc
X?MAKE:	-pick add $@ %<
X?S:d_setpgrp2:
X?S:	This variable conditionally defines the HAS_SETPGRP2 symbol, which
X?S:	indicates to the C program that the setpgrp2() (as in DG/UX) routine
X?S:	is available to set the current process group.
X?S:.
X?C:HAS_SETPGRP2 (SETPGRP2):
X?C:	This symbol, if defined, indicates that the setpgrp2() (as in DG/UX)
X?C:	routine is available to set the current process group.
X?C:.
X?H:#$d_setpgrp2 HAS_SETPGRP2		/**/
X?H:.
X?LINT:set d_setpgrp2
X: see if setpgrp2 exists
Xset setpgrp2 d_setpgrp2
Xeval $inlibc
X
END_OF_FILE
  if test 1136 -ne `wc -c <'mcon/U/d_setpgrp2.U'`; then
    echo shar: \"'mcon/U/d_setpgrp2.U'\" unpacked with wrong size!
  fi
  # end of 'mcon/U/d_setpgrp2.U'
fi
if test -f 'mcon/U/d_setrgid.U' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'mcon/U/d_setrgid.U'\"
else
  echo shar: Extracting \"'mcon/U/d_setrgid.U'\" \(1117 characters\)
  sed "s/^X//" >'mcon/U/d_setrgid.U' <<'END_OF_FILE'
X?RCS: $Id: d_setrgid.U,v 3.0 1993/08/18 12:07:14 ram Exp $
X?RCS:
X?RCS: Copyright (c) 1991-1993, Raphael Manfredi
X?RCS: 
X?RCS: You may redistribute only under the terms of the Artistic Licence,
X?RCS: as specified in the README file that comes with the distribution.
X?RCS: You may reuse parts of this distribution only within the terms of
X?RCS: that same Artistic Licence; a copy of which may be found at the root
X?RCS: of the source tree for dist 3.0.
X?RCS:
X?RCS: $Log: d_setrgid.U,v $
X?RCS: Revision 3.0  1993/08/18  12:07:14  ram
X?RCS: Baseline for dist 3.0 netwide release.
X?RCS:
X?MAKE:d_setrgid: Inlibc
X?MAKE:	-pick add $@ %<
X?S:d_setrgid:
X?S:	This variable conditionally defines the HAS_SETRGID symbol, which
X?S:	indicates to the C program that the setrgid() routine is available
X?S:	to change the real gid of the current program.
X?S:.
X?C:HAS_SETRGID (SETRGID):
X?C:	This symbol, if defined, indicates that the setrgid routine is available
X?C:	to change the real gid of the current program.
X?C:.
X?H:#$d_setrgid HAS_SETRGID		/**/
X?H:.
X?LINT:set d_setrgid
X: see if setrgid exists
Xset setrgid d_setrgid
Xeval $inlibc
X
END_OF_FILE
  if test 1117 -ne `wc -c <'mcon/U/d_setrgid.U'`; then
    echo shar: \"'mcon/U/d_setrgid.U'\" unpacked with wrong size!
  fi
  # end of 'mcon/U/d_setrgid.U'
fi
if test -f 'mcon/U/d_setruid.U' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'mcon/U/d_setruid.U'\"
else
  echo shar: Extracting \"'mcon/U/d_setruid.U'\" \(1117 characters\)
  sed "s/^X//" >'mcon/U/d_setruid.U' <<'END_OF_FILE'
X?RCS: $Id: d_setruid.U,v 3.0 1993/08/18 12:07:15 ram Exp $
X?RCS:
X?RCS: Copyright (c) 1991-1993, Raphael Manfredi
X?RCS: 
X?RCS: You may redistribute only under the terms of the Artistic Licence,
X?RCS: as specified in the README file that comes with the distribution.
X?RCS: You may reuse parts of this distribution only within the terms of
X?RCS: that same Artistic Licence; a copy of which may be found at the root
X?RCS: of the source tree for dist 3.0.
X?RCS:
X?RCS: $Log: d_setruid.U,v $
X?RCS: Revision 3.0  1993/08/18  12:07:15  ram
X?RCS: Baseline for dist 3.0 netwide release.
X?RCS:
X?MAKE:d_setruid: Inlibc
X?MAKE:	-pick add $@ %<
X?S:d_setruid:
X?S:	This variable conditionally defines the HAS_SETRUID symbol, which
X?S:	indicates to the C program that the setruid() routine is available
X?S:	to change the real uid of the current program.
X?S:.
X?C:HAS_SETRUID (SETRUID):
X?C:	This symbol, if defined, indicates that the setruid routine is available
X?C:	to change the real uid of the current program.
X?C:.
X?H:#$d_setruid HAS_SETRUID		/**/
X?H:.
X?LINT:set d_setruid
X: see if setruid exists
Xset setruid d_setruid
Xeval $inlibc
X
END_OF_FILE
  if test 1117 -ne `wc -c <'mcon/U/d_setruid.U'`; then
    echo shar: \"'mcon/U/d_setruid.U'\" unpacked with wrong size!
  fi
  # end of 'mcon/U/d_setruid.U'
fi
if test -f 'mcon/U/d_strtok.U' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'mcon/U/d_strtok.U'\"
else
  echo shar: Extracting \"'mcon/U/d_strtok.U'\" \(1110 characters\)
  sed "s/^X//" >'mcon/U/d_strtok.U' <<'END_OF_FILE'
X?RCS: $Id: d_strtok.U,v 3.0 1993/08/18 12:07:38 ram Exp $
X?RCS:
X?RCS: Copyright (c) 1991-1993, Raphael Manfredi
X?RCS: 
X?RCS: You may redistribute only under the terms of the Artistic Licence,
X?RCS: as specified in the README file that comes with the distribution.
X?RCS: You may reuse parts of this distribution only within the terms of
X?RCS: that same Artistic Licence; a copy of which may be found at the root
X?RCS: of the source tree for dist 3.0.
X?RCS:
X?RCS: $Log: d_strtok.U,v $
X?RCS: Revision 3.0  1993/08/18  12:07:38  ram
X?RCS: Baseline for dist 3.0 netwide release.
X?RCS:
X?X:
X?X:	The strtok routine now appears to be a standard one, but it was
X?X:	missing in early BSD systems.
X?X:
X?MAKE:d_strtok: Inlibc
X?MAKE:	-pick add $@ %<
X?S:d_strtok:
X?S:	This variable conditionally defines HAS_STRTOK if strtok() is
X?S:	available to scan strings for tokens.
X?S:.
X?C:HAS_STRTOK (STRTOK):
X?C:	This symbol, if defined, indicates that the strtok routine is
X?C:	available to scan strings for tokens.
X?C:.
X?H:#$d_strtok HAS_STRTOK	/**/
X?H:.
X?LINT:set d_strtok
X: see if strtok exists
Xset strtok d_strtok
Xeval $inlibc
X
END_OF_FILE
  if test 1110 -ne `wc -c <'mcon/U/d_strtok.U'`; then
    echo shar: \"'mcon/U/d_strtok.U'\" unpacked with wrong size!
  fi
  # end of 'mcon/U/d_strtok.U'
fi
if test -f 'mcon/U/d_strtol.U' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'mcon/U/d_strtol.U'\"
else
  echo shar: Extracting \"'mcon/U/d_strtol.U'\" \(1145 characters\)
  sed "s/^X//" >'mcon/U/d_strtol.U' <<'END_OF_FILE'
X?RCS: $Id: d_strtol.U,v 3.0 1993/08/18 12:07:39 ram Exp $
X?RCS:
X?RCS: Copyright (c) 1991-1993, Raphael Manfredi
X?RCS: 
X?RCS: You may redistribute only under the terms of the Artistic Licence,
X?RCS: as specified in the README file that comes with the distribution.
X?RCS: You may reuse parts of this distribution only within the terms of
X?RCS: that same Artistic Licence; a copy of which may be found at the root
X?RCS: of the source tree for dist 3.0.
X?RCS:
X?RCS: $Log: d_strtol.U,v $
X?RCS: Revision 3.0  1993/08/18  12:07:39  ram
X?RCS: Baseline for dist 3.0 netwide release.
X?RCS:
X?MAKE:d_strtol: Inlibc
X?MAKE:	-pick add $@ %<
X?S:d_strtol:
X?S:	This variable conditionally defines the HAS_STRTOL symbol, which
X?S:	indicates to the C program that the strtol() routine is available
X?S:	to provide better numeric string conversion than atoi() and friends.
X?S:.
X?C:HAS_STRTOL (STRTOL):
X?C:	This symbol, if defined, indicates that the strtol routine is available
X?C:	to provide better numeric string conversion than atoi() and friends.
X?C:.
X?H:#$d_strtol HAS_STRTOL	/**/
X?H:.
X?LINT:set d_strtol
X: see if strtol exists
Xset strtol d_strtol
Xeval $inlibc
X
END_OF_FILE
  if test 1145 -ne `wc -c <'mcon/U/d_strtol.U'`; then
    echo shar: \"'mcon/U/d_strtol.U'\" unpacked with wrong size!
  fi
  # end of 'mcon/U/d_strtol.U'
fi
if test -f 'mcon/U/d_wcstombs.U' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'mcon/U/d_wcstombs.U'\"
else
  echo shar: Extracting \"'mcon/U/d_wcstombs.U'\" \(1138 characters\)
  sed "s/^X//" >'mcon/U/d_wcstombs.U' <<'END_OF_FILE'
X?RCS: $Id: d_wcstombs.U,v 3.0 1993/08/18 12:08:03 ram Exp $
X?RCS:
X?RCS: Copyright (c) 1991-1993, Raphael Manfredi
X?RCS: 
X?RCS: You may redistribute only under the terms of the Artistic Licence,
X?RCS: as specified in the README file that comes with the distribution.
X?RCS: You may reuse parts of this distribution only within the terms of
X?RCS: that same Artistic Licence; a copy of which may be found at the root
X?RCS: of the source tree for dist 3.0.
X?RCS:
X?RCS: $Log: d_wcstombs.U,v $
X?RCS: Revision 3.0  1993/08/18  12:08:03  ram
X?RCS: Baseline for dist 3.0 netwide release.
X?RCS:
X?MAKE:d_wcstombs: Inlibc
X?MAKE:	-pick add $@ %<
X?S:d_wcstombs:
X?S:	This variable conditionally defines the HAS_WCSTOMBS symbol, which
X?S:	indicates to the C program that the wcstombs() routine is available
X?S:	to convert wide character strings to multibyte strings.
X?S:.
X?C:HAS_WCSTOMBS:
X?C:	This symbol, if defined, indicates that the wcstombs routine is
X?C:	available to convert wide character strings to multibyte strings.
X?C:.
X?H:#$d_wcstombs HAS_WCSTOMBS	/**/
X?H:.
X?LINT:set d_wcstombs
X: see if wcstombs exists
Xset wcstombs d_wcstombs
Xeval $inlibc
X
END_OF_FILE
  if test 1138 -ne `wc -c <'mcon/U/d_wcstombs.U'`; then
    echo shar: \"'mcon/U/d_wcstombs.U'\" unpacked with wrong size!
  fi
  # end of 'mcon/U/d_wcstombs.U'
fi
if test -f 'mcon/U/defeditor.U' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'mcon/U/defeditor.U'\"
else
  echo shar: Extracting \"'mcon/U/defeditor.U'\" \(1183 characters\)
  sed "s/^X//" >'mcon/U/defeditor.U' <<'END_OF_FILE'
X?RCS: $Id: defeditor.U,v 3.0 1993/08/18 12:08:05 ram Exp $
X?RCS:
X?RCS: Copyright (c) 1991-1993, Raphael Manfredi
X?RCS: 
X?RCS: You may redistribute only under the terms of the Artistic Licence,
X?RCS: as specified in the README file that comes with the distribution.
X?RCS: You may reuse parts of this distribution only within the terms of
X?RCS: that same Artistic Licence; a copy of which may be found at the root
X?RCS: of the source tree for dist 3.0.
X?RCS:
X?RCS: $Log: defeditor.U,v $
X?RCS: Revision 3.0  1993/08/18  12:08:05  ram
X?RCS: Baseline for dist 3.0 netwide release.
X?RCS:
X?MAKE:defeditor: Getfile Oldconfig Loc vi
X?MAKE:	-pick add $@ %<
X?S:defeditor:
X?S:	This variable contains the eventual value of the DEFEDITOR symbol,
X?S:	which contains the name of the default editor.
X?S:.
X?C:DEFEDITOR:
X?C:	This symbol contains the full pathname of the default editor.
X?C:.
X?H:#define DEFEDITOR "$defeditor"		/**/
X?H:.
X?T:_vi
X?LINT:use vi
X: determine default editor
Xecho " "
Xcase "$defeditor" in
X'')
X	case "$_vi" in
X	*/*) dflt="$_vi";;
X	*) dflt=/usr/ucb/vi;;
X	esac
X	;;
X*)  dflt="$defeditor"
X	;;
Xesac
Xfn=f/
Xrp="What is the default editor on your system?"
X. ./getfile
Xdefeditor="$ans"
X
END_OF_FILE
  if test 1183 -ne `wc -c <'mcon/U/defeditor.U'`; then
    echo shar: \"'mcon/U/defeditor.U'\" unpacked with wrong size!
  fi
  # end of 'mcon/U/defeditor.U'
fi
if test -f 'mcon/U/i_limits.U' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'mcon/U/i_limits.U'\"
else
  echo shar: Extracting \"'mcon/U/i_limits.U'\" \(1142 characters\)
  sed "s/^X//" >'mcon/U/i_limits.U' <<'END_OF_FILE'
X?RCS: $Id: i_limits.U,v 3.0 1993/08/18 12:08:20 ram Exp $
X?RCS:
X?RCS: Copyright (c) 1991-1993, Raphael Manfredi
X?RCS: 
X?RCS: You may redistribute only under the terms of the Artistic Licence,
X?RCS: as specified in the README file that comes with the distribution.
X?RCS: You may reuse parts of this distribution only within the terms of
X?RCS: that same Artistic Licence; a copy of which may be found at the root
X?RCS: of the source tree for dist 3.0.
X?RCS:
X?RCS: $Log: i_limits.U,v $
X?RCS: Revision 3.0  1993/08/18  12:08:20  ram
X?RCS: Baseline for dist 3.0 netwide release.
X?RCS:
X?MAKE:i_limits: Inhdr
X?MAKE:	-pick add $@ %<
X?S:i_limits:
X?S:	This variable conditionally defines the I_LIMITS symbol, and indicates
X?S:	whether a C program may include <limits.h> to get symbols like WORD_BIT
X?S:	and friends.
X?S:.
X?C:I_LIMITS:
X?C:	This symbol, if defined, indicates to the C program that it should
X?C:	include <limits.h> to get definition of symbols like WORD_BIT or
X?C:	LONG_MAX, i.e. machine dependant limitations.
X?C:.
X?H:#$i_limits I_LIMITS		/**/
X?H:.
X?LINT:set i_limits
X: see if this is a limits.h system
Xset limits.h i_limits
Xeval $inhdr
X
END_OF_FILE
  if test 1142 -ne `wc -c <'mcon/U/i_limits.U'`; then
    echo shar: \"'mcon/U/i_limits.U'\" unpacked with wrong size!
  fi
  # end of 'mcon/U/i_limits.U'
fi
if test -f 'mcon/U/i_sysresrc.U' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'mcon/U/i_sysresrc.U'\"
else
  echo shar: Extracting \"'mcon/U/i_sysresrc.U'\" \(1141 characters\)
  sed "s/^X//" >'mcon/U/i_sysresrc.U' <<'END_OF_FILE'
X?RCS: $Id: i_sysresrc.U,v 3.0 1993/08/18 12:08:34 ram Exp $
X?RCS:
X?RCS: Copyright (c) 1991-1993, Raphael Manfredi
X?RCS: 
X?RCS: You may redistribute only under the terms of the Artistic Licence,
X?RCS: as specified in the README file that comes with the distribution.
X?RCS: You may reuse parts of this distribution only within the terms of
X?RCS: that same Artistic Licence; a copy of which may be found at the root
X?RCS: of the source tree for dist 3.0.
X?RCS:
X?RCS: $Log: i_sysresrc.U,v $
X?RCS: Revision 3.0  1993/08/18  12:08:34  ram
X?RCS: Baseline for dist 3.0 netwide release.
X?RCS:
X?X:
X?X:	Look wether <sys/resource.h> needs to be included
X?X:
X?MAKE:i_sysresrc: Inhdr
X?MAKE:	-pick add $@ %<
X?S:i_sysresrc:
X?S:	This variable conditionally defines the I_SYS_RESOURCE symbol,
X?S:	and indicates whether a C program should include <sys/resource.h>.
X?S:.
X?C:I_SYS_RESOURCE (I_SYSRESOURCE):
X?C:	This symbol, if defined, indicates to the C program that it should
X?C:	include <sys/resource.h>.
X?C:.
X?H:#$i_sysresrc I_SYS_RESOURCE		/**/
X?H:.
X?LINT:set i_sysresrc
X: see if sys/resource.h has to be included
Xset sys/resource.h i_sysresrc
Xeval $inhdr
X
END_OF_FILE
  if test 1141 -ne `wc -c <'mcon/U/i_sysresrc.U'`; then
    echo shar: \"'mcon/U/i_sysresrc.U'\" unpacked with wrong size!
  fi
  # end of 'mcon/U/i_sysresrc.U'
fi
if test -f 'mcon/U/i_sysun.U' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'mcon/U/i_sysun.U'\"
else
  echo shar: Extracting \"'mcon/U/i_sysun.U'\" \(1140 characters\)
  sed "s/^X//" >'mcon/U/i_sysun.U' <<'END_OF_FILE'
X?RCS: $Id: i_sysun.U,v 3.0 1993/08/18 12:08:42 ram Exp $
X?RCS:
X?RCS: Copyright (c) 1991-1993, Raphael Manfredi
X?RCS: 
X?RCS: You may redistribute only under the terms of the Artistic Licence,
X?RCS: as specified in the README file that comes with the distribution.
X?RCS: You may reuse parts of this distribution only within the terms of
X?RCS: that same Artistic Licence; a copy of which may be found at the root
X?RCS: of the source tree for dist 3.0.
X?RCS:
X?RCS: $Log: i_sysun.U,v $
X?RCS: Revision 3.0  1993/08/18  12:08:42  ram
X?RCS: Baseline for dist 3.0 netwide release.
X?RCS:
X?X:
X?X: This unit looks wether <sys/un.h> is available or not
X?X:
X?MAKE:i_sysun: Inhdr
X?MAKE:	-pick add $@ %<
X?S:i_sysun:
X?S:	This variable conditionally defines I_SYS_UN, which indicates
X?S:	to the C program that it should include <sys/un.h> to get UNIX
X?S:	domain socket definitions.
X?S:.
X?C:I_SYS_UN:
X?C:	This symbol, if defined, indicates to the C program that it should
X?C:	include <sys/un.h> to get UNIX domain socket definitions.
X?C:.
X?H:#$i_sysun I_SYS_UN		/**/
X?H:.
X?LINT:set i_sysun
X: see if this is a sys/un.h system
Xset sys/un.h i_sysun
Xeval $inhdr
X
END_OF_FILE
  if test 1140 -ne `wc -c <'mcon/U/i_sysun.U'`; then
    echo shar: \"'mcon/U/i_sysun.U'\" unpacked with wrong size!
  fi
  # end of 'mcon/U/i_sysun.U'
fi
if test -f 'mcon/U/i_syswait.U' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'mcon/U/i_syswait.U'\"
else
  echo shar: Extracting \"'mcon/U/i_syswait.U'\" \(1098 characters\)
  sed "s/^X//" >'mcon/U/i_syswait.U' <<'END_OF_FILE'
X?RCS: $Id: i_syswait.U,v 3.0 1993/08/18 12:08:42 ram Exp $
X?RCS:
X?RCS: Copyright (c) 1991-1993, Raphael Manfredi
X?RCS: 
X?RCS: You may redistribute only under the terms of the Artistic Licence,
X?RCS: as specified in the README file that comes with the distribution.
X?RCS: You may reuse parts of this distribution only within the terms of
X?RCS: that same Artistic Licence; a copy of which may be found at the root
X?RCS: of the source tree for dist 3.0.
X?RCS:
X?RCS: $Log: i_syswait.U,v $
X?RCS: Revision 3.0  1993/08/18  12:08:42  ram
X?RCS: Baseline for dist 3.0 netwide release.
X?RCS:
X?X:
X?X: This unit looks wether <sys/wait.h> is available or not
X?X:
X?MAKE:i_syswait: Inhdr
X?MAKE:	-pick add $@ %<
X?S:i_syswait:
X?S:	This variable conditionally defines I_SYS_WAIT, which indicates
X?S:	to the C program that it should include <sys/wait.h>.
X?S:.
X?C:I_SYS_WAIT (I_SYSWAIT):
X?C:	This symbol, if defined, indicates to the C program that it should
X?C:	include <sys/wait.h>.
X?C:.
X?H:#$i_syswait I_SYS_WAIT	/**/
X?H:.
X?LINT:set i_syswait
X: see if this is a syswait system
Xset sys/wait.h i_syswait
Xeval $inhdr
X
END_OF_FILE
  if test 1098 -ne `wc -c <'mcon/U/i_syswait.U'`; then
    echo shar: \"'mcon/U/i_syswait.U'\" unpacked with wrong size!
  fi
  # end of 'mcon/U/i_syswait.U'
fi
if test -f 'mcon/U/pager.U' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'mcon/U/pager.U'\"
else
  echo shar: Extracting \"'mcon/U/pager.U'\" \(1141 characters\)
  sed "s/^X//" >'mcon/U/pager.U' <<'END_OF_FILE'
X?RCS: $Id: pager.U,v 3.0 1993/08/18 12:09:30 ram Exp $
X?RCS:
X?RCS: Copyright (c) 1991-1993, Raphael Manfredi
X?RCS: 
X?RCS: You may redistribute only under the terms of the Artistic Licence,
X?RCS: as specified in the README file that comes with the distribution.
X?RCS: You may reuse parts of this distribution only within the terms of
X?RCS: that same Artistic Licence; a copy of which may be found at the root
X?RCS: of the source tree for dist 3.0.
X?RCS:
X?RCS: $Log: pager.U,v $
X?RCS: Revision 3.0  1993/08/18  12:09:30  ram
X?RCS: Baseline for dist 3.0 netwide release.
X?RCS:
X?MAKE:pager: pg more less Myread Oldconfig
X?MAKE:	-pick add $@ %<
X?S:pager:
X?S:	This variable contains the name of the preferred pager on the system.
X?S:	Usual values are (the full pathnames of) more, less, pg, or cat.
X?S:.
X: locate the preferred pager for this system
Xcase "$pager" in
X'')
X	case "$pg" in
X	/*) dflt=$pg;;
X	esac
X	case "$more" in
X	/*) dflt=$more;;
X	esac
X	case "$less" in
X	/*) dflt=$less;;
X	esac
X	case "$dflt" in
X	'') dflt=/usr/ucb/more;;
X	esac
X	;;
X*) dflt="$pager";;
Xesac
Xecho " "
Xfn=f/
Xrp='What pager is used on your system?'
X. ./getfile
Xpager="$ans"
X
END_OF_FILE
  if test 1141 -ne `wc -c <'mcon/U/pager.U'`; then
    echo shar: \"'mcon/U/pager.U'\" unpacked with wrong size!
  fi
  # end of 'mcon/U/pager.U'
fi
if test -f 'mcon/files/i_include.U' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'mcon/files/i_include.U'\"
else
  echo shar: Extracting \"'mcon/files/i_include.U'\" \(1071 characters\)
  sed "s/^X//" >'mcon/files/i_include.U' <<'END_OF_FILE'
X?RCS: $Id: i_include.U,v 3.0 1993/08/18 12:10:07 ram Exp $
X?RCS:
X?RCS:  Copyright (c) 1991-1993, Raphael Manfredi
X?RCS:  
X?RCS:  You may redistribute only under the terms of the Artistic Licence,
X?RCS:  as specified in the README file that comes with the distribution.
X?RCS:  You may reuse parts of this distribution only within the terms of
X?RCS:  that same Artistic Licence; a copy of which may be found at the root
X?RCS:  of the source tree for dist 3.0.
X?RCS:
X?RCS: $Log: i_include.U,v $
X?RCS: Revision 3.0  1993/08/18  12:10:07  ram
X?RCS: Baseline for dist 3.0 netwide release.
X?RCS:
X?MAKE:i_<INCLUDE>: Inhdr
X?MAKE:	-pick add $@ %<
X?S:i_<INCLUDE>:
X?S:	This variable conditionally defines the I_<%INCLUDE> symbol, which
X?S:	indicates to the C program that <<INC_PATH>.h> exists and should
X?S:	be included.
X?S:.
X?C:I_<%INCLUDE>:
X?C:	This symbol, if defined, indicates that <<INC_PATH>.h> exists and should
X?C:	be included.
X?C:.
X?H:#$i_<INCLUDE> I_<%INCLUDE>		/**/
X?H:.
X?LINT:set i_<INCLUDE>
X: see if <INC_PATH>.h is available
Xset <INC_PATH>.h i_<INCLUDE>
Xeval $inhdr
X
END_OF_FILE
  if test 1071 -ne `wc -c <'mcon/files/i_include.U'`; then
    echo shar: \"'mcon/files/i_include.U'\" unpacked with wrong size!
  fi
  # end of 'mcon/files/i_include.U'
fi
if test -f 'pl/rangeargs.pl' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'pl/rangeargs.pl'\"
else
  echo shar: Extracting \"'pl/rangeargs.pl'\" \(1180 characters\)
  sed "s/^X//" >'pl/rangeargs.pl' <<'END_OF_FILE'
X;# $Id: rangeargs.pl,v 3.0 1993/08/18 12:10:58 ram Exp $
X;#
X;#  Copyright (c) 1991-1993, Raphael Manfredi
X;#  
X;#  You may redistribute only under the terms of the Artistic Licence,
X;#  as specified in the README file that comes with the distribution.
X;#  You may reuse parts of this distribution only within the terms of
X;#  that same Artistic Licence; a copy of which may be found at the root
X;#  of the source tree for dist 3.0.
X;#
X;# $Log: rangeargs.pl,v $
X;# Revision 3.0  1993/08/18  12:10:58  ram
X;# Baseline for dist 3.0 netwide release.
X;#
X;#
Xsub rangeargs {
X	local($result) = '';
X	local($min,$max,$_);
X	open(PL,"patchlevel.h") || die "Can't open patchlevel.h\n";
X	while (<PL>) {
X		$maxspec = $1 if /^#define\s+PATCHLEVEL\s+(\d+)/;
X	}
X	close PL;
X	die "Malformed patchlevel.h file.\n" if $maxspec eq '';
X	while ($#_ >= 0) {
X		$_ = shift(@_);
X		while (/^\s*\d/) {
X			s/^\s*(\d+)//;
X			$min = $1;
X			if (s/^,//) {
X				$max = $min;
X			} elsif (s/^-(\d*)//) {
X				$max = $1;
X				if ($max == 0 && $maxspec) {
X					$max = $maxspec;
X				}
X				s/^[^,],?//;
X			} else {
X				$max = $min;
X			}
X			for ($i = $min; $i <= $max; ++$i) {
X				$result .= $i . ' ';
X			}
X		}
X	}
X	$result;
X}
X
END_OF_FILE
  if test 1180 -ne `wc -c <'pl/rangeargs.pl'`; then
    echo shar: \"'pl/rangeargs.pl'\" unpacked with wrong size!
  fi
  # end of 'pl/rangeargs.pl'
fi
echo shar: End of archive 25 \(of 28\).
cp /dev/null ark25isdone
MISSING=""
for I in 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 ; do
    if test ! -f ark${I}isdone ; then
	MISSING="${MISSING} ${I}"
    fi
done
if test "${MISSING}" = "" ; then
    echo You have unpacked all 28 archives.
    echo "Please run PACKNOTES through sh, read REAMDE and then type Configure."
    rm -f ark[1-9]isdone ark[1-9][0-9]isdone
else
    echo You still must unpack the following archives:
    echo "        " ${MISSING}
fi
exit 0

exit 0 # Just in case...
