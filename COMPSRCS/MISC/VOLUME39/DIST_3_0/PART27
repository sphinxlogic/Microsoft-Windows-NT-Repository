Newsgroups: comp.sources.misc
From: Raphael Manfredi <ram@acri.fr>
Subject: v39i031:  dist-3.0 - Configure script generator and related tools, Part27/28
Message-ID: <1993Aug20.131756.22586@sparky.sterling.com>
X-Md4-Signature: 7a3675c68e89b4239e9139b85241fcdd
Sender: kent@sparky.sterling.com (Kent Landfield)
Organization: Advanced Computer Research Institute, Lyon, France.
Date: Fri, 20 Aug 1993 13:17:56 GMT
Approved: kent@sparky.sterling.com

Submitted-by: Raphael Manfredi <ram@acri.fr>
Posting-number: Volume 39, Issue 31
Archive-name: dist-3.0/part27
Environment: UNIX, Perl, RCS

#! /bin/sh
# This is a shell archive.  Remove anything before this line, then feed it
# into a shell via "sh file" or similar.  To overwrite existing files,
# type "sh file -c".
# The tool that generated this appeared in the comp.sources.unix newsgroup;
# send mail to comp-sources-unix@uunet.uu.net if you want that tool.
# Contents:  lib/errnolist.mk mcon/U/End.U mcon/U/d_cbrt.U
#   mcon/U/d_csh.U mcon/U/d_ctermid.U mcon/U/d_fcntl.U
#   mcon/U/d_gethid.U mcon/U/d_lstat.U mcon/U/d_msgget.U
#   mcon/U/d_popen.U mcon/U/d_semget.U mcon/U/d_semop.U
#   mcon/U/d_shmat.U mcon/U/d_shmdt.U mcon/U/d_sigblock.U
#   mcon/U/d_sighold.U mcon/U/d_strstr.U mcon/U/d_system.U
#   mcon/U/d_truncate.U mcon/U/d_usleep.U mcon/U/d_wait3.U
#   mcon/U/d_waitpid.U mcon/U/i_gdbm.U mcon/U/i_malloc.U
#   mcon/U/i_memory.U mcon/U/i_ndbm.U mcon/U/i_stdarg.U
#   mcon/U/i_stddef.U mcon/U/i_stdlib.U mcon/U/i_sysdir.U
#   mcon/U/i_utime.U mcon/U/i_vfork.U mcon/U/i_whoami.U
#   mcon/U/patchlevel.U mcon/U/rootid.U pl/package.pl
# Wrapped by ram@soft208 on Wed Aug 18 14:42:26 1993
PATH=/bin:/usr/bin:/usr/ucb ; export PATH
echo If this archive is complete, you will see the following message:
echo '          "shar: End of archive 27 (of 28)."'
if test -f 'lib/errnolist.mk' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'lib/errnolist.mk'\"
else
  echo shar: Extracting \"'lib/errnolist.mk'\" \(973 characters\)
  sed "s/^X//" >'lib/errnolist.mk' <<'END_OF_FILE'
X# $Id: errnolist.mk,v 3.0 1993/08/18 12:04:36 ram Exp $
X#
X#  Copyright (c) 1991-1993, Raphael Manfredi
X#  
X#  You may redistribute only under the terms of the Artistic Licence,
X#  as specified in the README file that comes with the distribution.
X#  You may reuse parts of this distribution only within the terms of
X#  that same Artistic Licence; a copy of which may be found at the root
X#  of the source tree for dist 3.0.
X#
X# Original Author: Harlan Stenn <harlan@mumps.pfcs.com>
X#
X# $Log: errnolist.mk,v $
X# Revision 3.0  1993/08/18  12:04:36  ram
X# Baseline for dist 3.0 netwide release.
X#
X#
X# Make rules for the errnolist stuff
X
Xcase "$errnolist" in
X'') ;;
X*)
X    $spitshell >>Makefile <<!GROK!THIS!
X$errnolistc: $errnolistSH $errnolista
X	sh ./$errnolistSH
X
X!GROK!THIS!
X    ;;
Xesac
X
X$spitshell >>Makefile <<!GROK!THIS!
XERRNOLIST_OBJ=$errnolisto
X!GROK!THIS!
X
X$spitshell >>Makefile <<'!NO!SUBS!'
X
Xfoo: foo.o $(ERRNOLIST_OBJ)
X	$(CC) -o $@ foo.o $(ERRNOLIST_OBJ)
X!NO!SUBS!
END_OF_FILE
  if test 973 -ne `wc -c <'lib/errnolist.mk'`; then
    echo shar: \"'lib/errnolist.mk'\" unpacked with wrong size!
  fi
  # end of 'lib/errnolist.mk'
fi
if test -f 'mcon/U/End.U' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'mcon/U/End.U'\"
else
  echo shar: Extracting \"'mcon/U/End.U'\" \(1035 characters\)
  sed "s/^X//" >'mcon/U/End.U' <<'END_OF_FILE'
X?RCS: $Id: End.U,v 3.0 1993/08/18 12:04:51 ram Exp $
X?RCS:
X?RCS: Copyright (c) 1991-1993, Raphael Manfredi
X?RCS: 
X?RCS: You may redistribute only under the terms of the Artistic Licence,
X?RCS: as specified in the README file that comes with the distribution.
X?RCS: You may reuse parts of this distribution only within the terms of
X?RCS: that same Artistic Licence; a copy of which may be found at the root
X?RCS: of the source tree for dist 3.0.
X?RCS:
X?RCS: $Log: End.U,v $
X?RCS: Revision 3.0  1993/08/18  12:04:51  ram
X?RCS: Baseline for dist 3.0 netwide release.
X?RCS:
X?X: 
X?X: This unit serves as the goal which forces make to choose all the units that
X?X: ask questions.  The $W on the ?MAKE: line is the list of all symbols wanted.
X?X: To force any unit to be included, copy this unit to your private U directory
X?X: and add the name of the unit desired to the ?MAKE: dependency line.
X?X: 
X?MAKE:End: $W
X?MAKE:	-pick add $@ %<
X?LINT:use $W
X: end of configuration questions
Xecho " "
Xecho "End of configuration questions."
Xecho " "
X
END_OF_FILE
  if test 1035 -ne `wc -c <'mcon/U/End.U'`; then
    echo shar: \"'mcon/U/End.U'\" unpacked with wrong size!
  fi
  # end of 'mcon/U/End.U'
fi
if test -f 'mcon/U/d_cbrt.U' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'mcon/U/d_cbrt.U'\"
else
  echo shar: Extracting \"'mcon/U/d_cbrt.U'\" \(1003 characters\)
  sed "s/^X//" >'mcon/U/d_cbrt.U' <<'END_OF_FILE'
X?RCS: $Id: d_cbrt.U,v 3.0 1993/08/18 12:05:48 ram Exp $
X?RCS:
X?RCS: Copyright (c) 1991-1993, Raphael Manfredi
X?RCS: 
X?RCS: You may redistribute only under the terms of the Artistic Licence,
X?RCS: as specified in the README file that comes with the distribution.
X?RCS: You may reuse parts of this distribution only within the terms of
X?RCS: that same Artistic Licence; a copy of which may be found at the root
X?RCS: of the source tree for dist 3.0.
X?RCS:
X?RCS: $Log: d_cbrt.U,v $
X?RCS: Revision 3.0  1993/08/18  12:05:48  ram
X?RCS: Baseline for dist 3.0 netwide release.
X?RCS:
X?MAKE:d_cbrt: Inlibc
X?MAKE:	-pick add $@ %<
X?S:d_cbrt:
X?S:	This variable conditionally defines the CBRT symbol, which
X?S:	indicates to the C program that the cbrt() (cube root) function
X?S:	is available.
X?S:.
X?C:HAS_CBRT (CBRT):
X?C:	This symbol, if defined, indicates that the cbrt() (cube root)
X?C:	function is available.
X?C:.
X?H:#$d_cbrt HAS_CBRT	/**/
X?H:.
X?LINT:set d_cbrt
X: see if cbrt exists
Xset cbrt d_cbrt
Xeval $inlibc
X
END_OF_FILE
  if test 1003 -ne `wc -c <'mcon/U/d_cbrt.U'`; then
    echo shar: \"'mcon/U/d_cbrt.U'\" unpacked with wrong size!
  fi
  # end of 'mcon/U/d_cbrt.U'
fi
if test -f 'mcon/U/d_csh.U' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'mcon/U/d_csh.U'\"
else
  echo shar: Extracting \"'mcon/U/d_csh.U'\" \(1057 characters\)
  sed "s/^X//" >'mcon/U/d_csh.U' <<'END_OF_FILE'
X?RCS: $Id: d_csh.U,v 3.0 1993/08/18 12:05:53 ram Exp $
X?RCS:
X?RCS: Copyright (c) 1991-1993, Raphael Manfredi
X?RCS: 
X?RCS: You may redistribute only under the terms of the Artistic Licence,
X?RCS: as specified in the README file that comes with the distribution.
X?RCS: You may reuse parts of this distribution only within the terms of
X?RCS: that same Artistic Licence; a copy of which may be found at the root
X?RCS: of the source tree for dist 3.0.
X?RCS:
X?RCS: $Log: d_csh.U,v $
X?RCS: Revision 3.0  1993/08/18  12:05:53  ram
X?RCS: Baseline for dist 3.0 netwide release.
X?RCS:
X?MAKE:d_csh: csh Setvar
X?MAKE:	-pick add $@ %<
X?LINT:extern csh
X?S:d_csh:
X?S:	This variable conditionally defines the CSH symbol, which
X?S:	indicates to the C program that the C-shell exists.
X?S:.
X?C:CSH:
X?C:	This symbol, if defined, indicates that the C-shell exists.
X?C:	If defined, contains the full pathname of csh.
X?C:.
X?H:#$d_csh CSH "$csh"		/**/
X?H:.
X?LINT:set d_csh
X: get csh whereabouts
Xcase "$csh" in
X'csh') val="$undef" ;;
X*) val="$define" ;;
Xesac
Xset d_csh
Xeval $setvar
X
END_OF_FILE
  if test 1057 -ne `wc -c <'mcon/U/d_csh.U'`; then
    echo shar: \"'mcon/U/d_csh.U'\" unpacked with wrong size!
  fi
  # end of 'mcon/U/d_csh.U'
fi
if test -f 'mcon/U/d_ctermid.U' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'mcon/U/d_ctermid.U'\"
else
  echo shar: Extracting \"'mcon/U/d_ctermid.U'\" \(1026 characters\)
  sed "s/^X//" >'mcon/U/d_ctermid.U' <<'END_OF_FILE'
X?RCS: $Id: d_ctermid.U,v 3.0 1993/08/18 12:05:54 ram Exp $
X?RCS:
X?RCS: Copyright (c) 1991-1993, Raphael Manfredi
X?RCS: 
X?RCS: You may redistribute only under the terms of the Artistic Licence,
X?RCS: as specified in the README file that comes with the distribution.
X?RCS: You may reuse parts of this distribution only within the terms of
X?RCS: that same Artistic Licence; a copy of which may be found at the root
X?RCS: of the source tree for dist 3.0.
X?RCS:
X?RCS: $Log: d_ctermid.U,v $
X?RCS: Revision 3.0  1993/08/18  12:05:54  ram
X?RCS: Baseline for dist 3.0 netwide release.
X?RCS:
X?MAKE:d_ctermid: Inlibc
X?MAKE:	-pick add $@ %<
X?S:d_ctermid:
X?S:	This variable conditionally defines CTERMID if ctermid() is
X?S:	available to generate filename for terminal.
X?S:.
X?C:HAS_CTERMID (CTERMID):
X?C:	This symbol, if defined, indicates that the ctermid routine is
X?C:	available to generate filename for terminal.
X?C:.
X?H:#$d_ctermid HAS_CTERMID		/**/
X?H:.
X?LINT:set d_ctermid
X: see if ctermid exists
Xset ctermid d_ctermid
Xeval $inlibc
X
END_OF_FILE
  if test 1026 -ne `wc -c <'mcon/U/d_ctermid.U'`; then
    echo shar: \"'mcon/U/d_ctermid.U'\" unpacked with wrong size!
  fi
  # end of 'mcon/U/d_ctermid.U'
fi
if test -f 'mcon/U/d_fcntl.U' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'mcon/U/d_fcntl.U'\"
else
  echo shar: Extracting \"'mcon/U/d_fcntl.U'\" \(986 characters\)
  sed "s/^X//" >'mcon/U/d_fcntl.U' <<'END_OF_FILE'
X?RCS: $Id: d_fcntl.U,v 3.0 1993/08/18 12:06:01 ram Exp $
X?RCS:
X?RCS: Copyright (c) 1991-1993, Raphael Manfredi
X?RCS: 
X?RCS: You may redistribute only under the terms of the Artistic Licence,
X?RCS: as specified in the README file that comes with the distribution.
X?RCS: You may reuse parts of this distribution only within the terms of
X?RCS: that same Artistic Licence; a copy of which may be found at the root
X?RCS: of the source tree for dist 3.0.
X?RCS:
X?RCS: $Log: d_fcntl.U,v $
X?RCS: Revision 3.0  1993/08/18  12:06:01  ram
X?RCS: Baseline for dist 3.0 netwide release.
X?RCS:
X?MAKE:d_fcntl: Inlibc
X?MAKE:	-pick add $@ %<
X?S:d_fcntl:
X?S:	This variable conditionally defines the HAS_FCNTL symbol, and indicates
X?S:	whether the fcntl() function exists
X?S:.
X?C:HAS_FCNTL:
X?C:	This symbol, if defined, indicates to the C program that
X?C:	the fcntl() function exists.
X?C:.
X?H:#$d_fcntl HAS_FCNTL		/**/
X?H:.
X?LINT:set d_fcntl
X: see if this is an fcntl system
Xset fcntl d_fcntl
Xeval $inlibc
X
END_OF_FILE
  if test 986 -ne `wc -c <'mcon/U/d_fcntl.U'`; then
    echo shar: \"'mcon/U/d_fcntl.U'\" unpacked with wrong size!
  fi
  # end of 'mcon/U/d_fcntl.U'
fi
if test -f 'mcon/U/d_gethid.U' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'mcon/U/d_gethid.U'\"
else
  echo shar: Extracting \"'mcon/U/d_gethid.U'\" \(1010 characters\)
  sed "s/^X//" >'mcon/U/d_gethid.U' <<'END_OF_FILE'
X?RCS: $Id: d_gethid.U,v 3.0 1993/08/18 12:06:10 ram Exp $
X?RCS:
X?RCS: Copyright (c) 1991-1993, Raphael Manfredi
X?RCS: 
X?RCS: You may redistribute only under the terms of the Artistic Licence,
X?RCS: as specified in the README file that comes with the distribution.
X?RCS: You may reuse parts of this distribution only within the terms of
X?RCS: that same Artistic Licence; a copy of which may be found at the root
X?RCS: of the source tree for dist 3.0.
X?RCS:
X?RCS: $Log: d_gethid.U,v $
X?RCS: Revision 3.0  1993/08/18  12:06:10  ram
X?RCS: Baseline for dist 3.0 netwide release.
X?RCS:
X?MAKE:d_gethid: Inlibc
X?MAKE:	-pick add $@ %<
X?S:d_gethid:
X?S:	This variable conditionally defines HAS_GETHOSTID if gethostid() is
X?S:	available to get the host id.
X?S:.
X?C:HAS_GETHOSTID (GETHOSTID):
X?C:	This symbol, if defined, indicates that the gethostid system call is
X?C:	available to get the host id.
X?C:.
X?H:#$d_gethid HAS_GETHOSTID		/**/
X?H:.
X?LINT:set d_gethid
X: see if gethid exists
Xset gethostid d_gethid
Xeval $inlibc
X
END_OF_FILE
  if test 1010 -ne `wc -c <'mcon/U/d_gethid.U'`; then
    echo shar: \"'mcon/U/d_gethid.U'\" unpacked with wrong size!
  fi
  # end of 'mcon/U/d_gethid.U'
fi
if test -f 'mcon/U/d_lstat.U' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'mcon/U/d_lstat.U'\"
else
  echo shar: Extracting \"'mcon/U/d_lstat.U'\" \(1002 characters\)
  sed "s/^X//" >'mcon/U/d_lstat.U' <<'END_OF_FILE'
X?RCS: $Id: d_lstat.U,v 3.0 1993/08/18 12:06:28 ram Exp $
X?RCS:
X?RCS: Copyright (c) 1991-1993, Raphael Manfredi
X?RCS: 
X?RCS: You may redistribute only under the terms of the Artistic Licence,
X?RCS: as specified in the README file that comes with the distribution.
X?RCS: You may reuse parts of this distribution only within the terms of
X?RCS: that same Artistic Licence; a copy of which may be found at the root
X?RCS: of the source tree for dist 3.0.
X?RCS:
X?RCS: $Log: d_lstat.U,v $
X?RCS: Revision 3.0  1993/08/18  12:06:28  ram
X?RCS: Baseline for dist 3.0 netwide release.
X?RCS:
X?MAKE:d_lstat: Inlibc
X?MAKE:	-pick add $@ %<
X?S:d_lstat:
X?S:	This variable conditionally defines HAS_LSTAT if lstat() is
X?S:	available to do file stats on symbolic links.
X?S:.
X?C:HAS_LSTAT (LSTAT):
X?C:	This symbol, if defined, indicates that the lstat routine is
X?C:	available to do file stats on symbolic links.
X?C:.
X?H:#$d_lstat HAS_LSTAT		/**/
X?H:.
X?LINT:set d_lstat
X: see if lstat exists
Xset lstat d_lstat
Xeval $inlibc
X
END_OF_FILE
  if test 1002 -ne `wc -c <'mcon/U/d_lstat.U'`; then
    echo shar: \"'mcon/U/d_lstat.U'\" unpacked with wrong size!
  fi
  # end of 'mcon/U/d_lstat.U'
fi
if test -f 'mcon/U/d_msgget.U' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'mcon/U/d_msgget.U'\"
else
  echo shar: Extracting \"'mcon/U/d_msgget.U'\" \(1026 characters\)
  sed "s/^X//" >'mcon/U/d_msgget.U' <<'END_OF_FILE'
X?RCS: $Id: d_msgget.U,v 3.0 1993/08/18 12:06:39 ram Exp $
X?RCS:
X?RCS: Copyright (c) 1991-1993, Raphael Manfredi
X?RCS: 
X?RCS: You may redistribute only under the terms of the Artistic Licence,
X?RCS: as specified in the README file that comes with the distribution.
X?RCS: You may reuse parts of this distribution only within the terms of
X?RCS: that same Artistic Licence; a copy of which may be found at the root
X?RCS: of the source tree for dist 3.0.
X?RCS:
X?RCS: $Log: d_msgget.U,v $
X?RCS: Revision 3.0  1993/08/18  12:06:39  ram
X?RCS: Baseline for dist 3.0 netwide release.
X?RCS:
X?MAKE:d_msgget: Inlibc
X?MAKE:	-pick add $@ %<
X?S:d_msgget:
X?S:	This variable conditionally defines the HAS_MSGGET symbol, which
X?S:	indicates to the C program that the msgget() routine is available.
X?S:.
X?C:HAS_MSGGET:
X?C:	This symbol, if defined, indicates that the msgget() routine is
X?C:	available to get a new message queue.
X?C:.
X?H:#$d_msgget HAS_MSGGET		/**/
X?H:.
X?LINT:set d_msgget
X: see if msgget exists
Xset msgget d_msgget
Xeval $inlibc
X
END_OF_FILE
  if test 1026 -ne `wc -c <'mcon/U/d_msgget.U'`; then
    echo shar: \"'mcon/U/d_msgget.U'\" unpacked with wrong size!
  fi
  # end of 'mcon/U/d_msgget.U'
fi
if test -f 'mcon/U/d_popen.U' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'mcon/U/d_popen.U'\"
else
  echo shar: Extracting \"'mcon/U/d_popen.U'\" \(992 characters\)
  sed "s/^X//" >'mcon/U/d_popen.U' <<'END_OF_FILE'
X?RCS: $Id: d_popen.U,v 3.0 1993/08/18 12:06:47 ram Exp $
X?RCS:
X?RCS: Copyright (c) 1991-1993, Raphael Manfredi
X?RCS: 
X?RCS: You may redistribute only under the terms of the Artistic Licence,
X?RCS: as specified in the README file that comes with the distribution.
X?RCS: You may reuse parts of this distribution only within the terms of
X?RCS: that same Artistic Licence; a copy of which may be found at the root
X?RCS: of the source tree for dist 3.0.
X?RCS:
X?RCS: $Log: d_popen.U,v $
X?RCS: Revision 3.0  1993/08/18  12:06:47  ram
X?RCS: Baseline for dist 3.0 netwide release.
X?RCS:
X?MAKE:d_popen: Inlibc
X?MAKE:	-pick add $@ %<
X?S:d_popen:
X?S:	This variable conditionally defines HAS_POPEN if popen() is
X?S:	available to open a pipe from a process.
X?S:.
X?C:HAS_POPEN (POPEN):
X?C:	This symbol, if defined, indicates that the popen routine is
X?C:	available to open a pipe from a process.
X?C:.
X?H:#$d_popen HAS_POPEN		/**/
X?H:.
X?LINT:set d_popen
X: see if popen exists
Xset popen d_popen
Xeval $inlibc
X
END_OF_FILE
  if test 992 -ne `wc -c <'mcon/U/d_popen.U'`; then
    echo shar: \"'mcon/U/d_popen.U'\" unpacked with wrong size!
  fi
  # end of 'mcon/U/d_popen.U'
fi
if test -f 'mcon/U/d_semget.U' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'mcon/U/d_semget.U'\"
else
  echo shar: Extracting \"'mcon/U/d_semget.U'\" \(1025 characters\)
  sed "s/^X//" >'mcon/U/d_semget.U' <<'END_OF_FILE'
X?RCS: $Id: d_semget.U,v 3.0 1993/08/18 12:07:05 ram Exp $
X?RCS:
X?RCS: Copyright (c) 1991-1993, Raphael Manfredi
X?RCS: 
X?RCS: You may redistribute only under the terms of the Artistic Licence,
X?RCS: as specified in the README file that comes with the distribution.
X?RCS: You may reuse parts of this distribution only within the terms of
X?RCS: that same Artistic Licence; a copy of which may be found at the root
X?RCS: of the source tree for dist 3.0.
X?RCS:
X?RCS: $Log: d_semget.U,v $
X?RCS: Revision 3.0  1993/08/18  12:07:05  ram
X?RCS: Baseline for dist 3.0 netwide release.
X?RCS:
X?MAKE:d_semget: Inlibc
X?MAKE:	-pick add $@ %<
X?S:d_semget:
X?S:	This variable conditionally defines the HAS_SEMGET symbol, which
X?S:	indicates to the C program that the semget() routine is available.
X?S:.
X?C:HAS_SEMGET:
X?C:	This symbol, if defined, indicates that the semget() routine is
X?C:	available to get a set of semaphores.
X?C:.
X?H:#$d_semget HAS_SEMGET	/**/
X?H:.
X?LINT:set d_semget
X: see if semget exists
Xset semget d_semget
Xeval $inlibc
X
END_OF_FILE
  if test 1025 -ne `wc -c <'mcon/U/d_semget.U'`; then
    echo shar: \"'mcon/U/d_semget.U'\" unpacked with wrong size!
  fi
  # end of 'mcon/U/d_semget.U'
fi
if test -f 'mcon/U/d_semop.U' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'mcon/U/d_semop.U'\"
else
  echo shar: Extracting \"'mcon/U/d_semop.U'\" \(1017 characters\)
  sed "s/^X//" >'mcon/U/d_semop.U' <<'END_OF_FILE'
X?RCS: $Id: d_semop.U,v 3.0 1993/08/18 12:07:05 ram Exp $
X?RCS:
X?RCS: Copyright (c) 1991-1993, Raphael Manfredi
X?RCS: 
X?RCS: You may redistribute only under the terms of the Artistic Licence,
X?RCS: as specified in the README file that comes with the distribution.
X?RCS: You may reuse parts of this distribution only within the terms of
X?RCS: that same Artistic Licence; a copy of which may be found at the root
X?RCS: of the source tree for dist 3.0.
X?RCS:
X?RCS: $Log: d_semop.U,v $
X?RCS: Revision 3.0  1993/08/18  12:07:05  ram
X?RCS: Baseline for dist 3.0 netwide release.
X?RCS:
X?MAKE:d_semop: Inlibc
X?MAKE:	-pick add $@ %<
X?S:d_semop:
X?S:	This variable conditionally defines the HAS_SEMOP symbol, which
X?S:	indicates to the C program that the semop() routine is available.
X?S:.
X?C:HAS_SEMOP:
X?C:	This symbol, if defined, indicates that the semop() routine is
X?C:	available to execute semaphore operations.
X?C:.
X?H:#$d_semop HAS_SEMOP		/**/
X?H:.
X?LINT:set d_semop
X: see if semop exists
Xset semop d_semop
Xeval $inlibc
X
END_OF_FILE
  if test 1017 -ne `wc -c <'mcon/U/d_semop.U'`; then
    echo shar: \"'mcon/U/d_semop.U'\" unpacked with wrong size!
  fi
  # end of 'mcon/U/d_semop.U'
fi
if test -f 'mcon/U/d_shmat.U' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'mcon/U/d_shmat.U'\"
else
  echo shar: Extracting \"'mcon/U/d_shmat.U'\" \(1040 characters\)
  sed "s/^X//" >'mcon/U/d_shmat.U' <<'END_OF_FILE'
X?RCS: $Id: d_shmat.U,v 3.0 1993/08/18 12:07:18 ram Exp $
X?RCS:
X?RCS: Copyright (c) 1991-1993, Raphael Manfredi
X?RCS: 
X?RCS: You may redistribute only under the terms of the Artistic Licence,
X?RCS: as specified in the README file that comes with the distribution.
X?RCS: You may reuse parts of this distribution only within the terms of
X?RCS: that same Artistic Licence; a copy of which may be found at the root
X?RCS: of the source tree for dist 3.0.
X?RCS:
X?RCS: $Log: d_shmat.U,v $
X?RCS: Revision 3.0  1993/08/18  12:07:18  ram
X?RCS: Baseline for dist 3.0 netwide release.
X?RCS:
X?MAKE:d_shmat: Inlibc
X?MAKE:	-pick add $@ %<
X?S:d_shmat:
X?S:	This variable conditionally defines the HAS_SHMAT symbol, which
X?S:	indicates to the C program that the shmat() routine is available.
X?S:.
X?C:HAS_SHMAT:
X?C:	This symbol, if defined, indicates that the shmat() routine is
X?C:	available to attach a shared memory segment to the process space.
X?C:.
X?H:#$d_shmat HAS_SHMAT		/**/
X?H:.
X?LINT:set d_shmat
X: see if shmat exists
Xset shmat d_shmat
Xeval $inlibc
X
END_OF_FILE
  if test 1040 -ne `wc -c <'mcon/U/d_shmat.U'`; then
    echo shar: \"'mcon/U/d_shmat.U'\" unpacked with wrong size!
  fi
  # end of 'mcon/U/d_shmat.U'
fi
if test -f 'mcon/U/d_shmdt.U' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'mcon/U/d_shmdt.U'\"
else
  echo shar: Extracting \"'mcon/U/d_shmdt.U'\" \(1042 characters\)
  sed "s/^X//" >'mcon/U/d_shmdt.U' <<'END_OF_FILE'
X?RCS: $Id: d_shmdt.U,v 3.0 1993/08/18 12:07:19 ram Exp $
X?RCS:
X?RCS: Copyright (c) 1991-1993, Raphael Manfredi
X?RCS: 
X?RCS: You may redistribute only under the terms of the Artistic Licence,
X?RCS: as specified in the README file that comes with the distribution.
X?RCS: You may reuse parts of this distribution only within the terms of
X?RCS: that same Artistic Licence; a copy of which may be found at the root
X?RCS: of the source tree for dist 3.0.
X?RCS:
X?RCS: $Log: d_shmdt.U,v $
X?RCS: Revision 3.0  1993/08/18  12:07:19  ram
X?RCS: Baseline for dist 3.0 netwide release.
X?RCS:
X?MAKE:d_shmdt: Inlibc
X?MAKE:	-pick add $@ %<
X?S:d_shmdt:
X?S:	This variable conditionally defines the HAS_SHMDT symbol, which
X?S:	indicates to the C program that the shmdt() routine is available.
X?S:.
X?C:HAS_SHMDT:
X?C:	This symbol, if defined, indicates that the shmdt() routine is
X?C:	available to detach a shared memory segment from the process space.
X?C:.
X?H:#$d_shmdt HAS_SHMDT		/**/
X?H:.
X?LINT:set d_shmdt
X: see if shmdt exists
Xset shmdt d_shmdt
Xeval $inlibc
X
END_OF_FILE
  if test 1042 -ne `wc -c <'mcon/U/d_shmdt.U'`; then
    echo shar: \"'mcon/U/d_shmdt.U'\" unpacked with wrong size!
  fi
  # end of 'mcon/U/d_shmdt.U'
fi
if test -f 'mcon/U/d_sigblock.U' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'mcon/U/d_sigblock.U'\"
else
  echo shar: Extracting \"'mcon/U/d_sigblock.U'\" \(1017 characters\)
  sed "s/^X//" >'mcon/U/d_sigblock.U' <<'END_OF_FILE'
X?RCS: $Id: d_sigblock.U,v 3.0 1993/08/18 12:07:21 ram Exp $
X?RCS:
X?RCS: Copyright (c) 1991-1993, Raphael Manfredi
X?RCS: 
X?RCS: You may redistribute only under the terms of the Artistic Licence,
X?RCS: as specified in the README file that comes with the distribution.
X?RCS: You may reuse parts of this distribution only within the terms of
X?RCS: that same Artistic Licence; a copy of which may be found at the root
X?RCS: of the source tree for dist 3.0.
X?RCS:
X?RCS: $Log: d_sigblock.U,v $
X?RCS: Revision 3.0  1993/08/18  12:07:21  ram
X?RCS: Baseline for dist 3.0 netwide release.
X?RCS:
X?MAKE:d_sigblock: Inlibc
X?MAKE:	-pick add $@ %<
X?S:d_sigblock:
X?S:	This variable conditionally defines HAS_SIGBLOCK if sigblock() is
X?S:	available to block signal reception.
X?S:.
X?C:HAS_SIGBLOCK:
X?C:	This symbol, if defined, indicates that the sigblock routine is
X?C:	available to block signal reception.
X?C:.
X?H:#$d_sigblock HAS_SIGBLOCK	/**/
X?H:.
X?LINT:set d_sigblock
X: see if sigblock exists
Xset sigblock d_sigblock
Xeval $inlibc
X
END_OF_FILE
  if test 1017 -ne `wc -c <'mcon/U/d_sigblock.U'`; then
    echo shar: \"'mcon/U/d_sigblock.U'\" unpacked with wrong size!
  fi
  # end of 'mcon/U/d_sigblock.U'
fi
if test -f 'mcon/U/d_sighold.U' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'mcon/U/d_sighold.U'\"
else
  echo shar: Extracting \"'mcon/U/d_sighold.U'\" \(983 characters\)
  sed "s/^X//" >'mcon/U/d_sighold.U' <<'END_OF_FILE'
X?RCS: $Id: d_sighold.U,v 3.0 1993/08/18 12:07:21 ram Exp $
X?RCS:
X?RCS: Copyright (c) 1991-1993, Raphael Manfredi
X?RCS: 
X?RCS: You may redistribute only under the terms of the Artistic Licence,
X?RCS: as specified in the README file that comes with the distribution.
X?RCS: You may reuse parts of this distribution only within the terms of
X?RCS: that same Artistic Licence; a copy of which may be found at the root
X?RCS: of the source tree for dist 3.0.
X?RCS:
X?RCS: $Log: d_sighold.U,v $
X?RCS: Revision 3.0  1993/08/18  12:07:21  ram
X?RCS: Baseline for dist 3.0 netwide release.
X?RCS:
X?MAKE:d_sighold: Inlibc
X?MAKE:	-pick add $@ %<
X?S:d_sighold:
X?S:	This variable conditionally defines HAS_SIGHOLD if sighold() is
X?S:	available to hold signals.
X?S:.
X?C:HAS_SIGHOLD:
X?C:	This symbol, if defined, indicates that the sighold routine is
X?C:	available to hold signals.
X?C:.
X?H:#$d_sighold HAS_SIGHOLD	/**/
X?H:.
X?LINT:set d_sighold
X: see if sighold exists
Xset sighold d_sighold
Xeval $inlibc
X
END_OF_FILE
  if test 983 -ne `wc -c <'mcon/U/d_sighold.U'`; then
    echo shar: \"'mcon/U/d_sighold.U'\" unpacked with wrong size!
  fi
  # end of 'mcon/U/d_sighold.U'
fi
if test -f 'mcon/U/d_strstr.U' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'mcon/U/d_strstr.U'\"
else
  echo shar: Extracting \"'mcon/U/d_strstr.U'\" \(984 characters\)
  sed "s/^X//" >'mcon/U/d_strstr.U' <<'END_OF_FILE'
X?RCS: $Id: d_strstr.U,v 3.0 1993/08/18 12:07:37 ram Exp $
X?RCS:
X?RCS: Copyright (c) 1991-1993, Raphael Manfredi
X?RCS: 
X?RCS: You may redistribute only under the terms of the Artistic Licence,
X?RCS: as specified in the README file that comes with the distribution.
X?RCS: You may reuse parts of this distribution only within the terms of
X?RCS: that same Artistic Licence; a copy of which may be found at the root
X?RCS: of the source tree for dist 3.0.
X?RCS:
X?RCS: $Log: d_strstr.U,v $
X?RCS: Revision 3.0  1993/08/18  12:07:37  ram
X?RCS: Baseline for dist 3.0 netwide release.
X?RCS:
X?MAKE:d_strstr: Inlibc
X?MAKE:	-pick add $@ %<
X?S:d_strstr:
X?S:	This variable conditionally defines HAS_STRSTR if strstr() is
X?S:	available to find substrings.
X?S:.
X?C:HAS_STRSTR (STRSTR):
X?C:	This symbol, if defined, indicates that the strstr routine is
X?C:	available to find substrings.
X?C:.
X?H:#$d_strstr HAS_STRSTR	/**/
X?H:.
X?LINT:set d_strstr
X: see if strstr exists
Xset strstr d_strstr
Xeval $inlibc
X
END_OF_FILE
  if test 984 -ne `wc -c <'mcon/U/d_strstr.U'`; then
    echo shar: \"'mcon/U/d_strstr.U'\" unpacked with wrong size!
  fi
  # end of 'mcon/U/d_strstr.U'
fi
if test -f 'mcon/U/d_system.U' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'mcon/U/d_system.U'\"
else
  echo shar: Extracting \"'mcon/U/d_system.U'\" \(996 characters\)
  sed "s/^X//" >'mcon/U/d_system.U' <<'END_OF_FILE'
X?RCS: $Id: d_system.U,v 3.0 1993/08/18 12:07:44 ram Exp $
X?RCS:
X?RCS: Copyright (c) 1991-1993, Raphael Manfredi
X?RCS: 
X?RCS: You may redistribute only under the terms of the Artistic Licence,
X?RCS: as specified in the README file that comes with the distribution.
X?RCS: You may reuse parts of this distribution only within the terms of
X?RCS: that same Artistic Licence; a copy of which may be found at the root
X?RCS: of the source tree for dist 3.0.
X?RCS:
X?RCS: $Log: d_system.U,v $
X?RCS: Revision 3.0  1993/08/18  12:07:44  ram
X?RCS: Baseline for dist 3.0 netwide release.
X?RCS:
X?MAKE:d_system: Inlibc
X?MAKE:	-pick add $@ %<
X?S:d_system:
X?S:	This variable conditionally defines HAS_SYSTEM if system() is
X?S:	available to issue a shell command.
X?S:.
X?C:HAS_SYSTEM (SYSTEM):
X?C:	This symbol, if defined, indicates that the system routine is
X?C:	available to issue a shell command.
X?C:.
X?H:#$d_system HAS_SYSTEM	/**/
X?H:.
X?LINT:set d_system
X: see if system exists
Xset system d_system
Xeval $inlibc
X
END_OF_FILE
  if test 996 -ne `wc -c <'mcon/U/d_system.U'`; then
    echo shar: \"'mcon/U/d_system.U'\" unpacked with wrong size!
  fi
  # end of 'mcon/U/d_system.U'
fi
if test -f 'mcon/U/d_truncate.U' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'mcon/U/d_truncate.U'\"
else
  echo shar: Extracting \"'mcon/U/d_truncate.U'\" \(1012 characters\)
  sed "s/^X//" >'mcon/U/d_truncate.U' <<'END_OF_FILE'
X?RCS: $Id: d_truncate.U,v 3.0 1993/08/18 12:07:48 ram Exp $
X?RCS:
X?RCS: Copyright (c) 1991-1993, Raphael Manfredi
X?RCS: 
X?RCS: You may redistribute only under the terms of the Artistic Licence,
X?RCS: as specified in the README file that comes with the distribution.
X?RCS: You may reuse parts of this distribution only within the terms of
X?RCS: that same Artistic Licence; a copy of which may be found at the root
X?RCS: of the source tree for dist 3.0.
X?RCS:
X?RCS: $Log: d_truncate.U,v $
X?RCS: Revision 3.0  1993/08/18  12:07:48  ram
X?RCS: Baseline for dist 3.0 netwide release.
X?RCS:
X?MAKE:d_truncate: Inlibc
X?MAKE:	-pick add $@ %<
X?S:d_truncate:
X?S:	This variable conditionally defines HAS_TRUNCATE if truncate() is
X?S:	available to truncate files.
X?S:.
X?C:HAS_TRUNCATE (TRUNCATE):
X?C:	This symbol, if defined, indicates that the truncate routine is
X?C:	available to truncate files.
X?C:.
X?H:#$d_truncate HAS_TRUNCATE	/**/
X?H:.
X?LINT:set d_truncate
X: see if truncate exists
Xset truncate d_truncate
Xeval $inlibc
X
END_OF_FILE
  if test 1012 -ne `wc -c <'mcon/U/d_truncate.U'`; then
    echo shar: \"'mcon/U/d_truncate.U'\" unpacked with wrong size!
  fi
  # end of 'mcon/U/d_truncate.U'
fi
if test -f 'mcon/U/d_usleep.U' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'mcon/U/d_usleep.U'\"
else
  echo shar: Extracting \"'mcon/U/d_usleep.U'\" \(1027 characters\)
  sed "s/^X//" >'mcon/U/d_usleep.U' <<'END_OF_FILE'
X?RCS: $Id: d_usleep.U,v 3.0 1993/08/18 12:07:53 ram Exp $
X?RCS:
X?RCS: Copyright (c) 1991-1993, Raphael Manfredi
X?RCS: 
X?RCS: You may redistribute only under the terms of the Artistic Licence,
X?RCS: as specified in the README file that comes with the distribution.
X?RCS: You may reuse parts of this distribution only within the terms of
X?RCS: that same Artistic Licence; a copy of which may be found at the root
X?RCS: of the source tree for dist 3.0.
X?RCS:
X?RCS: $Log: d_usleep.U,v $
X?RCS: Revision 3.0  1993/08/18  12:07:53  ram
X?RCS: Baseline for dist 3.0 netwide release.
X?RCS:
X?MAKE:d_usleep: Inlibc
X?MAKE:	-pick add $@ %<
X?S:d_usleep:
X?S:	This variable conditionally defines HAS_USLEEP if usleep() is
X?S:	available to do high granularity sleeps.
X?S:.
X?C:HAS_USLEEP (USLEEP):
X?C:	This symbol, if defined, indicates that the usleep routine is
X?C:	available to let the process sleep on a sub-second accuracy.
X?C:.
X?H:#$d_usleep HAS_USLEEP		/**/
X?H:.
X?LINT:set d_usleep
X: see if usleep exists
Xset usleep d_usleep
Xeval $inlibc
X
END_OF_FILE
  if test 1027 -ne `wc -c <'mcon/U/d_usleep.U'`; then
    echo shar: \"'mcon/U/d_usleep.U'\" unpacked with wrong size!
  fi
  # end of 'mcon/U/d_usleep.U'
fi
if test -f 'mcon/U/d_wait3.U' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'mcon/U/d_wait3.U'\"
else
  echo shar: Extracting \"'mcon/U/d_wait3.U'\" \(982 characters\)
  sed "s/^X//" >'mcon/U/d_wait3.U' <<'END_OF_FILE'
X?RCS: $Id: d_wait3.U,v 3.0 1993/08/18 12:08:01 ram Exp $
X?RCS:
X?RCS: Copyright (c) 1991-1993, Raphael Manfredi
X?RCS: 
X?RCS: You may redistribute only under the terms of the Artistic Licence,
X?RCS: as specified in the README file that comes with the distribution.
X?RCS: You may reuse parts of this distribution only within the terms of
X?RCS: that same Artistic Licence; a copy of which may be found at the root
X?RCS: of the source tree for dist 3.0.
X?RCS:
X?RCS: $Log: d_wait3.U,v $
X?RCS: Revision 3.0  1993/08/18  12:08:01  ram
X?RCS: Baseline for dist 3.0 netwide release.
X?RCS:
X?MAKE:d_wait3: Inlibc
X?MAKE:	-pick add $@ %<
X?S:d_wait3:
X?S:	This variable conditionally defines the HAS_WAIT3 symbol, which
X?S:	indicates to the C program that the wait3() subroutine exists.
X?S:.
X?C:HAS_WAIT3:
X?C:	This symbol, if defined, indicates that the wait3() subroutine
X?C:	exists.
X?C:.
X?H:#$d_wait3 HAS_WAIT3	/**/
X?H:.
X?LINT:set d_wait3
X: see if 'wait3()' exists
Xset wait3 d_wait3
Xeval $inlibc
X
END_OF_FILE
  if test 982 -ne `wc -c <'mcon/U/d_wait3.U'`; then
    echo shar: \"'mcon/U/d_wait3.U'\" unpacked with wrong size!
  fi
  # end of 'mcon/U/d_wait3.U'
fi
if test -f 'mcon/U/d_waitpid.U' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'mcon/U/d_waitpid.U'\"
else
  echo shar: Extracting \"'mcon/U/d_waitpid.U'\" \(1013 characters\)
  sed "s/^X//" >'mcon/U/d_waitpid.U' <<'END_OF_FILE'
X?RCS: $Id: d_waitpid.U,v 3.0 1993/08/18 12:08:02 ram Exp $
X?RCS:
X?RCS: Copyright (c) 1991-1993, Raphael Manfredi
X?RCS: 
X?RCS: You may redistribute only under the terms of the Artistic Licence,
X?RCS: as specified in the README file that comes with the distribution.
X?RCS: You may reuse parts of this distribution only within the terms of
X?RCS: that same Artistic Licence; a copy of which may be found at the root
X?RCS: of the source tree for dist 3.0.
X?RCS:
X?RCS: $Log: d_waitpid.U,v $
X?RCS: Revision 3.0  1993/08/18  12:08:02  ram
X?RCS: Baseline for dist 3.0 netwide release.
X?RCS:
X?MAKE:d_waitpid: Inlibc
X?MAKE:	-pick add $@ %<
X?S:d_waitpid:
X?S:	This variable conditionally defines HAS_WAITPID if waitpid() is
X?S:	available to wait for child process.
X?S:.
X?C:HAS_WAITPID (WAITPID):
X?C:	This symbol, if defined, indicates that the waitpid routine is
X?C:	available to wait for child process.
X?C:.
X?H:#$d_waitpid HAS_WAITPID	/**/
X?H:.
X?LINT:set d_waitpid
X: see if waitpid exists
Xset waitpid d_waitpid
Xeval $inlibc
X
END_OF_FILE
  if test 1013 -ne `wc -c <'mcon/U/d_waitpid.U'`; then
    echo shar: \"'mcon/U/d_waitpid.U'\" unpacked with wrong size!
  fi
  # end of 'mcon/U/d_waitpid.U'
fi
if test -f 'mcon/U/i_gdbm.U' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'mcon/U/i_gdbm.U'\"
else
  echo shar: Extracting \"'mcon/U/i_gdbm.U'\" \(1006 characters\)
  sed "s/^X//" >'mcon/U/i_gdbm.U' <<'END_OF_FILE'
X?RCS: $Id: i_gdbm.U,v 3.0 1993/08/18 12:08:19 ram Exp $
X?RCS:
X?RCS: Copyright (c) 1991-1993, Raphael Manfredi
X?RCS: 
X?RCS: You may redistribute only under the terms of the Artistic Licence,
X?RCS: as specified in the README file that comes with the distribution.
X?RCS: You may reuse parts of this distribution only within the terms of
X?RCS: that same Artistic Licence; a copy of which may be found at the root
X?RCS: of the source tree for dist 3.0.
X?RCS:
X?RCS: $Log: i_gdbm.U,v $
X?RCS: Revision 3.0  1993/08/18  12:08:19  ram
X?RCS: Baseline for dist 3.0 netwide release.
X?RCS:
X?MAKE:i_gdbm: Inhdr
X?MAKE:	-pick add $@ %<
X?S:i_gdbm (d_gdbm):
X?S:	This variable conditionally defines the I_GDBM symbol, which
X?S:	indicates to the C program that gdbm.h exists and should
X?S:	be included.
X?S:.
X?C:I_GDBM (HAS_GDBM):
X?C:	This symbol, if defined, indicates that gdbm.h exists and should
X?C:	be included.
X?C:.
X?H:#$i_gdbm I_GDBM	/**/
X?H:.
X?LINT:set i_gdbm
X: see if gdbm.h is available
Xset gdbm.h i_gdbm
Xeval $inhdr
X
END_OF_FILE
  if test 1006 -ne `wc -c <'mcon/U/i_gdbm.U'`; then
    echo shar: \"'mcon/U/i_gdbm.U'\" unpacked with wrong size!
  fi
  # end of 'mcon/U/i_gdbm.U'
fi
if test -f 'mcon/U/i_malloc.U' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'mcon/U/i_malloc.U'\"
else
  echo shar: Extracting \"'mcon/U/i_malloc.U'\" \(1005 characters\)
  sed "s/^X//" >'mcon/U/i_malloc.U' <<'END_OF_FILE'
X?RCS: $Id: i_malloc.U,v 3.0 1993/08/18 12:08:21 ram Exp $
X?RCS:
X?RCS: Copyright (c) 1991-1993, Raphael Manfredi
X?RCS: 
X?RCS: You may redistribute only under the terms of the Artistic Licence,
X?RCS: as specified in the README file that comes with the distribution.
X?RCS: You may reuse parts of this distribution only within the terms of
X?RCS: that same Artistic Licence; a copy of which may be found at the root
X?RCS: of the source tree for dist 3.0.
X?RCS:
X?RCS: $Log: i_malloc.U,v $
X?RCS: Revision 3.0  1993/08/18  12:08:21  ram
X?RCS: Baseline for dist 3.0 netwide release.
X?RCS:
X?MAKE:i_malloc: Inhdr
X?MAKE:	-pick add $@ %<
X?S:i_malloc:
X?S:	This variable conditionally defines the I_MALLOC symbol, and indicates
X?S:	whether a C program should include <malloc.h>.
X?S:.
X?C:I_MALLOC:
X?C:	This symbol, if defined, indicates to the C program that it should
X?C:	include <malloc.h>.
X?C:.
X?H:#$i_malloc I_MALLOC		/**/
X?H:.
X?LINT:set i_malloc
X: see if this is a malloc.h system
Xset malloc.h i_malloc
Xeval $inhdr
X
END_OF_FILE
  if test 1005 -ne `wc -c <'mcon/U/i_malloc.U'`; then
    echo shar: \"'mcon/U/i_malloc.U'\" unpacked with wrong size!
  fi
  # end of 'mcon/U/i_malloc.U'
fi
if test -f 'mcon/U/i_memory.U' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'mcon/U/i_memory.U'\"
else
  echo shar: Extracting \"'mcon/U/i_memory.U'\" \(1005 characters\)
  sed "s/^X//" >'mcon/U/i_memory.U' <<'END_OF_FILE'
X?RCS: $Id: i_memory.U,v 3.0 1993/08/18 12:08:22 ram Exp $
X?RCS:
X?RCS: Copyright (c) 1991-1993, Raphael Manfredi
X?RCS: 
X?RCS: You may redistribute only under the terms of the Artistic Licence,
X?RCS: as specified in the README file that comes with the distribution.
X?RCS: You may reuse parts of this distribution only within the terms of
X?RCS: that same Artistic Licence; a copy of which may be found at the root
X?RCS: of the source tree for dist 3.0.
X?RCS:
X?RCS: $Log: i_memory.U,v $
X?RCS: Revision 3.0  1993/08/18  12:08:22  ram
X?RCS: Baseline for dist 3.0 netwide release.
X?RCS:
X?MAKE:i_memory: Inhdr
X?MAKE:	-pick add $@ %<
X?S:i_memory:
X?S:	This variable conditionally defines the I_MEMORY symbol, and indicates
X?S:	whether a C program should include <memory.h>.
X?S:.
X?C:I_MEMORY:
X?C:	This symbol, if defined, indicates to the C program that it should
X?C:	include <memory.h>.
X?C:.
X?H:#$i_memory I_MEMORY		/**/
X?H:.
X?LINT:set i_memory
X: see if this is a memory.h system
Xset memory.h i_memory
Xeval $inhdr
X
END_OF_FILE
  if test 1005 -ne `wc -c <'mcon/U/i_memory.U'`; then
    echo shar: \"'mcon/U/i_memory.U'\" unpacked with wrong size!
  fi
  # end of 'mcon/U/i_memory.U'
fi
if test -f 'mcon/U/i_ndbm.U' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'mcon/U/i_ndbm.U'\"
else
  echo shar: Extracting \"'mcon/U/i_ndbm.U'\" \(1011 characters\)
  sed "s/^X//" >'mcon/U/i_ndbm.U' <<'END_OF_FILE'
X?RCS: $Id: i_ndbm.U,v 3.0 1993/08/18 12:08:23 ram Exp $
X?RCS:
X?RCS: Copyright (c) 1991-1993, Raphael Manfredi
X?RCS: 
X?RCS: You may redistribute only under the terms of the Artistic Licence,
X?RCS: as specified in the README file that comes with the distribution.
X?RCS: You may reuse parts of this distribution only within the terms of
X?RCS: that same Artistic Licence; a copy of which may be found at the root
X?RCS: of the source tree for dist 3.0.
X?RCS:
X?RCS: $Log: i_ndbm.U,v $
X?RCS: Revision 3.0  1993/08/18  12:08:23  ram
X?RCS: Baseline for dist 3.0 netwide release.
X?RCS:
X?MAKE:i_ndbm: Inhdr
X?MAKE:	-pick add $@ %<
X?S:i_ndbm (d_ndbm):
X?S:	This variable conditionally defines the I_NDBM symbol, which
X?S:	indicates to the C program that ndbm.h exists and should
X?S:	be included.
X?S:.
X?C:I_NDBM (HAS_NDBM NDBM):
X?C:	This symbol, if defined, indicates that ndbm.h exists and should
X?C:	be included.
X?C:.
X?H:#$i_ndbm I_NDBM	/**/
X?H:.
X?LINT:set i_ndbm
X: see if ndbm.h is available
Xset ndbm.h i_ndbm
Xeval $inhdr
X
END_OF_FILE
  if test 1011 -ne `wc -c <'mcon/U/i_ndbm.U'`; then
    echo shar: \"'mcon/U/i_ndbm.U'\" unpacked with wrong size!
  fi
  # end of 'mcon/U/i_ndbm.U'
fi
if test -f 'mcon/U/i_stdarg.U' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'mcon/U/i_stdarg.U'\"
else
  echo shar: Extracting \"'mcon/U/i_stdarg.U'\" \(1017 characters\)
  sed "s/^X//" >'mcon/U/i_stdarg.U' <<'END_OF_FILE'
X?RCS: $Id: i_stdarg.U,v 3.0 1993/08/18 12:08:26 ram Exp $
X?RCS:
X?RCS: Copyright (c) 1991-1993, Raphael Manfredi
X?RCS: 
X?RCS: You may redistribute only under the terms of the Artistic Licence,
X?RCS: as specified in the README file that comes with the distribution.
X?RCS: You may reuse parts of this distribution only within the terms of
X?RCS: that same Artistic Licence; a copy of which may be found at the root
X?RCS: of the source tree for dist 3.0.
X?RCS:
X?RCS: $Log: i_stdarg.U,v $
X?RCS: Revision 3.0  1993/08/18  12:08:26  ram
X?RCS: Baseline for dist 3.0 netwide release.
X?RCS:
X?MAKE:i_stdarg: Inhdr
X?MAKE:	-pick add $@ %<
X?S:i_stdarg:
X?S:	This variable conditionally defines the I_STDARG symbol, which
X?S:	indicates to the C program that <stdarg.h> exists and should
X?S:	be included.
X?S:.
X?C:I_STDARG:
X?C:	This symbol, if defined, indicates that <stdarg.h> exists and should
X?C:	be included.
X?C:.
X?H:#$i_stdarg I_STDARG		/**/
X?H:.
X?LINT:set i_stdarg
X: see if stdarg is available
Xset stdarg.h i_stdarg
Xeval $inhdr
X
END_OF_FILE
  if test 1017 -ne `wc -c <'mcon/U/i_stdarg.U'`; then
    echo shar: \"'mcon/U/i_stdarg.U'\" unpacked with wrong size!
  fi
  # end of 'mcon/U/i_stdarg.U'
fi
if test -f 'mcon/U/i_stddef.U' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'mcon/U/i_stddef.U'\"
else
  echo shar: Extracting \"'mcon/U/i_stddef.U'\" \(1016 characters\)
  sed "s/^X//" >'mcon/U/i_stddef.U' <<'END_OF_FILE'
X?RCS: $Id: i_stddef.U,v 3.0 1993/08/18 12:08:27 ram Exp $
X?RCS:
X?RCS: Copyright (c) 1991-1993, Raphael Manfredi
X?RCS: 
X?RCS: You may redistribute only under the terms of the Artistic Licence,
X?RCS: as specified in the README file that comes with the distribution.
X?RCS: You may reuse parts of this distribution only within the terms of
X?RCS: that same Artistic Licence; a copy of which may be found at the root
X?RCS: of the source tree for dist 3.0.
X?RCS:
X?RCS: $Log: i_stddef.U,v $
X?RCS: Revision 3.0  1993/08/18  12:08:27  ram
X?RCS: Baseline for dist 3.0 netwide release.
X?RCS:
X?MAKE:i_stddef: Inhdr
X?MAKE:	-pick add $@ %<
X?S:i_stddef:
X?S:	This variable conditionally defines the I_STDDEF symbol, which
X?S:	indicates to the C program that <stddef.h> exists and should
X?S:	be included.
X?S:.
X?C:I_STDDEF:
X?C:	This symbol, if defined, indicates that <stddef.h> exists and should
X?C:	be included.
X?C:.
X?H:#$i_stddef I_STDDEF	/**/
X?H:.
X?LINT:set i_stddef
X: see if stddef is available
Xset stddef.h i_stddef
Xeval $inhdr
X
END_OF_FILE
  if test 1016 -ne `wc -c <'mcon/U/i_stddef.U'`; then
    echo shar: \"'mcon/U/i_stddef.U'\" unpacked with wrong size!
  fi
  # end of 'mcon/U/i_stddef.U'
fi
if test -f 'mcon/U/i_stdlib.U' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'mcon/U/i_stdlib.U'\"
else
  echo shar: Extracting \"'mcon/U/i_stdlib.U'\" \(1017 characters\)
  sed "s/^X//" >'mcon/U/i_stdlib.U' <<'END_OF_FILE'
X?RCS: $Id: i_stdlib.U,v 3.0 1993/08/18 12:08:27 ram Exp $
X?RCS:
X?RCS: Copyright (c) 1991-1993, Raphael Manfredi
X?RCS: 
X?RCS: You may redistribute only under the terms of the Artistic Licence,
X?RCS: as specified in the README file that comes with the distribution.
X?RCS: You may reuse parts of this distribution only within the terms of
X?RCS: that same Artistic Licence; a copy of which may be found at the root
X?RCS: of the source tree for dist 3.0.
X?RCS:
X?RCS: $Log: i_stdlib.U,v $
X?RCS: Revision 3.0  1993/08/18  12:08:27  ram
X?RCS: Baseline for dist 3.0 netwide release.
X?RCS:
X?MAKE:i_stdlib: Inhdr
X?MAKE:	-pick add $@ %<
X?S:i_stdlib:
X?S:	This variable conditionally defines the I_STDLIB symbol, which
X?S:	indicates to the C program that <stdlib.h> exists and should
X?S:	be included.
X?S:.
X?C:I_STDLIB:
X?C:	This symbol, if defined, indicates that <stdlib.h> exists and should
X?C:	be included.
X?C:.
X?H:#$i_stdlib I_STDLIB		/**/
X?H:.
X?LINT:set i_stdlib
X: see if stdlib is available
Xset stdlib.h i_stdlib
Xeval $inhdr
X
END_OF_FILE
  if test 1017 -ne `wc -c <'mcon/U/i_stdlib.U'`; then
    echo shar: \"'mcon/U/i_stdlib.U'\" unpacked with wrong size!
  fi
  # end of 'mcon/U/i_stdlib.U'
fi
if test -f 'mcon/U/i_sysdir.U' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'mcon/U/i_sysdir.U'\"
else
  echo shar: Extracting \"'mcon/U/i_sysdir.U'\" \(1020 characters\)
  sed "s/^X//" >'mcon/U/i_sysdir.U' <<'END_OF_FILE'
X?RCS: $Id: i_sysdir.U,v 3.0 1993/08/18 12:08:30 ram Exp $
X?RCS:
X?RCS: Copyright (c) 1991-1993, Raphael Manfredi
X?RCS: 
X?RCS: You may redistribute only under the terms of the Artistic Licence,
X?RCS: as specified in the README file that comes with the distribution.
X?RCS: You may reuse parts of this distribution only within the terms of
X?RCS: that same Artistic Licence; a copy of which may be found at the root
X?RCS: of the source tree for dist 3.0.
X?RCS:
X?RCS: $Log: i_sysdir.U,v $
X?RCS: Revision 3.0  1993/08/18  12:08:30  ram
X?RCS: Baseline for dist 3.0 netwide release.
X?RCS:
X?MAKE:i_sysdir: Inhdr
X?MAKE:	-pick add $@ %<
X?S:i_sysdir:
X?S:	This variable conditionally defines the I_SYSDIR symbol, and indicates
X?S:	whether a C program should include <sys/dir.h>.
X?S:.
X?C:I_SYS_DIR (I_SYSDIR):
X?C:	This symbol, if defined, indicates to the C program that it should
X?C:	include <sys/dir.h>.
X?C:.
X?H:#$i_sysdir I_SYS_DIR		/**/
X?H:.
X?LINT:set i_sysdir
X: see if this is an sysdir system
Xset sys/dir.h i_sysdir
Xeval $inhdr
X
END_OF_FILE
  if test 1020 -ne `wc -c <'mcon/U/i_sysdir.U'`; then
    echo shar: \"'mcon/U/i_sysdir.U'\" unpacked with wrong size!
  fi
  # end of 'mcon/U/i_sysdir.U'
fi
if test -f 'mcon/U/i_utime.U' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'mcon/U/i_utime.U'\"
else
  echo shar: Extracting \"'mcon/U/i_utime.U'\" \(990 characters\)
  sed "s/^X//" >'mcon/U/i_utime.U' <<'END_OF_FILE'
X?RCS: $Id: i_utime.U,v 3.0 1993/08/18 12:08:47 ram Exp $
X?RCS:
X?RCS: Copyright (c) 1991-1993, Raphael Manfredi
X?RCS: 
X?RCS: You may redistribute only under the terms of the Artistic Licence,
X?RCS: as specified in the README file that comes with the distribution.
X?RCS: You may reuse parts of this distribution only within the terms of
X?RCS: that same Artistic Licence; a copy of which may be found at the root
X?RCS: of the source tree for dist 3.0.
X?RCS:
X?RCS: $Log: i_utime.U,v $
X?RCS: Revision 3.0  1993/08/18  12:08:47  ram
X?RCS: Baseline for dist 3.0 netwide release.
X?RCS:
X?MAKE:i_utime: Inhdr
X?MAKE:	-pick add $@ %<
X?S:i_utime:
X?S:	This variable conditionally defines the I_UTIME symbol, and indicates
X?S:	whether a C program should include <utime.h>.
X?S:.
X?C:I_UTIME:
X?C:	This symbol, if defined, indicates to the C program that it should
X?C:	include <utime.h>.
X?C:.
X?H:#$i_utime I_UTIME		/**/
X?H:.
X?LINT:set i_utime
X: see if this is an utime system
Xset utime.h i_utime
Xeval $inhdr
X
END_OF_FILE
  if test 990 -ne `wc -c <'mcon/U/i_utime.U'`; then
    echo shar: \"'mcon/U/i_utime.U'\" unpacked with wrong size!
  fi
  # end of 'mcon/U/i_utime.U'
fi
if test -f 'mcon/U/i_vfork.U' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'mcon/U/i_vfork.U'\"
else
  echo shar: Extracting \"'mcon/U/i_vfork.U'\" \(984 characters\)
  sed "s/^X//" >'mcon/U/i_vfork.U' <<'END_OF_FILE'
X?RCS: $Id: i_vfork.U,v 3.0 1993/08/18 12:08:50 ram Exp $
X?RCS:
X?RCS: Copyright (c) 1991-1993, Raphael Manfredi
X?RCS: 
X?RCS: You may redistribute only under the terms of the Artistic Licence,
X?RCS: as specified in the README file that comes with the distribution.
X?RCS: You may reuse parts of this distribution only within the terms of
X?RCS: that same Artistic Licence; a copy of which may be found at the root
X?RCS: of the source tree for dist 3.0.
X?RCS:
X?RCS: $Log: i_vfork.U,v $
X?RCS: Revision 3.0  1993/08/18  12:08:50  ram
X?RCS: Baseline for dist 3.0 netwide release.
X?RCS:
X?MAKE:i_vfork: Inhdr
X?MAKE:	-pick add $@ %<
X?S:i_vfork:
X?S:	This variable conditionally defines the I_VFORK symbol, and indicates
X?S:	whether a C program should include vfork.h.
X?S:.
X?C:I_VFORK:
X?C:	This symbol, if defined, indicates to the C program that it should
X?C:	include vfork.h.
X?C:.
X?H:#$i_vfork I_VFORK	/**/
X?H:.
X?LINT:set i_vfork
X: see if this is a vfork system
Xset vfork.h i_vfork
Xeval $inhdr
X
END_OF_FILE
  if test 984 -ne `wc -c <'mcon/U/i_vfork.U'`; then
    echo shar: \"'mcon/U/i_vfork.U'\" unpacked with wrong size!
  fi
  # end of 'mcon/U/i_vfork.U'
fi
if test -f 'mcon/U/i_whoami.U' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'mcon/U/i_whoami.U'\"
else
  echo shar: Extracting \"'mcon/U/i_whoami.U'\" \(1019 characters\)
  sed "s/^X//" >'mcon/U/i_whoami.U' <<'END_OF_FILE'
X?RCS: $Id: i_whoami.U,v 3.0 1993/08/18 12:08:50 ram Exp $
X?RCS:
X?RCS: Copyright (c) 1991-1993, Raphael Manfredi
X?RCS: 
X?RCS: You may redistribute only under the terms of the Artistic Licence,
X?RCS: as specified in the README file that comes with the distribution.
X?RCS: You may reuse parts of this distribution only within the terms of
X?RCS: that same Artistic Licence; a copy of which may be found at the root
X?RCS: of the source tree for dist 3.0.
X?RCS:
X?RCS: $Log: i_whoami.U,v $
X?RCS: Revision 3.0  1993/08/18  12:08:50  ram
X?RCS: Baseline for dist 3.0 netwide release.
X?RCS:
X?MAKE:i_whoami: Inhdr
X?MAKE:	-pick add $@ %<
X?S:i_whoami (d_whoami):
X?S:	This variable conditionally defines the I_WHOAMI symbol, which
X?S:	indicates to the C program that it should include <whoami.h>.
X?S:.
X?C:I_WHOAMI (WHOAMI):
X?C:	This symbol, if defined, indicates that the program may include
X?C:	<whoami.h>.
X?C:.
X?H:#$i_whoami I_WHOAMI	/**/
X?H:.
X?LINT:set i_whoami
X: see if there is a whoami.h file
Xset whoami.h i_whoami
Xeval $inhdr
X
END_OF_FILE
  if test 1019 -ne `wc -c <'mcon/U/i_whoami.U'`; then
    echo shar: \"'mcon/U/i_whoami.U'\" unpacked with wrong size!
  fi
  # end of 'mcon/U/i_whoami.U'
fi
if test -f 'mcon/U/patchlevel.U' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'mcon/U/patchlevel.U'\"
else
  echo shar: Extracting \"'mcon/U/patchlevel.U'\" \(1014 characters\)
  sed "s/^X//" >'mcon/U/patchlevel.U' <<'END_OF_FILE'
X?RCS: $Id: patchlevel.U,v 3.0 1993/08/18 12:09:31 ram Exp $
X?RCS:
X?RCS: Copyright (c) 1991-1993, Raphael Manfredi
X?RCS: 
X?RCS: You may redistribute only under the terms of the Artistic Licence,
X?RCS: as specified in the README file that comes with the distribution.
X?RCS: You may reuse parts of this distribution only within the terms of
X?RCS: that same Artistic Licence; a copy of which may be found at the root
X?RCS: of the source tree for dist 3.0.
X?RCS:
X?RCS: $Log: patchlevel.U,v $
X?RCS: Revision 3.0  1993/08/18  12:09:31  ram
X?RCS: Baseline for dist 3.0 netwide release.
X?RCS:
X?MAKE:patchlevel: package baserev test
X?MAKE:	-pick add $@ %<
X?S:patchlevel:
X?S:	The patchlevel level of this package.
X?S:	The value of patchlevel comes from the patchlevel.h file.
X?S:.
X: get the patchlevel
Xecho " "
Xecho "Getting the current patchlevel..." >&4
Xif $test -r ../patchlevel.h;then
X	patchlevel=`awk '/PATCHLEVEL/ {print $3}' < ../patchlevel.h`
Xelse
X	patchlevel=0
Xfi
Xecho "(You have $package $baserev PL$patchlevel.)"
X
END_OF_FILE
  if test 1014 -ne `wc -c <'mcon/U/patchlevel.U'`; then
    echo shar: \"'mcon/U/patchlevel.U'\" unpacked with wrong size!
  fi
  # end of 'mcon/U/patchlevel.U'
fi
if test -f 'mcon/U/rootid.U' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'mcon/U/rootid.U'\"
else
  echo shar: Extracting \"'mcon/U/rootid.U'\" \(1041 characters\)
  sed "s/^X//" >'mcon/U/rootid.U' <<'END_OF_FILE'
X?RCS: $Id: rootid.U,v 3.0 1993/08/18 12:09:42 ram Exp $
X?RCS:
X?RCS: Copyright (c) 1991-1993, Raphael Manfredi
X?RCS: 
X?RCS: You may redistribute only under the terms of the Artistic Licence,
X?RCS: as specified in the README file that comes with the distribution.
X?RCS: You may reuse parts of this distribution only within the terms of
X?RCS: that same Artistic Licence; a copy of which may be found at the root
X?RCS: of the source tree for dist 3.0.
X?RCS:
X?RCS: $Log: rootid.U,v $
X?RCS: Revision 3.0  1993/08/18  12:09:42  ram
X?RCS: Baseline for dist 3.0 netwide release.
X?RCS:
X?MAKE:rootid: sed
X?MAKE:	-pick add $@ %<
X?S:rootid:
X?S:	This variable contains the eventual value of the ROOTID symbol,
X?S:	which is the uid of root.
X?S:.
X?C:ROOTID:
X?C:	This symbol contains the uid of root, normally 0.
X?C:.
X?H:#define ROOTID $rootid		/**/
X?H:.
X: determine root id
Xecho " "
Xrootid=`$sed -e "/^root:/{s/^[^:]*:[^:]*:\([^:]*\).*"'$'"/\1/" -e "q" -e "}" -e "d" </etc/passwd`
Xcase "$rootid" in
X'') rootid=0 ;;
X*) echo "Root uid = $rootid" >&4 ;;
Xesac
X
END_OF_FILE
  if test 1041 -ne `wc -c <'mcon/U/rootid.U'`; then
    echo shar: \"'mcon/U/rootid.U'\" unpacked with wrong size!
  fi
  # end of 'mcon/U/rootid.U'
fi
if test -f 'pl/package.pl' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'pl/package.pl'\"
else
  echo shar: Extracting \"'pl/package.pl'\" \(1035 characters\)
  sed "s/^X//" >'pl/package.pl' <<'END_OF_FILE'
X;# $Id: package.pl,v 3.0 1993/08/18 12:10:57 ram Exp $
X;#
X;#  Copyright (c) 1991-1993, Raphael Manfredi
X;#  
X;#  You may redistribute only under the terms of the Artistic Licence,
X;#  as specified in the README file that comes with the distribution.
X;#  You may reuse parts of this distribution only within the terms of
X;#  that same Artistic Licence; a copy of which may be found at the root
X;#  of the source tree for dist 3.0.
X;#
X;# $Log: package.pl,v $
X;# Revision 3.0  1993/08/18  12:10:57  ram
X;# Baseline for dist 3.0 netwide release.
X;#
X;#
Xsub readpackage {
X	if (! -f '.package') {
X		if (
X			-f '../.package' ||
X			-f '../../.package' ||
X			-f '../../../.package' ||
X			-f '../../../../.package'
X		) {
X			die "Run in top level directory only.\n";
X		} else {
X			die "No .package file!  Run packinit.\n";
X		}
X	}
X	open(PACKAGE,'.package');
X	while (<PACKAGE>) {
X		next if /^:/;
X		next if /^#/;
X		if (($var,$val) = /^\s*(\w+)=(.*)/) {
X			$val = "\"$val\"" unless $val =~ /^['"]/;
X			eval "\$$var = $val;";
X		}
X	}
X	close PACKAGE;
X}
X
END_OF_FILE
  if test 1035 -ne `wc -c <'pl/package.pl'`; then
    echo shar: \"'pl/package.pl'\" unpacked with wrong size!
  fi
  # end of 'pl/package.pl'
fi
echo shar: End of archive 27 \(of 28\).
cp /dev/null ark27isdone
MISSING=""
for I in 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 ; do
    if test ! -f ark${I}isdone ; then
	MISSING="${MISSING} ${I}"
    fi
done
if test "${MISSING}" = "" ; then
    echo You have unpacked all 28 archives.
    echo "Please run PACKNOTES through sh, read REAMDE and then type Configure."
    rm -f ark[1-9]isdone ark[1-9][0-9]isdone
else
    echo You still must unpack the following archives:
    echo "        " ${MISSING}
fi
exit 0

exit 0 # Just in case...
