Newsgroups: comp.sources.misc
From: chongo@toad.com (Landon Curt Noll)
Subject: v39i107:  ioccc.1993 - 1993 International Obfuscated C Code Contest winners, Part04/04
Message-ID: <1993Sep26.172619.4253@sparky.sterling.com>
X-Md4-Signature: e77b6efef5898288e0f167e45baed549
Keywords: ioccc
Sender: kent@sparky.sterling.com (Kent Landfield)
Reply-To: chongo@toad.com (Landon Curt Noll)
Organization: Nebula Consultants in San Francisco
Date: Sun, 26 Sep 1993 17:26:19 GMT
Approved: kent@sparky.sterling.com

Submitted-by: chongo@toad.com (Landon Curt Noll)
Posting-number: Volume 39, Issue 107
Archive-name: ioccc.1993/part04
Environment: C

#! /bin/sh
# This is ioccc.1993, a shell archive.  Remove anything before this line,
# then feed it into a shell via "sh file" or similar.  To overwrite existing
# files, type "sh file -c".
#
# Contents:  1993/ant.hint 1993/cmills.c 1993/dgibson.data1
#   1993/dgibson.data2 1993/dgibson.data3 1993/dgibson.data4
#   1993/dgibson.sh 1993/ejb.explain1 1993/plummer.c 1993/rince.data1
#   1993/rince.data2 1993/rince.data3 1993/rince.data4
#   1993/schnitzi.info
#
# Send comments, questions, bugs to:
#
#    judges@toad.com   -or-   ...!{sun,uunet,utzoo,pyramid}!hoptoad!judges
#
# You are strongly encouraged to read the new contest rules before
# sending any entries.  The rules, and sometimes the contest Email
# address itself, change over time.  Valid entries one year may
# be rejected in a later year due to changes in the rules.  The typical
# start date for contests is in early March.  Contest rules are normally not
# finalized and posted until the beginning of the contest.  The typical closing
# date for contests are in early May.
#
# The contest rules are posted to comp.unix.wizards, comp.lang.c,
# misc.misc, alt.sources and comp.sources.d.  If you do not have access
# to these groups, or if you missed the early March posting, you may
# request a copy from the judges, via Email, at the address above.
#
# Copyright (c) 1993, Landon Curt Noll & Larry Bassel.
# All Rights Reserved.  Permission for personal, educational or non-profit
# use is granted provided this this copyright and notice are included in its
# entirety and remains unaltered.  All other uses must receive prior permission
# in writing from both Landon Curt Noll and Larry Bassel.
#
# Previous contest winners are available via anonymous ftp from
# ftp.uu.net under the directory /pub/ioccc.
#
# Wrapped by kent@sparky on Sun Sep 26 12:05:12 1993
PATH=/bin:/usr/bin:/usr/ucb:/usr/local/bin:/usr/lbin ; export PATH
echo If this archive is complete, you will see the following message:
echo '          "shar: End of archive 4 (of 4)."'
if test -f '1993/ant.hint' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'1993/ant.hint'\"
else
  echo shar: Extracting \"'1993/ant.hint'\" \(1128 characters\)
  sed "s/^X//" >'1993/ant.hint' <<'END_OF_FILE'
XBest Utility: <ant@mks.com> Anthony C Howe
X
X	Anthony Howe
X	Mortice Kern Systems, Inc.
X	Unit 1, 14 Weber Street North,
X	Waterloo, Ontario, N2J 3G4
X	Canada
X
X
XJudges' comments:
X
X    To use:
X	make ant
X	./ant 'ERE' [file ...]
X
X    where:
X	ERE 	is an extended regular expression
X	file	a file to process (default is stdin)
X    
X    You may also want to try the author's test suite:
X	make -f ant.test.mk
X    
X    See the author's Posix P1003.2-like documentation file ant.doc
X    for more information.
X
X    This program demonstrates that Posix doesn't guarantee readability.  :-)
X
X
XSelected notes from the author:
X
X    Some of the features of my entry are:
X
X       o  "Lengthy" POSIX.2 style specification and manual :) :) 
X       o  Useful subset of POSIX.2 Extended Regular Expressions.
X       o  Recursive ERE parser/compiler that generates an NFA railroad. 
X       o  Lazy NFA to DFA evaluation to improve performance speed.
X       o  Code tested on a variety of platforms.
X       o  Make driven test script.
X       o  Can be compiled with ANSI or K&R C.
X       o  Not a toy, but actually useful and usable on systems that use DOS.
END_OF_FILE
  if test 1128 -ne `wc -c <'1993/ant.hint'`; then
    echo shar: \"'1993/ant.hint'\" unpacked with wrong size!
  fi
  # end of '1993/ant.hint'
fi
if test -f '1993/cmills.c' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'1993/cmills.c'\"
else
  echo shar: Extracting \"'1993/cmills.c'\" \(1198 characters\)
  sed "s/^X//" >'1993/cmills.c' <<'END_OF_FILE'
Xlong
Xz[7992],W,H,*t=z,j,k,*T=z,n,b;
X#include<X11/Xlib.h>
XWindow*E,D,s,w[999],*e=w;
XDisplay*d;
XPixmap
Xp;
Xm(w,h,x,y,u,v){
X#define C XCreateSimpleWindow(d,
XXSetWindowBackgroundPixmap(d,s=C*e=C
X#define l(n)t[n]=T[n]+
XD,l(0)x,l(1)y,t[2]=w,t[3]=h,1,b,0),l(6)-x,l(7)-y,W,H,0,0,0),p);
Xl(4)u;
Xl(5)v;
X#define M XMapRaised(d,
XM
Xs);
XM*e++);
Xt+=8;
X}
Xmain(c,g)char**g;
X{
XXSetWindowAttributes
Xa;
XXGCValues
Xv;
Xn=DefaultScreen(d=XOpenDisplay(0));
Xp=XCreatePixmap(d,D=RootWindow(d,n),W=DisplayWidth(d,n),H=DisplayHeight(d,n),DefaultDepth(d,n));
Xv.subwindow_mode=IncludeInferiors;
XXCopyArea(d,D,p,XCreateGC(d,D,GCSubwindowMode,&v),0,0,W,H,0,0);
Xa.override_redirect=True;
XXChangeWindowAttributes(d,D=C
XD,0,0,W,H,0,0,b=BlackPixel(d,n)),CWOverrideRedirect,&a);
XM
XD);
Xm(W,H,0,0,3,3);
Xfor(c=c^1?atoi(g[1]):9;
X;
X)for(T=z,n=e-(E=w);
Xn--;
XT+=8,++E){
XXMoveWindow(d,*E,*T+=T[4]*c,T[1]+=T[5]*c);
Xj=0;
X#define F(n,o,s)o+T[n-4]s-0&&++j&&T[n]s!1&&(T[n]=0-T[n])||
Xif((F(4,0,<)F(4,T[2]-W,>)F(5,0,<)F(5,T[3]-H,>)1)&&j&&(j=T[2]/2)&&(k=T[3]/2)&&e-w<997&&rand()%32768<=T[2]*T[3]*(T[4]*T[4]+T[5]*T[5])/999){
Xm(T[2]-j,T[3]-k,j,k,2,2);
Xm(j,T[3]-k,0,k,-2,-2);
Xm(T[2]-j,k,j,0,2,-2);
XT[7]-=2;
XXResizeWindow(d,*E,T[2]=j,T[3]=k);
XT[6]-=2;
X}
X}
X}
END_OF_FILE
  if test 1198 -ne `wc -c <'1993/cmills.c'`; then
    echo shar: \"'1993/cmills.c'\" unpacked with wrong size!
  fi
  # end of '1993/cmills.c'
fi
if test -f '1993/dgibson.data1' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'1993/dgibson.data1'\"
else
  echo shar: Extracting \"'1993/dgibson.data1'\" \(78 characters\)
  sed "s/^X//" >'1993/dgibson.data1' <<'END_OF_FILE'
XLIFE
X
XL _ _ _ _ _
XL _ _ _ O _
XL _ O _ O _
XL _ _ O O _
XL _ _ _ _ _
X
XGEN 0 
XEND
END_OF_FILE
  if test 78 -ne `wc -c <'1993/dgibson.data1'`; then
    echo shar: \"'1993/dgibson.data1'\" unpacked with wrong size!
  fi
  # end of '1993/dgibson.data1'
fi
if test -f '1993/dgibson.data2' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'1993/dgibson.data2'\"
else
  echo shar: Extracting \"'1993/dgibson.data2'\" \(65 characters\)
  sed "s/^X//" >'1993/dgibson.data2' <<'END_OF_FILE'
XLIFE
X
XL _ _ _ _ _
XL _ O O O _
XL _ _ O _ _
XL _ _ _ _ _
X
XGEN 0
XEND
END_OF_FILE
  if test 65 -ne `wc -c <'1993/dgibson.data2'`; then
    echo shar: \"'1993/dgibson.data2'\" unpacked with wrong size!
  fi
  # end of '1993/dgibson.data2'
fi
if test -f '1993/dgibson.data3' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'1993/dgibson.data3'\"
else
  echo shar: Extracting \"'1993/dgibson.data3'\" \(77 characters\)
  sed "s/^X//" >'1993/dgibson.data3' <<'END_OF_FILE'
XLIFE
X
XL _ _ _ _ _
XL _ _ O O _
XL _ O O _ _
XL _ _ O _ _
XL _ _ _ _ _
X
XGEN 0
XEND
END_OF_FILE
  if test 77 -ne `wc -c <'1993/dgibson.data3'`; then
    echo shar: \"'1993/dgibson.data3'\" unpacked with wrong size!
  fi
  # end of '1993/dgibson.data3'
fi
if test -f '1993/dgibson.data4' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'1993/dgibson.data4'\"
else
  echo shar: Extracting \"'1993/dgibson.data4'\" \(405 characters\)
  sed "s/^X//" >'1993/dgibson.data4' <<'END_OF_FILE'
X/*  0064 Can you build a puffer train?  */
X
XLIFE
X
XL _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
XL _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
XL _ _ O _ _ _ _ _ _ _ _ O _ _ _ _ O _ _ _ 
XL _ O _ _ _ _ _ O _ _ O _ _ _ _ O _ _ _ _ 
XL _ O _ _ _ _ _ _ O O O _ _ _ _ O _ _ _ _ 
XL _ O _ _ O _ _ _ _ _ _ _ _ _ _ O _ _ O _ 
XL _ O O O _ _ _ _ _ _ _ _ _ _ _ O O O _ _ 
XL _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
X
XGEN 0
XEND
END_OF_FILE
  if test 405 -ne `wc -c <'1993/dgibson.data4'`; then
    echo shar: \"'1993/dgibson.data4'\" unpacked with wrong size!
  fi
  # end of '1993/dgibson.data4'
fi
if test -f '1993/dgibson.sh' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'1993/dgibson.sh'\"
else
  echo shar: Extracting \"'1993/dgibson.sh'\" \(827 characters\)
  sed "s/^X//" >'1993/dgibson.sh' <<'END_OF_FILE'
X#!/bin/sh
X#
X# dgibson.sh - run the dgibson entry
X#
X# usage:
X#	dgibson.sh [data_file]
X
X# parse args
X#
Xif [ $# -eq 0 ]; then
X    DATA="./dgibson.data1"
Xelse
X    DATA="$1"
Xfi
Xif [ ! -f "$DATA" ]; then
X    echo "$0: no data found in $DATA" 1>&2
X    exit 1
Xfi
X
X# for the initial data.name if needed
X#
Xif [ ! -f "data.name" ]; then
X    rm -f data.name
X    echo "$DATA" > data.name
Xfi
Xif [ ! -f life.d ]; then
X    # force a new life setup
X    echo "/" > data.name
Xfi
Xrm -f data.name2
Xecho "$DATA" > data.name2
X
X# note if we are running a new form
X#
Xif cmp -s data.name data.name2; then
X    :
Xelse
X    rm -f life.d
X    cp "$DATA" life.d
X    rm -f data.name
X    echo "$DATA" > data.name
X    cat life.d
Xfi
X
X# build a new copy of the program
X#
Xrm -f dgibson
Xmake dgibson
X
X# form the next generation
X#
Xchmod +w life.d
Xdgibson | tee life.d
END_OF_FILE
  if test 827 -ne `wc -c <'1993/dgibson.sh'`; then
    echo shar: \"'1993/dgibson.sh'\" unpacked with wrong size!
  fi
  chmod +x '1993/dgibson.sh'
  # end of '1993/dgibson.sh'
fi
if test -f '1993/ejb.explain1' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'1993/ejb.explain1'\"
else
  echo shar: Extracting \"'1993/ejb.explain1'\" \(530 characters\)
  sed "s/^X//" >'1993/ejb.explain1' <<'END_OF_FILE'
X    The Towers of Hanoi is a puzzle consisting of three posts
X    and several rings of various sizes.  The initial
X    configuration of the game is that all the rings are stacked
X    in decreasing order of size on one post.  The object of the
X    game is to move all the rings from one post to another
X    subject to two rules: only one ring can be moved at a time,
X    and at no time can one ring be placed on top of a smaller
X    ring.  The number of steps necessary to solve this puzzle is
X    exponential in the number rings.
END_OF_FILE
  if test 530 -ne `wc -c <'1993/ejb.explain1'`; then
    echo shar: \"'1993/ejb.explain1'\" unpacked with wrong size!
  fi
  # end of '1993/ejb.explain1'
fi
if test -f '1993/plummer.c' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'1993/plummer.c'\"
else
  echo shar: Extracting \"'1993/plummer.c'\" \(125 characters\)
  sed "s/^X//" >'1993/plummer.c' <<'END_OF_FILE'
Xchar*_,*O;main(S,l)char**l;{*(O=*(l+++S-1)-1)=13,*l[1]=0;for(;;)for(printf(*l),_=O-1;_>=*l&&++*_>(S+*O+S)*S;*_--=(S+*O)*S);}
END_OF_FILE
  if test 125 -ne `wc -c <'1993/plummer.c'`; then
    echo shar: \"'1993/plummer.c'\" unpacked with wrong size!
  fi
  # end of '1993/plummer.c'
fi
if test -f '1993/rince.data1' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'1993/rince.data1'\"
else
  echo shar: Extracting \"'1993/rince.data1'\" \(1056 characters\)
  sed "s/^X//" >'1993/rince.data1' <<'END_OF_FILE'
X\#* ***** **'******
X\#** **** ***/*****
X\$*******/ ********
Xo*** **** ***o****,
X=*** **** ***=****,
Xo******=* *o******.
Xo ***** * \********
X\ ******* \********
X'**$*****`** ******
X' *#***** \********
X'**#* *** ****`****
X'** ***** **'******
X/******=*\*********
X`******=*'*********
X
X=**** *** ****=***/
Xo**** *** ****o***/
X/***** ** *****/***
X/*****#**`*********
X`*******  *******`*
X`*******#/*********
X
X36 18
X###################################
X#                                 #
X#$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$#
X#$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$#
X#$$$$$$$$$$$$$#$$$#$$$$$$$$$$$$$$$#
X#$$$$$$$$$$$$$#$$$#$$$$$$$$$$$$$$$#
X#$$$$$$$$$$$$$#$$$#$$$$$$$$$$$$$$$#
X#                                 #
X#                                 #
X#      #   #    #                 #
X#      #   #                      #
X#      #   #                      #
X#                                 #
X#                                 #
X#         o                       #
X#        ====                     #
X#                                 #
X-----------------------------------
END_OF_FILE
  if test 1056 -ne `wc -c <'1993/rince.data1'`; then
    echo shar: \"'1993/rince.data1'\" unpacked with wrong size!
  fi
  # end of '1993/rince.data1'
fi
if test -f '1993/rince.data2' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'1993/rince.data2'\"
else
  echo shar: Extracting \"'1993/rince.data2'\" \(1084 characters\)
  sed "s/^X//" >'1993/rince.data2' <<'END_OF_FILE'
Xo***o@***@***d.***h
Xo*o****@*@*d****.*k
Xh***H@***@***..***h
Xk*K****@*@*.****.*k
Xo***.@***@***o.***h
XO***.@***@***O.***h
Xh***.@***@***h.***h
Xj***.@***@***j.***h
Xk***.@***@***k.***h
Xl***.@***@***l.***h
Xo*.****@*@*o****.*k
XO*.****@*@*O****.*k
Xh*.****@*@*h****.*k
Xj*.****@*@*j****.*k
Xk*.****@*@*k****.*k
Xl*.****@*@*l****.*k
X@***.****.***@****h
X@***d****.***@****h
X@*d******.*@******k
X@*.******.*@******k
X
Xo***@o***@***.d***l
Xo*@****o*@*.****d*j
Xl***@L***@***..***l
Xj*@****J*@*.****.*j
Xo***@.***@***.o***l
XO***@.***@***.O***l
Xh***@.***@***.h***l
Xj***@.***@***.j***l
Xk***@.***@***.k***l
Xl***@.***@***.l***l
Xo*@****.*@*.****o*j
XO*@****.*@*.****O*j
Xh*@****.*@*.****h*j
Xj*@****.*@*.****j*j
Xk*@****.*@*.****k*j
Xl*@****.*@*.****l*j
X@****d***.****@***l
X@****.***.****@***l
X@******d*.******@*j
X@******.*.******@*j
X
X23 12
X######################
X#do#.......#..o.o.#..#
X#oo#.#K###.#j.#.#.#h.#
X#.@..#..H.....hh#.#od#
X#oo..H..####k#d...#.o#
X#######J#o.#..o#.##.o#
X#dd##oo.#o.###ddo#...#
X#.Od###.#.o####do#..d#
X#.o.H........#####o..#
X#.oo##..#O....O.O.O.o#
X#d..#ooooO.o#...O....#
X######################
END_OF_FILE
  if test 1084 -ne `wc -c <'1993/rince.data2'`; then
    echo shar: \"'1993/rince.data2'\" unpacked with wrong size!
  fi
  # end of '1993/rince.data2'
fi
if test -f '1993/rince.data3' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'1993/rince.data3'\"
else
  echo shar: Extracting \"'1993/rince.data3'\" \(1268 characters\)
  sed "s/^X//" >'1993/rince.data3' <<'END_OF_FILE'
Xm*** o***o***m ***h
Xm*** O***o***m.***h
XM*** o***O***m ***h
XM*** O***O***m.***h
Xm***.o***o***M ***h
Xm***.O***o***M.***h
XM***.o***O***M ***h
XM***.O***O***M.***h
Xo*** **** ***o****h
Xo***.**** ***O****h
XO*** ****.***o****h
XO***.****.***O****h
Xm* ****o*o*m**** *k
Xm* ****O*o*m****.*k
XM* ****o*O*m**** *k
XM* ****O*O*m****.*k
Xm*.****o*o*M**** *k
Xm*.****O*o*M****.*k
XM*.****o*O*M**** *k
XM*.****O*O*M****.*k
Xo* ****** *o******k
Xo*.****** *O******k
XO* ******.*o******k
XO*.******.*O******k
X
Xm***o ***o*** m***l
Xm***O ***o***.m***l
XM***o ***O*** m***l
XM***O ***O***.m***l
Xm***o.***o*** M***l
Xm***O.***o***.M***l
XM***o.***O*** M***l
XM***O.***O***.M***l
Xo**** *** ****o***l
Xo****.*** ****O***l
XO**** ***.****o***l
XO****.***.****O***l
Xm*o**** *o* ****m*j
Xm*O**** *o*.****m*j
XM*o**** *O* ****m*j
XM*O**** *O*.****m*j
Xm*o****.*o* ****M*j
Xm*O****.*o*.****M*j
XM*o****.*O* ****M*j
XM*O****.*O*.****M*j
Xo****** * ******o*j
Xo******.* ******O*j
XO****** *.******o*j
XO******.*.******O*j
X
X20 15
X.         ####     
X     #### #  #     
X   ### o###m #     
X  ##      m  #     
X ##  m mm## ##     
X #  #m##     #     
X # # m mm # ###    
X #   m #  # m #####
X####    #  mm #   #
X#### ## m         #
X#.    ###  ########
X#.. ..# ####       
X#...#.#            
X#.....#            
X#######            
END_OF_FILE
  if test 1268 -ne `wc -c <'1993/rince.data3'`; then
    echo shar: \"'1993/rince.data3'\" unpacked with wrong size!
  fi
  # end of '1993/rince.data3'
fi
if test -f '1993/rince.data4' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'1993/rince.data4'\"
else
  echo shar: Extracting \"'1993/rince.data4'\" \(1228 characters\)
  sed "s/^X//" >'1993/rince.data4' <<'END_OF_FILE'
Xm*** o***o***m ***h
Xm*** O***o***m.***h
XM*** o***O***m ***h
XM*** O***O***m.***h
Xm***.o***o***M ***h
Xm***.O***o***M.***h
XM***.o***O***M ***h
XM***.O***O***M.***h
Xo*** **** ***o****h
Xo***.**** ***O****h
XO*** ****.***o****h
XO***.****.***O****h
Xm* ****o*o*m**** *k
Xm* ****O*o*m****.*k
XM* ****o*O*m**** *k
XM* ****O*O*m****.*k
Xm*.****o*o*M**** *k
Xm*.****O*o*M****.*k
XM*.****o*O*M**** *k
XM*.****O*O*M****.*k
Xo* ****** *o******k
Xo*.****** *O******k
XO* ******.*o******k
XO*.******.*O******k
X
Xm***o ***o*** m***l
Xm***O ***o***.m***l
XM***o ***O*** m***l
XM***O ***O***.m***l
Xm***o.***o*** M***l
Xm***O.***o***.M***l
XM***o.***O*** M***l
XM***O.***O***.M***l
Xo**** *** ****o***l
Xo****.*** ****O***l
XO**** ***.****o***l
XO****.***.****O***l
Xm*o**** *o* ****m*j
Xm*O**** *o*.****m*j
XM*o**** *O* ****m*j
XM*O**** *O*.****m*j
Xm*o****.*o* ****M*j
Xm*O****.*o*.****M*j
XM*o****.*O* ****M*j
XM*O****.*O*.****M*j
Xo****** * ******o*j
Xo******.* ******O*j
XO****** *.******o*j
XO******.*.******O*j
X
X20 14
X.  #########       
X  ##   ##  #####   
X###     #  #    ###
X#  m #m #  #  ... #
X# # m#om## # #.#. #
X#  # #m  #    . . #
X# m    m # # #.#. #
X#   ##  ##m m . . #
X# m #   #  #m#.#. #
X## m  m   m  m... #
X #m ######    ##  #
X #  #    ##########
X ####              
END_OF_FILE
  if test 1228 -ne `wc -c <'1993/rince.data4'`; then
    echo shar: \"'1993/rince.data4'\" unpacked with wrong size!
  fi
  # end of '1993/rince.data4'
fi
if test -f '1993/schnitzi.info' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'1993/schnitzi.info'\"
else
  echo shar: Extracting \"'1993/schnitzi.info'\" \(274 characters\)
  sed "s/^X//" >'1993/schnitzi.info' <<'END_OF_FILE'
XThis program answers questions about paragraphs
Xof text posed to it in English.  It is written
Xin C.  Mark Schnitzius is the author of this
Xprogram.
X
XThe Loch Ness monster has been captured.  Elvis
Xis alive.  Hostler was a woman.  The NASA moon
Xlandings were clearly faked.
END_OF_FILE
  if test 274 -ne `wc -c <'1993/schnitzi.info'`; then
    echo shar: \"'1993/schnitzi.info'\" unpacked with wrong size!
  fi
  # end of '1993/schnitzi.info'
fi
echo shar: End of archive 4 \(of 4\).
cp /dev/null ark4isdone
MISSING=""
for I in 1 2 3 4 ; do
    if test ! -f ark${I}isdone ; then
	MISSING="${MISSING} ${I}"
    fi
done
if test "${MISSING}" = "" ; then
    echo You have unpacked all 4 archives.
    rm -f ark[1-9]isdone
else
    echo You still must unpack the following archives:
    echo "        " ${MISSING}
fi
exit 0
exit 0 # Just in case...
