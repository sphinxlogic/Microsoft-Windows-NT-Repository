Newsgroups: comp.sources.misc
From: erlkonig@apple-gunkies.gnu.ai.mit.edu (Christopher North-Keys)
Subject: v39i063:  elfshell - Example convoluted configuration for csh/tcsh/bash/es/(sh) shells, Part02/02
Message-ID: <1993Aug29.174123.25790@sparky.sterling.com>
X-Md4-Signature: 04761a289177538e681a41922385932e
Sender: kent@sparky.sterling.com (Kent Landfield)
Organization: Sterling Software
Date: Sun, 29 Aug 1993 17:41:23 GMT
Approved: kent@sparky.sterling.com

Submitted-by: erlkonig@apple-gunkies.gnu.ai.mit.edu (Christopher North-Keys)
Posting-number: Volume 39, Issue 63
Archive-name: elfshell/part02
Environment: UNIX

#! /bin/sh
# This is a shell archive.  Remove anything before this line, then feed it
# into a shell via "sh file" or similar.  To overwrite existing files,
# type "sh file -c".
# Contents:  .elven/Makefile .elven/NOTES .elven/arch
#   .elven/bash/Makefile .elven/bash/Prompts .elven/bash/bash_login
#   .elven/bash/bash_logout .elven/bash/bashrc .elven/bash/environ
#   .elven/bash/functions.loc .elven/bash/interface
#   .elven/bash/session .elven/bash/term.wy30 .elven/bash/traps
#   .elven/broadcast .elven/controls .elven/csh/Makefile
#   .elven/csh/aliases .elven/csh/aliases.local .elven/csh/environ
#   .elven/csh/sunview .elven/environ.base .elven/environ.sess
#   .elven/es/Makefile .elven/es/Notes .elven/es/environ
#   .elven/es/esrc.UU .elven/es/functions .elven/es/functions.loc
#   .elven/es/interface .elven/es/session .elven/path .elven/pathcd
#   .elven/pathman .elven/sh/Makefile .elven/sh/environ
#   .elven/sh/functions .elven/sh/functions.loc .elven/sh/profile
#   .elven/sh/session .elven/sh/traps .elven/wy30.UU
# Wrapped by kent@sparky on Sun Aug 29 12:15:51 1993
PATH=/bin:/usr/bin:/usr/ucb:/usr/local/bin:/usr/lbin ; export PATH
echo If this archive is complete, you will see the following message:
echo '          "shar: End of archive 2 (of 2)."'
if test -f '.elven/Makefile' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'.elven/Makefile'\"
else
  echo shar: Extracting \"'.elven/Makefile'\" \(756 characters\)
  sed "s/^X//" >'.elven/Makefile' <<'END_OF_FILE'
XELVEN	=	.elven
XSHELL	=	/bin/sh
XRM		=	rm -f
XLN		=	ln -s
XCP		=	cp
X
Xdefault:: 
X	@echo ''
X	@echo 'Welcome to the Elfshell'
X	@echo 'Christopher North-Keys, Talisman Group'
X	@echo ''
X	@echo 'Backup your current shell-startup files before continuing.'
X	@echo ''
X	@echo 'Run "make help" for additional info.'
X	@echo 'Run "make install" to complete installation.'
X
XFOLLOW = */*akefile */RCS */SCCS
X
Xinstall::
X	@for file in $(FOLLOW) ; do			\
X		dir=`dirname $$file` ;				\
X		if [ "$$dir" != "*" ]; then			\
X			/bin/echo '[shell '$$dir'] ' ;		\
X			(	cd $$dir ;							\
X				$(MAKE) CP="$(CP)" LN="$(LN)" RM="$(RM)" $@		\
X			) 2>&1 | sed 's@.*@    &@g' ; 			\
X		fi									\
X	done
X
Xhelp::
X	@echo 'Verify that the LN and CP in $(ELVEN)/Makefile are correct.'
X
X#-----eof
END_OF_FILE
  if test 756 -ne `wc -c <'.elven/Makefile'`; then
    echo shar: \"'.elven/Makefile'\" unpacked with wrong size!
  fi
  # end of '.elven/Makefile'
fi
if test -f '.elven/NOTES' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'.elven/NOTES'\"
else
  echo shar: Extracting \"'.elven/NOTES'\" \(963 characters\)
  sed "s/^X//" >'.elven/NOTES' <<'END_OF_FILE'
X[Talisman/North-Keys Wed Feb 10 00:31:45 CST 1993]
X
X~/.elven
X
XImportant: The elfshell's entire impression of the user hinges on LOGNAME.
X
XOverview
X
XI.	The shell's startup script runs first.
X	a.	discerns whether echo accepts '-n' option.
X	b.	sets the ``message'' function.
X	c.	salvages crucial variables
X		1.	LOGNAME (if missing ask user, or die if noninteractive)
X		2.	HOME (csh: home)
X		3.	ELVEN
X		4.	SHLVL (if missing)
X	d.	creates the function ``self''
X	e.	uses self to read in various files:
X		1.	environ:
X			(a).	sets ARCH from ~/elven/arch
X			(b).	sets PATH (csh: path) from ~/elven/path
X			(c).	sets CDPATH (csh: cdpath) from ~/elven/cdpath 
X			(d).	sets function to interpret shared files:
X				(1).	environ.com
X				(2).	environ.loc
X			(e).	clears interpretation functions.
X		2.	if interactive:
X			(a).	traps (csh: omitted)
X			(b).	interface
X			(c).	functions (csh: ``aliases'')
X			(d).	session
X
X
X#--------------------------------------------------eof
X
X
X		
END_OF_FILE
  if test 963 -ne `wc -c <'.elven/NOTES'`; then
    echo shar: \"'.elven/NOTES'\" unpacked with wrong size!
  fi
  # end of '.elven/NOTES'
fi
if test -f '.elven/arch' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'.elven/arch'\"
else
  echo shar: Extracting \"'.elven/arch'\" \(452 characters\)
  sed "s/^X//" >'.elven/arch' <<'END_OF_FILE'
X#!/bin/sh
X#
X#	arch -- give one token naming the machine architecture, or "unknown"
X#
X#	Christopher Alexander North-Keys
X#	Wed Feb 10 02:43:28 CST 1993
X
X
Xfor prog in \
X	/bin/arch \
X	/usr/bin/arch \
X	/bin/machine \
X	/usr/local/bin/machine
Xdo
X	if [ -f $prog ]; then
X		$prog
X		exit 0
X	fi
Xdone
X
Xfor prog in \
X	/bin/uname \
X	/usr/bin/uname
Xdo
X	if [ -f $prog ]; then
X		$prog -m
X		exit 0
X	fi
Xdone
X
Xexit 1
X#--------------------------------------------------eof
END_OF_FILE
  if test 452 -ne `wc -c <'.elven/arch'`; then
    echo shar: \"'.elven/arch'\" unpacked with wrong size!
  fi
  chmod +x '.elven/arch'
  # end of '.elven/arch'
fi
if test -f '.elven/bash/Makefile' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'.elven/bash/Makefile'\"
else
  echo shar: Extracting \"'.elven/bash/Makefile'\" \(593 characters\)
  sed "s/^X//" >'.elven/bash/Makefile' <<'END_OF_FILE'
XELVEN	=	$(HOME)/.elven/bash
XSHELL	=	/bin/sh
XRM		=	rm -f
XLN		=	ln -s
XCP		=	cp
X
Xdefault::
X	@echo ''
X	@echo 'Welcome to the Elfshell'
X	@echo 'Christopher North-Keys, Talisman Group'
X	@echo ''
X	@echo 'This is the version for bash, the Bourne-Again Shell'
X	@echo 'Run "make install" to complete installation'
X	@echo ''
X
X$(HOME)/.bashrc: bashrc
X	-$(RM) $@
X	-$(LN) $(ELVEN)/$? $@
X
X$(HOME)/.bash_login: bash_login
X	-$(RM) $@
X	-$(LN) $(ELVEN)/$? $@
X
X$(HOME)/.bash_logout: bash_logout
X	-$(RM) $@
X	-$(LN) $(ELVEN)/$? $@
X		
Xinstall:: $(HOME)/.bashrc $(HOME)/.bash_login $(HOME)/.bash_logout help 
X
Xhelp::
END_OF_FILE
  if test 593 -ne `wc -c <'.elven/bash/Makefile'`; then
    echo shar: \"'.elven/bash/Makefile'\" unpacked with wrong size!
  fi
  # end of '.elven/bash/Makefile'
fi
if test -f '.elven/bash/Prompts' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'.elven/bash/Prompts'\"
else
  echo shar: Extracting \"'.elven/bash/Prompts'\" \(431 characters\)
  sed "s/^X//" >'.elven/bash/Prompts' <<'END_OF_FILE'
X#
X# Here is a list of the special escape sequences you can embed in
X# your prompt and what they are expanded to.
X#
X#   
X#   \t		the time
X#   \d		the date
X#   \n		CRLF
X#   \s		the name of the shell
X#   \w		the current working directory
X#   \u		your username
X#   \h		the hostname
X#   \#		the command number of this command
X#   \!		the history number of this command
X#   \<octal>	character code in octal
X#   \\		a backslash
X#
X# eof
X#
END_OF_FILE
  if test 431 -ne `wc -c <'.elven/bash/Prompts'`; then
    echo shar: \"'.elven/bash/Prompts'\" unpacked with wrong size!
  fi
  # end of '.elven/bash/Prompts'
fi
if test -f '.elven/bash/bash_login' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'.elven/bash/bash_login'\"
else
  echo shar: Extracting \"'.elven/bash/bash_login'\" \(588 characters\)
  sed "s/^X//" >'.elven/bash/bash_login' <<'END_OF_FILE'
X#	File:	.bash_login
X#	Auth:	Christoph. Alex. North-Keys   Tue May 14 05:21:36 EDT 1991
X#	Desc:	login indication
X
Xif [ "$PS1" ] ; then echo ---elfshell-login--- ; fi
X
Xif [ -r $HOME/.bashrc ] ; then source $HOME/.bashrc ; fi
X
Xif [ "$PS1" ] ; then
X#	if type miosach >& /dev/null; then miosach ; echo ; fi
X#	if type finger  >& /dev/null; then finger ; fi
X#	echo
X	if type strftime >& /dev/null; then strftime -default; fi
X	if type Mail >& /dev/null
X		then Mail -H;
X		else if type mailx >& /dev/null; then mailx -H; fi
X	fi
X	if [ -r $NOTEDIR/todo ]; then echo '[note: todo]'; fi
Xfi
X
X#-------eof
END_OF_FILE
  if test 588 -ne `wc -c <'.elven/bash/bash_login'`; then
    echo shar: \"'.elven/bash/bash_login'\" unpacked with wrong size!
  fi
  chmod +x '.elven/bash/bash_login'
  # end of '.elven/bash/bash_login'
fi
if test -f '.elven/bash/bash_logout' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'.elven/bash/bash_logout'\"
else
  echo shar: Extracting \"'.elven/bash/bash_logout'\" \(181 characters\)
  sed "s/^X//" >'.elven/bash/bash_logout' <<'END_OF_FILE'
X#	File:	.bash_logout
X#	Auth:	Christoph. Alex. North-Keys   Thu Feb 11 03:31:12 CST 1993
X#	Desc:	logout indication
X
Xif [ "$PS1" ] ; then echo ---elfshell-logout--- ; fi
X
X#-------eof
END_OF_FILE
  if test 181 -ne `wc -c <'.elven/bash/bash_logout'`; then
    echo shar: \"'.elven/bash/bash_logout'\" unpacked with wrong size!
  fi
  # end of '.elven/bash/bash_logout'
fi
if test -f '.elven/bash/bashrc' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'.elven/bash/bashrc'\"
else
  echo shar: Extracting \"'.elven/bash/bashrc'\" \(1452 characters\)
  sed "s/^X//" >'.elven/bash/bashrc' <<'END_OF_FILE'
X#----------------------------------------------------------------------#
X#	File:	~/.bashrc
X#	Auth:	North-Keys   Sun Apr 28 23:24:27 EDT 1991
X#	Desc:	elven scripts primary file, bash version
X#----------------------------------------------------------------------#
Xif [ "X`echo -n`" = "X-n" ]
X	then echon () { echo "$*"'\c'; }
X	else echon () { echo -n "$*"; }
Xfi
Xif [ -n "$PS1" ]; then message () { echon "$*"; }; else message () { :; } ; fi
Xmessage lvn/bash/4' '
X
Xif [ ! "$LOGNAME" ] ; then
X	if type logname >&/dev/null;
X		then export LOGNAME="$(logname)"
X		else echon 'Who are we?: ' ; read LOGNAME ; export LOGNAME
X	fi
Xfi
Xif [ ! "$HOME" ] ; then export HOME=$(eval echo ~$LOGNAME) ; fi
X
XELVEN_PREV=$ELVEN ; export ELVEN=$HOME/.elven
X
Xself ()
X{
X	if [ "X$1" = "X-" ] ; then unset ENVIRON ; shift ; fi
X	if [ $# -eq 0 ] ; then files=bashrc ; else files="$*" ; fi
X	local f ; for f in $files ; do
X		if [ -r $ELVEN/$f ]; then
X			source $ELVEN/$f
X		else
X			if [ -r $ELVEN/bash/$f ];then source $ELVEN/bash/$f; else false; fi
X		fi
X	done
X}
X
Xif [ \( "$LOGNAME" != "$ENVIRON" \) -o \( "$ELVEN_PREV" != "$ELVEN" \) ] ; then
X	self environ
Xfi
X
Xunset ELVEN_PREV
X
Xcase "$TERM" in \|*) export GURU="${TERM##\|}"; TERM=guru; eval "$GURU" ;;esac
X
Xif [ -n "$PS1" ] ; then
X	self	traps		# set signal traps
X	self	functions	# get functions	and aliases
X	self	interface	# set interface
X	self	session		# get per session settings
X	echo "."
X	.
Xfi
X#----------End of file----------#
END_OF_FILE
  if test 1452 -ne `wc -c <'.elven/bash/bashrc'`; then
    echo shar: \"'.elven/bash/bashrc'\" unpacked with wrong size!
  fi
  # end of '.elven/bash/bashrc'
fi
if test -f '.elven/bash/environ' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'.elven/bash/environ'\"
else
  echo shar: Extracting \"'.elven/bash/environ'\" \(739 characters\)
  sed "s/^X//" >'.elven/bash/environ' <<'END_OF_FILE'
X#----------------------------------------------------------------------#
X#	File:     ~/.elven/bash/environ
X#	Author:   Christoph.Alex.North-Keys
X#	Rev:      Wed Jan 13 08:02:51 GMT 1993
X#	Descrip:  Elvenshell shared environemnt
X#---------------------------------------------------do-not-edit-this---#
X
Xmessage env
X
Xexport ARCH="`$ELVEN/arch`"
Xexport PATH="`$ELVEN/path :`"
Xif [ -n "$PS1" ]; then
X	export CDPATH="`$ELVEN/pathcd :`"
Xfi
X
Xsetenv  () { export $1="$2" ; }
Xcmdenv  () { export $1="`sh -c "$2"`" ; }
Xdefenv  () { test -z "$(eval echo '$'$(echo $1))" && export $1="$2" ; }
Xcleanup () { unset setenv cleanup ; }
X
Xself environ.base
X
Xif [ -n "PS1" ]; then
X	self environ.sess
Xfi
X
Xcleanup
Xmessage ' '
X
X#----------End of file----------#
END_OF_FILE
  if test 739 -ne `wc -c <'.elven/bash/environ'`; then
    echo shar: \"'.elven/bash/environ'\" unpacked with wrong size!
  fi
  # end of '.elven/bash/environ'
fi
if test -f '.elven/bash/functions.loc' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'.elven/bash/functions.loc'\"
else
  echo shar: Extracting \"'.elven/bash/functions.loc'\" \(1003 characters\)
  sed "s/^X//" >'.elven/bash/functions.loc' <<'END_OF_FILE'
X#----------------------------------------------------------------------#
X#	File:	functions.loc
X#	Auth:	Christoph. Alex. North-Keys    Tue May 14 06:17:44 EDT 1991
X#	Desc:	local functions for the bash version of the elven scripts
X#----------------------------------------------------------------------#
X
Xbasename () { local tail=${1%/}; tail=${tail##*/}; echo ${tail:-/}; }
Xwhich () { type -path $* }
X
X#	Displays
Xnox		() { unset DISPLAYMACH DISPLAY ; }
Xsun		() { unset DISPLAYMACH DISPLAY ; export TERM=sun ; }
Xxdsp	() { export DISPLAY=$1 }
X
X#	Dump origin of user's connection on this tty to stdout
Xwaddr	()
X{
X	who am i | sed 's/.*(\(.*\))/\1/;s/:.*//'
X}
X
X#	Set probable X display of user, result to stdout
Xrxdsp	()
X{
X	xdsp $(waddr):0
X	echo $DISPLAY
X}
X
X#	Set probable X display and take one argument as fodder for xauth
Xrxauth	()
X{
X	if [ $# -ne 1 ] ; then
X		echo $0: '(rxauth)' missing Xauthority authentication string
X		return 1
X	fi
X	rxdsp
X	xauth add $DISPLAY MIT-MAGIC-COOKIE-1 $1
X}
X
X#-------------eof
END_OF_FILE
  if test 1003 -ne `wc -c <'.elven/bash/functions.loc'`; then
    echo shar: \"'.elven/bash/functions.loc'\" unpacked with wrong size!
  fi
  # end of '.elven/bash/functions.loc'
fi
if test -f '.elven/bash/interface' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'.elven/bash/interface'\"
else
  echo shar: Extracting \"'.elven/bash/interface'\" \(1616 characters\)
  sed "s/^X//" >'.elven/bash/interface' <<'END_OF_FILE'
X#----------------------------------------------------------------------#
X#	File: 	interface
X#	Auth:	Christoph. Alex. North-Keys -- Tue Jul  6 05:31:36 CDT 1993
X#	Desc:	interface determination, elfshell, bash version
X#----------------------------------------------------------------------#
Xmessage interface' '
X
Xexport TTY="`tty`"
X
Xreadterm ()
X{
X	local line
X	1>&2 echon "TERM = ($1) "
X	read line
X	echo ${line:-$1}
X}
X
Xcase "$TERM" in
X	network)			export TERM="$(readterm xterm)"	;;
X	unknown|dumb|su)	export TERM="$(readterm vt100)"	;;
Xesac
X
Xcase "$TERM" in
X	xterm)
X		if [ ! "$XCONSOLE" ] ; then
X			title	() { echo -e -n "\033]2;$*\007" ; }
X			label	() { echo -e -n "\033]1;$*\007" ; }
X			icon	() { echo -e -n "\033]I;$*\007" ; }
X			say		() { title $* ; }
X			.		() { title [-${HOSTNICK}- $(basename $TTY) $(dirs) ] ;
X						 label ${HOSTNICK}: $(basename $PWD) ; }
X		fi
X		if [ ! "$DISPLAY" ] ; then export DISPLAY=${HOSTNICK}:0 ; fi
X		echo -n $DISPLAY' '
X		;;
X	sun*)
X		if [ "$WINDOW_PARENT" ] ; then
X			title	() { echo -e -n "\033]l$*\033\\" ; }
X			label	() { echo -e -n "\033]L$*\033\\" ; }
X			icon	() { echo -e -n "\033]I$*\033\\" ; }
X			say		() { title $* ; }
X			.		() { title [-${HOSTNICK}- $(basename $TTY) `dirs` ] ; }
X		else
X			if [ "`tty`" != "/dev/console" ] ; then
X				export TERM="`readterm $TERM`"
X			fi
X		fi
X		;;
X	wy*)
X		title	() { echo -e "\033F$*\\r\\c" ; }
X		say		() { title "$*" ; }
X		.		() { title "$(logname) $(basename $TTY) $(dirs)" ; }
X		;;
X	emacs)
X		stty -echo -onlcr nl
X		say		() { echo $* ; }
X		.		() { dirs ; }
X		;;
X	*)			# default
X		say		() { echo $* ; }
X		.		() { dirs ; }
X		;;
Xesac
X
X#----eof
END_OF_FILE
  if test 1616 -ne `wc -c <'.elven/bash/interface'`; then
    echo shar: \"'.elven/bash/interface'\" unpacked with wrong size!
  fi
  # end of '.elven/bash/interface'
fi
if test -f '.elven/bash/session' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'.elven/bash/session'\"
else
  echo shar: Extracting \"'.elven/bash/session'\" \(771 characters\)
  sed "s/^X//" >'.elven/bash/session' <<'END_OF_FILE'
X#----------------------------------------------------------------------#
X#   File:    session
X#   Author:  Christoph. A. North-Keys   Tue May 14 01:46:43 EDT 1991
X#   Rev:     session setup, elfshell, bash version
X#----------------------------------------------------------------------#
Xmessage session' '
X
X# command_oriented_history=
Xallow_null_glob_expansion=
Xno_exit_on_failed_exec=
Xhistory_control=ignoredups
Xpushd_silent=
X#nolinks=
X
Xif jobs 2>/dev/null 1>/dev/null; then set -o notify; fi
X
Xfor ulimit in c d m s t f p n ; do
X   ulimit -S${ulimit} $(ulimit -H${ulimit} 2> /dev/null) 2> /dev/null
Xdone
X
Xif declare -f title >> /dev/null ; then
X	PS1='}-'${SHLVL}'.\!-\$ ' 
X	PS2='	'
Xelse
X	PS1='}-'${HOSTNICK}'(\W)-'${SHLVL}'.\!-\$ '
X	PS2='	'
Xfi
X
X#--------------------eof
END_OF_FILE
  if test 771 -ne `wc -c <'.elven/bash/session'`; then
    echo shar: \"'.elven/bash/session'\" unpacked with wrong size!
  fi
  # end of '.elven/bash/session'
fi
if test -f '.elven/bash/term.wy30' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'.elven/bash/term.wy30'\"
else
  echo shar: Extracting \"'.elven/bash/term.wy30'\" \(1145 characters\)
  sed "s/^X//" >'.elven/bash/term.wy30' <<'END_OF_FILE'
X#!/usr/local/bin/bash -f
X#	setup wyse 30
X
X#	wy30/enhance/shift-labels
Xwy30 () { export TERM=wy30 ; /bin/echo '\033\~"\033\~!\033zP\r\c' }
X#                     data   func's ttymsg sysmsg
Xshow () { /bin/echo '\033A00\033A1x\033A2x\033A3x\r\c' }
Xhide () { /bin/echo '\033A00\033A11\033A28\033A31\r\c' }
X
Xwy30
Xshow
X
X#     1  2  3  4  1c 2c 3c 4c 1s 2s 3s 4s 1sc2sc3sc4sc
X#     1  2  3  4  5  6  7  8  9  10 11 12 13 14 15 16
Xfuns='@  A  B  C  D  E  F  G  ` a  b  c  d  e  f  g'
Xlabs='0  1  2  3  4  5  6  7  P  Q  R  S  T  U  V  W'
Xfun () { echo "$funs" | awk '{print $'$1'}' }
Xlab () { echo "$labs" | awk '{print $'$1'}' }
X#	set a function key:  setfun <number> <label> <macro>
Xsetfun   () { /bin/echo "\033z$(fun $1)$3\r\0177\033z$(lab $1)$2\r\c" }
Xunsetfun () { /bin/echo "\033z$(fun $1)\r\0177\033z$(lab $1)\r\c" }
X
Xsetfun	1	'list   *'	'ls -FCs'
Xsetfun	9	'longlist'	'ls -Flas'
Xsetfun	2	're-vi'		'!vi'
Xsetfun	3	'make'		'make'
Xsetfun	4	'clear'		'clear'
Xsetfun	5	'who/w'		'who;w'
Xsetfun	6	'yow'		'yow'
X
Xtitle	() { /bin/echo  "\033F$*\r\c" }
Xsay		() { title "$*" }
X.		() { title "$(logname) $(tty | sed 's@/dev/@@g') $(pwd)" }
X
X#--------------eof
END_OF_FILE
  if test 1145 -ne `wc -c <'.elven/bash/term.wy30'`; then
    echo shar: \"'.elven/bash/term.wy30'\" unpacked with wrong size!
  fi
  # end of '.elven/bash/term.wy30'
fi
if test -f '.elven/bash/traps' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'.elven/bash/traps'\"
else
  echo shar: Extracting \"'.elven/bash/traps'\" \(830 characters\)
  sed "s/^X//" >'.elven/bash/traps' <<'END_OF_FILE'
X#----------------------------------------------------------------------#
X#	File:	traps
X#	Auth:	Christoph. Alex. North-Keys    Tue May 14 06:17:44 EDT 1991
X#	Desc:	traps for the bash version of the elven scripts
X#----------------------------------------------------------------------#
X
Xmessage traps' '
X
Xtrap '/bin/echo \*arf\*'							EXIT
Xtrap '/bin/echo \*oops\*'							SYS
X#	assume that if we can't suspend, it doesn't grok WINCH either
Xif jobs 2>/dev/null 1>/dev/null; then
X	trap '/bin/echo \*yawn\*'						CONT
X	trap '/bin/echo \*stretch\*'					WINCH
Xfi
Xtrap '/bin/echo \*ring\*'							ALRM
Xtrap '/bin/echo \*remote\* ; self broadcast ; /bin/echo \*local\*'	USR1
Xtrap '/bin/echo \*gong\*'							USR2
X# trap 'echo \*bing\*'								VTALRM
X# trap 'echo \*whamm\*'								CHLD
X# trap 'echo \*damn\*'								LOST
X
X#-------------eof
END_OF_FILE
  if test 830 -ne `wc -c <'.elven/bash/traps'`; then
    echo shar: \"'.elven/bash/traps'\" unpacked with wrong size!
  fi
  # end of '.elven/bash/traps'
fi
if test -f '.elven/broadcast' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'.elven/broadcast'\"
else
  echo shar: Extracting \"'.elven/broadcast'\" \(5 characters\)
  sed "s/^X//" >'.elven/broadcast' <<'END_OF_FILE'
Xself
END_OF_FILE
  if test 5 -ne `wc -c <'.elven/broadcast'`; then
    echo shar: \"'.elven/broadcast'\" unpacked with wrong size!
  fi
  # end of '.elven/broadcast'
fi
if test -f '.elven/controls' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'.elven/controls'\"
else
  echo shar: Extracting \"'.elven/controls'\" \(469 characters\)
  sed "s/^X//" >'.elven/controls' <<'END_OF_FILE'
X#!/bin/sh
X#   Christopher Alex. North-Keys, Group Talisman
X#   Tue Jul  6 05:15:38 CDT 1993
X#   Run the stty command for interactive sessions.
X
XPATH=/bin:/usr/bin
X
Xif [ -z "$DEBUG" -a \( emacs != "$TERM" \) ] ; then
X	stty \
X		erase	'^H'	\
X		kill	'^U'	\
X		intr	'^C'	\
X		quit	'^\\'	\
X		eof		'^D'	\
X		start	'^Q'	\
X		stop	'^S'	\
X		rprnt	'^R'	\
X		susp	'^Z'	\
X		brk 	'^B'	\
X		werase	'^W'	\
X		flush	'^O'	\
X		dsusp	'^Y'	\
X		lnext	'^V'	\
X	2> /dev/null
Xfi
X
Xexit 0
X
X#---------eof
END_OF_FILE
  if test 469 -ne `wc -c <'.elven/controls'`; then
    echo shar: \"'.elven/controls'\" unpacked with wrong size!
  fi
  chmod +x '.elven/controls'
  # end of '.elven/controls'
fi
if test -f '.elven/csh/Makefile' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'.elven/csh/Makefile'\"
else
  echo shar: Extracting \"'.elven/csh/Makefile'\" \(375 characters\)
  sed "s/^X//" >'.elven/csh/Makefile' <<'END_OF_FILE'
XELVEN	=	$(HOME)/.elven/csh
XSHELL	=	/bin/sh
XRM		=	rm -f
XLN		=	ln -s
XCP		=	cp
X
Xdefault::
X	@echo 'Welcome to the Elfshell'
X	@echo 'Christopher North-Keys, Talisman Group'
X	@echo ''
X	@echo 'This is the version for csh, the C Shell'
X	@echo 'Run "make install" to complete installation'
X	@echo ''
X
X$(HOME)/.cshrc : cshrc
X	-$(RM) $@
X	-$(CP) $? $@
X
Xinstall:: $(HOME)/.cshrc
X
Xhelp::
X
END_OF_FILE
  if test 375 -ne `wc -c <'.elven/csh/Makefile'`; then
    echo shar: \"'.elven/csh/Makefile'\" unpacked with wrong size!
  fi
  # end of '.elven/csh/Makefile'
fi
if test -f '.elven/csh/aliases' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'.elven/csh/aliases'\"
else
  echo shar: Extracting \"'.elven/csh/aliases'\" \(1605 characters\)
  sed "s/^X//" >'.elven/csh/aliases' <<'END_OF_FILE'
X#--------------------------------------------------------------------------#
X#       File:     ~/.elven/aliases
X#       Author:   Christoph. A. North-Keys (erlkonig@snowwhite)
X#       Rev:      25,0 Donnerstag.d.17.Mai.1990
X#       Note:     If it's not in here, seriously consider using a script.
X#--------------------------------------------------------------------------#
Xmessage 'aliases '
X
X(dirs) >&/dev/null 
Xif ($status) then
X	alias cwd	'pwd'
Xelse
X	alias cwd   'dirs'
Xendif
Xalias .		'cwd'
Xalias c     'cd \!* ; .'	# Don't alias this to "cd"---bad.
Xalias ..	'cd ..; .'
Xalias ...	'cd $cwd:h ; .'
Xalias /		'clear ; .'		# Root of screen (?)
Xalias j		'jobs -l'
Xalias p		'$PAGER'
Xalias h		'history -r | p'
Xalias f		'fg %\!:1'
Xalias y		'$EDITOR'		# "yank" (was "warp") for emacsclient and windows.
Xalias ]d	'pushd \!* ; .'
Xalias [d	'popd ; .'
X
X#	Be verra careful not t'hide the system rm --- should NOT be a script.
Xalias rm 'ls -Fsd \!*; echon "remove? "; if ("`head -1`" == "y") /bin/rm \!*'
X
X#	Name present directory and describe members --- now shell scripts.
Xif (! -e $path[1]/lf) then
X	alias l 	'(say listing files \!* ; /bin/ls -CFa	\!* ; .)'
X	alias li	'(say listing files \!* ; /bin/ls -Flags \!* ; .)'
X	alias lf	'say listing dir/file  \!* ; /bin/ls -Flgds \!* ; .'
X	alias lr	'say listing by time \!* ; /bin/ls -Flargst \!* ; .'
Xendif
X
X#	Miscellaneous
Xalias nox		'unsetenv DISPLAYMACH DISPLAY'
Xalias sun		'unsetenv DISPLAYMACH DISPLAY ; set term=sun'
Xalias abort		'echo Fastlogout ; set fastlogout ; logout'
Xalias xdsp		'setenv DISPLAY \!:1'
X
Xself aliases.local
X
X#----------End of file----------#
END_OF_FILE
  if test 1605 -ne `wc -c <'.elven/csh/aliases'`; then
    echo shar: \"'.elven/csh/aliases'\" unpacked with wrong size!
  fi
  # end of '.elven/csh/aliases'
fi
if test -f '.elven/csh/aliases.local' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'.elven/csh/aliases.local'\"
else
  echo shar: Extracting \"'.elven/csh/aliases.local'\" \(45 characters\)
  sed "s/^X//" >'.elven/csh/aliases.local' <<'END_OF_FILE'
X#	Elfshell local aliases.
X
X#-------------eof
END_OF_FILE
  if test 45 -ne `wc -c <'.elven/csh/aliases.local'`; then
    echo shar: \"'.elven/csh/aliases.local'\" unpacked with wrong size!
  fi
  # end of '.elven/csh/aliases.local'
fi
if test -f '.elven/csh/environ' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'.elven/csh/environ'\"
else
  echo shar: Extracting \"'.elven/csh/environ'\" \(745 characters\)
  sed "s/^X//" >'.elven/csh/environ' <<'END_OF_FILE'
X#----------------------------------------------------------------------#
X#	File:     ~/.elven/csh/environ
X#	Author:   Christoph.Alex.North-Keys
X#	Rev:      Wed Jan 13 08:02:51 GMT 1993
X#	Descrip:  Elvenshell shared environemnt
X#---------------------------------------------------do-not-edit-this---#
X
Xmessage env
X
Xsetenv ARCH "`$ELVEN/arch`"
Xset path = ( `$ELVEN/path` )
Xsetenv PATH "`$ELVEN/path :`"
Xif ($?prompt) then
X	set cdpath = ( `$ELVEN/pathcd` )
X	setenv CDPATH "`$ELVEN/pathcd :`"
Xendif
X
Xalias cmdenv  'setenv \!:1 `sh -c \!:2`'
Xalias defenv  'if ( ! $?\!:1) setenv \!:1 \!:2'
Xalias cleanup 'unalias missing cleanup'
X
Xself environ.base
Xif ($?prompt) then
X	self environ.sess
Xendif
X
Xcleanup
X
Xmessage ' '
X
X#----------End of file----------#
END_OF_FILE
  if test 745 -ne `wc -c <'.elven/csh/environ'`; then
    echo shar: \"'.elven/csh/environ'\" unpacked with wrong size!
  fi
  # end of '.elven/csh/environ'
fi
if test -f '.elven/csh/sunview' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'.elven/csh/sunview'\"
else
  echo shar: Extracting \"'.elven/csh/sunview'\" \(1457 characters\)
  sed "s/^X//" >'.elven/csh/sunview' <<'END_OF_FILE'
X#----------------------------------------------------------------------#
X#   File:  ~/.elven/sunview
X#   Auth:  Christopher Hudnall
X#----------------------------------------------------------------------#
Xalias open		'echon "${esc}[1t"'			#open
Xalias close		'echon "${esc}[2t"'			#close
Xalias mmove		'echon "${esc}[3t"'			#move interactively
Xalias move		'echon "${esc}[3;\!:1;\!:2t"'	#top, left coordinate
Xalias mstretch	'echon "${esc}[4t"'			#stretch interactively
Xalias stretch	'echon "${esc}[4;\!:1;\!:2t"'	#width, height
Xalias expose	'echon "${esc}[5t"'			#expose
Xalias hide		'echon "${esc}[6t"'			#Hide
Xalias refresh	'echon "${esc}[7t"'			#Redisplay
Xalias cstretch	'echon "${esc}[8;\!:1;\!:2t"'	#stretch to rows, cols in chars
Xalias ioreport	'echon "${esc}[11t"'			#rpt open / iconic with 1t / 2t
Xalias preport	'echon "${esc}[13t"'			#rpt position with "move" chars
Xalias spreport	'echon "${esc}[14t"'			#size in pixels as above
Xalias screport	'echon "${esc}[18t"'			#size in chars
Xalias Lreport	'echon "${esc}[20t"'			#icon label
Xalias lreport	'echon "${esc}[21t"'			#tool header
Xalias header	'echon "${esc}]l\!*${esc}\"'	#set header
Xalias iheader	'echon "${esc}]L\!*${esc}\"'	#set icon header
Xalias icon		'echon "${esc}]I\!*${esc}\"'	#set icon to file
X#	Not sure about these
Xalias opt_on	'echon "${esc}[>\!*;h"'		#turn opt on (opt 1 =pagemode)
Xalias opt_rpt	'echon "${esc}[>\!*;k"'		#report opt  
Xalias opt_off	'echon "${esc}[>\!*;l"'		#turn opt off
END_OF_FILE
  if test 1457 -ne `wc -c <'.elven/csh/sunview'`; then
    echo shar: \"'.elven/csh/sunview'\" unpacked with wrong size!
  fi
  # end of '.elven/csh/sunview'
fi
if test -f '.elven/environ.base' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'.elven/environ.base'\"
else
  echo shar: Extracting \"'.elven/environ.base'\" \(867 characters\)
  sed "s/^X//" >'.elven/environ.base' <<'END_OF_FILE'
X#----------------------------------------------------------------------#
X#	File:     ~/environ.base
X#	Author:   Christoph.Alex.North-Keys
X#	Rev:      Tue Aug  4 09:17:17 GMT 1992 - first operational vers.
X#	Descrip:  Elvenshell shared environment
X#
X#	Notes:    Environment for *all* shells, interactive or not.
X#----------------------------------------------------------------------#
X
Xmessage '/b'
X
Xumask 022
X
X#setenv TZ			'US/Central'
X#setenv LANG		'german_germany.ascii'
X#setenv LANG		'De_BRD'
X
Xsetenv GNUmakecore	"$HOME/pod/GNUmakecore"
Xsetenv ENVIRON		"$LOGNAME"
Xsetenv MAIL			'/usr/spool/mail/'"$LOGNAME"
X# on Suns
Xcmdenv TMPDIR		'if [ -f /vmunix ] ; then echo /tmp ; else echo /usr/tmp ;fi'
Xcmdenv HOSTNAME		'(hostname) 2>/dev/null || uname -n'
Xcmdenv HOSTNICK		'expr X$HOSTNAME : X\\\(\[A-Za-z0-9-\]\*\\\)\..\* \| $HOSTNAME'
X
X#----------End of file----------#
END_OF_FILE
  if test 867 -ne `wc -c <'.elven/environ.base'`; then
    echo shar: \"'.elven/environ.base'\" unpacked with wrong size!
  fi
  # end of '.elven/environ.base'
fi
if test -f '.elven/environ.sess' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'.elven/environ.sess'\"
else
  echo shar: Extracting \"'.elven/environ.sess'\" \(1059 characters\)
  sed "s/^X//" >'.elven/environ.sess' <<'END_OF_FILE'
X#----------------------------------------------------------------------#
X#	File:     ~/environ.sess
X#	Author:   Christoph.Alex.North-Keys
X#	Rev:      Tue Aug  4 09:17:17 GMT 1992 - first operational vers.
X#	Descrip:  Elvenshell shared environment
X#
X#	Notes:    Environment for *interactive* shells only
X#----------------------------------------------------------------------#
X
Xmessage '/s'
X
Xcmdenv MANPATH	'$ELVEN/pathman :'
X
Xdefenv EDITOR	'yank'
X
Xsetenv FCEDIT	'vi'
X# RNINIT 'echo -EDOTDIR=$HOME/var/news -ERNMACRO=$HOME/var/news/.rnmac -e -m=u -L'
Xsetenv NOTEDIR	$HOME/lib/notes
Xsetenv PHONE	$NOTEDIR/phone
Xsetenv ENSCRIPT	'-G -fTimes-Roman10'
Xsetenv PRINTER	'lp'
Xsetenv SEARCH	'-Fldg'
Xsetenv REMOTE	$HOME/etc/remote
Xsetenv PHONES	$HOME/etc/phones
X
Xcmdenv PAGER	'type less pg more cat | awk "/\// {print;exit}" | cut -d" " -f1'
X
Xsetenv MORE			'-c' 
Xsetenv LESS			'fnCh13iMx4'
Xsetenv LESSBINFMT	'*d %x'
X
Xsetenv SLS_LONGFMT	'%a %nabs (%N)\
X%c %t%p (%P) %u (%U) %g (%G) links:%l\
X%m i %i idev %d fdev %r %s bytes (%bk K)'
X
X$ELVEN/controls
X
X#-------------eof
X
X
END_OF_FILE
  if test 1059 -ne `wc -c <'.elven/environ.sess'`; then
    echo shar: \"'.elven/environ.sess'\" unpacked with wrong size!
  fi
  # end of '.elven/environ.sess'
fi
if test -f '.elven/es/Makefile' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'.elven/es/Makefile'\"
else
  echo shar: Extracting \"'.elven/es/Makefile'\" \(483 characters\)
  sed "s/^X//" >'.elven/es/Makefile' <<'END_OF_FILE'
XELVEN	=	$(HOME)/.elven/es
XSHELL	=	/bin/sh
XRM		=	rm -f
XLN		=	ln -s
XCP		=	cp
X
Xdefault::
X	@echo ''
X	@echo 'Welcome to the Elfshell'
X	@echo 'Christopher North-Keys, Talisman Group'
X	@echo ''
X	@echo 'This is the version for es, the Extensible Shell'
X	@echo 'Run "make install" to complete installation'
X	@echo ''
X
X$(HOME)/.esrc: esrc
X	-$(RM) $@
X	-$(LN) $(ELVEN)/$? $@
X
X$(HOME)/.esrc-main: main
X	-$(RM) $@
X	-$(LN) $(ELVEN)/$? $@
X		
Xinstall:: $(HOME)/.esrc $(HOME)/.esrc-main help 
X
Xhelp::
END_OF_FILE
  if test 483 -ne `wc -c <'.elven/es/Makefile'`; then
    echo shar: \"'.elven/es/Makefile'\" unpacked with wrong size!
  fi
  # end of '.elven/es/Makefile'
fi
if test -f '.elven/es/Notes' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'.elven/es/Notes'\"
else
  echo shar: Extracting \"'.elven/es/Notes'\" \(363 characters\)
  sed "s/^X//" >'.elven/es/Notes' <<'END_OF_FILE'
X
Xcopying function definitions:
X
X	fn-new = `` \n {whatis old}
X
X...where ``new'' is new functions name, and ``old'' is original.
X
X; fn-inp = `` \n {whatis %interactive-loop}
X; fn %interactive-loop { echo --in--\nINIT ; inp ; echo --out--\nBAIL ; sleep 10 ; }
X; %interactive-loop
X--in--
XINIT
X;              # C-d was hit here, using "exit" doesn't work
X--out--
XBAIL
END_OF_FILE
  if test 363 -ne `wc -c <'.elven/es/Notes'`; then
    echo shar: \"'.elven/es/Notes'\" unpacked with wrong size!
  fi
  # end of '.elven/es/Notes'
fi
if test -f '.elven/es/environ' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'.elven/es/environ'\"
else
  echo shar: Extracting \"'.elven/es/environ'\" \(670 characters\)
  sed "s/^X//" >'.elven/es/environ' <<'END_OF_FILE'
X#----------------------------------------------------------------------#
X#	File:     ~/.elven/es/environ
X#	Author:   Christoph.Alex.North-Keys
X#	Rev:      Thu Jul 22 05:36:05 CDT 1993
X#	Descrip:  Elvenshell shared environemnt
X#---------------------------------------------------do-not-edit-this---#
X
Xmessage env
X
XARCH=`{$ELVEN/arch}
XPATH=`{$ELVEN/path :}
XCDPATH=`{$ELVEN/pathcd :}
X
Xfn setenv var val { $var = $val }
Xfn cmdenv var val { $var = `{sh -c $val} }
Xfn defenv var val { if { ~ $$var } { $var = $val } }
Xfn cleanup { fn-setenv = () ; fn-defenv = () ; fn-cleanup = () }
X
Xself environ.base
Xself environ.sess
X
Xcleanup
Xmessage ' '
X
X#----------End of file----------#
END_OF_FILE
  if test 670 -ne `wc -c <'.elven/es/environ'`; then
    echo shar: \"'.elven/es/environ'\" unpacked with wrong size!
  fi
  # end of '.elven/es/environ'
fi
if test -f '.elven/es/esrc.UU' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'.elven/es/esrc.UU'\"
else
  echo shar: Extracting \"'.elven/es/esrc.UU'\" \(1029 characters\)
  sed "s/^X//" >'.elven/es/esrc.UU' <<'END_OF_FILE'
Xbegin 644 .elven/es/esrc
XM(RTM+2TM+2TM+2TM+2TM+2TM+2TM+2TM+2TM+2TM+2TM+2TM+2TM+2TM+2TM
XM+2TM+2TM+2TM+2TM+2TM+2TM+2TM+2TM+2TC"B,)1FEL93H)?B\N96QV96XO
XM97,O97-R8PHC"4%U=&@Z"4YO<G1H+4ME>7,@("!4:'4@2G5L(#(R(# T.C,Y
XM.C0T($-$5" Q.3DS"B,)1&5S8SH)96QV96X@<V-R:7!T<R!P<FEM87)Y(&9I
XM;&4L(&5S('9E<G-I;VX*(RTM+2TM+2TM+2TM+2TM+2TM+2TM+2TM+2TM+2TM
XM+2TM+2TM+2TM+2TM+2TM+2TM+2TM+2TM+2TM+2TM+2TM+2TM+2TM+2TC"@HC
XM"6%R<F%N9V4@9F]R('1H:7,@<')O8V5S<R!A;F0@86QL(&ET<R!C:&EL9')E
XM;B!T;R!R96%D(&UA:6X@:6YI="!F:6QE("AS964@;F5X="D*(PII9B![('1E
XM<W0@," G/2<@)"-F;BTE:6YT97)A8W1I=F4M;&]O<"UO<FEG('T*>PH)9FXM
XM)6EN=&5R86-T:79E+6QO;W M;W)I9R ](&!@(%QN('MW:&%T:7,@)6EN=&5R
XM86-T:79E+6QO;W!]"@EF;B E:6YT97)A8W1I=F4M;&]O<"!<"@E["@D);&5T
XM("AN97AT(#T@?B\N97-R8RUM86EN*0H)"7L*"0D):68@>R!T97-T("UR("1N
XM97AT('T@>R N("1N97AT('T*"0E]"@D))6EN=&5R86-T:79E+6QO;W M;W)I
XM9PH)?0H):68@>R!T='D@/B]D978O;G5L;" ^6S(],5T@?2!<"@D)>R!F;B E
XM:6YT97)A8W1I=F4M<"![('1R=64@?2!](%P*"0E[(&9N("5I;G1E<F%C=&EV
XM92UP('L@9F%L<V4@?2!]"GT*"B,M+2TM+2TM+2TM+2TM+2TM+2TM+2TM+2UE
X";V9P
X 
Xend
END_OF_FILE
  if test 1029 -ne `wc -c <'.elven/es/esrc.UU'`; then
    echo shar: \"'.elven/es/esrc.UU'\" unpacked with wrong size!
  else 
    echo shar: Uudecoding \"'.elven/es/esrc'\" \(722 characters\) 
    cat .elven/es/esrc.UU | uudecode 
    if test 722 -ne `wc -c <'.elven/es/esrc'`; then 
      echo shar: \"'.elven/es/esrc'\" uudecoded with wrong size! 
    else 
      rm .elven/es/esrc.UU 
    fi
  fi
  # end of '.elven/es/esrc.UU'
fi
if test -f '.elven/es/functions' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'.elven/es/functions'\"
else
  echo shar: Extracting \"'.elven/es/functions'\" \(753 characters\)
  sed "s/^X//" >'.elven/es/functions' <<'END_OF_FILE'
X#----------------------------------------------------------------------#
X#	File:	functions
X#	Auth:	Christoph. Alex. North-Keys   Thu Jul 22 07:07:26 CDT 1993
X#	Desc:	basic functions for the es version of the elven scripts
X#----------------------------------------------------------------------#
Xmessage functions' '
X
Xfn c args { if { ~ $#args 1 } { cd $args } { cd } ; . }
Xfn . args { if { ~ $#args 0 } { .pwd } { $&dot $args } }
Xfn .pwd   { pwd }
Xfn ..     { cd .. ; . }
Xfn p      { $PAGER $args }
Xfn y args { $EDITOR $args }
X
Xfn rm args \
X{
X	ls -FCsd $args
X	echon 'remove[ny]? '
X	let (reply = `{ head -1 } ) \
X	{
X		if { ~ $reply y } { /bin/rm -rf $args } { echo '(cancelled)' }
X	}
X}
X
Xself functions.loc
X#-------------------------------------------eof
END_OF_FILE
  if test 753 -ne `wc -c <'.elven/es/functions'`; then
    echo shar: \"'.elven/es/functions'\" unpacked with wrong size!
  fi
  # end of '.elven/es/functions'
fi
if test -f '.elven/es/functions.loc' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'.elven/es/functions.loc'\"
else
  echo shar: Extracting \"'.elven/es/functions.loc'\" \(471 characters\)
  sed "s/^X//" >'.elven/es/functions.loc' <<'END_OF_FILE'
X#----------------------------------------------------------------------#
X#	File:	functions.loc
X#	Auth:	Christoph. Alex. North-Keys    Sat Jul 24 04:14:00 CDT 1993
X#	Desc:	local functions for the es version of the elven scripts
X#----------------------------------------------------------------------#
X
Xfn which args { whatis $args }
X
X#	Displays
Xfn nox		  { DISPLAYMACH = () ; DISPLAY = () }
Xfn sun		  { nox ; TERM = sun }
Xfn xdsp	dsp   { DISPLAY=$dsp }
X
X#-------------eof
END_OF_FILE
  if test 471 -ne `wc -c <'.elven/es/functions.loc'`; then
    echo shar: \"'.elven/es/functions.loc'\" unpacked with wrong size!
  fi
  # end of '.elven/es/functions.loc'
fi
if test -f '.elven/es/interface' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'.elven/es/interface'\"
else
  echo shar: Extracting \"'.elven/es/interface'\" \(1649 characters\)
  sed "s/^X//" >'.elven/es/interface' <<'END_OF_FILE'
X#----------------------------------------------------------------------#
X#	File: 	interface
X#	Auth:	Christoph. Alex. North-Keys -- Sat Jul 24 04:16:42 CDT 1993
X#	Desc:	interface determination, elfshell, es version
X#----------------------------------------------------------------------#
Xmessage 'interface '
X
XTTY = `{tty}
X
Xfn readterm arg \
X{
X	echon 'TERM = ('$arg') ' >[1=2]
X	let (line = `{ head -1 } ) \
X	{
X		if { ! ~ $line } { echo $line } { echo $arg }
X	}
X}
X
Xif { ~ $TERM network         } { TERM = `{ readterm xterm } }
Xif { ~ $TERM unknown dumb su } { TERM = `{ readterm vt100 } }
X
Xif \
X{ ~ $TERM xterm } \
X	{
X		if { ~ $XCONSOLE } \
X		{
X			fn title s { echon \033]2\;$^s\007 }
X			fn label s { echon \033]1\;$^s\007 }
X			fn icon  s { echon \033]I\;$^s\007 }
X			fn say	 s { title $^s }
X			fn .pwd	   { title '[-'$HOSTNICK'-' `{basename $TTY} `{pwd} ']'
X						 label $HOSTNICK':' `{basename `{pwd}} }
X		}
X		if { ! ~ $DISPLAY } { DISPLAY = $HOSTNICK':0' }
X		echon $DISPLAY' '
X	} \
X{ ~ $TERM sun } \
X	{
X		if { ~ $WINDOW_PARENT } \
X		{
X			fn title s { echon \033']l'$^s\033\\ }
X			fn label s { echon \033']L'$^s\033\\ }
X			fn icon  s { echon \033']I'$^s\033\\ }
X			fn say   s { title $^s }
X			fn .pwd    { title '[-'$HOSTNICK'-' `{basename $TTY} `{pwd} ']' }
X		} \ {
X			if { ! ~ `{tty} /dev/console } { TERM = `{readterm $TERM} }
X		}
X	} \
X{ ~ $TERM wy } \
X	{
X		fn title s { echo \033'F'$^s\\r\\c }
X		fn say   s { title $^s }
X		fn .pwd    { title `{logname} `{basename $TTY} `{pwd} }
X	} \
X{ ~ $TERM emacs } \
X	{
X		stty -echo -onlcr nl
X		fn say s { echo $^s }
X		fn .pwd  { pwd }
X	} \
X{	# DEFAULT
X		fn say s { echo $^s }
X		fn .pwd  { pwd }
X}
X
X#----eof
END_OF_FILE
  if test 1649 -ne `wc -c <'.elven/es/interface'`; then
    echo shar: \"'.elven/es/interface'\" unpacked with wrong size!
  fi
  # end of '.elven/es/interface'
fi
if test -f '.elven/es/session' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'.elven/es/session'\"
else
  echo shar: Extracting \"'.elven/es/session'\" \(439 characters\)
  sed "s/^X//" >'.elven/es/session' <<'END_OF_FILE'
X#----------------------------------------------------------------------#
X#   File:    session
X#   Author:  Christoph. A. North-Keys   Sat Jul 24 04:55:12 CDT 1993
X#   Rev:     session setup, elfshell, es version
X#----------------------------------------------------------------------#
Xmessage session' '
X
Xif { whatis title >/dev/null >[2=1] } \
X	{ PS1='}-'$SHLVL'-; ' } \
X	{ PS1='}-'$HOSTNICK'(?)-'$SHLVL'-\; ' }
X
X#--------------------eof
END_OF_FILE
  if test 439 -ne `wc -c <'.elven/es/session'`; then
    echo shar: \"'.elven/es/session'\" unpacked with wrong size!
  fi
  # end of '.elven/es/session'
fi
if test -f '.elven/path' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'.elven/path'\"
else
  echo shar: Extracting \"'.elven/path'\" \(887 characters\)
  sed "s/^X//" >'.elven/path' <<'END_OF_FILE'
X#!/bin/sh
X#   Christopher Alex. North-Keys, Group Talisman
X#   Tue Jul  6 05:14:47 CDT 1993
X#   return a valid command search path, separated with arg-1, default <space>
X
XPATH=/bin:/usr/bin
Xif [ $# -eq 1 ] ; then separator=$1 ; else separator=' ' ; fi
Xif [ -z "$ARCH" ] ; then ARCH=unknown ; export ARCH ; fi
X
Xnpath=
Xfor dir in \
X	$HOME/bin \
X	$HOME/bin/script \
X	$HOME/bin/NeWS \
X	$HOME/bin/$ARCH \
X	/usr/5bin \
X	/usr/bin \
X	/usr/ucb \
X	/bin \
X	/etc \
X	/usr/etc \
X	/usr/etc/yp \
X	/usr/X11/bin \
X	/usr/X11 \
X	/usr/local/mh \
X	/usr/local/bin \
X	/usr/local/gnu/bin \
X	/usr/local/gnubin \
X	/usr/local/X11R5/bin \
X	/usr/local/X11R5 \
X	/usr/lbin \
X	/usr/openwin/bin \
X	/usr/games \
X	/usr/local/games \
X	/usr/demo/SOUND \
X	.
Xdo
X	if [ -d "$dir" ] ; then
X		if [ -z "$npath" ] ; then
X			npath="${dir}"
X		else
X			npath="${npath}${separator}${dir}"
X		fi
X	fi
Xdone
X
Xecho $npath
X
Xexit 0
X#---------eof
END_OF_FILE
  if test 887 -ne `wc -c <'.elven/path'`; then
    echo shar: \"'.elven/path'\" unpacked with wrong size!
  fi
  chmod +x '.elven/path'
  # end of '.elven/path'
fi
if test -f '.elven/pathcd' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'.elven/pathcd'\"
else
  echo shar: Extracting \"'.elven/pathcd'\" \(528 characters\)
  sed "s/^X//" >'.elven/pathcd' <<'END_OF_FILE'
X#!/bin/sh
X#	Christopher Alex. North-Keys, Group Talisman
X#	Tue Jul  6 05:15:17 CDT 1993
X#   return a valid directory search path, separated with arg-1, default <space>
X
XPATH=/bin:/usr/bin
Xif [ $# -eq 1 ] ; then separator=$1 ; else separator=' ' ; fi
Xif [ -z "$ARCH" ] ; then ARCH=unknown ; export ARCH ; fi
X
Xnpath=
Xfor dir in \
X	. \
X	$HOME \
X	$HOME/??? \
X	$ELVEN
Xdo
X	if [ -d $dir ]; then
X		if [ -z "$npath" ] ; then
X			npath="${dir}"
X		else
X			npath="${npath}${separator}${dir}"
X		fi
X	fi
Xdone
X
Xecho $npath
X
Xexit 0
X#---------eof
END_OF_FILE
  if test 528 -ne `wc -c <'.elven/pathcd'`; then
    echo shar: \"'.elven/pathcd'\" unpacked with wrong size!
  fi
  chmod +x '.elven/pathcd'
  # end of '.elven/pathcd'
fi
if test -f '.elven/pathman' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'.elven/pathman'\"
else
  echo shar: Extracting \"'.elven/pathman'\" \(574 characters\)
  sed "s/^X//" >'.elven/pathman' <<'END_OF_FILE'
X#!/bin/sh
X#   Christopher Alex. North-Keys, Group Talisman
X#   Tue Jul  6 05:15:38 CDT 1993
X#   return a valid manual search path, separated with arg-1, default <space>
X
XPATH=/bin:/usr/bin
Xif [ $# -eq 1 ] ; then separator=$1 ; else separator=' ' ; fi
X
Xnpath=
Xfor dir in \
X	$HOME/man \
X	/usr/local/man \
X	/usr/local/X11R5/man \
X	/usr/openwin/share/man \
X	/usr/man \
X	/usr/local/mh/man \
X	/usr/local/gnu/man
Xdo
X	if [ -d "$dir" ] ; then
X		if [ -z "$npath" ] ; then
X			npath="${dir}"
X		else
X			npath="${npath}${separator}${dir}"
X		fi
X	fi
Xdone
X
Xecho $npath
X
Xexit 0
X#---------eof
END_OF_FILE
  if test 574 -ne `wc -c <'.elven/pathman'`; then
    echo shar: \"'.elven/pathman'\" unpacked with wrong size!
  fi
  chmod +x '.elven/pathman'
  # end of '.elven/pathman'
fi
if test -f '.elven/sh/Makefile' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'.elven/sh/Makefile'\"
else
  echo shar: Extracting \"'.elven/sh/Makefile'\" \(349 characters\)
  sed "s/^X//" >'.elven/sh/Makefile' <<'END_OF_FILE'
XELVEN	=	$(HOME)/.elven/sh
X
Xdefault::
X	@echo ''
X	@echo 'Welcome to the Elfshell'
X	@echo 'Christopher North-Keys, Talisman Group'
X	@echo ''
X	@echo 'This is the version for sh, the Bourne Shell'
X	@echo 'Run "make install" to complete installation'
X	@echo ''
X
X$(HOME)/.profile: profile
X	-$(RM) $@
X	-$(CP) $? $@
X
Xinstall:: $(HOME)/.profile help 
X
Xhelp::
END_OF_FILE
  if test 349 -ne `wc -c <'.elven/sh/Makefile'`; then
    echo shar: \"'.elven/sh/Makefile'\" unpacked with wrong size!
  fi
  # end of '.elven/sh/Makefile'
fi
if test -f '.elven/sh/environ' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'.elven/sh/environ'\"
else
  echo shar: Extracting \"'.elven/sh/environ'\" \(784 characters\)
  sed "s/^X//" >'.elven/sh/environ' <<'END_OF_FILE'
X#----------------------------------------------------------------------#
X#	File:     ~/.elven/sh/environ
X#	Author:   Christoph.Alex.North-Keys
X#	Rev:      Wed Jan 13 08:02:51 GMT 1993
X#	Descrip:  Elvenshell shared environemnt
X#---------------------------------------------------do-not-edit-this---#
X
Xmessage env
X
XARCH="`$ELVEN/arch`"		; export ARCH
XPATH="`$ELVEN/path :`"		; export PATH
Xif [ -n "$PS1" ]; then
X	CDPATH="`$ELVEN/pathcd :`"	; export CDPATH
Xfi
X
Xsetenv  () { eval $1=\""$2"\" ; export $1 ; }
Xcmdenv  () { eval $1="`sh -c "$2"`" ; export $1 ; }
Xdefenv  () { test -z "`eval echo \\$$1`" && setenv $1 "$2" ; }
Xcleanup () { unset setenv defenv cleanup ; }
X
Xself environ.base
Xif [ -n "$PS1" ]; then
X	self environ.sess
Xfi
X
Xcleanup
Xmessage ' '
X
X#----------End of file----------#
END_OF_FILE
  if test 784 -ne `wc -c <'.elven/sh/environ'`; then
    echo shar: \"'.elven/sh/environ'\" unpacked with wrong size!
  fi
  # end of '.elven/sh/environ'
fi
if test -f '.elven/sh/functions' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'.elven/sh/functions'\"
else
  echo shar: Extracting \"'.elven/sh/functions'\" \(997 characters\)
  sed "s/^X//" >'.elven/sh/functions' <<'END_OF_FILE'
X#----------------------------------------------------------------------#
X#	File:	functions
X#	Auth:	Christoph. Alex. North-Keys    Sun Apr 28 23:22:27 EDT 1991
X#	Desc:	basic functions for the bash version of the elven scripts
X#----------------------------------------------------------------------#
Xmessage functions' '
X
Xc   () { if [ $# -ge 1 ]; then cd "$*"; else cd; fi ; dot ; }
Xp   () { $PAGER $* ; }
X
Xrm	()
X{
X	ls -FCsd $*
X	echo -n 'remove[ny]? ' ; read reply
X	if [ "$reply" = "y" ] ; then /bin/rm -rf $* ; fi
X	unset reply
X}
X
Xif type y | grep -s / 1>/dev/null ; then
X	y   () { $EDITOR $* ; }
Xfi
X
Xif type li | grep -s / 1>/dev/null ; then
X	l   () { ls -FCa $* ; }
X	if [ `ls -ldg | wc -w` -gt `ls -ld | wc -w` ]; then
X		#	BSD
X		li  () { ls -Flgas   $* ; }
X		lf  () { ls -Flgsd   $* ; }
X		lr  () { ls -Flgasrt $* ; }
X	else
X		#	USG
X		li  () { ls -Flas    $* ; }
X		lf  () { ls -Flsd    $* ; }
X		lr  () { ls -Flasrt  $* ; }
X	fi
Xfi
X
Xself functions.loc
X#-------------------------------------------eof
END_OF_FILE
  if test 997 -ne `wc -c <'.elven/sh/functions'`; then
    echo shar: \"'.elven/sh/functions'\" unpacked with wrong size!
  fi
  # end of '.elven/sh/functions'
fi
if test -f '.elven/sh/functions.loc' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'.elven/sh/functions.loc'\"
else
  echo shar: Extracting \"'.elven/sh/functions.loc'\" \(930 characters\)
  sed "s/^X//" >'.elven/sh/functions.loc' <<'END_OF_FILE'
X#----------------------------------------------------------------------#
X#	File:	functions.loc
X#	Auth:	Christoph. Alex. North-Keys    Tue May 14 06:17:44 EDT 1991
X#	Desc:	local functions for the bash version of the elven scripts
X#----------------------------------------------------------------------#
X
Xwhich () { type $* ; }
X
X#	Displays
Xnox		() { unset DISPLAYMACH DISPLAY ; }
Xsun		() { unset DISPLAYMACH DISPLAY ; export TERM=sun ; }
Xxdsp	() { export DISPLAY=$1 ; }
X
X#	Dump origin of user's connection on this tty to stdout
Xwaddr	()
X{
X	who am i | sed 's/.*(\(.*\))/\1/;s/:.*//'
X}
X
X#	Set probable X display of user, result to stdout
Xrxdsp	()
X{
X	xdsp `waddr`:0
X	echo $DISPLAY
X}
X
X#	Set probable X display and take one argument as fodder for xauth
Xrxauth	()
X{
X	if [ $# -ne 1 ] ; then
X		echo $0: '(rxauth)' missing Xauthority authentication string
X		return 1
X	fi
X	rxdsp
X	xauth add $DISPLAY MIT-MAGIC-COOKIE-1 $1
X}
X
X#-------------eof
END_OF_FILE
  if test 930 -ne `wc -c <'.elven/sh/functions.loc'`; then
    echo shar: \"'.elven/sh/functions.loc'\" unpacked with wrong size!
  fi
  # end of '.elven/sh/functions.loc'
fi
if test -f '.elven/sh/profile' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'.elven/sh/profile'\"
else
  echo shar: Extracting \"'.elven/sh/profile'\" \(1402 characters\)
  sed "s/^X//" >'.elven/sh/profile' <<'END_OF_FILE'
X#----------------------------------------------------------------------#
X#	File:	~/.profile
X#	Auth:	North-Keys   Sun Apr 28 23:24:27 EDT 1991
X#	Desc:	elven scripts primary file, sh version
X#----------------------------------------------------------------------#
Xif [ "X`echo -n`" = "X-n" ]
X	then echon () { echo "$*"'\c'; }
X	else echon () { echo -n "$*"; }
Xfi
Xif [ -n "$PS1" ]; then message () { echon "$*"; }; else message () { :; } ; fi
Xmessage lvn/bash/3' '
X
Xif [ ! "$LOGNAME" ] ; then
X	if type logname;
X		then export LOGNAME="`logname`"
X		else echon 'Who are we?: ' ; read LOGNAME ; export LOGNAME
X	fi
Xfi
Xif [ ! "$HOME" ]; then HOME=`echo "echo ~$LOGNAME" | csh -ft`; export HOME; fi
X
XSHLVL=`expr ${SHLVL:=-1} + 1` ; export SHLVL
X
XELVEN_PREV=$ELVEN ; ELVEN=$HOME/.elven ; export ELVEN
X
Xself ()
X{
X	if [ "X$1" = "X-" ] ; then ENVIRON= ; shift ; fi
X	if [ $# -eq 0 ] ; then files=profile ; else files="$*" ; fi
X	for f in $files ; do
X		if [ -r $ELVEN/$f ]; then
X			. $ELVEN/$f ;
X		else
X			if [ -r $ELVEN/sh/$f ] ; then
X				. $ELVEN/sh/$f ;
X			fi
X		fi
X	done
X	unset f
X}
X
Xif [ \( "$LOGNAME" != "$ENVIRON" \) -o \( "$ELVEN_PREV" != "$ELVEN" \) ] ; then
X	self environ
Xfi
X
Xunset ELVEN_PREV
X
Xif [ "$PS1" ] ; then
X	self	traps		# set signal traps
X	self	functions	# get functions	and aliases
X	self	interface	# set interface
X	self	session		# get per session settings
X	echo '.'
Xfi
X#----------End of file----------#
END_OF_FILE
  if test 1402 -ne `wc -c <'.elven/sh/profile'`; then
    echo shar: \"'.elven/sh/profile'\" unpacked with wrong size!
  fi
  # end of '.elven/sh/profile'
fi
if test -f '.elven/sh/session' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'.elven/sh/session'\"
else
  echo shar: Extracting \"'.elven/sh/session'\" \(480 characters\)
  sed "s/^X//" >'.elven/sh/session' <<'END_OF_FILE'
X#----------------------------------------------------------------------#
X#   File:    session
X#   Author:  Christoph. A. North-Keys   Tue May 14 01:46:43 EDT 1991
X#   Rev:     session setup, elfshell, bash version
X#----------------------------------------------------------------------#
Xmessage session' '
X
Xif set | grep -s '^title(){' >> /dev/null ; then
X	PS1='}-'${SHLVL}'-$ ' 
X	PS2='	'
Xelse
X	PS1='}-'${HOSTNICK}'-'${SHLVL}'-$ '
X	PS2='	'
Xfi
Xunset _tag
X
X#--------------------eof
END_OF_FILE
  if test 480 -ne `wc -c <'.elven/sh/session'`; then
    echo shar: \"'.elven/sh/session'\" unpacked with wrong size!
  fi
  # end of '.elven/sh/session'
fi
if test -f '.elven/sh/traps' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'.elven/sh/traps'\"
else
  echo shar: Extracting \"'.elven/sh/traps'\" \(674 characters\)
  sed "s/^X//" >'.elven/sh/traps' <<'END_OF_FILE'
X#----------------------------------------------------------------------#
X#	File:	traps
X#	Auth:	Christoph. Alex. North-Keys    Tue May 14 06:17:44 EDT 1991
X#	Desc:	traps for the bash version of the elven scripts
X#----------------------------------------------------------------------#
X
Xmessage traps' '
X
Xtrap '/bin/echo \*arf\*'		0	#	EXIT
Xtrap '/bin/echo \*oops\*'		12	#	SYS
Xtrap '/bin/echo \*yawn\*'		19	#	CONT
Xtrap '/bin/echo \*ring\*'		14	#	ALRM
X# trap '/bin/echo \*stretch\*'	28	#	WINCH
X# trap '/bin/echo \*bong\*'		30	#	USR1
X# trap '/bin/echo \*gong\*'		31	#	USR2
X# trap 'echo \*bing\*'	VTALRM
X# trap 'echo \*whamm\*'	CHLD
X# trap 'echo \*damn\*'	LOST
X
X#-------------eof
END_OF_FILE
  if test 674 -ne `wc -c <'.elven/sh/traps'`; then
    echo shar: \"'.elven/sh/traps'\" unpacked with wrong size!
  fi
  # end of '.elven/sh/traps'
fi
if test -f '.elven/wy30.UU' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'.elven/wy30.UU'\"
else
  echo shar: Extracting \"'.elven/wy30.UU'\" \(1686 characters\)
  sed "s/^X//" >'.elven/wy30.UU' <<'END_OF_FILE'
Xbegin 644 .elven/wy30
XM(R$O8FEN+V-S:" M9F(*(PES971U<"!W>7-E(#,P"@IS970@13TG&R<*(PEW
XM>3,P+V5N:&%N8V4O<VAI9G0M;&%B96QS"F%L:6%S('=Y,S @)W-E=&5N=B!4
XM15)-('=Y,S @.R O8FEN+V5C:&\@)'M%?5Q^7%PB)'M%?5Q^7%PA)'M%?7I0
XM7%QR7%QC)PHC(" @(" @(" @(" @(" @(" @(" @9&%T82 @(&9U;F,G<R!T
XM='EM<V<@<WES;7-G"F%L:6%S('-H;W<@)R]B:6XO96-H;R D>T5]03 P)'M%
XM?4$Q>"1[17U!,G@D>T5]03-X7%QR7%QC)PIA;&EA<R!H:61E("<O8FEN+V5C
XM:&\@)'M%?4$P,"1[17U!,3$D>T5]03(X)'M%?4$S,5Q<<EQ<8R<*(PIW>3,P
XM"G-H;W<*:68@*"$@)#]L;V=O=71H;V]K<RD@<V5T(&QO9V]U=&AO;VMS(#T@
XM*"D*<V5T(&QO9V]U=&AO;VMS(#T@*" D;&]G;W5T:&]O:W,@:&ED92 I"@HC
XM(" @(" @(" @(" @,2 @,B @,R @-" @,6,@,F,@,V,@-&,@,7,@,G,@,W,@
XM-',@,7-C,G-C,W-C-'-C"B,@(" @(" @(" @(" Q(" R(" S(" T(" U(" V
XM(" W(" X(" Y(" Q," Q,2 Q,B Q,R Q-" Q-2 Q-@IS970@9G5N<R ]("@@
XM0" @02 @0B @0R @1" @12 @1B @1R @7& @82 @8B @8R @9" @92 @9B @
XM9R I"G-E="!L86)S(#T@*" P(" Q(" R(" S(" T(" U(" V(" W("!0("!1
XM("!2("!3("!4("!5("!6("!7("D*(PES970@82!F=6YC=&EO;B!K97DZ("!S
XM971F=6X@/&YU;6)E<CX@/&QA8F5L/B \;6%C<F\^"F%L:6%S('-E=&9U;B!<
XM"@DG+V)I;B]E8VAO("1[17UZ)'MF=6YS6UPA.C%=?5PA.C-<7')<7# Q-S<D
XM>T5]>B1[;&%B<UM<(3HQ77U<(3HR7%QR7%QC)PIA;&EA<R!U;G-E=&9U;B G
XM+V)I;B]E8VAO("1[17UZ)'MF=6YS6UPA.C%=?5Q<<EQ<,#$W-R1[17UZ)'ML
XM86)S6UPA.C%=?5Q<<EQ<8R<*"G-E=&9U;@DQ"2=L:7-T(" @*B<))VQS("U&
XM0W,G"G-E=&9U;@DY"2=L;VYG;&ES="<))VQS("U&;&%S)PIS971F=6X),@DG
XM<F4M=FDG"0DG7"%V:2<*<V5T9G5N"3,))VUA:V4G"0DG;6%K92<*<V5T9G5N
XM"30))V-L96%R)PD))V-L96%R)PIS971F=6X)-0DG=VAO+W<G"0DG=VAO.W<G
XM"G-E=&9U;@DV"2=Y;W<G"0DG>6]W)PH*<V5T(&)A;FYE<B ](")@;&]G;F%M
XM92 [('1T>2!\('-E9" G<T O9&5V+T! 9R=@(@IA;&EA<R!S87D@)R]B:6XO
XM96-H;R D>T5]1EPA*EQ<<EQ<8R<*86QI87,@8R G8V0@7"$J(#L@<V%Y("1B
XA86YN97(@8'!W9& G"@HC+2TM+2TM+2TM+2TM+2UE;V8*
X 
Xend
END_OF_FILE
  if test 1686 -ne `wc -c <'.elven/wy30.UU'`; then
    echo shar: \"'.elven/wy30.UU'\" unpacked with wrong size!
  else 
    echo shar: Uudecoding \"'.elven/wy30'\" \(1203 characters\) 
    cat .elven/wy30.UU | uudecode 
    if test 1203 -ne `wc -c <'.elven/wy30'`; then 
      echo shar: \"'.elven/wy30'\" uudecoded with wrong size! 
    else 
      rm .elven/wy30.UU 
    fi
  fi
  # end of '.elven/wy30.UU'
fi
echo shar: End of archive 2 \(of 2\).
cp /dev/null ark2isdone
MISSING=""
for I in 1 2 ; do
    if test ! -f ark${I}isdone ; then
	MISSING="${MISSING} ${I}"
    fi
done
if test "${MISSING}" = "" ; then
    echo You have unpacked both archives.
    rm -f ark[1-9]isdone
else
    echo You still must unpack the following archives:
    echo "        " ${MISSING}
fi
exit 0
exit 0 # Just in case...
