Newsgroups: comp.sources.misc
From: julian@vscn08.cern.ch (Julian James Bunn)
Subject:  v31i065:  flow - Fortran Structure Analysers, Part02/05
Message-ID: <1992Jul31.052602.175@sparky.imd.sterling.com>
X-Md4-Signature: f402b866eb64608eb55ebd4925060737
Date: Fri, 31 Jul 1992 05:26:02 GMT
Approved: kent@sparky.imd.sterling.com

Submitted-by: julian@vscn08.cern.ch (Julian James Bunn)
Posting-number: Volume 31, Issue 65
Archive-name: flow/part02
Environment: fortran, ffccc

#! /bin/sh
# This is a shell archive.  Remove anything before this line, then feed it
# into a shell via "sh file" or similar.  To overwrite existing files,
# type "sh file -c".
# The tool that generated this appeared in the comp.sources.unix newsgroup;
# send mail to comp-sources-unix@uunet.uu.net if you want that tool.
# Contents:  floppy.ps.b
# Wrapped by kent@sparky on Thu Jul 30 23:38:13 1992
PATH=/bin:/usr/bin:/usr/ucb ; export PATH
echo If this archive is complete, you will see the following message:
echo '          "shar: End of archive 2 (of 5)."'
if test -f 'floppy.ps.b' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'floppy.ps.b'\"
else
  echo shar: Extracting \"'floppy.ps.b'\" \(53912 characters\)
  sed "s/^X//" >'floppy.ps.b' <<'END_OF_FILE'
X 6 @bw ( FLOPPY on Unix) @ws 64.8 384 @m 10 @f11 @bw40 (Floppy) @ws  5 @bw ( op)
X @ws @bw40 (erates on a single input file of Fortran code.) @ws 64.8 360 @m
X 8 @f11 36 @bw ( ) @ws 8 @f12 @bw40 (floppy) @ws  4 @bw ( [\261l] [\261c rules])
X @ws @bw40 ( [\261f] [\261o old] [\261i names] [\261j number] [\261F] [\261G])
X @ws 64.8 348 @m 8 @f11 64 @bw ( ) @ws 8 @f12 @bw40 ([\261r) @ws  4 @bw ( start)
X @ws @bw40 (,step] [\261s start,step] [\261n new] [\261t flow] [file]) @ws
X 64.8 324 @m 10 @f11 @bw40 (The) @ws  5 @bw ( meaning of each Unix qualifier is)
X @ws @bw40 ( given in the list below.) @ws 64.8 300 @m 10 @f111 @bw40 (\247) @ws
X 10 @f11 21.27 @bw ( ) @ws 12 @f11 @bw40 (\261l) @ws 64.8 276 @m 10 @f11
X 28.8 @bw ( The) @ws  5 @bw ( logging option causes Floppy to produce a verbose)
X @ws @bw40 ( description of the selected options.) @ws 64.8 264 @m 10 @f111
X @bw40 (\247) @ws 10 @f11 21.27 @bw ( ) @ws 12 @f11 @bw40 (\261c) @ws
X 64.8 240 @m 10 @f11 28.8 @bw ( Defines) @ws  5.31 @bw ( the set of Coding Conv)
X @ws @bw40 (entions to be checked. Specifying \261cstandard causes the Standard)
X @ws 64.8 228 @m 28.8 @bw ( set) @ws  5.124 @bw ( of checks to be made \(see Se)
X @ws @bw40 (ction 2.2\). Specifying \261cn causes no checks to be) @ws
X 5.125 @bw ( made \(useful) @ws 64.8 216 @m 28.8 @bw ( for) @ws  5.788 @bw ( wh)
X @ws @bw40 (en code tidying options only are used\). Specifying \261ca causes a)
X @ws @bw40 (ll available checks to be) @ws 64.8 204 @m 28.8 @bw ( made.) @ws
X 6.597 @bw ( Otherwise, a) @ws  6.598 @bw ( list of comma\261separated numbers )
X @ws @bw40 (may be given. The number 99 has the) @ws 64.8 192 @m 28.8 @bw ( spe)
X @ws @bw40 (cial) @ws  5.476 @bw ( meaning: all) @ws  5.477 @bw ( rules, the nu)
X @ws @bw40 (mber \26199 means: no rules.) @ws  10.477 @bw ( So) @ws
X 5.477 @bw ( to check all rules except 1,3,5) @ws 64.8 180 @m 28.8 @bw ( and)
X @ws  5 @bw ( 31, use the qualifier \261c99,\2611,\2613,\2615,\26131.) @ws
X 64.8 168 @m 10 @f111 @bw40 (\247) @ws 10 @f11 21.27 @bw ( ) @ws 12 @f11
X @bw40 (\261f) @ws 64.8 144 @m 10 @f11 28.8 @bw ( The) @ws  5.25 @bw ( full qua)
X @ws @bw40 (lifier specifies that all source) @ws  5.251 @bw ( code lines shoul)
X @ws @bw40 (d be listed by Floppy, rather than just) @ws 64.8 132 @m
X 28.8 @bw ( those) @ws  5 @bw ( in breach of any of the specified coding conven)
X @ws @bw40 (tions.) @ws 64.8 120 @m 10 @f111 @bw40 (\247) @ws 10 @f11
X 21.27 @bw ( ) @ws 12 @f11 @bw40 (\261o) @ws 64.8 96 @m 10 @f11 28.8 @bw ( Use)
X @ws  5.918 @bw ( a previously generated file of rule numbers, ignore names, et)
X @ws @bw40 (c..) @ws  10.918 @bw ( The) @ws  5.918 @bw ( tag value should be)
X @ws 64.8 84 @m 28.8 @bw ( set) @ws  6.409 @bw ( to the name of the "old" file,)
X @ws @bw40 ( normally the previous) @ws  6.41 @bw ( source Fortran name, append)
X @ws @bw40 (ed with) @ws 64.8 72 @m 28.8 @bw ( ".old".) @ws 64.8 60 @m 10 @f111
X @bw40 (\247) @ws 10 @f11 21.27 @bw ( ) @ws 12 @f11 @bw40 (\261i) @ws 64.8 36 @m
X 10 @f11 28.8 @bw ( Specify) @ws  6.38 @bw ( a list of variable or module names)
X @ws @bw40 ( that are to be ignored by Floppy when checking) @ws 64.8 24 @m
X 28.8 @bw ( coding) @ws  6.423 @bw ( conventions. The names should be specified)
X @ws @bw40 ( as a) @ws  6.424 @bw ( comma\261separated list. Module names) @ws
X showpage pageobj restore
X %%Page: ? 10      
X
X /pageobj save def() pop
X 64.8 744 @m 10 @f11 @bw40 (FLOPPY) @ws  5 @bw ( and FLOW User Guide) @ws
X 281.4 @bw ( page) @ws  5 @bw ( 8) @ws 64.8 732 @m 10 @f111 @bw40 (\276\276\276)
X @ws @bw40 (\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276)
X @ws @bw40 (\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276)
X @ws @bw40 (\276\276\276\276\276\276\276\276\276\276) @ws 10 @f11 3.6 @bw ( )
X @ws 64.8 696 @m 28.8 @bw ( should) @ws  5.192 @bw ( be preceded by a "#"sign. )
X @ws @bw40 (All names should) @ws  5.193 @bw ( be in upper case. Thus, to ignor)
X @ws @bw40 (e subroutine) @ws 64.8 684 @m 28.8 @bw ( GOOBAR,) @ws  5 @bw ( and )
X @ws @bw40 (all variables called FOOBAR, specify \261i#GOOBAR,FOOBAR.) @ws
X 64.8 672 @m 10 @f111 @bw40 (\247) @ws 10 @f11 21.27 @bw ( ) @ws 12 @f11
X @bw40 (\261j) @ws 64.8 648 @m 10 @f11 28.8 @bw ( The) @ws  5.393 @bw ( indent )
X @ws @bw40 (option) @ws  5.394 @bw ( causes all DO loops and IF...THEN...ELSE..)
X @ws @bw40 (.ENDIF clauses to be indented by) @ws 64.8 636 @m 28.8 @bw ( the)
X @ws  5 @bw ( specified number of spaces. The default is 3 spaces. Values from )
X @ws @bw40 (1 to 5 may be given.) @ws 64.8 624 @m 10 @f111 @bw40 (\247) @ws
X 10 @f11 21.27 @bw ( ) @ws 12 @f11 @bw40 (\261F) @ws 64.8 600 @m 10 @f11
X 28.8 @bw ( Causes) @ws  5 @bw ( all FORMAT statements to be grouped at the end)
X @ws @bw40 ( of each module.) @ws 64.8 588 @m 10 @f111 @bw40 (\247) @ws 10 @f11
X 21.27 @bw ( ) @ws 12 @f11 @bw40 (\261G) @ws 64.8 564 @m 10 @f11 28.8 @bw ( Cau)
X @ws @bw40 (ses) @ws  5 @bw ( all GOTO clauses to be right\261adjusted to colum)
X @ws @bw40 (n 72.) @ws 64.8 552 @m 10 @f111 @bw40 (\247) @ws 10 @f11
X 21.27 @bw ( ) @ws 12 @f11 @bw40 (\261s) @ws 64.8 528 @m 10 @f11 28.8 @bw ( Spe)
X @ws @bw40 (cifies) @ws  6.438 @bw ( that all statement labels are to) @ws
X 6.439 @bw ( be renumbered.) @ws  11.439 @bw ( The) @ws  6.439 @bw ( start valu)
X @ws @bw40 (e, and optionally, the) @ws 64.8 516 @m 28.8 @bw ( step) @ws
X 5.055 @bw ( value \(default) @ws  5.056 @bw ( is 10\) should be given. Thus to)
X @ws @bw40 ( renumber starting at 100 and stepping by 20,) @ws 64.8 504 @m
X 28.8 @bw ( use) @ws  5 @bw ( \261s100,20.) @ws 64.8 492 @m 10 @f111
X @bw40 (\247) @ws 10 @f11 21.27 @bw ( ) @ws 12 @f11 @bw40 (\261r) @ws
X 64.8 468 @m 10 @f11 28.8 @bw ( Specifies) @ws  6.2 @bw ( that all FORMAT label)
X @ws @bw40 (s are to be renumbered.) @ws  11.2 @bw ( The) @ws  6.2 @bw ( start )
X @ws @bw40 (value, and optionally, the) @ws 64.8 456 @m 28.8 @bw ( step) @ws
X 5.055 @bw ( value \(default) @ws  5.056 @bw ( is 10\) should be given. Thus to)
X @ws @bw40 ( renumber starting at 1000 and stepping by 1,) @ws 64.8 444 @m
X 28.8 @bw ( use) @ws  5 @bw ( \261r1000,1.) @ws 64.8 432 @m 10 @f111
X @bw40 (\247) @ws 10 @f11 21.27 @bw ( ) @ws 12 @f11 @bw40 (\261n) @ws
X 64.8 408 @m 10 @f11 28.8 @bw ( Causes) @ws  5 @bw ( the "tidied" Fortran to be)
X @ws @bw40 ( written to the specified file.) @ws 64.8 396 @m 10 @f111
X @bw40 (\247) @ws 10 @f11 21.27 @bw ( ) @ws 12 @f11 @bw40 (\261t) @ws
X 64.8 372 @m 10 @f11 28.8 @bw ( An) @ws  5 @bw ( output file is written for fut)
X @ws @bw40 (ure processing by FLOW.) @ws 64.8 336 @m 12 @f13 @bw40 (2.9) @ws
X 6 @bw ( The meaning of the FLOPPY Qualifiers/Options) @ws 64.8 312 @m 10 @f111
X @bw40 (\247) @ws 10 @f11 21.27 @bw ( ) @ws 10 @f12 @bw40 (CHECKS) @ws
X 5 @bw ( \(IBM/CMS,VAX/VMS\) \261C \(UNIX\)) @ws 64.8 288 @m 10 @f11
X 28.8 @bw ( Define) @ws  5.825 @bw ( the coding convention checks to be made.)
X @ws  10.825 @bw ( If) @ws  5.825 @bw ( no list is given, then the checks marke)
X @ws @bw40 (d) @ws 64.8 276 @m 28.8 @bw ( by) @ws  7.538 @bw ( a '*' in Section)
X @ws  7.539 @bw ( 2.2 are made.) @ws  12.539 @bw ( If) @ws  7.539 @bw ( n=99 th)
X @ws @bw40 (en all checks are made.) @ws  12.539 @bw ( If) @ws  7.539 @bw ( /NO)
X @ws @bw40 (CHECKS) @ws 64.8 264 @m 28.8 @bw ( \(VAX/VMS\)) @ws  6.437 @bw ( or)
X @ws @bw40 ( CHECKS) @ws  6.438 @bw ( NONE \(IBM/CMS\) is specified then no che)
X @ws @bw40 (cks are made.) @ws  11.438 @bw ( If) @ws  6.438 @bw ( n is) @ws
X 64.8 252 @m 28.8 @bw ( negative,) @ws  6.206 @bw ( then check) @ws
X 6.207 @bw ( number n is not made.) @ws  11.207 @bw ( Thus) @ws  6.207 @bw ( to)
X @ws @bw40 ( make all the checks except numbers 3) @ws 64.8 240 @m 28.8 @bw ( a)
X @ws @bw40 (nd) @ws  9.971 @bw ( 31, specify /CHECKS=\(99,\2613,\26131\) on VMS)
X @ws @bw40 (, CHECKS 99,\2613,\26131 on IBM/CMS or) @ws 64.8 228 @m 28.8 @bw ( )
X @ws @bw40 (\261c99,\2613,\26131) @ws  5 @bw ( on Unix.) @ws 64.8 204 @m
X 10 @f111 @bw40 (\247) @ws 10 @f11 21.27 @bw ( ) @ws 10 @f12 @bw40 (DISK) @ws
X 5 @bw ( \(IBM/CMS ONLY\)) @ws 64.8 180 @m 10 @f11 28.8 @bw ( Cause) @ws
X 5.437 @bw ( the output normally viewed) @ws  5.438 @bw ( at the terminal to be)
X @ws @bw40 ( written to a file on disk. This file will) @ws 64.8 168 @m
X 28.8 @bw ( have) @ws  5 @bw ( type FLOPLIS.) @ws 64.8 144 @m 10 @f111
X @bw40 (\247) @ws 10 @f11 21.27 @bw ( ) @ws 10 @f12 @bw40 (TREE) @ws  5 @bw ( )
X @ws @bw40 (\(IBM/CMS,VAX/VMS\) \261T \(UNIX\)) @ws 64.8 120 @m 10 @f11
X 28.8 @bw ( Cause) @ws  6.915 @bw ( a summary output file to be produced, conta)
X @ws @bw40 (ining a packed description of the source) @ws 64.8 108 @m
X 28.8 @bw ( FORTRAN.) @ws  6.374 @bw ( The summary file contains such) @ws
X 6.375 @bw ( information as the list of all FORTRAN module) @ws 64.8 96 @m
X 28.8 @bw ( names,) @ws  6.308 @bw ( their arguments, calling list,) @ws
X 6.309 @bw ( and so on. The file is unformatted; it should be used as) @ws
X 64.8 84 @m 28.8 @bw ( input) @ws  5 @bw ( to the auxiliary tool called FLOW, a)
X @ws @bw40 (nd is unreadable at the terminal.) @ws 64.8 60 @m 10 @f111
X @bw40 (\247) @ws 10 @f11 21.27 @bw ( ) @ws 10 @f12 @bw40 (OUTPUT) @ws
X 5 @bw ( \(IBM/CMS\) \261N \(UNIX\)) @ws 64.8 36 @m 10 @f11 28.8 @bw ( Cause)
X @ws  5.446 @bw ( the reformatted FORTRAN output to be written on) @ws
X 5.447 @bw ( the filename specified. If no filename) @ws 64.8 24 @m 28.8 @bw ( )
X @ws @bw40 (is) @ws  5 @bw ( given, then the output Fortran is written to a fil)
X @ws @bw40 (e called OUTPUT FORTRAN \(IBM/CMS\).) @ws
X showpage pageobj restore
X %%Page: ? 11      
X
X /pageobj save def() pop
X 64.8 744 @m 10 @f11 @bw40 (FLOPPY) @ws  5 @bw ( and FLOW User Guide) @ws
X 281.4 @bw ( page) @ws  5 @bw ( 9) @ws 64.8 732 @m 10 @f111 @bw40 (\276\276\276)
X @ws @bw40 (\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276)
X @ws @bw40 (\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276)
X @ws @bw40 (\276\276\276\276\276\276\276\276\276\276) @ws 10 @f11 3.6 @bw ( )
X @ws 64.8 696 @m 10 @f111 @bw40 (\247) @ws 10 @f11 21.27 @bw ( ) @ws 10 @f12
X @bw40 (OUTPUT) @ws  5 @bw ( \(VAX/VMS\)) @ws 64.8 672 @m 10 @f11 28.8 @bw ( Ca)
X @ws @bw40 (use) @ws  5.692 @bw ( the) @ws  5.693 @bw ( output from FLOPPY \(no)
X @ws @bw40 (rmally viewed at the terminal\) to be sent to a disk file. If) @ws
X 64.8 660 @m 28.8 @bw ( filename) @ws  5.424 @bw ( is not specified the output )
X @ws @bw40 (file will have the stem) @ws  5.425 @bw ( name of the source FORTRA)
X @ws @bw40 (N file,) @ws 64.8 648 @m 28.8 @bw ( with) @ws  5 @bw ( a type of FL)
X @ws @bw40 (OPLIS .) @ws 64.8 624 @m 10 @f111 @bw40 (\247) @ws 10 @f11
X 21.27 @bw ( ) @ws 10 @f12 @bw40 (FULL) @ws  5 @bw ( \(IBM/CMS,VAX/VMS\) \261F )
X @ws @bw40 (\(UNIX\)) @ws 64.8 600 @m 10 @f11 28.8 @bw ( Cause) @ws
X 6.753 @bw ( all source FORTRAN statements to be) @ws  6.754 @bw ( output, as o)
X @ws @bw40 (pposed to only those breaking the) @ws 64.8 588 @m 28.8 @bw ( speci)
X @ws @bw40 (fied) @ws  5 @bw ( coding conventions.) @ws 64.8 564 @m 10 @f111
X @bw40 (\247) @ws 10 @f11 21.27 @bw ( ) @ws 10 @f12 @bw40 (IGNORE) @ws
X 5 @bw ( \(IBM/CMS,VAX/VMS\) \261I \(UNIX\)) @ws 64.8 540 @m 10 @f11
X 28.8 @bw ( Specify) @ws  7.965 @bw ( a list of FORTRAN module and variable nam)
X @ws @bw40 (es to be ignored when the coding) @ws 64.8 528 @m 28.8 @bw ( conven)
X @ws @bw40 (tion) @ws  5.64 @bw ( checks are made. Specify module names by prec)
X @ws @bw40 (eeding the name with a # sign e.g.) @ws 64.8 516 @m 28.8 @bw ( #MIN)
X @ws @bw40 (UIT,) @ws  5 @bw ( specify variable names normally.) @ws 64.8 492 @m
X 10 @f111 @bw40 (\247) @ws 10 @f11 21.27 @bw ( ) @ws 10 @f12 @bw40 (SPECIAL) @ws
X  5 @bw ( \(IBM/CMS AND VAX/VMS ONLY\)) @ws 64.8 468 @m 10 @f11 28.8 @bw ( Spec)
X @ws @bw40 (ify) @ws  5.069 @bw ( that a special version of FLOPPY be used. The)
X @ws @bw40 ( default) @ws  5.07 @bw ( 'special' version is STANDARD,) @ws
X 64.8 456 @m 28.8 @bw ( which) @ws  5 @bw ( causes those checks marked by a '*')
X @ws @bw40 ( \(see CHECKS\) to be implemented.) @ws 64.8 432 @m 9 @f1
X 39.6 @bw ( STANDARD) @ws  5.4 @bw ( : Use the standard checks.) @ws 64.8 420 @m
X 39.6 @bw ( ALEPH) @ws  21.6 @bw ( :) @ws  5.4 @bw ( Use the ALEPH standard che)
X @ws @bw40 (cks.) @ws 64.8 408 @m 39.6 @bw ( GALEPH) @ws  16.2 @bw ( :) @ws
X 5.4 @bw ( Variables beginning with G..... or xG.... are ignored.) @ws
X 64.8 384 @m 10 @f11 28.8 @bw ( Other) @ws  5 @bw ( special versions may be def)
X @ws @bw40 (ined on request to the author.) @ws 64.8 360 @m 10 @f111
X @bw40 (\247) @ws 10 @f11 21.27 @bw ( ) @ws 10 @f12 @bw40 (LOG) @ws  5 @bw ( \()
X @ws @bw40 (VAX/VMS\) \261L \(UNIX\)) @ws 64.8 336 @m 10 @f11 28.8 @bw ( Show)
X @ws  5 @bw ( a summary of the FLOPPY command parsing.) @ws 64.8 312 @m 10 @f111
X @bw40 (\247) @ws 10 @f11 21.27 @bw ( ) @ws 10 @f12 @bw40 (OLD) @ws  5 @bw ( \()
X @ws @bw40 (IBM/CMS,VAX/VMS\) \261O \(UNIX\)) @ws 64.8 288 @m 10 @f11
X 28.8 @bw ( Each) @ws  6.352 @bw ( time FLOPPY is run, an) @ws  6.353 @bw ( "IG)
X @ws @bw40 (NORE" file is written with the user specifications for that) @ws
X 64.8 276 @m 28.8 @bw ( particular) @ws  5.133 @bw ( run. If the OLD qualifier )
X @ws @bw40 (is used, one may specify) @ws  5.134 @bw ( an already existing "IGN)
X @ws @bw40 (ORE" file.) @ws 64.8 264 @m 28.8 @bw ( If) @ws  6.883 @bw ( the fil)
X @ws @bw40 (ename is omitted, then the filename used is obtained from the stem )
X @ws @bw40 (of) @ws  6.884 @bw ( the source) @ws 64.8 252 @m 28.8 @bw ( FORTRAN)
X @ws  6.292 @bw ( file and the type FLOPIGN .) @ws  11.292 @bw ( Note) @ws
X 6.292 @bw ( that) @ws  6.293 @bw ( this qualifier does not affect the use of)
X @ws 64.8 240 @m 28.8 @bw ( TIDY) @ws  5 @bw ( as the FORTRAN tidying parameter)
X @ws @bw40 (s are not stored in the "IGNORE" file.) @ws 64.8 216 @m 10 @f111
X @bw40 (\247) @ws 10 @f11 21.27 @bw ( ) @ws 10 @f12 @bw40 (TIDY) @ws  5 @bw ( )
X @ws @bw40 (\(IBM/CMS,VAX/VMS, DERIVED FOR UNIX\)) @ws 64.8 192 @m 10 @f11
X 28.8 @bw ( Write) @ws  5.05 @bw ( a new file of) @ws  5.051 @bw ( FORTRAN afte)
X @ws @bw40 (r re\261formatting the input according to the qualifiers specified.)
X @ws 64.8 180 @m 28.8 @bw ( The) @ws  5.53 @bw ( TIDY qualifier must be accompa)
X @ws @bw40 (nied by at least one of the following qualifiers. If all you) @ws
X 64.8 168 @m 28.8 @bw ( want) @ws  5.97 @bw ( to do is TIDY your) @ws
X 5.971 @bw ( Fortran, then use the /NOCHECKS or CHECKS NONE qualifier as) @ws
X 64.8 156 @m 28.8 @bw ( well.) @ws 64.8 132 @m @bw40 ( ) @ws 10 @f111
X @bw40 (\247) @ws 10 @f11 21.27 @bw ( ) @ws 10 @f12 @bw40 (FORTRAN) @ws
X 5 @bw ( \(VAX/VMS\) \(equivalent to OUTPUT,\261n IBM/CMS,Unix\)) @ws
X 64.8 120 @m 10 @f11 57.6 @bw ( Cause) @ws  6.341 @bw ( the reformatted FORTRAN)
X @ws @bw40 ( output to be) @ws  6.342 @bw ( written on the filename specified. )
X @ws @bw40 (If no) @ws 64.8 108 @m 57.6 @bw ( filename) @ws  5 @bw ( is given, )
X @ws @bw40 (then the output Fortran is written to a file called FORTRAN.FOR.)
X @ws 64.8 96 @m 28.8 @bw ( ) @ws 10 @f111 @bw40 (\247) @ws 10 @f11 21.27 @bw ( )
X @ws 10 @f12 @bw40 (GOTOS) @ws  10 @bw ( \(IBM/CMS,VAX/VMS\)) @ws  5 @bw ( \261)
X @ws @bw40 (G \(Unix\)) @ws 64.8 84 @m 10 @f11 57.6 @bw ( Right) @ws  5 @bw ( a)
X @ws @bw40 (djust all GOTO statements so that they finish in column 72.) @ws
X 64.8 72 @m 28.8 @bw ( ) @ws 10 @f111 @bw40 (\247) @ws 10 @f11 21.27 @bw ( ) @ws
X 10 @f12 @bw40 (INDENT) @ws  5 @bw ( \(IBM/CMS,VAX/VMS\) \261j \(Unix\)) @ws
X 64.8 60 @m 10 @f11 57.6 @bw ( Indent) @ws  6.247 @bw ( DO and IF clauses by th)
X @ws @bw40 (e specified number) @ws  6.248 @bw ( of spaces. The default is 3, a)
X @ws @bw40 (nd if) @ws 64.8 48 @m 57.6 @bw ( specified,) @ws  5 @bw ( n should )
X @ws @bw40 (be in the range 1 to 5.) @ws
X showpage pageobj restore
X %%Page: ? 12      
X
X /pageobj save def() pop
X 64.8 744 @m 10 @f11 @bw40 (FLOPPY) @ws  5 @bw ( and FLOW User Guide) @ws
X 276.4 @bw ( page) @ws  5 @bw ( 10) @ws 64.8 732 @m 10 @f111 @bw40 (\276\276)
X @ws @bw40 (\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276)
X @ws @bw40 (\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276)
X @ws @bw40 (\276\276\276\276\276\276\276\276\276\276\276) @ws 10 @f11
X 3.6 @bw ( ) @ws 64.8 696 @m 28.8 @bw ( ) @ws 10 @f111 @bw40 (\247) @ws 10 @f11
X 21.27 @bw ( ) @ws 10 @f12 @bw40 (RENUMF) @ws  5 @bw ( \(IBM/CMS\) FORMAT VAX/V)
X @ws @bw40 (MS\) \261r \(Unix\)) @ws 64.8 684 @m 10 @f11 57.6 @bw ( Re\261numbe)
X @ws @bw40 (r) @ws  5 @bw ( FORMAT statements starting at n and stepping by m.)
X @ws 64.8 672 @m 28.8 @bw ( ) @ws 10 @f111 @bw40 (\247) @ws 10 @f11
X 21.27 @bw ( ) @ws 10 @f12 @bw40 (GROUPF) @ws  5 @bw ( \(IBM/CMS,VAX/VMS\) \261)
X @ws @bw40 (F \(Unix\)) @ws 64.8 660 @m 10 @f11 57.6 @bw ( Group) @ws  5 @bw ( )
X @ws @bw40 (all FORMAT statements at the bottom of each module in which they ap)
X @ws @bw40 (pear.) @ws 64.8 648 @m 28.8 @bw ( ) @ws 10 @f111 @bw40 (\247) @ws
X 10 @f11 21.27 @bw ( ) @ws 10 @f12 @bw40 (STMNTS) @ws  5 @bw ( \(IBM/CMS\) RENU)
X @ws @bw40 (MS \(VAX/VMS\) \261s \(Unix\)) @ws 64.8 636 @m 10 @f11 57.6 @bw ( R)
X @ws @bw40 (e\261number) @ws  5 @bw ( all statements \(not FORMATs\) starting a)
X @ws @bw40 (t n and stepping by m.) @ws 64.8 588 @m 12 @f11 199.47 @bw ( ) @ws
X 12 @f13 @bw40 (Chapter) @ws  6 @bw ( 3) @ws 64.8 564 @m 10 @f11 96.462 @bw ( )
X @ws 12 @f13 @bw40 (Summary) @ws  6 @bw ( of Files produced by a FLOPPY run) @ws
X 64.8 528 @m 10 @f11 @bw40 (Listed) @ws  5.818 @bw ( below are the) @ws
X 5.819 @bw ( files which will appear when you run FLOPPY.) @ws  10.819 @bw ( So)
X @ws @bw40 (me) @ws  5.819 @bw ( of these files will only) @ws 64.8 516 @m
X @bw40 (appear) @ws  5 @bw ( if you select a particular FLOPPY option \(shown i)
X @ws @bw40 (n Status column\).) @ws 64.8 456 @m 173.18 @bw ( ) @ws 10 @f12
X @bw40 (Table) @ws  5 @bw ( 1) @ws 10 @f11 @bw40 (:) @ws  10 @bw ( FLOPPY) @ws
X 5 @bw ( Files) @ws 64.8 437 @m 7 @f1 63.6 @bw ( VMS) @ws  4.2 @bw ( filename)
X @ws  21 @bw ( IBM) @ws  4.2 @bw ( filename) @ws  29.4 @bw ( Unix) @ws
X 4.2 @bw ( Filename) @ws  16.8 @bw ( Description) @ws  54.6 @bw ( Status) @ws
X 64.8 430 @m 63.6 @bw ( \261\261\261\261\261\261\261\261\261\261\261\261) @ws
X 21 @bw ( \261\261\261\261\261\261\261\261\261\261\261\261\261\261 \261\261\261)
X @ws @bw40 (\261\261\261\261\261\261\261\261\261\261) @ws  16.8 @bw ( \261\261)
X @ws @bw40 (\261\261\261\261\261\261\261\261\261\261\261\261\261\261\261\261)
X @ws @bw40 (\261\261\261\261\261) @ws  4.2 @bw ( \261\261\261\261\261\261\261)
X @ws @bw40 (\261\261) @ws 64.8 423 @m 63.6 @bw ( fn.FOR) @ws  46.2 @bw ( fn) @ws
X  21 @bw ( FORTRAN your.f) @ws  46.2 @bw ( The) @ws  4.2 @bw ( source FORTRAN)
X @ws  25.2 @bw ( Required) @ws 64.8 409 @m 63.6 @bw ( fn.FLOPFOR) @ws
X 29.4 @bw ( OUTPUT) @ws  4.2 @bw ( FORTRAN) @ws  21 @bw ( your.f.out) @ws
X 29.4 @bw ( The) @ws  4.2 @bw ( 'tidied' FORTRAN) @ws  16.8 @bw ( Optional) @ws
X 64.8 395 @m 63.6 @bw ( fn.FLOPLIS) @ws  29.4 @bw ( fn) @ws  21 @bw ( FLOPLIS s)
X @ws @bw40 (tdout) @ws  46.2 @bw ( The) @ws  4.2 @bw ( FLOPPY output,) @ws
X 25.2 @bw ( Optional) @ws 64.8 381 @m 63.6 @bw ( fn.FLOPIGN) @ws  29.4 @bw ( fn)
X @ws  21 @bw ( FLOPIGN your.f.old) @ws  29.4 @bw ( The) @ws  4.2 @bw ( list of )
X @ws @bw40 (names to) @ws  16.8 @bw ( Optional) @ws 64.8 374 @m 286.2 @bw ( ign)
X @ws @bw40 (ored) @ws  4.2 @bw ( by FLOPPY,) @ws 64.8 367 @m 286.2 @bw ( and)
X @ws  4.2 @bw ( rule list) @ws 64.8 353 @m 63.6 @bw ( fn.FLOPTRE) @ws
X 29.4 @bw ( fn) @ws  21 @bw ( FLOPTRE your.f.floptre) @ws  12.6 @bw ( The) @ws
X 4.2 @bw ( FLOPPY output to) @ws  16.8 @bw ( Optional) @ws 64.8 346 @m
X 286.2 @bw ( be) @ws  4.2 @bw ( input to FLOW) @ws 64.8 332 @m 63.6 @bw ( PROTR)
X @ws @bw40 (E.DAT) @ws  29.4 @bw ( FILE) @ws  12.6 @bw ( PROTRE) @ws
X 25.2 @bw ( protre.dat) @ws  29.4 @bw ( The) @ws  4.2 @bw ( tree diagram from)
X @ws  12.6 @bw ( Optional) @ws 64.8 325 @m 286.2 @bw ( FLOW) @ws 64.8 311 @m
X 63.6 @bw ( PROCOM.DAT) @ws  29.4 @bw ( FILE) @ws  12.6 @bw ( PROCOM) @ws
X 25.2 @bw ( procom.dat) @ws  29.4 @bw ( The) @ws  4.2 @bw ( table of COMMON) @ws
X  21 @bw ( Optional) @ws 64.8 304 @m 286.2 @bw ( block) @ws  4.2 @bw ( usage fr)
X @ws @bw40 (om FLOW) @ws 64.8 290 @m 63.6 @bw ( FLOW.PS) @ws  42 @bw ( fn) @ws
X 21 @bw ( LISTPS) @ws  25.2 @bw ( flow.ps) @ws  42 @bw ( PostScript) @ws
X 4.2 @bw ( file for) @ws  21 @bw ( Optional) @ws 64.8 283 @m 286.2 @bw ( Struct)
X @ws @bw40 (ure) @ws  4.2 @bw ( Chart) @ws 64.8 204 @m 12 @f11 199.47 @bw ( )
X @ws 12 @f13 @bw40 (Chapter) @ws  6 @bw ( 4) @ws 64.8 180 @m 10 @f11
X 188.46 @bw ( ) @ws 12 @f13 @bw40 (FLOW) @ws  6 @bw ( output) @ws 64.8 144 @m
X 10 @f11 @bw40 (FLOW) @ws 0 3 @rm  8 @f11 @bw40 (3) @ws 0 -3 @rm  10 @f11
X 7.494 @bw ( uses a file produced by) @ws  7.495 @bw ( FLOPPY from your FORTRAN)
X @ws @bw40 ( to analyse the flow of control) @ws 64.8 132 @m @bw40 (between) @ws
X  6.71 @bw ( the modules, and produces) @ws  6.711 @bw ( a program control stru)
X @ws @bw40 (cture file together with a common block) @ws 64.8 120 @m
X @bw40 (usage) @ws  6.244 @bw ( file.) @ws  11.244 @bw ( The) @ws  6.244 @bw ( )
X @ws @bw40 (output from the FLOW program is suitable for inclusion in a documen)
X @ws @bw40 (t such) @ws  6.245 @bw ( as a) @ws 64.8 108 @m @bw40 (user's) @ws
X 5 @bw ( guide.) @ws 64.8 84 @m @bw40 (It) @ws  5.504 @bw ( is also possible to)
X @ws @bw40 ( produce a pseudo\261structure\261chart in PostScript format. Users)
X @ws @bw40 ( are warned that, for) @ws 64.8 72 @m @bw40 (charts) @ws
X 5.281 @bw ( containing more than about) @ws  5.282 @bw ( a dozen modules, the )
X @ws @bw40 (chart might be rather unreadable, as it is hard) @ws 64.8 60 @m
X @bw40 (to) @ws  7.737 @bw ( optimize the) @ws  7.738 @bw ( module positions to)
X @ws @bw40 ( minimize line crossings etc. whilst preserving the right call) @ws
X 64.8 48 @m @bw40 (sequences.) @ws  10.273 @bw ( It) @ws  5.273 @bw ( is intend)
X @ws @bw40 (ed that) @ws  5.274 @bw ( this will be useful for "backward analysi)
X @ws @bw40 (s", i.e. verifying that the SASD) @ws 64.8 36 @m 10 @f111
X @bw40 (\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276)
X @ws @bw40 (\276\276\276\276) @ws 64.8 12 @m 0 3 @rm  8 @f11 @bw40 (3) @ws
X 0 -3 @rm  10.4 @bw ( FLOW) @ws  4 @bw ( is based on an original idea by P.Pala)
X @ws @bw40 (zzi.) @ws 67.9 486.5 @m 447.4 1 @hr 67.9 486.5 @m 229 1 @vr
X 514.3 486.5 @m 229 1 @vr 67.9 258.5 @m 447.4 1 @hr
X showpage pageobj restore
X %%Page: ? 13      
X
X /pageobj save def() pop
X 64.8 744 @m 10 @f11 @bw40 (FLOPPY) @ws  5 @bw ( and FLOW User Guide) @ws
X 276.4 @bw ( page) @ws  5 @bw ( 11) @ws 64.8 732 @m 10 @f111 @bw40 (\276\276)
X @ws @bw40 (\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276)
X @ws @bw40 (\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276)
X @ws @bw40 (\276\276\276\276\276\276\276\276\276\276\276) @ws 10 @f11
X 3.6 @bw ( ) @ws 64.8 696 @m @bw40 (designed) @ws  5.64 @bw ( Structure Chart c)
X @ws @bw40 (orresponds with the actual structure of the Fortran source. Please )
X @ws @bw40 (see Figure) @ws 64.8 684 @m @bw40 (5) @ws  5 @bw ( and under /GRAPH)
X @ws @bw40 (ICS below.) @ws 64.8 612 @m 21.6 @bw ( ) @ws 10 @f12 @bw40 (Figure)
X @ws  5 @bw ( 5) @ws 10 @f11 @bw40 (:) @ws  24.8 @bw ( The) @ws  5 @bw ( FLOW S)
X @ws @bw40 (tructure Chart for the FLOW program itself) @ws 64.8 588 @m 9 @f1
X 122.4 @bw ( This) @ws  5.4 @bw ( figure is available as a PostScript file call)
X @ws @bw40 (ed) @ws 64.8 576 @m 122.4 @bw ( FLOWFLOW.PS) @ws 67.9 654.5 @m
X 447.4 1 @hr 67.9 654.5 @m 97 1 @vr 514.3 654.5 @m 97 1 @vr 67.9 558.5 @m
X 447.4 1 @hr
X showpage pageobj restore
X %%Page: ? 14      
X
X /pageobj save def() pop
X 64.8 744 @m 10 @f11 @bw40 (FLOPPY) @ws  5 @bw ( and FLOW User Guide) @ws
X 276.4 @bw ( page) @ws  5 @bw ( 12) @ws 64.8 732 @m 10 @f111 @bw40 (\276\276)
X @ws @bw40 (\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276)
X @ws @bw40 (\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276)
X @ws @bw40 (\276\276\276\276\276\276\276\276\276\276\276) @ws 10 @f11
X 3.6 @bw ( ) @ws 64.8 670 @m 7 @f1 25.8 @bw ( ********************) @ws
X 58.8 @bw ( ProTre) @ws  54.6 @bw ( ********************) @ws 64.8 663 @m
X 168.6 @bw ( ======) @ws 64.8 642 @m 114 @bw ( Meaning) @ws  4.2 @bw ( of Symbo)
X @ws @bw40 (ls:) @ws 64.8 635 @m 114 @bw ( \261\261\261\261\261\261\261\261\261)
X @ws @bw40 (\261\261\261\261\261\261\261\261\261\261) @ws 64.8 621 @m
X @bw40 ( .) @ws  12.6 @bw ( ==>) @ws  4.2 @bw ( terminal node in the tree) @ws
X 64.8 614 @m 114 @bw ( *) @ws  12.6 @bw ( ==>) @ws  4.2 @bw ( external procedur)
X @ws @bw40 (e) @ws 64.8 607 @m 114 @bw ( >) @ws  12.6 @bw ( ==>) @ws
X 4.2 @bw ( subtree node, expanded below) @ws 64.8 600 @m 114 @bw ( +) @ws
X 12.6 @bw ( ==>) @ws  4.2 @bw ( multiply called terminal node) @ws 64.8 593 @m
X 114 @bw ( ]) @ws  12.6 @bw ( ==>) @ws  4.2 @bw ( procedure calling only extern)
X @ws @bw40 (als) @ws 64.8 586 @m 25.8 @bw ( \261\261\261\261\261\261\261\261)
X @ws @bw40 (\261\261\261\261\261\261\261\261\261\261\261\261\261\261\261\261)
X @ws @bw40 (\261\261\261\261\261\261\261\261\261\261\261\261\261\261\261\261)
X @ws @bw40 (\261\261\261\261\261\261\261\261\261\261\261\261\261\261\261\261)
X @ws @bw40 (\261\261\261\261\261\261\261\261\261\261\261\261\261\261\261\261)
X @ws @bw40 (\261) @ws 64.8 579 @m 114 @bw ( ?) @ws  12.6 @bw ( ==>) @ws
X 4.2 @bw ( module is in IF clause) @ws 64.8 572 @m 114 @bw ( \() @ws
X 12.6 @bw ( ==>) @ws  4.2 @bw ( module is in DO loop) @ws 64.8 558 @m
X 25.8 @bw ( *******************************************************************)
X @ws @bw40 (******) @ws 64.8 537 @m @bw40 ( EXTERNAL) @ws  4.2 @bw ( procedure )
X @ws @bw40 (names will not appear) @ws 64.8 516 @m 25.8 @bw ( =============) @ws
X 64.8 509 @m @bw40 ( Node) @ws  4.2 @bw ( name ==> FLOW) @ws 64.8 502 @m
X 25.8 @bw ( =============) @ws 64.8 488 @m 30 @bw ( FLOW) @ws  205.8 @bw ( :)
X @ws 64.8 481 @m 46.8 @bw ( |\261\261\261\261\261PRODES) @ws  155.4 @bw ( :Stee)
X @ws @bw40 (r) @ws  4.2 @bw ( the FLOW program) @ws 64.8 474 @m 88.8 @bw ( |)
X @ws @bw40 (\261\261\261\261\261INIARR) @ws  12.6 @bw ( +) @ws  96.6 @bw ( :Ini)
X @ws @bw40 (tialise) @ws  4.2 @bw ( arrays) @ws 64.8 467 @m 88.8 @bw ( |\261)
X @ws @bw40 (\261\261\261\261RDFLOP) @ws  12.6 @bw ( >) @ws  96.6 @bw ( :Read)
X @ws  4.2 @bw ( the data from FLOPPY) @ws 64.8 460 @m 88.8 @bw ( |\261\261\261)
X @ws @bw40 (\261\261EXTERN) @ws  113.4 @bw ( :Find) @ws  4.2 @bw ( names of ext)
X @ws @bw40 (ernal routines) @ws 64.8 453 @m 88.8 @bw ( |) @ws  37.8 @bw ( |\261)
X @ws @bw40 (\261\261\261\261RDFLOP) @ws  12.6 @bw ( >) @ws  54.6 @bw ( :Read)
X @ws  4.2 @bw ( the data from FLOPPY) @ws 64.8 446 @m 88.8 @bw ( |?\261\261\261)
X @ws @bw40 (\261PROTRE) @ws  113.4 @bw ( :Produce) @ws  4.2 @bw ( the FLOW diag)
X @ws @bw40 (ram) @ws 64.8 439 @m 88.8 @bw ( |) @ws  37.8 @bw ( |\261\261\261)
X @ws @bw40 (\261\261SEARCH) @ws  12.6 @bw ( +) @ws  54.6 @bw ( :Finds) @ws
X 4.2 @bw ( the index for a routine name) @ws 64.8 432 @m 88.8 @bw ( |) @ws
X 37.8 @bw ( |\261\261\261\261\261LENOCC) @ws  12.6 @bw ( ]) @ws  54.6 @bw ( :)
X @ws 64.8 425 @m 88.8 @bw ( |) @ws  37.8 @bw ( |?\261\261\261\261LENOCC) @ws
X 12.6 @bw ( ]) @ws  54.6 @bw ( :) @ws 64.8 418 @m 88.8 @bw ( |) @ws
X 37.8 @bw ( |?\261\261\261\261LENOCC) @ws  12.6 @bw ( ]) @ws  54.6 @bw ( :) @ws
X 64.8 411 @m 88.8 @bw ( |) @ws  37.8 @bw ( |??\261\261\261LENOCC) @ws
X 12.6 @bw ( ]) @ws  54.6 @bw ( :) @ws 64.8 404 @m 88.8 @bw ( |) @ws
X 37.8 @bw ( |??\261\261\261LENOCC) @ws  12.6 @bw ( ]) @ws  54.6 @bw ( :) @ws
X 64.8 397 @m 88.8 @bw ( |?\261\261\261\261PROCHT) @ws  113.4 @bw ( :Produce) @ws
X  4.2 @bw ( the graphics SC) @ws 64.8 390 @m 88.8 @bw ( |) @ws  37.8 @bw ( |)
X @ws @bw40 (\261\261\261\261\261SEARCH) @ws  12.6 @bw ( +) @ws  54.6 @bw ( :Fin)
X @ws @bw40 (ds) @ws  4.2 @bw ( the index for a routine name) @ws 64.8 383 @m
X 88.8 @bw ( |) @ws  37.8 @bw ( |\261\261\261\261\261GRINIT) @ws  71.4 @bw ( :Cl)
X @ws @bw40 (ose) @ws  4.2 @bw ( the graphics package) @ws 64.8 376 @m
X 88.8 @bw ( |) @ws  37.8 @bw ( | |\261\261\261\261\261LENOCC) @ws  12.6 @bw ( ])
X @ws @bw40 ( :) @ws 64.8 369 @m 88.8 @bw ( |) @ws  37.8 @bw ( |\261\261\261\261)
X @ws @bw40 (\261CHTBOX) @ws  12.6 @bw ( +) @ws  54.6 @bw ( :Plots) @ws
X 4.2 @bw ( a box) @ws 64.8 362 @m 88.8 @bw ( |) @ws  37.8 @bw ( |\261\261\261)
X @ws @bw40 (\261\261SEARCH) @ws  12.6 @bw ( +) @ws  54.6 @bw ( :Finds) @ws
X 4.2 @bw ( the index for a routine name) @ws 64.8 355 @m 88.8 @bw ( |) @ws
X 37.8 @bw ( |\(\(\261\261\261CHTBOX) @ws  12.6 @bw ( +) @ws  54.6 @bw ( :Plots)
X @ws  4.2 @bw ( a box) @ws 64.8 348 @m 88.8 @bw ( |) @ws  37.8 @bw ( |\(\(\261)
X @ws @bw40 (\261\261GTX) @ws  84 @bw ( :Plots) @ws  4.2 @bw ( the text at a giv)
X @ws @bw40 (en positi) @ws 64.8 341 @m 88.8 @bw ( |) @ws  37.8 @bw ( | |\261)
X @ws @bw40 (\261\261\261\261LENOCC) @ws  12.6 @bw ( ] :) @ws 64.8 334 @m
X 88.8 @bw ( |) @ws  37.8 @bw ( |\(\(\261\261\261SEARCH) @ws  12.6 @bw ( +) @ws
X 54.6 @bw ( :Finds) @ws  4.2 @bw ( the index for a routine name) @ws 64.8 327 @m
X 88.8 @bw ( |) @ws  37.8 @bw ( |\(\(\261\261\261CHTLIN) @ws  12.6 @bw ( ]) @ws
X 54.6 @bw ( :Calculate) @ws  4.2 @bw ( and plot box intersect) @ws 64.8 320 @m
X 88.8 @bw ( |) @ws  37.8 @bw ( |\(\(\(\261\261GRCLOSE) @ws  67.2 @bw ( :Close)
X @ws  4.2 @bw ( the graphics package) @ws 64.8 313 @m 88.8 @bw ( |) @ws
X 79.8 @bw ( |\261\261\261\261\261LENOCC) @ws  12.6 @bw ( ] :) @ws 64.8 306 @m
X 88.8 @bw ( |?\261\261\261\261PROCOM) @ws  113.4 @bw ( :Produce) @ws
X 4.2 @bw ( the COMMON block table) @ws 64.8 299 @m 88.8 @bw ( |) @ws
X 37.8 @bw ( |\261\261\261\261\261LENOCC) @ws  12.6 @bw ( ]) @ws  54.6 @bw ( :)
X @ws 64.8 292 @m 88.8 @bw ( |) @ws  37.8 @bw ( |\261\261\261\261\261LENOCC) @ws
X 12.6 @bw ( ]) @ws  54.6 @bw ( :) @ws 64.8 285 @m 88.8 @bw ( |?\261\261\261\261)
X @ws @bw40 (PROQRY) @ws  113.4 @bw ( :Interactively) @ws  4.2 @bw ( look at the)
X @ws @bw40 ( tree) @ws 64.8 278 @m 130.8 @bw ( |\261\261\261\261\261CASCHG) @ws
X 12.6 @bw ( >) @ws  54.6 @bw ( :Convert) @ws  4.2 @bw ( any lower case to upper)
X @ws 64.8 271 @m 130.8 @bw ( |\261\261\261\261\261SEARCH) @ws  12.6 @bw ( +) @ws
X  54.6 @bw ( :Finds) @ws  4.2 @bw ( the index for a routine name) @ws
X 64.8 264 @m 130.8 @bw ( |\261\261\261\261\261CASCHG) @ws  12.6 @bw ( >) @ws
X 54.6 @bw ( :Convert) @ws  4.2 @bw ( any lower case to upper) @ws 64.8 250 @m
X 25.8 @bw ( =============) @ws 64.8 243 @m @bw40 ( Node) @ws  4.2 @bw ( name ==)
X @ws @bw40 (> RDFLOP) @ws 64.8 236 @m 25.8 @bw ( =============) @ws 64.8 222 @m
X 30 @bw ( RDFLOP) @ws  197.4 @bw ( :) @ws  4.2 @bw ( Read the data from FLOPPY)
X @ws 64.8 215 @m 46.8 @bw ( |\261\261\261\261\261TABENT) @ws  155.4 @bw ( :) @ws
X  4.2 @bw ( Enter data into tables) @ws 64.8 208 @m 88.8 @bw ( |\(\(??\261LENOC)
X @ws @bw40 (C) @ws  12.6 @bw ( ]) @ws  96.6 @bw ( :) @ws 64.8 201 @m
X 88.8 @bw ( |\(\261\261\261\261SEARCH) @ws  12.6 @bw ( +) @ws  96.6 @bw ( :) @ws
X  4.2 @bw ( Finds the index for a routine name) @ws 64.8 187 @m 25.8 @bw ( ====)
X @ws @bw40 (=========) @ws 64.8 180 @m @bw40 ( Node) @ws  4.2 @bw ( name ==> CA)
X @ws @bw40 (SCHG) @ws 64.8 173 @m 25.8 @bw ( =============) @ws 64.8 159 @m
X 30 @bw ( CASCHG) @ws  197.4 @bw ( :) @ws  4.2 @bw ( Convert any lower case to )
X @ws @bw40 (upper) @ws 64.8 152 @m 46.8 @bw ( |\261\261\261\261\261LENOCC) @ws
X 12.6 @bw ( ]) @ws  138.6 @bw ( :) @ws 64.8 128 @m 10 @f11 21.6 @bw ( ) @ws
X 10 @f12 @bw40 (Figure) @ws  5 @bw ( 6) @ws 10 @f11 @bw40 (:) @ws  24.8 @bw ( T)
X @ws @bw40 (he) @ws  7.482 @bw ( FLOW diagram for the FLOW program itself.) @ws
X 12.482 @bw ( Subprograms) @ws  7.482 @bw ( that are) @ws 64.8 116 @m
X 86.4 @bw ( called) @ws  7.115 @bw ( inside DO\261loops) @ws  7.116 @bw ( are p)
X @ws @bw40 (refixed by one or more \('s, and those called) @ws 64.8 104 @m
X 86.4 @bw ( conditionally) @ws  7.276 @bw ( are prefixed by one) @ws
X 7.277 @bw ( or more ?'s.) @ws  12.277 @bw ( In) @ws  7.277 @bw ( the FLOW show)
X @ws @bw40 (n, all) @ws 64.8 92 @m 86.4 @bw ( external) @ws  5.387 @bw ( subpro)
X @ws @bw40 (grams \(e.g. UCOPY or SIN etc.\)) @ws  10.387 @bw ( have) @ws
X 5.387 @bw ( been) @ws  5.388 @bw ( eliminated; this is) @ws 64.8 80 @m
X 86.4 @bw ( an) @ws  5 @bw ( option.) @ws 67.9 702.5 @m 447.4 1 @hr
X 67.9 702.5 @m 641 1 @vr 514.3 702.5 @m 641 1 @vr 67.9 62.5 @m 447.4 1 @hr
X showpage pageobj restore
X %%Page: ? 15      
X
X /pageobj save def() pop
X 64.8 744 @m 10 @f11 @bw40 (FLOPPY) @ws  5 @bw ( and FLOW User Guide) @ws
X 276.4 @bw ( page) @ws  5 @bw ( 13) @ws 64.8 732 @m 10 @f111 @bw40 (\276\276)
X @ws @bw40 (\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276)
X @ws @bw40 (\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276)
X @ws @bw40 (\276\276\276\276\276\276\276\276\276\276\276) @ws 10 @f11
X 3.6 @bw ( ) @ws 64.8 670 @m 7 @f1 25.8 @bw ( ********************) @ws
X 58.8 @bw ( ProCom) @ws  54.6 @bw ( ********************) @ws 64.8 663 @m
X 168.6 @bw ( ======) @ws 64.8 642 @m 114 @bw ( Module) @ws  4.2 @bw ( names app)
X @ws @bw40 (ear along x\261axis) @ws 64.8 635 @m 114 @bw ( COMMON) @ws
X 4.2 @bw ( block names along y\261axis) @ws 64.8 621 @m 114 @bw ( <Y>) @ws
X 8.4 @bw ( ==>) @ws  4.2 @bw ( COMMON used in module) @ws 64.8 614 @m
X 114 @bw ( <N>) @ws  8.4 @bw ( ==>) @ws  4.2 @bw ( COMMON not used \(but is DEC)
X @ws @bw40 (LARED\)) @ws 64.8 607 @m 114 @bw ( <) @ws  4.2 @bw ( >) @ws
X 8.4 @bw ( ==>) @ws  4.2 @bw ( COMMON not DECLARED) @ws 64.8 600 @m 25.8 @bw ( )
X @ws @bw40 (*******************************************************************)
X @ws @bw40 (******) @ws 64.8 593 @m 21.6 @bw ( 1) @ws 64.8 586 @m 67.8 @bw ( C)
X @ws  4.2 @bw ( C C F E G G G I L P P P P P R S T M A L N R M I) @ws 64.8 579 @m
X 67.8 @bw ( A) @ws  4.2 @bw ( H H L X R R T N E R R R R R D E A I B E I E A N)
X @ws 64.8 572 @m 67.8 @bw ( S) @ws  4.2 @bw ( T T O T I C X I N O O O O O F A B)
X @ws @bw40 ( N S N N A X D) @ws 64.8 565 @m 67.8 @bw ( C) @ws  4.2 @bw ( B L W )
X @ws @bw40 (E N L) @ws  12.6 @bw ( A) @ws  4.2 @bw ( O C C D Q T L R E) @ws
X 29.4 @bw ( T) @ws  4.2 @bw ( L) @ws  12.6 @bw ( E) @ws 64.8 558 @m 67.8 @bw ( )
X @ws @bw40 (H) @ws  4.2 @bw ( O I) @ws  12.6 @bw ( R) @ws  4.2 @bw ( I O) @ws
X 12.6 @bw ( R) @ws  4.2 @bw ( C H O E R R O C N) @ws  54.6 @bw ( X) @ws
X 64.8 551 @m 67.8 @bw ( G) @ws  4.2 @bw ( X N) @ws  12.6 @bw ( N) @ws
X 4.2 @bw ( T S) @ws  12.6 @bw ( R) @ws  4.2 @bw ( C T M S Y E P H T) @ws
X 64.8 544 @m 63.6 @bw ( +\261\261\261\261\261\261\261\261\261\261\261\261\261)
X @ws @bw40 (\261\261\261\261\261\261\261\261\261\261\261\261\261\261\261\261)
X @ws @bw40 (\261\261\261\261\261\261\261\261\261\261\261\261\261\261\261\261)
X @ws @bw40 (\261\261\261\261\261\261\261\261\261\261\261\261\261\261\261\261)
X @ws @bw40 (\261\261) @ws 64.8 537 @m 25.8 @bw ( LUNIT) @ws  16.8 @bw ( |) @ws
X 8.4 @bw ( Y) @ws  4.2 @bw ( Y) @ws  12.6 @bw ( Y) @ws  4.2 @bw ( Y) @ws
X 12.6 @bw ( Y) @ws  29.4 @bw ( Y) @ws  12.6 @bw ( Y) @ws  4.2 @bw ( Y) @ws
X 142.8 @bw ( |) @ws 64.8 530 @m 25.8 @bw ( JOBCO1) @ws  12.6 @bw ( |) @ws
X 42 @bw ( Y) @ws  4.2 @bw ( Y) @ws  29.4 @bw ( N) @ws  12.6 @bw ( N) @ws
X 159.6 @bw ( |) @ws 64.8 523 @m 25.8 @bw ( JOBCOM) @ws  12.6 @bw ( |) @ws
X 42 @bw ( N) @ws  218.4 @bw ( |) @ws 64.8 516 @m 25.8 @bw ( TABLE1) @ws
X 12.6 @bw ( |) @ws  67.2 @bw ( Y) @ws  63 @bw ( Y) @ws  126 @bw ( |) @ws
X 64.8 509 @m 25.8 @bw ( TABLES) @ws  12.6 @bw ( |) @ws  67.2 @bw ( Y) @ws
X 193.2 @bw ( |) @ws 64.8 502 @m 25.8 @bw ( FLOPP1) @ws  12.6 @bw ( |) @ws
X 109.2 @bw ( N) @ws  12.6 @bw ( Y Y) @ws  117.6 @bw ( |) @ws 64.8 495 @m
X 25.8 @bw ( FLOPPY) @ws  12.6 @bw ( |) @ws  109.2 @bw ( N) @ws  151.2 @bw ( |)
X @ws 64.8 488 @m 25.8 @bw ( IGNORE) @ws  12.6 @bw ( |) @ws  117.6 @bw ( Y) @ws
X 142.8 @bw ( |) @ws 64.8 481 @m 63.6 @bw ( +\261\261\261\261\261\261\261\261)
X @ws @bw40 (\261\261\261\261\261\261\261\261\261\261\261\261\261\261\261\261)
X @ws @bw40 (\261\261\261\261\261\261\261\261\261\261\261\261\261\261\261\261)
X @ws @bw40 (\261\261\261\261\261\261\261\261\261\261\261\261\261\261\261\261)
X @ws @bw40 (\261\261\261\261\261\261\261) @ws 64.8 457 @m 10 @f11 21.6 @bw ( )
X @ws 10 @f12 @bw40 (Figure) @ws  5 @bw ( 7) @ws 10 @f11 @bw40 (:) @ws
X 24.8 @bw ( The) @ws  5 @bw ( COMMON block table for the FLOW program.) @ws
X 64.8 433 @m 86.4 @bw ( In) @ws  5.712 @bw ( the COMMON block table, the routin)
X @ws @bw40 (e names appear along) @ws  5.713 @bw ( the top of the) @ws
X 64.8 421 @m 86.4 @bw ( table,) @ws  7.28 @bw ( and the COMMON block names down)
X @ws @bw40 ( the side.) @ws  12.28 @bw ( If) @ws  7.28 @bw ( the COMMON) @ws
X 64.8 409 @m 86.4 @bw ( block) @ws  5.8 @bw ( is declared in a) @ws
X 5.801 @bw ( routine, and at least one variable used in that routine,) @ws
X 64.8 397 @m 86.4 @bw ( then) @ws  5.873 @bw ( a "Y" appears in the correspondi)
X @ws @bw40 (ng) @ws  5.874 @bw ( row and column of the table.) @ws
X 10.874 @bw ( If) @ws  5.874 @bw ( a) @ws 64.8 385 @m 86.4 @bw ( COMMON) @ws
X 5 @bw ( block is declared but not used in a routine, then an "N" appears.) @ws
X 64.8 325 @m 12 @f13 @bw40 (4.1) @ws  6 @bw ( FLOW on VAX/VMS) @ws 64.8 301 @m
X 10 @f11 @bw40 (The) @ws  5 @bw ( FLOW command is invoked by:) @ws 64.8 277 @m
X 9 @f1 @bw40 (FLOW) @ws  10.8 @bw ( /qualifier [/qualifiers]) @ws 64.8 253 @m
X 10 @f11 @bw40 (Where) @ws  5 @bw ( the 'filename' is the file produced by FLOP)
X @ws @bw40 (PY when the /TREE qualifier is used.) @ws 64.8 217 @m 12 @f13
X @bw40 (4.2) @ws  6 @bw ( Examples of VAX/VMS FLOW commands) @ws 64.8 193 @m
X 10 @f11 @bw40 (Create) @ws  5 @bw ( a structure chart called STRUCTURE.CHT sho)
X @ws @bw40 (wing the calling sequence in myfile.FOR:) @ws 64.8 169 @m 9 @f1
X @bw40 ($) @ws  5.4 @bw ( FLOW /INTREE=myfile.FLOPTRE /STRUCTURE=STRUCTURE.CHT)
X @ws 64.8 145 @m 10 @f11 @bw40 (Write) @ws  5 @bw ( a DAF to be used in subsequ)
X @ws @bw40 (ent FLOW runs:) @ws 64.8 121 @m 9 @f1 @bw40 ($) @ws  5.4 @bw ( FLOW)
X @ws @bw40 ( /INTREE=myfile.FLOPTRE /OUTDAF=myfile.DAF) @ws 64.8 97 @m 10 @f11
X @bw40 (Use) @ws  5.249 @bw ( a DAF and create a structure chart, ignoring all )
X @ws @bw40 (external) @ws  5.25 @bw ( procedure names \(like VZERO, SIN, etc\))
X @ws 64.8 85 @m @bw40 (and) @ws  5 @bw ( start the chart at subroutine INIJOB:)
X @ws 64.8 61 @m 9 @f1 @bw40 ($) @ws  5.4 @bw ( FLOW /INDAF=myfile.DAF /STRUC /N)
X @ws @bw40 (OEXT /NODE=INIJOB) @ws 64.8 37 @m 10 @f11 @bw40 (Use) @ws  5 @bw ( )
X @ws @bw40 (the same DAF, and enter the interactive exploration facility of FLO)
X @ws @bw40 (W) @ws 64.8 13 @m 9 @f1 @bw40 ($) @ws  5.4 @bw ( FLOW /INDAF=myfile)
X @ws @bw40 (.DAF /QUERY) @ws 67.9 702.5 @m 447.4 1 @hr 67.9 702.5 @m 336 1 @vr
X 514.3 702.5 @m 336 1 @vr 67.9 367.5 @m 447.4 1 @hr
X showpage pageobj restore
X %%Page: ? 16      
X
X /pageobj save def() pop
X 64.8 744 @m 10 @f11 @bw40 (FLOPPY) @ws  5 @bw ( and FLOW User Guide) @ws
X 276.4 @bw ( page) @ws  5 @bw ( 14) @ws 64.8 732 @m 10 @f111 @bw40 (\276\276)
X @ws @bw40 (\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276)
X @ws @bw40 (\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276)
X @ws @bw40 (\276\276\276\276\276\276\276\276\276\276\276) @ws 10 @f11
X 3.6 @bw ( ) @ws 64.8 696 @m 12 @f13 @bw40 (4.3) @ws  6 @bw ( FLOW on CERNVM)
X @ws 64.8 672 @m 10 @f11 @bw40 (Type) @ws  5.32 @bw ( "FLOW" to activate the pr)
X @ws @bw40 (ogram in full screen mode, or "FLOW \( options" for line\261mode.)
X @ws  10.32 @bw ( The) @ws 64.8 660 @m @bw40 (FLOW) @ws  5 @bw ( panel is shown)
X @ws @bw40 ( overleaf.) @ws 64.8 576 @m 9 @f1 21.6 @bw ( ====>) @ws  5.4 @bw ( )
X @ws @bw40 (FLOW VERSION 2.00 <=========> Analyse Fortran Code <======>) @ws
X 64.8 552 @m 27 @bw ( Fill) @ws  5.4 @bw ( in the blank field\(s\) as required.)
X @ws 64.8 528 @m 27 @bw ( Input) @ws  5.4 @bw ( for FLOW) @ws 64.8 516 @m
X 59.4 @bw ( Binary) @ws  5.4 @bw ( file from FLOPPY) @ws  59.4 @bw ( ==>) @ws
X 64.8 492 @m 27 @bw ( Interactively) @ws  5.4 @bw ( explore the calling tree)
X @ws  10.8 @bw ( ==>) @ws 64.8 468 @m 27 @bw ( Structure) @ws  10.8 @bw ( Chart)
X @ws 64.8 456 @m 64.8 @bw ( Node) @ws  5.4 @bw ( name at top of chart) @ws
X 43.2 @bw ( ==>) @ws 64.8 444 @m 70.2 @bw ( \(Default) @ws  5.4 @bw ( is main p)
X @ws @bw40 (rogram\)) @ws 64.8 432 @m 64.8 @bw ( File) @ws  5.4 @bw ( for text )
X @ws @bw40 (chart) @ws  75.6 @bw ( ==>) @ws 64.8 420 @m 64.8 @bw ( File) @ws
X 5.4 @bw ( for graphical chart) @ws  48.6 @bw ( ==>) @ws 64.8 408 @m
X 64.8 @bw ( Include) @ws  5.4 @bw ( EXTERNALs in chart ?) @ws  27 @bw ( ==>) @ws
X 64.8 384 @m @bw40 ( COMMON) @ws  5.4 @bw ( block table file) @ws  91.8 @bw ( =)
X @ws @bw40 (=>) @ws 64.8 360 @m 21.6 @bw ( PF1:) @ws  5.4 @bw ( Help) @ws
X 16.2 @bw ( PF2:) @ws  5.4 @bw ( Enter) @ws  10.8 @bw ( a CMS Command) @ws
X 27 @bw ( PF3:) @ws  5.4 @bw ( Exit) @ws 64.8 336 @m 10 @f11 21.6 @bw ( ) @ws
X 10 @f12 @bw40 (Figure) @ws  5 @bw ( 8) @ws 10 @f11 @bw40 (:) @ws  24.8 @bw ( T)
X @ws @bw40 (he) @ws  5 @bw ( FLOW panel) @ws 64.8 276 @m @bw40 (The format of t)
X @ws @bw40 (he line\261mode FLOW command is shown below:) @ws 64.8 252 @m 9 @f1
X 36 @bw ( +\261\261\261\261\261\261\261\261+\261\261\261\261\261\261\261\261)
X @ws @bw40 (\261\261\261\261\261\261\261\261\261\261\261\261\261\261\261\261)
X @ws @bw40 (\261\261\261\261\261\261\261\261\261\261\261\261\261\261\261\261)
X @ws @bw40 (\261\261\261\261\261\261\261\261\261\261\261\261\261\261\261\261)
X @ws @bw40 (\261+) @ws 64.8 240 @m @bw40 ( |) @ws  5.4 @bw ( FLOW) @ws
X 16.2 @bw ( |) @ws  5.4 @bw ( [ ? | fn [ ft [ fm]]]) @ws  10.8 @bw ( [\() @ws
X 5.4 @bw ( Options ]]) @ws  108 @bw ( |) @ws 64.8 228 @m 36 @bw ( |) @ws
X 43.2 @bw ( |) @ws  5.4 @bw ( Options:) @ws  259.2 @bw ( |) @ws 64.8 216 @m
X 36 @bw ( |) @ws  43.2 @bw ( |) @ws  5.4 @bw ( [QUERY]) @ws  264.6 @bw ( |) @ws
X 64.8 204 @m 36 @bw ( |) @ws  43.2 @bw ( |) @ws  5.4 @bw ( [EXTERNALS]) @ws
X 243 @bw ( |) @ws 64.8 192 @m 36 @bw ( |) @ws  43.2 @bw ( |) @ws  5.4 @bw ( [NO)
X @ws @bw40 (DE name]) @ws  243 @bw ( |) @ws 64.8 180 @m 36 @bw ( |) @ws
X 43.2 @bw ( |) @ws  5.4 @bw ( [STRUCTURE_CHART) @ws  16.2 @bw ( fn) @ws
X 5.4 @bw ( [ft [fm]]]) @ws  129.6 @bw ( |) @ws 64.8 168 @m 36 @bw ( |) @ws
X 43.2 @bw ( |) @ws  5.4 @bw ( [GRAPHICS) @ws  54 @bw ( fn) @ws  5.4 @bw ( [ft [)
X @ws @bw40 (fm]]]) @ws  129.6 @bw ( |) @ws 64.8 156 @m 36 @bw ( |) @ws
X 43.2 @bw ( |) @ws  5.4 @bw ( [COMMON_TABLE) @ws  32.4 @bw ( fn) @ws
X 5.4 @bw ( [ft [fm]]]) @ws  129.6 @bw ( |) @ws 64.8 144 @m 36 @bw ( +\261\261)
X @ws @bw40 (\261\261\261\261\261\261+\261\261\261\261\261\261\261\261\261\261)
X @ws @bw40 (\261\261\261\261\261\261\261\261\261\261\261\261\261\261\261\261)
X @ws @bw40 (\261\261\261\261\261\261\261\261\261\261\261\261\261\261\261\261)
X @ws @bw40 (\261\261\261\261\261\261\261\261\261\261\261\261\261\261\261+) @ws
X 67.9 630.5 @m 447.4 1 @hr 67.9 630.5 @m 313 1 @vr 514.3 630.5 @m 313 1 @vr
X 67.9 318.5 @m 447.4 1 @hr
X showpage pageobj restore
X %%Page: ? 17      
X
X /pageobj save def() pop
X 64.8 744 @m 10 @f11 @bw40 (FLOPPY) @ws  5 @bw ( and FLOW User Guide) @ws
X 276.4 @bw ( page) @ws  5 @bw ( 15) @ws 64.8 732 @m 10 @f111 @bw40 (\276\276)
X @ws @bw40 (\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276)
X @ws @bw40 (\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276)
X @ws @bw40 (\276\276\276\276\276\276\276\276\276\276\276) @ws 10 @f11
X 3.6 @bw ( ) @ws 64.8 696 @m 12 @f11 199.47 @bw ( ) @ws 12 @f13 @bw40 (Chapter)
X @ws  6 @bw ( 5) @ws 64.8 672 @m 10 @f11 100.788 @bw ( ) @ws 12 @f13
X @bw40 (The) @ws  6 @bw ( meaning of the FLOW Qualifiers/Options) @ws
X 64.8 636 @m 10 @f11 @bw40 (The) @ws  5 @bw ( meaning of the options is describ)
X @ws @bw40 (ed below:) @ws 64.8 612 @m 10 @f111 @bw40 (\247) @ws 10 @f11
X 21.27 @bw ( ) @ws 10 @f12 @bw40 (INPUT) @ws  5 @bw ( FILE) @ws 64.8 588 @m
X 10 @f11 28.8 @bw ( Specifies) @ws  5 @bw ( the name of a binary file produced )
X @ws @bw40 (using the TREE option in FLOPPY.) @ws 64.8 564 @m 10 @f111
X @bw40 (\247) @ws 10 @f11 21.27 @bw ( ) @ws 10 @f12 @bw40 (QUERY\(IBM/CMS,VAX/V)
X @ws @bw40 (MS\)) @ws  5 @bw ( \261Q \(UNIX\)) @ws 64.8 540 @m 10 @f11
X 28.8 @bw ( Enter) @ws  5.302 @bw ( the interactive exploration facility of FLO)
X @ws @bw40 (W !) @ws  10.302 @bw ( You) @ws  5.303 @bw ( will be shown the full)
X @ws @bw40 ( list of module) @ws 64.8 528 @m 28.8 @bw ( names) @ws
X 6.691 @bw ( in the source, and can then specify one of them to see which modul)
X @ws @bw40 (es) @ws  6.692 @bw ( it calls, and) @ws 64.8 516 @m 28.8 @bw ( whic)
X @ws @bw40 (h) @ws  5 @bw ( modules call it. In this way you can move freely ar)
X @ws @bw40 (ound the tree.) @ws 64.8 492 @m 10 @f111 @bw40 (\247) @ws 10 @f11
X 21.27 @bw ( ) @ws 10 @f12 @bw40 (STRUCTURE) @ws 10 @f11 @bw40 (_) @ws 10 @f12
X @bw40 (CHART\(IBM/CMS,VAX/VMS\)) @ws  5 @bw ( \261S \(UNIX\)) @ws 64.8 468 @m
X 10 @f11 28.8 @bw ( Specifies) @ws  6.305 @bw ( that a text file be written con)
X @ws @bw40 (taining the calling tree) @ws  6.306 @bw ( of the source FORTRAN. T)
X @ws @bw40 (he) @ws 64.8 456 @m 28.8 @bw ( tree) @ws  5.773 @bw ( shows modules)
X @ws @bw40 ( local to) @ws  5.774 @bw ( the code and external, and indicates wh)
X @ws @bw40 (ether they appear in IF or) @ws 64.8 444 @m 28.8 @bw ( DO) @ws
X 5.889 @bw ( clauses. Stub modules \(no calls\), external modules \(not local\))
X @ws @bw40 (, multiply\261called) @ws  5.89 @bw ( modules and) @ws 64.8 432 @m
X 28.8 @bw ( sub\261trees) @ws  6.337 @bw ( are all clearly indicated.) @ws
X 6.338 @bw ( If the FORTRAN source contained lines after each module) @ws
X 64.8 420 @m 28.8 @bw ( declaration) @ws  5 @bw ( of the form:) @ws 64.8 396 @m
X 9 @f1 64.8 @bw ( C!) @ws  5.4 @bw ( This is a short comment) @ws 64.8 372 @m
X 10 @f11 28.8 @bw ( then) @ws  5 @bw ( these comments are shown against each mo)
X @ws @bw40 (dule name in the tree.) @ws 64.8 348 @m 10 @f111 @bw40 (\247) @ws
X 10 @f11 21.27 @bw ( ) @ws 10 @f12 @bw40 (GRAPHICS\(IBM/CMS,VAX/VMS\)) @ws
X 5 @bw ( \261G \(UNIX\)) @ws 64.8 324 @m 10 @f11 28.8 @bw ( Specifies) @ws
X 6.546 @bw ( that) @ws  6.547 @bw ( a PostScript file be written, which, when i)
X @ws @bw40 (nterpreted, will show the SASD\261like) @ws 64.8 312 @m 28.8 @bw ( )
X @ws @bw40 (structure) @ws  5.367 @bw ( chart of the source FORTRAN. It is reco)
X @ws @bw40 (mmended NOT to ask for) @ws  5.368 @bw ( EXTERNALS with) @ws
X 64.8 300 @m 28.8 @bw ( this) @ws  5.772 @bw ( option.) @ws  5.773 @bw ( An att)
X @ws @bw40 (empt is made to optimize the positions of modules on the page, in o)
X @ws @bw40 (rder to) @ws 64.8 288 @m 28.8 @bw ( minimise) @ws  5 @bw ( line cro)
X @ws @bw40 (ssings etc.. But this is often unsuccessful!) @ws 64.8 264 @m
X 10 @f111 @bw40 (\247) @ws 10 @f11 21.27 @bw ( ) @ws 10 @f12 @bw40 (NODE) @ws
X 5 @bw ( \(IBM/CMS,VAX/VMS\) \261N \(UNIX\)) @ws 64.8 240 @m 10 @f11
X 28.8 @bw ( Specifies) @ws  5.321 @bw ( the top node in either the text or grap)
X @ws @bw40 (hics structure chart. This) @ws  5.322 @bw ( is useful for restrict)
X @ws @bw40 (ing) @ws 64.8 228 @m 28.8 @bw ( the) @ws  7.052 @bw ( output to) @ws
X  7.053 @bw ( a particular sub\261tree of interest. The value nodename must be )
X @ws @bw40 (a PROGRAM,) @ws 64.8 216 @m 28.8 @bw ( SUBROUTINE) @ws  5 @bw ( or )
X @ws @bw40 (FUNCTION name in the source FORTRAN.) @ws 64.8 192 @m 10 @f111
X @bw40 (\247) @ws 10 @f11 21.27 @bw ( ) @ws 10 @f12 @bw40 (NOEXTERNALS\(IBM/CMS)
X @ws @bw40 (,VAX/VMS\)) @ws  5 @bw ( \261E \(UNIX\)) @ws 64.8 168 @m 10 @f11
X 28.8 @bw ( Specifies) @ws  6.08 @bw ( that modules external to) @ws
X 6.081 @bw ( the source FORTRAN \(e.g. SIN, COS, INDEX etc.\) not be) @ws
X 64.8 156 @m 28.8 @bw ( shown) @ws  6.755 @bw ( in the tree.) @ws
X 11.755 @bw ( The) @ws  6.755 @bw ( default is to show externals. This qualifie)
X @ws @bw40 (r is) @ws  6.756 @bw ( to be used with the) @ws 64.8 144 @m
X 28.8 @bw ( Query) @ws  5 @bw ( and Chart options.) @ws 64.8 120 @m 10 @f111
X @bw40 (\247) @ws 10 @f11 21.27 @bw ( ) @ws 10 @f12 @bw40 (COMMON) @ws 10 @f11
X @bw40 (_) @ws 10 @f12 @bw40 (TABLE\(IBM/CMS,VAX/VMS\)) @ws  5 @bw ( \261C \(UN)
X @ws @bw40 (IX\)) @ws 64.8 96 @m 10 @f11 28.8 @bw ( Specifies) @ws
X 5.841 @bw ( that a table be written containing, on the y\261axis the) @ws
X 5.842 @bw ( names of all COMMON blocks,) @ws 64.8 84 @m 28.8 @bw ( and) @ws
X 5.65 @bw ( on the x\261axis all the module) @ws  5.651 @bw ( names, contained )
X @ws @bw40 (in the source FORTRAN. At each place in) @ws 64.8 72 @m 28.8 @bw ( )
X @ws @bw40 (the) @ws  6.466 @bw ( table a) @ws  6.467 @bw ( 'Y' indicates that )
X @ws @bw40 (the COMMON block appears in that module, and at least one) @ws
X 64.8 60 @m 28.8 @bw ( variable) @ws  5.138 @bw ( from it is used in the module)
X @ws @bw40 (, a 'N' indicates that the COMMON) @ws  5.139 @bw ( block is declar)
X @ws @bw40 (ed but) @ws 64.8 48 @m 28.8 @bw ( not) @ws  5 @bw ( used, and a bla)
X @ws @bw40 (nk indicates that the COMMON block is not declared in that module.)
X @ws
X showpage pageobj restore
X %%Page: ? 18      
X
X /pageobj save def() pop
X 64.8 744 @m 10 @f11 @bw40 (FLOPPY) @ws  5 @bw ( and FLOW User Guide) @ws
X 276.4 @bw ( page) @ws  5 @bw ( 16) @ws 64.8 732 @m 10 @f111 @bw40 (\276\276)
X @ws @bw40 (\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276)
X @ws @bw40 (\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276)
X @ws @bw40 (\276\276\276\276\276\276\276\276\276\276\276) @ws 10 @f11
X 3.6 @bw ( ) @ws 64.8 696 @m 10 @f111 @bw40 (\247) @ws 10 @f11 21.27 @bw ( ) @ws
X 10 @f12 @bw40 (IGNORE) @ws  5 @bw ( \(VAX/VMS\) \261I \(UNIX\)) @ws 64.8 672 @m
X 10 @f11 28.8 @bw ( Specifies) @ws  7.434 @bw ( that the given list of module n)
X @ws @bw40 (ames is to be excluded from treatment when the) @ws 64.8 660 @m
X 28.8 @bw ( Structure_Chart) @ws  5 @bw ( \(\261s\) option is used.) @ws
X 64.8 612 @m 12 @f11 199.47 @bw ( ) @ws 12 @f13 @bw40 (Chapter) @ws  6 @bw ( 6)
X @ws 64.8 588 @m 10 @f11 157.458 @bw ( ) @ws 12 @f13 @bw40 (Problems) @ws
X 6 @bw ( and Installation) @ws 64.8 552 @m 10 @f11 @bw40 (If) @ws  6.86 @bw ( y)
X @ws @bw40 (ou have problems using FLOPPY or FLOW, or if you discover bugs, the)
X @ws @bw40 (n please contact the) @ws 64.8 540 @m @bw40 (author:) @ws
X 64.8 516 @m 10 @f111 @bw40 (\247) @ws 10 @f11 21.27 @bw ( user) @ws  5 @bw ( J)
X @ws @bw40 (ULIAN at CERNVM.CERN.CH, or) @ws 64.8 504 @m 10 @f111 @bw40 (\247)
X @ws 10 @f11 21.27 @bw ( user) @ws  5 @bw ( JULIAN at VXCERN.CERN.CH) @ws
X 64.8 480 @m @bw40 (If) @ws  5.069 @bw ( you want to install FLOPPY locally at )
X @ws @bw40 (your institution you) @ws  5.07 @bw ( should also contact the autho)
X @ws @bw40 (r, specifying) @ws 64.8 468 @m @bw40 (which) @ws  5 @bw ( operating)
X @ws @bw40 ( system you use.) @ws
X showpage pageobj restore
X %%Page: ? 19      
X
X /pageobj save def() pop
X 64.8 744 @m 10 @f11 @bw40 (FLOPPY) @ws  5 @bw ( and FLOW User Guide) @ws
X 276.4 @bw ( page) @ws  5 @bw ( 17) @ws 64.8 732 @m 10 @f111 @bw40 (\276\276)
X @ws @bw40 (\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276)
X @ws @bw40 (\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276)
X @ws @bw40 (\276\276\276\276\276\276\276\276\276\276\276) @ws 10 @f11
X 3.6 @bw ( ) @ws 64.8 696 @m 179.802 @bw ( ) @ws 12 @f13 @bw40 (Acknowledgments)
X @ws 64.8 660 @m 10 @f11 @bw40 (I) @ws  5.145 @bw ( wish to thank Hans) @ws
X 5.146 @bw ( Grote for his help with implementing FLOPPY on top of FLOP.) @ws
X 10.146 @bw ( I) @ws  5.146 @bw ( also wish to) @ws 64.8 648 @m @bw40 (thank)
X @ws  7.417 @bw ( Juergen Knobloch and Mike) @ws  7.418 @bw ( Metcalf for many )
X @ws @bw40 (helpful suggestions for improvements to the) @ws 64.8 636 @m
X @bw40 (original) @ws  5 @bw ( version of FLOPPY.) @ws 64.8 612 @m @bw40 (I) @ws
X  5.966 @bw ( am indebted to Paolo Palazzi and Steve Fisher for) @ws
X 5.967 @bw ( their help and advice on the implementation of) @ws 64.8 600 @m
X @bw40 (the) @ws  5 @bw ( original FLOW program.) @ws
X showpage pageobj restore
X %%Page: ? 20      
X
X /pageobj save def() pop
X 64.8 744 @m 10 @f11 @bw40 (FLOPPY) @ws  5 @bw ( and FLOW User Guide) @ws
X 276.4 @bw ( page) @ws  5 @bw ( 18) @ws 64.8 732 @m 10 @f111 @bw40 (\276\276)
X @ws @bw40 (\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276)
X @ws @bw40 (\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276)
X @ws @bw40 (\276\276\276\276\276\276\276\276\276\276\276) @ws 10 @f11
X 3.6 @bw ( ) @ws 64.8 696 @m 212.13 @bw ( ) @ws 12 @f13 @bw40 (Index) @ws
X 64.8 660 @m 10 @f11 @bw40 (ALEPH) @ws  5 @bw ( ... 4, 9) @ws 302.4 660 @m
X @bw40 (VXCRNA ... 5) @ws 64.8 648 @m @bw40 (ANSI ... 1) @ws 302.4 636 @m
X @bw40 (Warnings ... 2) @ws 64.8 624 @m @bw40 (CERNVM ... 6) @ws 302.4 624 @m
X @bw40 (Wild cards ... 5) @ws 64.8 612 @m @bw40 (Checks ... 3) @ws 64.8 600 @m
X @bw40 (Coding Conventions ... 3) @ws 64.8 588 @m @bw40 (Coding Conventions : s)
X @ws @bw40 (tandard and other) @ws 64.8 576 @m 28.8 @bw ( sets) @ws  5 @bw ( ..)
X @ws @bw40 (. 4) @ws 64.8 564 @m @bw40 (COMMON blocks ... 1) @ws 64.8 540 @m
X @bw40 (DO loop ... 9) @ws 64.8 528 @m @bw40 (DO statement ... 4) @ws
X 64.8 516 @m @bw40 (DXCERN ... 7) @ws 64.8 492 @m @bw40 (Examples of FLOPPY com)
X @ws @bw40 (mands) @ws 64.8 480 @m 28.8 @bw ( \(VAX/VMS\)) @ws  5 @bw ( ... 5)
X @ws 64.8 456 @m @bw40 (FLOP ... 1, 4) @ws 64.8 444 @m @bw40 (FLOPPY headers ..)
X @ws @bw40 (. 2) @ws 64.8 432 @m @bw40 (FORMAT labels ... 4) @ws 64.8 420 @m
X @bw40 (FORMAT statement ... 4) @ws 64.8 408 @m @bw40 (Fortran ... 1, 4) @ws
X 64.8 396 @m @bw40 (Full screen version \(VM\) ... 6) @ws 64.8 372 @m
X @bw40 (GALEPH ... 4, 9) @ws 64.8 360 @m @bw40 (GOTO statement ... 4, 9) @ws
X 64.8 336 @m @bw40 (HISTORIAN ... 1, 5) @ws 64.8 312 @m @bw40 (IBM ... 6) @ws
X 64.8 300 @m @bw40 (IF statement ... 9) @ws 64.8 288 @m @bw40 (Ignore file ... )
X @ws @bw40 (9) @ws 64.8 276 @m @bw40 (Ignore subroutines ... 3) @ws 64.8 264 @m
X @bw40 (Ignore variables ... 3) @ws 64.8 252 @m @bw40 (INCLUDE statement ... 1,)
X @ws @bw40 ( 5) @ws 64.8 240 @m @bw40 (IOS3270 ... 6) @ws 64.8 216 @m
X @bw40 (Line mode version \(VM\) ... 6) @ws 64.8 204 @m @bw40 (List of Checks .)
X @ws @bw40 (.. 3) @ws 64.8 180 @m @bw40 (man page ... 7) @ws 64.8 156 @m
X @bw40 (Rules ... 3) @ws 64.8 132 @m @bw40 (STANDARD ... 9) @ws 64.8 120 @m
X @bw40 (Statement labels ... 4) @ws 64.8 96 @m @bw40 (Tidy ... 4) @ws 64.8 84 @m
X @bw40 (TIDY option ... 9) @ws 64.8 60 @m @bw40 (Ultrix ... 7) @ws 64.8 48 @m
X @bw40 (Unix ... 7) @ws 64.8 24 @m @bw40 (VAX ... 5) @ws 64.8 12 @m @bw40 (VXCE)
X @ws @bw40 (RN ... 5) @ws
X showpage pageobj restore
X %%Trailer
X
X jobobj restore
X %%Pages: 20
X
X %%BoundingBox: 0 0 612000 792000
X
END_OF_FILE
  if test 53912 -ne `wc -c <'floppy.ps.b'`; then
    echo shar: \"'floppy.ps.b'\" unpacked with wrong size!
  else
    if test -f floppy.ps.a; then
      echo shar: Rebuilding \"'floppy.ps'\" \(104017 characters\)
      cat floppy.ps.a floppy.ps.b > floppy.ps
      if test 104017 -ne `wc -c <'floppy.ps'`; then
        echo shar: \"'floppy.ps'\" rebuilt with the wrong size!
      else 
        rm floppy.ps.a floppy.ps.b
      fi
    fi
  fi
  # end of 'floppy.ps.b'
fi
echo shar: End of archive 2 \(of 5\).
cp /dev/null ark2isdone
MISSING=""
for I in 1 2 3 4 5 ; do
    if test ! -f ark${I}isdone ; then
	MISSING="${MISSING} ${I}"
    fi
done
if test "${MISSING}" = "" ; then
    echo You have unpacked all 5 archives.
    rm -f ark[1-9]isdone
else
    echo You still must unpack the following archives:
    echo "        " ${MISSING}
fi
exit 0
exit 0 # Just in case...
