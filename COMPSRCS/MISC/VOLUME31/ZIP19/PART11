Newsgroups: comp.sources.misc
From: zip-bugs@cs.ucla.edu (Info-ZIP group)
Subject:  v31i103:  zip19 - Info-ZIP portable Zip, version 1.9, Part11/11
Message-ID: <1992Aug23.065039.29774@sparky.imd.sterling.com>
X-Md4-Signature: 31ead4f6a86e82fe02aed8a1e2e3e080
Date: Sun, 23 Aug 1992 06:50:39 GMT
Approved: kent@sparky.imd.sterling.com

Submitted-by: zip-bugs@cs.ucla.edu (Info-ZIP group)
Posting-number: Volume 31, Issue 103
Archive-name: zip19/part11
Supersedes: zip: Volume 23, Issue 88-96
Environment: UNIX, VMS, OS/2, MS-DOS, MACINTOSH, WIN-NT, LINUX, MINIX, XOS, !AMIGA, ATARI, symlink, SGI, DEC, Cray, Convex, Amdahl, Sun, PC

#! /bin/sh
# This is a shell archive.  Remove anything before this line, then feed it
# into a shell via "sh file" or similar.  To overwrite existing files,
# type "sh file -c".
# The tool that generated this appeared in the comp.sources.unix newsgroup;
# send mail to comp-sources-unix@uunet.uu.net if you want that tool.
# Contents:  atari/stzip.prj atari/stzipn.lnk atari/stzips.lnk
#   msdos/zip.prj.UU msdos/zipnote.prj.UU msdos/zipsplit.prj.U
#   revision.h vms/descrip.mms vms/make_gcc.com vms/make_vaxc.com
# Wrapped by kent@sparky on Sun Aug 23 01:00:48 1992
PATH=/bin:/usr/bin:/usr/ucb ; export PATH
echo If this archive is complete, you will see the following message:
echo '          "shar: End of archive 11 (of 11)."'
if test -f 'atari/stzip.prj' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'atari/stzip.prj'\"
else
  echo shar: Extracting \"'atari/stzip.prj'\" \(482 characters\)
  sed "s/^X//" >'atari/stzip.prj' <<'END_OF_FILE'
XZIP.PRG
X.C[-DEXPORT]
X=
X
Xc0.o
Xzip.c        (zip.h, ziperr.h, tailor.h, revision.h)
Xtcstdlib.lib
Xatari.c
Xzipfile.c    (zip.h, ziperr.h, tailor.h)
Xzipup.c      (zip.h, ziperr.h, tailor.h, revision.h)
Xfileio.c     (zip.h, ziperr.h, tailor.h)
Xutil.c       (zip.h, ziperr.h, tailor.h)
Xglobals.c    (zip.h, ziperr.h, tailor.h)
Xdeflate.c    (zip.h, ziperr.h, tailor.h)
Xtrees.c      (zip.h, ziperr.h, tailor.h)
Xbits.c       (zip.h, ziperr.h, tailor.h)
Xtcstdlib.lib
Xtcextlib.lib
Xtctoslib.lib
END_OF_FILE
  if test 482 -ne `wc -c <'atari/stzip.prj'`; then
    echo shar: \"'atari/stzip.prj'\" unpacked with wrong size!
  fi
  # end of 'atari/stzip.prj'
fi
if test -f 'atari/stzipn.lnk' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'atari/stzipn.lnk'\"
else
  echo shar: Extracting \"'atari/stzipn.lnk'\" \(134 characters\)
  sed "s/^X//" >'atari/stzipn.lnk' <<'END_OF_FILE'
X\TC\lib\c0.o
Xatari.o
Xzipnote.o
Xzipfile_.o
Xzipup_.o
Xfileio_.o
Xglobals.o
X\TC\lib\tcstdlib.lib
X\TC\lib\tcextlib.lib
X\TC\lib\tctoslib.lib
END_OF_FILE
  if test 134 -ne `wc -c <'atari/stzipn.lnk'`; then
    echo shar: \"'atari/stzipn.lnk'\" unpacked with wrong size!
  fi
  # end of 'atari/stzipn.lnk'
fi
if test -f 'atari/stzips.lnk' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'atari/stzips.lnk'\"
else
  echo shar: Extracting \"'atari/stzips.lnk'\" \(135 characters\)
  sed "s/^X//" >'atari/stzips.lnk' <<'END_OF_FILE'
X\TC\lib\c0.o
Xatari.o
Xzipsplit.o
Xzipfile_.o
Xzipup_.o
Xfileio_.o
Xglobals.o
X\TC\lib\tcstdlib.lib
X\TC\lib\tcextlib.lib
X\TC\lib\tctoslib.lib
END_OF_FILE
  if test 135 -ne `wc -c <'atari/stzips.lnk'`; then
    echo shar: \"'atari/stzips.lnk'\" unpacked with wrong size!
  fi
  # end of 'atari/stzips.lnk'
fi
if test -f 'msdos/zip.prj.UU' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'msdos/zip.prj.UU'\"
else
  echo shar: Extracting \"'msdos/zip.prj.UU'\" \(572 characters\)
  sed "s/^X//" >'msdos/zip.prj.UU' <<'END_OF_FILE'
Xbegin 666 msdos/zip.prj
XM>FEP+F,@(" @(" @("AZ:7 N:"!Z:7!E<G(N:"!T86EL;W(N:"!R979I<VEO
XM;BYH*0T*>FEP9FEL92YC(" @("AZ:7 N:"!Z:7!E<G(N:"!T86EL;W(N:"D-
XM"GII<'5P+F,@(" @(" H>FEP+F@@>FEP97)R+F@@=&%I;&]R+F@@<F5V:7-I
XM;VXN:"D-"F9I;&5I;RYC(" @(" H>FEP+F@@>FEP97)R+F@@=&%I;&]R+F@I
XM#0IU=&EL+F,@(" @(" @*'II<"YH('II<&5R<BYH('1A:6QO<BYH*0T*9VQO
XM8F%L<RYC(" @("AZ:7 N:"!Z:7!E<G(N:"!T86EL;W(N:"D-"F1E9FQA=&4N
XM8R @(" H>FEP+F@@>FEP97)R+F@@=&%I;&]R+F@I#0IB:71S+F,@(" @(" @
XM*'II<"YH('II<&5R<BYH('1A:6QO<BYH*0T*=')E97,N8R @(" @("AZ:7 N
XA:"!Z:7!E<G(N:"!T86EL;W(N:"D-"FUA=&-H+F]B:@T*
X 
Xend
END_OF_FILE
  if test 572 -ne `wc -c <'msdos/zip.prj.UU'`; then
    echo shar: \"'msdos/zip.prj.UU'\" unpacked with wrong size!
  else
    echo shar: Uudecoding \"'msdos/zip.prj'\" \(393 characters\)
    cat msdos/zip.prj.UU | uudecode
    if test 393 -ne `wc -c <'msdos/zip.prj'`; then
      echo shar: \"'msdos/zip.prj'\" uudecoded with wrong size!
    else
      rm msdos/zip.prj.UU
    fi
  fi
  # end of 'msdos/zip.prj.UU'
fi
if test -f 'msdos/zipnote.prj.UU' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'msdos/zipnote.prj.UU'\"
else
  echo shar: Extracting \"'msdos/zipnote.prj.UU'\" \(336 characters\)
  sed "s/^X//" >'msdos/zipnote.prj.UU' <<'END_OF_FILE'
Xbegin 666 msdos/zipnote.prj
XM>FEP;F]T92YC"2AZ:7 N:"!Z:7!E<G(N:"!T86EL;W(N:"D-"GII<&9I;&4N
XM8PDH>FEP+F@@>FEP97)R+F@@=&%I;&]R+F@I#0IZ:7!U<"YC"0DH>FEP+F@@
XM>FEP97)R+F@@=&%I;&]R+F@I#0IF:6QE:6\N8PDH>FEP+F@@>FEP97)R+F@@
XM=&%I;&]R+F@I#0IG;&]B86QS+F,)*'II<"YH('II<&5R<BYH('1A:6QO<BYH
XF*0T*=71I;"YC"0DH>FEP+F@@>FEP97)R+F@@=&%I;&]R+F@I#0IA
X 
Xend
END_OF_FILE
  if test 336 -ne `wc -c <'msdos/zipnote.prj.UU'`; then
    echo shar: \"'msdos/zipnote.prj.UU'\" unpacked with wrong size!
  else
    echo shar: Uudecoding \"'msdos/zipnote.prj'\" \(218 characters\)
    cat msdos/zipnote.prj.UU | uudecode
    if test 218 -ne `wc -c <'msdos/zipnote.prj'`; then
      echo shar: \"'msdos/zipnote.prj'\" uudecoded with wrong size!
    else
      rm msdos/zipnote.prj.UU
    fi
  fi
  # end of 'msdos/zipnote.prj.UU'
fi
if test -f 'msdos/zipsplit.prj.U' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'msdos/zipsplit.prj.U'\"
else
  echo shar: Extracting \"'msdos/zipsplit.prj.U'\" \(337 characters\)
  sed "s/^X//" >'msdos/zipsplit.prj.U' <<'END_OF_FILE'
Xbegin 666 msdos/zipsplit.prj
XM>FEP<W!L:70N8PDH>FEP+F@@>FEP97)R+F@@=&%I;&]R+F@I#0IZ:7!F:6QE
XM+F,)*'II<"YH('II<&5R<BYH('1A:6QO<BYH*0T*>FEP=7 N8PD)*'II<"YH
XM('II<&5R<BYH('1A:6QO<BYH*0T*9FEL96EO+F,)*'II<"YH('II<&5R<BYH
XM('1A:6QO<BYH*0T*9VQO8F%L<RYC"2AZ:7 N:"!Z:7!E<G(N:"!T86EL;W(N
XG:"D-"G5T:6PN8PD)*'II<"YH('II<&5R<BYH('1A:6QO<BYH*0T*
X 
Xend
END_OF_FILE
  if test 337 -ne `wc -c <'msdos/zipsplit.prj.U'`; then
    echo shar: \"'msdos/zipsplit.prj.U'\" unpacked with wrong size!
  else
    echo shar: Uudecoding \"'msdos/zipsplit.prj'\" \(219 characters\)
    cat msdos/zipsplit.prj.U | uudecode
    if test 219 -ne `wc -c <'msdos/zipsplit.prj'`; then
      echo shar: \"'msdos/zipsplit.prj'\" uudecoded with wrong size!
    else
      rm msdos/zipsplit.prj.U
    fi
  fi
  # end of 'msdos/zipsplit.prj.U'
fi
if test -f 'revision.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'revision.h'\"
else
  echo shar: Extracting \"'revision.h'\" \(1470 characters\)
  sed "s/^X//" >'revision.h' <<'END_OF_FILE'
X/*
X
X Copyright (C) 1990-1992 Mark Adler, Richard B. Wales, Jean-loup Gailly,
X Kai Uwe Rommel and Igor Mandrichenko.
X Permission is granted to any individual or institution to use, copy, or
X redistribute this software so long as all of the original files are included
X unmodified, that it is not sold for profit, and that this copyright notice
X is retained.
X
X*/
X
X/*
X *  revision.h by Mark Adler.
X */
X
X#define REVISION 19
X#define REVDATE "Aug 20th 1992"
X
X/* Copyright notice for binary executables--this notice only applies to
X * those (zip, zipcloak, zipsplit, and zipnote), not to this file
X * (revision.h).
X */
X
X#ifndef NOCPYRT
Xchar *copyright[] = {
X#ifdef VMS
X"Copyright (C) 1990-1992 Mark Adler, Richard B. Wales, Jean-loup Gailly,",
X"Kai Uwe Rommel and Igor Mandrichenko. Type '%s -L' for the software license.",
X#else
X"Copyright (C) 1990-1992 Mark Adler, Richard B. Wales, Jean-loup Gailly",
X"and Kai Uwe Rommel. Type '%s -L' for the software License.",
X#endif
X};
Xchar *disclaimer[] = {
X"",
X"Permission is granted to any individual or institution to use, copy, or",
X"redistribute this executable so long as it is not modified and that it is",
X"not sold for profit.",
X"",
X"LIKE ANYTHING ELSE THAT'S FREE, ZIP AND ITS ASSOCIATED UTILITIES ARE",
X"PROVIDED AS IS AND COME WITH NO WARRANTY OF ANY KIND, EITHER EXPRESSED OR",
X"IMPLIED. IN NO EVENT WILL THE COPYRIGHT HOLDERS BE LIABLE FOR ANY DAMAGES",
X"RESULTING FROM THE USE OF THIS SOFTWARE."
X};
X#endif /* !NOCPYRT */
END_OF_FILE
  if test 1470 -ne `wc -c <'revision.h'`; then
    echo shar: \"'revision.h'\" unpacked with wrong size!
  fi
  # end of 'revision.h'
fi
if test -f 'vms/descrip.mms' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'vms/descrip.mms'\"
else
  echo shar: Extracting \"'vms/descrip.mms'\" \(1449 characters\)
  sed "s/^X//" >'vms/descrip.mms' <<'END_OF_FILE'
X# VMS Makefile for Zip, ZipNote and ZipSplit
X
XCDEB = !	/DEBUG/NOOPT
XLDEB = !	/DEBUG
X
XOBJZ = zip.obj,zipfile.obj,zipup.obj,fileio.obj,util.obj,globals.obj,-
X	crypt.obj,vms.obj,VMSmunch.obj
XOBJI = deflate.obj,trees.obj,bits.obj
XOBJN = zipnote.obj,zipfile.obj_,zipup.obj_,fileio.obj_,globals.obj,-
X	util_.obj_,vmsmunch.obj
XOBJS = zipsplit.obj,zipfile.obj_,zipup.obj_,fileio.obj_,globals.obj,-
X	util_.obj_,vmsmunch.obj
XOBJC = zipcloak.obj,zipfile.obj_,zipup.obj_,fileio.OBJ_,util_.obj,-
X		crypt.obj_,globals.obj,vmsmunch.obj
X
XCC	=	cc $(CDEB)
X
XLINK	=	link $(LDEB)
X
X.suffixes
X.suffixes : .obj .obj_ .c .exe
X
X.c.obj_ :
X	$(CC)/define=("UTIL")/OBJ=$(mms$target) $(mms$source)
X.c.obj :
X	$(cc)/OBJ=$(mms$target) $(mms$source)
X.obj.exe :
X	$(LINK)/exe=$(mms$target) vaxclib.opt/opt,$(mms$source)
X
X# rules for zip, zipnote, zipsplit, and zip.doc.
X
Xdefault :	zip.exe,zipnote.exe,zipsplit.exe
X @ !
X
Xzipfile.obj_ :	zipfile.c
Xzipup.obj_   :	zipup.c
Xfileio.obj_  :	fileio.c
Xutil.obj_    :	util.c
X
X$(OBJZ) : zip.h,ziperr.h,tailor.h
X$(OBJI) : zip.h,ziperr.h,tailor.h
X$(OBJN) : zip.h,ziperr.h,tailor.h
X$(OBJS) : zip.h,ziperr.h,tailor.h
X
Xzip.obj,zipup.obj,zipnote.obj,zipsplit.obj : revision.h
X
Xzipfile.obj, fileio.obj, VMSmunch.obj : VMSmunch.h
X
Xzip.exe : $(OBJZ),$(OBJI)
X	$(LINK)/exe=zip.exe vaxclib.opt/opt,$(OBJZ),$(OBJI)
X
Xzipnote.exe : $(OBJN)
X	$(LINK)/exe=zipnote.exe vaxclib.opt/opt,$(OBJN)
X
Xzipsplit.exe : $(OBJS)
X	$(LINK)/exe=zipsplit.exe vaxclib.opt/opt,$(OBJS)
END_OF_FILE
  if test 1449 -ne `wc -c <'vms/descrip.mms'`; then
    echo shar: \"'vms/descrip.mms'\" unpacked with wrong size!
  fi
  # end of 'vms/descrip.mms'
fi
if test -f 'vms/make_gcc.com' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'vms/make_gcc.com'\"
else
  echo shar: Extracting \"'vms/make_gcc.com'\" \(1677 characters\)
  sed "s/^X//" >'vms/make_gcc.com' <<'END_OF_FILE'
X$ !
X$ !     "Makefile" for VMS versions of Zip, ZipCloak, ZipNote,
X$ !      and ZipSplit (stolen from Unzip)
X$ !
X$ !      IMPORTANT NOTE: do not forget to set the symbols as said below
X$ !                      in the Symbols section.
X$ !
X$ set verify    ! like "echo on", eh?
X$ !
X$ !------------------------------- Zip section --------------------------------
X$ !
X$ ! For crypt version, use version of make_gcc.com which in the zcrypt
X$ ! distribution.
X$ gcc zip
X$ gcc zipfile
X$ gcc zipup
X$ gcc fileio
X$ gcc util
X$ gcc deflate
X$ gcc globals
X$ gcc trees
X$ gcc bits
X$ gcc vms
X$ gcc VMSmunch
X$ link zip,zipfile,zipup,fileio,util,deflate,globals,trees,bits, -
X   vms,VMSmunch, gnu_cc:[000000]gcclib.olb/lib, sys$input:/opt
Xsys$share:vaxcrtl.exe/shareable
X$ !
X$ !-------------------------- Zip utilities section ---------------------------
X$ !
X$ gcc /def=UTIL zipnote
X$ gcc /def=UTIL zipsplit
X$ gcc /def=UTIL /obj=zipfile_.obj zipfile
X$ gcc /def=UTIL /obj=zipup_.obj zipup
X$ gcc /def=UTIL /obj=fileio_.obj fileio
X$ gcc /def=UTIL /obj=util_.obj util
X$ link zipnote, zipfile_, zipup_, fileio_, util_, globals, VMSmunch, -
X   sys$input:/opt
Xsys$share:vaxcrtl.exe/shareable
X$ link zipsplit, zipfile_, zipup_, fileio_, util_, globals, VMSmunch, -
X   gnu_cc:[000000]gcclib.olb/lib, sys$input:/opt
Xsys$share:vaxcrtl.exe/shareable
X$ !
X$ !----------------------------- Symbols section ------------------------------
X$ !
X$ ! Set up symbols for the various executables.  Edit the example below,
X$ ! changing "disk:[directory]" as appropriate.
X$ !
X$ zip		== "$disk:[directory]zip.exe"
X$ zipnote	== "$disk:[directory]zipnote.exe"
X$ zipsplit	== "$disk:[directory]zipsplit.exe"
X$ !
X$ set noverify
END_OF_FILE
  if test 1677 -ne `wc -c <'vms/make_gcc.com'`; then
    echo shar: \"'vms/make_gcc.com'\" unpacked with wrong size!
  fi
  # end of 'vms/make_gcc.com'
fi
if test -f 'vms/make_vaxc.com' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'vms/make_vaxc.com'\"
else
  echo shar: Extracting \"'vms/make_vaxc.com'\" \(1444 characters\)
  sed "s/^X//" >'vms/make_vaxc.com' <<'END_OF_FILE'
X$ !
X$ !     "Makefile" for VMS versions of Zip, ZipNote,
X$ !     and ZipSplit (stolen from Unzip)
X$ !
X$ !      IMPORTANT NOTE: do not forget to set the symbols as said below
X$ !                      in the Symbols section.
X$ !
X$ set verify    ! like "echo on", eh?
X$ !
X$ !------------------------------- Zip section --------------------------------
X$ !
X$ cc zip, zipfile, zipup, fileio, util, deflate, globals,-
X	trees, bits, vms, VMSmunch
X$ link zip, zipfile, zipup, fileio, util, deflate, globals,-
X	trees, bits, vms, VMSmunch, sys$input:/opt
Xsys$share:vaxcrtl.exe/shareable
X$ !
X$ !-------------------------- Zip utilities section ---------------------------
X$ !
X$ cc /def=UTIL /obj=zipfile_.obj zipfile.c
X$ cc /def=UTIL /obj=zipup_.obj zipup.c
X$ cc /def=UTIL /obj=fileio_.obj fileio.c
X$ cc /def=UTIL /obj=util_.obj util.c
X$ cc zipnote, zipsplit
X$ link zipnote, zipfile_, zipup_, fileio_, util_, globals, VMSmunch,-
X	sys$input:/opt
Xsys$share:vaxcrtl.exe/shareable
X$ link zipsplit, zipfile_, zipup_, fileio_, util_, globals, VMSmunch,-
X	sys$input:/opt
Xsys$share:vaxcrtl.exe/shareable
X$ !
X$ !----------------------------- Symbols section ------------------------------
X$ !
X$ ! Set up symbols for the various executables.  Edit the example below,
X$ ! changing "disk:[directory]" as appropriate.
X$ !
X$ zip		== "$disk:[directory]zip.exe"
X$ zipnote	== "$disk:[directory]zipnote.exe"
X$ zipsplit	== "$disk:[directory]zipsplit.exe"
X$ !
X$ set noverify
END_OF_FILE
  if test 1444 -ne `wc -c <'vms/make_vaxc.com'`; then
    echo shar: \"'vms/make_vaxc.com'\" unpacked with wrong size!
  fi
  # end of 'vms/make_vaxc.com'
fi
echo shar: End of archive 11 \(of 11\).
cp /dev/null ark11isdone
MISSING=""
for I in 1 2 3 4 5 6 7 8 9 10 11 ; do
    if test ! -f ark${I}isdone ; then
	MISSING="${MISSING} ${I}"
    fi
done
if test "${MISSING}" = "" ; then
    echo You have unpacked all 11 archives.
    rm -f ark[1-9]isdone ark[1-9][0-9]isdone
else
    echo You still must unpack the following archives:
    echo "        " ${MISSING}
fi
exit 0
exit 0 # Just in case...
