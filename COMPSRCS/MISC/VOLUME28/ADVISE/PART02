Newsgroups: comp.sources.misc
From: ag@monique.bubble.org (Keith Gabryelski)
Subject:  v28i071:  advise - Attach to another user, v2.0, Part02/02
Message-ID: <1992Feb24.041709.15810@sparky.imd.sterling.com>
X-Md4-Signature: c9753e11db630d914a99867c4d8023fc
Date: Mon, 24 Feb 1992 04:17:09 GMT
Approved: kent@sparky.imd.sterling.com

Submitted-by: ag@monique.bubble.org (Keith Gabryelski)
Posting-number: Volume 28, Issue 71
Archive-name: advise/part02
Environment: SunOS, SYSVR4i386

#! /bin/sh
# into a shell via "sh file" or similar.  To overwrite existing files,
# type "sh file -c".
# The tool that generated this appeared in the comp.sources.unix newsgroup;
# send mail to comp-sources-unix@uunet.uu.net if you want that tool.
# Contents:  INSTALL advise.exec advise.id/Master advise.id/Node
#   advise.id/System advmod.id/Master advmod.id/System patchlevel.h
# Wrapped by kent@sparky on Sun Feb 23 21:54:18 1992
PATH=/bin:/usr/bin:/usr/ucb ; export PATH
echo If this archive is complete, you will see the following message:
echo '          "shar: End of archive 2 (of 2)."'
if test -f 'INSTALL' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'INSTALL'\"
else
  echo shar: Extracting \"'INSTALL'\" \(649 characters\)
  sed "s/^X//" >'INSTALL' <<'END_OF_FILE'
X
XHow to install advise for SVR4 i386 architecture:
X
Xcp Makefile.SVR4i386 Makefile
X
Xedit Makefile to reflect your local preferences (BINDIR,MANDIR,MANEXT,etc..)
X
Xmake install
X
Xrebuild the kernel with "/etc/conf/bin/idbuild"
X
Xreboot the system.
X
X------------------------------------------------------------------------------
X
XHow to install advise for SunOS 4.1 (sun4c architecture):
X
Xcp Makefile.SUNOS Makefile
X
Xedit Makefile to reflect your local preferences (BINDIR,MANDIR,MANEXT,etc..)
X
Xin the advise source directory, "make install"
X
Xadd the suggested line to /etc/rc.local if you wish to have the driver
Xautomatically loaded at system startup.
X
END_OF_FILE
  if test 649 -ne `wc -c <'INSTALL'`; then
    echo shar: \"'INSTALL'\" unpacked with wrong size!
  fi
  # end of 'INSTALL'
fi
if test -f 'advise.exec' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'advise.exec'\"
else
  echo shar: Extracting \"'advise.exec'\" \(179 characters\)
  sed "s/^X//" >'advise.exec' <<'END_OF_FILE'
X#!/bin/sh
X
Xif [ "$4" -gt "0" ]; then
X
X	devnode=/dev/advise
X
X	/bin/rm -f $devnode
X	umask 077
X# 37 is the clone device's major device number
X	set -x
X	/etc/mknod $devnode c 37 $4
Xfi
END_OF_FILE
  if test 179 -ne `wc -c <'advise.exec'`; then
    echo shar: \"'advise.exec'\" unpacked with wrong size!
  fi
  chmod +x 'advise.exec'
  # end of 'advise.exec'
fi
if test -f 'advise.id/Master' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'advise.id/Master'\"
else
  echo shar: Extracting \"'advise.id/Master'\" \(33 characters\)
  sed "s/^X//" >'advise.id/Master' <<'END_OF_FILE'
Xadvise	-	Sciof	advise	0	0	1	1	-1
END_OF_FILE
  if test 33 -ne `wc -c <'advise.id/Master'`; then
    echo shar: \"'advise.id/Master'\" unpacked with wrong size!
  fi
  # end of 'advise.id/Master'
fi
if test -f 'advise.id/Node' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'advise.id/Node'\"
else
  echo shar: Extracting \"'advise.id/Node'\" \(30 characters\)
  sed "s/^X//" >'advise.id/Node' <<'END_OF_FILE'
Xclone	advise	c	advise	0	0	600
END_OF_FILE
  if test 30 -ne `wc -c <'advise.id/Node'`; then
    echo shar: \"'advise.id/Node'\" unpacked with wrong size!
  fi
  # end of 'advise.id/Node'
fi
if test -f 'advise.id/System' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'advise.id/System'\"
else
  echo shar: Extracting \"'advise.id/System'\" \(25 characters\)
  sed "s/^X//" >'advise.id/System' <<'END_OF_FILE'
Xadvise	Y	1	0	0	0	0	0	0	0
END_OF_FILE
  if test 25 -ne `wc -c <'advise.id/System'`; then
    echo shar: \"'advise.id/System'\" unpacked with wrong size!
  fi
  # end of 'advise.id/System'
fi
if test -f 'advmod.id/Master' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'advmod.id/Master'\"
else
  echo shar: Extracting \"'advmod.id/Master'\" \(32 characters\)
  sed "s/^X//" >'advmod.id/Master' <<'END_OF_FILE'
Xadvmod	-	Siof	advmod	0	0	0	1	-1
END_OF_FILE
  if test 32 -ne `wc -c <'advmod.id/Master'`; then
    echo shar: \"'advmod.id/Master'\" unpacked with wrong size!
  fi
  # end of 'advmod.id/Master'
fi
if test -f 'advmod.id/System' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'advmod.id/System'\"
else
  echo shar: Extracting \"'advmod.id/System'\" \(25 characters\)
  sed "s/^X//" >'advmod.id/System' <<'END_OF_FILE'
Xadvmod	Y	1	0	0	0	0	0	0	0
END_OF_FILE
  if test 25 -ne `wc -c <'advmod.id/System'`; then
    echo shar: \"'advmod.id/System'\" unpacked with wrong size!
  fi
  # end of 'advmod.id/System'
fi
if test -f 'patchlevel.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'patchlevel.h'\"
else
  echo shar: Extracting \"'patchlevel.h'\" \(20 characters\)
  sed "s/^X//" >'patchlevel.h' <<'END_OF_FILE'
X#define version 2.0
END_OF_FILE
  if test 20 -ne `wc -c <'patchlevel.h'`; then
    echo shar: \"'patchlevel.h'\" unpacked with wrong size!
  fi
  # end of 'patchlevel.h'
fi
echo shar: End of archive 2 \(of 2\).
cp /dev/null ark2isdone
MISSING=""
for I in 1 2 ; do
    if test ! -f ark${I}isdone ; then
	MISSING="${MISSING} ${I}"
    fi
done
if test "${MISSING}" = "" ; then
    echo You have unpacked both archives.
    rm -f ark[1-9]isdone
else
    echo You still must unpack the following archives:
    echo "        " ${MISSING}
fi
exit 0
exit 0 # Just in case...
