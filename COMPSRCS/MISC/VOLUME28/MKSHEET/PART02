Newsgroups: comp.sources.misc
From: slocum@orion.ssdc.honeywell.com (Brett Slocum)
Subject:  v28i058:  mksheet - GURPS PS character sheet maker v2.0, Part02/04
Message-ID: <1992Feb18.161447.25801@sparky.imd.sterling.com>
X-Md4-Signature: f3f89caeed5fa6c4346e6242aee52bfb
Date: Tue, 18 Feb 1992 16:14:47 GMT
Approved: kent@sparky.imd.sterling.com

Submitted-by: slocum@orion.ssdc.honeywell.com (Brett Slocum)
Posting-number: Volume 28, Issue 58
Archive-name: mksheet/part02
Environment: csh, postscript

#! /bin/sh
# This is a shell archive.  Remove anything before this line, then unpack
# it by saving it into a file and typing "sh file".  To overwrite existing
# files, type "sh file -c".  You can also feed this as standard input via
# unshar, or by typing "sh <file", e.g..  If this archive is complete, you
# will see the following message at the end:
#		"End of archive 2 (of 4)."
# Contents:  mksheet sheet.template
# Wrapped by slocum@color on Fri Feb 14 12:31:15 1992
PATH=/bin:/usr/bin:/usr/ucb ; export PATH
if test -f 'mksheet' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'mksheet'\"
else
echo shar: Extracting \"'mksheet'\" \(31557 characters\)
sed "s/^X//" >'mksheet' <<'END_OF_FILE'
X#! /bin/csh -f
X#
X# NAME
X#    mksheet - make GURPS character sheet
X#
X# VERSION 2.0
X#
X# USAGE
X#    mksheet <file root>
X#
X# AUTHORS
X#    Of mksheet, modifications to Postscript character sheet, and default.in :
X#       Brett Slocum <slocum@ssdc.honeywell.com>
X#       Honeywell Sensor and System Development Center
X#       Minneapolis MN USA
X#
X#    Original GURPS character sheet 
X#       Copyright 1988 by Steve Jackson Games, Incorporated. 
X#
X#    Original Postscript version of character sheet 
X#       by Mats Persson <matpe@majestix.ida.liu.se>
X#       CIS Dept, Univ of Linkoping, Sweden
X#
X#    Extensions by Ken Fishkin (fishkin.parc@xerox.com)
X#	and Graham Hamilton (kgh@eng.sun.com) #	to
X#	-) calculate thrust/swing damage
X#	-) calculate move/speed
X#	-) calculate skill total
X#	-) calculate attribute total
X#	-) calculate skill level based on cost and difficulty.
X#
X#    Further Extensions (2.0) based on Fishkin & Hamilton extensions:
X#        by Brett Slocum
X#       (1)  calculate total item weight, total advantages and disadvantages 
X#            and final total, allowing fractions
X#       (2)  changed above authors use of 'dc' to 'bc' to handle negative
X#            values for disadvantages
X#       (3)  removed 'rounding up' function of skill cost
X#       (4)  handle Hobby skills
X#       (5)  handle generic skill bonuses, such as defaulting from other skills,
X#            bonuses from advantages, like Mathematical Ability, or attribute
X#            bonuses such as +2 Guns for IQ.
X#       (6)  handle Running skill, Sprint, Vision, Hearing, and Taste/Smell values.
X#
X# DESCRIPTION
X#    Makes a GURPS character sheet, producing a file that can be printed 
X#    on a postscript printer such as an Apple Laserwriter. 
X#
X#    The expected input file name is "<file root>.in".
X#
X#    The result is put in file "<file root>.ps".
X#
X#    To create a blank character sheet, use the blank.in and blank2.in files
X#    as input (i.e. "mksheet blank" or "mksheet2 blank2").
X#
X# FILES
X#    <file root>.in   - input file
X#    <file root>.ps   - output file
X#    sheet.template   - PostScript character sheet template
X#    default.in       - file of default parameters
X#    skill.sh		- skill level calculation
X
Xif ( $#argv != 1) goto usage
X
X# file value
X
Xset SHEET=$1
X
X# input file
X
Xsource default.in
Xsource $SHEET.in
Xrm -f $SHEET.ps
X
X# calculation section
X# Do Not Touch beyond this point
X
Xset ATTRIBUTE_COSTS=(-80 -70 -60 -50 -40 -30 -20 -15 -10 0 10 20 30 45 60 80 100 125 150 175 200 225 250 275 300)
X
Xif ($ST != "") then
X
X@ ATTRIB_TOTAL = $ATTRIBUTE_COSTS[$ST] + $ATTRIBUTE_COSTS[$DX] + $ATTRIBUTE_COSTS[$IQ] + $ATTRIBUTE_COSTS[$HT]
X
Xswitch ($ST)
Xcase 5:
X    set THRUST = '1d-5'
X    set SWING = '1d-5'
X    breaksw
Xcase 6:
X    set THRUST = '1d-4'
X    set SWING = '1d-4'
X    breaksw
Xcase 7:
X    set THRUST = '1d-3'
X    set SWING = '1d-3'
X    breaksw
Xcase 8:
X    set THRUST = '1d-3'
X    set SWING = '1d-2'
X    breaksw
Xcase 9:
X    set THRUST = '1d-2'
X    set SWING = '1d-1'
X    breaksw
Xcase 10:
X    set THRUST = '1d-2'
X    set SWING = '1d'
X    breaksw
Xcase 11:
X    set THRUST = '1d-1'
X    set SWING = '1d+1'
X    breaksw
Xcase 12:
X    set THRUST = '1d-1'
X    set SWING = '1d+2'
X    breaksw
Xcase 13:
X    set THRUST = '1d'
X    set SWING = '2d-1'
X    breaksw
Xcase 14:
X    set THRUST = '1d'
X    set SWING = '2d'
X    breaksw
Xcase 15:
X    set THRUST = '1d+1'
X    set SWING = '2d+1'
X    breaksw
Xcase 16:
X    set THRUST = '1d+1'
X    set SWING = '2d+2'
X    breaksw
Xcase 17:
X    set THRUST = '1d+2'
X    set SWING = '3d-1'
X    breaksw
Xcase 18:
X    set THRUST = '1d+2'
X    set SWING = '3d'
X    breaksw
Xcase 19:
X    set THRUST = '2d-1'
X    set SWING = '3d+1'
X    breaksw
Xcase 20:
X    set THRUST = '2d-1'
X    set SWING = '3d+2'
X    breaksw
Xdefault:
X    set THRUST = '0'
X    set SWING = '0'
X    breaksw
Xendsw
X
X@ TEMP = $HT + $DX
X@ MOVE = $TEMP / 4
X@ DELTA = $TEMP - $MOVE * 4
X@ DELTA *= 25
Xset SPEED = $MOVE
Xif ($DELTA != 0) set SPEED = ${SPEED}"."$DELTA
X
Xset DODGE=$MOVE
Xif ($DODGE_OVERRIDE != 0) then
X     set DODGE=$DODGE_OVERRIDE
Xendif
X
X @ STX2 = $ST * 2
X @ STX4 = $ST * 4
X @ STX6 = $ST * 6
X @ STX12 = $ST * 12
X @ STX20 = $ST * 20
X @ TOTAL_PD = $ARM_PD + $SHIELD_PD + $OTHER_PD
X @ TOTAL_DR = $ARM_DR + $OTHER_DR1 + $OTHER_DR2
Xendif # if ($ST != "")
X
X  set ADV_TOTAL=0
Xif ($ADV_COST_1 != "") set ADV_TOTAL=`echo $ADV_TOTAL + $ADV_COST_1 | bc`
Xif ($ADV_COST_2 != "") set ADV_TOTAL=`echo $ADV_TOTAL + $ADV_COST_2 | bc`
Xif ($ADV_COST_3 != "") set ADV_TOTAL=`echo $ADV_TOTAL + $ADV_COST_3 | bc`
Xif ($ADV_COST_4 != "") set ADV_TOTAL=`echo $ADV_TOTAL + $ADV_COST_4 | bc`
Xif ($ADV_COST_5 != "") set ADV_TOTAL=`echo $ADV_TOTAL + $ADV_COST_5 | bc`
X
X  set DIS_TOTAL=0
Xif ($DIS_COST_1 != "") set DIS_TOTAL=`echo $DIS_TOTAL + $DIS_COST_1  | bc`
Xif ($DIS_COST_2 != "") set DIS_TOTAL=`echo $DIS_TOTAL + $DIS_COST_2  | bc`
Xif ($DIS_COST_3 != "") set DIS_TOTAL=`echo $DIS_TOTAL + $DIS_COST_3  | bc`
Xif ($DIS_COST_4 != "") set DIS_TOTAL=`echo $DIS_TOTAL + $DIS_COST_4  | bc`
Xif ($DIS_COST_5 != "") set DIS_TOTAL=`echo $DIS_TOTAL + $DIS_COST_5  | bc`
X
X set QUIRK_TOTAL = 0
X if ("$QUIRK_1" != "") then
X     @ QUIRK_TOTAL++
X endif
X if ("$QUIRK_2" != "") then
X     @ QUIRK_TOTAL++
X endif
X if ("$QUIRK_3" != "") then
X     @ QUIRK_TOTAL++
X endif
X if ("$QUIRK_4" != "") then
X     @ QUIRK_TOTAL++
X endif
X if ("$QUIRK_5" != "") then
X     @ QUIRK_TOTAL++
X endif
X @ QUIRK_TOTAL = - $QUIRK_TOTAL
X
X
X# Calculate skill totals.  Because of fractions, we resort to "bc" here.   KGH 10/26/91
X 
Xset SKILL_TOTAL=0
Xif ($SKILLCOST_1 != "") set SKILL_TOTAL=`echo $SKILL_TOTAL + $SKILLCOST_1 | bc`
Xif ($SKILLCOST_2 != "") set SKILL_TOTAL=`echo $SKILL_TOTAL + $SKILLCOST_2 | bc`
Xif ($SKILLCOST_3 != "") set SKILL_TOTAL=`echo $SKILL_TOTAL + $SKILLCOST_3 | bc`
Xif ($SKILLCOST_4 != "") set SKILL_TOTAL=`echo $SKILL_TOTAL + $SKILLCOST_4 | bc`
Xif ($SKILLCOST_5 != "") set SKILL_TOTAL=`echo $SKILL_TOTAL + $SKILLCOST_5 | bc`
Xif ($SKILLCOST_6 != "") set SKILL_TOTAL=`echo $SKILL_TOTAL + $SKILLCOST_6 | bc`
Xif ($SKILLCOST_7 != "") set SKILL_TOTAL=`echo $SKILL_TOTAL + $SKILLCOST_7 | bc`
Xif ($SKILLCOST_8 != "") set SKILL_TOTAL=`echo $SKILL_TOTAL + $SKILLCOST_8 | bc`
Xif ($SKILLCOST_9 != "") set SKILL_TOTAL=`echo $SKILL_TOTAL + $SKILLCOST_9 | bc`
Xif ($SKILLCOST_10 != "") set SKILL_TOTAL=`echo $SKILL_TOTAL + $SKILLCOST_10 | bc`
Xif ($SKILLCOST_11 != "") set SKILL_TOTAL=`echo $SKILL_TOTAL + $SKILLCOST_11 | bc`
Xif ($SKILLCOST_12 != "") set SKILL_TOTAL=`echo $SKILL_TOTAL + $SKILLCOST_12 | bc`
Xif ($SKILLCOST_13 != "") set SKILL_TOTAL=`echo $SKILL_TOTAL + $SKILLCOST_13 | bc`
Xif ($SKILLCOST_14 != "") set SKILL_TOTAL=`echo $SKILL_TOTAL + $SKILLCOST_14 | bc`
Xif ($SKILLCOST_15 != "") set SKILL_TOTAL=`echo $SKILL_TOTAL + $SKILLCOST_15 | bc`
Xif ($SKILLCOST_16 != "") set SKILL_TOTAL=`echo $SKILL_TOTAL + $SKILLCOST_16 | bc`
Xif ($SKILLCOST_17 != "") set SKILL_TOTAL=`echo $SKILL_TOTAL + $SKILLCOST_17 | bc`
Xif ($SKILLCOST_18 != "") set SKILL_TOTAL=`echo $SKILL_TOTAL + $SKILLCOST_18 | bc`
Xif ($SKILLCOST_19 != "") set SKILL_TOTAL=`echo $SKILL_TOTAL + $SKILLCOST_19 | bc`
Xif ($SKILLCOST_20 != "") set SKILL_TOTAL=`echo $SKILL_TOTAL + $SKILLCOST_20 | bc`
Xif ($SKILLCOST_21 != "") set SKILL_TOTAL=`echo $SKILL_TOTAL + $SKILLCOST_21 | bc`
Xif ($SKILLCOST_22 != "") set SKILL_TOTAL=`echo $SKILL_TOTAL + $SKILLCOST_22 | bc`
Xif ($SKILLCOST_23 != "") set SKILL_TOTAL=`echo $SKILL_TOTAL + $SKILLCOST_23 | bc`
Xif ($SKILLCOST_24 != "") set SKILL_TOTAL=`echo $SKILL_TOTAL + $SKILLCOST_24 | bc`
Xif ($SKILLCOST_25 != "") set SKILL_TOTAL=`echo $SKILL_TOTAL + $SKILLCOST_25 | bc`
Xif ($SKILLCOST_26 != "") set SKILL_TOTAL=`echo $SKILL_TOTAL + $SKILLCOST_26 | bc`
Xif ($SKILLCOST_27 != "") set SKILL_TOTAL=`echo $SKILL_TOTAL + $SKILLCOST_27 | bc`
Xif ($SKILLCOST_28 != "") set SKILL_TOTAL=`echo $SKILL_TOTAL + $SKILLCOST_28 | bc`
Xif ($SKILLCOST_29 != "") set SKILL_TOTAL=`echo $SKILL_TOTAL + $SKILLCOST_29 | bc`
Xif ($SKILLCOST_30 != "") set SKILL_TOTAL=`echo $SKILL_TOTAL + $SKILLCOST_30 | bc`
Xif ($SKILLCOST_31 != "") set SKILL_TOTAL=`echo $SKILL_TOTAL + $SKILLCOST_31 | bc`
Xif ($SKILLCOST_32 != "") set SKILL_TOTAL=`echo $SKILL_TOTAL + $SKILLCOST_32 | bc`
Xif ($SKILLCOST_33 != "") set SKILL_TOTAL=`echo $SKILL_TOTAL + $SKILLCOST_33 | bc`
Xif ($SKILLCOST_34 != "") set SKILL_TOTAL=`echo $SKILL_TOTAL + $SKILLCOST_34 | bc`
Xif ($SKILLCOST_35 != "") set SKILL_TOTAL=`echo $SKILL_TOTAL + $SKILLCOST_35 | bc`
Xif ($SKILLCOST_36 != "") set SKILL_TOTAL=`echo $SKILL_TOTAL + $SKILLCOST_36 | bc`
Xif ($SKILLCOST_37 != "") set SKILL_TOTAL=`echo $SKILL_TOTAL + $SKILLCOST_37 | bc`
Xif ($SKILLCOST_38 != "") set SKILL_TOTAL=`echo $SKILL_TOTAL + $SKILLCOST_38 | bc`
Xif ($SKILLCOST_39 != "") set SKILL_TOTAL=`echo $SKILL_TOTAL + $SKILLCOST_39 | bc`
Xif ($SKILLCOST_40 != "") set SKILL_TOTAL=`echo $SKILL_TOTAL + $SKILLCOST_40 | bc`
Xif ($SKILLCOST_41 != "") set SKILL_TOTAL=`echo $SKILL_TOTAL + $SKILLCOST_41 | bc`
Xif ($SKILLCOST_42 != "") set SKILL_TOTAL=`echo $SKILL_TOTAL + $SKILLCOST_42 | bc`
Xif ($SKILLCOST_43 != "") set SKILL_TOTAL=`echo $SKILL_TOTAL + $SKILLCOST_43 | bc`
Xif ($SKILLCOST_44 != "") set SKILL_TOTAL=`echo $SKILL_TOTAL + $SKILLCOST_44 | bc`
Xif ($SKILLCOST_45 != "") set SKILL_TOTAL=`echo $SKILL_TOTAL + $SKILLCOST_45 | bc`
Xif ($SKILLCOST_46 != "") set SKILL_TOTAL=`echo $SKILL_TOTAL + $SKILLCOST_46 | bc`
X
X# Calculate skill levels, based on skill types and skill costs.       KGH 10/27/91
X
Xif (($?SKILLTYPE_1) && ($?SKILLLEV_1)) eval `skill.sh $SKILLTYPE_1 $SKILLCOST_1 $DX $IQ $HT $ST $SKILLMISC_1 $SKILLBONUS_1 SKILLLEV_1`
Xif (($?SKILLTYPE_2) && ($?SKILLLEV_2)) eval `skill.sh $SKILLTYPE_2 $SKILLCOST_2 $DX $IQ $HT $ST $SKILLMISC_2 $SKILLBONUS_2 SKILLLEV_2`
Xif (($?SKILLTYPE_3) && ($?SKILLLEV_3)) eval `skill.sh $SKILLTYPE_3 $SKILLCOST_3 $DX $IQ $HT $ST $SKILLMISC_3 $SKILLBONUS_3 SKILLLEV_3`
Xif (($?SKILLTYPE_4) && ($?SKILLLEV_4)) eval `skill.sh $SKILLTYPE_4 $SKILLCOST_4 $DX $IQ $HT $ST $SKILLMISC_4 $SKILLBONUS_4 SKILLLEV_4`
Xif (($?SKILLTYPE_5) && ($?SKILLLEV_5)) eval `skill.sh $SKILLTYPE_5 $SKILLCOST_5 $DX $IQ $HT $ST $SKILLMISC_5 $SKILLBONUS_5 SKILLLEV_5`
Xif (($?SKILLTYPE_6) && ($?SKILLLEV_6)) eval `skill.sh $SKILLTYPE_6 $SKILLCOST_6 $DX $IQ $HT $ST $SKILLMISC_6 $SKILLBONUS_6 SKILLLEV_6`
Xif (($?SKILLTYPE_7) && ($?SKILLLEV_7)) eval `skill.sh $SKILLTYPE_7 $SKILLCOST_7 $DX $IQ $HT $ST $SKILLMISC_7 $SKILLBONUS_7 SKILLLEV_7`
Xif (($?SKILLTYPE_8) && ($?SKILLLEV_8)) eval `skill.sh $SKILLTYPE_8 $SKILLCOST_8 $DX $IQ $HT $ST $SKILLMISC_8 $SKILLBONUS_8 SKILLLEV_8`
Xif (($?SKILLTYPE_9) && ($?SKILLLEV_9)) eval `skill.sh $SKILLTYPE_9 $SKILLCOST_9 $DX $IQ $HT $ST $SKILLMISC_9 $SKILLBONUS_9 SKILLLEV_9`
Xif (($?SKILLTYPE_10) && ($?SKILLLEV_10)) eval `skill.sh $SKILLTYPE_10 $SKILLCOST_10 $DX $IQ $HT $ST $SKILLMISC_10 $SKILLBONUS_10 SKILLLEV_10`
Xif (($?SKILLTYPE_11) && ($?SKILLLEV_11)) eval `skill.sh $SKILLTYPE_11 $SKILLCOST_11 $DX $IQ $HT $ST $SKILLMISC_11 $SKILLBONUS_11 SKILLLEV_11`
Xif (($?SKILLTYPE_12) && ($?SKILLLEV_12)) eval `skill.sh $SKILLTYPE_12 $SKILLCOST_12 $DX $IQ $HT $ST $SKILLMISC_12 $SKILLBONUS_12 SKILLLEV_12`
Xif (($?SKILLTYPE_13) && ($?SKILLLEV_13)) eval `skill.sh $SKILLTYPE_13 $SKILLCOST_13 $DX $IQ $HT $ST $SKILLMISC_13 $SKILLBONUS_13 SKILLLEV_13`
Xif (($?SKILLTYPE_14) && ($?SKILLLEV_14)) eval `skill.sh $SKILLTYPE_14 $SKILLCOST_14 $DX $IQ $HT $ST $SKILLMISC_14 $SKILLBONUS_14 SKILLLEV_14`
Xif (($?SKILLTYPE_15) && ($?SKILLLEV_15)) eval `skill.sh $SKILLTYPE_15 $SKILLCOST_15 $DX $IQ $HT $ST $SKILLMISC_15 $SKILLBONUS_15 SKILLLEV_15`
Xif (($?SKILLTYPE_16) && ($?SKILLLEV_16)) eval `skill.sh $SKILLTYPE_16 $SKILLCOST_16 $DX $IQ $HT $ST $SKILLMISC_16 $SKILLBONUS_16 SKILLLEV_16`
Xif (($?SKILLTYPE_17) && ($?SKILLLEV_17)) eval `skill.sh $SKILLTYPE_17 $SKILLCOST_17 $DX $IQ $HT $ST $SKILLMISC_17 $SKILLBONUS_17 SKILLLEV_17`
Xif (($?SKILLTYPE_18) && ($?SKILLLEV_18)) eval `skill.sh $SKILLTYPE_18 $SKILLCOST_18 $DX $IQ $HT $ST $SKILLMISC_18 $SKILLBONUS_18 SKILLLEV_18`
Xif (($?SKILLTYPE_19) && ($?SKILLLEV_19)) eval `skill.sh $SKILLTYPE_19 $SKILLCOST_19 $DX $IQ $HT $ST $SKILLMISC_19 $SKILLBONUS_19 SKILLLEV_19`
Xif (($?SKILLTYPE_20) && ($?SKILLLEV_20)) eval `skill.sh $SKILLTYPE_20 $SKILLCOST_20 $DX $IQ $HT $ST $SKILLMISC_20 $SKILLBONUS_20 SKILLLEV_20`
Xif (($?SKILLTYPE_21) && ($?SKILLLEV_21)) eval `skill.sh $SKILLTYPE_21 $SKILLCOST_21 $DX $IQ $HT $ST $SKILLMISC_21 $SKILLBONUS_21 SKILLLEV_21`
Xif (($?SKILLTYPE_22) && ($?SKILLLEV_22)) eval `skill.sh $SKILLTYPE_22 $SKILLCOST_22 $DX $IQ $HT $ST $SKILLMISC_22 $SKILLBONUS_22 SKILLLEV_22`
Xif (($?SKILLTYPE_23) && ($?SKILLLEV_23)) eval `skill.sh $SKILLTYPE_23 $SKILLCOST_23 $DX $IQ $HT $ST $SKILLMISC_23 $SKILLBONUS_23 SKILLLEV_23`
Xif (($?SKILLTYPE_24) && ($?SKILLLEV_24)) eval `skill.sh $SKILLTYPE_24 $SKILLCOST_24 $DX $IQ $HT $ST $SKILLMISC_24 $SKILLBONUS_24 SKILLLEV_24`
Xif (($?SKILLTYPE_25) && ($?SKILLLEV_25)) eval `skill.sh $SKILLTYPE_25 $SKILLCOST_25 $DX $IQ $HT $ST $SKILLMISC_25 $SKILLBONUS_25 SKILLLEV_25`
Xif (($?SKILLTYPE_26) && ($?SKILLLEV_26)) eval `skill.sh $SKILLTYPE_26 $SKILLCOST_26 $DX $IQ $HT $ST $SKILLMISC_26 $SKILLBONUS_26 SKILLLEV_26`
Xif (($?SKILLTYPE_27) && ($?SKILLLEV_27)) eval `skill.sh $SKILLTYPE_27 $SKILLCOST_27 $DX $IQ $HT $ST $SKILLMISC_27 $SKILLBONUS_27 SKILLLEV_27`
Xif (($?SKILLTYPE_28) && ($?SKILLLEV_28)) eval `skill.sh $SKILLTYPE_28 $SKILLCOST_28 $DX $IQ $HT $ST $SKILLMISC_28 $SKILLBONUS_28 SKILLLEV_28`
Xif (($?SKILLTYPE_29) && ($?SKILLLEV_29)) eval `skill.sh $SKILLTYPE_29 $SKILLCOST_29 $DX $IQ $HT $ST $SKILLMISC_29 $SKILLBONUS_29 SKILLLEV_29`
Xif (($?SKILLTYPE_30) && ($?SKILLLEV_30)) eval `skill.sh $SKILLTYPE_30 $SKILLCOST_30 $DX $IQ $HT $ST $SKILLMISC_30 $SKILLBONUS_30 SKILLLEV_30`
Xif (($?SKILLTYPE_31) && ($?SKILLLEV_31)) eval `skill.sh $SKILLTYPE_31 $SKILLCOST_31 $DX $IQ $HT $ST $SKILLMISC_31 $SKILLBONUS_31 SKILLLEV_31`
Xif (($?SKILLTYPE_32) && ($?SKILLLEV_32)) eval `skill.sh $SKILLTYPE_32 $SKILLCOST_32 $DX $IQ $HT $ST $SKILLMISC_32 $SKILLBONUS_32 SKILLLEV_32`
Xif (($?SKILLTYPE_33) && ($?SKILLLEV_33)) eval `skill.sh $SKILLTYPE_33 $SKILLCOST_33 $DX $IQ $HT $ST $SKILLMISC_33 $SKILLBONUS_33 SKILLLEV_33`
Xif (($?SKILLTYPE_34) && ($?SKILLLEV_34)) eval `skill.sh $SKILLTYPE_34 $SKILLCOST_34 $DX $IQ $HT $ST $SKILLMISC_34 $SKILLBONUS_34 SKILLLEV_34`
Xif (($?SKILLTYPE_35) && ($?SKILLLEV_35)) eval `skill.sh $SKILLTYPE_35 $SKILLCOST_35 $DX $IQ $HT $ST $SKILLMISC_35 $SKILLBONUS_35 SKILLLEV_35`
Xif (($?SKILLTYPE_36) && ($?SKILLLEV_36)) eval `skill.sh $SKILLTYPE_36 $SKILLCOST_36 $DX $IQ $HT $ST $SKILLMISC_36 $SKILLBONUS_36 SKILLLEV_36`
Xif (($?SKILLTYPE_37) && ($?SKILLLEV_37)) eval `skill.sh $SKILLTYPE_37 $SKILLCOST_37 $DX $IQ $HT $ST $SKILLMISC_37 $SKILLBONUS_37 SKILLLEV_37`
Xif (($?SKILLTYPE_38) && ($?SKILLLEV_38)) eval `skill.sh $SKILLTYPE_38 $SKILLCOST_38 $DX $IQ $HT $ST $SKILLMISC_38 $SKILLBONUS_38 SKILLLEV_38`
Xif (($?SKILLTYPE_39) && ($?SKILLLEV_39)) eval `skill.sh $SKILLTYPE_39 $SKILLCOST_39 $DX $IQ $HT $ST $SKILLMISC_39 $SKILLBONUS_39 SKILLLEV_39`
Xif (($?SKILLTYPE_40) && ($?SKILLLEV_40)) eval `skill.sh $SKILLTYPE_40 $SKILLCOST_40 $DX $IQ $HT $ST $SKILLMISC_40 $SKILLBONUS_40 SKILLLEV_40`
Xif (($?SKILLTYPE_41) && ($?SKILLLEV_41)) eval `skill.sh $SKILLTYPE_41 $SKILLCOST_41 $DX $IQ $HT $ST $SKILLMISC_41 $SKILLBONUS_41 SKILLLEV_41`
Xif (($?SKILLTYPE_42) && ($?SKILLLEV_42)) eval `skill.sh $SKILLTYPE_42 $SKILLCOST_42 $DX $IQ $HT $ST $SKILLMISC_42 $SKILLBONUS_42 SKILLLEV_42`
Xif (($?SKILLTYPE_43) && ($?SKILLLEV_43)) eval `skill.sh $SKILLTYPE_43 $SKILLCOST_43 $DX $IQ $HT $ST $SKILLMISC_43 $SKILLBONUS_43 SKILLLEV_43`
Xif (($?SKILLTYPE_44) && ($?SKILLLEV_44)) eval `skill.sh $SKILLTYPE_44 $SKILLCOST_44 $DX $IQ $HT $ST $SKILLMISC_44 $SKILLBONUS_44 SKILLLEV_44`
Xif (($?SKILLTYPE_45) && ($?SKILLLEV_45)) eval `skill.sh $SKILLTYPE_45 $SKILLCOST_45 $DX $IQ $HT $ST $SKILLMISC_45 $SKILLBONUS_45 SKILLLEV_45`
Xif (($?SKILLTYPE_46) && ($?SKILLLEV_46)) eval `skill.sh $SKILLTYPE_46 $SKILLCOST_46 $DX $IQ $HT $ST $SKILLMISC_46 $SKILLBONUS_46 SKILLLEV_46`
X
X
X# Round up - commented out by B. Slocum, 1-28-92
X#set SKILL_TOTAL=`echo $SKILL_TOTAL 0.5 + 0 k 1 / p | bc`
X
X  set TOTAL_CASH=0
X @ TOTAL_CASH = $ITEM_COST_1 + $ITEM_COST_2 + $ITEM_COST_3 + $ITEM_COST_4 + $ITEM_COST_5
X @ TOTAL_CASH = $TOTAL_CASH + $ITEM_COST_6 + $ITEM_COST_7 + $ITEM_COST_8 + $ITEM_COST_9 + $ITEM_COST_10
X @ TOTAL_CASH = $TOTAL_CASH + $ITEM_COST_11 + $ITEM_COST_12 + $ITEM_COST_13 + $ITEM_COST_14 + $ITEM_COST_15
X @ TOTAL_CASH = $TOTAL_CASH + $ITEM_COST_16 + $ITEM_COST_17 + $ITEM_COST_18 + $ITEM_COST_19
X
X  set TOTAL_WEIGHT=0
Xif ($ITEM_WT_1 != "") set TOTAL_WEIGHT=`echo $TOTAL_WEIGHT + $ITEM_WT_1 | bc`
Xif ($ITEM_WT_2 != "") set TOTAL_WEIGHT=`echo $TOTAL_WEIGHT + $ITEM_WT_2 | bc`
Xif ($ITEM_WT_3 != "") set TOTAL_WEIGHT=`echo $TOTAL_WEIGHT + $ITEM_WT_3 | bc`
Xif ($ITEM_WT_4 != "") set TOTAL_WEIGHT=`echo $TOTAL_WEIGHT + $ITEM_WT_4 | bc`
Xif ($ITEM_WT_5 != "") set TOTAL_WEIGHT=`echo $TOTAL_WEIGHT + $ITEM_WT_5 | bc`
Xif ($ITEM_WT_6 != "") set TOTAL_WEIGHT=`echo $TOTAL_WEIGHT + $ITEM_WT_6 | bc`
Xif ($ITEM_WT_7 != "") set TOTAL_WEIGHT=`echo $TOTAL_WEIGHT + $ITEM_WT_7 | bc`
Xif ($ITEM_WT_8 != "") set TOTAL_WEIGHT=`echo $TOTAL_WEIGHT + $ITEM_WT_8 | bc`
Xif ($ITEM_WT_9 != "") set TOTAL_WEIGHT=`echo $TOTAL_WEIGHT + $ITEM_WT_9 | bc`
Xif ($ITEM_WT_10 != "") set TOTAL_WEIGHT=`echo $TOTAL_WEIGHT + $ITEM_WT_10 | bc`
Xif ($ITEM_WT_11 != "") set TOTAL_WEIGHT=`echo $TOTAL_WEIGHT + $ITEM_WT_11 | bc`
Xif ($ITEM_WT_12 != "") set TOTAL_WEIGHT=`echo $TOTAL_WEIGHT + $ITEM_WT_12 | bc`
Xif ($ITEM_WT_13 != "") set TOTAL_WEIGHT=`echo $TOTAL_WEIGHT + $ITEM_WT_13 | bc`
Xif ($ITEM_WT_14 != "") set TOTAL_WEIGHT=`echo $TOTAL_WEIGHT + $ITEM_WT_14 | bc`
Xif ($ITEM_WT_15 != "") set TOTAL_WEIGHT=`echo $TOTAL_WEIGHT + $ITEM_WT_15 | bc`
Xif ($ITEM_WT_16 != "") set TOTAL_WEIGHT=`echo $TOTAL_WEIGHT + $ITEM_WT_16 | bc`
Xif ($ITEM_WT_17 != "") set TOTAL_WEIGHT=`echo $TOTAL_WEIGHT + $ITEM_WT_17 | bc`
Xif ($ITEM_WT_18 != "") set TOTAL_WEIGHT=`echo $TOTAL_WEIGHT + $ITEM_WT_18 | bc`
Xif ($ITEM_WT_19 != "") set TOTAL_WEIGHT=`echo $TOTAL_WEIGHT + $ITEM_WT_19 | bc`
X 
Xecho attributes $ATTRIB_TOTAL 
Xecho advantages $ADV_TOTAL 
Xecho disadvantages $DIS_TOTAL
Xecho quirks $QUIRK_TOTAL
Xecho skills $SKILL_TOTAL
X
Xset TOTAL=0
Xif ($ATTRIB_TOTAL != "") set TOTAL=`echo $TOTAL + $ATTRIB_TOTAL | bc`
Xif ($ADV_TOTAL != "") set TOTAL=`echo $TOTAL + $ADV_TOTAL | bc`
Xif ($DIS_TOTAL != "") set TOTAL=`echo $TOTAL + $DIS_TOTAL | bc`
Xif ($QUIRK_TOTAL != "") set TOTAL=`echo $TOTAL + $QUIRK_TOTAL | bc`
Xif ($SKILL_TOTAL != "") set TOTAL=`echo $TOTAL + $SKILL_TOTAL | bc`
X
Xecho total = $TOTAL
Xset UNSPENT=`echo $POINT_TOTAL - $TOTAL | bc`
X
Xif ($ADV_COST_1 == 0) then
X     set ADV_COST_1=
Xendif
Xif ($ADV_COST_2 == 0) then
X     set ADV_COST_2=
Xendif
Xif ($ADV_COST_3 == 0) then
X     set ADV_COST_3=
Xendif
Xif ($ADV_COST_4 == 0) then
X     set ADV_COST_4=
Xendif
Xif ($ADV_COST_5 == 0) then
X     set ADV_COST_5=
Xendif
Xif ($DIS_COST_1 == 0) then
X     set DIS_COST_1=
Xendif
Xif ($DIS_COST_2 == 0) then
X     set DIS_COST_2=
Xendif
Xif ($DIS_COST_3 == 0) then
X     set DIS_COST_3=
Xendif
Xif ($DIS_COST_4 == 0) then
X     set DIS_COST_4=
Xendif
Xif ($DIS_COST_5 == 0) then
X     set DIS_COST_5=
Xendif
X
Xif ($ARM_PD == 0) then
X     set ARM_PD=
Xendif
Xif ($SHIELD_PD == 0) then
X     set SHIELD_PD=
Xendif
Xif ($OTHER_PD == 0) then
X     set OTHER_PD=
Xendif
Xif ($ARM_DR == 0) then
X     set ARM_DR=
Xendif
Xif ($OTHER_DR1 == 0) then
X     set OTHER_DR1=
Xendif
Xif ($OTHER_DR2 == 0) then
X     set OTHER_DR2=
Xendif
Xif ($TOTAL_PD == 0) then
X     set TOTAL_PD=
Xendif
Xif ($TOTAL_DR == 0) then
X     set TOTAL_DR=
Xendif
X
Xif ($ITEM_COST_1 == 0) then
X     set ITEM_COST_1=
Xendif
Xif ($ITEM_COST_2 == 0) then
X     set ITEM_COST_2=
Xendif
Xif ($ITEM_COST_3 == 0) then
X     set ITEM_COST_3=
Xendif
Xif ($ITEM_COST_4 == 0) then
X     set ITEM_COST_4=
Xendif
Xif ($ITEM_COST_5 == 0) then
X     set ITEM_COST_5=
Xendif
Xif ($ITEM_COST_6 == 0) then
X     set ITEM_COST_6=
Xendif
Xif ($ITEM_COST_7 == 0) then
X     set ITEM_COST_7=
Xendif
Xif ($ITEM_COST_8 == 0) then
X     set ITEM_COST_8=
Xendif
Xif ($ITEM_COST_9 == 0) then
X     set ITEM_COST_9=
Xendif
Xif ($ITEM_COST_10 == 0) then
X     set ITEM_COST_10=
Xendif
Xif ($ITEM_COST_11 == 0) then
X     set ITEM_COST_11=
Xendif
Xif ($ITEM_COST_12 == 0) then
X     set ITEM_COST_12=
Xendif
Xif ($ITEM_COST_13 == 0) then
X     set ITEM_COST_13=
Xendif
Xif ($ITEM_COST_14 == 0) then
X     set ITEM_COST_14=
Xendif
Xif ($ITEM_COST_15 == 0) then
X     set ITEM_COST_15=
Xendif
Xif ($ITEM_COST_16 == 0) then
X     set ITEM_COST_16=
Xendif
Xif ($ITEM_COST_17 == 0) then
X     set ITEM_COST_17=
Xendif
Xif ($ITEM_COST_18 == 0) then
X     set ITEM_COST_18=
Xendif
Xif ($ITEM_COST_19 == 0) then
X     set ITEM_COST_19=
Xendif
Xif ($ATTRIB_TOTAL == 0) then
X     set ATTRIB_TOTAL=
Xendif
Xif ($ADV_TOTAL == 0) then
X     set ADV_TOTAL=
Xendif
Xif ($DIS_TOTAL == 0) then
X     set DIS_TOTAL=
Xendif
Xif ($QUIRK_TOTAL == 0) then
X     set QUIRK_TOTAL=
Xendif
Xif ($SKILL_TOTAL == 0) then
X     set SKILL_TOTAL=
Xendif
Xif ($TOTAL == 0) then
X     set TOTAL=
Xendif
Xif ($TOTAL_CASH == 0) then
X     set TOTAL_CASH=
Xendif
Xif ($TOTAL_WEIGHT == 0) then
X     set TOTAL_WEIGHT=
Xendif
Xif ("$UNSPENT" == "$POINT_TOTAL") then
X     set UNSPENT=
Xendif
X
X/bin/sed \
X-e s/~NAME~/"$NAME"/ \
X-e s/~PLAYER~/"$PLAYER"/ \
X-e s/~APPEAR~/"$APPEAR"/ \
X-e s/~BACKGD~/"$BACKGD"/ \
X-e s/~UNSPENT~/"$UNSPENT"/ \
X-e s/~DATE~/"$DATE"/ \
X-e s/~SEQ~/"$SEQ"/ \
X-e s/~TOTAL~/"$TOTAL"/ \
X-e s/~ST~/"$ST"/ \
X-e s/~DX~/"$DX"/ \
X-e s/~IQ~/"$IQ"/ \
X-e s/~HT~/"$HT"/ \
X-e s/~THRUST~/"$THRUST"/ \
X-e s/~SWING~/"$SWING"/ \
X-e s/~SPEED~/"$SPEED"/ \
X-e s/~MOVE~/"$MOVE"/ \
X-e s/~STX2~/"$STX2"/ \
X-e s/~STX4~/"$STX4"/ \
X-e s/~STX6~/"$STX6"/ \
X-e s/~STX12~/"$STX12"/ \
X-e s/~STX20~/"$STX20"/ \
X-e s/~ARM_PD~/"$ARM_PD"/ \
X-e s/~SHIELD_PD~/"$SHIELD_PD"/ \
X-e s/~OTHER_PD~/"$OTHER_PD"/ \
X-e s/~TOTAL_PD~/"$TOTAL_PD"/ \
X-e s/~REACT~/"$REACT"/ \
X-e s/~DODGE~/"$DODGE"/ \
X-e s/~PARRY~/"$PARRY"/ \
X-e s/~BLOCK~/"$BLOCK"/ \
X-e s/~ARM_TYP~/"$ARM_TYP"/ \
X-e s/~ARM_DR~/"$ARM_DR"/ \
X-e s/~OTHER_TYP1~/"$OTHER_TYP1"/ \
X-e s/~OTHER_DR1~/"$OTHER_DR1"/ \
X-e s/~OTHER_TYP2~/"$OTHER_TYP2"/ \
X-e s/~OTHER_DR2~/"$OTHER_DR2"/ \
X-e s/~TOTAL_DR~/"$TOTAL_DR"/ \
X-e s/~ADV_1~/"$ADV_1"/ \
X-e s/~ADV_2~/"$ADV_2"/ \
X-e s/~ADV_3~/"$ADV_3"/ \
X-e s/~ADV_4~/"$ADV_4"/ \
X-e s/~ADV_5~/"$ADV_5"/ \
X-e s/~ADV_COST_1~/"$ADV_COST_1"/ \
X-e s/~ADV_COST_2~/"$ADV_COST_2"/ \
X-e s/~ADV_COST_3~/"$ADV_COST_3"/ \
X-e s/~ADV_COST_4~/"$ADV_COST_4"/ \
X-e s/~ADV_COST_5~/"$ADV_COST_5"/ \
X-e s/~DIS_1~/"$DIS_1"/ \
X-e s/~DIS_2~/"$DIS_2"/ \
X-e s/~DIS_3~/"$DIS_3"/ \
X-e s/~DIS_4~/"$DIS_4"/ \
X-e s/~DIS_5~/"$DIS_5"/ \
X-e s/~DIS_COST_1~/"$DIS_COST_1"/ \
X-e s/~DIS_COST_2~/"$DIS_COST_2"/ \
X-e s/~DIS_COST_3~/"$DIS_COST_3"/ \
X-e s/~DIS_COST_4~/"$DIS_COST_4"/ \
X-e s/~DIS_COST_5~/"$DIS_COST_5"/ \
X-e s/~QUIRK_1~/"$QUIRK_1"/ \
X-e s/~QUIRK_2~/"$QUIRK_2"/ \
X-e s/~QUIRK_3~/"$QUIRK_3"/ \
X-e s/~QUIRK_4~/"$QUIRK_4"/ \
X-e s/~QUIRK_5~/"$QUIRK_5"/ \
X-e s/~ITEM_1~/"$ITEM_1"/ \
X-e s/~ITEM_COST_1~/"$ITEM_COST_1"/ \
X-e s/~ITEM_STAT_1~/"$ITEM_STAT_1"/ \
X-e s/~ITEM_2~/"$ITEM_2"/ \
X-e s/~ITEM_COST_2~/"$ITEM_COST_2"/ \
X-e s/~ITEM_STAT_2~/"$ITEM_STAT_2"/ \
X-e s/~ITEM_3~/"$ITEM_3"/ \
X-e s/~ITEM_COST_3~/"$ITEM_COST_3"/ \
X-e s/~ITEM_STAT_3~/"$ITEM_STAT_3"/ \
X-e s/~ITEM_4~/"$ITEM_4"/ \
X-e s/~ITEM_COST_4~/"$ITEM_COST_4"/ \
X-e s/~ITEM_STAT_4~/"$ITEM_STAT_4"/ \
X-e s/~ITEM_5~/"$ITEM_5"/ \
X-e s/~ITEM_COST_5~/"$ITEM_COST_5"/ \
X-e s/~ITEM_STAT_5~/"$ITEM_STAT_5"/ \
X-e s/~ITEM_6~/"$ITEM_6"/ \
X-e s/~ITEM_COST_6~/"$ITEM_COST_6"/ \
X-e s/~ITEM_STAT_6~/"$ITEM_STAT_6"/ \
X-e s/~ITEM_7~/"$ITEM_7"/ \
X-e s/~ITEM_COST_7~/"$ITEM_COST_7"/ \
X-e s/~ITEM_STAT_7~/"$ITEM_STAT_7"/ \
X-e s/~ITEM_8~/"$ITEM_8"/ \
X-e s/~ITEM_COST_8~/"$ITEM_COST_8"/ \
X-e s/~ITEM_STAT_8~/"$ITEM_STAT_8"/ \
X-e s/~ITEM_9~/"$ITEM_9"/ \
X-e s/~ITEM_COST_9~/"$ITEM_COST_9"/ \
X-e s/~ITEM_STAT_9~/"$ITEM_STAT_9"/ \
X-e s/~ITEM_10~/"$ITEM_10"/ \
X-e s/~ITEM_COST_10~/"$ITEM_COST_10"/ \
X-e s/~ITEM_STAT_10~/"$ITEM_STAT_10"/ \
X-e s/~ITEM_11~/"$ITEM_11"/ \
X-e s/~ITEM_COST_11~/"$ITEM_COST_11"/ \
X-e s/~ITEM_STAT_11~/"$ITEM_STAT_11"/ \
X-e s/~ITEM_12~/"$ITEM_12"/ \
X-e s/~ITEM_COST_12~/"$ITEM_COST_12"/ \
X-e s/~ITEM_STAT_12~/"$ITEM_STAT_12"/ \
X-e s/~ITEM_13~/"$ITEM_13"/ \
X-e s/~ITEM_COST_13~/"$ITEM_COST_13"/ \
X-e s/~ITEM_STAT_13~/"$ITEM_STAT_13"/ \
X-e s/~ITEM_14~/"$ITEM_14"/ \
X-e s/~ITEM_COST_14~/"$ITEM_COST_14"/ \
X-e s/~ITEM_STAT_14~/"$ITEM_STAT_14"/ \
X-e s/~ITEM_15~/"$ITEM_15"/ \
X-e s/~ITEM_COST_15~/"$ITEM_COST_15"/ \
X-e s/~ITEM_STAT_15~/"$ITEM_STAT_15"/ \
X-e s/~ITEM_16~/"$ITEM_16"/ \
X-e s/~ITEM_COST_16~/"$ITEM_COST_16"/ \
X-e s/~ITEM_STAT_16~/"$ITEM_STAT_16"/ \
X-e s/~ITEM_17~/"$ITEM_17"/ \
X-e s/~ITEM_COST_17~/"$ITEM_COST_17"/ \
X-e s/~ITEM_STAT_17~/"$ITEM_STAT_17"/ \
X-e s/~ITEM_18~/"$ITEM_18"/ \
X-e s/~ITEM_COST_18~/"$ITEM_COST_18"/ \
X-e s/~ITEM_STAT_18~/"$ITEM_STAT_18"/ \
X-e s/~ITEM_19~/"$ITEM_19"/ \
X-e s/~ITEM_COST_19~/"$ITEM_COST_19"/ \
X-e s/~ITEM_STAT_19~/"$ITEM_STAT_19"/ \
X-e s/~ITEM_WT_1~/"$ITEM_WT_1"/ \
X-e s/~ITEM_WT_2~/"$ITEM_WT_2"/ \
X-e s/~ITEM_WT_3~/"$ITEM_WT_3"/ \
X-e s/~ITEM_WT_4~/"$ITEM_WT_4"/ \
X-e s/~ITEM_WT_5~/"$ITEM_WT_5"/ \
X-e s/~ITEM_WT_6~/"$ITEM_WT_6"/ \
X-e s/~ITEM_WT_7~/"$ITEM_WT_7"/ \
X-e s/~ITEM_WT_8~/"$ITEM_WT_8"/ \
X-e s/~ITEM_WT_9~/"$ITEM_WT_9"/ \
X-e s/~ITEM_WT_10~/"$ITEM_WT_10"/ \
X-e s/~ITEM_WT_11~/"$ITEM_WT_11"/ \
X-e s/~ITEM_WT_12~/"$ITEM_WT_12"/ \
X-e s/~ITEM_WT_13~/"$ITEM_WT_13"/ \
X-e s/~ITEM_WT_14~/"$ITEM_WT_14"/ \
X-e s/~ITEM_WT_15~/"$ITEM_WT_15"/ \
X-e s/~ITEM_WT_16~/"$ITEM_WT_16"/ \
X-e s/~ITEM_WT_17~/"$ITEM_WT_17"/ \
X-e s/~ITEM_WT_18~/"$ITEM_WT_18"/ \
X-e s/~ITEM_WT_19~/"$ITEM_WT_19"/ \
X-e s/~TOTAL_CASH~/"$TOTAL_CASH"/ \
X-e s/~TOTAL_WEIGHT~/"$TOTAL_WEIGHT"/ \
X-e s/~ATTRIB_TOTAL~/"$ATTRIB_TOTAL"/ \
X-e s/~ADV_TOTAL~/"$ADV_TOTAL"/ \
X-e s/~DIS_TOTAL~/"$DIS_TOTAL"/ \
X-e s/~QUIRK_TOTAL~/"$QUIRK_TOTAL"/ \
X-e s/~SKILL_TOTAL~/"$SKILL_TOTAL"/ \
X< sheet.template | \
X/bin/sed \
X-e s/~THR_WEAP_1~/"$THR_WEAP_1"/ \
X-e s/~THR_WEAP_SS_1~/"$THR_WEAP_STAT_1[1]"/ \
X-e s/~THR_WEAP_ACC_1~/"$THR_WEAP_STAT_1[2]"/ \
X-e s/~THR_WEAP_HALF_1~/"$THR_WEAP_STAT_1[3]"/ \
X-e s/~THR_WEAP_MAX_1~/"$THR_WEAP_STAT_1[4]"/ \
X-e s/~THR_WEAP_2~/"$THR_WEAP_2"/ \
X-e s/~THR_WEAP_SS_2~/"$THR_WEAP_STAT_2[1]"/ \
X-e s/~THR_WEAP_ACC_2~/"$THR_WEAP_STAT_2[2]"/ \
X-e s/~THR_WEAP_HALF_2~/"$THR_WEAP_STAT_2[3]"/ \
X-e s/~THR_WEAP_MAX_2~/"$THR_WEAP_STAT_2[4]"/ \
X-e s/~THR_WEAP_3~/"$THR_WEAP_3"/ \
X-e s/~THR_WEAP_SS_3~/"$THR_WEAP_STAT_3[1]"/ \
X-e s/~THR_WEAP_ACC_3~/"$THR_WEAP_STAT_3[2]"/ \
X-e s/~THR_WEAP_HALF_3~/"$THR_WEAP_STAT_3[3]"/ \
X-e s/~THR_WEAP_MAX_3~/"$THR_WEAP_STAT_3[4]"/ \
X-e s/~THR_WEAP_4~/"$THR_WEAP_4"/ \
X-e s/~THR_WEAP_SS_4~/"$THR_WEAP_STAT_4[1]"/ \
X-e s/~THR_WEAP_ACC_4~/"$THR_WEAP_STAT_4[2]"/ \
X-e s/~THR_WEAP_HALF_4~/"$THR_WEAP_STAT_4[3]"/ \
X-e s/~THR_WEAP_MAX_4~/"$THR_WEAP_STAT_4[4]"/ \
X-e s/~THR_WEAP_5~/"$THR_WEAP_5"/ \
X-e s/~THR_WEAP_SS_5~/"$THR_WEAP_STAT_5[1]"/ \
X-e s/~THR_WEAP_ACC_5~/"$THR_WEAP_STAT_5[2]"/ \
X-e s/~THR_WEAP_HALF_5~/"$THR_WEAP_STAT_5[3]"/ \
X-e s/~THR_WEAP_MAX_5~/"$THR_WEAP_STAT_5[4]"/ \
X-e s/~SKILL_1~/"$SKILL_1"/ \
X-e s/~SKILLCOST_1~/"$SKILLCOST_1"/ \
X-e s/~SKILLLEV_1~/"$SKILLLEV_1"/ \
X-e s/~SKILL_2~/"$SKILL_2"/ \
X-e s/~SKILLCOST_2~/"$SKILLCOST_2"/ \
X-e s/~SKILLLEV_2~/"$SKILLLEV_2"/ \
X-e s/~SKILL_3~/"$SKILL_3"/ \
X-e s/~SKILLCOST_3~/"$SKILLCOST_3"/ \
X-e s/~SKILLLEV_3~/"$SKILLLEV_3"/ \
X-e s/~SKILL_4~/"$SKILL_4"/ \
X-e s/~SKILLCOST_4~/"$SKILLCOST_4"/ \
X-e s/~SKILLLEV_4~/"$SKILLLEV_4"/ \
X-e s/~SKILL_5~/"$SKILL_5"/ \
X-e s/~SKILLCOST_5~/"$SKILLCOST_5"/ \
X-e s/~SKILLLEV_5~/"$SKILLLEV_5"/ \
X-e s/~SKILL_6~/"$SKILL_6"/ \
X-e s/~SKILLCOST_6~/"$SKILLCOST_6"/ \
X-e s/~SKILLLEV_6~/"$SKILLLEV_6"/ \
X-e s/~SKILL_7~/"$SKILL_7"/ \
X-e s/~SKILLCOST_7~/"$SKILLCOST_7"/ \
X-e s/~SKILLLEV_7~/"$SKILLLEV_7"/ \
X-e s/~SKILL_8~/"$SKILL_8"/ \
X-e s/~SKILLCOST_8~/"$SKILLCOST_8"/ \
X-e s/~SKILLLEV_8~/"$SKILLLEV_8"/ \
X-e s/~SKILL_9~/"$SKILL_9"/ \
X-e s/~SKILLCOST_9~/"$SKILLCOST_9"/ \
X-e s/~SKILLLEV_9~/"$SKILLLEV_9"/ \
X-e s/~SKILL_10~/"$SKILL_10"/ \
X-e s/~SKILLCOST_10~/"$SKILLCOST_10"/ \
X-e s/~SKILLLEV_10~/"$SKILLLEV_10"/ \
X-e s/~SKILL_11~/"$SKILL_11"/ \
X-e s/~SKILLCOST_11~/"$SKILLCOST_11"/ \
X-e s/~SKILLLEV_11~/"$SKILLLEV_11"/ \
X-e s/~SKILL_12~/"$SKILL_12"/ \
X-e s/~SKILLCOST_12~/"$SKILLCOST_12"/ \
X-e s/~SKILLLEV_12~/"$SKILLLEV_12"/ \
X-e s/~SKILL_13~/"$SKILL_13"/ \
X-e s/~SKILLCOST_13~/"$SKILLCOST_13"/ \
X-e s/~SKILLLEV_13~/"$SKILLLEV_13"/ \
X-e s/~SKILL_14~/"$SKILL_14"/ \
X-e s/~SKILLCOST_14~/"$SKILLCOST_14"/ \
X-e s/~SKILLLEV_14~/"$SKILLLEV_14"/ \
X-e s/~SKILL_15~/"$SKILL_15"/ \
X-e s/~SKILLCOST_15~/"$SKILLCOST_15"/ \
X-e s/~SKILLLEV_15~/"$SKILLLEV_15"/ \
X-e s/~SKILL_16~/"$SKILL_16"/ \
X-e s/~SKILLCOST_16~/"$SKILLCOST_16"/ \
X-e s/~SKILLLEV_16~/"$SKILLLEV_16"/ \
X-e s/~SKILL_17~/"$SKILL_17"/ \
X-e s/~SKILLCOST_17~/"$SKILLCOST_17"/ \
X-e s/~SKILLLEV_17~/"$SKILLLEV_17"/ \
X-e s/~SKILL_18~/"$SKILL_18"/ \
X-e s/~SKILLCOST_18~/"$SKILLCOST_18"/ \
X-e s/~SKILLLEV_18~/"$SKILLLEV_18"/ \
X-e s/~SKILL_19~/"$SKILL_19"/ \
X-e s/~SKILLCOST_19~/"$SKILLCOST_19"/ \
X-e s/~SKILLLEV_19~/"$SKILLLEV_19"/ \
X-e s/~SKILL_20~/"$SKILL_20"/ \
X-e s/~SKILLCOST_20~/"$SKILLCOST_20"/ \
X-e s/~SKILLLEV_20~/"$SKILLLEV_20"/ \
X-e s/~SKILL_21~/"$SKILL_21"/ \
X-e s/~SKILLCOST_21~/"$SKILLCOST_21"/ \
X-e s/~SKILLLEV_21~/"$SKILLLEV_21"/ \
X-e s/~SKILL_22~/"$SKILL_22"/ \
X-e s/~SKILLCOST_22~/"$SKILLCOST_22"/ \
X-e s/~SKILLLEV_22~/"$SKILLLEV_22"/ \
X-e s/~SKILL_23~/"$SKILL_23"/ \
X-e s/~SKILLCOST_23~/"$SKILLCOST_23"/ \
X-e s/~SKILLLEV_23~/"$SKILLLEV_23"/ \
X-e s/~SKILL_24~/"$SKILL_24"/ \
X-e s/~SKILLCOST_24~/"$SKILLCOST_24"/ \
X-e s/~SKILLLEV_24~/"$SKILLLEV_24"/ \
X-e s/~SKILL_25~/"$SKILL_25"/ \
X-e s/~SKILLCOST_25~/"$SKILLCOST_25"/ \
X-e s/~SKILLLEV_25~/"$SKILLLEV_25"/ \
X-e s/~SKILL_26~/"$SKILL_26"/ \
X-e s/~SKILLCOST_26~/"$SKILLCOST_26"/ \
X-e s/~SKILLLEV_26~/"$SKILLLEV_26"/ \
X-e s/~SKILL_27~/"$SKILL_27"/ \
X-e s/~SKILLCOST_27~/"$SKILLCOST_27"/ \
X-e s/~SKILLLEV_27~/"$SKILLLEV_27"/ \
X-e s/~SKILL_28~/"$SKILL_28"/ \
X-e s/~SKILLCOST_28~/"$SKILLCOST_28"/ \
X-e s/~SKILLLEV_28~/"$SKILLLEV_28"/ \
X-e s/~SKILL_29~/"$SKILL_29"/ \
X-e s/~SKILLCOST_29~/"$SKILLCOST_29"/ \
X-e s/~SKILLLEV_29~/"$SKILLLEV_29"/ \
X-e s/~SKILL_30~/"$SKILL_30"/ \
X-e s/~SKILLCOST_30~/"$SKILLCOST_30"/ \
X-e s/~SKILLLEV_30~/"$SKILLLEV_30"/ \
X-e s/~SKILL_31~/"$SKILL_31"/ \
X-e s/~SKILLCOST_31~/"$SKILLCOST_31"/ \
X-e s/~SKILLLEV_31~/"$SKILLLEV_31"/ \
X-e s/~SKILL_32~/"$SKILL_32"/ \
X-e s/~SKILLCOST_32~/"$SKILLCOST_32"/ \
X-e s/~SKILLLEV_32~/"$SKILLLEV_32"/ \
X-e s/~SKILL_33~/"$SKILL_33"/ \
X-e s/~SKILLCOST_33~/"$SKILLCOST_33"/ \
X-e s/~SKILLLEV_33~/"$SKILLLEV_33"/ \
X-e s/~SKILL_34~/"$SKILL_34"/ \
X-e s/~SKILLCOST_34~/"$SKILLCOST_34"/ \
X-e s/~SKILLLEV_34~/"$SKILLLEV_34"/ \
X-e s/~SKILL_35~/"$SKILL_35"/ \
X-e s/~SKILLCOST_35~/"$SKILLCOST_35"/ \
X-e s/~SKILLLEV_35~/"$SKILLLEV_35"/ \
X-e s/~SKILL_36~/"$SKILL_36"/ \
X-e s/~SKILLCOST_36~/"$SKILLCOST_36"/ \
X-e s/~SKILLLEV_36~/"$SKILLLEV_36"/ \
X-e s/~SKILL_37~/"$SKILL_37"/ \
X-e s/~SKILLCOST_37~/"$SKILLCOST_37"/ \
X-e s/~SKILLLEV_37~/"$SKILLLEV_37"/ \
X-e s/~SKILL_38~/"$SKILL_38"/ \
X-e s/~SKILLCOST_38~/"$SKILLCOST_38"/ \
X-e s/~SKILLLEV_38~/"$SKILLLEV_38"/ \
X-e s/~SKILL_39~/"$SKILL_39"/ \
X-e s/~SKILLCOST_39~/"$SKILLCOST_39"/ \
X-e s/~SKILLLEV_39~/"$SKILLLEV_39"/ \
X-e s/~SKILL_40~/"$SKILL_40"/ \
X-e s/~SKILLCOST_40~/"$SKILLCOST_40"/ \
X-e s/~SKILLLEV_40~/"$SKILLLEV_40"/ \
X-e s/~SKILL_41~/"$SKILL_41"/ \
X-e s/~SKILLCOST_41~/"$SKILLCOST_41"/ \
X-e s/~SKILLLEV_41~/"$SKILLLEV_41"/ \
X-e s/~SKILL_42~/"$SKILL_42"/ \
X-e s/~SKILLCOST_42~/"$SKILLCOST_42"/ \
X-e s/~SKILLLEV_42~/"$SKILLLEV_42"/ \
X-e s/~SKILL_43~/"$SKILL_43"/ \
X-e s/~SKILLCOST_43~/"$SKILLCOST_43"/ \
X-e s/~SKILLLEV_43~/"$SKILLLEV_43"/ \
X-e s/~SKILL_44~/"$SKILL_44"/ \
X-e s/~SKILLCOST_44~/"$SKILLCOST_44"/ \
X-e s/~SKILLLEV_44~/"$SKILLLEV_44"/ \
X-e s/~SKILL_45~/"$SKILL_45"/ \
X-e s/~SKILLCOST_45~/"$SKILLCOST_45"/ \
X-e s/~SKILLLEV_45~/"$SKILLLEV_45"/ \
X-e s/~SKILL_46~/"$SKILL_46"/ \
X-e s/~SKILLCOST_46~/"$SKILLCOST_46"/ \
X-e s/~SKILLLEV_46~/"$SKILLLEV_46"/ \
X> $SHEET.ps 
X
Xexit(0)
X
Xusage:
X
Xecho "Usage: $0 <file root>"
Xexit(1)
X
END_OF_FILE
if test 31557 -ne `wc -c <'mksheet'`; then
    echo shar: \"'mksheet'\" unpacked with wrong size!
fi
# end of 'mksheet'
fi
if test -f 'sheet.template' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'sheet.template'\"
else
echo shar: Extracting \"'sheet.template'\" \(16959 characters\)
sed "s/^X//" >'sheet.template' <<'END_OF_FILE'
X%!PS
X
X%---- GURPS Character Sheet (one-sided)
X%---- Copyright 1988 by Steve Jackson Games, Inc.
X%---- 
X%---- Postscript version by Mats Persson <matpe@majestix.ida.liu.se>
X%---- CIS Dept, Univ of Linkoping, Sweden
X%----
X%---- Modified for insertion of character information
X%---- by Brett Slocum <slocum@ssdc.honeywell.com>
X%---- Honeywell Sensor and System Development Center, Minneapolis MN, USA.
X
X%---- Define fonts
X
X/12font /Times-Roman findfont 12 scalefont def
X/font /Times-Roman findfont 9 scalefont def
X/sfont /Times-Roman findfont 8 scalefont def
X/bigfont /Courier-Bold findfont [26 0 0 32 0 0] makefont def
X/ifont /Times-Italic findfont 8 scalefont def
X/symbolfont /Symbol findfont 8 scalefont def
X
X%---- Define procedures
X
X/box         % height width => ---
X{ newpath 0 0 moveto
X  dup 0 rlineto
X  exch 0 exch rlineto
X  -1 mul 0 rlineto
X  closepath stroke} def
X
X/shadowbox
X{ newpath 0 0 moveto
X  4 -4 rlineto
X  dup 0 rlineto
X  exch dup 0 exch rlineto
X  -4 4 rlineto
X  dup neg 0 exch rlineto
X  closepath fill
X  exch box } def
X
X/fake
X{ newpath 0 0 moveto
X  4 -4 rlineto
X  -4 0 rlineto
X  0 -4 rlineto
X  -4 4 rlineto
X  4 0 rlineto
X  closepath fill } def
X
X/sfake
X{ newpath 0 0 moveto
X  4 -4 rlineto
X  -4 0 rlineto
X  closepath fill } def
X
X%---- Main program
X
Xfont setfont
X.3 setlinewidth
X
X160 710 translate
Xbigfont setfont
X-110 34 moveto (GURPS) show
X
X%---- print registered trademark symbol
Xsymbolfont setfont
X-34 46 moveto (\322) show
X
Xfont setfont
X-110 16 moveto (CHARACTER SHEET) show
X
X54 295 shadowbox
X4 40 moveto (Name : ) show
X32 39 moveto 136 0 rlineto stroke
X170 40 moveto (Player : ~PLAYER~) show
X200 39 moveto 86 0 rlineto stroke
X4 26 moveto (Appearance : ~APPEAR~) show
X56 25 moveto 230 0 rlineto stroke
X4 12 moveto (Background : ~BACKGD~) show
X56 11 moveto 230 0 rlineto stroke
X12font setfont
X32 40 moveto (~NAME~) show
X
Xsfont setfont
X299 0 translate
X25 62 shadowbox sfake
X5 17 moveto (Unspent Points) show
X31 5 moveto (~UNSPENT~) show
X
X0 29 translate
X25 62 shadowbox sfake
X10 17 moveto (Date Created) show
X20 3 moveto (~DATE~) show
X
X66 0 translate
X25 45 shadowbox fake
X8 17 moveto (Sequence) show
X22 3 moveto (~SEQ~) show
X
X0 -29 translate
X25 45 shadowbox sfake
X4 17 moveto (Point Total) show
X18 3 moveto (~TOTAL~) show
X
X-475 -39 translate
X35 153 shadowbox
Xbigfont setfont 
X4 9 moveto (ST) show
X40 9 moveto ( ~ST~) show
X88 35 moveto 0 -35 rlineto stroke
Xfont setfont 
X101 27 moveto (FATIGUE) show
X
X0 -39 translate
X35 88 shadowbox
Xbigfont setfont 
X4 9 moveto (DX) show
X40 9 moveto ( ~DX~) show
X
X0 -39 translate
X35 88 shadowbox
X4 9 moveto (IQ) show
X40 9 moveto ( ~IQ~) show
X
X0 -39 translate
X35 153 shadowbox
X88 35 moveto 0 -35 rlineto stroke
X4 9 moveto (HT) show
X40 9 moveto ( ~HT~) show
Xfont setfont 94 27 moveto (HITS TAKEN) show
X
X92 39 translate
X74 61 shadowbox
X16 66 moveto (BASIC) show
X9 56 moveto (DAMAGE) show
Xifont setfont 4 35 moveto (Thrust:  ~THRUST~) show
X4 17 moveto (Swing:  ~SWING~) show
X
X-92 -91 translate
X48 153 shadowbox
Xbigfont setfont 4 15 moveto (Mvmt) show
X68 0 moveto 0 48 rlineto stroke
X110 0 moveto 0 48 rlineto stroke
Xfont setfont 76 38 moveto (BASIC) show
X75 30 moveto (SPEED) show 
X119 38 moveto (MOVE) show
X12font setfont
X85 15 moveto (~SPEED~) show
X130 15 moveto (~MOVE~) show
Xifont setfont 70 2 moveto (\50HT+DX\51/4) show
X113 2 moveto (Basic - Enc) show
X
X0 -91 translate
X87 94 shadowbox
X4 67 moveto (None \50) show (0\51 = 2xST) show
X65 66 moveto 26 0 rlineto stroke
X4 52 moveto (Light \50) show (1\51 = 4xST) show
X65 51 moveto 26 0 rlineto stroke
X4 37 moveto (Med \50) show (2\51 = 6xST) show
X65 36 moveto 26 0 rlineto stroke
X4 22 moveto (Hvy \50) show (3\51 = 12xST) show
X65 21 moveto 26 0 rlineto stroke
X4 7 moveto (X-hvy \50) show (4\51 = 20xST) show
X65 6 moveto 26 0 rlineto stroke
Xfont setfont 12 77 moveto (ENCUMBRANCE) show
X78 67 moveto (~STX2~) show
X78 52 moveto (~STX4~) show
X78 37 moveto (~STX6~) show
X73 22 moveto (~STX12~) show
X73 7 moveto (~STX20~) show
X
X98 0 translate
X87 55 shadowbox
X5 77 moveto (PASSIVE) show 3 68 moveto (DEFENSE) show
Xifont setfont 3 56 moveto (Armor:) show
X28 55 moveto 22 0 rlineto stroke
X3 42 moveto (Shield:) show
X28 41 moveto 22 0 rlineto stroke
X28 27 moveto 22 0 rlineto stroke
X12font setfont
X39 56 moveto (~ARM_PD~) show
X39 42 moveto (~SHIELD_PD~) show
X39 28 moveto (~OTHER_PD~) show
X39 9 moveto (~TOTAL_PD~) show
Xsfont setfont
X3 30 moveto (T) show
X3 23 moveto (O) show
X3 16 moveto (T) show
X3 9 moveto (A) show
X3 2 moveto (L) show
X
X59 0 translate
X26 200 shadowbox
X12font setfont
X75 10 moveto (~REACT~) show
Xfont setfont
X4 10 moveto (REACTION +/\-) show
X70 9 moveto 125 0 rlineto stroke
X
X0 30 translate
X265 200 shadowbox
X
X-157 -94 translate
X60 153 shadowbox
X0 48 moveto 153 0 rlineto stroke
X51 0 moveto 0 48 rlineto stroke
X102 0 moveto 0 48 rlineto stroke
X35 51 moveto (ACTIVE DEFENSES) show
X9 40 moveto (DODGE) show
X61 40 moveto (PARRY) show
X112 40 moveto (BLOCK) show
X12font setfont
X22 20 moveto (~DODGE~) show
X71 20 moveto (~PARRY~) show
X123 20 moveto (~BLOCK~) show
Xifont setfont
X11 3 moveto (= Move) show
X59 3 moveto (Weapon/2) show
X114 3 moveto (Shield/2) show
X
X0 -54 translate
X50 153 shadowbox
Xsfont setfont
X5 26 moveto (Armor) show
X28 25 moveto 82 0 rlineto stroke
X5 13 moveto 105 0 rlineto stroke
X113 30 moveto (T) show
X113 23 moveto (O) show
X113 16 moveto (T) show
X113 9 moveto (A) show
X113 2 moveto (L) show
X12font setfont
X28 26 moveto (~ARM_TYP~) show
X95 26 moveto (~ARM_DR~) show
X10 14 moveto (~OTHER_TYP1~) show
X95 14 moveto (~OTHER_DR1~) show
X10 2 moveto (~OTHER_TYP2~) show
X95 2 moveto (~OTHER_DR2~) show
X135 16 moveto (~TOTAL_DR~) show
Xfont setfont
X5 41 moveto (DAMAGE RESISTANCE) show
X85 28 moveto (:) show
X85 16 moveto (:) show
X85 4 moveto (:) show
X
X0 -244 translate
X240 153 shadowbox
X5 231 moveto (ADVANTAGES,) show
X5 222 moveto (DISADVANTAGES, QUIRKS) show
X.1 setlinewidth
X209 -12 5 { 5 exch moveto 145 0 rlineto stroke } for
Xfont setfont
X5 210 moveto (~ADV_1~) show
X130 210 moveto (\50 ~ADV_COST_1~ \51) show
X5 198 moveto (~ADV_2~) show
X130 198 moveto (\50 ~ADV_COST_2~ \51) show
X5 186 moveto (~ADV_3~) show
X130 186 moveto (\50 ~ADV_COST_3~ \51) show
X5 174 moveto (~ADV_4~) show
X130 174 moveto (\50 ~ADV_COST_4~ \51) show
X5 162 moveto (~ADV_5~) show
X130 162 moveto (\50 ~ADV_COST_5~ \51) show
X5 138 moveto (~DIS_1~) show
X130 138 moveto (\50 ~DIS_COST_1~ \51) show
X5 126 moveto (~DIS_2~) show
X130 126 moveto (\50 ~DIS_COST_2~ \51) show
X5 114 moveto (~DIS_3~) show
X130 114 moveto (\50 ~DIS_COST_3~ \51) show
X5 102 moveto (~DIS_4~) show
X130 102 moveto (\50 ~DIS_COST_4~ \51) show
X5 90 moveto (~DIS_5~) show
X130 90 moveto (\50 ~DIS_COST_5~ \51) show
X5 66 moveto (~QUIRK_1~) show
X5 54 moveto (~QUIRK_2~) show
X5 42 moveto (~QUIRK_3~) show
X5 30 moveto (~QUIRK_4~) show
X5 18 moveto (~QUIRK_5~) show
X
X5 -18 moveto (RANGE :) show
X5 -30 moveto (MODIFIER :) show
X60 -18 moveto ( 1) show
X60 -30 moveto (+2) show
X98 -18 moveto (1.5) show
X98 -30 moveto ( +1) show
X136 -18 moveto (2) show
X136 -30 moveto (0) show
X174 -18 moveto (3) show
X174 -30 moveto (-1) show
X212 -18 moveto (4.5) show
X212 -30 moveto ( -2) show
X250 -18 moveto ( 7) show
X250 -30 moveto (-3) show
X288 -18 moveto (10) show
X288 -30 moveto (-4) show
X326 -18 moveto (15) show
X326 -30 moveto (-5) show
X364 -18 moveto (20) show
X364 -30 moveto (-6) show
X402 -18 moveto (30) show
X402 -30 moveto (-7) show
X440 -18 moveto (45) show
X440 -30 moveto (-8) show
X478 -18 moveto (70) show
X478 -30 moveto (-9) show
X516 -18 moveto (100) show
X516 -30 moveto (-10) show
X
X157 0 translate
X84 200 shadowbox
X5 75 moveto (WEAPON RANGES) show
Xifont setfont
X5 66 moveto (Weapon) show
X103 66 moveto (SS   ACC   1/2 DMG    MAX) show
X53 -12 5 { 5 exch moveto 191 0 rlineto stroke } for
Xfont setfont
X5 54 moveto (~THR_WEAP_1~) show
X103 54 moveto (~THR_WEAP_SS_1~) show
X120 54 moveto (~THR_WEAP_ACC_1~) show
X150 54 moveto (~THR_WEAP_HALF_1~) show
X180 54 moveto (~THR_WEAP_MAX_1~) show
X5 42 moveto (~THR_WEAP_2~) show
X103 42 moveto (~THR_WEAP_SS_2~) show
X120 42 moveto (~THR_WEAP_ACC_2~) show
X150 42 moveto (~THR_WEAP_HALF_2~) show
X180 42 moveto (~THR_WEAP_MAX_2~) show
X5 30 moveto (~THR_WEAP_3~) show
X103 30 moveto (~THR_WEAP_SS_3~) show
X120 30 moveto (~THR_WEAP_ACC_3~) show
X150 30 moveto (~THR_WEAP_HALF_3~) show
X180 30 moveto (~THR_WEAP_MAX_3~) show
X5 18 moveto (~THR_WEAP_4~) show
X103 18 moveto (~THR_WEAP_SS_4~) show
X120 18 moveto (~THR_WEAP_ACC_4~) show
X150 18 moveto (~THR_WEAP_HALF_4~) show
X180 18 moveto (~THR_WEAP_MAX_4~) show
X5 6 moveto (~THR_WEAP_5~) show
X103 6 moveto (~THR_WEAP_SS_5~) show
X120 6 moveto (~THR_WEAP_ACC_5~) show
X150 6 moveto (~THR_WEAP_HALF_5~) show
X180 6 moveto (~THR_WEAP_MAX_5~) show
X
X0 88 translate
X270 200 shadowbox
Xifont setfont
X5 251 moveto (Item) show
X96 251 moveto (Damage     Skill      $       Wt.) show
X91 243 moveto (Type  Amt.   Level) show
X25 2 moveto (Totals: $) show
X110 2 moveto (Lbs.) show
Xfont setfont
X5 261 moveto (WEAPONS AND POSSESSIONS) show
X231 -12 10 { 5 exch moveto 191 0 rlineto stroke } for
X5 232 moveto (~ITEM_1~) show
X91 232 moveto (~ITEM_STAT_1~) show
X160 232 moveto (~ITEM_COST_1~) show
X185 232 moveto (~ITEM_WT_1~) show
X5 220 moveto (~ITEM_2~) show
X91 220 moveto (~ITEM_STAT_2~) show
X160 220 moveto (~ITEM_COST_2~) show
X185 220 moveto (~ITEM_WT_2~) show
X5 208 moveto (~ITEM_3~) show
X91 208 moveto (~ITEM_STAT_3~) show
X160 208 moveto (~ITEM_COST_3~) show
X185 208 moveto (~ITEM_WT_3~) show
X5 196 moveto (~ITEM_4~) show
X91 196 moveto (~ITEM_STAT_4~) show
X160 196 moveto (~ITEM_COST_4~) show
X185 196 moveto (~ITEM_WT_4~) show
X5 184 moveto (~ITEM_5~) show
X91 184 moveto (~ITEM_STAT_5~) show
X160 184 moveto (~ITEM_COST_5~) show
X185 184 moveto (~ITEM_WT_5~) show
X5 172 moveto (~ITEM_6~) show
X91 172 moveto (~ITEM_STAT_6~) show
X160 172 moveto (~ITEM_COST_6~) show
X185 172 moveto (~ITEM_WT_6~) show
X5 160 moveto (~ITEM_7~) show
X91 160 moveto (~ITEM_STAT_7~) show
X160 160 moveto (~ITEM_COST_7~) show
X185 160 moveto (~ITEM_WT_7~) show
X5 148 moveto (~ITEM_8~) show
X91 148 moveto (~ITEM_STAT_8~) show
X160 148 moveto (~ITEM_COST_8~) show
X185 148 moveto (~ITEM_WT_8~) show
X5 136 moveto (~ITEM_9~) show
X91 136 moveto (~ITEM_STAT_9~) show
X160 136 moveto (~ITEM_COST_9~) show
X185 136 moveto (~ITEM_WT_9~) show
X5 124 moveto (~ITEM_10~) show
X91 124 moveto (~ITEM_STAT_10~) show
X160 124 moveto (~ITEM_COST_10~) show
X185 124 moveto (~ITEM_WT_10~) show
X5 112 moveto (~ITEM_11~) show
X91 112 moveto (~ITEM_STAT_11~) show
X160 112 moveto (~ITEM_COST_11~) show
X185 112 moveto (~ITEM_WT_11~) show
X5 100 moveto (~ITEM_12~) show
X91 100 moveto (~ITEM_STAT_12~) show
X160 100 moveto (~ITEM_COST_12~) show
X185 100 moveto (~ITEM_WT_12~) show
X5 88 moveto (~ITEM_13~) show
X91 88 moveto (~ITEM_STAT_13~) show
X160 88 moveto (~ITEM_COST_13~) show
X185 88 moveto (~ITEM_WT_13~) show
X5 76 moveto (~ITEM_14~) show
X91 76 moveto (~ITEM_STAT_14~) show
X160 76 moveto (~ITEM_COST_14~) show
X185 76 moveto (~ITEM_WT_14~) show
X5 64 moveto (~ITEM_15~) show
X91 64 moveto (~ITEM_STAT_15~) show
X160 64 moveto (~ITEM_COST_15~) show
X185 64 moveto (~ITEM_WT_15~) show
X5 52 moveto (~ITEM_16~) show
X91 52 moveto (~ITEM_STAT_16~) show
X160 52 moveto (~ITEM_COST_16~) show
X185 52 moveto (~ITEM_WT_16~) show
X5 40 moveto (~ITEM_17~) show
X91 40 moveto (~ITEM_STAT_17~) show
X160 40 moveto (~ITEM_COST_17~) show
X185 40 moveto (~ITEM_WT_17~) show
X5 28 moveto (~ITEM_18~) show
X91 28 moveto (~ITEM_STAT_18~) show
X160 28 moveto (~ITEM_COST_18~) show
X185 28 moveto (~ITEM_WT_18~) show
X5 16 moveto (~ITEM_19~) show
X91 16 moveto (~ITEM_STAT_19~) show
X160 16 moveto (~ITEM_COST_19~) show
X185 16 moveto (~ITEM_WT_19~) show
X
X60 2 moveto (~TOTAL_CASH~) show
X130 2 moveto (~TOTAL_WEIGHT~) show
X
X204 -88 translate
X84 159 shadowbox
X5 73 moveto (SUMMARY) show
Xifont setfont
X117 73 moveto (Point Total) show
X5 62 moveto (Attributes) show
X5 50 moveto (Advantages) show
X5 38 moveto (Disadvantages) show
X5 26 moveto (Quirks) show
X5 14 moveto (Skills) show
X5 2 moveto (TOTAL) show
X61 -12 10 { 60 exch moveto 90 0 rlineto stroke } for
Xfont setfont
X117 62 moveto (~ATTRIB_TOTAL~) show
X117 50 moveto (~ADV_TOTAL~) show
X117 38 moveto (~DIS_TOTAL~) show
X117 26 moveto (~QUIRK_TOTAL~) show
X117 14 moveto (~SKILL_TOTAL~) show
X117 2 moveto (~TOTAL~) show
X
X0 88 translate
X569 159 shadowbox
X103 560 moveto (Pt. Cost   Level) show
Xfont setfont
X5 560 moveto (SKILLS) show
X550 -12 5 { 5 exch moveto 148 0 rlineto stroke } for
X5 551 moveto (~SKILL_1~) show
X110 551 moveto (~SKILLCOST_1~) show
X135 551 moveto (~SKILLLEV_1~) show
X5 539 moveto (~SKILL_2~) show
X110 539 moveto (~SKILLCOST_2~) show
X135 539 moveto (~SKILLLEV_2~) show
X5 527 moveto (~SKILL_3~) show
X110 527 moveto (~SKILLCOST_3~) show
X135 527 moveto (~SKILLLEV_3~) show
X5 515 moveto (~SKILL_4~) show
X110 515 moveto (~SKILLCOST_4~) show
X135 515 moveto (~SKILLLEV_4~) show
X5 503 moveto (~SKILL_5~) show
X110 503 moveto (~SKILLCOST_5~) show
X135 503 moveto (~SKILLLEV_5~) show
X5 491 moveto (~SKILL_6~) show
X110 491 moveto (~SKILLCOST_6~) show
X135 491 moveto (~SKILLLEV_6~) show
X5 479 moveto (~SKILL_7~) show
X110 479 moveto (~SKILLCOST_7~) show
X135 479 moveto (~SKILLLEV_7~) show
X5 467 moveto (~SKILL_8~) show
X110 467 moveto (~SKILLCOST_8~) show
X135 467 moveto (~SKILLLEV_8~) show
X5 455 moveto (~SKILL_9~) show
X110 455 moveto (~SKILLCOST_9~) show
X135 455 moveto (~SKILLLEV_9~) show
X5 443 moveto (~SKILL_10~) show
X110 443 moveto (~SKILLCOST_10~) show
X135 443 moveto (~SKILLLEV_10~) show
X5 431 moveto (~SKILL_11~) show
X110 431 moveto (~SKILLCOST_11~) show
X135 431 moveto (~SKILLLEV_11~) show
X5 419 moveto (~SKILL_12~) show
X110 419 moveto (~SKILLCOST_12~) show
X135 419 moveto (~SKILLLEV_12~) show
X5 407 moveto (~SKILL_13~) show
X110 407 moveto (~SKILLCOST_13~) show
X135 407 moveto (~SKILLLEV_13~) show
X5 395 moveto (~SKILL_14~) show
X110 395 moveto (~SKILLCOST_14~) show
X135 395 moveto (~SKILLLEV_14~) show
X5 383 moveto (~SKILL_15~) show
X110 383 moveto (~SKILLCOST_15~) show
X135 383 moveto (~SKILLLEV_15~) show
X5 371 moveto (~SKILL_16~) show
X110 371 moveto (~SKILLCOST_16~) show
X135 371 moveto (~SKILLLEV_16~) show
X5 359 moveto (~SKILL_17~) show
X110 359 moveto (~SKILLCOST_17~) show
X135 359 moveto (~SKILLLEV_17~) show
X5 347 moveto (~SKILL_18~) show
X110 347 moveto (~SKILLCOST_18~) show
X135 347 moveto (~SKILLLEV_18~) show
X5 335 moveto (~SKILL_19~) show
X110 335 moveto (~SKILLCOST_19~) show
X135 335 moveto (~SKILLLEV_19~) show
X5 323 moveto (~SKILL_20~) show
X110 323 moveto (~SKILLCOST_20~) show
X135 323 moveto (~SKILLLEV_20~) show
X5 311 moveto (~SKILL_21~) show
X110 311 moveto (~SKILLCOST_21~) show
X135 311 moveto (~SKILLLEV_21~) show
X5 299 moveto (~SKILL_22~) show
X110 299 moveto (~SKILLCOST_22~) show
X135 299 moveto (~SKILLLEV_22~) show
X5 287 moveto (~SKILL_23~) show
X110 287 moveto (~SKILLCOST_23~) show
X135 287 moveto (~SKILLLEV_23~) show
X5 275 moveto (~SKILL_24~) show
X110 275 moveto (~SKILLCOST_24~) show
X135 275 moveto (~SKILLLEV_24~) show
X5 263 moveto (~SKILL_25~) show
X110 263 moveto (~SKILLCOST_25~) show
X135 263 moveto (~SKILLLEV_25~) show
X5 251 moveto (~SKILL_26~) show
X110 251 moveto (~SKILLCOST_26~) show
X135 251 moveto (~SKILLLEV_26~) show
X5 239 moveto (~SKILL_27~) show
X110 239 moveto (~SKILLCOST_27~) show
X135 239 moveto (~SKILLLEV_27~) show
X5 227 moveto (~SKILL_28~) show
X110 227 moveto (~SKILLCOST_28~) show
X135 227 moveto (~SKILLLEV_28~) show
X5 215 moveto (~SKILL_29~) show
X110 215 moveto (~SKILLCOST_29~) show
X135 215 moveto (~SKILLLEV_29~) show
X5 203 moveto (~SKILL_30~) show
X110 203 moveto (~SKILLCOST_30~) show
X135 203 moveto (~SKILLLEV_30~) show
X5 191 moveto (~SKILL_31~) show
X110 191 moveto (~SKILLCOST_31~) show
X135 191 moveto (~SKILLLEV_31~) show
X5 179 moveto (~SKILL_32~) show
X110 179 moveto (~SKILLCOST_32~) show
X135 179 moveto (~SKILLLEV_32~) show
X5 167 moveto (~SKILL_33~) show
X110 167 moveto (~SKILLCOST_33~) show
X135 167 moveto (~SKILLLEV_33~) show
X5 155 moveto (~SKILL_34~) show
X110 155 moveto (~SKILLCOST_34~) show
X135 155 moveto (~SKILLLEV_34~) show
X5 143 moveto (~SKILL_35~) show
X110 143 moveto (~SKILLCOST_35~) show
X135 143 moveto (~SKILLLEV_35~) show
X5 131 moveto (~SKILL_36~) show
X110 131 moveto (~SKILLCOST_36~) show
X135 131 moveto (~SKILLLEV_36~) show
X5 119 moveto (~SKILL_37~) show
X110 119 moveto (~SKILLCOST_37~) show
X135 119 moveto (~SKILLLEV_37~) show
X5 107 moveto (~SKILL_38~) show
X110 107 moveto (~SKILLCOST_38~) show
X135 107 moveto (~SKILLLEV_38~) show
X5 95 moveto (~SKILL_39~) show
X110 95 moveto (~SKILLCOST_39~) show
X135 95 moveto (~SKILLLEV_39~) show
X5 83 moveto (~SKILL_40~) show
X110 83 moveto (~SKILLCOST_40~) show
X135 83 moveto (~SKILLLEV_40~) show
X5 71 moveto (~SKILL_41~) show
X110 71 moveto (~SKILLCOST_41~) show
X135 71 moveto (~SKILLLEV_41~) show
X5 59 moveto (~SKILL_42~) show
X110 59 moveto (~SKILLCOST_42~) show
X135 59 moveto (~SKILLLEV_42~) show
X5 47 moveto (~SKILL_43~) show
X110 47 moveto (~SKILLCOST_43~) show
X135 47 moveto (~SKILLLEV_43~) show
X5 35 moveto (~SKILL_44~) show
X110 35 moveto (~SKILLCOST_44~) show
X135 35 moveto (~SKILLLEV_44~) show
X5 23 moveto (~SKILL_45~) show
X110 23 moveto (~SKILLCOST_45~) show
X135 23 moveto (~SKILLLEV_45~) show
X5 11 moveto (~SKILL_46~) show
X110 11 moveto (~SKILLCOST_46~) show
X135 11 moveto (~SKILLLEV_46~) show
X
Xshowpage
X
END_OF_FILE
if test 16959 -ne `wc -c <'sheet.template'`; then
    echo shar: \"'sheet.template'\" unpacked with wrong size!
fi
# end of 'sheet.template'
fi
echo shar: End of archive 2 \(of 4\).
cp /dev/null ark2isdone
MISSING=""
for I in 1 2 3 4 ; do
    if test ! -f ark${I}isdone ; then
	MISSING="${MISSING} ${I}"
    fi
done
if test "${MISSING}" = "" ; then
    echo You have unpacked all 4 archives.
    rm -f ark[1-9]isdone
else
    echo You still need to unpack the following archives:
    echo "        " ${MISSING}
fi
##  End of shell archive.
exit 0


exit 0 # Just in case...
