Newsgroups: comp.sources.misc
From: jnweiger@immd4.informatik.uni-erlangen.de (Juergen Weigert)
Subject:  v28i027:  screen-3.2 - multiple windows on an ASCII terminal, v3.2, Part10/11
Message-ID: <1992Feb9.223957.7200@sparky.imd.sterling.com>
X-Md4-Signature: 9cd863e0f40dec23a0f7fab971ec667d
Date: Sun, 9 Feb 1992 22:39:57 GMT
Approved: kent@sparky.imd.sterling.com

Submitted-by: jnweiger@immd4.informatik.uni-erlangen.de (Juergen Weigert)
Posting-number: Volume 28, Issue 27
Archive-name: screen-3.2/part10
Environment: UNIX

#!/bin/sh
# do not concatenate these parts, unpack them in order with /bin/sh
# file screen3.2/README continued
#
if test ! -r _shar_seq_.tmp; then
	echo 'Please unpack part 1 first!'
	exit 1
fi
(read Scheck
 if test "$Scheck" != 10; then
	echo Please unpack part "$Scheck" next!
	exit 1
 else
	exit 0
 fi
) < _shar_seq_.tmp || exit 1
if test ! -f _shar_wnt_.tmp; then
	echo 'x - still skipping screen3.2/README'
else
echo 'x - continuing file screen3.2/README'
sed 's/^X//' << 'SHAR_EOF' >> 'screen3.2/README' &&
X  when there you have multiple screens detached. 
X
screen -d [host.tty]
X  Detach a screen session from remote. Has the same effect as typing 'C-A d'
X  on the controlling terminal. '-D' will power-detach.
X
screen -list
screen -ls
X  Show all available sockets. If there are (DEAD???) sockets, you may consider 
X  removing them. If there are sockets missing, you may send a SIGCHLD to its
X  process 'SCREEN' and the process will re-establish the socket. (think of 
X  someone cleaning /tmp thoroughly).
X
screen -h 200
X  Starts a new screen session and sets the number of lines in the scrollback
X  buffer to 200. The default is 50 lines.
SHAR_EOF
echo 'File screen3.2/README is complete' &&
chmod 0444 screen3.2/README ||
echo 'restore of screen3.2/README failed'
Wc_c="`wc -c < 'screen3.2/README'`"
test 3036 -eq "$Wc_c" ||
	echo 'screen3.2/README: original size 3036, current size' "$Wc_c"
rm -f _shar_wnt_.tmp
fi
# ============= screen3.2/Makefile ==============
if test -f 'screen3.2/Makefile' -a X"$1" != X"-c"; then
	echo 'x - skipping screen3.2/Makefile (File already exists)'
	rm -f _shar_wnt_.tmp
else
> _shar_wnt_.tmp
echo 'x - extracting screen3.2/Makefile (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'screen3.2/Makefile' &&
#
# Makefile for screen
#
# See config.h for configuration options.
#
X
# If you choose to compile with the tried and true:
CC= cc
#CFLAGS= -O
#CFLAGS= -g -DTMPTEST -DDEBUG
CFLAGS= -g 
LDFLAGS=
X
# If you're using GNU C, be sure to use the -traditional flag:
#CC= gcc
#CFLAGS = -O -fstrength-reduce -fcombine-regs -finline-functions #-Wall
#CFLAGS= -traditional -O
#CFLAGS= -g -traditional -DTMPTEST
#CFLAGS= -g -traditional -DTMPTEST -DDEBUG
#LDFLAGS= -s
X
#LIBS= nmalloc.o -ltermcap 
LIBS= -ltermcap 
X
CFILES=	screen.c ansi.c help.c fileio.c mark.c window.c socket.c
OFILES=	screen.o ansi.o help.o fileio.o mark.o window.o socket.o
X
screen: $(OFILES)
X	$(CC) $(CFLAGS) $(LDFLAGS) -o screen $(OFILES) $(LIBS)
X
screen.o: screen.c screen.h config.h patchlevel.h extern.h
X	$(CC) $(CFLAGS) -c screen.c
X
help.o: help.c screen.h config.h ansi.h extern.h patchlevel.h
X	$(CC) $(CFLAGS) -c help.c
X
fileio.o: fileio.c screen.h config.h extern.h
X	$(CC) $(CFLAGS) -c fileio.c
X
ansi.o: ansi.c screen.h config.h ansi.h extern.h
X	$(CC) $(CFLAGS) -c ansi.c
X
mark.o: mark.c screen.h config.h ansi.h extern.h
X	$(CC) $(CFLAGS) -c mark.c
X
window.o: window.c config.h screen.h  extern.h
X	$(CC) $(CFLAGS) -c window.c
X
socket.o: socket.c config.h screen.h  extern.h
X	$(CC) $(CFLAGS) -c socket.c
X
clean:
X	rm -f $(OFILES) screen
X
lint:
X	lint -I. $(CFILES)
X
saber:
X	#load $(CFLAGS) screen.c ansi.c $(LIBS)
SHAR_EOF
chmod 0444 screen3.2/Makefile ||
echo 'restore of screen3.2/Makefile failed'
Wc_c="`wc -c < 'screen3.2/Makefile'`"
test 1377 -eq "$Wc_c" ||
	echo 'screen3.2/Makefile: original size 1377, current size' "$Wc_c"
rm -f _shar_wnt_.tmp
fi
# ============= screen3.2/INSTALLATION ==============
if test -f 'screen3.2/INSTALLATION' -a X"$1" != X"-c"; then
	echo 'x - skipping screen3.2/INSTALLATION (File already exists)'
	rm -f _shar_wnt_.tmp
else
> _shar_wnt_.tmp
echo 'x - extracting screen3.2/INSTALLATION (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'screen3.2/INSTALLATION' &&
Installation of screen3.1
X
0.)
Unpack. Screen comes as a compressed tar archinve. But... you propably
already managed that step, when you are reading this.
X
1.)
take a look at the config directory. choose one of the config files there,
or edit one to suit your needs. If necessary cunsult the online manuals
or look into /usr/include/...
X
2.)
look at the Makefiles. Different systems need different libraries. 
Some need even the putenv code added. Build a Makefile that satisfies
all these requirements. Then decide if you want to do screen debugging
or want a production screen. In the first case you want to add -DDEBUG
to CFLAGS. In the second case you may want to have -O in your CFLAGS
and -s in your LDFLAGS, as you don't want to analyse a core-dump, if
that ever happens. Still the executable may be 250 to 500 kbytes in size.
X
3.)
compile with the right compiler. If you have gcc, use it. If you have 
a SYSV-ish and a bsd-like compiler, choose the later. E.g. on suns screen
will not run properly when compiled with /usr/5bin/cc.
X
4.)
You may well run screen from your private binary directory and with a 
private socket directory like $HOME/.screen. But to have a full featured
screen and (from a users point of view) more secure pty's you should
consult a system administrator and discuss installing screen setuid-root
in some globally accessible directory like /usr/local/bin.
X
Juergen Weigert. jnweiger@immd4.informatik.uni-erlangen.de
SHAR_EOF
chmod 0664 screen3.2/INSTALLATION ||
echo 'restore of screen3.2/INSTALLATION failed'
Wc_c="`wc -c < 'screen3.2/INSTALLATION'`"
test 1450 -eq "$Wc_c" ||
	echo 'screen3.2/INSTALLATION: original size 1450, current size' "$Wc_c"
rm -f _shar_wnt_.tmp
fi
# ============= screen3.2/CHANGES ==============
if test -f 'screen3.2/CHANGES' -a X"$1" != X"-c"; then
	echo 'x - skipping screen3.2/CHANGES (File already exists)'
	rm -f _shar_wnt_.tmp
else
> _shar_wnt_.tmp
echo 'x - extracting screen3.2/CHANGES (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'screen3.2/CHANGES' &&
3.1.1
------
X
iScreen is now under the GNU copyleft license. See file COPYING.
X
command line option -A. $LINES, $COLUMNS improved.
X
C-A : vbell_wait <sec>
X
XXENIX support (Ronald Khoo)
X
SYSV has uname() instead of gethostname().
X
hpux has setresuid.
X
ClearScreen now saves image to scrollback buffer.
X
mips has setenv.
X
numerous bugfixes.
X
3.1 finally released version.
=============================
X
3.0.99: last minute changes:
----------------------------
X
MIPS support (J{rvinen Markku)
X
SVR4 support (Marc Boucher)
X
secopen() secfopen() calls replace stat/access/open.
C-a : echo improved.
'register int'
X
Changes up to Screen 3.0 Patchlevel 7
=====================================
X
Better terminfo support: Screen now checks if a termcap/info
entry which the name "screen.$TERM" does exist. Look in the
"VIRTUAL TERMINAL" section of the manual for more details.
X
Many security improvements.
X
ScrollRegion() bug fixed which caused slow scrolling if AL
or DL was used.
X
Pyramid and Ultrix support added. (Tim and Larry)
X  
ENVIRONMENT support.
X  /local/etc/screenrc checks for $SYSSCREENRC
X  $HOME/.screenrc checks for $ISCREENRC and $SCREENRC
X  /local/screens checks for $ISCREENDIR and $SCREENDIR
X  .screenrc understands ${VAR} and $VAR .
X
screen 3.0 Patchlevel 6
=======================
X
.screenrc:
X  screen now only opens the windows you explicitly ask for. if you 
X  specify none, you still get one window, of course.
X
screen 3.0. Patchlevel 5
========================
X
Ansi prototyping by Christos.
X
copy mode: CTRL-U / CTRL-D exchanged. code cleanup.
X
changes to screen 3.0 patchlevel 4
==================================
X
markkeys "string"
X  allows to rebind the keys used in copy/history mode.
X  string is made up of pairs "<oldchar>=<newchar>" which are separated
X  by a colon. Oldchar and newchar are either single ascii characters, 
X  or the two character sequence ^x, where x is an ascii character, or
X  a 3 digit octal value prepended with '\'. the string "\040=.:^M=q"
X  rebinds '.' to set marks, and the return rey will abort copy mode.
X
set scrollback 100
X  resizes the scrollback history buffer to 100 lines. a default of 50
X  is installed. 
X
A Howard Chu like scrollback history is installed. Many vi-like keys
X  are added to the copy mode. The '?' key reports on cursor position.
X
screen 3.0 Patchlevel 3
=======================
X
WriteString fixed, it did kill the display variable.
X
Yet another LP bugfix.
X
non vt100 semi-graphics character support.
X
waynes patch fixed
X
screen 3.0 Patchlevel 2
=======================
X
wayne patches cursor motion outside scrollregions.
X
.screenrc 
X  monitor on|off
X
changes in Screen 3.0 Patchlevel 1
==================================
X
screen -wipe
X
^A : set vbell_msg "Wuff Wuff"
X
Thousand enhancements: help resizible, copy'n'paste in main
X  socket loop, and no more '\0' hackin'. :WS=\E8;%d;%dt:
X
screen can now resize windows under sunview.
X
^A : set crlf on|off
X  effects markroutine join.
X
screen learned about sized windows under X
X
screen -ls (-d) -q
X  quiet option. We count the number of detached (attached) sessions and set
X  a return value of 10+n. The -q option inhibits all startup
X  warnings/messages. i.e. screen -R -q may return with code 12 or higher
X  or start a new/old session.
X
pow_detach_msg "text string"
X  new command, allows messages, terminal reset, etc. on logout caused
X  by pow_detach.
X
^A : learned a new keyword "set":
X  commands like "login on" , "vbell off", ... affect the default for
X  windows to be created. But commands like "set login off" affect
X  the actual setting of this window. and not the default.
X  such commands may be bound to keys. example: 
X  bind 'O' set login off
X  is valid in your .screenrc as well as typed at the ':' prompt.
X  a bonus is ":set all" which is synonym to ":help".
X  At the Colon prompt also KeyNames can be entered, alothough that makes
X  not always sense.
X
^A x uses a builtin lockprg, if 
X  a) we don't find our lockprg, or
X  b) user supplies us with the environmet variable LOCKPRG set to "builtin"
X  the builtin locks until your login password is typed. on systems using
X  "shadow password files" you are prompted for a password.
X
markroutine can append joined.
X
screen removes the "controlling tty" from utmp while ptys are attached.
X
markroutine performs CR+NL when '\n' is pressed
X
screen may die quietly, when no TERMCAP entry for "screen" is
found, and screen is run under X-windows
X
_SEQUENT_ marks sequent386_ptx
X
screen runs now under SunOS4.1.1 (we need setsid()!).
X
bug in SetForeWindow fixed.
X
rare markroutine bug fixed.
X
we dont open every file the attacher tells us.
X
we have now our wonderful "Wuff, Wuff" visual_bell
X
we have now the interprocess-communication-buffer. secure version.
X
'^A =' removes the interprocess-communication-buffer.
X
markroutine as in 2.1
X
markroutine: 'a' toggles append mode,
X             '>' like ' ', but immediately WriteFile(DUMP_EXCHANGE) then.
X             'A' like ' ', but first switch to append mode.
X
.screenrc understands "screen 2:faui09 rlogin faui09 -l jnweiger"
X                  and "password none"
X                  and "vbell [on|off]"
X
'^A :' allows .screenrc commands "online".
X
screen now receives new $TERM from attacher, when it is reattached 
X
MakeClientSocket() fifo version does now test for access.
X
.screenrc learns "hardstatus {on|off}"
X
termcap's VB is used for vbell if available.
X
Attach() code rewritten:
X	screen now lists socket directory, if it does not find a suitable socket
X	screen -d [host.tty] detaches a running screen. 
X
screen -[ls|list]
X	list all sockets that we find in our sockdir
X
when the socket has been removed, send a SIGCHLD to the poor SCREEN 
process and it will try to recover. then try a 'screen -r' again.
all the socket stuff lives now in an extra file.
X
Major changes in version 2.4:
=============================
X
*  Test version that presents the erlangen extensions from 2.0 in a 2.3
X   screen.
X
*  window resize support
X
*  screen locking C-a x
X
*  support for SYSV
X
*  password protection
X
*  copy & paste across screens
X
*  remote detach and power detach
X
Major changes in version 2.3:
X
*  Terminal emulation has been significantly enhanced and bugfixed.
X
*  We now fully update the last character on the screen for true auto-
X   margin terminals, though there may be some delay before the character
X   can be safely added to the screen.  If your terminal has character
X   insert it will be used to shorten the delay.
X
*  Added the "termcap" .screenrc command to tweak your terminal's termcap
X   entry AND to customize the termcap generated for the virtual terminals.
X   See also the -L and -O command-line options, and the SCREENCAP environ-
X   ment variable.
X
*  Fixed screen's character handling when detached or suspended to NOT block
X   the child processes in their windows -- output continues to be processed
X   in the background.
X
*  Added a.k.a.s (window-name aliases) that allow you to customize the
X   window-information line, including being able to change the name on-
X   the-fly to reflect what's currently running in the window (see the
X   -k option, shellaka command, and ALSO KNOWN AS discussion in the doc).
X
*  Added the ability to log the output of a window to a file (see the
X   "C-a H" (log) command).
X
*  Flow-control can now be set for each window and switched interactively
X   (see the "flow" command, -f option, and FLOW CONTROL discussion).
X
*  Individual windows can be included or excluded from mention in the
X   /etc/utmp file (see the "login" command and -l option).
X
*  Added an activity monitor, which allows you to have a window watched for
X   the start of any output and alert you when it occurs (see the "C-a M"
X   (monitor) command).
X
*  Enhanced the information in the window-information line to keep track of
X   windows that have: logging turned on '(L)'; beeped in the background '!';
X   became active while being monitored '@' (see the "C-a w" (windows) command).
X
*  Added an on-line help display that lists all the commands and their
X   key bindings (see the "C-a ?" (help) command).
X
*  Extended handling of the beep message (and also the new activity message)
X   to allow '~' to specify a literal beep (see the "beep" and "activity"
X   .screenrc commands).
X
*  You can now set the default action on receipt of a hangup signal:  detach
X   or terminate (see the "autodetach" .screenrc command).
X
*  Routing of characters to their virtual terminals has been enhanced to
X   not drop characters nor (in rare circumstances) hang up screen.
X
*  The NFS compatibility has been enhanced.
X
Major changes in version 2.0a:
X
*  Screen allows you to `detach' the "screen" session from the physical
X   terminal and resume it at a later point in time (possibly on a
X   different terminal or in a different login session).
X
X  To get an impression of this functionality do the following:
X
X     - call "screen" and create a couple of windows
X     - type Control-A Control-D (screen terminates; you are back
X       in the shell)
X     - call "screen -r" to resume the detached screen
X
*  Screen supports multiple character sets and the ISO 2022 control
X   functions to designate and switch between character sets.
X   This allows you, for instance, to make use of the VT100 graphics
X   character set or national character sets.
SHAR_EOF
chmod 0444 screen3.2/CHANGES ||
echo 'restore of screen3.2/CHANGES failed'
Wc_c="`wc -c < 'screen3.2/CHANGES'`"
test 9292 -eq "$Wc_c" ||
	echo 'screen3.2/CHANGES: original size 9292, current size' "$Wc_c"
rm -f _shar_wnt_.tmp
fi
# ============= screen3.2/COPYING ==============
if test -f 'screen3.2/COPYING' -a X"$1" != X"-c"; then
	echo 'x - skipping screen3.2/COPYING (File already exists)'
	rm -f _shar_wnt_.tmp
else
> _shar_wnt_.tmp
echo 'x - extracting screen3.2/COPYING (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'screen3.2/COPYING' &&
X		    GNU GENERAL PUBLIC LICENSE
X		     Version 1, February 1989
X
X Copyright (C) 1989 Free Software Foundation, Inc.
X                    675 Mass Ave, Cambridge, MA 02139, USA
X Everyone is permitted to copy and distribute verbatim copies
X of this license document, but changing it is not allowed.
X
X			    Preamble
X
X  The license agreements of most software companies try to keep users
at the mercy of those companies.  By contrast, our General Public
License is intended to guarantee your freedom to share and change free
software--to make sure the software is free for all its users.  The
General Public License applies to the Free Software Foundation's
software and to any other program whose authors commit to using it.
You can use it for your programs, too.
X
X  When we speak of free software, we are referring to freedom, not
price.  Specifically, the General Public License is designed to make
sure that you have the freedom to give away or sell copies of free
software, that you receive source code or can get it if you want it,
that you can change the software or use pieces of it in new free
programs; and that you know you can do these things.
X
X  To protect your rights, we need to make restrictions that forbid
anyone to deny you these rights or to ask you to surrender the rights.
These restrictions translate to certain responsibilities for you if you
distribute copies of the software, or if you modify it.
X
X  For example, if you distribute copies of a such a program, whether
gratis or for a fee, you must give the recipients all the rights that
you have.  You must make sure that they, too, receive or can get the
source code.  And you must tell them their rights.
X
X  We protect your rights with two steps: (1) copyright the software, and
(2) offer you this license which gives you legal permission to copy,
distribute and/or modify the software.
X
X  Also, for each author's protection and ours, we want to make certain
that everyone understands that there is no warranty for this free
software.  If the software is modified by someone else and passed on, we
want its recipients to know that what they have is not the original, so
that any problems introduced by others will not reflect on the original
authors' reputations.
X
X  The precise terms and conditions for copying, distribution and
modification follow.
X
X		    GNU GENERAL PUBLIC LICENSE
X   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION
X
X  0. This License Agreement applies to any program or other work which
contains a notice placed by the copyright holder saying it may be
distributed under the terms of this General Public License.  The
"Program", below, refers to any such program or work, and a "work based
on the Program" means either the Program or any work containing the
Program or a portion of it, either verbatim or with modifications.  Each
licensee is addressed as "you".
X
X  1. You may copy and distribute verbatim copies of the Program's source
code as you receive it, in any medium, provided that you conspicuously and
appropriately publish on each copy an appropriate copyright notice and
disclaimer of warranty; keep intact all the notices that refer to this
General Public License and to the absence of any warranty; and give any
other recipients of the Program a copy of this General Public License
along with the Program.  You may charge a fee for the physical act of
transferring a copy.
X
X  2. You may modify your copy or copies of the Program or any portion of
it, and copy and distribute such modifications under the terms of Paragraph
1 above, provided that you also do the following:
X
X    a) cause the modified files to carry prominent notices stating that
X    you changed the files and the date of any change; and
X
X    b) cause the whole of any work that you distribute or publish, that
X    in whole or in part contains the Program or any part thereof, either
X    with or without modifications, to be licensed at no charge to all
X    third parties under the terms of this General Public License (except
X    that you may choose to grant warranty protection to some or all
X    third parties, at your option).
X
X    c) If the modified program normally reads commands interactively when
X    run, you must cause it, when started running for such interactive use
X    in the simplest and most usual way, to print or display an
X    announcement including an appropriate copyright notice and a notice
X    that there is no warranty (or else, saying that you provide a
X    warranty) and that users may redistribute the program under these
X    conditions, and telling the user how to view a copy of this General
X    Public License.
X
X    d) You may charge a fee for the physical act of transferring a
X    copy, and you may at your option offer warranty protection in
X    exchange for a fee.
X
Mere aggregation of another independent work with the Program (or its
derivative) on a volume of a storage or distribution medium does not bring
the other work under the scope of these terms.
X
X  3. You may copy and distribute the Program (or a portion or derivative of
it, under Paragraph 2) in object code or executable form under the terms of
Paragraphs 1 and 2 above provided that you also do one of the following:
X
X    a) accompany it with the complete corresponding machine-readable
X    source code, which must be distributed under the terms of
X    Paragraphs 1 and 2 above; or,
X
X    b) accompany it with a written offer, valid for at least three
X    years, to give any third party free (except for a nominal charge
X    for the cost of distribution) a complete machine-readable copy of the
X    corresponding source code, to be distributed under the terms of
X    Paragraphs 1 and 2 above; or,
X
X    c) accompany it with the information you received as to where the
X    corresponding source code may be obtained.  (This alternative is
X    allowed only for noncommercial distribution and only if you
X    received the program in object code or executable form alone.)
X
Source code for a work means the preferred form of the work for making
modifications to it.  For an executable file, complete source code means
all the source code for all modules it contains; but, as a special
exception, it need not include source code for modules which are standard
libraries that accompany the operating system on which the executable
file runs, or for standard header files or definitions files that
accompany that operating system.
X
X  4. You may not copy, modify, sublicense, distribute or transfer the
Program except as expressly provided under this General Public License.
Any attempt otherwise to copy, modify, sublicense, distribute or transfer
the Program is void, and will automatically terminate your rights to use
the Program under this License.  However, parties who have received
copies, or rights to use copies, from you under this General Public
License will not have their licenses terminated so long as such parties
remain in full compliance.
X
X  5. By copying, distributing or modifying the Program (or any work based
on the Program) you indicate your acceptance of this license to do so,
and all its terms and conditions.
X
X  6. Each time you redistribute the Program (or any work based on the
Program), the recipient automatically receives a license from the original
licensor to copy, distribute or modify the Program subject to these
terms and conditions.  You may not impose any further restrictions on the
recipients' exercise of the rights granted herein.
X
X  7. The Free Software Foundation may publish revised and/or new versions
of the General Public License from time to time.  Such new versions will
be similar in spirit to the present version, but may differ in detail to
address new problems or concerns.
X
Each version is given a distinguishing version number.  If the Program
specifies a version number of the license which applies to it and "any
later version", you have the option of following the terms and conditions
either of that version or of any later version published by the Free
Software Foundation.  If the Program does not specify a version number of
the license, you may choose any version ever published by the Free Software
Foundation.
X
X  8. If you wish to incorporate parts of the Program into other free
programs whose distribution conditions are different, write to the author
to ask for permission.  For software which is copyrighted by the Free
Software Foundation, write to the Free Software Foundation; we sometimes
make exceptions for this.  Our decision will be guided by the two goals
of preserving the free status of all derivatives of our free software and
of promoting the sharing and reuse of software generally.
X
X			    NO WARRANTY
X
X  9. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY
FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN
OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES
PROVIDE THE PROGRAM "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED
OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS
TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE
PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,
REPAIR OR CORRECTION.
X
X  10. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING
WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR
REDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,
INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING
OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED
TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY
YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER
PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.
X
X		     END OF TERMS AND CONDITIONS
SHAR_EOF
chmod 0644 screen3.2/COPYING ||
echo 'restore of screen3.2/COPYING failed'
Wc_c="`wc -c < 'screen3.2/COPYING'`"
test 9934 -eq "$Wc_c" ||
	echo 'screen3.2/COPYING: original size 9934, current size' "$Wc_c"
rm -f _shar_wnt_.tmp
fi
# ============= screen3.2/poster ==============
if test -f 'screen3.2/poster' -a X"$1" != X"-c"; then
	echo 'x - skipping screen3.2/poster (File already exists)'
	rm -f _shar_wnt_.tmp
else
> _shar_wnt_.tmp
echo 'x - extracting screen3.2/poster (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'screen3.2/poster' &&
This is iScreen version 3.2. It is an upgrade to version 3.1.1 that was posted
in dec 91 to comp.sources.unix. 
Versions 3.1.x of iScreen are potential security riscs under SunOS 4.1.1. These
versions fail to detach or terminate the session when the modem line hangs up.
Anyone using telnet or rlogin could (unwillingly) connect to such a session.
X
iScreen users on SunOS 4.1.1 please do upgrade to version 3.2! 
X
Although fixing the bug described above was the main reason for this posting,
there are numerous other fixes/enhancements:
X
X	* support for NeXT, Apollo, Ultrix, SVR4, SCO, ISC, SGI, bsd386, ...
X	  added or enhanced. 
X	
X	* the "dead CTRL-O key" bug is fixed.
X	
X	* flow control has been redesigned.
X	
X	* I/O is no longer stripped to 7 bit.
X	
X	* new commands "hardcopy_append on", "bufferfile /tmp/myown", 
X	  "(set) refresh off".
X	  
X	* redesign of interrupt passing. The use of "screen -i" is now 
X	  encouraged.
X	
X	* overall code cleanup.
X	
The complete distribution of iScreen 3.2 is available via ftp from:
X
X   ftp.uni-erlangen.de[131.188.1.43]:portal/utilities/screen/screen32.tar.Z
X   
For a brief introduction and a short summary of essential commands
refer to the files "readme" and "README".
X   
I wish to thank all contributors for requesting features or sending patches.
Special thanks to Marc Boucher who tested and patched iScreen on numerous
platforms.
X
juergen.
SHAR_EOF
chmod 0664 screen3.2/poster ||
echo 'restore of screen3.2/poster failed'
Wc_c="`wc -c < 'screen3.2/poster'`"
test 1389 -eq "$Wc_c" ||
	echo 'screen3.2/poster: original size 1389, current size' "$Wc_c"
rm -f _shar_wnt_.tmp
fi
# ============= screen3.2/config/config.all ==============
if test ! -d 'screen3.2/config'; then
    echo 'x - creating directory screen3.2/config'
    mkdir 'screen3.2/config'
fi
if test -f 'screen3.2/config/config.all' -a X"$1" != X"-c"; then
	echo 'x - skipping screen3.2/config/config.all (File already exists)'
	rm -f _shar_wnt_.tmp
else
> _shar_wnt_.tmp
echo 'x - extracting screen3.2/config/config.all (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'screen3.2/config/config.all' &&
/* Copyright (c) 1991
X *      Juergen Weigert (jnweiger@immd4.informatik.uni-erlangen.de)
X *      Michael Schroeder (mlschroe@immd4.informatik.uni-erlangen.de)
X * Copyright (c) 1987 Oliver Laumann
X *
X * This program is free software; you can redistribute it and/or modify
X * it under the terms of the GNU General Public License as published by
X * the Free Software Foundation; either version 1, or (at your option)
X * any later version.
X *
X * This program is distributed in the hope that it will be useful,
X * but WITHOUT ANY WARRANTY; without even the implied warranty of
X * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X * GNU General Public License for more details.
X *
X * You should have received a copy of the GNU General Public License
X * along with this program (see the file COPYING); if not, write to the
X * Free Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X *
X * Noteworthy contributors to screen's design and implementation:
X *	Wayne Davison (davison@borland.com)
X *	Patrick Wolfe (pat@kai.com, kailand!pat)
X *	Bart Schaefer (schaefer@cse.ogi.edu)
X *	Nathan Glasser (nathan@brokaw.lcs.mit.edu)
X *	Larry W. Virden (lwv27%cas.BITNET@CUNYVM.CUNY.Edu)
X *	Howard Chu (hyc@hanauma.jpl.nasa.gov)
X *	Tim MacKenzie (tym@dibbler.cs.monash.edu.au)
X *	Markku Jarvinen (mta@{cc,cs,ee}.tut.fi)
X *	Marc Boucher (marc@CAM.ORG)
X *
X ****************************************************************
X * $Id: config.all,v 1.2 92/02/03 02:30:36 jnweiger Exp $ FAU
X */
X
X
/*
X *		Beginning of User Configuration Section
X *
X * First off, you should decide if you intend to install screen set-uid to
X * root.  This isn't necessary to use screen, but it allows the pseudo-ttys
X * to be set to their proper owner (for security purposes), /etc/utmp to be
X * updated, and /dev/kmem to be accessed to read the load average values.
X *
X * An alternative to installing screen set-uid root is to install it set-gid
X * utmp (with the file /etc/utmp installed to be group-utmp writable) or
X * set-gid kmem (with /dev/kmem set to be group-kmem readable) or some other
X * custom group to give you both.  The final alternative is to omit /etc/utmp
X * updating and the /dev/kmem reading (see the following defines) and simply
X * run screen as a regular program -- its major functions will be unaffected.
X */
X
X
/*
X * Define POSIX if your system supports IEEE Std 1003.1-1988 (POSIX).
X */
#define POSIX
X
/*
X * Define BSDJOBS if you have BSD-style job control (both process
X * groups and a tty that deals correctly with them).
X */
#define BSDJOBS
X
/*
X * Define TERMIO if you have struct termio instead of struct sgttyb.
X * This is usually the case for SVID systems, where BSD uses sgttyb.
X * POSIX systems should define this anyway, even though they use
X * struct termios.
X */
#define TERMIO
X
/*
X * Define TERMINFO if your machine emulates the termcap routines
X * with the terminfo database.
X * Thus the .screenrc file is parsed for
X * the command 'terminfo' and not 'termcap'.
X */
#undef TERMINFO
X
/*
X * Define SYSV if your machine is SYSV complient (Sys V, HPUX, A/UX)
X */
#undef SYSV
X
/*
X * Define SIGVOID if your signal handlers return void.  On older
X * systems, signal returns int, but on newer ones, it returns void.
X */
#define SIGVOID 
X
/*
X * Define DIRENT if your system has <dirent.h> instead of <sys/dir.h>
X */
#define DIRENT
X
/*
X * If screen is going to be installed set-uid root, you MUST define SUIDROOT.
X */
#define SUIDROOT
X
/*
X * If screen is installed with permissions to update /etc/utmp (such as if
X * it is installed set-uid root), define UTMPOK.  Set LOGINDEFAULT to one (1)
X * if you want entries added to /etc/utmp by default, else set it to zero (0).
X */
#define UTMPOK
#define LOGINDEFAULT	1
X
/*
X * If your system has getutent(), pututline(), etc. to write to the
X * utmp file, define GETUTENT.
X */
#undef GETUTENT
X
/*
X * Define UTHOST if the utmp file has a host field.
X */
#define UTHOST
X
/*
X * If UTMPOK is defined and your system (incorrectly) counts logins by
X * counting non-null entries in /etc/utmp (instead of counting non-null
X * entries with no hostname that are not on a pseudo tty), define USRLIMIT
X * to have screen put an upper-limit on the number of entries to write
X * into /etc/utmp.  This helps to keep you from exceeding a limited-user
X * license.
X */
#undef USRLIMIT
X
/*
X * If ttyslot() breaks getlogin() by returning indexes to utmp entries of
X * type DEAD_PROCESS, then our getlogin() replacement should be selected by
X * defining BUGGYGETLOGIN
X */
#undef BUGGYGETLOGIN
X
/*
X * If screen is NOT installed set-uid root, screen can provide tty security
X * by exclusively locking the ptys.  While this keeps other users from
X * opening your ptys, it also keeps your own subprocesses from being able
X * to open /dev/tty.  Define LOCKPTY to add this exclusive locking.
X */
#undef LOCKPTY
X
/*
X * If your system does not have the calls setreuid() and setregid(), define
X * NOREUID to force screen to use a forked process to safely create output
X * files without retaining any special privileges.  (Output logging will be
X * disabled, however.)
X */
#undef NOREUID
X
/*
X * If you want the "time" command to display the current load average
X * you must install screen with the needed privileges to read /dev/kmem
X * and have a load average format that screen understands.  We handle the
X * following formats:  3 doubles (BSD), 3 longs (sun), and 4 longs (alliant).
X */
#undef  LOADAV_3DOUBLES
#define LOADAV_3LONGS
#undef  LOADAV_4LONGS
X
/*
X * If your system has the new format /etc/ttys (like 4.3 BSD) and the
X * getttyent(3) library functions, define GETTTYENT.
X */
#undef GETTTYENT
X
/*
X * If your version of NFS supports named sockets and you install screen
X * suid root, you may need to define NFS_HACK for screen to be able to
X * open the sockets.
X */
#undef NFS_HACK
X
/*
X * By default screen will create a directory named ".screen" in the user's
X * HOME directory to contain the named sockets.  If this causes you problems
X * (e.g. some user's HOME directories are NFS-mounted and don't support
X * named sockets) you can have screen create the socket directories in a
X * common subdirectory, such as /tmp or /usr/tmp.  It makes things a little
X * more secure if you choose a directory where the "sticky" bit is on, but
X * this isn't required.  Screen will name the subdirectories "S-$USER"
X * (e.g /tmp/S-davison).
X * Do not define TMPTEST unless it's for debugging purpose.
X * If you want to have your socket directory in "/tmp/screens" then
X * define LOCALSOCKDIR and change the definition of SOCKDIR below.
X */
#define LOCALSOCKDIR
X
#ifdef LOCALSOCKDIR
# ifndef TMPTEST
#  define SOCKDIR "/tmp/screens"
# else
#  define SOCKDIR "/tmp/testscreens"
# endif
#endif
X
/*
X * Define USEBCOPY if the bcopy() from your system's C library supports the
X * overlapping of source and destination blocks.  When undefined, screen
X * uses its own (probably slower) version of bcopy().
X */
#undef USEBCOPY
X
/*
X * If you'd rather see the status line on the first line of your
X * terminal rather than the last, define TOPSTAT.
X */
#undef TOPSTAT
X
/*
X * If your system has vsprintf() and requires the use of the macros in
X * "varargs.h" to use functions with variable arguments,
X * define USEVARARGS.
X */
#undef USEVARARGS
X
/*
X * Define this if your system supports named pipes.
X */
#define NAMEDPIPE
X
/*
X * here come the erlangen extensions to screen:
X * define LOCK if you want to use a lock program for a screenlock.
X * define PASSWORD for secure reattach of your screen.
X * define COPY_PASTE to use the famous hacker's treasure zoo.
X * define POW_DETACH to have a detach_and_logout key.
X * define REMOTE_DETACH (-d option) to move screen between terminals.
X * (jw)
X */
#define LOCK
#define PASSWORD
#define COPY_PASTE
#define REMOTE_DETACH
#define POW_DETACH
X
/*
X * As error messages are mostly meaningless to the user, we
X * try to throw out phrases that are somewhat more familiar
X * to ...well, at least familiar to us NetHack players.
X */
#define NETHACK
X
/*
X * and another sneaky feature: screen sources two startup files.
X * first a global file with a path specified here, second
X * your local $HOME/.screenrc
X * Don't define this, if you don't want it.
X */
#define ETCSCREENRC "/local/etc/screenrc"
X
/*
X * if your system does not come with a putenv()/getenv() functions, 
X * you may bring in our own code by defining NEEDSETENV *and* adding 
X * putenv.c to your Makefile.
X */
#undef NEEDSETENV
X
/*
X * If you are on a SYS V machine that restricts filename length to 14 
X * characters, you may need to enforce that by:
X *
X * #ifndef NAME_MAX
X * # define NAME_MAX 14
X * #endif
X */
X
X
/*
X *	End of User Configuration Section
X */
SHAR_EOF
chmod 0444 screen3.2/config/config.all ||
echo 'restore of screen3.2/config/config.all failed'
Wc_c="`wc -c < 'screen3.2/config/config.all'`"
test 8666 -eq "$Wc_c" ||
	echo 'screen3.2/config/config.all: original size 8666, current size' "$Wc_c"
rm -f _shar_wnt_.tmp
fi
# ============= screen3.2/config/config.apollo ==============
if test -f 'screen3.2/config/config.apollo' -a X"$1" != X"-c"; then
	echo 'x - skipping screen3.2/config/config.apollo (File already exists)'
	rm -f _shar_wnt_.tmp
else
> _shar_wnt_.tmp
echo 'x - extracting screen3.2/config/config.apollo (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'screen3.2/config/config.apollo' &&
/*
X * config file by Doug Siebert (dsiebert@icaen.uiowa.edu)
X ****************************************************************
X * $Id: config.apollo,v 1.2 92/02/03 02:30:39 jnweiger Exp $ FAU
X */
X
#undef POSIX
#define BSDJOBS
#undef TERMIO
#undef TERMINFO
#undef SYSV
#define SIGVOID 
#undef DIRENT
#define SUIDROOT
#define UTMPOK
#define LOGINDEFAULT	1
#undef GETUTENT
#define UTHOST
#undef USRLIMIT
#undef LOCKPTY
#define NOREUID
#define LOADAV_3DOUBLES
#undef  LOADAV_3LONGS
#undef  LOADAV_4LONGS
#define GETTTYENT
#undef NFS_HACK
X
#define LOCALSOCKDIR
#ifdef LOCALSOCKDIR
# ifndef TMPTEST
#  define SOCKDIR "/usr/local/screens"
# else
#  define SOCKDIR "/tmp/screens"
# endif
#endif
#define USEBCOPY
#undef TOPSTAT
#define USEVARARGS
#define NAMEDPIPE
#define LOCK
#define PASSWORD
#define COPY_PASTE
#define REMOTE_DETACH
#define POW_DETACH
#define NETHACK
#define ETCSCREENRC "/usr/local/etc/screenrc"
SHAR_EOF
chmod 0444 screen3.2/config/config.apollo ||
echo 'restore of screen3.2/config/config.apollo failed'
Wc_c="`wc -c < 'screen3.2/config/config.apollo'`"
test 908 -eq "$Wc_c" ||
	echo 'screen3.2/config/config.apollo: original size 908, current size' "$Wc_c"
rm -f _shar_wnt_.tmp
fi
# ============= screen3.2/config/config.bsd386 ==============
if test -f 'screen3.2/config/config.bsd386' -a X"$1" != X"-c"; then
	echo 'x - skipping screen3.2/config/config.bsd386 (File already exists)'
	rm -f _shar_wnt_.tmp
else
> _shar_wnt_.tmp
echo 'x - extracting screen3.2/config/config.bsd386 (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'screen3.2/config/config.bsd386' &&
/* from libove@libove.det.dec.com (Jay Vassos-Libove)
X ****************************************************************
X * $Id: config.bsd386,v 1.2 92/02/03 02:30:42 jnweiger Exp $ FAU
X */
#define POSIX
#define BSDJOBS
#define TERMIO
#undef TERMINFO
#undef SYSV
#define SIGVOID 
#define DIRENT
#define SUIDROOT
#define UTMPOK
#define LOGINDEFAULT	1
#undef GETUTENT
#define UTHOST
#undef USRLIMIT
#undef LOCKPTY
#undef NOREUID
#define  LOADAV_3DOUBLES
#undef LOADAV_3LONGS
#undef  LOADAV_4LONGS
#define GETTTYENT
#undef NFS_HACK
#undef LOCALSOCKDIR
#ifdef LOCALSOCKDIR
# ifndef TMPTEST
#  define SOCKDIR "/tmp/screens"
# else
#  define SOCKDIR "/tmp/testscreens"
# endif
#endif
#define USEBCOPY
#undef TOPSTAT
#define USEVARARGS
#undef NAMEDPIPE
#define LOCK
#define PASSWORD
#define COPY_PASTE
#define REMOTE_DETACH
#define POW_DETACH
#define NETHACK
#define ETCSCREENRC "/usr/local/etc/screenrc"
X
/* These get seen in screen.h, extern.h and other places to avoid conflicts
X * with the definitions and declarations in /usr/include/...
X * on BSD/386 from BSD, Inc.
X */
#define SIG_T_DEFINED
#define PID_T_DEFINED
#define MEMFUNCS_DECLARED
#define WAITSTUFF_DECLARED
#define KILLSTUFF_DECLARED
#define REUID_DECLARED
#define CRYPT_DECLARED
#define MKNOD_DECLARED
#define PUTENV_DECLARED
#define SETPGID_DECLARED
#define GETHOSTNAME_DECLARED
#define VPRNT_DECLARED
#define NLIST_DECLARED
SHAR_EOF
chmod 0444 screen3.2/config/config.bsd386 ||
echo 'restore of screen3.2/config/config.bsd386 failed'
Wc_c="`wc -c < 'screen3.2/config/config.bsd386'`"
test 1385 -eq "$Wc_c" ||
	echo 'screen3.2/config/config.bsd386: original size 1385, current size' "$Wc_c"
rm -f _shar_wnt_.tmp
fi
# ============= screen3.2/config/config.gould_np1 ==============
if test -f 'screen3.2/config/config.gould_np1' -a X"$1" != X"-c"; then
	echo 'x - skipping screen3.2/config/config.gould_np1 (File already exists)'
	rm -f _shar_wnt_.tmp
else
> _shar_wnt_.tmp
echo 'x - extracting screen3.2/config/config.gould_np1 (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'screen3.2/config/config.gould_np1' &&
/*
X * config file by Chris Fletcher <ma8caf@uk.ac.bath.gdt>
X * The config file has been set up without the set uid and writing to
X * /etc/utmp options.
X ****************************************************************
X * $Id: config.gould_np1,v 1.2 92/02/03 02:30:45 jnweiger Exp $ FAU
X */
X
#undef POSIX
#define BSDJOBS
#undef TERMIO
#undef TERMINFO
#undef SYSV
#undef SIGVOID 
#undef DIRENT
#undef SUIDROOT
#undef UTMPOK
#define LOGINDEFAULT	0
#undef GETUTENT
#define UTHOST
#undef USRLIMIT
#undef LOCKPTY
#undef NOREUID
#define  LOADAV_3DOUBLES
#undef LOADAV_3LONGS
#undef  LOADAV_4LONGS
#define GETTTYENT
#undef NFS_HACK
#undef LOCALSOCKDIR
X
#ifdef LOCALSOCKDIR
# ifndef TMPTEST
#  define SOCKDIR "/local/screens"
# else
#  define SOCKDIR "/tmp/screens"
# endif
#endif
#define USEBCOPY
#undef TOPSTAT
#undef USEVARARGS
#undef NAMEDPIPE
#define LOCK
#define PASSWORD
#define COPY_PASTE
#define REMOTE_DETACH
#define POW_DETACH
#define NETHACK
#undef ETCSCREENRC "/local/etc/screenrc"
SHAR_EOF
chmod 0444 screen3.2/config/config.gould_np1 ||
echo 'restore of screen3.2/config/config.gould_np1 failed'
Wc_c="`wc -c < 'screen3.2/config/config.gould_np1'`"
test 986 -eq "$Wc_c" ||
	echo 'screen3.2/config/config.gould_np1: original size 986, current size' "$Wc_c"
rm -f _shar_wnt_.tmp
fi
# ============= screen3.2/config/config.hpux ==============
if test -f 'screen3.2/config/config.hpux' -a X"$1" != X"-c"; then
	echo 'x - skipping screen3.2/config/config.hpux (File already exists)'
	rm -f _shar_wnt_.tmp
else
> _shar_wnt_.tmp
echo 'x - extracting screen3.2/config/config.hpux (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'screen3.2/config/config.hpux' &&
/*
X ****************************************************************
X * $Id: config.hpux,v 1.2 92/02/03 02:30:48 jnweiger Exp $ FAU
X */
#define POSIX
#define BSDJOBS
#define TERMIO
#define TERMINFO
#define SYSV
#define SIGVOID 
#define DIRENT
#define SUIDROOT
#define UTMPOK
#define LOGINDEFAULT	1
#define GETUTENT
#define UTHOST
#undef USRLIMIT
#undef LOCKPTY
#undef NOREUID
#define LOADAV_3DOUBLES
#undef  LOADAV_3LONGS
#undef  LOADAV_4LONGS
#undef GETTTYENT
#undef NFS_HACK
#define LOCALSOCKDIR
X
#ifdef LOCALSOCKDIR
# ifndef TMPTEST
#  define SOCKDIR "/local/screens"
# else
#  define SOCKDIR "/tmp/screens"
# endif
#endif
X
#undef USEBCOPY
#undef TOPSTAT
#undef USEVARARGS
#undef NAMEDPIPE
#define LOCK
#define PASSWORD
#define COPY_PASTE
#define REMOTE_DETACH
#define POW_DETACH
#define NETHACK
#define ETCSCREENRC "/local/etc/screenrc"
SHAR_EOF
chmod 0444 screen3.2/config/config.hpux ||
echo 'restore of screen3.2/config/config.hpux failed'
Wc_c="`wc -c < 'screen3.2/config/config.hpux'`"
test 841 -eq "$Wc_c" ||
	echo 'screen3.2/config/config.hpux: original size 841, current size' "$Wc_c"
rm -f _shar_wnt_.tmp
fi
# ============= screen3.2/config/config.isc ==============
if test -f 'screen3.2/config/config.isc' -a X"$1" != X"-c"; then
	echo 'x - skipping screen3.2/config/config.isc (File already exists)'
	rm -f _shar_wnt_.tmp
else
> _shar_wnt_.tmp
echo 'x - extracting screen3.2/config/config.isc (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'screen3.2/config/config.isc' &&
/*
X * This file is by Allen D. Ball (ball@witchcraft.com)
X * It was done for Interactive's System V3.2 (2.2). Thanx.
X *
X ********************************************************** 
X * $Id: config.isc,v 1.2 92/02/03 02:30:51 jnweiger Exp $ FAU
X */
#define POSIX
#define BSDJOBS
#define TERMIO
#define TERMINFO
#define SYSV
#define SIGVOID 
#define DIRENT
#define SUIDROOT
#define UTMPOK
#define LOGINDEFAULT	1
#define GETUTENT
#undef UTHOST
#undef USRLIMIT
#undef LOCKPTY
#define NOREUID
#undef  LOADAV_3DOUBLES
#define  LOADAV_3LONGS
#undef  LOADAV_4LONGS
#undef GETTTYENT
#undef NFS_HACK
#define LOCALSOCKDIR
X
#ifdef LOCALSOCKDIR
# ifndef TMPTEST
#  define SOCKDIR "/tmp/screens"
# else
#  define SOCKDIR "/tmp/testscreens"
# endif
#endif
#undef USEBCOPY
#undef TOPSTAT
#undef USEVARARGS
#define NAMEDPIPE
#define LOCK
#define PASSWORD
#define COPY_PASTE
#define REMOTE_DETACH
#define POW_DETACH
#define NETHACK 
#define ETCSCREENRC "/usr/local/etc/screenrc"
X
X
/* These get seen in screen.h, extern.h and other places to avoid conflicts
X * with the definitions and declarations in /usr/include/...
X * on BSD/386 from BSD, Inc.
X */
#define SETPGID_DECLARED
#ifdef _POSIX_SOURCE
# define KILLSTUFF_DECLARED
#endif
SHAR_EOF
chmod 0444 screen3.2/config/config.isc ||
echo 'restore of screen3.2/config/config.isc failed'
Wc_c="`wc -c < 'screen3.2/config/config.isc'`"
test 1213 -eq "$Wc_c" ||
	echo 'screen3.2/config/config.isc: original size 1213, current size' "$Wc_c"
rm -f _shar_wnt_.tmp
fi
# ============= screen3.2/config/config.mips ==============
if test -f 'screen3.2/config/config.mips' -a X"$1" != X"-c"; then
	echo 'x - skipping screen3.2/config/config.mips (File already exists)'
	rm -f _shar_wnt_.tmp
else
> _shar_wnt_.tmp
echo 'x - extracting screen3.2/config/config.mips (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'screen3.2/config/config.mips' &&
/*
X * This file is by  Markku J{rvinen (mta@cc.tut.fi). It was done for a
X * MIPS RC6280 running RiscOS 4.52. 
X *
X ********************************************************** 
X * $Id: config.mips,v 1.2 92/02/03 02:30:53 jnweiger Exp $ FAU
X */
#undef  POSIX
#define BSDJOBS
#undef  TERMIO
#undef TERMINFO
#undef SYSV
#undef  SIGVOID 
#undef  DIRENT
#define SUIDROOT
#define UTMPOK
#define LOGINDEFAULT	0
#undef GETUTENT
#undef  UTHOST
#undef USRLIMIT
#undef LOCKPTY
#undef NOREUID
#undef  LOADAV_3DOUBLES
#define LOADAV_3LONGS
#undef  LOADAV_4LONGS
#undef GETTTYENT
#undef NFS_HACK
#undef  LOCALSOCKDIR
X
#ifdef LOCALSOCKDIR
# ifndef TMPTEST
#  define SOCKDIR "/tmp/screens"
# else
#  define SOCKDIR "/tmp/testscreens"
# endif
#endif
#undef USEBCOPY
#undef TOPSTAT
#undef USEVARARGS
#define NAMEDPIPE
#define LOCK
#define PASSWORD
#define COPY_PASTE
#define REMOTE_DETACH
#define POW_DETACH
#define NETHACK
#define ETCSCREENRC "/etc/screenrc"
SHAR_EOF
chmod 0444 screen3.2/config/config.mips ||
echo 'restore of screen3.2/config/config.mips failed'
Wc_c="`wc -c < 'screen3.2/config/config.mips'`"
test 940 -eq "$Wc_c" ||
	echo 'screen3.2/config/config.mips: original size 940, current size' "$Wc_c"
rm -f _shar_wnt_.tmp
fi
# ============= screen3.2/config/config.mot88 ==============
if test -f 'screen3.2/config/config.mot88' -a X"$1" != X"-c"; then
	echo 'x - skipping screen3.2/config/config.mot88 (File already exists)'
	rm -f _shar_wnt_.tmp
else
> _shar_wnt_.tmp
echo 'x - extracting screen3.2/config/config.mot88 (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'screen3.2/config/config.mot88' &&
/* Copyright (c) 1991
X *      Juergen Weigert (jnweiger@immd4.informatik.uni-erlangen.de)
X *      Michael Schroeder (mlschroe@immd4.informatik.uni-erlangen.de)
X *
X ****************************************************************
X * $Id: config.mot88,v 1.2 92/02/03 02:30:56 jnweiger Exp $ FAU
X */
#define POSIX
#define BSDJOBS
#define TERMIO
#define TERMINFO
#define SYSV
#define SIGVOID 
#define DIRENT
#define SUIDROOT
#undef UTMPOK
#define LOGINDEFAULT	1
#define GETUTENT
#undef UTHOST
#undef USRLIMIT
#undef LOCKPTY
#define NOREUID
#define  LOADAV_3DOUBLES
#undef LOADAV_3LONGS
#undef  LOADAV_4LONGS
#undef GETTTYENT
#undef NFS_HACK
#define LOCALSOCKDIR
X
#ifdef LOCALSOCKDIR
# ifndef TMPTEST
#  define SOCKDIR "/local/screens"
# else
#  define SOCKDIR "/tmp/screens"
# endif
#endif
#undef USEBCOPY
#undef TOPSTAT
#undef USEVARARGS
#undef NAMEDPIPE /* it should work with sockets too, ... */
#define LOCK
#define PASSWORD
#define COPY_PASTE
#define REMOTE_DETACH
#define POW_DETACH
#undef NETHACK 
#define ETCSCREENRC "/local/etc/screenrc"
SHAR_EOF
chmod 0444 screen3.2/config/config.mot88 ||
echo 'restore of screen3.2/config/config.mot88 failed'
Wc_c="`wc -c < 'screen3.2/config/config.mot88'`"
test 1043 -eq "$Wc_c" ||
	echo 'screen3.2/config/config.mot88: original size 1043, current size' "$Wc_c"
rm -f _shar_wnt_.tmp
fi
# ============= screen3.2/config/config.next ==============
if test -f 'screen3.2/config/config.next' -a X"$1" != X"-c"; then
	echo 'x - skipping screen3.2/config/config.next (File already exists)'
	rm -f _shar_wnt_.tmp
else
> _shar_wnt_.tmp
echo 'x - extracting screen3.2/config/config.next (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'screen3.2/config/config.next' &&
/* Copyright (c) 1991
X *      Juergen Weigert (jnweiger@immd4.informatik.uni-erlangen.de)
X *      Michael Schroeder (mlschroe@immd4.informatik.uni-erlangen.de)
X ****************************************************************
X * $Id: config.next,v 1.2 92/02/03 02:30:59 jnweiger Exp $ FAU
X */
#undef POSIX
#define BSDJOBS
#undef TERMIO
#undef TERMINFO
#undef SYSV
#undef SIGVOID 
#undef DIRENT
#define SUIDROOT
#define UTMPOK
#define LOGINDEFAULT	1
#undef GETUTENT
#define UTHOST
#undef USRLIMIT
#undef LOCKPTY
#undef NOREUID
#undef LOADAV_3DOUBLES
#undef LOADAV_3LONGS
#undef LOADAV_4LONGS
#define LOADAV_NEXT
#define GETTTYENT
#undef NFS_HACK
#define LOCALSOCKDIR
X
#ifdef LOCALSOCKDIR
# ifndef TMPTEST
#  define SOCKDIR "/local/screens"
# else
#  define SOCKDIR "/tmp/screens"
# endif
#endif
#define USEBCOPY
#undef TOPSTAT
#define USEVARARGS
#undef NAMEDPIPE
#define LOCK
#define PASSWORD
#define COPY_PASTE
#define REMOTE_DETACH
#define POW_DETACH
#define NETHACK
#define ETCSCREENRC "/local/etc/screenrc"
SHAR_EOF
chmod 0444 screen3.2/config/config.next ||
echo 'restore of screen3.2/config/config.next failed'
Wc_c="`wc -c < 'screen3.2/config/config.next'`"
test 1010 -eq "$Wc_c" ||
	echo 'screen3.2/config/config.next: original size 1010, current size' "$Wc_c"
rm -f _shar_wnt_.tmp
fi
# ============= screen3.2/config/config.rs600 ==============
if test -f 'screen3.2/config/config.rs600' -a X"$1" != X"-c"; then
	echo 'x - skipping screen3.2/config/config.rs600 (File already exists)'
	rm -f _shar_wnt_.tmp
else
> _shar_wnt_.tmp
echo 'x - extracting screen3.2/config/config.rs600 (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'screen3.2/config/config.rs600' &&
/* 
X * From: Kimmo Roponen <ksr@vipunen.hut.fi>
X ****************************************************************
X * $Id: config.rs600,v 1.2 92/02/03 02:31:02 jnweiger Exp $ FAU
X */
X
X
#define POSIX
#define BSDJOBS
#define TERMIO
#define TERMINFO
#undef SYSV
#define SIGVOID 
#define DIRENT
#undef SUIDROOT
#define UTMPOK
#define LOGINDEFAULT	0
#undef GETUTENT
#undef UTHOST
#undef USRLIMIT
#undef LOCKPTY
#define NOREUID
#undef  LOADAV_3DOUBLES
#undef  LOADAV_3LONGS
#undef  LOADAV_4LONGS
#undef GETTTYENT
#undef NFS_HACK
#undef LOCALSOCKDIR
X
#ifdef LOCALSOCKDIR
# ifndef TMPTEST
#  define SOCKDIR "/local/screens"
# else
#  define SOCKDIR "/tmp/screens"
# endif
#endif
#undef USEBCOPY
#undef TOPSTAT
#undef USEVARARGS
#define NAMEDPIPE
#undef LOCK
#undef PASSWORD
#undef COPY_PASTE
#undef REMOTE_DETACH
#undef POW_DETACH
#define NETHACK
#undef ETCSCREENRC "/local/etc/screenrc"
SHAR_EOF
chmod 0444 screen3.2/config/config.rs600 ||
echo 'restore of screen3.2/config/config.rs600 failed'
Wc_c="`wc -c < 'screen3.2/config/config.rs600'`"
test 879 -eq "$Wc_c" ||
	echo 'screen3.2/config/config.rs600: original size 879, current size' "$Wc_c"
rm -f _shar_wnt_.tmp
fi
# ============= screen3.2/config/config.rs6000 ==============
if test -f 'screen3.2/config/config.rs6000' -a X"$1" != X"-c"; then
	echo 'x - skipping screen3.2/config/config.rs6000 (File already exists)'
	rm -f _shar_wnt_.tmp
else
> _shar_wnt_.tmp
echo 'x - extracting screen3.2/config/config.rs6000 (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'screen3.2/config/config.rs6000' &&
/* 
X ****************************************************************
X * $Id: config.rs6000,v 1.2 92/02/03 02:31:04 jnweiger Exp $ FAU
X */
X
X
#define POSIX
#define BSDJOBS
#define TERMIO
#define TERMINFO
#define SYSV
#define SIGVOID 
#define DIRENT
#define SUIDROOT
#define UTMPOK
#define LOGINDEFAULT	1
#define GETUTENT
#define UTHOST
#undef USRLIMIT
#undef LOCKPTY
#undef NOREUID
#undef  LOADAV_3DOUBLES
#undef  LOADAV_3LONGS
#undef  LOADAV_4LONGS
#undef GETTTYENT
#undef NFS_HACK
#define LOCALSOCKDIR
X
#ifdef LOCALSOCKDIR
# ifndef TMPTEST
#  define SOCKDIR "/tmp/screens"
# else
#  define SOCKDIR "/tmp/testscreens"
# endif
#endif
#define USEBCOPY
#define bcopy(s, d, l) memmove(d, s, l) /* bcopy() by Marc Boucher */
#undef TOPSTAT
#define USEVARARGS
#define NAMEDPIPE
#define LOCK
#define PASSWORD
#define COPY_PASTE
#define REMOTE_DETACH
#define POW_DETACH
#define NETHACK
#define ETCSCREENRC "/local/etc/screenrc"
SHAR_EOF
chmod 0444 screen3.2/config/config.rs6000 ||
echo 'restore of screen3.2/config/config.rs6000 failed'
Wc_c="`wc -c < 'screen3.2/config/config.rs6000'`"
test 920 -eq "$Wc_c" ||
	echo 'screen3.2/config/config.rs6000: original size 920, current size' "$Wc_c"
rm -f _shar_wnt_.tmp
fi
# ============= screen3.2/config/config.sco32 ==============
if test -f 'screen3.2/config/config.sco32' -a X"$1" != X"-c"; then
	echo 'x - skipping screen3.2/config/config.sco32 (File already exists)'
	rm -f _shar_wnt_.tmp
else
> _shar_wnt_.tmp
echo 'x - extracting screen3.2/config/config.sco32 (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'screen3.2/config/config.sco32' &&
/*
X * this config file was contributed by Mark J. Bailey 
X * (root@mjbtn.jobsoft.com). He writes:
X *
X * ...working under SCO Unix 3.2 (ODT 1.1).  Note that I chose
X * TERMINFO and installed with 'tic' the terminfo src files in the terminfo
X * directory.  I also have TCP/IP installed, but I do not think that this has
X * any effect on compilation.  I also installed the crypt libraries sent to me
X * by SCO.  Not sure what one would do without them.
X ********************************************************** 
X * $Id: config.sco32,v 1.2 92/02/03 02:31:06 jnweiger Exp $ FAU
X */
X
#define POSIX
#define BSDJOBS
#define TERMIO
#define TERMINFO
#define SYSV
#define SIGVOID 
#define DIRENT
#define SUIDROOT
#define UTMPOK
#define LOGINDEFAULT	1
#define GETUTENT
#undef UTHOST
#undef USRLIMIT
#undef LOCKPTY
#define NOREUID
#define LOADAV_3DOUBLES
#undef  LOADAV_3LONGS
#undef  LOADAV_4LONGS
SHAR_EOF
true || echo 'restore of screen3.2/config/config.sco32 failed'
fi
echo 'End of  part 10'
echo 'File screen3.2/config/config.sco32 is continued in part 11'
echo 11 > _shar_seq_.tmp
exit 0
exit 0 # Just in case...
