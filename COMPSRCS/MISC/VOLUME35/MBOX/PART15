Newsgroups: comp.sources.misc
From: Volker.Schuermann@unnet.w.open.de (Volker Schuermann)
Subject: v35i050:  mbox - ix/Mbox, A BBS for UNIX and MINIX v1.6 PL10j7, Part15/15
Message-ID: <1993Feb5.190045.11093@sparky.imd.sterling.com>
X-Md4-Signature: e64563b8832d8c262f4f6c35e3fda013
Date: Fri, 5 Feb 1993 19:00:45 GMT
Approved: kent@sparky.imd.sterling.com

Submitted-by: Volker.Schuermann@unnet.w.open.de (Volker Schuermann)
Posting-number: Volume 35, Issue 50
Archive-name: mbox/part15
Environment: MINIX, ISC, ESIX, SVR3
Supersedes: mbox: Volume 31, Issue 16-27

#! /bin/sh
# This is a shell archive.  Remove anything before this line, then feed it
# into a shell via "sh file" or similar.  To overwrite existing files,
# type "sh file -c".
# Contents:  addrpatch etc/active etc/face.put.U etc/inews.sh etc/intro
#   etc/mbd.log etc/mbox.calls etc/mbox.editors etc/mbox.games
#   etc/mbox.seq etc/mbox.udc etc/mbox.who etc/pd.log etc/pd.script
#   etc/tset src/coreleft.c src/mbrsh.c src/patchlevel.h src/undef.c
#   wendy/defs.h wendy/wendy.hlp
# Wrapped by kent@sparky on Fri Feb  5 12:18:21 1993
PATH=/bin:/usr/bin:/usr/ucb:/usr/local/bin:/usr/lbin ; export PATH
echo If this archive is complete, you will see the following message:
echo '          "shar: End of archive 15 (of 15)."'
if test -f 'addrpatch' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'addrpatch'\"
else
  echo shar: Extracting \"'addrpatch'\" \(232 characters\)
  sed "s/^X//" >'addrpatch' <<'END_OF_FILE'
XCURDIR=`pwd`
X
Xcd /usr/spool/uucp
X
Xfor i in D.unnet*
X	do	
X		echo -n $i' ... '
X		sed '/From unnet.w.open.DE !/s//From /g' < $i > SED.TMP
X		sed '/From: unnet!/s//From: /g' < SED.TMP > $i
X		echo 'patched.'
X	done
X
Xrm SED.TMP
X
Xcd $CURDIR
END_OF_FILE
  if test 232 -ne `wc -c <'addrpatch'`; then
    echo shar: \"'addrpatch'\" unpacked with wrong size!
  fi
  chmod +x 'addrpatch'
  # end of 'addrpatch'
fi
if test -f 'etc/active' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'etc/active'\"
else
  echo shar: Extracting \"'etc/active'\" \(0 characters\)
  sed "s/^X//" >'etc/active' <<'END_OF_FILE'
END_OF_FILE
  if test 0 -ne `wc -c <'etc/active'`; then
    echo shar: \"'etc/active'\" unpacked with wrong size!
  fi
  # end of 'etc/active'
fi
if test -f 'etc/face.put.U' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'etc/face.put.U'\"
else
  echo shar: Extracting \"'etc/face.put.U'\" \(435 characters\)
  sed "s/^X//" >'etc/face.put.U' <<'END_OF_FILE'
Xbegin 644 etc/face.put
XM,  P /X    ?__@    /__@    '__     '__ #\  #__ /__ #__ ___@!
XM__!___@!__!___@!__!___@!__A___@!__A___@!__A___@!__Q___ !__Q_
XM_\ !__Q__P !__QX/@ !__YC/  !__YP'/X!__YQ_/\!__]__'\!__]__'\!
XM__^__C\!__^__S\#___?_Q\#___O_A\#___O\ $#___W\  !___W@   ___[
XM  , ?__Y /X /__]O_P '__^__P #___?_@ !___/_   ___C\   ?__P   
XM /__X    /__L    /__'    /_^'@>  /_X'_\  /_ #_X  /_ !_P  /\ 
X6#_@  /P !_   /@ !^   /   \    > 
X 
Xend
END_OF_FILE
  if test 435 -ne `wc -c <'etc/face.put.U'`; then
    echo shar: \"'etc/face.put.U'\" unpacked with wrong size!
  else
    echo shar: Uudecoding \"'etc/face.put'\" \(292 characters\)
    cat etc/face.put.U | uudecode
    if test 292 -ne `wc -c <'etc/face.put'`; then
      echo shar: \"'etc/face.put'\" uudecoded with wrong size!
    else
      rm etc/face.put.U
    fi
  fi
  # end of 'etc/face.put.U'
fi
if test -f 'etc/inews.sh' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'etc/inews.sh'\"
else
  echo shar: Extracting \"'etc/inews.sh'\" \(701 characters\)
  sed "s/^X//" >'etc/inews.sh' <<'END_OF_FILE'
X#---------------------------------------------------------------------------
X#
X#                       ix/MBox  I N E W S . S H
X#		  Mailbox-Programm fuer UNIX(-Derivate)
X#			
X#			   Volker Schuermann
X#		      Wuppertal, FRG, 08.12.1991
X#
X#---------------------------------------------------------------------------
X# Dieses Script uebergibt einen neuen Artikel an INEWS. Dieser Artikel
X# enthaelt bereits einen (fast) kompletten Header.
X#---------------------------------------------------------------------------
X# Parameter:
X#
X# $1  ->  Newsgroup, an die die Datei gesendet werden soll
X# $2  ->  Datei mit Artikel (s.o.)
X# 
X# Beispiel:
X#
X# /usr/lib/news/inews -h < $2
X
X/usr/lib/news/inews -h < $2
X
END_OF_FILE
  if test 701 -ne `wc -c <'etc/inews.sh'`; then
    echo shar: \"'etc/inews.sh'\" unpacked with wrong size!
  fi
  # end of 'etc/inews.sh'
fi
if test -f 'etc/intro' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'etc/intro'\"
else
  echo shar: Extracting \"'etc/intro'\" \(24 characters\)
  sed "s/^X//" >'etc/intro' <<'END_OF_FILE'
XWellcome to ix/MBox BBS
END_OF_FILE
  if test 24 -ne `wc -c <'etc/intro'`; then
    echo shar: \"'etc/intro'\" unpacked with wrong size!
  fi
  # end of 'etc/intro'
fi
if test -f 'etc/mbd.log' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'etc/mbd.log'\"
else
  echo shar: Extracting \"'etc/mbd.log'\" \(0 characters\)
  sed "s/^X//" >'etc/mbd.log' <<'END_OF_FILE'
END_OF_FILE
  if test 0 -ne `wc -c <'etc/mbd.log'`; then
    echo shar: \"'etc/mbd.log'\" unpacked with wrong size!
  fi
  # end of 'etc/mbd.log'
fi
if test -f 'etc/mbox.calls' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'etc/mbox.calls'\"
else
  echo shar: Extracting \"'etc/mbox.calls'\" \(0 characters\)
  sed "s/^X//" >'etc/mbox.calls' <<'END_OF_FILE'
END_OF_FILE
  if test 0 -ne `wc -c <'etc/mbox.calls'`; then
    echo shar: \"'etc/mbox.calls'\" unpacked with wrong size!
  fi
  # end of 'etc/mbox.calls'
fi
if test -f 'etc/mbox.editors' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'etc/mbox.editors'\"
else
  echo shar: Extracting \"'etc/mbox.editors'\" \(649 characters\)
  sed "s/^X//" >'etc/mbox.editors' <<'END_OF_FILE'
X/***************************************************************************/
X/* Diese Datei enthaelt die Liste der verfuegbaren Editoren. Die Struktur  */
X/* ist folgende:							   */
X/*									   */
X/* Name		Pfad zum Editor						   */
X/* ======================================================================= */
X/* Led   	/usr/bin/led						   */
X/* Vi		/usr/bin/vi						   */
X/*									   */
X/* ACHTUNG: Zwischen Kommentar und Liste EINE Leerzeile einfuegen !	   */
X/***************************************************************************/
X
XLed	/usr/bin/bled
XWendy	/usr/bin/wendy
XMined	/usr/bin/mined
XVi	/usr/bin/vi
XMicroEmacs	/usr/bin/me
X
END_OF_FILE
  if test 649 -ne `wc -c <'etc/mbox.editors'`; then
    echo shar: \"'etc/mbox.editors'\" unpacked with wrong size!
  fi
  # end of 'etc/mbox.editors'
fi
if test -f 'etc/mbox.games' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'etc/mbox.games'\"
else
  echo shar: Extracting \"'etc/mbox.games'\" \(734 characters\)
  sed "s/^X//" >'etc/mbox.games' <<'END_OF_FILE'
X/***************************************************************************/
X/* Diese Datei enthaelt die Liste der verfuegbaren Spiele. Die Struktur    */
X/* ist folgende:							   */
X/*									   */
X/* Name		Pfad zum Spiel						   */
X/* ======================================================================= */
X/* animals   	/usr/bin/animals					   */
X/* ttt		/usr/bin/ttt						   */
X/*									   */
X/* ACHTUNG: Zwischen Kommentar und Liste EINE Leerzeile einfuegen !	   */
X/***************************************************************************/
X
XAnimals	/usr/bin/animals
XDiepbom /usr/games/diepbom
XEmpire	/usr/games/empire
XKiller	/usr/games/killer
XSokoban	/usr/games/sokoban
XRogue	/usr/bin/rogue
XRobots  /usr/games/robots
END_OF_FILE
  if test 734 -ne `wc -c <'etc/mbox.games'`; then
    echo shar: \"'etc/mbox.games'\" unpacked with wrong size!
  fi
  # end of 'etc/mbox.games'
fi
if test -f 'etc/mbox.seq' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'etc/mbox.seq'\"
else
  echo shar: Extracting \"'etc/mbox.seq'\" \(2 characters\)
  sed "s/^X//" >'etc/mbox.seq' <<'END_OF_FILE'
X1
END_OF_FILE
  if test 2 -ne `wc -c <'etc/mbox.seq'`; then
    echo shar: \"'etc/mbox.seq'\" unpacked with wrong size!
  fi
  # end of 'etc/mbox.seq'
fi
if test -f 'etc/mbox.udc' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'etc/mbox.udc'\"
else
  echo shar: Extracting \"'etc/mbox.udc'\" \(783 characters\)
  sed "s/^X//" >'etc/mbox.udc' <<'END_OF_FILE'
X/***************************************************************************/
X/* Die Datei enthaelt eine Liste von Befehlen, die vom jeweiligen Betrei-  */
X/* ber der ix/MBox zusaetzlich angeboten werden.			   */
X/*									   */
X/* Befehl	Level	Programm					   */
X/* ======================================================================= */
X/* metamail	  1	/usr/local/bin/metamail	 			   */
X/* nn		  5	/usr/bin/nn				  	   */
X/* ps		  2	/usr/bin/ps -edalf				   */
X/*									   */
X/* ACHTUNG: Zwischen Kommentar und Liste EINE Leerzeile einfuegen !	   */
X/*          Die Eintraege MUESSEN unbedingt in alphabetischer Reihenfolge  */
X/*          sortiert sein ! 						   */
X/***************************************************************************/
X
XCyberspace	0	/usr/bin/cyber
END_OF_FILE
  if test 783 -ne `wc -c <'etc/mbox.udc'`; then
    echo shar: \"'etc/mbox.udc'\" unpacked with wrong size!
  fi
  # end of 'etc/mbox.udc'
fi
if test -f 'etc/mbox.who' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'etc/mbox.who'\"
else
  echo shar: Extracting \"'etc/mbox.who'\" \(0 characters\)
  sed "s/^X//" >'etc/mbox.who' <<'END_OF_FILE'
END_OF_FILE
  if test 0 -ne `wc -c <'etc/mbox.who'`; then
    echo shar: \"'etc/mbox.who'\" unpacked with wrong size!
  fi
  # end of 'etc/mbox.who'
fi
if test -f 'etc/pd.log' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'etc/pd.log'\"
else
  echo shar: Extracting \"'etc/pd.log'\" \(0 characters\)
  sed "s/^X//" >'etc/pd.log' <<'END_OF_FILE'
END_OF_FILE
  if test 0 -ne `wc -c <'etc/pd.log'`; then
    echo shar: \"'etc/pd.log'\" unpacked with wrong size!
  fi
  # end of 'etc/pd.log'
fi
if test -f 'etc/pd.script' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'etc/pd.script'\"
else
  echo shar: Extracting \"'etc/pd.script'\" \(0 characters\)
  sed "s/^X//" >'etc/pd.script' <<'END_OF_FILE'
END_OF_FILE
  if test 0 -ne `wc -c <'etc/pd.script'`; then
    echo shar: \"'etc/pd.script'\" unpacked with wrong size!
  fi
  # end of 'etc/pd.script'
fi
if test -f 'etc/tset' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'etc/tset'\"
else
  echo shar: Extracting \"'etc/tset'\" \(21 characters\)
  sed "s/^X//" >'etc/tset' <<'END_OF_FILE'
XTERM=$1
Xexport TERM
X
END_OF_FILE
  if test 21 -ne `wc -c <'etc/tset'`; then
    echo shar: \"'etc/tset'\" unpacked with wrong size!
  fi
  chmod +x 'etc/tset'
  # end of 'etc/tset'
fi
if test -f 'src/coreleft.c' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'src/coreleft.c'\"
else
  echo shar: Extracting \"'src/coreleft.c'\" \(666 characters\)
  sed "s/^X//" >'src/coreleft.c' <<'END_OF_FILE'
X/***************************************************************************/
X/*	    PROGRAMM  ix/MBox						   */
X/*             DATEI  coreleft.c					   */
X/*        FUNKTIONEN  coreleft()					   */
X/*             AUTOR  vs (Volker Schuermann/MINIX-Version)		   */
X/*  LETZTE AENDERUNG  24.11.1991					   */
X/***************************************************************************/
X
X#ifdef _SYS7
X#include <stdlib.h>
X#else
X#include <stdio.h>
X#include <malloc.h>
X#endif
X
X
Xint coreleft()
X{
X  unsigned char *buffer;
X  long size = 32L;
X
X  do{
X	size *= 2;
X	buffer = malloc(size);
X	if(buffer != NULL) free( buffer );
X  }while(buffer != NULL);
X
X  return (int) size;
X}
X
END_OF_FILE
  if test 666 -ne `wc -c <'src/coreleft.c'`; then
    echo shar: \"'src/coreleft.c'\" unpacked with wrong size!
  fi
  # end of 'src/coreleft.c'
fi
if test -f 'src/mbrsh.c' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'src/mbrsh.c'\"
else
  echo shar: Extracting \"'src/mbrsh.c'\" \(743 characters\)
  sed "s/^X//" >'src/mbrsh.c' <<'END_OF_FILE'
X/***************************************************************************/
X/*	    PROGRAMM  ix/Mbox						   */
X/*             DATEI  mbrsh.c						   */
X/*        FUNKTIONEN  main()						   */
X/*             AUTOR  vs (Volker Schuermann/MINIX-Version)		   */
X/*  LETZTE AENDERUNG  16.11.1991					   */
X/***************************************************************************/
X
X#include <stdio.h>
X#include <sys/types.h>
X#include <unistd.h>
X
Xint main(argc, argv)
Xint argc;
Xunsigned char *argv[];
X{
X  unsigned char s[255];
X  int i, j;
X
X  setgid( atoi(argv[argc -1]) );
X  setuid( atoi(argv[argc -2]) );
X
X  strcpy(s, "exec ");
X  j = argc -2;
X
X  for(i = 1; i < j; i++){
X	strcat(s, argv[i]);
X	strcat(s, " ");
X  }
X
X  system( s );
X
X  return 0;
X}
END_OF_FILE
  if test 743 -ne `wc -c <'src/mbrsh.c'`; then
    echo shar: \"'src/mbrsh.c'\" unpacked with wrong size!
  fi
  # end of 'src/mbrsh.c'
fi
if test -f 'src/patchlevel.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'src/patchlevel.h'\"
else
  echo shar: Extracting \"'src/patchlevel.h'\" \(604 characters\)
  sed "s/^X//" >'src/patchlevel.h' <<'END_OF_FILE'
X/***************************************************************************/
X/*	    PROGRAMM  ix/MBox						   */
X/*             DATEI  patchlevel.h					   */
X/*             AUTOR  vs (Volker Schuermann/MINIX-Version)		   */
X/*  LETZTE AENDERUNG  09.09.1992					   */
X/***************************************************************************/
X  
X/***************************************************************************/
X/*  PATCHLEVEL       - Nummer der zuletzt installierten CDIFFS		   */
X/***************************************************************************/
X
X#define PATCHLEVEL	"PL10j7"
END_OF_FILE
  if test 604 -ne `wc -c <'src/patchlevel.h'`; then
    echo shar: \"'src/patchlevel.h'\" unpacked with wrong size!
  fi
  # end of 'src/patchlevel.h'
fi
if test -f 'src/undef.c' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'src/undef.c'\"
else
  echo shar: Extracting \"'src/undef.c'\" \(17 characters\)
  sed "s/^X//" >'src/undef.c' <<'END_OF_FILE'
X#undef _MBOX
X
X
X
X
END_OF_FILE
  if test 17 -ne `wc -c <'src/undef.c'`; then
    echo shar: \"'src/undef.c'\" unpacked with wrong size!
  fi
  # end of 'src/undef.c'
fi
if test -f 'wendy/defs.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'wendy/defs.h'\"
else
  echo shar: Extracting \"'wendy/defs.h'\" \(33 characters\)
  sed "s/^X//" >'wendy/defs.h' <<'END_OF_FILE'
X/* THIS FILE HAS TO BE EMPTY! */
END_OF_FILE
  if test 33 -ne `wc -c <'wendy/defs.h'`; then
    echo shar: \"'wendy/defs.h'\" unpacked with wrong size!
  fi
  # end of 'wendy/defs.h'
fi
if test -f 'wendy/wendy.hlp' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'wendy/wendy.hlp'\"
else
  echo shar: Extracting \"'wendy/wendy.hlp'\" \(752 characters\)
  sed "s/^X//" >'wendy/wendy.hlp' <<'END_OF_FILE'
XCursor nach oben ........ CTRL-K,UP    Cursor zum Zeilenanfang . CTRL-A,HOME
XCursor nach unter ....... CTRL-J,DOWN  Cursor zum Zeilenende ... CTRL-Z,END
X
XZeile loeschen .......... CTRL-Y       Eine Seite zurueck ...... CTRL-B,PAGEUP
XLoeschen bis Zeilenende . CTRL-T       Eine Seite weiter ....... CTRL-F,PAGEDN
X
XBildschim aufbauen ...... CTRL-R       Einfuegemodus ein/aus ... CTRL-V,INSERT
XZeile neu aufbauen ...... CTRL-L       Setup (!!!) ............. CTRL-S
X
XDatei sichern ........... CTRL-W       Status .................. CTRL-G
XEingabe beenden ......... CTRL-X       Spaltenlineal ........... CTRL-P
X
XBlock markieren ......... CTRL-Q       Attribute auswaehlen .... CTRL-U
XRTF ein/aus ............. CTRL-N       VI-Kommandomodus ........ ESC:
END_OF_FILE
  if test 752 -ne `wc -c <'wendy/wendy.hlp'`; then
    echo shar: \"'wendy/wendy.hlp'\" unpacked with wrong size!
  fi
  # end of 'wendy/wendy.hlp'
fi
echo shar: End of archive 15 \(of 15\).
cp /dev/null ark15isdone
MISSING=""
for I in 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 ; do
    if test ! -f ark${I}isdone ; then
	MISSING="${MISSING} ${I}"
    fi
done
if test "${MISSING}" = "" ; then
    echo You have unpacked all 15 archives.
    rm -f ark[1-9]isdone ark[1-9][0-9]isdone
else
    echo You still must unpack the following archives:
    echo "        " ${MISSING}
fi
exit 0
exit 0 # Just in case...
