Newsgroups: comp.sources.unix
From: ram@acri.fr (Raphael Manfredi)
Subject: v26i229: kit - the ultimate mailing kit, Patch28
Sender: unix-sources-moderator@efficacy.home.vix.com
Approved: WhoAmI@efficacy.home.vix.com

Submitted-By: ram@acri.fr (Raphael Manfredi)
Posting-Number: Volume 26, Issue 229
Archive-Name: kit/pch28

[The latest patch for kit version 2.0 is #28.]

System: kit version 2.0
Patch #: 28
Priority: HIGH
Subject: fixed annoying typo (caused undefined-subroutine error!)
Subject: after a chmod, quotes surrounding file name are optional
Date: Tue Apr 27 10:07:11 MET DST 1993
From: Raphael Manfredi <ram@acri.fr>

Description:
	Fixed the 'secure' perl script that performs security checks on
	the shell archive. If had an annoying typo and did not recognize
	the 'chmod +x filename' construct which the built-in shar uses.

Repeat-By:

	Send yourself a kit package with the -M option and when extracting
	the kit part containing the 'minikit' script, watch unkit die on
	what it thinks is a security breakthrough.. If you do not have
	perl however, this bug cannot be reproduced since security checks
	are by-passed.

Fix:	From rn, say "| patch -p -N -d DIR", where DIR is your kit source
	directory.  Outside of rn, say "cd DIR; patch -p -N <thisarticle".
	If you don't have the patch program, apply the following by hand,
	or get patch (version 2.0, latest patchlevel).

	After patching:
		Configure -d
		make
		make install

	If patch indicates that patchlevel is the wrong version, you may need
	to apply one or more previous patches, or the patch may already
	have been applied.  See the patchlevel.h file to find out what has or
	has not been applied.  In any event, don't continue with the patch.

	If you are missing previous patches they can be obtained from me:

		Raphael Manfredi <ram@acri.fr>

	If you send a mail message of the following form it will greatly speed
	processing:

		Subject: Command
		@SH mailpatch PATH kit 2.0 LIST
			   ^ note the c

	where PATH is a return path FROM ME TO YOU either in Internet notation,
	or in bang notation from some well-known host, and LIST is the number
	of one or more patches you need, separated by spaces, commas, and/or
	hyphens.  Saying 35- says everything from 35 to the end.

	To get some more detailed instructions, send me the following mail:

		Subject: Command
		@SH mailhelp PATH


Index: patchlevel.h
Prereq: 27
2c2
< #define PATCHLEVEL 27
---
> #define PATCHLEVEL 28

Index: kit/secure
Prereq: 2.0.1.3
*** kit/secure.old	1993/04/26 11:20:27
--- kit/secure	1993/04/27 08:07:07
***************
*** 1,8 ****
  #!/usr/bin/perl
  
! # $Id: secure,v 2.0.1.3 1993/04/26 11:20:27 ram Exp $
  #
  # $Log: secure,v $
  # Revision 2.0.1.3  1993/04/26  11:20:27  ram
  # patch27: added support for kit's own archiver variables
  # patch27: will now skip leading comments in kit parts (when concatenated)
--- 1,12 ----
  #!/usr/bin/perl
  
! # $Id: secure,v 2.0.1.4 1993/04/27 08:07:07 ram Exp $
  #
  # $Log: secure,v $
+ # Revision 2.0.1.4  1993/04/27  08:07:07  ram
+ # patch28: fixed annoying typo (caused undefined-subroutine error!)
+ # patch28: after a chmod, quotes surrounding file name are optional
+ #
  # Revision 2.0.1.3  1993/04/26  11:20:27  ram
  # patch27: added support for kit's own archiver variables
  # patch27: will now skip leading comments in kit parts (when concatenated)
***************
*** 63,70 ****
  		next if m|^/dev/null ark\d+isdone$|;
  		&error;
  	} elsif (s/^chmod //) {
! 		next if m|^\+x '[\w.]+'$|;
! 		&erorr;
  	} elsif (s/^for (.*); do\s*$/$1/) {
  		&loose_check;
  	} elsif (s/^>>\s?//) {	# Kit leading comments
--- 67,74 ----
  		next if m|^/dev/null ark\d+isdone$|;
  		&error;
  	} elsif (s/^chmod //) {
! 		next if m|^\+x '?[\w.]+'?$|;	# Quotes for cshar only
! 		&error;
  	} elsif (s/^for (.*); do\s*$/$1/) {
  		&loose_check;
  	} elsif (s/^>>\s?//) {	# Kit leading comments

*** End of Patch 28 ***
