Newsgroups: comp.sources.unix
From: ram@acri.fr (Raphael Manfredi)
Subject: v26i222: kit - the ultimate mailing kit, Patch17
Sender: unix-sources-moderator@efficacy.home.vix.com
Approved: WhoAmI@efficacy.home.vix.com

Submitted-By: ram@acri.fr (Raphael Manfredi)
Posting-Number: Volume 26, Issue 222
Archive-Name: kit/pch17

[The latest patch for kit version 2.0 is #28.]

System: kit version 2.0
Patch #: 17
Priority: HIGH
Subject: some awk hang up with </dev/null within backquotes
Date: Fri May  8 11:17:41 PDT 1992
From: Raphael Manfredi <ram@eiffel.com>

Description:
	Some awk hang up with </dev/null within backquotes. Apparently the
	solution is to cat /dev/null on the awk process. I wanted to avoid
	that extra process but on SUNs that simply did not work.

Repeat-By:
	On a SUN (the only machine I was able to reproduce the problem on),
	cd to kit/ (within the distribution) and try:

		sh range.SH		# If you ran make clean
		./range 4 1-
	
	The process hangs. Now hit ^D (that's ctrl-D) to release the process.
	Aply this patch and try again. It works!

Fix:	From rn, say "| patch -p -N -d DIR", where DIR is your kit source
	directory.  Outside of rn, say "cd DIR; patch -p -N <thisarticle".
	If you don't have the patch program, apply the following by hand,
	or get patch (version 2.0, latest patchlevel).

	After patching:
		Configure -d
		make
		make install

	If patch indicates that patchlevel is the wrong version, you may need
	to apply one or more previous patches, or the patch may already
	have been applied.  See the patchlevel.h file to find out what has or
	has not been applied.  In any event, don't continue with the patch.

	If you are missing previous patches they can be obtained from me:

		Raphael Manfredi <ram@eiffel.com>

	If you send a mail message of the following form it will greatly speed
	processing:

		Subject: Command
		@SH mailpatch PATH kit 2.0 LIST
			   ^ note the c

	where PATH is a return path FROM ME TO YOU either in Internet notation,
	or in bang notation from some well-known host, and LIST is the number
	of one or more patches you need, separated by spaces, commas, and/or
	hyphens.  Saying 35- says everything from 35 to the end.

	To get some more detailed instructions, send me the following mail:

		Subject: Command
		@SH mailhelp PATH


Index: patchlevel.h
Prereq: 16
2c2
< #define PATCHLEVEL 16
---
> #define PATCHLEVEL 17

Index: kit/range.SH
Prereq: 2.0.1.1
*** kit/range.SH.old	Fri May  8 11:17:37 1992
--- kit/range.SH	Fri May  8 11:17:38 1992
***************
*** 22,30 ****
  # Numbers may be space or comma separated. Ranges are a-b. If a is missing,
  # 1 is assumed. If b is missing, the maximum value is used.
  
! # $Id: range.SH,v 2.0.1.1 92/05/02 14:17:22 ram Exp $
  #
  # $Log:	range.SH,v $
  # Revision 2.0.1.1  92/05/02  14:17:22  ram
  # patch16: created
  # 
--- 22,33 ----
  # Numbers may be space or comma separated. Ranges are a-b. If a is missing,
  # 1 is assumed. If b is missing, the maximum value is used.
  
! # $Id: range.SH,v 2.0.1.2 92/05/08 11:17:30 ram Exp $
  #
  # $Log:	range.SH,v $
+ # Revision 2.0.1.2  92/05/08  11:17:30  ram
+ # patch17: some awk hang up with </dev/null within backquotes
+ # 
  # Revision 2.0.1.1  92/05/02  14:17:22  ram
  # patch16: created
  # 
***************
*** 49,57 ****
  	*-*)
  		end=`expr $i : '[0-9]*-\(.*\)'`
  		start=`expr $i : '\(.*\)-[0-9]*'`
! 		vector=`awk "
! 			BEGIN {for (i = $start; i <= $end; i++) printf(\"%d \", i);}"
! 			< /dev/null`
  		range="$range $vector"
  		;;
  	*)
--- 52,59 ----
  	*-*)
  		end=`expr $i : '[0-9]*-\(.*\)'`
  		start=`expr $i : '\(.*\)-[0-9]*'`
! 		vector=`cat /dev/null | awk "
! 			BEGIN {for (i = $start; i <= $end; i++) printf(\"%d \", i);}"`
  		range="$range $vector"
  		;;
  	*)

*** End of Patch 17 ***
