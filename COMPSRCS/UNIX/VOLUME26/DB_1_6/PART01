Newsgroups: comp.sources.unix
From: bostic@cs.berkeley.edu (Keith Bostic)
Subject: v26i280: db-1.6 - A New Hashing Package for UNIX(tm) (updates dbm/ndbm), Part01/09
Sender: unix-sources-moderator@gw.home.vix.com
Approved: vixie@gw.home.vix.com

Submitted-By: bostic@cs.berkeley.edu (Keith Bostic)
Posting-Number: Volume 26, Issue 280
Archive-Name: db-1.6/part01

[ This is the latest version (some say the first stable version) of the
  Berkeley DB routines.  They replace the old dbm(3) and ndbm(3) libraries
  using some interface-compatible stub routines, but they are actually much
  more general than dbm(3)/ndbm(3) since they can be used to access normal
  text files (through the "recno" instance), B Trees, dbm(3)-style "hash"
  files, or new databases whose implementation you provide.  

  As some of you know, 4.4BSD was released recently, but due to the USL
  lawsuit against the U C Regents and BSDi, the Regents have decided to delay
  the release of the "unencumbered" (non-AT&T) portions of the system until
  the lawsuit is settled.  Keith Bostic of the CSRG has obtained permission
  to release some small parts of the system, including these routines.  They
  are subject to the usual licenses and disclaimers of UCB Net2-and-later code;
  this license is not very restrictive in my opinion -- read it for yourself.

  This library was written by Margo Seltzer, Ozan Yigit, and Keith Bostic.
  I've shown Keith as the "Submitter:" since he's the best point of contact
  for patches and enhancements and questions regarding this package.

  --vix ]

#! /bin/sh
# This is a shell archive.  Remove anything before this line, then unpack
# it by saving it into a file and typing "sh file".  To overwrite existing
# files, type "sh file -c".  You can also feed this as standard input via
# unshar, or by typing "sh <file", e.g..  If this archive is complete, you
# will see the following message at the end:
#		"End of archive 1 (of 9)."
# Contents:  MANIFEST Makefile.inc PORT PORT/Makefile PORT/README
#   PORT/clib PORT/clib/mktemp.c PORT/clib/realloc.c
#   PORT/clib/snprintf.c PORT/include PORT/include/ndbm.h PORT/sys
#   PORT/sys/ndbm.h README VERSION btree btree/Makefile.inc
#   btree/bt_page.c btree/bt_stack.c btree/extern.h db db/Makefile.inc
#   db/db.c doc hash hash/Makefile.inc hash/README hash/extern.h
#   hash/hash_log2.c hash/hsearch.c hash/search.h man man/Makefile.inc
#   mpool mpool/Makefile.inc mpool/README recno recno/Makefile.inc
#   recno/extern.h recno/rec_utils.c recno/recno.h test test/Makefile
#   test/README test/btree.tests test/hash.tests
#   test/hash.tests/makedb.sh test/hash.tests/tcreat3.c
#   test/hash.tests/testit test/hash.tests/tread2.c
#   test/hash.tests/tseq.c test/hash.tests/tverify.c test/obj
# Wrapped by vixie@gw.home.vix.com on Mon Jul  5 15:27:19 1993
PATH=/bin:/usr/bin:/usr/ucb ; export PATH
if test -f 'MANIFEST' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'MANIFEST'\"
else
echo shar: Extracting \"'MANIFEST'\" \(3493 characters\)
sed "s/^X//" >'MANIFEST' <<'END_OF_FILE'
X   File Name		Archive #	Description
X-----------------------------------------------------------
X MANIFEST                   1	This shipping list
X Makefile.inc               1	
X PORT                       1	
X PORT/Makefile              1	
X PORT/README                1	
X PORT/clib                  1	
X PORT/clib/memmove.c        2	
X PORT/clib/mktemp.c         1	
X PORT/clib/realloc.c        1	
X PORT/clib/snprintf.c       1	
X PORT/include               1	
X PORT/include/cdefs.h       2	
X PORT/include/compat.h      3	
X PORT/include/db.h          3	
X PORT/include/mpool.h       2	
X PORT/include/ndbm.h        1	
X PORT/sys                   1	
X PORT/sys/cdefs.h           2	
X PORT/sys/compat.h          3	
X PORT/sys/db.h              3	
X PORT/sys/mpool.h           2	
X PORT/sys/ndbm.h            1	
X README                     1	
X VERSION                    1	
X btree                      1	
X btree/Makefile.inc         1	
X btree/bt_close.c           2	
X btree/bt_conv.c            2	
X btree/bt_debug.c           4	
X btree/bt_delete.c          4	
X btree/bt_get.c             3	
X btree/bt_open.c            4	
X btree/bt_overflow.c        3	
X btree/bt_page.c            1	
X btree/bt_put.c             4	
X btree/bt_search.c          2	
X btree/bt_seq.c             4	
X btree/bt_split.c           6	
X btree/bt_stack.c           1	
X btree/bt_utils.c           3	
X btree/btree.h              5	
X btree/extern.h             1	
X db                         1	
X db/Makefile.inc            1	
X db/db.c                    1	
X doc                        1	
X doc/btree.3.ps             6	
X doc/dbopen.3.ps            7	
X doc/hash.3.ps              4	
X doc/hash.ps.01             9	
X doc/hash.ps.02             8	
X doc/mpool.3.ps             5	
X doc/recno.3.ps             5	
X hash                       1	
X hash/Makefile.inc          1	
X hash/README                1	
X hash/extern.h              1	
X hash/hash.c                7	
X hash/hash.h                4	
X hash/hash_bigkey.c         6	
X hash/hash_buf.c            4	
X hash/hash_func.c           2	
X hash/hash_log2.c           1	
X hash/hash_page.c           7	
X hash/hsearch.c             1	
X hash/ndbm.c                2	
X hash/page.h                2	
X hash/search.h              1	
X man                        1	
X man/Makefile.inc           1	
X man/btree.3                3	
X man/dbopen.3               5	
X man/hash.3                 2	
X man/mpool.3                3	
X man/recno.3                3	
X mpool                      1	
X mpool/Makefile.inc         1	
X mpool/README               1	
X mpool/mpool.c              4	
X recno                      1	
X recno/Makefile.inc         1	
X recno/extern.h             1	
X recno/rec_close.c          2	
X recno/rec_delete.c         2	
X recno/rec_get.c            3	
X recno/rec_open.c           3	
X recno/rec_put.c            3	
X recno/rec_search.c         2	
X recno/rec_seq.c            2	
X recno/rec_utils.c          1	
X recno/recno.h              1	
X test                       1	
X test/Makefile              1	
X test/README                1	
X test/btree.tests           1	
X test/btree.tests/main.c    6	
X test/dbtest.c              5	
X test/hash.tests            1	
X test/hash.tests/driver2.c  2	
X test/hash.tests/makedb.sh  1	
X test/hash.tests/tcreat3.c  1	
X test/hash.tests/tdel.c     2	
X test/hash.tests/testit     1	
X test/hash.tests/thash4.c   2	
X test/hash.tests/tread2.c   1	
X test/hash.tests/tseq.c     1	
X test/hash.tests/tverify.c  1	
X test/obj                   1	
X test/run.test              5	
END_OF_FILE
if test 3493 -ne `wc -c <'MANIFEST'`; then
    echo shar: \"'MANIFEST'\" unpacked with wrong size!
fi
# end of 'MANIFEST'
fi
if test -f 'Makefile.inc' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'Makefile.inc'\"
else
echo shar: Extracting \"'Makefile.inc'\" \(301 characters\)
sed "s/^X//" >'Makefile.inc' <<'END_OF_FILE'
X#	@(#)Makefile.inc	8.1 (Berkeley) 6/2/93
X#
X.include "${.CURDIR}/db/btree/Makefile.inc"
X.include "${.CURDIR}/db/db/Makefile.inc"
X.include "${.CURDIR}/db/hash/Makefile.inc"
X.include "${.CURDIR}/db/man/Makefile.inc"
X.include "${.CURDIR}/db/mpool/Makefile.inc"
X.include "${.CURDIR}/db/recno/Makefile.inc"
END_OF_FILE
if test 301 -ne `wc -c <'Makefile.inc'`; then
    echo shar: \"'Makefile.inc'\" unpacked with wrong size!
fi
# end of 'Makefile.inc'
fi
if test ! -d 'PORT' ; then
    echo shar: Creating directory \"'PORT'\"
    mkdir 'PORT'
fi
if test -f 'PORT/Makefile' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'PORT/Makefile'\"
else
echo shar: Extracting \"'PORT/Makefile'\" \(1851 characters\)
sed "s/^X//" >'PORT/Makefile' <<'END_OF_FILE'
X#	@(#)Makefile	8.1 (Berkeley) 6/2/93
X
XLIBDB=	libdb.a
XOBJ1=	bt_close.o bt_conv.o bt_debug.o bt_delete.o bt_get.o bt_open.o \
X	bt_overflow.o bt_page.o bt_put.o bt_search.o bt_seq.o bt_split.o \
X	bt_stack.o bt_utils.o
XOBJ2=	db.o
XOBJ3=	hash.o hash_bigkey.o hash_buf.o hash_func.o hash_log2.o hash_page.o \
X	hsearch.o ndbm.o
XOBJ4=	mpool.o
XOBJ5=	rec_close.o rec_delete.o rec_get.o rec_open.o rec_put.o rec_search.o \
X	rec_seq.o rec_utils.o
X
X# If you don't have memmove(3), add memmove.o to the MISC line.
X#
X# If you don't have mktemp(3) or mkstemp(3), add mktemp.o to the MISC line.
X#
X# If realloc(3) of a NULL pointer on your system isn't the same as
X# a malloc(3) call, add realloc.o to the MISC line.
X#
X# If you don't have snprintf/vsnprintf(3), add snprintf.o to the MISC line.
X# Note, this depends you your having vsprintf(3) -- if you don't, there's
X# no workaround other than changing the source code to not use the snprintf
X# calls.  If you have to make that change, check to see if your vsprintf
X# returns a length or a char *; if it's the latter, set VSPRINTF_CHARSTAR
X# in the include/compat.h file.
XMISC=
X
X${LIBDB}: ${OBJ1} ${OBJ2} ${OBJ3} ${OBJ4} ${OBJ5} ${MISC}
X	ar cq $@ \
X	    `lorder ${OBJ1} ${OBJ2} ${OBJ3} ${OBJ4} ${OBJ5} ${MISC} | tsort`
X	ranlib $@
X
X${OBJ1}:
X	${CC} -c -O -I. -Iinclude -I../btree ../btree/*.c
X${OBJ2}:
X	${CC} -c -O -I. -Iinclude -I../db ../db/*.c
X${OBJ3}:
X	${CC} -c -O -I. -Iinclude -I../hash ../hash/*.c
X${OBJ4}:
X	${CC} -c -O -I. -Iinclude -I../mpool ../mpool/*.c
X${OBJ5}:
X	${CC} -c -O -I. -Iinclude -I../recno ../recno/*.c
X
Xmemmove.o:
X	${CC} -DMEMMOVE -c -O -I. -Iinclude clib/memmove.c
Xmktemp.o:
X	${CC} -c -O -I. -Iinclude clib/mktemp.c
Xrealloc.o:
X	${CC} -c -O -I. -Iinclude clib/realloc.c
Xsnprintf.o:
X	${CC} -c -O -I. -Iinclude clib/snprintf.c
X
Xclean:
X	rm -f ${LIBDB} ${OBJ1} ${OBJ2} ${OBJ3} ${OBJ4} ${OBJ5} ${MISC}
END_OF_FILE
if test 1851 -ne `wc -c <'PORT/Makefile'`; then
    echo shar: \"'PORT/Makefile'\" unpacked with wrong size!
fi
# end of 'PORT/Makefile'
fi
if test -f 'PORT/README' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'PORT/README'\"
else
echo shar: Extracting \"'PORT/README'\" \(2417 characters\)
sed "s/^X//" >'PORT/README' <<'END_OF_FILE'
X#	@(#)README	8.1 (Berkeley) 6/2/93
X
XThis is the directory to use for creating a library of the dbopen(3)
Xroutines.  The Makefile builds the base system.  By changing it and
Xthe compat.h file, you should be able to pick and choose the various
Xthings your system needs to make libdb run.
X
XThe knobs that you may have to turn:
X
XIn the Makefile:
X	If you don't have mktemp(3) or mkstemp(3) on your system, add
X	"mktemp.o" to the MISC list.
X
X	If you don't have snprintf(3) on your system, add snprintf.o
X	to the MISC list.
X
X	If you don't have memmove(3), add memmove.o to the MISC list.
X
XIn include/compat.h:
X	Before attempting to build this library, you should skim through
X	the compat.h file, and adjust it as necessary for your system.
X	It's possible to use the #ifndef construct to figure out if a
X	#ifdef has been set, but C provides no similar method to figure
X	out if a typedef has been done.  All of the typedef's are grouped
X	at the top of compat.h, your compile errors will tell you which
X	ones you need.
X
X	Particularly subtle problems can occur if you don't have the
X	BYTE_ORDER set right or if the realloc define is wrong.
X
XSome other problems:
X	You may see warning messages about illegal pointer combinations.
X	It's because systems prototype malloc, calloc and realloc in
X	different places.  If you want to stop the warnings, find out
X	where your system prototypes them, and include it in compat.h,
X	or, just prototype them yourself.
X
XTo install:
X	Programs using the dbopen(3) interface have to include db.h.
X	To install the library, you'll need to put db.h (found in the
X	directory PORT/include) and the library libdb.a in some place
X	accesible to your program.
X
XHints:
X	SunOS 4.1.2 works with ``MISC=realloc.o snprintf.o memmove.o''
X	and the include/compat.h realloc ``#if 0'' changed to ``#if 1''.
X	SunOS gives a bunch of warning messages on the malloc family
X	routines.
X
X	Ultrix 4.2A works with ``MISC=realloc.o snprintf.o memmove.o''
X	and the include/compat.h realloc ``#if 0'' changed to ``#if 1''
X	and BYTE_ORDER changed from BIG_ENDIAN to LITTLE_ENDIAN.
X	Ultrix does not give warning messages on the malloc family
X	routines.
X
X	The recno routines require the mmap(2) call.  It wouldn't be
X	difficult to port this package to a system without mmap.  Change
X	rec_open.c to do slightly different initialization and to write
X	two new routines for rec_get.c that handle regular files using
X	reads and writes.
END_OF_FILE
if test 2417 -ne `wc -c <'PORT/README'`; then
    echo shar: \"'PORT/README'\" unpacked with wrong size!
fi
# end of 'PORT/README'
fi
if test ! -d 'PORT/clib' ; then
    echo shar: Creating directory \"'PORT/clib'\"
    mkdir 'PORT/clib'
fi
if test -f 'PORT/clib/mktemp.c' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'PORT/clib/mktemp.c'\"
else
echo shar: Extracting \"'PORT/clib/mktemp.c'\" \(3451 characters\)
sed "s/^X//" >'PORT/clib/mktemp.c' <<'END_OF_FILE'
X/*
X * Copyright (c) 1987, 1993
X *	The Regents of the University of California.  All rights reserved.
X *
X * Redistribution and use in source and binary forms, with or without
X * modification, are permitted provided that the following conditions
X * are met:
X * 1. Redistributions of source code must retain the above copyright
X *    notice, this list of conditions and the following disclaimer.
X * 2. Redistributions in binary form must reproduce the above copyright
X *    notice, this list of conditions and the following disclaimer in the
X *    documentation and/or other materials provided with the distribution.
X * 3. All advertising materials mentioning features or use of this software
X *    must display the following acknowledgement:
X *	This product includes software developed by the University of
X *	California, Berkeley and its contributors.
X * 4. Neither the name of the University nor the names of its contributors
X *    may be used to endorse or promote products derived from this software
X *    without specific prior written permission.
X *
X * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
X * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
X * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
X * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
X * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
X * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
X * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
X * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
X * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
X * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
X * SUCH DAMAGE.
X */
X
X#if defined(LIBC_SCCS) && !defined(lint)
Xstatic char sccsid[] = "@(#)mktemp.c	8.1 (Berkeley) 6/4/93";
X#endif /* LIBC_SCCS and not lint */
X
X#include <sys/types.h>
X#include <sys/stat.h>
X#include <fcntl.h>
X#include <errno.h>
X#include <stdio.h>
X#include <ctype.h>
X
Xstatic int _gettemp();
X
Xmkstemp(path)
X	char *path;
X{
X	int fd;
X
X	return (_gettemp(path, &fd) ? fd : -1);
X}
X
Xchar *
Xmktemp(path)
X	char *path;
X{
X	return(_gettemp(path, (int *)NULL) ? path : (char *)NULL);
X}
X
Xstatic
X_gettemp(path, doopen)
X	char *path;
X	register int *doopen;
X{
X	extern int errno;
X	register char *start, *trv;
X	struct stat sbuf;
X	u_int pid;
X
X	pid = getpid();
X	for (trv = path; *trv; ++trv);		/* extra X's get set to 0's */
X	while (*--trv == 'X') {
X		*trv = (pid % 10) + '0';
X		pid /= 10;
X	}
X
X	/*
X	 * check the target directory; if you have six X's and it
X	 * doesn't exist this runs for a *very* long time.
X	 */
X	for (start = trv + 1;; --trv) {
X		if (trv <= path)
X			break;
X		if (*trv == '/') {
X			*trv = '\0';
X			if (stat(path, &sbuf))
X				return(0);
X			if (!S_ISDIR(sbuf.st_mode)) {
X				errno = ENOTDIR;
X				return(0);
X			}
X			*trv = '/';
X			break;
X		}
X	}
X
X	for (;;) {
X		if (doopen) {
X			if ((*doopen =
X			    open(path, O_CREAT|O_EXCL|O_RDWR, 0600)) >= 0)
X				return(1);
X			if (errno != EEXIST)
X				return(0);
X		}
X		else if (stat(path, &sbuf))
X			return(errno == ENOENT ? 1 : 0);
X
X		/* tricky little algorithm for backward compatibility */
X		for (trv = start;;) {
X			if (!*trv)
X				return(0);
X			if (*trv == 'z')
X				*trv++ = 'a';
X			else {
X				if (isdigit(*trv))
X					*trv = 'a';
X				else
X					++*trv;
X				break;
X			}
X		}
X	}
X	/*NOTREACHED*/
X}
END_OF_FILE
if test 3451 -ne `wc -c <'PORT/clib/mktemp.c'`; then
    echo shar: \"'PORT/clib/mktemp.c'\" unpacked with wrong size!
fi
# end of 'PORT/clib/mktemp.c'
fi
if test -f 'PORT/clib/realloc.c' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'PORT/clib/realloc.c'\"
else
echo shar: Extracting \"'PORT/clib/realloc.c'\" \(143 characters\)
sed "s/^X//" >'PORT/clib/realloc.c' <<'END_OF_FILE'
X#include <sys/types.h>
X
X#include <stdlib.h>
X
Xvoid *
X__fix_realloc(p, n)
X	void *p;
X	size_t n;
X{
X	return (p == 0 ? malloc(n) : realloc(p, n));
X}
END_OF_FILE
if test 143 -ne `wc -c <'PORT/clib/realloc.c'`; then
    echo shar: \"'PORT/clib/realloc.c'\" unpacked with wrong size!
fi
# end of 'PORT/clib/realloc.c'
fi
if test -f 'PORT/clib/snprintf.c' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'PORT/clib/snprintf.c'\"
else
echo shar: Extracting \"'PORT/clib/snprintf.c'\" \(776 characters\)
sed "s/^X//" >'PORT/clib/snprintf.c' <<'END_OF_FILE'
X#include <sys/types.h>
X#include <sys/cdefs.h>
X
X#include <compat.h>
X
X#ifdef __STDC__
X#include <stdarg.h>
X#else
X#include <varargs.h>
X#endif
X
Xint
X#ifdef __STDC__
Xsnprintf(char *str, size_t n, const char *fmt, ...)
X#else
Xsnprintf(str, n, fmt, va_alist)
X	char *str;
X	size_t n;
X	const char *fmt;
X	va_dcl
X#endif
X{
X	va_list ap;
X	char *rp;
X	int rval;
X#ifdef __STDC__
X	va_start(ap, fmt);
X#else
X	va_start(ap);
X#endif
X#ifdef VSPRINTF_CHARSTAR
X	rp = vsprintf(str, fmt, ap);
X	va_end(ap);
X	return (strlen(rp));
X#else
X	rval = vsprintf(str, fmt, ap);
X	va_end(ap);
X	return (rval);
X#endif
X}
X
Xint
Xvsnprintf(str, n, fmt, ap)
X	char *str;
X	size_t n;
X	const char *fmt;
X	va_list ap;
X{
X#ifdef VSPRINTF_CHARSTAR
X	return (strlen(vsprintf(str, fmt, ap)));
X#else
X	return (vsprintf(str, fmt, ap));
X#endif
X}
END_OF_FILE
if test 776 -ne `wc -c <'PORT/clib/snprintf.c'`; then
    echo shar: \"'PORT/clib/snprintf.c'\" unpacked with wrong size!
fi
# end of 'PORT/clib/snprintf.c'
fi
if test ! -d 'PORT/include' ; then
    echo shar: Creating directory \"'PORT/include'\"
    mkdir 'PORT/include'
fi
if test -f 'PORT/include/ndbm.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'PORT/include/ndbm.h'\"
else
echo shar: Extracting \"'PORT/include/ndbm.h'\" \(2819 characters\)
sed "s/^X//" >'PORT/include/ndbm.h' <<'END_OF_FILE'
X/*-
X * Copyright (c) 1990, 1993
X *	The Regents of the University of California.  All rights reserved.
X *
X * This code is derived from software contributed to Berkeley by
X * Margo Seltzer.
X *
X * Redistribution and use in source and binary forms, with or without
X * modification, are permitted provided that the following conditions
X * are met:
X * 1. Redistributions of source code must retain the above copyright
X *    notice, this list of conditions and the following disclaimer.
X * 2. Redistributions in binary form must reproduce the above copyright
X *    notice, this list of conditions and the following disclaimer in the
X *    documentation and/or other materials provided with the distribution.
X * 3. All advertising materials mentioning features or use of this software
X *    must display the following acknowledgement:
X *	This product includes software developed by the University of
X *	California, Berkeley and its contributors.
X * 4. Neither the name of the University nor the names of its contributors
X *    may be used to endorse or promote products derived from this software
X *    without specific prior written permission.
X *
X * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
X * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
X * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
X * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
X * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
X * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
X * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
X * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
X * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
X * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
X * SUCH DAMAGE.
X *
X *	@(#)ndbm.h	8.1 (Berkeley) 6/2/93
X */
X
X#ifndef _NDBM_H_
X#define	_NDBM_H_
X
X#include <db.h>
X
X/* Map dbm interface onto db(3). */
X#define DBM_RDONLY	O_RDONLY
X
X/* Flags to dbm_store(). */
X#define DBM_INSERT      0
X#define DBM_REPLACE     1
X
X/*
X * The db(3) support for ndbm(3) always appends this suffix to the
X * file name to avoid overwriting the user's original database.
X */
X#define	DBM_SUFFIX	".db"
X
Xtypedef struct {
X	char *dptr;
X	int dsize;
X} datum;
X
Xtypedef DB DBM;
X#define	dbm_pagfno(a)	DBM_PAGFNO_NOT_AVAILABLE
X
X__BEGIN_DECLS
Xvoid	 dbm_close __P((DBM *));
Xint	 dbm_delete __P((DBM *, datum));
Xdatum	 dbm_fetch __P((DBM *, datum));
Xdatum	 dbm_firstkey __P((DBM *));
Xlong	 dbm_forder __P((DBM *, datum));
Xdatum	 dbm_nextkey __P((DBM *));
XDBM	*dbm_open __P((const char *, int, int));
Xint	 dbm_store __P((DBM *, datum, datum, int));
Xint	 dbm_dirfno __P((DBM *));
X__END_DECLS
X
X#endif /* !_NDBM_H_ */
END_OF_FILE
if test 2819 -ne `wc -c <'PORT/include/ndbm.h'`; then
    echo shar: \"'PORT/include/ndbm.h'\" unpacked with wrong size!
fi
# end of 'PORT/include/ndbm.h'
fi
if test ! -d 'PORT/sys' ; then
    echo shar: Creating directory \"'PORT/sys'\"
    mkdir 'PORT/sys'
fi
if test -f 'PORT/sys/ndbm.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'PORT/sys/ndbm.h'\"
else
echo shar: Extracting \"'PORT/sys/ndbm.h'\" \(2819 characters\)
sed "s/^X//" >'PORT/sys/ndbm.h' <<'END_OF_FILE'
X/*-
X * Copyright (c) 1990, 1993
X *	The Regents of the University of California.  All rights reserved.
X *
X * This code is derived from software contributed to Berkeley by
X * Margo Seltzer.
X *
X * Redistribution and use in source and binary forms, with or without
X * modification, are permitted provided that the following conditions
X * are met:
X * 1. Redistributions of source code must retain the above copyright
X *    notice, this list of conditions and the following disclaimer.
X * 2. Redistributions in binary form must reproduce the above copyright
X *    notice, this list of conditions and the following disclaimer in the
X *    documentation and/or other materials provided with the distribution.
X * 3. All advertising materials mentioning features or use of this software
X *    must display the following acknowledgement:
X *	This product includes software developed by the University of
X *	California, Berkeley and its contributors.
X * 4. Neither the name of the University nor the names of its contributors
X *    may be used to endorse or promote products derived from this software
X *    without specific prior written permission.
X *
X * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
X * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
X * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
X * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
X * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
X * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
X * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
X * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
X * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
X * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
X * SUCH DAMAGE.
X *
X *	@(#)ndbm.h	8.1 (Berkeley) 6/2/93
X */
X
X#ifndef _NDBM_H_
X#define	_NDBM_H_
X
X#include <db.h>
X
X/* Map dbm interface onto db(3). */
X#define DBM_RDONLY	O_RDONLY
X
X/* Flags to dbm_store(). */
X#define DBM_INSERT      0
X#define DBM_REPLACE     1
X
X/*
X * The db(3) support for ndbm(3) always appends this suffix to the
X * file name to avoid overwriting the user's original database.
X */
X#define	DBM_SUFFIX	".db"
X
Xtypedef struct {
X	char *dptr;
X	int dsize;
X} datum;
X
Xtypedef DB DBM;
X#define	dbm_pagfno(a)	DBM_PAGFNO_NOT_AVAILABLE
X
X__BEGIN_DECLS
Xvoid	 dbm_close __P((DBM *));
Xint	 dbm_delete __P((DBM *, datum));
Xdatum	 dbm_fetch __P((DBM *, datum));
Xdatum	 dbm_firstkey __P((DBM *));
Xlong	 dbm_forder __P((DBM *, datum));
Xdatum	 dbm_nextkey __P((DBM *));
XDBM	*dbm_open __P((const char *, int, int));
Xint	 dbm_store __P((DBM *, datum, datum, int));
Xint	 dbm_dirfno __P((DBM *));
X__END_DECLS
X
X#endif /* !_NDBM_H_ */
END_OF_FILE
if test 2819 -ne `wc -c <'PORT/sys/ndbm.h'`; then
    echo shar: \"'PORT/sys/ndbm.h'\" unpacked with wrong size!
fi
# end of 'PORT/sys/ndbm.h'
fi
if test -f 'README' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'README'\"
else
echo shar: Extracting \"'README'\" \(1941 characters\)
sed "s/^X//" >'README' <<'END_OF_FILE'
X#	@(#)VERSION	8.1 (Berkeley) 6/6/93
X
XThis is version 1.6 of the Berkeley DB code.
X
XIf your version of the DB code doesn't have a copy of
Xthis version file, it's really old, please update it!
X
XNew versions of this software are periodically made
Xavailable by anonymous ftp from ftp.cs.berkeley.edu,
Xin the file ucb/4bsd/db.tar.Z, or from ftp.uu.net.
X
XEmail questions may be addressed to Keith Bostic at
Xbostic@cs.berkeley.edu.
X
X============================================
X1.5 -> 1.6	06 Jun 1993
X	hash:	In PAIRFITS, the first comparison should look at (P)[2].
X		The hash_realloc function was walking off the end of memory.
X		The overflow page number was wrong when bumping splitpoint.
X1.4 -> 1.5	23 May 1993
X	hash:	Set hash default fill factor dynamically.
X	recno:	Fixed bug in sorted page splits.
X		Add page size parameter support.
X		Allow recno to specify the name of the underlying btree;
X			used for vi recovery.
X	btree/recno:
X		Support 64K pages.
X	btree/hash/recno:
X		Provide access to an underlying file descriptor.
X		Change sync routines to take a flag argument, recno
X			uses this to sync out the underlying btree.
X
X1.3 -> 1.4	10 May 1993
X	recno:	Delete the R_CURSORLOG flag from the recno interface.
X		Zero-length record fix for non-mmap reads.
X		Try and make SIZE_T_MAX test in open portable.
X
X1.2 -> 1.3	 1 May 1993
X	btree:	Ignore user byte-order setting when reading already
X		existing database.  Fixes to byte-order conversions.
X
X1.1 -> 1.2	15 Apr 1993
X		No bug fixes, only compatibility hacks.
X============================================
X
XDistribution contents:
X	Makefile.inc	Ignore this, it's Berkeley's internal Makefile.
X	PORT		The directory to build in.
X	README		This file.
X	VERSION		This file.
X	btree		B+tree routines.
X	db		Dbopen(3) interface routine.
X	doc		USENIX papers.
X	hash		Extended linear hashing routines.
X	man		Man pages.
X	mpool		Memory pool routines.
X	recno		Fixed/variable length routines.
X	test		Test package.
END_OF_FILE
if test 1941 -ne `wc -c <'README'`; then
    echo shar: \"'README'\" unpacked with wrong size!
fi
# end of 'README'
fi
if test -f 'VERSION' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'VERSION'\"
else
echo shar: Extracting \"'VERSION'\" \(1941 characters\)
sed "s/^X//" >'VERSION' <<'END_OF_FILE'
X#	@(#)VERSION	8.1 (Berkeley) 6/6/93
X
XThis is version 1.6 of the Berkeley DB code.
X
XIf your version of the DB code doesn't have a copy of
Xthis version file, it's really old, please update it!
X
XNew versions of this software are periodically made
Xavailable by anonymous ftp from ftp.cs.berkeley.edu,
Xin the file ucb/4bsd/db.tar.Z, or from ftp.uu.net.
X
XEmail questions may be addressed to Keith Bostic at
Xbostic@cs.berkeley.edu.
X
X============================================
X1.5 -> 1.6	06 Jun 1993
X	hash:	In PAIRFITS, the first comparison should look at (P)[2].
X		The hash_realloc function was walking off the end of memory.
X		The overflow page number was wrong when bumping splitpoint.
X1.4 -> 1.5	23 May 1993
X	hash:	Set hash default fill factor dynamically.
X	recno:	Fixed bug in sorted page splits.
X		Add page size parameter support.
X		Allow recno to specify the name of the underlying btree;
X			used for vi recovery.
X	btree/recno:
X		Support 64K pages.
X	btree/hash/recno:
X		Provide access to an underlying file descriptor.
X		Change sync routines to take a flag argument, recno
X			uses this to sync out the underlying btree.
X
X1.3 -> 1.4	10 May 1993
X	recno:	Delete the R_CURSORLOG flag from the recno interface.
X		Zero-length record fix for non-mmap reads.
X		Try and make SIZE_T_MAX test in open portable.
X
X1.2 -> 1.3	 1 May 1993
X	btree:	Ignore user byte-order setting when reading already
X		existing database.  Fixes to byte-order conversions.
X
X1.1 -> 1.2	15 Apr 1993
X		No bug fixes, only compatibility hacks.
X============================================
X
XDistribution contents:
X	Makefile.inc	Ignore this, it's Berkeley's internal Makefile.
X	PORT		The directory to build in.
X	README		This file.
X	VERSION		This file.
X	btree		B+tree routines.
X	db		Dbopen(3) interface routine.
X	doc		USENIX papers.
X	hash		Extended linear hashing routines.
X	man		Man pages.
X	mpool		Memory pool routines.
X	recno		Fixed/variable length routines.
X	test		Test package.
END_OF_FILE
if test 1941 -ne `wc -c <'VERSION'`; then
    echo shar: \"'VERSION'\" unpacked with wrong size!
fi
# end of 'VERSION'
fi
if test ! -d 'btree' ; then
    echo shar: Creating directory \"'btree'\"
    mkdir 'btree'
fi
if test -f 'btree/Makefile.inc' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'btree/Makefile.inc'\"
else
echo shar: Extracting \"'btree/Makefile.inc'\" \(233 characters\)
sed "s/^X//" >'btree/Makefile.inc' <<'END_OF_FILE'
X#	@(#)Makefile.inc	8.1 (Berkeley) 6/4/93
X
X.PATH: ${.CURDIR}/db/btree
X
XSRCS+=	bt_close.c bt_conv.c bt_debug.c bt_delete.c bt_get.c bt_open.c \
X	bt_overflow.c bt_page.c bt_put.c bt_search.c bt_seq.c bt_split.c \
X	bt_stack.c bt_utils.c
END_OF_FILE
if test 233 -ne `wc -c <'btree/Makefile.inc'`; then
    echo shar: \"'btree/Makefile.inc'\" unpacked with wrong size!
fi
# end of 'btree/Makefile.inc'
fi
if test -f 'btree/bt_page.c' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'btree/bt_page.c'\"
else
echo shar: Extracting \"'btree/bt_page.c'\" \(2926 characters\)
sed "s/^X//" >'btree/bt_page.c' <<'END_OF_FILE'
X/*-
X * Copyright (c) 1990, 1993
X *	The Regents of the University of California.  All rights reserved.
X *
X * Redistribution and use in source and binary forms, with or without
X * modification, are permitted provided that the following conditions
X * are met:
X * 1. Redistributions of source code must retain the above copyright
X *    notice, this list of conditions and the following disclaimer.
X * 2. Redistributions in binary form must reproduce the above copyright
X *    notice, this list of conditions and the following disclaimer in the
X *    documentation and/or other materials provided with the distribution.
X * 3. All advertising materials mentioning features or use of this software
X *    must display the following acknowledgement:
X *	This product includes software developed by the University of
X *	California, Berkeley and its contributors.
X * 4. Neither the name of the University nor the names of its contributors
X *    may be used to endorse or promote products derived from this software
X *    without specific prior written permission.
X *
X * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
X * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
X * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
X * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
X * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
X * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
X * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
X * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
X * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
X * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
X * SUCH DAMAGE.
X */
X
X#if defined(LIBC_SCCS) && !defined(lint)
Xstatic char sccsid[] = "@(#)bt_page.c	8.1 (Berkeley) 6/4/93";
X#endif /* LIBC_SCCS and not lint */
X
X#include <sys/types.h>
X
X#define	__DBINTERFACE_PRIVATE
X#include <stdio.h>
X
X#include <db.h>
X#include "btree.h"
X
X/*
X * __BT_FREE -- Put a page on the freelist.
X *
X * Parameters:
X *	t:	tree
X *	h:	page to free
X *
X * Returns:
X *	RET_ERROR, RET_SUCCESS
X */
Xint
X__bt_free(t, h)
X	BTREE *t;
X	PAGE *h;
X{
X	/* Insert the page at the start of the free list. */
X	h->prevpg = P_INVALID;
X	h->nextpg = t->bt_free;
X	t->bt_free = h->pgno;
X
X	/* Make sure the page gets written back. */
X	return (mpool_put(t->bt_mp, h, MPOOL_DIRTY));
X}
X
X/*
X * __BT_NEW -- Get a new page, preferably from the freelist.
X *
X * Parameters:
X *	t:	tree
X *	npg:	storage for page number.
X *
X * Returns:
X *	Pointer to a page, NULL on error.
X */
XPAGE *
X__bt_new(t, npg)
X	BTREE *t;
X	pgno_t *npg;
X{
X	PAGE *h;
X
X	if (t->bt_free != P_INVALID &&
X	    (h = mpool_get(t->bt_mp, t->bt_free, 0)) != NULL) {
X			*npg = t->bt_free;
X			t->bt_free = h->nextpg;
X			return (h);
X	}
X	return (mpool_new(t->bt_mp, npg));
X}
END_OF_FILE
if test 2926 -ne `wc -c <'btree/bt_page.c'`; then
    echo shar: \"'btree/bt_page.c'\" unpacked with wrong size!
fi
# end of 'btree/bt_page.c'
fi
if test -f 'btree/bt_stack.c' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'btree/bt_stack.c'\"
else
echo shar: Extracting \"'btree/bt_stack.c'\" \(3221 characters\)
sed "s/^X//" >'btree/bt_stack.c' <<'END_OF_FILE'
X/*-
X * Copyright (c) 1990, 1993
X *	The Regents of the University of California.  All rights reserved.
X *
X * This code is derived from software contributed to Berkeley by
X * Mike Olson.
X *
X * Redistribution and use in source and binary forms, with or without
X * modification, are permitted provided that the following conditions
X * are met:
X * 1. Redistributions of source code must retain the above copyright
X *    notice, this list of conditions and the following disclaimer.
X * 2. Redistributions in binary form must reproduce the above copyright
X *    notice, this list of conditions and the following disclaimer in the
X *    documentation and/or other materials provided with the distribution.
X * 3. All advertising materials mentioning features or use of this software
X *    must display the following acknowledgement:
X *	This product includes software developed by the University of
X *	California, Berkeley and its contributors.
X * 4. Neither the name of the University nor the names of its contributors
X *    may be used to endorse or promote products derived from this software
X *    without specific prior written permission.
X *
X * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
X * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
X * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
X * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
X * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
X * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
X * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
X * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
X * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
X * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
X * SUCH DAMAGE.
X */
X
X#if defined(LIBC_SCCS) && !defined(lint)
Xstatic char sccsid[] = "@(#)bt_stack.c	8.1 (Berkeley) 6/4/93";
X#endif /* LIBC_SCCS and not lint */
X
X#include <sys/types.h>
X
X#include <errno.h>
X#include <stdio.h>
X#include <stdlib.h>
X
X#include <db.h>
X#include "btree.h"
X
X/*
X * When a page splits, a new record has to be inserted into its parent page.
X * This page may have to split as well, all the way up to the root.  Since
X * parent pointers in each page would be expensive, we maintain a stack of
X * parent pages as we descend the tree.
X *
X * XXX
X * This is a concurrency problem -- if user a builds a stack, then user b
X * splits the tree, then user a tries to split the tree, there's a new level
X * in the tree that user a doesn't know about.
X */
X
X/*
X * __BT_PUSH -- Push parent page info onto the stack (LIFO).
X *
X * Parameters:
X *	t:	tree
X *	pgno:	page
X *	index:	page index
X *
X * Returns:
X * 	RET_ERROR, RET_SUCCESS
X */
Xint
X__bt_push(t, pgno, index)
X	BTREE *t;
X	pgno_t pgno;
X	int index;
X{
X	if (t->bt_sp == t->bt_maxstack) {
X		t->bt_maxstack += 50;
X		if ((t->bt_stack = realloc(t->bt_stack,
X		    t->bt_maxstack * sizeof(EPGNO))) == NULL) {
X			t->bt_maxstack -= 50;
X			return (RET_ERROR);
X		}
X	}
X
X	t->bt_stack[t->bt_sp].pgno = pgno;
X	t->bt_stack[t->bt_sp].index = index;
X	++t->bt_sp;
X	return (RET_SUCCESS);
X}
END_OF_FILE
if test 3221 -ne `wc -c <'btree/bt_stack.c'`; then
    echo shar: \"'btree/bt_stack.c'\" unpacked with wrong size!
fi
# end of 'btree/bt_stack.c'
fi
if test -f 'btree/extern.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'btree/extern.h'\"
else
echo shar: Extracting \"'btree/extern.h'\" \(3323 characters\)
sed "s/^X//" >'btree/extern.h' <<'END_OF_FILE'
X/*-
X * Copyright (c) 1991, 1993
X *	The Regents of the University of California.  All rights reserved.
X *
X * Redistribution and use in source and binary forms, with or without
X * modification, are permitted provided that the following conditions
X * are met:
X * 1. Redistributions of source code must retain the above copyright
X *    notice, this list of conditions and the following disclaimer.
X * 2. Redistributions in binary form must reproduce the above copyright
X *    notice, this list of conditions and the following disclaimer in the
X *    documentation and/or other materials provided with the distribution.
X * 3. All advertising materials mentioning features or use of this software
X *    must display the following acknowledgement:
X *	This product includes software developed by the University of
X *	California, Berkeley and its contributors.
X * 4. Neither the name of the University nor the names of its contributors
X *    may be used to endorse or promote products derived from this software
X *    without specific prior written permission.
X *
X * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
X * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
X * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
X * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
X * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
X * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
X * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
X * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
X * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
X * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
X * SUCH DAMAGE.
X *
X *	@(#)extern.h	8.1 (Berkeley) 6/4/93
X */
X
Xint	 __bt_close __P((DB *));
Xint	 __bt_cmp __P((BTREE *, const DBT *, EPG *));
Xint	 __bt_crsrdel __P((BTREE *, EPGNO *));
Xint	 __bt_defcmp __P((const DBT *, const DBT *));
Xint	 __bt_defpfx __P((const DBT *, const DBT *));
Xint	 __bt_delete __P((const DB *, const DBT *, u_int));
Xint	 __bt_dleaf __P((BTREE *, PAGE *, int));
Xint	 __bt_fd __P((const DB *));
XEPG	*__bt_first __P((BTREE *, const DBT *, int *));
Xint	 __bt_free __P((BTREE *, PAGE *));
Xint	 __bt_get __P((const DB *, const DBT *, DBT *, u_int));
XPAGE	*__bt_new __P((BTREE *, pgno_t *));
XDB	*__bt_open __P((const char *, int, int, const BTREEINFO *));
Xvoid	 __bt_pgin __P((void *, pgno_t, void *));
Xvoid	 __bt_pgout __P((void *, pgno_t, void *));
Xint	 __bt_push __P((BTREE *, pgno_t, int));
Xint	 __bt_put __P((const DB *dbp, DBT *, const DBT *, u_int));
Xint	 __bt_ret __P((BTREE *, EPG *, DBT *, DBT *));
XEPG	*__bt_search __P((BTREE *, const DBT *, int *));
Xint	 __bt_seq __P((const DB *, DBT *, DBT *, u_int));
Xint	 __bt_split __P((BTREE *, PAGE *,
X	    const DBT *, const DBT *, u_long, size_t, u_int));
Xint	 __bt_sync __P((const DB *, u_int));
X
Xint	 __ovfl_delete __P((BTREE *, void *));
Xint	 __ovfl_get __P((BTREE *, void *, size_t *, char **, size_t *));
Xint	 __ovfl_put __P((BTREE *, const DBT *, pgno_t *));
X
X#ifdef DEBUG
Xvoid	 __bt_dnpage __P((DB *, pgno_t));
Xvoid	 __bt_dpage __P((PAGE *));
Xvoid	 __bt_dump __P((DB *));
X#endif
X#ifdef STATISTICS
Xvoid	 __bt_stat __P((DB *));
X#endif
END_OF_FILE
if test 3323 -ne `wc -c <'btree/extern.h'`; then
    echo shar: \"'btree/extern.h'\" unpacked with wrong size!
fi
# end of 'btree/extern.h'
fi
if test ! -d 'db' ; then
    echo shar: Creating directory \"'db'\"
    mkdir 'db'
fi
if test -f 'db/Makefile.inc' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'db/Makefile.inc'\"
else
echo shar: Extracting \"'db/Makefile.inc'\" \(85 characters\)
sed "s/^X//" >'db/Makefile.inc' <<'END_OF_FILE'
X#       @(#)Makefile.inc	8.1 (Berkeley) 6/4/93
X
X.PATH: ${.CURDIR}/db/db
X
XSRCS+=	db.c
END_OF_FILE
if test 85 -ne `wc -c <'db/Makefile.inc'`; then
    echo shar: \"'db/Makefile.inc'\" unpacked with wrong size!
fi
# end of 'db/Makefile.inc'
fi
if test -f 'db/db.c' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'db/db.c'\"
else
echo shar: Extracting \"'db/db.c'\" \(2893 characters\)
sed "s/^X//" >'db/db.c' <<'END_OF_FILE'
X/*-
X * Copyright (c) 1991, 1993
X *	The Regents of the University of California.  All rights reserved.
X *
X * Redistribution and use in source and binary forms, with or without
X * modification, are permitted provided that the following conditions
X * are met:
X * 1. Redistributions of source code must retain the above copyright
X *    notice, this list of conditions and the following disclaimer.
X * 2. Redistributions in binary form must reproduce the above copyright
X *    notice, this list of conditions and the following disclaimer in the
X *    documentation and/or other materials provided with the distribution.
X * 3. All advertising materials mentioning features or use of this software
X *    must display the following acknowledgement:
X *	This product includes software developed by the University of
X *	California, Berkeley and its contributors.
X * 4. Neither the name of the University nor the names of its contributors
X *    may be used to endorse or promote products derived from this software
X *    without specific prior written permission.
X *
X * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
X * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
X * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
X * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
X * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
X * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
X * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
X * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
X * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
X * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
X * SUCH DAMAGE.
X */
X
X#if defined(LIBC_SCCS) && !defined(lint)
Xstatic char sccsid[] = "@(#)db.c	8.1 (Berkeley) 6/4/93";
X#endif /* LIBC_SCCS and not lint */
X
X#include <sys/types.h>
X
X#include <errno.h>
X#include <stddef.h>
X#include <stdio.h>
X
X#define	__DBINTERFACE_PRIVATE
X#include <db.h>
X
XDB *
Xdbopen(fname, flags, mode, type, openinfo)
X	const char *fname;
X	int flags, mode;
X	DBTYPE type;
X	const void *openinfo;
X{
X	switch (type) {
X	case DB_BTREE:
X		return (__bt_open(fname, flags, mode, openinfo));
X	case DB_HASH:
X		return (__hash_open(fname, flags, mode, openinfo));
X	case DB_RECNO:
X		return (__rec_open(fname, flags, mode, openinfo));
X	}
X	errno = EINVAL;
X	return (NULL);
X}
X
Xstatic int
X__dberr()
X{
X	return (RET_ERROR);
X}
X
X/*
X * __DBPANIC -- Stop.
X *
X * Parameters:
X *	dbp:	pointer to the DB structure.
X */
Xvoid
X__dbpanic(dbp)
X	DB *dbp;
X{
X	/* The only thing that can succeed is a close. */
X	dbp->del = (int (*)())__dberr;
X	dbp->fd = (int (*)())__dberr;
X	dbp->get = (int (*)())__dberr;
X	dbp->put = (int (*)())__dberr;
X	dbp->seq = (int (*)())__dberr;
X	dbp->sync = (int (*)())__dberr;
X}
END_OF_FILE
if test 2893 -ne `wc -c <'db/db.c'`; then
    echo shar: \"'db/db.c'\" unpacked with wrong size!
fi
# end of 'db/db.c'
fi
if test ! -d 'doc' ; then
    echo shar: Creating directory \"'doc'\"
    mkdir 'doc'
fi
if test ! -d 'hash' ; then
    echo shar: Creating directory \"'hash'\"
    mkdir 'hash'
fi
if test -f 'hash/Makefile.inc' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'hash/Makefile.inc'\"
else
echo shar: Extracting \"'hash/Makefile.inc'\" \(170 characters\)
sed "s/^X//" >'hash/Makefile.inc' <<'END_OF_FILE'
X#       @(#)Makefile.inc	8.1 (Berkeley) 6/4/93
X
X.PATH: ${.CURDIR}/db/hash
X
XSRCS+=	hash.c hash_bigkey.c hash_buf.c hash_func.c hash_log2.c \
X	hash_page.c hsearch.c ndbm.c
END_OF_FILE
if test 170 -ne `wc -c <'hash/Makefile.inc'`; then
    echo shar: \"'hash/Makefile.inc'\" unpacked with wrong size!
fi
# end of 'hash/Makefile.inc'
fi
if test -f 'hash/README' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'hash/README'\"
else
echo shar: Extracting \"'hash/README'\" \(2627 characters\)
sed "s/^X//" >'hash/README' <<'END_OF_FILE'
X#	@(#)README	8.1 (Berkeley) 6/4/93
X
XThis package implements a superset of the hsearch and dbm/ndbm libraries.
X
XTest Programs:
X	All test programs which need key/data pairs expect them entered
X	with key and data on separate lines
X
X	tcreat3.c	
X		Takes 
X			bucketsize (bsize), 
X			fill factor (ffactor), and
X			initial number of elements (nelem).  
X		Creates a hash table named hashtest containing the 
X		keys/data pairs entered from standard in.
X	thash4.c
X		Takes
X			bucketsize (bsize), 
X			fill factor (ffactor), 
X			initial number of elements (nelem)
X			bytes of cache (ncached), and
X			file from which to read data  (fname)
X		Creates a table from the key/data pairs on standard in and
X		then does a read of each key/data in fname
X	tdel.c
X		Takes
X			bucketsize (bsize), and
X			fill factor (ffactor).
X			file from which to read data (fname)
X		Reads each key/data pair from fname and deletes the
X		key from the hash table hashtest
X	tseq.c
X		Reads the key/data pairs in the file hashtest and writes them
X		to standard out.
X	tread2.c
X		Takes
X			butes of cache (ncached).
X		Reads key/data pairs from standard in and looks them up
X		in the file hashtest.
X	tverify.c
X		Reads key/data pairs from standard in, looks them up
X		in the file hashtest, and verifies that the data is
X		correct.
X
XNOTES:
X
XThe file search.h is provided for using the hsearch compatible interface
Xon BSD systems.  On System V derived systems, search.h should appear in 
X/usr/include.
X
XThe man page ../man/db.3 explains the interface to the hashing system.
XThe file hash.ps is a postscript copy of a paper explaining
Xthe history, implementation, and performance of the hash package.
X
X"bugs" or idiosyncracies
X
XIf you have a lot of overflows, it is possible to run out of overflow
Xpages.  Currently, this will cause a message to be printed on stderr.
XEventually, this will be indicated by a return error code.
X
XIf you are using the ndbm interface and exit without flushing or closing the
Xfile, you may lose updates since the package buffers all writes.  Also,
Xthe db interface only creates a single database file.  To avoid overwriting
Xthe user's original file, the suffix ".db" is appended to the file name
Xpassed to dbm_open.  Additionally, if your code "knows" about the historic
X.dir and .pag files, it will break.  
X
XThere is a fundamental difference between this package and the old hsearch.
XHsearch requires the user to maintain the keys and data in the application's
Xallocated memory while hash takes care of all storage management.  The down
Xside is that the byte strings passed in the ENTRY structure must be null
Xterminated (both the keys and the data).
END_OF_FILE
if test 2627 -ne `wc -c <'hash/README'`; then
    echo shar: \"'hash/README'\" unpacked with wrong size!
fi
# end of 'hash/README'
fi
if test -f 'hash/extern.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'hash/extern.h'\"
else
echo shar: Extracting \"'hash/extern.h'\" \(3226 characters\)
sed "s/^X//" >'hash/extern.h' <<'END_OF_FILE'
X/*-
X * Copyright (c) 1991, 1993
X *	The Regents of the University of California.  All rights reserved.
X *
X * Redistribution and use in source and binary forms, with or without
X * modification, are permitted provided that the following conditions
X * are met:
X * 1. Redistributions of source code must retain the above copyright
X *    notice, this list of conditions and the following disclaimer.
X * 2. Redistributions in binary form must reproduce the above copyright
X *    notice, this list of conditions and the following disclaimer in the
X *    documentation and/or other materials provided with the distribution.
X * 3. All advertising materials mentioning features or use of this software
X *    must display the following acknowledgement:
X *	This product includes software developed by the University of
X *	California, Berkeley and its contributors.
X * 4. Neither the name of the University nor the names of its contributors
X *    may be used to endorse or promote products derived from this software
X *    without specific prior written permission.
X *
X * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
X * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
X * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
X * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
X * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
X * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
X * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
X * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
X * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
X * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
X * SUCH DAMAGE.
X *
X *	@(#)extern.h	8.1 (Berkeley) 6/4/93
X */
X
XBUFHEAD	*__add_ovflpage __P((HTAB *, BUFHEAD *));
Xint	 __addel __P((HTAB *, BUFHEAD *, const DBT *, const DBT *));
Xint	 __big_delete __P((HTAB *, BUFHEAD *));
Xint	 __big_insert __P((HTAB *, BUFHEAD *, const DBT *, const DBT *));
Xint	 __big_keydata __P((HTAB *, BUFHEAD *, DBT *, DBT *, int));
Xint	 __big_return __P((HTAB *, BUFHEAD *, int, DBT *, int));
Xint	 __big_split __P((HTAB *, BUFHEAD *, BUFHEAD *, BUFHEAD *,
X		int, u_int, SPLIT_RETURN *));
Xint	 __buf_free __P((HTAB *, int, int));
Xvoid	 __buf_init __P((HTAB *, int));
Xu_int	 __call_hash __P((HTAB *, char *, int));
Xint	 __delpair __P((HTAB *, BUFHEAD *, int));
Xint	 __expand_table __P((HTAB *));
Xint	 __find_bigpair __P((HTAB *, BUFHEAD *, int, char *, int));
Xu_short	 __find_last_page __P((HTAB *, BUFHEAD **));
Xvoid	 __free_ovflpage __P((HTAB *, BUFHEAD *));
XBUFHEAD	*__get_buf __P((HTAB *, u_int, BUFHEAD *, int));
Xint	 __get_page __P((HTAB *, char *, u_int, int, int, int));
Xint	 __init_bitmap __P((HTAB *, int, int, int));
Xu_int	 __log2 __P((u_int));
Xint	 __put_page __P((HTAB *, char *, u_int, int, int));
Xvoid	 __reclaim_buf __P((HTAB *, BUFHEAD *));
Xint	 __split_page __P((HTAB *, u_int, u_int));
X
X/* Default hash routine. */
Xextern int	(*__default_hash) __P((u_char *, int));
X
X#ifdef HASH_STATISTICS
Xextern long hash_accesses, hash_collisions, hash_expansions, hash_overflows;
X#endif
END_OF_FILE
if test 3226 -ne `wc -c <'hash/extern.h'`; then
    echo shar: \"'hash/extern.h'\" unpacked with wrong size!
fi
# end of 'hash/extern.h'
fi
if test -f 'hash/hash_log2.c' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'hash/hash_log2.c'\"
else
echo shar: Extracting \"'hash/hash_log2.c'\" \(2223 characters\)
sed "s/^X//" >'hash/hash_log2.c' <<'END_OF_FILE'
X/*-
X * Copyright (c) 1990, 1993
X *	The Regents of the University of California.  All rights reserved.
X *
X * This code is derived from software contributed to Berkeley by
X * Margo Seltzer.
X *
X * Redistribution and use in source and binary forms, with or without
X * modification, are permitted provided that the following conditions
X * are met:
X * 1. Redistributions of source code must retain the above copyright
X *    notice, this list of conditions and the following disclaimer.
X * 2. Redistributions in binary form must reproduce the above copyright
X *    notice, this list of conditions and the following disclaimer in the
X *    documentation and/or other materials provided with the distribution.
X * 3. All advertising materials mentioning features or use of this software
X *    must display the following acknowledgement:
X *	This product includes software developed by the University of
X *	California, Berkeley and its contributors.
X * 4. Neither the name of the University nor the names of its contributors
X *    may be used to endorse or promote products derived from this software
X *    without specific prior written permission.
X *
X * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
X * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
X * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
X * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
X * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
X * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
X * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
X * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
X * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
X * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
X * SUCH DAMAGE.
X */
X
X#if defined(LIBC_SCCS) && !defined(lint)
Xstatic char sccsid[] = "@(#)hash_log2.c	8.1 (Berkeley) 6/4/93";
X#endif /* LIBC_SCCS and not lint */
X
X#include <sys/types.h>
X
Xu_int
X__log2(num)
X	u_int num;
X{
X	register u_int i, limit;
X
X	limit = 1;
X	for (i = 0; limit < num; limit = limit << 1, i++);
X	return (i);
X}
END_OF_FILE
if test 2223 -ne `wc -c <'hash/hash_log2.c'`; then
    echo shar: \"'hash/hash_log2.c'\" unpacked with wrong size!
fi
# end of 'hash/hash_log2.c'
fi
if test -f 'hash/hsearch.c' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'hash/hsearch.c'\"
else
echo shar: Extracting \"'hash/hsearch.c'\" \(3163 characters\)
sed "s/^X//" >'hash/hsearch.c' <<'END_OF_FILE'
X/*-
X * Copyright (c) 1990, 1993
X *	The Regents of the University of California.  All rights reserved.
X *
X * This code is derived from software contributed to Berkeley by
X * Margo Seltzer.
X *
X * Redistribution and use in source and binary forms, with or without
X * modification, are permitted provided that the following conditions
X * are met:
X * 1. Redistributions of source code must retain the above copyright
X *    notice, this list of conditions and the following disclaimer.
X * 2. Redistributions in binary form must reproduce the above copyright
X *    notice, this list of conditions and the following disclaimer in the
X *    documentation and/or other materials provided with the distribution.
X * 3. All advertising materials mentioning features or use of this software
X *    must display the following acknowledgement:
X *	This product includes software developed by the University of
X *	California, Berkeley and its contributors.
X * 4. Neither the name of the University nor the names of its contributors
X *    may be used to endorse or promote products derived from this software
X *    without specific prior written permission.
X *
X * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
X * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
X * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
X * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
X * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
X * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
X * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
X * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
X * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
X * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
X * SUCH DAMAGE.
X */
X
X#if defined(LIBC_SCCS) && !defined(lint)
Xstatic char sccsid[] = "@(#)hsearch.c	8.1 (Berkeley) 6/4/93";
X#endif /* LIBC_SCCS and not lint */
X
X#include <sys/types.h>
X
X#include <fcntl.h>
X#include <string.h>
X
X#define	__DBINTERFACE_PRIVATE
X#include <db.h>
X#include "search.h"
X
Xstatic DB *dbp = NULL;
Xstatic ENTRY retval;
X
Xextern int
Xhcreate(nel)
X	u_int nel;
X{
X	HASHINFO info;
X
X	info.nelem = nel;
X	info.bsize = 256;
X	info.ffactor = 8;
X	info.cachesize = NULL;
X	info.hash = NULL;
X	info.lorder = 0;
X	dbp = (DB *)__hash_open(NULL, O_CREAT | O_RDWR, 0600, &info);
X	return ((int)dbp);
X}
X
Xextern ENTRY *
Xhsearch(item, action)
X	ENTRY item;
X	ACTION action;
X{
X	DBT key, val;
X	int status;
X
X	if (!dbp)
X		return (NULL);
X	key.data = (u_char *)item.key;
X	key.size = strlen(item.key) + 1;
X
X	if (action == ENTER) {
X		val.data = (u_char *)item.data;
X		val.size = strlen(item.data) + 1;
X		status = (dbp->put)(dbp, &key, &val, R_NOOVERWRITE);
X		if (status)
X			return (NULL);
X	} else {
X		/* FIND */
X		status = (dbp->get)(dbp, &key, &val, 0);
X		if (status)
X			return (NULL);
X		else
X			item.data = (char *)val.data;
X	}
X	retval.key = item.key;
X	retval.data = item.data;
X	return (&retval);
X}
X
Xextern void
Xhdestroy()
X{
X	if (dbp) {
X		(void)(dbp->close)(dbp);
X		dbp = NULL;
X	}
X}
END_OF_FILE
if test 3163 -ne `wc -c <'hash/hsearch.c'`; then
    echo shar: \"'hash/hsearch.c'\" unpacked with wrong size!
fi
# end of 'hash/hsearch.c'
fi
if test -f 'hash/search.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'hash/search.h'\"
else
echo shar: Extracting \"'hash/search.h'\" \(2207 characters\)
sed "s/^X//" >'hash/search.h' <<'END_OF_FILE'
X/*-
X * Copyright (c) 1990, 1993
X *	The Regents of the University of California.  All rights reserved.
X *
X * This code is derived from software contributed to Berkeley by
X * Margo Seltzer.
X *
X * Redistribution and use in source and binary forms, with or without
X * modification, are permitted provided that the following conditions
X * are met:
X * 1. Redistributions of source code must retain the above copyright
X *    notice, this list of conditions and the following disclaimer.
X * 2. Redistributions in binary form must reproduce the above copyright
X *    notice, this list of conditions and the following disclaimer in the
X *    documentation and/or other materials provided with the distribution.
X * 3. All advertising materials mentioning features or use of this software
X *    must display the following acknowledgement:
X *	This product includes software developed by the University of
X *	California, Berkeley and its contributors.
X * 4. Neither the name of the University nor the names of its contributors
X *    may be used to endorse or promote products derived from this software
X *    without specific prior written permission.
X *
X * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
X * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
X * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
X * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
X * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
X * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
X * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
X * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
X * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
X * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
X * SUCH DAMAGE.
X *
X *	@(#)search.h	8.1 (Berkeley) 6/4/93
X */
X
X/* Backward compatibility to hsearch interface. */
Xtypedef struct entry {
X	char *key;
X	char *data;
X} ENTRY;
X
Xtypedef enum {
X	FIND, ENTER
X} ACTION;
X
Xint	 hcreate __P((unsigned int));
Xvoid	 hdestroy __P((void));
XENTRY	*hsearch __P((ENTRY, ACTION));
END_OF_FILE
if test 2207 -ne `wc -c <'hash/search.h'`; then
    echo shar: \"'hash/search.h'\" unpacked with wrong size!
fi
# end of 'hash/search.h'
fi
if test ! -d 'man' ; then
    echo shar: Creating directory \"'man'\"
    mkdir 'man'
fi
if test -f 'man/Makefile.inc' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'man/Makefile.inc'\"
else
echo shar: Extracting \"'man/Makefile.inc'\" \(146 characters\)
sed "s/^X//" >'man/Makefile.inc' <<'END_OF_FILE'
X#       @(#)Makefile.inc	8.1 (Berkeley) 6/4/93
X
X.PATH: ${.CURDIR}/db/man
X
X# mpool.3
XMAN3+=	btree.0 dbopen.0 hash.0 recno.0
XMLINKS+= dbopen.3 db.3
END_OF_FILE
if test 146 -ne `wc -c <'man/Makefile.inc'`; then
    echo shar: \"'man/Makefile.inc'\" unpacked with wrong size!
fi
# end of 'man/Makefile.inc'
fi
if test ! -d 'mpool' ; then
    echo shar: Creating directory \"'mpool'\"
    mkdir 'mpool'
fi
if test -f 'mpool/Makefile.inc' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'mpool/Makefile.inc'\"
else
echo shar: Extracting \"'mpool/Makefile.inc'\" \(85 characters\)
sed "s/^X//" >'mpool/Makefile.inc' <<'END_OF_FILE'
X#	@(#)Makefile.inc	8.1 (Berkeley) 6/4/93
X
X.PATH: ${.CURDIR}/db/mpool
X
XSRCS+=	mpool.c
END_OF_FILE
if test 85 -ne `wc -c <'mpool/Makefile.inc'`; then
    echo shar: \"'mpool/Makefile.inc'\" unpacked with wrong size!
fi
# end of 'mpool/Makefile.inc'
fi
if test -f 'mpool/README' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'mpool/README'\"
else
echo shar: Extracting \"'mpool/README'\" \(169 characters\)
sed "s/^X//" >'mpool/README' <<'END_OF_FILE'
X#	@(#)README	8.1 (Berkeley) 6/4/93
X
XThese are the current memory pool routines.
XThey aren't ready for prime time, yet, and
Xthe interface is expected to change.
X
X--keith
END_OF_FILE
if test 169 -ne `wc -c <'mpool/README'`; then
    echo shar: \"'mpool/README'\" unpacked with wrong size!
fi
# end of 'mpool/README'
fi
if test ! -d 'recno' ; then
    echo shar: Creating directory \"'recno'\"
    mkdir 'recno'
fi
if test -f 'recno/Makefile.inc' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'recno/Makefile.inc'\"
else
echo shar: Extracting \"'recno/Makefile.inc'\" \(177 characters\)
sed "s/^X//" >'recno/Makefile.inc' <<'END_OF_FILE'
X#       @(#)Makefile.inc	8.1 (Berkeley) 6/4/93
X
X.PATH: ${.CURDIR}/db/recno
X
XSRCS+=	rec_close.c rec_delete.c rec_get.c rec_open.c rec_put.c rec_search.c \
X	rec_seq.c rec_utils.c
END_OF_FILE
if test 177 -ne `wc -c <'recno/Makefile.inc'`; then
    echo shar: \"'recno/Makefile.inc'\" unpacked with wrong size!
fi
# end of 'recno/Makefile.inc'
fi
if test -f 'recno/extern.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'recno/extern.h'\"
else
echo shar: Extracting \"'recno/extern.h'\" \(2700 characters\)
sed "s/^X//" >'recno/extern.h' <<'END_OF_FILE'
X/*-
X * Copyright (c) 1991, 1993
X *	The Regents of the University of California.  All rights reserved.
X *
X * Redistribution and use in source and binary forms, with or without
X * modification, are permitted provided that the following conditions
X * are met:
X * 1. Redistributions of source code must retain the above copyright
X *    notice, this list of conditions and the following disclaimer.
X * 2. Redistributions in binary form must reproduce the above copyright
X *    notice, this list of conditions and the following disclaimer in the
X *    documentation and/or other materials provided with the distribution.
X * 3. All advertising materials mentioning features or use of this software
X *    must display the following acknowledgement:
X *	This product includes software developed by the University of
X *	California, Berkeley and its contributors.
X * 4. Neither the name of the University nor the names of its contributors
X *    may be used to endorse or promote products derived from this software
X *    without specific prior written permission.
X *
X * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
X * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
X * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
X * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
X * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
X * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
X * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
X * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
X * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
X * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
X * SUCH DAMAGE.
X *
X *	@(#)extern.h	8.1 (Berkeley) 6/4/93
X */
X
X#include "../btree/extern.h"
X
Xint	 __rec_close __P((DB *));
Xint	 __rec_delete __P((const DB *, const DBT *, u_int));
Xint	 __rec_dleaf __P((BTREE *, PAGE *, int));
Xint	 __rec_fd __P((const DB *));
Xint	 __rec_fmap __P((BTREE *, recno_t));
Xint	 __rec_fout __P((BTREE *));
Xint	 __rec_fpipe __P((BTREE *, recno_t));
Xint	 __rec_get __P((const DB *, const DBT *, DBT *, u_int));
Xint	 __rec_iput __P((BTREE *, recno_t, const DBT *, u_int));
Xint	 __rec_put __P((const DB *dbp, DBT *, const DBT *, u_int));
Xint	 __rec_ret __P((BTREE *, EPG *, recno_t, DBT *, DBT *));
XEPG	*__rec_search __P((BTREE *, recno_t, enum SRCHOP));
Xint	 __rec_seq __P((const DB *, DBT *, DBT *, u_int));
Xint	 __rec_sync __P((const DB *, u_int));
Xint	 __rec_vmap __P((BTREE *, recno_t));
Xint	 __rec_vout __P((BTREE *));
Xint	 __rec_vpipe __P((BTREE *, recno_t));
END_OF_FILE
if test 2700 -ne `wc -c <'recno/extern.h'`; then
    echo shar: \"'recno/extern.h'\" unpacked with wrong size!
fi
# end of 'recno/extern.h'
fi
if test -f 'recno/rec_utils.c' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'recno/rec_utils.c'\"
else
echo shar: Extracting \"'recno/rec_utils.c'\" \(3344 characters\)
sed "s/^X//" >'recno/rec_utils.c' <<'END_OF_FILE'
X/*-
X * Copyright (c) 1990, 1993
X *	The Regents of the University of California.  All rights reserved.
X *
X * Redistribution and use in source and binary forms, with or without
X * modification, are permitted provided that the following conditions
X * are met:
X * 1. Redistributions of source code must retain the above copyright
X *    notice, this list of conditions and the following disclaimer.
X * 2. Redistributions in binary form must reproduce the above copyright
X *    notice, this list of conditions and the following disclaimer in the
X *    documentation and/or other materials provided with the distribution.
X * 3. All advertising materials mentioning features or use of this software
X *    must display the following acknowledgement:
X *	This product includes software developed by the University of
X *	California, Berkeley and its contributors.
X * 4. Neither the name of the University nor the names of its contributors
X *    may be used to endorse or promote products derived from this software
X *    without specific prior written permission.
X *
X * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
X * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
X * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
X * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
X * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
X * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
X * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
X * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
X * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
X * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
X * SUCH DAMAGE.
X */
X
X#if defined(LIBC_SCCS) && !defined(lint)
Xstatic char sccsid[] = "@(#)rec_utils.c	8.1 (Berkeley) 6/4/93";
X#endif /* LIBC_SCCS and not lint */
X
X#include <sys/param.h>
X
X#include <stdio.h>
X#include <stdlib.h>
X#include <string.h>
X
X#include <db.h>
X#include "recno.h"
X
X/*
X * __REC_RET -- Build return data as a result of search or scan.
X *
X * Parameters:
X *	t:	tree
X *	d:	LEAF to be returned to the user.
X *	data:	user's data structure
X *
X * Returns:
X *	RET_SUCCESS, RET_ERROR.
X */
Xint
X__rec_ret(t, e, nrec, key, data)
X	BTREE *t;
X	EPG *e;
X	recno_t nrec;
X	DBT *key, *data;
X{
X	register RLEAF *rl;
X	register void *p;
X
X	if (data == NULL)
X		goto retkey;
X
X	rl = GETRLEAF(e->page, e->index);
X
X	if (rl->flags & P_BIGDATA) {
X		if (__ovfl_get(t, rl->bytes,
X		    &data->size, &t->bt_dbuf, &t->bt_dbufsz))
X			return (RET_ERROR);
X	} else {
X		/* Use +1 in case the first record retrieved is 0 length. */
X		if (rl->dsize + 1 > t->bt_dbufsz) {
X			if ((p = realloc(t->bt_dbuf, rl->dsize + 1)) == NULL)
X				return (RET_ERROR);
X			t->bt_dbuf = p;
X			t->bt_dbufsz = rl->dsize + 1;
X		}
X		memmove(t->bt_dbuf, rl->bytes, rl->dsize);
X		data->size = rl->dsize;
X	}
X	data->data = t->bt_dbuf;
X
Xretkey:	if (key == NULL)
X		return (RET_SUCCESS);
X
X	if (sizeof(recno_t) > t->bt_kbufsz) {
X		if ((p = realloc(t->bt_kbuf, sizeof(recno_t))) == NULL)
X			return (RET_ERROR);
X		t->bt_kbuf = p;
X		t->bt_kbufsz = sizeof(recno_t);
X	}
X	memmove(t->bt_kbuf, &nrec, sizeof(recno_t));
X	key->size = sizeof(recno_t);
X	key->data = t->bt_kbuf;
X	return (RET_SUCCESS);
X}
END_OF_FILE
if test 3344 -ne `wc -c <'recno/rec_utils.c'`; then
    echo shar: \"'recno/rec_utils.c'\" unpacked with wrong size!
fi
# end of 'recno/rec_utils.c'
fi
if test -f 'recno/recno.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'recno/recno.h'\"
else
echo shar: Extracting \"'recno/recno.h'\" \(1991 characters\)
sed "s/^X//" >'recno/recno.h' <<'END_OF_FILE'
X/*-
X * Copyright (c) 1991, 1993
X *	The Regents of the University of California.  All rights reserved.
X *
X * Redistribution and use in source and binary forms, with or without
X * modification, are permitted provided that the following conditions
X * are met:
X * 1. Redistributions of source code must retain the above copyright
X *    notice, this list of conditions and the following disclaimer.
X * 2. Redistributions in binary form must reproduce the above copyright
X *    notice, this list of conditions and the following disclaimer in the
X *    documentation and/or other materials provided with the distribution.
X * 3. All advertising materials mentioning features or use of this software
X *    must display the following acknowledgement:
X *	This product includes software developed by the University of
X *	California, Berkeley and its contributors.
X * 4. Neither the name of the University nor the names of its contributors
X *    may be used to endorse or promote products derived from this software
X *    without specific prior written permission.
X *
X * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
X * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
X * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
X * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
X * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
X * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
X * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
X * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
X * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
X * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
X * SUCH DAMAGE.
X *
X *	@(#)recno.h	8.1 (Berkeley) 6/4/93
X */
X
Xenum SRCHOP { SDELETE, SINSERT, SEARCH};	/* Rec_search operation. */
X
X#include "../btree/btree.h"
X#include "extern.h"
END_OF_FILE
if test 1991 -ne `wc -c <'recno/recno.h'`; then
    echo shar: \"'recno/recno.h'\" unpacked with wrong size!
fi
# end of 'recno/recno.h'
fi
if test ! -d 'test' ; then
    echo shar: Creating directory \"'test'\"
    mkdir 'test'
fi
if test -f 'test/Makefile' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'test/Makefile'\"
else
echo shar: Extracting \"'test/Makefile'\" \(624 characters\)
sed "s/^X//" >'test/Makefile' <<'END_OF_FILE'
X#	@(#)Makefile	8.1 (Berkeley) 6/4/93
X
XPROG=	dbtest
XSRCS=	dbtest.c
X#SRCS+=	rec_close.c rec_delete.c rec_get.c rec_open.c rec_put.c \
X#	rec_search.c rec_seq.c rec_utils.c
X#.PATH:	${.CURDIR}/../recno
X#SRCS+=	bt_close.c bt_conv.c bt_debug.c bt_delete.c bt_get.c bt_open.c \
X#	bt_overflow.c bt_put.c bt_search.c bt_seq.c bt_split.c bt_stack.c \
X#	bt_utils.c
X#.PATH:	${.CURDIR}/../btree
X#SRCS+=	hash.c hash_bigkey.c hash_buf.c hash_func.c hash_log2.c \
X#	hash_page.c hsearch.c ndbm.c
X#.PATH:	${.CURDIR}/../hash
X#LDADD=	/usr/src/lib/libc/obj/libc.a
X
XCFLAGS=	-g -DDEBUG -DSTATISTICS
XNOMAN=	noman
X
XNOINCLUDE=1
X.include <bsd.prog.mk>
END_OF_FILE
if test 624 -ne `wc -c <'test/Makefile'`; then
    echo shar: \"'test/Makefile'\" unpacked with wrong size!
fi
# end of 'test/Makefile'
fi
if test -f 'test/README' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'test/README'\"
else
echo shar: Extracting \"'test/README'\" \(1598 characters\)
sed "s/^X//" >'test/README' <<'END_OF_FILE'
X#	@(#)README	8.1 (Berkeley) 6/4/93
X
XThe script file consists of lines with a initial character which is
Xthe "command" for that line.  Legal characters are as follows:
X
Xc: compare a record
X	+ must be followed by [kK][dD]; the data value in the database
X	  associated with the specified key is compared to the specified
X	  data value.
Xe: echo a string
X	+ writes out the rest of the line into the output file; if the
X	  last character is not a carriage-return, a newline is appended.
Xg: do a get command
X	+ must be followed by [kK]
X	+ writes out the retrieved data DBT.
Xp: do a put command
X	+ must be followed by [kK][dD]
Xr: do a del command
X	+ must be followed by [kK]
Xs: do a seq command
X	+ writes out the retrieved data DBT.
Xf: set the flags for the next command
X	+ no value zero's the flags
XD [file]: data file
X	+ set the current data value to the contents of the file
Xd [data]:
X	+ set the current key value to the contents of the line.
XK [file]: key file
X	+ set the current key value to the contents of the file
Xk [data]:
X	+ set the current key value to the contents of the line.
Xo [r]: dump [reverse]
X	+ dump the database out, if 'r' is set, in reverse order.
X
XOptions to dbtest are as follows:
X
X	-f: Use the file argument as the database file.
X	-i: Use the rest of the argument to set elements in the info
X	    structure.  If the type is btree, then "-i cachesize=10240"
X	    will set BTREEINFO.cachesize to 10240.
X	-o: The rest of the argument is the output file instead of
X	    using stdout.
X
XDbtest requires two arguments, the type of access "hash", "recno" or
X"btree", and the script name.
END_OF_FILE
if test 1598 -ne `wc -c <'test/README'`; then
    echo shar: \"'test/README'\" unpacked with wrong size!
fi
# end of 'test/README'
fi
if test ! -d 'test/btree.tests' ; then
    echo shar: Creating directory \"'test/btree.tests'\"
    mkdir 'test/btree.tests'
fi
if test ! -d 'test/hash.tests' ; then
    echo shar: Creating directory \"'test/hash.tests'\"
    mkdir 'test/hash.tests'
fi
if test -f 'test/hash.tests/makedb.sh' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'test/hash.tests/makedb.sh'\"
else
echo shar: Extracting \"'test/hash.tests/makedb.sh'\" \(301 characters\)
sed "s/^X//" >'test/hash.tests/makedb.sh' <<'END_OF_FILE'
X#!/bin/sh
X#
X#	@(#)makedb.sh	8.1 (Berkeley) 6/4/93
X
Xawk '{i++; print $0; print i;}' /usr/share/dict/words > WORDS
Xls /bin /usr/bin /usr/ucb /etc | egrep '^(...|....|.....|......)$' | \
Xsort | uniq | \
Xawk '{
X	printf "%s\n", $0
X	for (i = 0; i < 1000; i++)
X		printf "%s+", $0
X	printf "\n"
X}' > LONG.DATA
END_OF_FILE
if test 301 -ne `wc -c <'test/hash.tests/makedb.sh'`; then
    echo shar: \"'test/hash.tests/makedb.sh'\" unpacked with wrong size!
fi
# end of 'test/hash.tests/makedb.sh'
fi
if test -f 'test/hash.tests/tcreat3.c' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'test/hash.tests/tcreat3.c'\"
else
echo shar: Extracting \"'test/hash.tests/tcreat3.c'\" \(3277 characters\)
sed "s/^X//" >'test/hash.tests/tcreat3.c' <<'END_OF_FILE'
X/*-
X * Copyright (c) 1991, 1993
X *	The Regents of the University of California.  All rights reserved.
X *
X * This code is derived from software contributed to Berkeley by
X * Margo Seltzer.
X *
X * Redistribution and use in source and binary forms, with or without
X * modification, are permitted provided that the following conditions
X * are met:
X * 1. Redistributions of source code must retain the above copyright
X *    notice, this list of conditions and the following disclaimer.
X * 2. Redistributions in binary form must reproduce the above copyright
X *    notice, this list of conditions and the following disclaimer in the
X *    documentation and/or other materials provided with the distribution.
X * 3. All advertising materials mentioning features or use of this software
X *    must display the following acknowledgement:
X *	This product includes software developed by the University of
X *	California, Berkeley and its contributors.
X * 4. Neither the name of the University nor the names of its contributors
X *    may be used to endorse or promote products derived from this software
X *    without specific prior written permission.
X *
X * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
X * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
X * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
X * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
X * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
X * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
X * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
X * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
X * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
X * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
X * SUCH DAMAGE.
X */
X
X#ifndef lint
Xstatic char copyright[] =
X"@(#) Copyright (c) 1991, 1993\n\
X	The Regents of the University of California.  All rights reserved.\n";
X#endif /* not lint */
X
X#ifndef lint
Xstatic char sccsid[] = "@(#)tcreat3.c	8.1 (Berkeley) 6/4/93";
X#endif /* not lint */
X
X#include <sys/types.h>
X#include <sys/file.h>
X#include <stdio.h>
X#include <db.h>
X
X#define INITIAL	25000
X#define MAXWORDS    25000	       /* # of elements in search table */
X
Xchar	wp1[8192];
Xchar	wp2[8192];
Xmain(argc, argv)
Xchar **argv;
X{
X	DBT item, key;
X	DB	*dbp;
X	HASHINFO ctl;
X	FILE *fp;
X	int	trash;
X
X	int i = 0;
X
X	argv++;
X	ctl.hash = NULL;
X	ctl.bsize = atoi(*argv++);
X	ctl.ffactor = atoi(*argv++);
X	ctl.nelem = atoi(*argv++);
X	ctl.lorder = 0;
X	if (!(dbp = dbopen( "hashtest",
X	    O_CREAT|O_TRUNC|O_RDWR, 0600, DB_HASH, &ctl))){
X		/* create table */
X		fprintf(stderr, "cannot create: hash table (size %d)\n",
X			INITIAL);
X		exit(1);
X	}
X
X	key.data = wp1;
X	item.data = wp2;
X	while ( fgets(wp1, 8192, stdin) &&
X		fgets(wp2, 8192, stdin) &&
X		i++ < MAXWORDS) {
X/*
X* put info in structure, and structure in the item
X*/
X		key.size = strlen(wp1);
X		item.size = strlen(wp2);
X
X/*
X * enter key/data pair into the table
X */
X		if ((dbp->put)(dbp, &key, &item, R_NOOVERWRITE) != NULL) {
X			fprintf(stderr, "cannot enter: key %s\n",
X				item.data);
X			exit(1);
X		}			
X	}
X
X	(dbp->close)(dbp);
X	exit(0);
X}
END_OF_FILE
if test 3277 -ne `wc -c <'test/hash.tests/tcreat3.c'`; then
    echo shar: \"'test/hash.tests/tcreat3.c'\" unpacked with wrong size!
fi
# end of 'test/hash.tests/tcreat3.c'
fi
if test -f 'test/hash.tests/testit' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'test/hash.tests/testit'\"
else
echo shar: Extracting \"'test/hash.tests/testit'\" \(3244 characters\)
sed "s/^X//" >'test/hash.tests/testit' <<'END_OF_FILE'
X#!/bin/csh -f
X#
X#	@(#)testit	8.1 (Berkeley) 6/4/93
X#
X
Xecho ""
Xecho "PAGE FILL "
Xset name=WORDS
X	set i = 256
X	foreach j ( 11 14 21 )
X	    thash4 $i $j 25000 65536 $name < $name
X	end
X	set i = 512
X	foreach j ( 21 28 43 )
X	    thash4 $i $j 25000 65536  $name < $name
X	end
X	set i = 1024
X	foreach j ( 43 57 85 )
X	    thash4 $i $j 25000 65536 $name < $name
X	end
X	set i = 2048
X	foreach j ( 85 114 171 )
X	    thash4 $i $j 25000 65536 $name < $name
X	end
X	set i = 4096
X	foreach j ( 171 228 341 )
X	    thash4 $i $j 25000 65536 $name < $name
X	end
X	set i = 8192
X	foreach j ( 341 455 683 )
X	    thash4 $i $j 25000 65536 $name < $name
X	end
X	echo "PAGE FILL "
X	set i = 256
X	foreach j ( 11 14 21 )
X	    echo "$i"_"$j"
X	    tcreat3 $i $j 25000 $name < $name
X	    tread2 65536 < $name
X	    tverify $name < $name
X	    tseq > /dev/null
X	    tdel $i $j  $name < $name
X	end
X	set i = 512
X	foreach j ( 21 28 43 )
X	    echo "$i"_"$j"
X	    tcreat3 $i $j 25000 $name < $name
X	    tread2 65536 < $name
X	    tverify $name < $name
X	    tseq > /dev/null
X	    tdel $i $j  $name < $name
X	end
X	set i = 1024
X	foreach j ( 43 57 85 )
X	    echo "$i"_"$j"
X	    tcreat3 $i $j 25000 $name < $name
X	    tread2 65536 < $name
X	    tverify $name < $name
X	    tseq > /dev/null
X	    tdel $i $j  $name < $name
X	end
X	set i = 2048
X	foreach j ( 85 114 171 )
X	    echo "$i"_"$j"
X	    tcreat3 $i $j 25000 $name < $name
X	    tread2 65536 < $name
X	    tverify $name < $name
X	    tseq > /dev/null
X	    tdel $i $j  $name < $name
X	end
X	set i = 4096
X	foreach j ( 171 228 341 )
X	    echo "$i"_"$j"
X	    tcreat3 $i $j 25000 $name < $name
X	    tread2 65536 < $name
X	    tverify $name < $name
X	    tseq > /dev/null
X	    tdel $i $j  $name < $name
X	end
X	set i = 8192
X	foreach j ( 341 455 683 )
X	    echo "$i"_"$j"
X	    tcreat3 $i $j 25000 $name < $name
X	    tread2 65536 < $name
X	    tverify $name < $name
X	    tseq > /dev/null
X	    tdel $i $j  $name < $name
X	end
Xset name=LONG.DATA
X	set i = 1024
X	foreach j ( 1 2 4 )
X	    echo thash4 $i $j 600 65536 $name 
X	    thash4 $i $j 600 65536 $name < $name
X	end
X
X	set i = 2048
X	foreach j ( 1 2 4 )
X	    echo thash4 $i $j 600 65536 $name 
X	    thash4 $i $j 600 65536 $name < $name
X	end
X	set i = 4096
X	foreach j ( 1 2 4 )
X	    echo thash4 $i $j 600 65536 $name 
X	    thash4 $i $j 600 65536 $name < $name
X	end
X	set i = 8192
X	foreach j ( 2 4 8 )
X	    echo thash4 $i $j 600 65536 $name 
X	    thash4 $i $j 600 65536 $name < $name
X	end
X	echo "PAGE FILL "
X	set i = 1024
X	foreach j ( 1 2 4 )
X	    echo "$i"_"$j"
X	    tcreat3 $i $j 600 $name < $name
X	    tread2 65536 < $name
X	    tverify $name < $name
X	    tseq > /dev/null
X	    tdel $i $j  $name < $name
X	end
X	set i = 2048
X	foreach j ( 1 2 4 )
X	    echo "$i"_"$j"
X	    tcreat3 $i $j 600 $name < $name
X	    tread2 65536 < $name
X	    tverify $name < $name
X	    tseq > /dev/null
X	    tdel $i $j  $name < $name
X	end
X	set i = 4096
X	foreach j ( 1 2 4 )
X	    echo "$i"_"$j"
X	    tcreat3 $i $j 600 $name < $name
X	    tread2 65536 < $name
X	    tverify $name < $name
X	    tseq > /dev/null
X	    tdel $i $j  $name < $name
X	end
X	set i = 8192
X	foreach j ( 2 4 8 )
X	    echo "$i"_"$j"
X	    tcreat3 $i $j 600 $name < $name
X	    tread2 65536 < $name
X	    tverify $name < $name
X	    tseq > /dev/null
X	    tdel $i $j  $name < $name
X	end
Xdriver2
END_OF_FILE
if test 3244 -ne `wc -c <'test/hash.tests/testit'`; then
    echo shar: \"'test/hash.tests/testit'\" unpacked with wrong size!
fi
# end of 'test/hash.tests/testit'
fi
if test -f 'test/hash.tests/tread2.c' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'test/hash.tests/tread2.c'\"
else
echo shar: Extracting \"'test/hash.tests/tread2.c'\" \(3342 characters\)
sed "s/^X//" >'test/hash.tests/tread2.c' <<'END_OF_FILE'
X/*-
X * Copyright (c) 1991, 1993
X *	The Regents of the University of California.  All rights reserved.
X *
X * This code is derived from software contributed to Berkeley by
X * Margo Seltzer.
X *
X * Redistribution and use in source and binary forms, with or without
X * modification, are permitted provided that the following conditions
X * are met:
X * 1. Redistributions of source code must retain the above copyright
X *    notice, this list of conditions and the following disclaimer.
X * 2. Redistributions in binary form must reproduce the above copyright
X *    notice, this list of conditions and the following disclaimer in the
X *    documentation and/or other materials provided with the distribution.
X * 3. All advertising materials mentioning features or use of this software
X *    must display the following acknowledgement:
X *	This product includes software developed by the University of
X *	California, Berkeley and its contributors.
X * 4. Neither the name of the University nor the names of its contributors
X *    may be used to endorse or promote products derived from this software
X *    without specific prior written permission.
X *
X * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
X * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
X * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
X * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
X * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
X * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
X * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
X * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
X * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
X * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
X * SUCH DAMAGE.
X */
X
X#ifndef lint
Xstatic char copyright[] =
X"@(#) Copyright (c) 1991, 1993\n\
X	The Regents of the University of California.  All rights reserved.\n";
X#endif /* not lint */
X
X#ifndef lint
Xstatic char sccsid[] = "@(#)tread2.c	8.1 (Berkeley) 6/4/93";
X#endif /* not lint */
X
X#include <sys/types.h>
X#include <sys/file.h>
X#include <stdio.h>
X#include <db.h>
X
X#define INITIAL	25000
X#define MAXWORDS    25000	       /* # of elements in search table */
X
Xtypedef struct {		       /* info to be stored */
X	int num, siz;
X} info;
X
Xchar	wp1[8192];
Xchar	wp2[8192];
Xmain(argc, argv)
Xchar **argv;
X{
X	DBT item, key, res;
X	DB	*dbp;
X	HASHINFO ctl;
X	int	stat;
X
X	int i = 0;
X
X	ctl.nelem = INITIAL;
X	ctl.hash = NULL;
X	ctl.bsize = 64;
X	ctl.ffactor = 1;
X	ctl.cachesize = atoi(*argv++);
X	ctl.lorder = 0;
X	if (!(dbp = dbopen( "hashtest", O_RDONLY, 0400, DB_HASH, &ctl))) {
X		/* create table */
X		fprintf(stderr, "cannot open: hash table\n" );
X		exit(1);
X	}
X
X	key.data = wp1;
X	item.data = wp2;
X	while ( fgets(wp1, 8192, stdin) &&
X		fgets(wp2, 8192, stdin) &&
X		i++ < MAXWORDS) {
X/*
X* put info in structure, and structure in the item
X*/
X		key.size = strlen(wp1);
X		item.size = strlen(wp2);
X
X		stat = (dbp->get)(dbp, &key, &res,0);
X		if (stat < 0) {
X		    fprintf ( stderr, "Error retrieving %s\n", key.data );
X		    exit(1);
X		} else if ( stat > 0 ) {
X		    fprintf ( stderr, "%s not found\n", key.data );
X		    exit(1);
X		}
X	}
X	(dbp->close)(dbp);
X	exit(0);
X}
END_OF_FILE
if test 3342 -ne `wc -c <'test/hash.tests/tread2.c'`; then
    echo shar: \"'test/hash.tests/tread2.c'\" unpacked with wrong size!
fi
# end of 'test/hash.tests/tread2.c'
fi
if test -f 'test/hash.tests/tseq.c' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'test/hash.tests/tseq.c'\"
else
echo shar: Extracting \"'test/hash.tests/tseq.c'\" \(3011 characters\)
sed "s/^X//" >'test/hash.tests/tseq.c' <<'END_OF_FILE'
X/*-
X * Copyright (c) 1991, 1993
X *	The Regents of the University of California.  All rights reserved.
X *
X * This code is derived from software contributed to Berkeley by
X * Margo Seltzer.
X *
X * Redistribution and use in source and binary forms, with or without
X * modification, are permitted provided that the following conditions
X * are met:
X * 1. Redistributions of source code must retain the above copyright
X *    notice, this list of conditions and the following disclaimer.
X * 2. Redistributions in binary form must reproduce the above copyright
X *    notice, this list of conditions and the following disclaimer in the
X *    documentation and/or other materials provided with the distribution.
X * 3. All advertising materials mentioning features or use of this software
X *    must display the following acknowledgement:
X *	This product includes software developed by the University of
X *	California, Berkeley and its contributors.
X * 4. Neither the name of the University nor the names of its contributors
X *    may be used to endorse or promote products derived from this software
X *    without specific prior written permission.
X *
X * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
X * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
X * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
X * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
X * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
X * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
X * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
X * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
X * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
X * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
X * SUCH DAMAGE.
X */
X
X#ifndef lint
Xstatic char copyright[] =
X"@(#) Copyright (c) 1991, 1993\n\
X	The Regents of the University of California.  All rights reserved.\n";
X#endif /* not lint */
X
X#ifndef lint
Xstatic char sccsid[] = "@(#)tseq.c	8.1 (Berkeley) 6/4/93";
X#endif /* not lint */
X
X#include <sys/types.h>
X#include <sys/file.h>
X#include <stdio.h>
X#include <db.h>
X
X#define INITIAL	25000
X#define MAXWORDS    25000	       /* # of elements in search table */
X
X
Xchar	wp[8192];
Xchar	cp[8192];
Xmain(argc, argv)
Xchar **argv;
X{
X	DBT item, key, res;
X	DB	*dbp;
X	FILE *fp;
X	int	stat;
X
X	if (!(dbp = dbopen( "hashtest", O_RDONLY, 0400, DB_HASH, NULL))) {
X		/* create table */
X		fprintf(stderr, "cannot open: hash table\n" );
X		exit(1);
X	}
X
X/*
X* put info in structure, and structure in the item
X*/
X	for ( stat = (dbp->seq) (dbp, &res, &item, 1 ); 
X	      stat == 0;
X	      stat = (dbp->seq) (dbp, &res, &item, 0 ) ) {
X
X	      bcopy ( res.data, wp, res.size );
X	      wp[res.size] = 0;
X	      bcopy ( item.data, cp, item.size );
X	      cp[item.size] = 0;
X
X	      printf ( "%s %s\n", wp, cp );
X	}
X	(dbp->close)(dbp);
X	exit(0);
X}
END_OF_FILE
if test 3011 -ne `wc -c <'test/hash.tests/tseq.c'`; then
    echo shar: \"'test/hash.tests/tseq.c'\" unpacked with wrong size!
fi
# end of 'test/hash.tests/tseq.c'
fi
if test -f 'test/hash.tests/tverify.c' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'test/hash.tests/tverify.c'\"
else
echo shar: Extracting \"'test/hash.tests/tverify.c'\" \(3481 characters\)
sed "s/^X//" >'test/hash.tests/tverify.c' <<'END_OF_FILE'
X/*-
X * Copyright (c) 1991, 1993
X *	The Regents of the University of California.  All rights reserved.
X *
X * This code is derived from software contributed to Berkeley by
X * Margo Seltzer.
X *
X * Redistribution and use in source and binary forms, with or without
X * modification, are permitted provided that the following conditions
X * are met:
X * 1. Redistributions of source code must retain the above copyright
X *    notice, this list of conditions and the following disclaimer.
X * 2. Redistributions in binary form must reproduce the above copyright
X *    notice, this list of conditions and the following disclaimer in the
X *    documentation and/or other materials provided with the distribution.
X * 3. All advertising materials mentioning features or use of this software
X *    must display the following acknowledgement:
X *	This product includes software developed by the University of
X *	California, Berkeley and its contributors.
X * 4. Neither the name of the University nor the names of its contributors
X *    may be used to endorse or promote products derived from this software
X *    without specific prior written permission.
X *
X * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
X * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
X * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
X * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
X * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
X * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
X * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
X * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
X * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
X * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
X * SUCH DAMAGE.
X */
X
X#ifndef lint
Xstatic char copyright[] =
X"@(#) Copyright (c) 1991, 1993\n\
X	The Regents of the University of California.  All rights reserved.\n";
X#endif /* not lint */
X
X#ifndef lint
Xstatic char sccsid[] = "@(#)tverify.c	8.1 (Berkeley) 6/4/93";
X#endif /* not lint */
X
X#include <sys/types.h>
X#include <sys/file.h>
X#include <stdio.h>
X#include <db.h>
X
X#define INITIAL	25000
X#define MAXWORDS    25000	       /* # of elements in search table */
X
Xtypedef struct {		       /* info to be stored */
X	int num, siz;
X} info;
X
Xchar	wp1[8192];
Xchar	wp2[8192];
Xmain(argc, argv)
Xchar **argv;
X{
X	DBT key, res;
X	DB	*dbp;
X	HASHINFO ctl;
X	int	trash;
X	int	stat;
X
X	int i = 0;
X
X	ctl.nelem = INITIAL;
X	ctl.hash = NULL;
X	ctl.bsize = 64;
X	ctl.ffactor = 1;
X	ctl.cachesize = 1024 * 1024;	/* 1 MEG */
X	ctl.lorder = 0;
X	if (!(dbp = dbopen( "hashtest", O_RDONLY, 0400, DB_HASH, &ctl))) {
X		/* create table */
X		fprintf(stderr, "cannot open: hash table\n" );
X		exit(1);
X	}
X
X	key.data = wp1;
X	while ( fgets(wp1, 8192, stdin) &&
X		fgets(wp2, 8192, stdin) &&
X		i++ < MAXWORDS) {
X/*
X* put info in structure, and structure in the item
X*/
X		key.size = strlen(wp1);
X
X		stat = (dbp->get)(dbp, &key, &res,0);
X		if (stat < 0) {
X		    fprintf ( stderr, "Error retrieving %s\n", key.data );
X		    exit(1);
X		} else if ( stat > 0 ) {
X		    fprintf ( stderr, "%s not found\n", key.data );
X		    exit(1);
X		}
X		if ( memcmp ( res.data, wp2, res.size ) ) {
X		    fprintf ( stderr, "data for %s is incorrect.  Data was %s.  Should have been %s\n", key.data, res.data, wp2 );
X		}
X	}
X	(dbp->close)(dbp);
X	exit(0);
X}
END_OF_FILE
if test 3481 -ne `wc -c <'test/hash.tests/tverify.c'`; then
    echo shar: \"'test/hash.tests/tverify.c'\" unpacked with wrong size!
fi
# end of 'test/hash.tests/tverify.c'
fi
if test ! -d 'test/obj' ; then
    echo shar: Creating directory \"'test/obj'\"
    mkdir 'test/obj'
fi
echo shar: End of archive 1 \(of 9\).
cp /dev/null ark1isdone
MISSING=""
for I in 1 2 3 4 5 6 7 8 9 ; do
    if test ! -f ark${I}isdone ; then
	MISSING="${MISSING} ${I}"
    fi
done
if test "${MISSING}" = "" ; then
    echo You have unpacked all 9 archives.
    rm -f ark[1-9]isdone ark[1-9][0-9]isdone
else
    echo You still need to unpack the following archives:
    echo "        " ${MISSING}
fi
##  End of shell archive.
exit 0
