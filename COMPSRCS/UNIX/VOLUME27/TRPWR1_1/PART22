Newsgroups: comp.sources.unix
From: spaf@cs.purdue.edu (Gene Spafford)
Subject: v27i168: tripwire-1.1 - security integrity monitor, V1.1, Part22/26
References: <1.756157401.21864@gw.home.vix.com>
Sender: unix-sources-moderator@gw.home.vix.com
Approved: vixie@gw.home.vix.com

Submitted-By: spaf@cs.purdue.edu (Gene Spafford)
Posting-Number: Volume 27, Issue 168
Archive-Name: tripwire-1.1/part22

#! /bin/sh
# This is a shell archive.  Remove anything before this line, then unpack
# it by saving it into a file and typing "sh file".  To overwrite existing
# files, type "sh file -c".  You can also feed this as standard input via
# unshar, or by typing "sh <file", e.g..  If this archive is complete, you
# will see the following message at the end:
#		"End of archive 22 (of 25)."
# Contents:  tripwire-1.1 tripwire-1.1/configs tripwire-1.1/sigs
#   tripwire-1.1/sigs/crc tripwire-1.1/src tripwire-1.1/tests
#   tripwire-1.1/src/Makefile tripwire-1.1/tests/test.inter.sh
#   tripwire-1.1/tests/test0.key tripwire-1.1/sigs/crc/crc.c
#   tripwire-1.1/configs/Makefile.xenix tripwire-1.1/sigs/crc/Makefile
# Wrapped by spaf@uther.cs.purdue.edu on Thu Dec 16 11:42:47 1993
PATH=/bin:/usr/bin:/usr/ucb ; export PATH
if test ! -d 'tripwire-1.1' ; then
    echo shar: Creating directory \"'tripwire-1.1'\"
    mkdir 'tripwire-1.1'
fi
if test ! -d 'tripwire-1.1/configs' ; then
    echo shar: Creating directory \"'tripwire-1.1/configs'\"
    mkdir 'tripwire-1.1/configs'
fi
if test ! -d 'tripwire-1.1/sigs' ; then
    echo shar: Creating directory \"'tripwire-1.1/sigs'\"
    mkdir 'tripwire-1.1/sigs'
fi
if test ! -d 'tripwire-1.1/sigs/crc' ; then
    echo shar: Creating directory \"'tripwire-1.1/sigs/crc'\"
    mkdir 'tripwire-1.1/sigs/crc'
fi
if test ! -d 'tripwire-1.1/src' ; then
    echo shar: Creating directory \"'tripwire-1.1/src'\"
    mkdir 'tripwire-1.1/src'
fi
if test ! -d 'tripwire-1.1/tests' ; then
    echo shar: Creating directory \"'tripwire-1.1/tests'\"
    mkdir 'tripwire-1.1/tests'
fi
if test -f 'tripwire-1.1/src/Makefile' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'tripwire-1.1/src/Makefile'\"
else
echo shar: Extracting \"'tripwire-1.1/src/Makefile'\" \(8171 characters\)
sed "s/^X//" >'tripwire-1.1/src/Makefile' <<'END_OF_FILE'
X# $Id: Makefile,v 1.17 1993/12/15 16:50:18 genek Exp $
X#
X# 	Tripwire build
X#
X
XCFLAGS = -O
X
XOFILES = 	config.parse.o main.o list.o ignorevec.o dbase.build.o \
X		utils.o preen.o preen.interp.o preen.report.o \
X		nullsig.o config.prim.o dbase.update.o \
X		config.pre.o help.o \
X		$(OSIGS)
X
XOSIGS	  = $(OSIG1) $(OSIG2) $(OSIG3) $(OSIG4) $(OSIG5) $(OSIG6) $(OSIG7)
X
XSIGDIRS	  = $(SIG1DIR) $(SIG2DIR) $(SIG3DIR) $(SIG4DIR) $(SIG5DIR) \
X	    $(SIG6DIR) $(SIG7DIR) $(SIG8DIR) $(SIG9DIR)
X
XSIGDIR	  = ../sigs
XSIG1DIR   = $(SIGDIR)/md5
XSIG2DIR   = $(SIGDIR)/snefru
XSIG3DIR   = $(SIGDIR)/crc32
XSIG4DIR   = $(SIGDIR)/crc
XSIG5DIR   = $(SIGDIR)/md4
XSIG6DIR   = $(SIGDIR)/md2
XSIG7DIR   = $(SIGDIR)/sha
X
XOSIG1	  = $(SIG1DIR)/md5wrapper.o $(SIG1DIR)/md5.o
XOSIG2	  = $(SIG2DIR)/snefru.o
XOSIG3	  = $(SIG3DIR)/crc32.o
XOSIG4	  = $(SIG4DIR)/crc.o
XOSIG5	  = $(SIG5DIR)/md4.o $(SIG5DIR)/md4wrapper.o
XOSIG6	  = $(SIG6DIR)/md2.o $(SIG6DIR)/md2wrapper.o
XOSIG7	  = $(SIG7DIR)/sha.o $(SIG7DIR)/shawrapper.o
X
XCFILES = 	config.parse.c main.c list.c ignorevec.c dbase.build.c \
X		utils.c preen.c preen.interp.c preen.report.c \
X		nullsig.c config.prim.c dbase.update.c \
X		config.pre.c help.c \
X		$(CSIGS)
X
XCSIGS	  = $(CSIG1) $(CSIG2) $(CSIG3) $(CSIG4) $(CSIG5) $(CSIG6) $(CSIG7)
X
XCSIG1	  = $(SIG1DIR)/md5wrapper.c $(SIG1DIR)/md5.c
XCSIG2	  = $(SIG2DIR)/snefru.c
XCSIG3	  = $(SIG3DIR)/crc32.c
XCSIG4	  = $(SIG4DIR)/crc.c
XCSIG5	  = $(SIG5DIR)/md4.c $(SIG5DIR)/md4wrapper.c
XCSIG6	  = $(SIG6DIR)/md2.c $(SIG6DIR)/md2wrapper.c
XCSIG7	  = $(SIG7DIR)/sha.c $(SIG7DIR)/shawrapper.c
X
X###
X
Xall:	tripwire siggen twconvert
X
Xtripwire:	$(P) help.c $(OFILES) 
X	$(CC) $(CFLAGS) $(LDFLAGS) -o $@ $(OFILES) $(LIBS)
X
X$(OSIG1):	../include/byteorder.h
X	(cd $(SIG1DIR); make CC="$(CC)" CFLAGS="$(CFLAGS) -I. -I..")
X$(OSIG2):	../include/byteorder.h
X	(cd $(SIG2DIR); make CC="$(CC)" CFLAGS="$(CFLAGS) -I. -I..")
X$(OSIG3):	../include/byteorder.h
X	(cd $(SIG3DIR); make CC="$(CC)" CFLAGS="$(CFLAGS) -I. -I..")
X$(OSIG4):	../include/byteorder.h
X	(cd $(SIG4DIR); make CC="$(CC)" CFLAGS="$(CFLAGS) -I. -I..")
X$(OSIG5):	../include/byteorder.h
X	(cd $(SIG5DIR); make CC="$(CC)" CFLAGS="$(CFLAGS) -I. -I..")
X$(OSIG6):	../include/byteorder.h
X	(cd $(SIG6DIR); make CC="$(CC)" CFLAGS="$(CFLAGS) -I. -I..")
X$(OSIG7):	../include/byteorder.h
X	(cd $(SIG7DIR); make CC="$(CC)" CFLAGS="$(CFLAGS) -I. -I..")
X
X../include/byteorder.h ../include/inode.h:
X	(cd ../aux; make CC=$(CC) CFLAGS="$(CFLAGS)"  \
X	LDFLAGS="$(LDFLAGS)" CPP="$(CPP)" SHELL=$(SHELL) all)
X
Xhelp.c:	help.txt help.sh
X	$(SHELL) help.sh help.txt > help.c
X
X
X# need $(LDFLAGS) because this may interact with the way nullsig.o and
X# utils.o were compiled
Xsiggen:	$(OSIGS) siggen.c utils.o nullsig.o
X	$(CC) $(CFLAGS) $(LDFLAGS) -o siggen siggen.c $(OSIGS) nullsig.o utils.o $(LIBS)
X	
Xtwconvert: twconvert.c utils.o
X	$(CC) $(CFLAGS) $(LDFLAGS) -o twconvert twconvert.c utils.o $(LIBS)
X	
Xconfig.lex.c:	config.pre.l
X	$(LEX) config.pre.l
X	mv lex.yy.c config.lex.c
X
Xconfig.pre.c:	config.lex.c config.pre.y
X	$(YACC) config.pre.y
X	sed 's/lex\.yy\.c/config.lex.c/' < y.tab.c > config.pre.c 
X	rm y.tab.c
X
X.c.o:
X	$(CC) $(CFLAGS) -c $<
X
Xinstall:	tripwire
X	$(INSTALL) tripwire $(DESTDIR)
X
Xclean:
X	-rm -f $(OFILES) config.lex.c config.pre.c y.tab.c lex.yy.c help.c \
X	siggen.o core .pure
X	for i in $(SIGDIRS); do \
X	    (cd $$i; make clean;) \
X	done
X
X
Xclobber:	clean
X	-rm -f tripwire siggen twconvert
X
Xcscope.files:
X	echo siggen.c $(CFILES) > cscope.files
X
X#  Some other dependencies
X
Xconfig.lex.o: config.lex.c
Xconfig.parse.o: config.parse.c
Xconfig.parse.o: ../include/config.h
Xconfig.parse.o: ../include/list.h
Xconfig.parse.o: ../include/tripwire.h
Xconfig.parse.o: ../sigs/snefru/snefru.h
Xconfig.parse.o: ../sigs/md5/md5.h
Xconfig.parse.o: ../sigs/crc32/crc32.h
Xconfig.parse.o: ../sigs/crc/crc.h
Xconfig.parse.o: ../sigs/md2/md2.h
Xconfig.parse.o: ../sigs/md4/md4.h
Xconfig.parse.o: ../include/inode.h
Xconfig.pre.o: config.pre.c
Xconfig.pre.o: ../include/config.h
Xconfig.pre.o: ../include/list.h
Xconfig.pre.o: ../include/tripwire.h
Xconfig.pre.o: ../sigs/snefru/snefru.h
Xconfig.pre.o: ../sigs/md5/md5.h
Xconfig.pre.o: ../sigs/crc32/crc32.h
Xconfig.pre.o: ../sigs/crc/crc.h
Xconfig.pre.o: ../sigs/md2/md2.h
Xconfig.pre.o: ../sigs/md4/md4.h
Xconfig.pre.o: ../include/inode.h
Xconfig.pre.o: ./config.lex.c
Xconfig.prim.o: config.prim.c
Xconfig.prim.o: ../include/config.h
Xconfig.prim.o: ../include/tripwire.h
Xconfig.prim.o: ../sigs/snefru/snefru.h
Xconfig.prim.o: ../sigs/md5/md5.h
Xconfig.prim.o: ../sigs/crc32/crc32.h
Xconfig.prim.o: ../sigs/crc/crc.h
Xconfig.prim.o: ../sigs/md2/md2.h
Xconfig.prim.o: ../sigs/md4/md4.h
Xconfig.prim.o: ../include/inode.h
Xconfig.prim.o: ../include/list.h
Xdbase.build.o: dbase.build.c
Xdbase.build.o: ../include/config.h
Xdbase.build.o: ../include/list.h
Xdbase.build.o: ../include/tripwire.h
Xdbase.build.o: ../sigs/snefru/snefru.h
Xdbase.build.o: ../sigs/md5/md5.h
Xdbase.build.o: ../sigs/crc32/crc32.h
Xdbase.build.o: ../sigs/crc/crc.h
Xdbase.build.o: ../sigs/md2/md2.h
Xdbase.build.o: ../sigs/md4/md4.h
Xdbase.build.o: ../include/inode.h
Xdbase.update.o: dbase.update.c
Xdbase.update.o: ../include/config.h
Xdbase.update.o: ../include/list.h
Xdbase.update.o: ../include/tripwire.h
Xdbase.update.o: ../sigs/snefru/snefru.h
Xdbase.update.o: ../sigs/md5/md5.h
Xdbase.update.o: ../sigs/crc32/crc32.h
Xdbase.update.o: ../sigs/crc/crc.h
Xdbase.update.o: ../sigs/md2/md2.h
Xdbase.update.o: ../sigs/md4/md4.h
Xdbase.update.o: ../include/inode.h
Xignorevec.o: ignorevec.c
Xignorevec.o: ../include/config.h
Xignorevec.o: ../include/list.h
Xignorevec.o: ../include/tripwire.h
Xignorevec.o: ../sigs/snefru/snefru.h
Xignorevec.o: ../sigs/md5/md5.h
Xignorevec.o: ../sigs/crc32/crc32.h
Xignorevec.o: ../sigs/crc/crc.h
Xignorevec.o: ../sigs/md2/md2.h
Xignorevec.o: ../sigs/md4/md4.h
Xignorevec.o: ../include/inode.h
Xlist.o: list.c
Xlist.o: ../include/config.h
Xlist.o: ../include/list.h
Xmain.o: main.c
Xmain.o: ../include/config.h
Xmain.o: ../include/list.h
Xmain.o: ../include/tripwire.h
Xmain.o: ../sigs/snefru/snefru.h
Xmain.o: ../sigs/md5/md5.h
Xmain.o: ../sigs/crc32/crc32.h
Xmain.o: ../sigs/crc/crc.h
Xmain.o: ../sigs/md2/md2.h
Xmain.o: ../sigs/md4/md4.h
Xmain.o: ../include/inode.h
Xmain.o: ../include/patchlevel.h
Xnullsig.o: nullsig.c
Xnullsig.o: ../include/config.h
Xnullsig.o: ../include/tripwire.h
Xnullsig.o: ../sigs/snefru/snefru.h
Xnullsig.o: ../sigs/md5/md5.h
Xnullsig.o: ../sigs/crc32/crc32.h
Xnullsig.o: ../sigs/crc/crc.h
Xnullsig.o: ../sigs/md2/md2.h
Xnullsig.o: ../sigs/md4/md4.h
Xnullsig.o: ../include/inode.h
Xnullsig.o: ../include/sigs.h
Xpreen.o: preen.c
Xpreen.o: ../include/config.h
Xpreen.o: ../include/list.h
Xpreen.o: ../include/tripwire.h
Xpreen.o: ../sigs/snefru/snefru.h
Xpreen.o: ../sigs/md5/md5.h
Xpreen.o: ../sigs/crc32/crc32.h
Xpreen.o: ../sigs/crc/crc.h
Xpreen.o: ../sigs/md2/md2.h
Xpreen.o: ../sigs/md4/md4.h
Xpreen.o: ../include/inode.h
Xpreen.interp.o: preen.interp.c
Xpreen.interp.o: ../include/config.h
Xpreen.interp.o: ../include/list.h
Xpreen.interp.o: ../include/tripwire.h
Xpreen.interp.o: ../sigs/snefru/snefru.h
Xpreen.interp.o: ../sigs/md5/md5.h
Xpreen.interp.o: ../sigs/crc32/crc32.h
Xpreen.interp.o: ../sigs/crc/crc.h
Xpreen.interp.o: ../sigs/md2/md2.h
Xpreen.interp.o: ../sigs/md4/md4.h
Xpreen.interp.o: ../include/inode.h
Xpreen.report.o: preen.report.c
Xpreen.report.o: ../include/config.h
Xpreen.report.o: ../include/list.h
Xpreen.report.o: ../include/tripwire.h
Xpreen.report.o: ../sigs/snefru/snefru.h
Xpreen.report.o: ../sigs/md5/md5.h
Xpreen.report.o: ../sigs/crc32/crc32.h
Xpreen.report.o: ../sigs/crc/crc.h
Xpreen.report.o: ../sigs/md2/md2.h
Xpreen.report.o: ../sigs/md4/md4.h
Xpreen.report.o: ../include/inode.h
Xsiggen.o: siggen.c
Xsiggen.o: ../include/config.h
Xsiggen.o: ../include/list.h
Xsiggen.o: ../include/tripwire.h
Xsiggen.o: ../sigs/snefru/snefru.h
Xsiggen.o: ../sigs/md5/md5.h
Xsiggen.o: ../sigs/crc32/crc32.h
Xsiggen.o: ../sigs/crc/crc.h
Xsiggen.o: ../sigs/md2/md2.h
Xsiggen.o: ../sigs/md4/md4.h
Xsiggen.o: ../include/inode.h
Xutils.o: utils.c
Xutils.o: ../include/config.h
Xutils.o: ../include/list.h
Xutils.o: ../include/tripwire.h
Xutils.o: ../sigs/snefru/snefru.h
Xutils.o: ../sigs/md5/md5.h
Xutils.o: ../sigs/crc32/crc32.h
Xutils.o: ../sigs/crc/crc.h
Xutils.o: ../sigs/md2/md2.h
Xutils.o: ../sigs/md4/md4.h
Xutils.o: ../include/inode.h
END_OF_FILE
if test 8171 -ne `wc -c <'tripwire-1.1/src/Makefile'`; then
    echo shar: \"'tripwire-1.1/src/Makefile'\" unpacked with wrong size!
fi
# end of 'tripwire-1.1/src/Makefile'
fi
if test -f 'tripwire-1.1/tests/test.inter.sh' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'tripwire-1.1/tests/test.inter.sh'\"
else
echo shar: Extracting \"'tripwire-1.1/tests/test.inter.sh'\" \(7994 characters\)
sed "s/^X//" >'tripwire-1.1/tests/test.inter.sh' <<'END_OF_FILE'
X#!/bin/sh
X
X# $Id: test.inter.sh,v 1.9 1993/12/13 16:38:35 genek Exp $
X#
X#	Rigorous Tripwire functionality test suite
X#
X# Gene Kim
X# Purdue University
X#
X
XME=$0
XTMPDIR=/tmp/twtest
XTWCONFIG=$TMPDIR/tw.config
XTWDB=$TMPDIR/tw.db
XTRIPWIRE="../src/tripwire -loosedir -c $TWCONFIG -d $TWDB -i all "
XUPDATEFLAG="interactive -interactivetest_yesimsure"
XNEWFILE="$TMPDIR/d1/@@NEWFILE"
XOLDFILE="$TMPDIR/@@OLDFILE"
XGROWFILE="$TMPDIR/grow"
XSTATFILE="/tmp/twstat";
X
XSAVETWDB=/tmp/twXXX
XLOGFILE=/tmp/TWLOG
X
XSTATUSADD=2			# exit status of Tripwire
XSTATUSDEL=4
XSTATUSCHA=8
X
XMYRUN=/tmp/twrun.sh
XMYCHECK=/tmp/twcheck.sh
XMYCREATE=/tmp/twcreate.sh
XMYINIT=/tmp/twinit.sh
XMYCREATETWCONF=/tmp/twctwconf.sh
X
Xcat << GHK
X=== $ME: DESCRIPTION
X
X    This shell script exercises all the interactive update of Tripwire
Xdatabases.
X
XGHK
X
Xecho "=== $ME: Setting up auxiliary scripts ==="
X
X# build run()
Xcat << 'EOF' > $MYRUN
X    sleep 1		# agh!  Bug in SunOS tmpfs!!!
X    echo running Tripwire
X    echo $*
X    $*
X    laststatus=$?
X    echo $laststatus > $STATFILE
XEOF
X
X# build checkstat()
Xcat << 'EOF' > $MYCHECK
X    DESIRED=$1
X    laststatus=`cat $STATFILE`
X    if [ $laststatus -ne $DESIRED ]
X    then
X	echo "=== $ME: test FAILED! (expecting $DESIRED, got $laststatus) ==="
X	echo "=== ($LOGFILE contains output from test script and Tripwire) ==="
X	exit 1
X    fi
XEOF
X
X####
X
XTMPFILES="f1 f2 f3 f4 f5"
XTMPDIRS="d1 d2"
X
X
Xcat << 'EOF' > $MYCREATE
X    #echo "=== $ME:    creating test environment ==="
X
X	rm -rf $TMPDIR
X	mkdir $TMPDIR
X	for f in $TMPFILES; do
X	    touch $TMPDIR/$f
X	done
X	for d in $TMPDIRS; do
X	    mkdir $TMPDIR/$d
X	    for f in $TMPFILES; do
X		touch $TMPDIR/$d/$f
X	    done
X	done
X	touch $OLDFILE
X	touch $GROWFILE
XEOF
X
Xcat << 'EOF' > $MYINIT
X    #echo "=== $ME:    initializing the database ==="
X
X	touch $TWCONFIG $TWDB $OLDFILE
X	rm -f databases/*
X	set _ $TRIPWIRE -initialize -q; shift
X	( . $MYRUN ; ) > $LOGFILE 
X	set _ 0; shift
X	. $MYCHECK
X
X	# move database
X	rm -f databases/*.old
X	cp databases/tw.db* $TWDB
X
X	# save a copy
X	cp ./databases/* $SAVETWDB
XEOF
X
Xcat << 'EOF' > $MYCREATETWCONF
X    #echo "=== $ME:    creating tw.config file ==="
X
X	cat << GHK > $TWCONFIG
X#
X$TMPDIR		R
X$TMPDIR/d1	R
X$TMPDIR/d2	R
X$TWCONFIG
X$TMPDIR/grow	L>
X$TWDB	E
X#
XGHK
X
XEOF
X
X# create the tw.config file
X# initialize the database
X# test update functionality
X#	case i.		updated entry
X#	case ii.	updated file
X#	case iii.	deleted file
X#	case iv.	added file
X#
X
Xecho === $ME: BEGIN ===
X	echo $TRIPWIRE
X
X    . $MYCREATE
X    . $MYCREATETWCONF
X    . $MYINIT
X
Xecho "=== $ME: testing interactive update ==="
X    set _ $TRIPWIRE -q ; shift
X    ( . $MYRUN ; ) > $LOGFILE ;
X    set _ 0; shift;
X    . $MYCHECK
X
X    touch $TMPDIR/d1/f1
X    set _ $TRIPWIRE -q ; shift
X    ( . $MYRUN ; ) >> $LOGFILE ;
X    set _ $STATUSCHA; shift;
X    . $MYCHECK
X
X    set _ $TRIPWIRE -q -$UPDATEFLAG; shift
X    ( . $MYRUN ; ) >> $LOGFILE ;
X    set _ 0; shift;
X    . $MYCHECK
X
X    # move database
X    rm -f databases/*.old
X    cp databases/tw.db* $TWDB
X
X    set _ $TRIPWIRE -q ; shift
X    ( . $MYRUN ; ) >> $LOGFILE ;
X    set _ 0; shift;
X    . $MYCHECK
X
Xecho "=== $ME: testing complex UPDATE cases"
X    . $MYCREATE
X    . $MYCREATETWCONF
X    . $MYINIT
X
Xecho "=== $ME:  changed ignore-mask (UPDATE file)"
X    touch $TMPDIR/d1/f1
X    set _ $TRIPWIRE -q ; shift
X    ( . $MYRUN ; ) > $LOGFILE; 
X    set _ $STATUSCHA; shift
X    . $MYCHECK 
X
X    # change the ignore mask
X    sed "s,$TMPDIR/d1	R,$TMPDIR/d1	L," < $TWCONFIG > /tmp/twx
X    mv /tmp/twx $TWCONFIG
X    set _ $TRIPWIRE -d $TWDB -q -$UPDATEFLAG ; shift
X    ( . $MYRUN ; ) >> $LOGFILE; 
X    set _ 0; shift
X    . $MYCHECK 
X
X    # check to that ignore-masks are different
X    grep "$TMPDIR/d1/f1" ./databases/* | awk '{ print $3; }' > /tmp/tw1
X    grep "$TMPDIR/d1/f1" $TWDB | awk '{ print $3; }' > /tmp/tw2
X    echo "diffing" >> $LOGFILE
X    diff /tmp/tw1 /tmp/tw2 >> $LOGFILE
X    if [ $? -ne 1 ]; then
X	echo "=== $ME: test diff FAILED! (expecting 1, got $?) ==="
X	echo "=== ($LOGFILE contains output from test script and Tripwire) ==="
X	exit 1
X    fi
X
Xecho "=== $ME:  changed ignore-mask (UPDATE entry)"
X    touch $TMPDIR/d1/f1
X    set _ $TRIPWIRE -q ; shift
X    ( . $MYRUN ; ) > $LOGFILE; 
X    set _ $STATUSCHA; shift
X    . $MYCHECK 
X
X    # change the ignore mask
X    sed "s,$TMPDIR/d1	R,$TMPDIR/d1	L," < $TWCONFIG > /tmp/twx
X    mv /tmp/twx $TWCONFIG
X    set _ $TRIPWIRE -d $TWDB -q -$UPDATEFLAG; shift
X    ( . $MYRUN ; ) >> $LOGFILE; 
X    set _ 0; shift
X    . $MYCHECK 
X
X    # check to that ignore-masks are different
X    grep "$TMPDIR/d1/f1" ./databases/* | awk '{ print $3; }' > /tmp/tw1
X    grep "$TMPDIR/d1/f1" $TWDB | awk '{ print $3; }' > /tmp/tw2
X    echo "diffing" >> $LOGFILE
X    diff /tmp/tw1 /tmp/tw2 >> $LOGFILE
X    if [ $? -ne 1 ]; then
X	echo "=== $ME: test diff FAILED! (expecting 1, got $?) ==="
X	echo "=== ($LOGFILE contains output from test script and Tripwire) ==="
X	exit 1
X    fi
X
Xecho "=== $ME: testing UPDATED files (6 cases)"
X    . $MYCREATE
X    . $MYCREATETWCONF
X    . $MYINIT
X
Xecho "=== $ME:  case 1: update: add new file ==="
X    cp $SAVETWDB ./databases
X    touch $NEWFILE
X    set _ $TRIPWIRE -q ; shift
X    ( . $MYRUN ; ) > $LOGFILE; 
X    set _ $STATUSADD; shift
X    . $MYCHECK 
X    set _ $TRIPWIRE -d $TWDB -q -$UPDATEFLAG; shift
X    ( . $MYRUN ; ) >> $LOGFILE; 
X    set _ 0; shift
X    . $MYCHECK 
X
X    # move database
X    rm -f databases/*.old
X    cp databases/tw.db* $TWDB
X
X    set _ $TRIPWIRE -q; shift
X    ( . $MYRUN ; ) >> $LOGFILE; 
X    set _ 0; shift
X    . $MYCHECK 
X
Xecho "=== $ME:  case 2: update: delete file ==="
X    rm -f $OLDFILE
X    set _ $TRIPWIRE -q; shift
X    ( . $MYRUN ; ) > $LOGFILE; 
X    set _ $STATUSDEL; shift
X    . $MYCHECK 
X    set _ $TRIPWIRE -d $TWDB -q -$UPDATEFLAG; shift
X    ( . $MYRUN ; ) >> $LOGFILE; 
X    set _ 0; shift
X    . $MYCHECK 
X    
X    # move database
X    rm -f databases/*.old
X    cp databases/tw.db* $TWDB
X
X    set _ $TRIPWIRE -q; shift
X    ( . $MYRUN ; ) >> $LOGFILE; 
X    set _ 0; shift
X    . $MYCHECK 
X
XCFILE=$TMPDIR/d1/f1
XCDIR=$TMPDIR/d1
X
Xecho "=== $ME:  case 3: update: update file ==="
X    touch $CFILE
X    set _ $TRIPWIRE -q; shift
X    ( . $MYRUN ; ) > $LOGFILE; 
X    set _ $STATUSCHA; shift
X    . $MYCHECK 
X    set _ $TRIPWIRE -d $TWDB -q -$UPDATEFLAG; shift
X    ( . $MYRUN ; ) >> $LOGFILE; 
X    set _ 0; shift
X    . $MYCHECK 
X
X    # move database
X    rm -f databases/*.old
X    cp databases/tw.db* $TWDB
X
X    set _ $TRIPWIRE -q; shift
X    ( . $MYRUN ; ) >> $LOGFILE; 
X    set _ 0; shift
X    . $MYCHECK 
X
Xecho "=== $ME:  case 4: nonsense case (skipping) ==="
X
Xecho "=== $ME:  case 6: update: delete entry ==="
X    rm -rf $CDIR
X    set _ $TRIPWIRE -q; shift
X    ( . $MYRUN ; ) > $LOGFILE; 
X    set _ $STATUSDEL; shift
X    . $MYCHECK 
X    set _ $TRIPWIRE -d $TWDB -q -$UPDATEFLAG; shift
X    ( . $MYRUN ; ) >> $LOGFILE; 
X    set _ 0; shift
X    . $MYCHECK 
X
X    # move database
X    rm -f databases/*.old
X    cp databases/tw.db* $TWDB
X
X    set _ $TRIPWIRE -q; shift
X    ( . $MYRUN ; ) >> $LOGFILE; 
X    set _ 0; shift
X    . $MYCHECK 
X
Xecho "=== $ME:  case 5: update: add entry ==="
X    mkdir $CDIR
X    set _ $TRIPWIRE -q ; shift
X    ( . $MYRUN ; ) > $LOGFILE; 
X    set _ $STATUSADD; shift
X    . $MYCHECK 
X    set _ $TRIPWIRE -d $TWDB -q -$UPDATEFLAG; shift
X    ( . $MYRUN ; ) >> $LOGFILE; 
X    set _ 0; shift
X    . $MYCHECK 
X
X    # move database
X    rm -f databases/*.old
X    cp databases/tw.db* $TWDB
X
X    set _ $TRIPWIRE -q; shift
X    ( . $MYRUN ; ) >> $LOGFILE; 
X    set _ 0; shift
X    . $MYCHECK 
X
XCFILE=$TMPDIR/d2/f1
XCDIR=$TMPDIR/d2
X
Xecho "=== $ME:  case 7: update: update entry ==="
X    touch $CFILE
X    set _ $TRIPWIRE -q; shift
X    ( . $MYRUN ; ) > $LOGFILE; 
X    set _ $STATUSCHA; shift
X    . $MYCHECK 
X    set _ $TRIPWIRE -d $TWDB -q -$UPDATEFLAG; shift
X    ( . $MYRUN ; ) >> $LOGFILE; 
X    set _ 0; shift
X    . $MYCHECK 
X
X    # move database
X    rm -f databases/*.old
X    cp databases/tw.db* $TWDB
X
X    set _ $TRIPWIRE -q; shift
X    ( . $MYRUN ; ) >> $LOGFILE ; 
X    set _ 0; shift
X    . $MYCHECK 
X
Xecho "=== $ME: PASS ==="
X
X
Xecho 
Xecho
END_OF_FILE
if test 7994 -ne `wc -c <'tripwire-1.1/tests/test.inter.sh'`; then
    echo shar: \"'tripwire-1.1/tests/test.inter.sh'\" unpacked with wrong size!
fi
chmod +x 'tripwire-1.1/tests/test.inter.sh'
# end of 'tripwire-1.1/tests/test.inter.sh'
fi
if test -f 'tripwire-1.1/tests/test0.key' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'tripwire-1.1/tests/test0.key'\"
else
echo shar: Extracting \"'tripwire-1.1/tests/test0.key'\" \(6653 characters\)
sed "s/^X//" >'tripwire-1.1/tests/test0.key' <<'END_OF_FILE'
X*** ./testfiles/t_file0 ***
Xsig0: nullsig  : 0
Xsig1: md5      : d41d8cd98f00b204e9800998ecf8427e
Xsig2: snefru   : 8617f366566a011837f4fb4ba5bedea2
Xsig3: crc32    : 00000000
Xsig4: crc16    : 0000
Xsig5: md4      : 31d6cfe0d16ae931b73c59d7e0c089c0
Xsig6: md2      : 8350e5a3e24c153df2275c9f80692773
Xsig7: sha      : f96cea198ad1dd5617ac084a3d92c6107708c0ef
Xsig8: nullsig  : 0
Xsig9: nullsig  : 0
X*** ./testfiles/t_file1 ***
Xsig0: nullsig  : 0
Xsig1: md5      : 0cc175b9c0f1b6a831c399e269772661
Xsig2: snefru   : bf5ce540ae51bc50399f96746c5a15bd
Xsig3: crc32    : b73d8601
Xsig4: crc16    : e8c1
Xsig5: md4      : bde52cb31de33e46245e05fbdbd6fb24
Xsig6: md2      : 32ec01ec4a6dac72c0ab96fb34c0b5d1
Xsig7: sha      : 37f297772fae4cb1ba39b6cf9cf0381180bd62f2
Xsig8: nullsig  : 0
Xsig9: nullsig  : 0
X*** ./testfiles/t_file10 ***
Xsig0: nullsig  : 0
Xsig1: md5      : ba1f2511fc30423bdbb183fe33f3dd0f
Xsig2: snefru   : bc3a50af82bf56d6a64732bc7b050a93
Xsig3: crc32    : 75152d3d
Xsig4: crc16    : c43b
Xsig5: md4      : 19e6b41091f5eddd2abbe43139481746
Xsig6: md2      : 9efb894dacb19a345e3519bff3fadd65
Xsig7: sha      : e350025c58a6819d8219cd023fc3e7a66e420234
Xsig8: nullsig  : 0
Xsig9: nullsig  : 0
X*** ./testfiles/t_file11 ***
Xsig0: nullsig  : 0
Xsig1: md5      : e7df7cd2ca07f4f1ab415d457a6e1c13
Xsig2: snefru   : c5b8a04985a8eadfb4331a8988752b77
Xsig3: crc32    : b68e0ba9
Xsig4: crc16    : b415
Xsig5: md4      : 37d4546740294870f3ff7dc3ae7f0297
Xsig6: md2      : ffc70b71eb524609e8e58ae761be4e7b
Xsig7: sha      : af65191206b74aa6830109cf18de2c6392ebe45d
Xsig8: nullsig  : 0
Xsig9: nullsig  : 0
X*** ./testfiles/t_file12 ***
Xsig0: nullsig  : 0
Xsig1: md5      : d577273ff885c3f84dadb8578bb41399
Xsig2: snefru   : d559a2b62f6f44111324f85208723707
Xsig3: crc32    : a3e3626b
Xsig4: crc16    : 38e4
Xsig5: md4      : b1a45cdad19cb02482323fac9cea9b9f
Xsig6: md2      : 3c84d0028288e38d32199b73c9ee91d3
Xsig7: sha      : 140a630c26cf734aafc4f4e9e98cce6946046d81
Xsig8: nullsig  : 0
Xsig9: nullsig  : 0
X*** ./testfiles/t_file13 ***
Xsig0: nullsig  : 0
Xsig1: md5      : f447b20a7fcbf53a5d5be013ea0b15af
Xsig2: snefru   : 6cfb5e8f1da02bd167b01e4816686c30
Xsig3: crc32    : e11da79d
Xsig4: crc16    : 4ca9
Xsig5: md4      : f1eaa22abcec04a5d3524f00b140d0c2
Xsig6: md2      : 9e899601601eb0af4d9e9fdf8771c187
Xsig7: sha      : 0f5ef460b71723d1421f93beee2ecfb1c1174beb
Xsig8: nullsig  : 0
Xsig9: nullsig  : 0
X*** ./testfiles/t_file14 ***
Xsig0: nullsig  : 0
Xsig1: md5      : 1b504d3328e16fdf281d1fb9516dd90b
Xsig2: snefru   : 29aa48325f275a8a7a01ba1543c54ba5
Xsig3: crc32    : c952ca62
Xsig4: crc16    : e91c
Xsig5: md4      : 064984f462b38631d31624c411decfba
Xsig6: md2      : eb95dea75b5c1c004ebd79751079a915
Xsig7: sha      : f4c3499828d92337fd5f8ac696837cd05609f0b8
Xsig8: nullsig  : 0
Xsig9: nullsig  : 0
X*** ./testfiles/t_file15 ***
Xsig0: nullsig  : 0
Xsig1: md5      : b2cfa4183267af678ea06c747d4d6d8
Xsig2: snefru   : 6103721ccd8ad565d68e90b0f8906163
Xsig3: crc32    : a37c1a24
Xsig4: crc16    : d6fa
Xsig5: md4      : 75afae0262592e6fd97990cda5a9be9a
Xsig6: md2      : 33b61247dc9e2d0931633fdc3b181a88
Xsig7: sha      : 85d4a3fca58e99c9740eb20e486952b8a64af6ca
Xsig8: nullsig  : 0
Xsig9: nullsig  : 0
X*** ./testfiles/t_file16 ***
Xsig0: nullsig  : 0
Xsig1: md5      : d50b9edee452966e27baf56d33d83a55
Xsig2: snefru   : 56ab6bb21a7a07892d62cb03c41dde6d
Xsig3: crc32    : 3c343c12
Xsig4: crc16    : 274b
Xsig5: md4      : d543ef4c579e69601b07088ab7f2e17c
Xsig6: md2      : 104cfc93647951d800bc0f7fc2f8efaa
Xsig7: sha      : ec63edae4876f1b43426d542ff7f19ab31002b10
Xsig8: nullsig  : 0
Xsig9: nullsig  : 0
X*** ./testfiles/t_file2 ***
Xsig0: nullsig  : 0
Xsig1: md5      : 900150983cd24fb0d6963f7d28e17f72
Xsig2: snefru   : 553d0648928299a0f22a275a02c83b10
Xsig3: crc32    : b755875d
Xsig4: crc16    : 9738
Xsig5: md4      : a448017aaf21d8525fc10ae87aa6729d
Xsig6: md2      : da853b0d3f88d99b30283a69e6ded6bb
Xsig7: sha      : 0164b8a914cd2a5e74c4f7ff082c4d97f1edf880
Xsig8: nullsig  : 0
Xsig9: nullsig  : 0
X*** ./testfiles/t_file3 ***
Xsig0: nullsig  : 0
Xsig1: md5      : f96b697d7cb7938d525a2f31aaf161d0
Xsig2: snefru   : 96d6f2f4112c4baf29f653f1594e2d5d
Xsig3: crc32    : 26cb4c69
Xsig4: crc16    : 3b44
Xsig5: md4      : d9130a8164549fe818874806e1c7014b
Xsig6: md2      : ab4f496bfb2a530b219ff33031fe06b0
Xsig7: sha      : c1b0f222d150ebb9aa36a40cafdc8bcbed830b14
Xsig8: nullsig  : 0
Xsig9: nullsig  : 0
X*** ./testfiles/t_file4 ***
Xsig0: nullsig  : 0
Xsig1: md5      : c3fcd3d76192e4007dfb496cca67e13b
Xsig2: snefru   : 7840148a66b91c219c36f127a0929606
Xsig3: crc32    : 5e46c857
Xsig4: crc16    : 9c1d
Xsig5: md4      : d79e1c308aa5bbcdeea8ed63df412da9
Xsig6: md2      : 4e8ddff3650292ab5a4108c3aa47940b
Xsig7: sha      : b40ce07a430cfd3c033039b9fe9afec95dc1bdcd
Xsig8: nullsig  : 0
Xsig9: nullsig  : 0
X*** ./testfiles/t_file5 ***
Xsig0: nullsig  : 0
Xsig1: md5      : d174ab98d277d9f5a5611c2c9f419d9f
Xsig2: snefru   : 0efd7f93a549f023b79781090458923e
Xsig3: crc32    : fb1e06c8
Xsig4: crc16    : 57b4
Xsig5: md4      : 043f8582f241db351ce627e153e7f0e4
Xsig6: md2      : da33def2a42df13975352846c30338cd
Xsig7: sha      : 79e966f7a3a990df33e40e3d7f8f18d2caebadfa
Xsig8: nullsig  : 0
Xsig9: nullsig  : 0
X*** ./testfiles/t_file6 ***
Xsig0: nullsig  : 0
Xsig1: md5      : 57edf4a22be3c955ac49da2e2107b67a
Xsig2: snefru   : d9204ed80bb8430c0b9c244fe485814a
Xsig3: crc32    : 8c5f4c57
Xsig4: crc16    : 5ec7
Xsig5: md4      : e33b4ddc9c38f2199c3e7b164fcc0536
Xsig6: md2      : d5976f79d83d3a0dc9806c3c66f3efd8
Xsig7: sha      : 4aa29d14d171522ece47bee8957e35a41f3e9cff
Xsig8: nullsig  : 0
Xsig9: nullsig  : 0
X*** ./testfiles/t_file7 ***
Xsig0: nullsig  : 0
Xsig1: md5      : 8215ef0796a20bcaaae116d3876c664a
Xsig2: snefru   : 96a885f1323c8a94c0413d06a8995eb2
Xsig3: crc32    : 682cd37b
Xsig4: crc16    : 7d26
Xsig5: md4      : 4691a9ec81b1a6bd1ab8557240b245c5
Xsig6: md2      : 0dff6b398ad5a62ac8d97566b80c3a7f
Xsig7: sha      : d2516ee1acfa5baf33dfc1c471e438449ef134c8
Xsig8: nullsig  : 0
Xsig9: nullsig  : 0
X*** ./testfiles/t_file8 ***
Xsig0: nullsig  : 0
Xsig1: md5      : b026324c6904b2a9cb4b88d6d61c81d1
Xsig2: snefru   : 44ec420ce99c1f62feb66c53c24ae453
Xsig3: crc32    : 047f1224
Xsig4: crc16    : 9795
Xsig5: md4      : 4d1dee0399f1614e6caf11111d3ce0ad
Xsig6: md2      : 7126e6e44d6bde5b0c04e9a7c14672ea
Xsig7: sha      : 92847a9f8c36a92affc65e9bfb4eb4f851b50dad
Xsig8: nullsig  : 0
Xsig9: nullsig  : 0
X*** ./testfiles/t_file9 ***
Xsig0: nullsig  : 0
Xsig1: md5      : 2737b49252e2a4c0fe4c342e92b13285
Xsig2: snefru   : 7182051aa852ef6fba4b6c9c9b79b317
Xsig3: crc32    : c3470bff
Xsig4: crc16    : a8c4
Xsig5: md4      : ced1586eb330e55808617232685828ac
Xsig6: md2      : d2c224507e8667ab345f4c734de5a444
Xsig7: sha      : e7bcce6cd2924f668505f51137c74f9ae8432226
Xsig8: nullsig  : 0
Xsig9: nullsig  : 0
END_OF_FILE
if test 6653 -ne `wc -c <'tripwire-1.1/tests/test0.key'`; then
    echo shar: \"'tripwire-1.1/tests/test0.key'\" unpacked with wrong size!
fi
# end of 'tripwire-1.1/tests/test0.key'
fi
if test -f 'tripwire-1.1/sigs/crc/crc.c' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'tripwire-1.1/sigs/crc/crc.c'\"
else
echo shar: Extracting \"'tripwire-1.1/sigs/crc/crc.c'\" \(6618 characters\)
sed "s/^X//" >'tripwire-1.1/sigs/crc/crc.c' <<'END_OF_FILE'
X#ifndef lint
Xstatic char rcsid[] = "$Id: crc.c,v 1.4 1993/12/15 16:50:07 genek Exp $";
X#endif
X
X/*
X * crc.c
X *
X *	signature function hook for CRC-16.
X *
X * Gene Kim
X * Purdue University
X * October 14, 1992
X */
X
X  /* ============================================================= */
X  /*  COPYRIGHT (C) 1986 Gary S. Brown.  You may use this program, or       */
X  /*  code or tables extracted from it, as desired without restriction.     */
X  /*                                                                        */
X  /*  First, the polynomial itself and its table of feedback terms.  The    */
X  /*  polynomial is                                                         */
X  /*  X^32+X^26+X^23+X^22+X^16+X^12+X^11+X^10+X^8+X^7+X^5+X^4+X^2+X^1+X^0   */
X  /*                                                                        */
X  /*  Note that we take it "backwards" and put the highest-order term in    */
X  /*  the lowest-order bit.  The X^32 term is "implied"; the LSB is the     */
X  /*  X^31 term, etc.  The X^0 term (usually shown as "+1") results in      */
X  /*  the MSB being 1.                                                      */
X  /*                                                                        */
X  /*  Note that the usual hardware shift register implementation, which     */
X  /*  is what we're using (we're merely optimizing it by doing eight-bit    */
X  /*  chunks at a time) shifts bits into the lowest-order term.  In our     */
X  /*  implementation, that means shifting towards the right.  Why do we     */
X  /*  do it this way?  Because the calculated CRC must be transmitted in    */
X  /*  order from highest-order term to lowest-order term.  UARTs transmit   */
X  /*  characters in order from LSB to MSB.  By storing the CRC this way,    */
X  /*  we hand it to the UART in the order low-byte to high-byte; the UART   */
X  /*  sends each low-bit to hight-bit; and the result is transmission bit   */
X  /*  by bit from highest- to lowest-order term without requiring any bit   */
X  /*  shuffling on our part.  Reception works similarly.                    */
X  /*                                                                        */
X  /*  The feedback terms table consists of 256, 32-bit entries.  Notes:     */
X  /*                                                                        */
X  /*      The table can be generated at runtime if desired; code to do so   */
X  /*      is shown later.  It might not be obvious, but the feedback        */
X  /*      terms simply represent the results of eight shift/xor opera-      */
X  /*      tions for all combinations of data and CRC register values.       */
X  /*                                                                        */
X  /*      The values must be right-shifted by eight bits by the "updcrc"    */
X  /*      logic; the shift must be unsigned (bring in zeroes).  On some     */
X  /*      hardware you could probably optimize the shift in assembler by    */
X  /*      using byte-swap instructions.                                     */
X  /*      polynomial $edb88320                                              */
X  /*                                                                        */
X  /*  --------------------------------------------------------------------  */
X
X#include "../../include/config.h"
X#include <stdio.h>
X#include <sys/types.h>
X#ifdef STDLIBH
X#include <stdlib.h>
X#include <unistd.h>
X#endif
X#include "../../include/sigs.h"
X#define BUFSIZE 4096
X
Xstatic unsigned int crc16;
X
Xstatic unsigned int crc16tab[256] =
X{
X
X
X 0x0000, 0xC0C1, 0xC181, 0x0140, 0xC301, 0x03C0, 0x0280, 0xC241,
X 0xC601, 0x06C0, 0x0780, 0xC741, 0x0500, 0xC5C1, 0xC481, 0x0440,
X 0xCC01, 0x0CC0, 0x0D80, 0xCD41, 0x0F00, 0xCFC1, 0xCE81, 0x0E40,
X 0x0A00, 0xCAC1, 0xCB81, 0x0B40, 0xC901, 0x09C0, 0x0880, 0xC841,
X 0xD801, 0x18C0, 0x1980, 0xD941, 0x1B00, 0xDBC1, 0xDA81, 0x1A40,
X 0x1E00, 0xDEC1, 0xDF81, 0x1F40, 0xDD01, 0x1DC0, 0x1C80, 0xDC41,
X 0x1400, 0xD4C1, 0xD581, 0x1540, 0xD701, 0x17C0, 0x1680, 0xD641,
X 0xD201, 0x12C0, 0x1380, 0xD341, 0x1100, 0xD1C1, 0xD081, 0x1040,
X 0xF001, 0x30C0, 0x3180, 0xF141, 0x3300, 0xF3C1, 0xF281, 0x3240,
X 0x3600, 0xF6C1, 0xF781, 0x3740, 0xF501, 0x35C0, 0x3480, 0xF441,
X 0x3C00, 0xFCC1, 0xFD81, 0x3D40, 0xFF01, 0x3FC0, 0x3E80, 0xFE41,
X 0xFA01, 0x3AC0, 0x3B80, 0xFB41, 0x3900, 0xF9C1, 0xF881, 0x3840,
X 0x2800, 0xE8C1, 0xE981, 0x2940, 0xEB01, 0x2BC0, 0x2A80, 0xEA41,
X 0xEE01, 0x2EC0, 0x2F80, 0xEF41, 0x2D00, 0xEDC1, 0xEC81, 0x2C40,
X 0xE401, 0x24C0, 0x2580, 0xE541, 0x2700, 0xE7C1, 0xE681, 0x2640,
X 0x2200, 0xE2C1, 0xE381, 0x2340, 0xE101, 0x21C0, 0x2080, 0xE041,
X 0xA001, 0x60C0, 0x6180, 0xA141, 0x6300, 0xA3C1, 0xA281, 0x6240,
X 0x6600, 0xA6C1, 0xA781, 0x6740, 0xA501, 0x65C0, 0x6480, 0xA441,
X 0x6C00, 0xACC1, 0xAD81, 0x6D40, 0xAF01, 0x6FC0, 0x6E80, 0xAE41,
X 0xAA01, 0x6AC0, 0x6B80, 0xAB41, 0x6900, 0xA9C1, 0xA881, 0x6840,
X 0x7800, 0xB8C1, 0xB981, 0x7940, 0xBB01, 0x7BC0, 0x7A80, 0xBA41,
X 0xBE01, 0x7EC0, 0x7F80, 0xBF41, 0x7D00, 0xBDC1, 0xBC81, 0x7C40,
X 0xB401, 0x74C0, 0x7580, 0xB541, 0x7700, 0xB7C1, 0xB681, 0x7640,
X 0x7200, 0xB2C1, 0xB381, 0x7340, 0xB101, 0x71C0, 0x7080, 0xB041,
X 0x5000, 0x90C1, 0x9181, 0x5140, 0x9301, 0x53C0, 0x5280, 0x9241,
X 0x9601, 0x56C0, 0x5780, 0x9741, 0x5500, 0x95C1, 0x9481, 0x5440,
X 0x9C01, 0x5CC0, 0x5D80, 0x9D41, 0x5F00, 0x9FC1, 0x9E81, 0x5E40,
X 0x5A00, 0x9AC1, 0x9B81, 0x5B40, 0x9901, 0x59C0, 0x5880, 0x9841,
X 0x8801, 0x48C0, 0x4980, 0x8941, 0x4B00, 0x8BC1, 0x8A81, 0x4A40,
X 0x4E00, 0x8EC1, 0x8F81, 0x4F40, 0x8D01, 0x4DC0, 0x4C80, 0x8C41,
X 0x4400, 0x84C1, 0x8581, 0x4540, 0x8701, 0x47C0, 0x4680, 0x8641,
X 0x8201, 0x42C0, 0x4380, 0x8341, 0x4100, 0x81C1, 0x8081, 0x4040
X};
X
Xstatic void
XUpdateCRC16(buffer, bufsize) 
X    unsigned char *buffer;
X    int bufsize;
X{
X    register unsigned int i, tmp;
X
X    for (i = 0; i < bufsize; i++) {
X	tmp = crc16 ^ buffer[i];
X	crc16 = (crc16 >> 8) ^ crc16tab[tmp & 0xff];
X	/*
X	crc16 = (crc16 >> 8) ^ crc16tab[((crc16 ^ buffer[i]) & 0xff)];
X	*/
X    }
X}
X
Xsig_crc_get(fd_in, ps_signature, siglen)
X    int fd_in;
X    char *ps_signature;
X    int siglen;
X{
X    unsigned char buffer[BUFSIZE];
X    int		readin = -1;
X    int scratch[100];
X
X    if (lseek(fd_in, 0, SEEK_SET) < 0) {
X	perror("sig_crc_get: lseek()");
X	exit(1);
X    }
X
X
X    crc16 = 0;
X    while ((readin = read(fd_in, (char *)buffer, (off_t) BUFSIZE)) == BUFSIZE) {
X	UpdateCRC16(buffer, BUFSIZE);
X    }
X    if (readin != 0) {
X	UpdateCRC16(buffer, readin);
X    }
X    if (printhex)
X	sprintf(ps_signature, "%04lx", (crc16 &0xFFFF));
X    else {
X	unsigned long l = (unsigned long)(crc16 & 0xFFFF);
X	sprintf(ps_signature, "%s", pltob64(&l, (char *)scratch, 1));
X    }
X
X    return 0;
X}
X
END_OF_FILE
if test 6618 -ne `wc -c <'tripwire-1.1/sigs/crc/crc.c'`; then
    echo shar: \"'tripwire-1.1/sigs/crc/crc.c'\" unpacked with wrong size!
fi
# end of 'tripwire-1.1/sigs/crc/crc.c'
fi
if test -f 'tripwire-1.1/configs/Makefile.xenix' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'tripwire-1.1/configs/Makefile.xenix'\"
else
echo shar: Extracting \"'tripwire-1.1/configs/Makefile.xenix'\" \(5276 characters\)
sed "s/^X//" >'tripwire-1.1/configs/Makefile.xenix' <<'END_OF_FILE'
X# $Id: Makefile.xenix,v 1.2 1993/08/19 05:26:47 genek Exp $
X#
X# 	Tripwire build
X#
X# Gene Kim
X# Purdue University
X#
X
X# XENIX Makefile
X
X# support for parallel compiles (ala Dynix)
X# comment the following line out if your Make doesn't support this syntax.
X#P      = &
X
X# you can use ANSI C if you like, but K&R is equally fine.
XCC     = cc
XCFLAGS = -O
X
X#CC     = gcc
X#CFLAGS = -O -ansi
X
X# make sure libraries are not linked dynamically (as a security measure)
X#LDFLAGS= -Bstatic
XLDFLAGS= -s -lx
X
X# NOTICE/TNL   -lx required for dir type functions in LDFLAGS
X
X# If you don't have the install command, you need to replace
X# the use of it later in the makefile with a cp and chmod
XINSTALL= /etc/install
X
X# where you want to install the Tripwire binary
XTARGET = /usr/tmp/ch.Z.1123
X# NOTICE/TNL   above is a sneaky dir stored UNDER mounted /usr/tmp filesystem
X# to be exposed only during tripwire runs. A daemon (that does other things)
X# has a chdir("/usr/tmp");  that keeps the filesystem busy to confuse bad guys.
X# tripwire will kill -17 $TRIPWIREPID   to tell the daemon to chdir away
X# from /usr/tmp so root can umount it for the tripwire run. Then another
X# SIGUSR2 to tell daemon to reoccupy /usr/tmp after the run.
X
X# how you get hostname information (BSD vs. SYSV style)
XHOSTNAME	= uname -n
X#HOSTNAME	= hostname
X
XOFILES = 	config.parse.o main.o list.o ignorevec.o databs.build.o \
X		utils.o preen.o diff.sorted.o diff.parse.o preen.interp.o \
X		preen.report.o nullsig.o \
X		$(SIG1) $(SIG2)
X
XSIG1DIR   = ./md5
XSIG2DIR   = ./snefru
X
XSIG1	  = $(SIG1DIR)/md5wrapper.o $(SIG1DIR)/md5.o
XSIG2	  = $(SIG2DIR)/snefru.o
X
X# for generating shar distribution package
X
XDIST	= tripwire-0.9
XDISTPKG = Makefile README README.FIRST README.coast TODO Announce \
X	  tripwire.config *.[ch] tripwire.8 tripwire.design.ms Changelog
X
X###
X
Xall:	tripwire 
X
Xtripwire:	$(P) $(OFILES)
X	$(CC) $(CFLAGS) $(LDFLAGS) -o $@ $(OFILES)
X
X$(SIG1):
X	(cd $(SIG1DIR); make CC="$(CC)" CFLAGS="$(CFLAGS)")
X$(SIG2):
X	(cd $(SIG2DIR); make CC="$(CC)" CFLAGS="$(CFLAGS)")
X
X.c.o:
X	$(CC) $(CFLAGS) -c $<
X
Xinstall:	tripwire
X	$(INSTALL) tripwire $(TARGET)
X
Xtest:	tripwire
X	@HOST=`$(HOSTNAME)`; \
X	CURRPATH=`pwd`;	\
X	sed s,/tmp/genek/tripwire-0.9,$$CURRPATH, \
X			< ./Tests/tripwire.database_TEST \
X			> ./Databases/tripwire.database_$$HOST; \
X	cp tripwire.config tripwire.config.orig; \
X	sed s,/tmp/genek/tripwire-0.9,$$CURRPATH, \
X			< ./tripwire.config.orig \
X			> ./tripwire.config; 
X	@echo ======= test begin ======= ;
X	./tripwire; 
X	@echo ======= test end ======= ;
X	@echo ''; 
X	mv tripwire.config.orig tripwire.config; 
X	@CURRPATH=`pwd`; \
X	echo ''; \
X	echo Tripwire should have only reported: ; \
X	echo "    added:   $$CURRPATH/tripwire.config.orig" ; \
X	echo "             $$CURRPATH/Databases/... " ; \
X	echo "    changed: $$CURRPATH (your current directory) " ; \
X	echo "             ...and any other files you may have changed!"
X
X#
X# only for building distribution
X#
Xmaketest:
X	HOST=`$(HOSTNAME)`; \
X	CURRPATH=`pwd`;	\
X	./tripwire -initialize; \
X	cp ./Databases/tripwire.database_$$HOST ./Tests/tripwire.database_TEST;\
X	cp ./Tests/tripwire.database_TEST /tmp/genek/tripwire-0.9/Tests
X
X
Xtags:	force
X	ctags *.[ch]
X
Xshar:
X	-mkdir $(DIST)
X	-mkdir $(DIST)/Databases
X	-cp $(DISTPKG) $(DIST)
X	-cp -r $(SIG1DIR) $(SIG2DIR) ./$(DIST)
X	-cp -r configs Tests $(DIST)
X	-rm -fr ./$(DIST)/$(SIG1DIR)/RCS
X	-rm -fr ./$(DIST)/$(SIG1DIR)/CVS.adm
X	-rm -fr ./$(DIST)/$(SIG2DIR)/RCS
X	-rm -fr ./$(DIST)/$(SIG2DIR)/CVS.adm
X	-rm -fr ./$(DIST)/Tests/CVS.adm
X	-rm -fr $(DIST)/./configs/CVS.adm
X	-rm -f ./$(DIST)/$(SIG1DIR)/*.o
X	-rm -f ./$(DIST)/$(SIG2DIR)/*.o
X	shar -a $(DIST) > Tripwire.Dist.shar
X	-rm -rf ./$(DIST)
X
Xtar:
X	-mkdir $(DIST)
X	-mkdir $(DIST)/Databases
X	-cp $(DISTPKG) $(DIST)
X	-cp -r $(SIG1DIR) $(SIG2DIR) ./$(DIST)
X	-cp -r configs Tests $(DIST)
X	-rm -fr ./$(DIST)/$(SIG1DIR)/RCS
X	-rm -fr ./$(DIST)/$(SIG1DIR)/CVS.adm
X	-rm -fr ./$(DIST)/$(SIG2DIR)/RCS
X	-rm -fr ./$(DIST)/$(SIG2DIR)/CVS.adm
X	-rm -fr $(DIST)/./Tests/CVS.adm
X	-rm -fr $(DIST)/./configs/CVS.adm
X	-rm -f ./$(DIST)/$(SIG1DIR)/*.o
X	-rm -f ./$(DIST)/$(SIG2DIR)/*.o
X	tar cf Tripwire.Dist.tar $(DIST)
X	-rm -rf ./$(DIST)
X
Xdepend:	force
X	makedep
X	mv Makefile Makefile.old
X	mv Makefile.new Makefile
X
Xproto:	force
X	makeproto tripwire.h *.c
X
Xclean:
X	rm -f $(OFILES)
X
Xclobber:	clean
X
Xforce:
X
X# include dependencies
X
X#### Do not remove this line.  Makedep depends on it! ####
Xconfig.parse.o: ./config.h
Xconfig.parse.o: ./list.h
Xconfig.parse.o: ./tripwire.h
Xdatabs.build.o: ./config.h
Xdatabs.build.o: ./list.h
Xdatabs.build.o: ./tripwire.h
Xdiff.parse.o: ./config.h
Xdiff.parse.o: ./list.h
Xdiff.parse.o: ./tripwire.h
Xdiff.sorted.o: ./config.h
Xdiff.sorted.o: ./list.h
Xdiff.sorted.o: ./tripwire.h
Xdiff.sorted.o: ./utils.c
Xignorevec.o: ./config.h
Xignorevec.o: ./list.h
Xignorevec.o: ./tripwire.h
Xlist.o: ./config.h
Xlist.o: ./list.h
Xmain.o: ./config.h
Xmain.o: ./list.h
Xmain.o: ./tripwire.h
Xmain.o: ./snefru/snefru.h
Xmain.o: ./md5/md5.h
Xmain.o: ./nullsig.h
Xnullsig.o: ./config.h
Xpreen.o: ./config.h
Xpreen.o: ./list.h
Xpreen.o: ./tripwire.h
Xpreen.interp.o: ./config.h
Xpreen.interp.o: ./list.h
Xpreen.interp.o: ./utils.h
Xpreen.interp.o: ./tripwire.h
Xpreen.report.o: ./config.h
Xpreen.report.o: ./list.h
Xpreen.report.o: ./tripwire.h
Xutils.o: ./config.h
Xutils.o: ./list.h
Xutils.o: ./tripwire.h
END_OF_FILE
if test 5276 -ne `wc -c <'tripwire-1.1/configs/Makefile.xenix'`; then
    echo shar: \"'tripwire-1.1/configs/Makefile.xenix'\" unpacked with wrong size!
fi
# end of 'tripwire-1.1/configs/Makefile.xenix'
fi
if test -f 'tripwire-1.1/sigs/crc/Makefile' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'tripwire-1.1/sigs/crc/Makefile'\"
else
echo shar: Extracting \"'tripwire-1.1/sigs/crc/Makefile'\" \(242 characters\)
sed "s/^X//" >'tripwire-1.1/sigs/crc/Makefile' <<'END_OF_FILE'
X# $Id: Makefile,v 1.3 1993/11/22 06:38:10 genek Exp $
X#
X# Makefile for crc32 wrapper
X#
X# Gene Kim
X# Purdue University
X# October 18, 1992
X#
X
Xall:	crc.o
X
X.c.o:
X	$(CC) $(CFLAGS) -c $<
X
Xclean:
X	-rm -rf *.o .pure
X
Xcrc.o: ../../include/byteorder.h
END_OF_FILE
if test 242 -ne `wc -c <'tripwire-1.1/sigs/crc/Makefile'`; then
    echo shar: \"'tripwire-1.1/sigs/crc/Makefile'\" unpacked with wrong size!
fi
# end of 'tripwire-1.1/sigs/crc/Makefile'
fi
echo shar: End of archive 22 \(of 25\).
cp /dev/null ark22isdone
MISSING=""
for I in 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 ; do
    if test ! -f ark${I}isdone ; then
	MISSING="${MISSING} ${I}"
    fi
done
if test "${MISSING}" = "" ; then
    echo You have unpacked all 25 archives.
    echo "Now read tripwire-1.1/README.kits"
    rm -f ark[1-9]isdone ark[1-9][0-9]isdone
else
    echo You still need to unpack the following archives:
    echo "        " ${MISSING}
fi
##  End of shell archive.
exit 0
