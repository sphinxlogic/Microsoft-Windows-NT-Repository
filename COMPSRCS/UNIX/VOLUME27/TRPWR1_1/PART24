Newsgroups: comp.sources.unix
From: spaf@cs.purdue.edu (Gene Spafford)
Subject: v27i170: tripwire-1.1 - security integrity monitor, V1.1, Part24/26
References: <1.756157401.21864@gw.home.vix.com>
Sender: unix-sources-moderator@gw.home.vix.com
Approved: vixie@gw.home.vix.com

Submitted-By: spaf@cs.purdue.edu (Gene Spafford)
Posting-Number: Volume 27, Issue 170
Archive-Name: tripwire-1.1/part24

#! /bin/sh
# This is a shell archive.  Remove anything before this line, then unpack
# it by saving it into a file and typing "sh file".  To overwrite existing
# files, type "sh file -c".  You can also feed this as standard input via
# unshar, or by typing "sh <file", e.g..  If this archive is complete, you
# will see the following message at the end:
#		"End of archive 24 (of 25)."
# Contents:  tripwire-1.1 tripwire-1.1/configs tripwire-1.1/contrib
#   tripwire-1.1/src tripwire-1.1/tests tripwire-1.1/FAQ
#   tripwire-1.1/configs/tw.conf.386bsd tripwire-1.1/src/config.pre.l
#   tripwire-1.1/Makefile tripwire-1.1/contrib/README.TRIPWIRE
#   tripwire-1.1/src/preen.interp.c tripwire-1.1/src/dbase.update.c
#   tripwire-1.1/src/config.prim.c tripwire-1.1/configs/tw.conf.next
#   tripwire-1.1/contrib/md4convert.sh
#   tripwire-1.1/tests/createfiles.c tripwire-1.1/tests/test.twpre.sh
# Wrapped by spaf@uther.cs.purdue.edu on Thu Dec 16 11:42:48 1993
PATH=/bin:/usr/bin:/usr/ucb ; export PATH
if test ! -d 'tripwire-1.1' ; then
    echo shar: Creating directory \"'tripwire-1.1'\"
    mkdir 'tripwire-1.1'
fi
if test ! -d 'tripwire-1.1/configs' ; then
    echo shar: Creating directory \"'tripwire-1.1/configs'\"
    mkdir 'tripwire-1.1/configs'
fi
if test ! -d 'tripwire-1.1/contrib' ; then
    echo shar: Creating directory \"'tripwire-1.1/contrib'\"
    mkdir 'tripwire-1.1/contrib'
fi
if test ! -d 'tripwire-1.1/src' ; then
    echo shar: Creating directory \"'tripwire-1.1/src'\"
    mkdir 'tripwire-1.1/src'
fi
if test ! -d 'tripwire-1.1/tests' ; then
    echo shar: Creating directory \"'tripwire-1.1/tests'\"
    mkdir 'tripwire-1.1/tests'
fi
if test -f 'tripwire-1.1/FAQ' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'tripwire-1.1/FAQ'\"
else
echo shar: Extracting \"'tripwire-1.1/FAQ'\" \(3788 characters\)
sed "s/^X//" >'tripwire-1.1/FAQ' <<'END_OF_FILE'
X# $Id: FAQ,v 1.11 1993/12/15 23:03:35 genek Exp $
X
X#
X# FAQ for Tripwire
X#
X
X    This file answers frequently asked questions about Tripwire.
XThe first section of the file covers Tripwire concepts and design,
Xwhile the second section addresses troubleshooting.
X
XConcepts:
X=========
X
XQ:	Why doesn't Tripwire ever traverse across mounted filesystems?
X
XA:	This is a feature.  This behavior makes it possible to put a
X	directory (e.g., '/') in your tw.config file, and you won't
X	have to worry whether it will traverse all the locally-mounted
X	filesystems.
X
X
XQ:	What is the difference between pruning an entry in your 
X	tw.config file (via "!") and ignoring everything (via the "E" 
X	template)?
X
XA:	Ignoring everything in a directory still monitors for added 
X	and deleted files.  Pruning a directory will prevent Tripwire
X	from even looking in the specified directory.
X
X
XQ:	Tripwire runs very slowly.  What can I do to make it run 
X	faster?
X
XA:	You can modify your tw.config entries to skip the Snefru 
X	signatures by appending a "-2" to the ignore flags.  Or you can
X	run tell Tripwire at run-time to skip Snefru by:
X		
X			tripwire -i 2
X			
X	This computationally expensive operation may not be needed for 
X	many applications.  (See README section on security vs. 
X	performance trade-offs for further details.)
X
XTroubleshooting:
X================
X
XQ:	I build Tripwire and the test suite fails.  What do I do?
XA:	Read the README section on "Common Compilation Problems."
X
X
XQ:	Tripwire reports that my database version is out of date.  What
X	should I do?
XA:	The database format used by Tripwire v1.0 and v1.1 changed.
X	Specifially, Tripwire v1.1 uses a different base-64 alphabet.
X	Use the program twconvert to convert between the two formats.
X	(This program is located in the ./aux directory.)
X
X
XQ:	Where do I find Larry Wall's patch program?
XA:	You can get it via anonymous FTP at ftp.uu.net:/pub/patch.tar.Z.
X
X
XQ: 	When running Tripwire in Integrity Checking mode, Tripwire
X	fails when it tries to find a file with a name consisting of
X	thousands of '/'s.  What went wrong?
X
XA:	Your setting for the #define DIRENT value in your conf-<os>.h
X	file is probably set wrong.  Trying switching the setting and
X	see if the problem goes away.  (i.e., switch #define to 
X	#undef, or vice versa.)
X
X
XQ:	I have /tmp in my tw.config file, but none of the files in 
X	the directory are being read by Tripwire.  What's going on?
X
XA:	Check to see that your /tmp directory isn't a symbolic link
X	to another filesystem.  When recursing down into directories,
X	Tripwire never traverses symbolic links or enters another
X	filesystem.  
X
X
XQ:	Is there any way I can get Tripwire to print out the names of the
X	files as they are being scanned?  I want to know which files
X	Tripwire is spending all of its time crunching.
X
XA:	Try using 'tripwire -v'.  This wasn't documented in the first
X	tripwire.8 manual page.
X
X
XQ:	I try to initialize the database by typing 'tripwire -initialize'
X	but I can't find the binary.  Where is the tripwire executable?
X
XA:	./src/tripwire is where the binary is built.  'make install'
X	will install in the $(DESTDIR) of your choice, as defined
X	in the top-level Makefile.
X
X
XQ:	I have the following line in my tw.config file to do host specific
X	actions.  Why doesn't it work?
X
X		@@ifhost chapel || chekov || chewie || data || guinan 
X			....
X		@@endif
X
XA:	You must put the hostnames as returned by 'hostname' or 'uname'
X	(depending on whether you're running a BSD or SYSV derived OS).
X	So, the correct form would be:
X
X		@@ifhost chapel.enterprise.fed || chekov.enterprise.fed ...
X
X	The Tripwire preprocessor tries its best to figure out if you
X	have used misformed hostnames.
X
X
XGene & Gene
XKim  & Spafford
X
XLast updated: December 11, 1993
X(genek@mentor.cc.purdue.edu)
X(spaf@cs.purdue.edu)
X	
END_OF_FILE
if test 3788 -ne `wc -c <'tripwire-1.1/FAQ'`; then
    echo shar: \"'tripwire-1.1/FAQ'\" unpacked with wrong size!
fi
# end of 'tripwire-1.1/FAQ'
fi
if test -f 'tripwire-1.1/configs/tw.conf.386bsd' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'tripwire-1.1/configs/tw.conf.386bsd'\"
else
echo shar: Extracting \"'tripwire-1.1/configs/tw.conf.386bsd'\" \(3678 characters\)
sed "s/^X//" >'tripwire-1.1/configs/tw.conf.386bsd' <<'END_OF_FILE'
X# $Id: tw.conf.386bsd,v 1.1 1993/11/22 06:38:01 genek Exp $
X#
X# tripwire.config
X# Generic version for 386BSD
X#  Will need editing...see comments below
X#
X# This file contains a list of files and directories that System 
X# Preener will scan.  Information collected from these files will be 
X# stored in the tripwire.database file.
X#
X# Format: 			[!|=] entry [ignore-flags]
X#
X# where:	 '!' signifies the entry is to be pruned (inclusive) from
X#				the list of files to be scanned.
X#		 '=' signifies the entry is to be added, but if it is
X#				a directory, then all its contents are pruned
X#				(useful for /tmp).
X#
X# where:	entry is the absolute pathname of a file or a directory
X#
X# where ignore-flags are in the format:
X#		[template][ [+|-][pinugsam12] ... ]
X#
X# 	- :  ignore the following atributes
X#	+ :  do not ignore the following attributes
X#
X#	p :  permission and file mode bits 	a: access timestamp
X#	i :  inode number			m: modification timestamp
X#	n :  number of links (ref count)	c: inode creation timestamp
X#	u :  user id of owner			1: signature 1
X#	g :  group id of owner			2: signature 2
X#	s :  size of file
X#
X#
X# Ex:   The following entry will scan all the files in /etc, and report
X#	any changes in mode bits, inode number, reference count, uid,
X#	gid, modification and creation timestamp, and the signatures.
X#	However, it will ignore any changes in the access timestamp.
X#
X#	/etc	+pinugsm12-a
X#
X# The following templates have been pre-defined to make these long ignore
X# mask descriptions unecessary.
X#
X# Templates: 	(default)	R :  [R]ead-only (+pinugsm12-a)
X#				L :  [L]og file (+pinug-sam12)
X#				N :  ignore [N]othing (+pinusgsamc12)
X#				E :  ignore [E]verything (-pinusgsamc12)
X#
X# By default, Tripwire uses the R template -- it ignores
X# only the access timestamp.
X#
X# You can use templates with modifiers, like:
X#	Ex:  /etc/lp	E+ug
X#
X#	Example configuration file:
X#		/etc		R	# all system files
X#		!/etc/lp	R	# ...but not those logs
X#		=/tmp		N	# just the directory, not its files
X#
X# Note the difference between pruning (via "!") and ignoring everything
X# (via "E" template):  Ignoring everything in a directory still monitors
X# for added and deleted files.  Pruning a directory will prevent Tripwire
X# from even looking in the specified directory.
X#
X#
X# Tripwire running slowly?  Modify your tripwire.config entries to
X# ignore the (signature 2) attribute when this computationally-exorbitant 
X# protection is not needed.  (See README and design document for further
X# details.)
X#
X
X#  First, root's "home"
X=/		L
X/.rhosts	R	# may not exist
X/.profile	R	# may not exist
X/.cshrc		R	# may not exist
X/.login		R	# may not exist
X/.exrc		R	# may not exist
X/.logout	R	# may not exist
X/.emacs		R	# may not exist
X/.forward	R	# may not exist
X/.netrc		R	# may not exist
X
X# Unix itself
X/386bsd		R
X
X# /bin and exceptions
X/bin		R-2
X/bin/mail	R
X/bin/rcp	R
X/bin/rnews	R
X
X# /dev
X/dev	 	L
X
X# /etc and exceptions
X/etc			R-2
X/etc/aliases	 	L
X/etc/daily		L
X/etc/disktab		L
X/etc/dumpdates		L
X/etc/master.passwd	L
X/etc/monthly		L
X/etc/motd		L
X/etc/passwd		L
X/etc/pwd.db		L
X/etc/spwd.db		L
X/etc/uucp		L
X/etc/weekly		L
X
X# /home
X=/home
X
X# /news/lib
X/news/lib/inews		R
X/news/lib/nnmaster	R
X
X# /root
X/root			R-2
X/root/.history		L
X
X# /sbin
X/sbin			R-2
X
X# /usr/bin
X/usr/bin		R-2
X
X/usr/include		R-12
X
X/usr/lib		R-2
X
X/usr/libexec		R-2
X
X/usr/local/bin		R-2
X
X/usr/local/etc		L
X
X/usr/local/lib/mail	L
X
X/usr/sbin		R-2
X
X/usr/src/bin		R-2
X/usr/src/lib		R-2
X/usr/src/libexec	R-2
X/usr/src/sbin		R-2
X/usr/src/usr.bin	R-2
X/usr/src/usr.sbin	R-2
X/usr/src/sys.386bsd	R-2
X!/usr/src/sys.386bsd/compile
X!/usr/src/sys.386bsd/conf
X!/usr/src/sys.386bsd/i386/conf
X
X###########################################
END_OF_FILE
if test 3678 -ne `wc -c <'tripwire-1.1/configs/tw.conf.386bsd'`; then
    echo shar: \"'tripwire-1.1/configs/tw.conf.386bsd'\" unpacked with wrong size!
fi
# end of 'tripwire-1.1/configs/tw.conf.386bsd'
fi
if test -f 'tripwire-1.1/src/config.pre.l' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'tripwire-1.1/src/config.pre.l'\"
else
echo shar: Extracting \"'tripwire-1.1/src/config.pre.l'\" \(3224 characters\)
sed "s/^X//" >'tripwire-1.1/src/config.pre.l' <<'END_OF_FILE'
X%{
X/* $Id: config.pre.l,v 1.8 1993/12/02 18:03:17 genek Exp $ */
X
X/*
X * config.pre.l
X *
X *	lexical analyzer for preprocessing tw.config files.
X *
X *	note that escaped sequences in the <string> token must be 
X *	expanded manually.
X *
X * Gene Kim
X * Purdue University
X * October 4, 1992
X */
X
X			/* 
X			 * note that strings can contain '@'s, but they
X			 * cannot start with them! 
X			 *
X			 * similarly, we can have #'s in strings, but they
X			 * cannot be the first character! 
X			 */
X
X%}
X
XWS			[ \t]
XCOMMENT			[#]
XEOL			[\n]
XDIRECTIVE		@{2,2}
XSTRING			([^ \t\n\#\(\)]|\\.)+([^ \t\n\(\)]|\\.)*
XLPAREN			[\(]
XRPAREN			[\)]
XANDAND			\&{2,2}
XOROR			\|{2,2}
XBSLASH			[\\]
X
X%%
X
X{WS}+			{ /* eat spaces */ }
X{BSLASH}{EOL}		{   
X			    /* eat line continuations */ 
X			    linenumber++; 
X			}
X{COMMENT}[^\n]*		{ /* eat comments */ }
X
X^{DIRECTIVE}{WS}*include	{ return INCLUDE; }
X^{DIRECTIVE}{WS}*define		{ return DEFINE; }
X^{DIRECTIVE}{WS}*undef		{ return UNDEF; }
X^{DIRECTIVE}{WS}*ifdef		{ return IFDEF; }
X^{DIRECTIVE}{WS}*ifndef		{ return IFNDEF; }
X^{DIRECTIVE}{WS}*ifhost		{ return IFHOST; }
X^{DIRECTIVE}{WS}*ifnhost	{ return IFNHOST; }
X^{DIRECTIVE}{WS}*contents	{ return CONTENTS; }
X^{DIRECTIVE}{WS}*dbaseversion	{ return DBASEVERSION; }
X^{DIRECTIVE}{WS}*else		{ return ELSE; }
X^{DIRECTIVE}{WS}*endif		{ return ENDIF; }
X^{DIRECTIVE}{WS}*echo		{ return ECHOTHIS; }
X{EOL}			{ linenumber++; return EOL; }
X{ANDAND}		{ return ANDAND; }
X{OROR}			{ return OROR; }
X{LPAREN}		{ return LPAREN; }
X{RPAREN}		{ return RPAREN; }
X{STRING}		{
X    char *pcin, *pcout, macro[1024], *pcm;
X    char outstring[1024];
X    char *pctmp;
X
X    yytext[yyleng] = '\0';
X    yylval.string = yytext;
X
X    SPDEBUG(20) { printf("---(prestring)---> %s\n", yytext); }
X
X    pcin = yytext;
X    pcout = outstring;
X    for (; *pcin; pcin++) {
X	/* check for macro expansion */
X	if (*pcin == '@' && *(pcin+1) && *(pcin+1) == '@') {
X	    int curlymode = 0;		/* bounded by '{' and '}' */
X	    pcm = macro;
X	    pcin += 2;
X	    while (*pcin && isalnum(*pcin) || *pcin == '_' ||
X					*pcin == '{' || *pcin == '}') {
X		if (*pcin == '{') {
X		    /* nested curlies are not allowed! */
X		    if (curlymode) {
X			fprintf(stderr, "warning: line %d: nested `{}' expressions are not allowed!\n", linenumber);
X		    } else {
X			curlymode = 1;
X		    }
X		    pcin++;
X		    continue;
X		}
X		if (curlymode && *pcin == '}') {
X		    pcin++;
X		    curlymode = 0;
X		    break;
X		}
X
X		*pcm++ = *pcin++;
X	    }
X	    *pcm++ = '\0';
X
X	    SPDEBUG(20) { printf("--(macro)--> %s\n", macro); }
X
X	    /* expand macro */
X	    if (tw_mac_ifdef(macro) == 0) {
X		fprintf(stderr, "warning: uninitialized directive '%s' at line %d in config file\n\t'%s' !\n\t\t(Hint: maybe a misspelled directive?)\n", macro, linenumber,
X					currparsefile);
X	    } else {
X		/* else substitute in the input stream */
X		pctmp = tw_mac_dereference(macro);
X		assert(pctmp != NULL);
X		SPDEBUG(20) { printf("--(dmacro)--> %s\n", pctmp); }
X
X		strcpy(pcout, pctmp);
X		pcout += strlen(pctmp);
X	    }
X	    pcin--;			/* rewind for loop */
X	    continue;
X	}
X	*pcout++ = *pcin;
X    }
X    *pcout++ = '\0';
X
X
X    yylval.string = outstring;
X    if (yaccdebuglevel > 10) 
X	printf("--(STRING)--> %s\n", outstring);
X    return STRING;
X
X}
X
END_OF_FILE
if test 3224 -ne `wc -c <'tripwire-1.1/src/config.pre.l'`; then
    echo shar: \"'tripwire-1.1/src/config.pre.l'\" unpacked with wrong size!
fi
# end of 'tripwire-1.1/src/config.pre.l'
fi
if test -f 'tripwire-1.1/Makefile' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'tripwire-1.1/Makefile'\"
else
echo shar: Extracting \"'tripwire-1.1/Makefile'\" \(3191 characters\)
sed "s/^X//" >'tripwire-1.1/Makefile' <<'END_OF_FILE'
X# $Id: Makefile,v 1.10 1993/12/15 23:03:36 genek Exp $
X#
X# 	Tripwire build
X#
X#  See the README file before running this!
X#
X
X###
X###   Start of user-modified settings
X###   Examine these and change the ones that need to be
X###   Altered on your system
X###
X
X# destination directory for final executables
XDESTDIR = /secureplace/bin
X
X# destination for man pages
XMANDIR  = /usr/man
X
X# system utilities
XLEX	= lex
X#LEX	= flex			# For the GNU crowd
X
XYACC	= yacc
X#YACC	= bison			# For the GNU crowd
X
X# for SVR4 make (must be a Bourne-type shell)
XSHELL	= /bin/sh
X#SHELL	= /bin/ksh		# Another common shell
X#SHELL	= /bin/bash		# For the GNU fanatics
X
X# you can use ANSI C if you like, but K&R is equally fine.
XCC     = cc			# common
X#CC     = gcc			# also common
X#CC	= /usr/ccs/bin/cc	# Pyramid DC/OSx (SVR4)
X
XCFLAGS = -O			# common 
X#CFLAGS = -g 			# common 
X#CFLAGS = -g			# debugging
X#CFLAGS = -O -cckr		# SGI
X#	NOTE: some versions of the HP C compiler optimizer breaks snefru.c!  
X#		consider recompiling this file seperately without optimization
X#CFLAGS = -O -Aa -N		# HP/UX ansi
X#CFLAGS = -O -Ac -N		# HP/UX K&R
X#CFLAGS = -O -Ac -N -Wl,-a,archive    # HP/UX K&R, insure archived, static link
X#CFLAGS = -systype bsd43	# ETA/10 (SVR3)
X#CFLAGS = -systype bsd43	# MIPS RISC/OS 4.5x
X#CFLAGS = -O -ansi		# gnu CC
X#CFLAGS = -O -ansi -W -Wreturn-type -Wswitch -Wshadow # gnu CC w/all warnings
X#CFLAGS = -OG			# Pyramid OSx
X#CFLAGS = -O -Kold		# Pyramid DC/OSx (SVR4)
X
X# a C preprocessor (to build inode.h)
XCPP	= cc -E			# common
X#CPP	= /usr/lib/cpp		# on older systems
X#CPP	= /lib/cpp		# on older systems
X
X# make sure libraries are not linked dynamically (as a security measure)
XLDFLAGS=			# common
X#LDFLAGS= -non_shared		# OSF/1
X#LDFLAGS= -Bstatic		# SunOS
X#LDFLAGS= -dn			# Pyramid DC/OSx (SVR4)
X
X# libraries
XLIBS = 				# common
X#LIBS = -lmalloc -lsun -lc_s	# IRIX 4.0
X#LIBS = -lx			# Xenix
X#LIBS = -lbsd			# MIPS RISC/OS
X#LIBS = -lgnumalloc           # Encore / UMAX V
X
X
X# If you don't have the install command, you need to replace
X# the use of it later in the makefile with a cp and chmod
XINSTALL= /usr/bin/install	# common
X#INSTALL= /usr/ucb/install	# Pyramid DC/OSx (SVR4)
X#INSTALL= /etc/install		# Pyramid OSx
X#INSTALL= /bin/cp		# no install
X
X# how you get hostname information (BSD vs. SYSV style)
XHOSTNAME	= "hostname"		# BSD
X#HOSTNAME	= "uname -n"		# System V 
X
X
X###
X###   End of user-modified settings
X###   You should not need to change anything after this
X###
X
XDIST		= tripwire-1.1
X
Xall:
X	(cd aux; make CC=$(CC) CFLAGS="$(CFLAGS)"  \
X		LDFLAGS="$(LDFLAGS)" CPP="$(CPP)" SHELL=$(SHELL) all)
X	(cd src; make CC=$(CC) CFLAGS="$(CFLAGS)" LIBS="$(LIBS)" \
X		LDFLAGS="$(LDFLAGS)" CPP="$(CPP)" SHELL=$(SHELL) all)
X
Xinstall: all
X	(cd src; make INSTALL=$(INSTALL) DESTDIR=$(DESTDIR) install)
X	(cd man; make INSTALL=$(INSTALL) MANDIR=$(MANDIR) install)
X
Xtest:	all
X	(cd tests; make HOSTNAME=$(HOSTNAME) DIST=$(DIST) SHELL=$(SHELL))
X
Xclean:
X	(cd src; make clean)
X	(cd man; make clean)
X	(cd aux; make clean)
X	(cd tests; make clean)
X	rm -f core  
X
Xclobber: clean
X	(cd src; make clobber)
X	(cd man; make clean)
X	(cd aux; make clean)
X	(cd tests; make clean)
X	rm -f core  
X	rm -f */*_pure_*.o sigs/*/*_pure_*.o
END_OF_FILE
if test 3191 -ne `wc -c <'tripwire-1.1/Makefile'`; then
    echo shar: \"'tripwire-1.1/Makefile'\" unpacked with wrong size!
fi
# end of 'tripwire-1.1/Makefile'
fi
if test -f 'tripwire-1.1/contrib/README.TRIPWIRE' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'tripwire-1.1/contrib/README.TRIPWIRE'\"
else
echo shar: Extracting \"'tripwire-1.1/contrib/README.TRIPWIRE'\" \(3136 characters\)
sed "s/^X//" >'tripwire-1.1/contrib/README.TRIPWIRE' <<'END_OF_FILE'
X# Lance Bailey <lrb@ctrg.rri.uwo.ca>
X#
X
XTRIPWIRE
X--------
X
XTRIPWIRE is a script designed to make easier the running of tripwire on 
Xmultiple machines, but with only one floppy drive available.
X
X
XA safe, and recommended by gene, manner of running tripwire is to keep
Xthe databases and the config files on a read only floppy. A safer still 
Xapproach is to also store the binaries on the floppy.  Unfortunately, if
Xyou only have one floppy, you can run out of space while trying to support
Xa number of machines/platforms on one floppy. The obvious solution is 
Xcompression of some sort.
X
X
XTRIPWIRE is designed to take compressed binaries and databases, decompress
Xthem into a clean working area and run the [newly uncompressed] binary 
Xaccording to the appropriate config file.
X
X
XTo use TRIPWIRE, 
X
X1) 
Xset up your config.h as follows (*before* compiling :)
X
X#define CONFIG_PATH	"/usr/local/adm/tcheck/tripwire.configs"
X#define DATABASE_PATH	"./Databases"
X
X#define CONFIG_FILE 	"tripwire.config_@"
X#define DATABASE_FILE	"tripwire.database_@"
X
X
X
X2) set up a floppy as follows 
X
X/floppy/Databases
X		     -- directory, contains compressed Databases of the
X			form:  tripwire.database_XXX.sub.do.main
X			tripwire.database_YYY.sub.do.main
X
X			where XXX.sub.do.main and YYY.sub.do.main are
X			hostnames (as returned by the hostname(1) command)
X			of machines you are monitoring.
X
X			There will be a unique database for each machine.
X
X
X/floppy/tripwire.configs
X		     -- directory containing compressed binaries for each of
X			your systems.  These are named for the hostname of
X			the system.  Continuing the above example, we would
X			have
X
X			/floppy/tripwire.configs/XXX.sub.do.main
X			/floppy/tripwire.configs/YYY.sub.do.main
X
X			if XXX and YYY were the same platform, then a single
X			file with two links to the inode could be used.
X
X
X
X/floppy/tripwire.configs
X
X		     -- directory containing the *uncompressed*
X			configuration files each of your systems.  These are
X			named tripwire.config_XXX.sub.dom.ain and
X			tripwire.config_YYY.sub.dom.ain
X
X			It is expected that each host will have a unique
X			config file, although it is possible that disk-sparse
X			clients might share configs. In this case, use multiple
X			links to the same config file.
X
X
X3) for each needed platform:
X   -build the binary
X   -run the binary tripwire to create the database
X   -compress the binary and the database and store them onto the floppy
X
X
X4) Mark the floppy readonly, re-mount and export to needed machines. NFS-mount 
X   the floppy as /usr/local/adm/tcheck (or edit the TRIPWIRE script to reflect
X   your preference).  Use a symlink on the floppy's local host to point 
X   /usr/local/adm/tcheck to the floppy if you can't control a floppy's
X   mount point (stupid NeXT).
X
X5) TRIPWIRE operates as follows:
X
X	cd the the /tmp area
X	forcably remove any hierarchy called tcheck.run
X	create the directory tcheck.run, move to it and create a Databases
X	    directory
X	uncompress the needed binary and database and store them in .  and
X	    Databases
X	run tripwire, mailing the output to root
X	move back to the /tmp area and remove the tcheck.run hierarchy
X
X
END_OF_FILE
if test 3136 -ne `wc -c <'tripwire-1.1/contrib/README.TRIPWIRE'`; then
    echo shar: \"'tripwire-1.1/contrib/README.TRIPWIRE'\" unpacked with wrong size!
fi
# end of 'tripwire-1.1/contrib/README.TRIPWIRE'
fi
if test -f 'tripwire-1.1/src/preen.interp.c' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'tripwire-1.1/src/preen.interp.c'\"
else
echo shar: Extracting \"'tripwire-1.1/src/preen.interp.c'\" \(3066 characters\)
sed "s/^X//" >'tripwire-1.1/src/preen.interp.c' <<'END_OF_FILE'
X#ifndef lint
Xstatic char rcsid[] = "$Id: preen.interp.c,v 1.11 1993/12/12 01:39:01 genek Exp $";
X#endif
X
X/*
X * preen.interp.c
X *
X *	interpret the diffs between the database files
X *
X * Gene Kim
X * Purdue University
X */
X
X#include "../include/config.h"
X#include <stdio.h>
X#ifdef STDLIBH
X#include <stdlib.h>
X#endif
X#ifdef STRINGH
X#include <string.h>
X#else
X#include <strings.h>
X#endif
X#include <sys/param.h>
X#ifdef __STDC__
X# include <sys/types.h>
X# include <sys/stat.h>
X#endif
X#if (defined(SYSV) && (SYSV < 3))
X# include <limits.h>
X#endif	/* SVR2 */
X#include "../include/list.h"
X#include "../include/tripwire.h"
X
X					/* the diff lists */
Xstruct list *diff_added_list = NULL,
X	    *diff_deleted_list = NULL,
X	    *diff_changed_list = NULL;
X
X					/* how many in each list */
Xint diff_added_num = 0,
X    diff_changed_num = 0,
X    diff_deleted_num = 0,
X    diff_unignored_num = 0;
X
X/*
X * preen_interp(FILE *fpin)
X *
X *	do the actual interpreation of the diff output, generated by
X *	diffing the two database files.
X */
X
Xvoid
Xpreen_interp (fpin)
X    FILE *fpin;
X{
X    char s[1024];
X    char key[MAXPATHLEN+256], value[512];
X    struct list_elem *plist;
X
X    if (!quietmode)
X	fprintf(stderr, "### Phase 4:   Searching for inconsistencies\n");
X
X    /* start reading in lines from the new database */
X    while (fgets(s, sizeof(s), fpin) != NULL) {
X	char *oldvalue;
X	static int countlines = 1;
X
X	countlines++;
X
X	/* is it a comment? */
X	if (s[0] == '#')
X	    continue;
X	if (s[0] == '@' && s[1] == '@')
X	    continue;
X
X	/*
X	 * if it's in the list:
X	 *	flag as SEEN
X	 *	a) if it's the same, next;
X	 *	b) if it's different, it's CHANGED;
X	 * otherwise,
X	 *	it's ADDED
X	 *
X	 * scan entire list, find all !SEEN
X	 *	they're DELETED
X	 */
X
X	/* (this should never happen since it was already preprocessed!) */
X	if (string_split_space(s, key, value) < 0) {
X	    fprintf(stderr, 
X	    	"%s: fatal parse error in preprocessed database file, line %d\n!",
X		progname, countlines);
X	    exit(1);
X	}
X
X	/* if file is in saved database */
X	if ((oldvalue = list_lookup(key, &olddbase_list)) != NULL) {
X
X	    list_setflag(key, FLAG_SEEN, &olddbase_list);
X
X	    /* was it CHANGED? */
X	    if (strcmp(value, oldvalue) != 0) {
X
XSPDEBUG(6) printf("--(changed %s)------vvv\n", key);
XSPDEBUG(6) printf(">%s>%s\n", oldvalue, value);
X
X		list_set(key, value, 0, &diff_changed_list);
X		diff_changed_num++;
X	    }
X	    /* else skip it */
X	    else
X		continue;
X
X	}
X	/* else it's been ADDED */
X	else {
X	    list_set(key, value, 0, &diff_added_list);
X	    diff_added_num++;
X	}
X    }
X
X    /* look for DELETED entries */
X    if (list_open(&olddbase_list) < 0) {
X	fprintf(stderr, "preen_interp: list_open() failed!\n");
X	exit(1);
X    }
X
X    while ((plist = list_get(&olddbase_list)) != NULL) {
X
X	/* skip entries that have already been seen */
X	if (plist->flag & FLAG_SEEN)
X	    continue;
X
X	list_set(plist->varname, plist->varvalue, 0, &diff_deleted_list);
X	diff_deleted_num++;
X    }
X
X    if (list_close(&olddbase_list) < 0) {
X	fprintf(stderr, "preen_interp: list_open() failed!\n");
X	exit(1);
X    }
X
X    return;
X}
END_OF_FILE
if test 3066 -ne `wc -c <'tripwire-1.1/src/preen.interp.c'`; then
    echo shar: \"'tripwire-1.1/src/preen.interp.c'\" unpacked with wrong size!
fi
# end of 'tripwire-1.1/src/preen.interp.c'
fi
if test -f 'tripwire-1.1/src/dbase.update.c' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'tripwire-1.1/src/dbase.update.c'\"
else
echo shar: Extracting \"'tripwire-1.1/src/dbase.update.c'\" \(3040 characters\)
sed "s/^X//" >'tripwire-1.1/src/dbase.update.c' <<'END_OF_FILE'
X#ifndef lint
Xstatic char rcsid[] = "$Id: dbase.update.c,v 1.10 1993/12/03 15:24:59 genek Exp $";
X#endif
X
X/*
X * dbase.update.c
X *
X *	build the preen.database file with the list of files that
X *	was generated by config.parse.c
X *
X * Gene Kim
X * Purdue University
X */
X
X#include "../include/config.h"
X#include <stdio.h>
X#include <fcntl.h>
X#ifdef STDLIBH
X# include <stdlib.h>
X#endif
X#include <sys/param.h>
X#include <sys/types.h>
X#include <sys/stat.h>
X#ifdef STRINGH
X#include <string.h>
X#else
X#include <strings.h>
X#endif
X#include <errno.h>
X#include "../include/list.h"
X#include "../include/tripwire.h"
X#include <assert.h>
X
X/*
X * dbase_entry_flag ()
X *
X *	mark all entries with the given entrynumber (flagentry) with (orflag).
X *	if (ignorevec) is non-NULL, then splice it in as the new ignore
X *	vector.
X */
X
Xvoid
Xdbase_entry_flag (pp_list, flagentry, orflag, ignorevec)
X    struct list **pp_list;
X    int flagentry;
X    int orflag;
X    char *ignorevec;
X{
X    struct list_elem *p_fileentry;
X    char trash[1024];
X    int entry;
X    int err;
X
X    /* use pp_list as key */
X    if (list_open(pp_list) < 0) {
X	fputs("database_update: list_open() failed!\n", stderr);
X	exit(1);
X    }
X
X    /* foreach file entry */
X    while ((p_fileentry = list_get(pp_list)) != NULL) {
X	if ((err = sscanf(p_fileentry->varvalue, "%d %s", &entry, trash)) < 2) {
X	    fprintf(stderr, "dbase_entry_flag: sscanf() parse error, returned %d!\n", err);
X	    exit(1);
X	}
X	/* flag if entry number match */
X	if (entry == flagentry) {
X	    int flags;
X
X	    /* exception list */
X	    flags = list_getflag(p_fileentry->varname, pp_list);
X
X	    list_setflag(p_fileentry->varname, (orflag)|flags, pp_list);
X
X	    /* do we replace the ignorevector? */
X	    if (ignorevec) {
X		int entrynum;
X		char oldignore[512], oldrest[2048];
X		char newvalue[2048];
X
X		/* parse the old dbase entry */
X		if ((err = sscanf(p_fileentry->varvalue, 
X			    "%d %s %[^\n]", &entrynum, oldignore, 
X			    oldrest)) != 3) {
X		    /* was it just added? */
X		    if (list_getflag(p_fileentry->varname, pp_list) & 
X					FLAG_UPDATE) {
X			SPDEBUG(3) printf("\t(it's already a newly file...)\n");
X			continue;
X		    }
X		    fprintf(stderr, "dbase_entry_flag: list parse error (nfields=%d)!\n", err);
X		    fprintf(stderr, "%s>> %s\n", p_fileentry->varname,
X			    p_fileentry->varvalue);
X		    exit(1);
X		}
X
X		/* splice the new ignore flag */
X		sprintf(newvalue, "%d %s %s\n", entrynum, ignorevec, oldrest);
X
X		/* they should be the same, since ignorevecs are the only
X		 * things that changed 
X		 */
X		assert(strlen(p_fileentry->varvalue) == strlen(newvalue));
X
X		list_set(p_fileentry->varname, newvalue, 0, pp_list);
X	    }
X
X	    /* printf("%s: %d\n", p_fileentry->varname, flags); */
X	    if (flags & FLAG_NOOPEN) {
X	        if (verbosity)
X		    fprintf(stderr, "%s is a special file!  Skipping...\n",
X		    	p_fileentry->varname);
X	        continue;
X	    }
X	}
X    }
X
X    /* close up the list */
X    if (list_close(pp_list) < 0) {
X	fputs("database_update: list_close() failed!\n", stderr);
X	exit(1);
X    }
X}
X
END_OF_FILE
if test 3040 -ne `wc -c <'tripwire-1.1/src/dbase.update.c'`; then
    echo shar: \"'tripwire-1.1/src/dbase.update.c'\" unpacked with wrong size!
fi
# end of 'tripwire-1.1/src/dbase.update.c'
fi
if test -f 'tripwire-1.1/src/config.prim.c' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'tripwire-1.1/src/config.prim.c'\"
else
echo shar: Extracting \"'tripwire-1.1/src/config.prim.c'\" \(3006 characters\)
sed "s/^X//" >'tripwire-1.1/src/config.prim.c' <<'END_OF_FILE'
X#ifndef lint
Xstatic char rcsid[] = "$Id: config.prim.c,v 1.10 1993/12/02 18:03:19 genek Exp $";
X#endif
X
X/*
X * config.prim.c
X *
X *	process configuration file directive primitives (ala m4 or cpp).
X *
X *		ifhost
X *		define
X *		undef
X *		ifdef
X *		ifndef
X *
X * Gene Kim
X * Purdue University
X * September 28, 1992
X */
X
X#include "../include/config.h"
X#include <stdio.h>
X#ifdef __STDC__
X# include <sys/types.h>
X# include <sys/stat.h>
X#endif
X#ifdef STRINGH
X#include <string.h>
X#else
X#include <strings.h>
X#endif
X#include "../include/tripwire.h"
X#include "../include/list.h"
X#include <ctype.h>
X#include <sys/param.h>
X#ifndef GETHOSTNAME
X#include <sys/utsname.h>
X#endif
X#ifndef MAXHOSTNAMELEN
X#define MAXHOSTNAMELEN 64
X#endif
X
Xstatic struct list *defines_table = (struct list *) NULL;
X
X/*
X * void
X * tw_mac_define(char *varname, char *varvalue)
X *
X *	set (varname) to (varvalue) in the defines table
X */
X
Xvoid
Xtw_mac_define(varname, varvalue)
X    char *varname, *varvalue;
X{
X    list_set(varname, varvalue, 0, &defines_table);
X}
X
X/* char *
X * tw_mac_dereference(char *varname)
X *
X *	returns the (varvalue) in the defines table.
X */
X
Xchar *
Xtw_mac_dereference(varname)
X    char *varname;
X{
X    return list_lookup(varname, &defines_table);
X}
X
X/*
X * void
X * tw_mac_undef(char *varname)
X *
X *	removes (varname) from the defines table.
X */
X
Xvoid
Xtw_mac_undef(varname)
X    char *varname;
X{
X    list_unset(varname, &defines_table);
X}
X
X/*
X * int
X * tw_mac_ifdef(char *varname)
X *
X *	returns 1 if (varname) is in defines table, else 0.
X */
X
Xint
Xtw_mac_ifdef(varname)
X    char *varname;
X{
X    return list_isthere(varname, &defines_table);
X}
X
X/*
X * int
X * tw_mac_ifhost(char *hostname)
X *
X *	returns 1 if (hostname) matches our hostname
X */
X
Xint
Xtw_mac_ifhost(hostname)
X    char *hostname;
X{
X    char realhostname[MAXHOSTNAMELEN];
X    register char *tc, *sc;
X
X#ifndef GETHOSTNAME
X    struct utsname sysinfo;
X
X    if (uname(&sysinfo) < 0)
X	die_with_err("filename_hostname_expand: uname()", (char *) NULL);
X
X    (void) strncpy(realhostname, sysinfo.nodename, MAXHOSTNAMELEN);
X
X#else 	/* GETHOSTNAME */
X
X    /* get the hostname */
X    if (gethostname(realhostname, MAXHOSTNAMELEN) < 0)
X	die_with_err("filename_hostname_expand: gethostname()", (char *) NULL);
X
X
X#endif 	/* GETHOSTNAME */
X
X    /* check for a period in the hostname (only if there are periods in the
X     * the real hostnames)
X     */
X    if (!strchr(hostname, '.') && strchr(realhostname, '.')) {
X	fprintf(stderr, 
X"warning: hostname in @@ifhost directives must be fully qualified!\n");
X	fprintf(stderr, "\t\t(e.g. 'mentor.cc.purdue.edu')\n");
X    }
X
X    /* check for a match between the hostnames (case insensitive) */
X
X    for (sc = realhostname, tc = hostname; *sc && *tc ; sc++, tc++) {
X        if (*tc == *sc)
X	  continue;
X	else if (isupper(*tc) && islower(*sc)) {
X	  if (tolower(*tc) != *sc)
X	    return 0;
X}
X	else if (islower(*tc) && isupper(*sc)) {
X	  if (*tc != tolower(*sc))
X	    return 0;
X        }
X	else
X	  return 0;
X    }
X    return (!(*tc || *sc));
X}
X
END_OF_FILE
if test 3006 -ne `wc -c <'tripwire-1.1/src/config.prim.c'`; then
    echo shar: \"'tripwire-1.1/src/config.prim.c'\" unpacked with wrong size!
fi
# end of 'tripwire-1.1/src/config.prim.c'
fi
if test -f 'tripwire-1.1/configs/tw.conf.next' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'tripwire-1.1/configs/tw.conf.next'\"
else
echo shar: Extracting \"'tripwire-1.1/configs/tw.conf.next'\" \(2952 characters\)
sed "s/^X//" >'tripwire-1.1/configs/tw.conf.next' <<'END_OF_FILE'
X# $Id: tw.conf.next,v 1.3 1993/08/19 05:27:13 genek Exp $
X#
X# Lance R. Bailey <lrb@ctrg.rri.uwo.ca>
X#
X
X#  First, root's "home"
X=/		L
X/.rhosts	R	# may not exist
X/.profile	R	# may not exist
X/.cshrc		R	# may not exist
X/.login		R	# may not exist
X/.exrc		R	# may not exist
X/.logout	R	# may not exist
X/.emacs		R	# may not exist
X/.forward	R	# may not exist
X/.netrc		R	# may not exist
X
X# Unix itself
X/sdmach		R
X
X# Now, some critical directories and files
X#  Some exceptions are noted further down
X/etc		R
X/etc/inetd.conf	R
X/etc/rc		R
X/etc/rc.boot	R
X/etc/rc.local	R
X/etc/rc.single	R
X/etc/rc.ip	R
X/etc/ttytab	R
X/etc/exports	R
X/etc/ttys	L
X/etc/dumpdates	L
X/etc/mtab	L
X/etc/motd	L
X/etc/rmtab	L
X/etc/utmp	L
X/etc/group	R	# changes should be infrequent
X#  The next line may need to be replaced with /etc/security
X#   if C2 is enabled
X/etc/passwd	L
X
X/var		L
X
X/dev		L
X
X/usr/etc	R
X
X# Checksumming the following is not so critical.  However,
X#  setuid/setgid files are special-cased further down.
X
X/lib		R-2
X
X/bin		R-2
X
X/usr/bin	R-2
X
X/usr/ucb	R-2
X
X/usr/lib	R-2
X
X=/usr		L
X=/usr/spool	L
X/usr/spool/cron		L
X/usr/spool/mqueue	L
X/usr/spool/mail		L
X
X# You may or may not have the following
X#/usr/ftp	L
X#/usr/ftp/bin	R
X#/usr/ftp/etc	R
X
X# put entries in for /var/yp if you need it
X# put entries for uucp if you need them
X# put entries for /var/adm if you need it
X
X=/tmp
X=/var/tmp
X
X#  Here are entries for setuid/setgid files.  On these, we use
X#  both signatures just to be sure.
X#
X#  You may want/need to edit this list.  Batteries not inc.
X
X/bin/at			R
X/bin/atq		R
X/bin/atrm		R
X/bin/cancel		R
X/bin/chfn		R
X/bin/chsh		R
X/bin/crontab		R
X/bin/cu			R
X/bin/df			R
X/bin/iostat		R
X/bin/ipcs		R
X/bin/login		R
X/bin/lpstat		R
X/bin/mail		R
X/bin/newgrp		R
X/bin/passwd		R
X/bin/su			R
X/bin/sunview1/sv_acquire		R
X/bin/sunview1/sv_release		R
X/bin/sunview1/toolplaces		R
X/bin/tip		R
X/bin/uucp		R
X/bin/uuname		R
X/bin/uustat		R
X/bin/uux		R
X/bin/wall		R
X/bin/write		R
X/bin/ypchfn		R
X/bin/ypchsh		R
X/bin/yppasswd		R
X/usr/bin/at		R
X/usr/bin/atq		R
X/usr/bin/atrm		R
X/usr/bin/cancel		R
X/usr/bin/chfn		R
X/usr/bin/chsh		R
X/usr/bin/crontab	R
X/usr/bin/cu		R
X/usr/bin/df		R
X/usr/bin/iostat		R
X/usr/bin/ipcs		R
X/usr/bin/login		R
X/usr/bin/lpstat		R
X/usr/bin/mail		R
X/usr/bin/newgrp		R
X/usr/bin/passwd		R
X/usr/bin/su		R
X/usr/bin/sunview1/sv_acquire		R
X/usr/bin/sunview1/sv_release		R
X/usr/bin/sunview1/toolplaces		R
X/usr/bin/tip		R
X/usr/bin/uucp		R
X/usr/bin/uuname		R
X/usr/bin/uustat		R
X/usr/bin/uux		R
X/usr/bin/wall		R
X/usr/bin/write		R
X/usr/bin/ypchfn		R
X/usr/bin/ypchsh		R
X/usr/bin/yppasswd	R
X/usr/etc/arp		R
X/usr/etc/chill		R
X/usr/etc/devinfo	R
X/usr/etc/dkinfo		R
X/usr/etc/dmesg		R
X/usr/etc/dump		R
X/usr/etc/dumpfs		R
X/usr/etc/keyenvoy	R
X/usr/etc/kgmon		R
X/usr/etc/lpc		R
X/usr/etc/nfsstat	R
X/usr/etc/ping		R
X/usr/etc/rpc.rwalld	R
X/usr/etc/trpt		R
X/usr/ucb/lpq		R
X/usr/ucb/lpr		R
X/usr/ucb/netstat	R
X/usr/ucb/rcp		R
X/usr/ucb/rdist		R
X/usr/ucb/rlogin		R
X/usr/ucb/rsh		R
X/usr/ucb/talk		R
X/usr/ucb/vmstat		R
X
END_OF_FILE
if test 2952 -ne `wc -c <'tripwire-1.1/configs/tw.conf.next'`; then
    echo shar: \"'tripwire-1.1/configs/tw.conf.next'\" unpacked with wrong size!
fi
# end of 'tripwire-1.1/configs/tw.conf.next'
fi
if test -f 'tripwire-1.1/contrib/md4convert.sh' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'tripwire-1.1/contrib/md4convert.sh'\"
else
echo shar: Extracting \"'tripwire-1.1/contrib/md4convert.sh'\" \(2262 characters\)
sed "s/^X//" >'tripwire-1.1/contrib/md4convert.sh' <<'END_OF_FILE'
X#!/bin/sh
X
X# md4convert.sh
X#
X#	md4convert.sh is a shell script replaces all the MD4 signatures in 
X#	the specified Tripwire database.  This script was written to help
X#	re-adjust the databases after it was discovered that the MD4 routines
X#	included in Tripwire releases before version 1.0.3 generated 
X#	incorrect signatures.  
X#
X# Gene Kim
X# Purdue University
X# April 28, 1993
X#
X
X## predefined filenames
Xfile=/tmp/genek/tw.db_flounder.Eng.Sun.COM
X
X## names of temporary files
Xtmpfile=/tmp/tw.list
Xoutfile=/tmp/tw.tmp
Xsigfile=/tmp/tw.sig
X
X## make backup files (very conservatively)
X# copy the files to the right places
Xif [ -f $file.BAK ] 
Xthen
X    echo "### $file.BAK already exists!  "
X    echo "### Cannot backup file.  Remove the file and run this script again."
X    exit 1
Xfi
X
Xecho "### Backing up $file to $file.BAK"
Xcp $file $file.BAK
X
X## place {filename, md4sig} pairings in $tmpfile
Xecho "### Scanning new file signatures"
Xrm -f $outfile
Xcat $file | egrep -v '^#' | egrep -v '^@' | awk ' BEGIN { NF = " "; } \
X	{ if ($13 == $14 && $14 == $15 && \
X		$15 == $16 && $16 == $17 && $17 == $18 && $18 == $19 && \
X		$19 == $20 && $20 == $21 && $21 == $22 && $22 == 0) { next; } \
X		else {print $1;}} ' > $tmpfile
Xfor filename in `cat $tmpfile`
Xdo
X    # this works unreliably, so we have to look for all nullsigs up above
X    if [ -f $filename ] 
X        then
X	sigfetch -5 $filename > $sigfile
X	if [ $? -eq 0 ] 
X	then
X	    sig=`cat $sigfile | sed 's/.*: //'` 
X	    echo Scanning: $filename
X	    echo $filename $sig >> $outfile
X	fi
X    fi
Xdone
X
X## merge the two files together
Xecho "### Substituting and merging signature files..."
Xnewfile=/tmp/tw.new
Xawk ' \
X# signatures begin at field 12 \
XBEGIN	{  \
X	    FS = " ";  \
X	    filename = "/tmp/tw.tmp"; \
X \
X	    # get new values from tmpfile, put into associative array \
X	    while(getline newline <filename) { \
X		split(newline, newarray); \
X		#print newarray[1] "-->" newarray[2]; \
X		signatures[newarray[1]] = newarray[2]; \
X	    } \
X \
X	} \
X/^#/ 	{ print $0; next; } \
X/^@@/	{ print $0; next; } \
X{ \
X	if (signatures[1]) { \
X	    print "-->", signatures[$1], "<---";
X	    $17 = signatures[$1]; \
X	} \
X	print $0; \
X \
X} ' < $file > $newfile
X
Xecho "### Copying new database file to $file"
Xcp $newfile $file
END_OF_FILE
if test 2262 -ne `wc -c <'tripwire-1.1/contrib/md4convert.sh'`; then
    echo shar: \"'tripwire-1.1/contrib/md4convert.sh'\" unpacked with wrong size!
fi
chmod +x 'tripwire-1.1/contrib/md4convert.sh'
# end of 'tripwire-1.1/contrib/md4convert.sh'
fi
if test -f 'tripwire-1.1/tests/createfiles.c' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'tripwire-1.1/tests/createfiles.c'\"
else
echo shar: Extracting \"'tripwire-1.1/tests/createfiles.c'\" \(2177 characters\)
sed "s/^X//" >'tripwire-1.1/tests/createfiles.c' <<'END_OF_FILE'
X#include <fcntl.h>
X#include <stdio.h>
X
X#define TESTFILEDIR "./testfiles/"
X
X/* @@(string) indicates special test that doesn't use literal strings.  We
X * interpret these down below.
X */
Xchar *pc_strings[] = {
X"",
X"a",
X"abc",
X"message digest",
X"abcdefghijklmnopqrstuvwxyz",
X"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789",
X"12345678901234567890123456789012345678901234567890123456789012345678901234567890",
X"abcdbcdecdefdefgefghfghighijhijkijkljklmklmnlmnomnopnopq",
X"1\n",
X"12\n",
X"123\n",
X"1234\n",
X"12345\n",
X"123456\n",
X"1234567\n",
X"123456789\n",
X"The theory of quantum electrodynamics has now lasted for\n\
Xmore than fifty years, and has been tested more and more\n\
Xaccurately over a wider and wider range of conditions.\n\
XAt the present time I can proudly say that there is no\n\
Xsignificant difference between experiment and theory!\n\
X\n\
XJust to give you an idea of how the theory has been put\n\
Xthrough the wringer, I'll give you some recent numbers:\n\
Xexperiments have Dirac's number at 1.00115965221 (with\n\
Xan uncertainty of about five times as much). To give you\n\
Xa feeling for the accuracy of these numbers, it comes\n\
Xout something like this:  If you were to measure the\n\
Xdistance from Los Angeles to New York to this accuracy,\n\
Xit would be exact to the thickness of a human hair.\n\
XThat's how delicately quantum electrodynamics has, in the\n\
Xpast fifty years, been checked -- both theoretically and\n\
Xexperimentally.\n",
X};
X
Xmain(argc, argv)
X    int argc;
X    char *argv[];
X{
X    int i;
X    char *pc;
X    int slen;
X    int fd;
X    char filename[100];
X    char *dir;
X
X    if (argc == 2) {
X	dir = argv[1];
X	mkdir(dir, 0777);
X    }
X    for (i = 0; i < sizeof(pc_strings)/sizeof(char *); i++) {
X	pc = pc_strings[i];
X
X	sprintf(filename, "%s/t_file%d", TESTFILEDIR, i);
X	if ((fd = open(filename, O_CREAT|O_WRONLY, 0666)) < 0) {
X	    perror("open()");
X	    exit(1);
X	}
X
X	/* check for special tests */
X	if (strncmp(pc, "@@", 2) == 0) {
X	    continue;
X	}
X
X	/* else, it's a literal string */
X	slen = strlen(pc);
X	if (write(fd, pc, slen) != slen) {
X	    fputs("incomplete write!", stderr);
X	    exit(1);
X	}
X	close(fd);
X    }
X    exit(0);
X}
END_OF_FILE
if test 2177 -ne `wc -c <'tripwire-1.1/tests/createfiles.c'`; then
    echo shar: \"'tripwire-1.1/tests/createfiles.c'\" unpacked with wrong size!
fi
# end of 'tripwire-1.1/tests/createfiles.c'
fi
if test -f 'tripwire-1.1/tests/test.twpre.sh' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'tripwire-1.1/tests/test.twpre.sh'\"
else
echo shar: Extracting \"'tripwire-1.1/tests/test.twpre.sh'\" \(1439 characters\)
sed "s/^X//" >'tripwire-1.1/tests/test.twpre.sh' <<'END_OF_FILE'
X#!/bin/sh
X
XME=$0
X
XTMPINFILE=/tmp/tw1
XTMPOUTFILE=/tmp/tw2
XTMPOUTCTRL=/tmp/twctrl
XTMPINC1=/tmp/twinc1
XTMPINC2=/tmp/twinc2
X
Xcat << EOF
X
X=== $ME: DESCRIPTION
X
X    This script excercises the Tripwire preprocessor, testing correctness
Xvariable expansion and include files.
X
X=== $ME: BEGIN ===
X
XEOF
XTW="../src/tripwire -E"
X
Xcat << EOF > $TMPINFILE
X@@define VN1
X@@define VN2
X@@define VN3
X@@define VN4
X@@define VN5
X@@define V1	Z+pinugs123
X@@define V2	Y+pinugs123
X@@define V3	Z+pinugs123
X@@define V4	W+pinugs123
X@@define V5	V+pinugs123
X@@VN1
X@@VN2
X@@VN3
X@@VN4
X@@VN5
X@@V1
X@@V2
X@@V3
X@@V4
X@@V5
X@@V1 @@V1 @@V1 @@V1 @@V1
X@@V1@@V1@@V1@@V1@@V1
X@@V1@@V1@@V1@@V1@@V1@@V1@@V1@@V1@@V1@@V1
X@@define X1_1	XX
X@@{X1_1}
XX1_1
X@@define X 1
X@@define XX 2
X@@define XXX 3
X@@{X}@@{XX}@@{XXX}
X@@include $TMPINC1
XEOF
X
Xcat << EOF > $TMPOUTCTRL
X
X
X
X
X
XZ+pinugs123
XY+pinugs123
XZ+pinugs123
XW+pinugs123
XV+pinugs123
XZ+pinugs123 Z+pinugs123 Z+pinugs123 Z+pinugs123 Z+pinugs123
XZ+pinugs123Z+pinugs123Z+pinugs123Z+pinugs123Z+pinugs123
XZ+pinugs123Z+pinugs123Z+pinugs123Z+pinugs123Z+pinugs123Z+pinugs123Z+pinugs123Z+pinugs123Z+pinugs123Z+pinugs123
XXX
XX1_1
X123
Xxxx xxx
Xxxx xxx
XEOF
X
Xcat > $TMPINC1 << EOF
X@@define F1 xxx
X@@{F1} @@F1
X@@include $TMPINC2
XEOF
X
Xcat > $TMPINC2 << EOF
X@@{F1} @@F1
XEOF
X
X$TW -c $TMPINFILE > $TMPOUTFILE
Xdiff  $TMPOUTFILE $TMPOUTCTRL
X
Xif [ $? -ne 0 ] 
Xthen 
X	echo "=== $ME: FAILED ==="
Xelse
X	echo "=== $ME: PASS ==="
Xfi
X
X#rm -f $TMPOUTFILE $TMPINFILE $TMPOUTCTRL
X
END_OF_FILE
if test 1439 -ne `wc -c <'tripwire-1.1/tests/test.twpre.sh'`; then
    echo shar: \"'tripwire-1.1/tests/test.twpre.sh'\" unpacked with wrong size!
fi
chmod +x 'tripwire-1.1/tests/test.twpre.sh'
# end of 'tripwire-1.1/tests/test.twpre.sh'
fi
echo shar: End of archive 24 \(of 25\).
cp /dev/null ark24isdone
MISSING=""
for I in 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 ; do
    if test ! -f ark${I}isdone ; then
	MISSING="${MISSING} ${I}"
    fi
done
if test "${MISSING}" = "" ; then
    echo You have unpacked all 25 archives.
    echo "Now read tripwire-1.1/README.kits"
    rm -f ark[1-9]isdone ark[1-9][0-9]isdone
else
    echo You still need to unpack the following archives:
    echo "        " ${MISSING}
fi
##  End of shell archive.
exit 0
