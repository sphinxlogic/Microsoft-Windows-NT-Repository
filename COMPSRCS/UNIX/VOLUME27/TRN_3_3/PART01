Newsgroups: comp.sources.unix
From: davison@borland.com (Wayne Davison)
Subject: v27i094: trn-3.3 - threaded newsreader based on RN, V3.3, Part01/12
Message-id: <1.754431075.7231@gw.home.vix.com>
Sender: unix-sources-moderator@gw.home.vix.com
Approved: vixie@gw.home.vix.com

Submitted-By: davison@borland.com (Wayne Davison)
Posting-Number: Volume 27, Issue 94
Archive-Name: trn-3.3/part01

#! /bin/sh
# This is a shell archive.  Remove anything before this line, then unpack
# it by saving it into a file and typing "sh file".  To overwrite existing
# files, type "sh file -c".  You can also feed this as standard input via
# unshar, or by typing "sh <file", e.g..  If this archive is complete, you
# will see the following message at the end:
#		"End of archive 1 (of 12)."
# Contents:  EXTERN.h INIT INTERN.h MANIFEST README addng.h art.h
#   artio.h artsrch.h artstate.h autosub.c autosub.h backpage.h bits.h
#   decode.c decode.h final.h getactive.c hash.h help.h hints
#   hints/aix_rs.sh hints/altos486.sh hints/convexos.sh
#   hints/dec_osf1.sh hints/dgux.sh hints/dynix.sh hints/hp9000_800.sh
#   hints/hpux.sh hints/i386.sh hints/isc_2_2_1.sh hints/isc_3_2_2.sh
#   hints/isc_3_2_3.sh hints/mc6000.sh hints/mips.sh hints/next.sh
#   hints/osf1.sh hints/sco_3.sh hints/sco_3_2_4.sh hints/sco_xenix.sh
#   hints/sgi.sh hints/solaris_2_0.sh hints/solaris_2_1.sh
#   hints/solaris_2_2.sh hints/sunos_4_1.sh hints/svr4.sh init.h
#   intrp.h kfile.h last.c last.h makedir.SH mbox.saver.SH ndir.c
#   ndir.h newsetup.1 newsgroups.1 newsnews.SH ng.h ngdata.h ngsrch.h
#   ngstuff.h nntp nntp.h nntp/support.patch nntpclient.h
#   norm.saver.SH only.h overview.h patchlevel.h rcln.h rcstuff.h
#   respond.h rt-mt.h rt-ov.h rt-page.h rt-process.h rt-select.h
#   rt-util.h rt-wumpus.h search.h sw.h trn.h unipatch.c util.h
# Wrapped by vixie@gw.home.vix.com on Sun Nov 21 01:13:58 1993
PATH=/bin:/usr/bin:/usr/ucb ; export PATH
if test -f 'EXTERN.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'EXTERN.h'\"
else
echo shar: Extracting \"'EXTERN.h'\" \(725 characters\)
sed "s/^X//" >'EXTERN.h' <<'END_OF_FILE'
X/* $Id: EXTERN.h,v 3.0 1991/09/09 20:18:23 davison Trn $
X */
X/* This software is Copyright 1991 by Stan Barber. 
X *
X * Permission is hereby granted to copy, reproduce, redistribute or otherwise
X * use this software as long as: there is no monetary profit gained
X * specifically from the use or reproduction of this software, it is not
X * sold, rented, traded or otherwise marketed, and this copyright notice is
X * included prominently in any copy made. 
X *
X * The authors make no claims as to the fitness or correctness of this software
X * for any use whatsoever, and it is provided as is. Any use of this software
X * is at the user's own risk. 
X */
X
X#undef EXT
X#define EXT extern
X
X#undef INIT
X#define INIT(x)
X
X#undef DOINIT
END_OF_FILE
if test 725 -ne `wc -c <'EXTERN.h'`; then
    echo shar: \"'EXTERN.h'\" unpacked with wrong size!
fi
# end of 'EXTERN.h'
fi
if test -f 'INIT' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'INIT'\"
else
echo shar: Extracting \"'INIT'\" \(8 characters\)
sed "s/^X//" >'INIT' <<'END_OF_FILE'
X+Hfrom 
END_OF_FILE
if test 8 -ne `wc -c <'INIT'`; then
    echo shar: \"'INIT'\" unpacked with wrong size!
fi
# end of 'INIT'
fi
if test -f 'INTERN.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'INTERN.h'\"
else
echo shar: Extracting \"'INTERN.h'\" \(768 characters\)
sed "s/^X//" >'INTERN.h' <<'END_OF_FILE'
X/* $Id: INTERN.h,v 3.0 1991/09/09 20:18:23 davison Trn $
X */
X/* This software is Copyright 1991 by Stan Barber. 
X *
X * Permission is hereby granted to copy, reproduce, redistribute or otherwise
X * use this software as long as: there is no monetary profit gained
X * specifically from the use or reproduction of this software, it is not
X * sold, rented, traded or otherwise marketed, and this copyright notice is
X * included prominently in any copy made. 
X *
X * The authors make no claims as to the fitness or correctness of this software
X * for any use whatsoever, and it is provided as is. Any use of this software
X * is at the user's own risk. 
X */
X
X#undef EXT
X#define EXT
X
X#undef INIT
X#ifdef xenix
X#define INIT(x) =x
X#else
X#define INIT(x) = x
X#endif
X
X#define DOINIT
END_OF_FILE
if test 768 -ne `wc -c <'INTERN.h'`; then
    echo shar: \"'INTERN.h'\" unpacked with wrong size!
fi
# end of 'INTERN.h'
fi
if test -f 'MANIFEST' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'MANIFEST'\"
else
echo shar: Extracting \"'MANIFEST'\" \(4870 characters\)
sed "s/^X//" >'MANIFEST' <<'END_OF_FILE'
X   File Name		Archive #	Description
X-----------------------------------------------------------
X Configure                 11	
X EXTERN.h                   1	
X HACKERSGUIDE               2	
X HINTS                      2	
X INIT                       1	
X INSTALL                    2	
X INTERN.h                   1	
X MANIFEST                   1	
X Makefile.SH                2	
X NEW                        5	
X Pnews.1                    2	
X Pnews.SH                   7	
X README                     1	
X Rnmail.1                   2	
X Rnmail.SH                  3	
X Speller.SH                 2	
X addng.c                    3	
X addng.h                    1	
X art.c                      9	
X art.h                      1	
X artcheck.c                 2	
X artio.c                    2	
X artio.h                    1	
X artsrch.c                  3	
X artsrch.h                  1	
X artstate.h                 1	
X autosub.c                  1	
X autosub.h                  1	
X backpage.c                 2	
X backpage.h                 1	
X bits.c                     6	
X bits.h                     1	
X cache.c                    6	
X cache.h                    2	
X common.h                   8	
X config.h.SH                5	
X decode.c                   1	
X decode.h                   1	
X dependencies               5	
X edit_dist.c                3	
X final.c                    2	
X final.h                    1	
X getactive.c                1	
X hash.c                     3	
X hash.h                     1	
X head.c                     4	
X head.h                     2	
X help.c                     6	
X help.h                     1	
X hints                      1	
X hints/aix_rs.sh            1	
X hints/altos486.sh          1	
X hints/convexos.sh          1	
X hints/dec_osf1.sh          1	
X hints/dgux.sh              1	
X hints/dynix.sh             1	
X hints/hp9000_800.sh        1	
X hints/hpux.sh              1	
X hints/i386.sh              1	
X hints/isc_2_2_1.sh         1	
X hints/isc_3_2_2.sh         1	
X hints/isc_3_2_3.sh         1	
X hints/mc6000.sh            1	
X hints/mips.sh              1	
X hints/next.sh              1	
X hints/osf1.sh              1	
X hints/sco_3.sh             1	
X hints/sco_3_2_4.sh         1	
X hints/sco_xenix.sh         1	
X hints/sgi.sh               1	
X hints/solaris_2_0.sh       1	
X hints/solaris_2_1.sh       1	
X hints/solaris_2_2.sh       1	
X hints/sunos_4_1.sh         1	
X hints/svr4.sh              1	
X init.c                     2	
X init.h                     1	
X intrp.c                    9	
X intrp.h                    1	
X kfile.c                    4	
X kfile.h                    1	
X last.c                     1	
X last.h                     1	
X makedepend.SH              2	
X makedir.SH                 1	
X mbox.saver.SH              1	
X ndir.c                     1	
X ndir.h                     1	
X newsetup.1                 1	
X newsetup.SH                2	
X newsgroups.1               1	
X newsgroups.SH              2	
X newsnews.SH                1	
X ng.c                      10	
X ng.h                       1	
X ngdata.c                   2	
X ngdata.h                   1	
X nghash.c                   3	
X ngsrch.c                   2	
X ngsrch.h                   1	
X ngstuff.c                  4	
X ngstuff.h                  1	
X nntp                       1	
X nntp.c                     3	
X nntp.h                     1	
X nntp/acttimes.c            4	
X nntp/nntp.patch            7	
X nntp/support.patch         1	
X nntpclient.c               2	
X nntpclient.h               1	
X nntpinit.c                 3	
X norm.saver.SH              1	
X only.c                     2	
X only.h                     1	
X overview.h                 1	
X parsedate.y                8	
X patchlevel.h               1	
X rcln.c                     4	
X rcln.h                     1	
X rcstuff.c                  8	
X rcstuff.h                  1	
X respond.c                  7	
X respond.h                  1	
X rt-mt.c                    7	
X rt-mt.h                    1	
X rt-ov.c                    3	
X rt-ov.h                    1	
X rt-page.c                  6	
X rt-page.h                  1	
X rt-process.c               4	
X rt-process.h               1	
X rt-select.c                8	
X rt-select.h                1	
X rt-util.c                  5	
X rt-util.h                  1	
X rt-wumpus.c                5	
X rt-wumpus.h                1	
X rthread.c                 10	
X rthread.h                  2	
X search.c                   5	
X search.h                   1	
X strftime.c                 2	
X sw.c                       5	
X sw.h                       1	
X term.c                     9	
X term.h                     3	
X trn.1                     12	
X trn.c                      6	
X trn.h                      1	
X unipatch.c                 1	
X unship.c                   4	
X util.c                     4	
X util.h                     1	
X uudecode.c                 3	
END_OF_FILE
if test 4870 -ne `wc -c <'MANIFEST'`; then
    echo shar: \"'MANIFEST'\" unpacked with wrong size!
fi
# end of 'MANIFEST'
fi
if test -f 'README' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'README'\"
else
echo shar: Extracting \"'README'\" \(3792 characters\)
sed "s/^X//" >'README' <<'END_OF_FILE'
X			  Trn Kit, Version 3.0
X
X		    Copyright (c) 1993, Wayne Davison
X
X			Based on rn, Version 4.4
X
X		     Copyright (c) 1985, Larry Wall
X                     Copyright (c) 1991, Stan Barber
X
XYou may copy the trn kit in whole or in part as long as you don't try to
Xmake money off it, or pretend that you wrote it.
X--------------------------------------------------------------------------
X
XSee the file INSTALL for installation instructions.  Failure to do so
Xmay void your warranty. :-)
X
XAfter you have unpacked your kit, you should have all the files listed
Xin MANIFEST (Configure checks this for you).
X
X
XWhat is trn?
X------------
XTrn is Threaded RN -- a newsreader that uses an article's references to
Xorder the discussions in a very natural, reply-ordered sequence called
Xthreads.  Having the replies associated with their parent articles not
Xonly makes following the discussion easier, but also makes it easy to back-
Xtrack and (re-)read a specific discussion from the beginning.  Trn also
Xhas a visual representation of the current thread in the upper right corner
Xof the header, which will give you a feel for how the discussion is going
Xand how the current article is related to the last one you read.
X
XIn addition, a thread selector makes it easy to browse through a large
Xgroup looking for interesting articles.  You can even browse through the
Xarticles you've already read and select the one(s) you wish to read again.
XOther nice features include the extract commands for the source and binary
Xgroups, thread-oriented kill directives, a better newgroup finding strategy,
Xand lots more.  See the file NEW for a list of the things that are new to
Xtrn 3.0 from previous versions.
X
XTo make trn work faster you will probably want to create an auxiliary news
Xdatabase that summarises the available articles.  Trn know how to use two
Xdifferent kinds (so far):  thread files, which are maintained by the mthreads
Xpackage and typically requires 3-5% of your newsspool size in disk storage;
Xand overview files, which are maintained by INN v1.3 (or greater) or a
Xmodified version of C news and typically requires 8-10% of your newsspool
Xsize in disk storage.  (Note that the space that mthreads saves you on your
Xdisk is paid for by a higher demand on your cpu and disks while updating
Xthe files.)  See the package of your choice for details on how to setup
Xthe adjunct database, but it is not necessary to do this before trying
Xout trn.
X
XTrn supports local news groups and news accessed remotely via NNTP.  If you
Xopt for remote access you will probably want to make the adjunct database
Xavailable too.  You can do this in a variety of way, but I recommend that
Xyou send the database from the server to the client via NNTP.  To do this
Xyou either need to use INN or modify the reference NNTP (version 1.5.11)
Xwith the included patch (see nntp/nntp.patch).  This patch supports both
Xthe XOVER command (to send .overview files) and the XTHREAD command (to
Xsend .thread files).  The alternative is to either mount the disk containing
Xyour database via NFS, or build it locally.  See the mthreads package for
Xdetails on how to do this.
X
XNote that trn is based on rn, and so it does a great job of pretending to
Xbe rn for those people that simply don't like to change their newsreading
Xhabits.  It is possible to install trn as both rn and trn linked together
Xand have it act as both newsreaders, thus saving you the hassle of maint-
Xaining two separate newsreaders.  A Configuration question will ask you if
Xyou want trn to check its name on startup.
X
XWhere to send bug reports
X-------------------------
XMail your bug reports to Wayne Davison <davison@borland.com>.  If you use
Xthe 'v'ersion command from the newsgroup selection level of trn you will
Xbe reminded of this address should you forget.
END_OF_FILE
if test 3792 -ne `wc -c <'README'`; then
    echo shar: \"'README'\" unpacked with wrong size!
fi
# end of 'README'
fi
if test -f 'addng.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'addng.h'\"
else
echo shar: Extracting \"'addng.h'\" \(868 characters\)
sed "s/^X//" >'addng.h' <<'END_OF_FILE'
X/* $Id: addng.h,v 3.0 1992/02/01 03:09:32 davison Trn $
X */
X/* This software is Copyright 1991 by Stan Barber. 
X *
X * Permission is hereby granted to copy, reproduce, redistribute or otherwise
X * use this software as long as: there is no monetary profit gained
X * specifically from the use or reproduction of this software, it is not
X * sold, rented, traded or otherwise marketed, and this copyright notice is
X * included prominently in any copy made. 
X *
X * The authors make no claims as to the fitness or correctness of this software
X * for any use whatsoever, and it is provided as is. Any use of this software
X * is at the user's own risk. 
X */
X
Xvoid	addng_init _((void));
X#ifdef FINDNEWNG
Xbool	newlist _((bool_int,bool_int));
X# ifdef ACTIVE_TIMES
Xbool	find_new_groups _((void));
X# else
Xtime_t	birthof _((char*,ART_NUM));
X# endif
Xbool	scanactive _((void));
X#endif
END_OF_FILE
if test 868 -ne `wc -c <'addng.h'`; then
    echo shar: \"'addng.h'\" unpacked with wrong size!
fi
# end of 'addng.h'
fi
if test -f 'art.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'art.h'\"
else
echo shar: Extracting \"'art.h'\" \(862 characters\)
sed "s/^X//" >'art.h' <<'END_OF_FILE'
X/* $Id: art.h,v 3.0 1991/09/09 20:18:23 davison Trn $
X */
X/* This software is Copyright 1991 by Stan Barber. 
X *
X * Permission is hereby granted to copy, reproduce, redistribute or otherwise
X * use this software as long as: there is no monetary profit gained
X * specifically from the use or reproduction of this software, it is not
X * sold, rented, traded or otherwise marketed, and this copyright notice is
X * included prominently in any copy made. 
X *
X * The authors make no claims as to the fitness or correctness of this software
X * for any use whatsoever, and it is provided as is. Any use of this software
X * is at the user's own risk. 
X */
X
X/* do_article() return values */
X
X#define DA_NORM 0
X#define DA_RAISE 1
X#define DA_CLEAN 2
X#define DA_TOEND 3
X
Xvoid	art_init _((void));
Xint	do_article _((void));
Xint	page_switch _((void));
Xbool	innermore _((void));
END_OF_FILE
if test 862 -ne `wc -c <'art.h'`; then
    echo shar: \"'art.h'\" unpacked with wrong size!
fi
# end of 'art.h'
fi
if test -f 'artio.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'artio.h'\"
else
echo shar: Extracting \"'artio.h'\" \(1115 characters\)
sed "s/^X//" >'artio.h' <<'END_OF_FILE'
X/* $Id: artio.h,v 3.0 1991/09/09 20:18:23 davison Trn $
X */
X/* This software is Copyright 1991 by Stan Barber. 
X *
X * Permission is hereby granted to copy, reproduce, redistribute or otherwise
X * use this software as long as: there is no monetary profit gained
X * specifically from the use or reproduction of this software, it is not
X * sold, rented, traded or otherwise marketed, and this copyright notice is
X * included prominently in any copy made. 
X *
X * The authors make no claims as to the fitness or correctness of this software
X * for any use whatsoever, and it is provided as is. Any use of this software
X * is at the user's own risk. 
X */
X
XEXT ART_POS artpos INIT(0);	/* byte position in article file */
X
XEXT ART_LINE artline INIT(0);	/* current line number in article file */
XEXT FILE *artfp INIT(Nullfp);	/* current article file pointer */
XEXT ART_NUM openart INIT(0);	/* the article number we have open */
X
Xvoid artio_init _((void));
XFILE *artopen _((ART_NUM));	/* open an article unless already opened */
X#ifdef LINKART
XEXT char *linkartname INIT(nullstr);/* real name of article for Eunice */
X#endif
END_OF_FILE
if test 1115 -ne `wc -c <'artio.h'`; then
    echo shar: \"'artio.h'\" unpacked with wrong size!
fi
# end of 'artio.h'
fi
if test -f 'artsrch.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'artsrch.h'\"
else
echo shar: Extracting \"'artsrch.h'\" \(1698 characters\)
sed "s/^X//" >'artsrch.h' <<'END_OF_FILE'
X/* $Id: artsrch.h,v 3.0 1992/02/01 03:09:32 davison Trn $
X */
X/* This software is Copyright 1991 by Stan Barber. 
X *
X * Permission is hereby granted to copy, reproduce, redistribute or otherwise
X * use this software as long as: there is no monetary profit gained
X * specifically from the use or reproduction of this software, it is not
X * sold, rented, traded or otherwise marketed, and this copyright notice is
X * included prominently in any copy made. 
X *
X * The authors make no claims as to the fitness or correctness of this software
X * for any use whatsoever, and it is provided as is. Any use of this software
X * is at the user's own risk. 
X */
X
X#ifndef NBRA
X#include "search.h"
X#endif
X
X#ifdef ARTSEARCH
X
X#define SRCH_ABORT 0
X#define SRCH_INTR 1
X#define SRCH_FOUND 2
X#define SRCH_NOTFOUND 3
X#define SRCH_DONE 4
X#define SRCH_SUBJDONE 5
X#define SRCH_ERROR 6
X#endif
X
XEXT char *lastpat INIT(nullstr);	/* last search pattern */
X#ifdef ARTSEARCH
XEXT COMPEX sub_compex;		/* last compiled subject search */
XEXT COMPEX art_compex;		/* last compiled normal search */
X#   ifdef CONDSUB
XEXT COMPEX *bra_compex INIT(&(art_compex));
X					/* current compex with brackets */
X#   endif
X
X#define ARTSCOPE_SUBJECT	0
X#define ARTSCOPE_FROM		1
X#define ARTSCOPE_ONEHDR		2
X#define ARTSCOPE_HEAD		3
X#define ARTSCOPE_ARTICLE	4
X
XEXT char scopestr[] INIT("sfHha");
XEXT char art_howmuch;		/* search scope */
XEXT char *art_srchhdr;		/* specific header to search or NULL */
XEXT bool art_doread;		/* search read articles? */
X#endif
X
Xvoid	artsrch_init _((void));
X#ifdef ARTSEARCH
Xint	art_search _((char*, int, int));
Xbool	wanted _((COMPEX*, ART_NUM, char_int));
X			/* return TRUE if current article matches pattern */
X#endif
END_OF_FILE
if test 1698 -ne `wc -c <'artsrch.h'`; then
    echo shar: \"'artsrch.h'\" unpacked with wrong size!
fi
# end of 'artsrch.h'
fi
if test -f 'artstate.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'artstate.h'\"
else
echo shar: Extracting \"'artstate.h'\" \(1415 characters\)
sed "s/^X//" >'artstate.h' <<'END_OF_FILE'
X/* $Id: artstate.h,v 3.0 1991/09/09 20:18:23 davison Trn $
X */
X/* This software is Copyright 1991 by Stan Barber. 
X *
X * Permission is hereby granted to copy, reproduce, redistribute or otherwise
X * use this software as long as: there is no monetary profit gained
X * specifically from the use or reproduction of this software, it is not
X * sold, rented, traded or otherwise marketed, and this copyright notice is
X * included prominently in any copy made. 
X *
X * The authors make no claims as to the fitness or correctness of this software
X * for any use whatsoever, and it is provided as is. Any use of this software
X * is at the user's own risk. 
X */
X
XEXT bool reread INIT(FALSE);		/* consider current art temporarily */
X					/* unread? */
X
XEXT bool do_fseek INIT(FALSE);	/* should we back up in article file? */
X
XEXT bool oldsubject INIT(FALSE);	/* not 1st art in subject thread */
XEXT ART_LINE topline INIT(-1);		/* top line of current screen */
XEXT bool do_hiding INIT(TRUE);		/* hide header lines with -h? */
X#ifdef ROTATION
XEXT bool rotate INIT(FALSE);		/* has rotation been requested? */
X#endif
XEXT char *prompt;			/* pointer to current prompt */
X
XEXT char *firstline INIT(Nullch);			/* special first line? */
X#ifdef CUSTOMLINES
XEXT char *hideline INIT(Nullch);		/* custom line hiding? */
XEXT char *pagestop INIT(Nullch);		/* custom page terminator? */
XEXT COMPEX hide_compex;
XEXT COMPEX page_compex;
X#endif
END_OF_FILE
if test 1415 -ne `wc -c <'artstate.h'`; then
    echo shar: \"'artstate.h'\" unpacked with wrong size!
fi
# end of 'artstate.h'
fi
if test -f 'autosub.c' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'autosub.c'\"
else
echo shar: Extracting \"'autosub.c'\" \(1888 characters\)
sed "s/^X//" >'autosub.c' <<'END_OF_FILE'
X/* $Id: autosub.c,v 3.0 1992/02/01 03:09:32 davison Trn $
X */
X/* This software is Copyright 1991 by Stan Barber. 
X *
X * Permission is hereby granted to copy, reproduce, redistribute or otherwise
X * use this software as long as: there is no monetary profit gained
X * specifically from the use or reproduction of this software, it is not
X * sold, rented, traded or otherwise marketed, and this copyright notice is
X * included prominently in any copy made. 
X *
X * The authors make no claims as to the fitness or correctness of this software
X * for any use whatsoever, and it is provided as is. Any use of this software
X * is at the user's own risk. 
X */
X
X#include "EXTERN.h"
X#include "common.h"
X#include "search.h"
X#include "ngsrch.h"
X#include "util.h"
X#include "final.h"
X#include "INTERN.h"
X#include "autosub.h"
X
X/* Consider the newsgroup specified, and return:	*/
X/* : if we should autosubscribe to it			*/
X/* ! if we should autounsubscribe to it			*/
X/* \0 if we should ask the user.			*/
Xint
Xauto_subscribe(ng)
Xchar *ng;
X{
X    char *s;
X
X    if((s = getval("AUTOSUBSCRIBE", (char *)NULL))
X	&& matchlist(s, ng)) return ':';
X    if((s = getval("AUTOUNSUBSCRIBE", (char *)NULL))
X	&& matchlist(s, ng)) return '!';
X    return 0;
X}
X
Xbool
Xmatchlist(patlist, s)
Xchar *patlist;
Xchar *s;
X{
X    COMPEX ilcompex;
X    char *p;
X    char *err;
X    bool result;
X    bool tmpresult;
X
X    result = FALSE;
X    init_compex(&ilcompex);
X    while(patlist && *patlist) {
X
X	if(*patlist == '!') {
X		patlist++;
X		tmpresult = FALSE;
X	} else tmpresult = TRUE;
X
X	if(p = index(patlist, ',')) *p = '\0';
X        /* compile regular expression */
X	err = ng_comp(&ilcompex,patlist,TRUE,TRUE);
X	if(p) *p++ = ',';
X
X	if(err != Nullch) {
X	    printf("\n%s\n", err) FLUSH;
X	    finalize(1);
X	}
X	
X	if (execute(&ilcompex,s) != Nullch)
X	    result = tmpresult;
X	patlist = p;
X    }
X    free_compex(&ilcompex);
X    return result;
X}
END_OF_FILE
if test 1888 -ne `wc -c <'autosub.c'`; then
    echo shar: \"'autosub.c'\" unpacked with wrong size!
fi
# end of 'autosub.c'
fi
if test -f 'autosub.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'autosub.h'\"
else
echo shar: Extracting \"'autosub.h'\" \(725 characters\)
sed "s/^X//" >'autosub.h' <<'END_OF_FILE'
X/* $Id: autosub.h,v 3.0 1991/09/09 20:18:23 davison Trn $
X */
X/* This software is Copyright 1991 by Stan Barber. 
X *
X * Permission is hereby granted to copy, reproduce, redistribute or otherwise
X * use this software as long as: there is no monetary profit gained
X * specifically from the use or reproduction of this software, it is not
X * sold, rented, traded or otherwise marketed, and this copyright notice is
X * included prominently in any copy made. 
X *
X * The authors make no claims as to the fitness or correctness of this software
X * for any use whatsoever, and it is provided as is. Any use of this software
X * is at the user's own risk. 
X */
X
XEXT int auto_subscribe _((char*));
XEXT bool matchlist _((char*, char*));
END_OF_FILE
if test 725 -ne `wc -c <'autosub.h'`; then
    echo shar: \"'autosub.h'\" unpacked with wrong size!
fi
# end of 'autosub.h'
fi
if test -f 'backpage.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'backpage.h'\"
else
echo shar: Extracting \"'backpage.h'\" \(1030 characters\)
sed "s/^X//" >'backpage.h' <<'END_OF_FILE'
X/* $Id: backpage.h,v 3.0 1991/09/09 20:18:23 davison Trn $
X */
X/* This software is Copyright 1991 by Stan Barber. 
X *
X * Permission is hereby granted to copy, reproduce, redistribute or otherwise
X * use this software as long as: there is no monetary profit gained
X * specifically from the use or reproduction of this software, it is not
X * sold, rented, traded or otherwise marketed, and this copyright notice is
X * included prominently in any copy made. 
X *
X * The authors make no claims as to the fitness or correctness of this software
X * for any use whatsoever, and it is provided as is. Any use of this software
X * is at the user's own risk. 
X */
X
X/* things for doing the 'back page' command */
X
XEXT int varyfd INIT(0);			/* virtual array file for storing  */
X					/* file offsets */
XEXT ART_POS varybuf[VARYSIZE];		/* current window onto virtual array */
X
XEXT long oldoffset INIT(-1);		/* offset to block currently in window */
X
Xvoid	backpage_init _((void));
XART_POS	vrdary _((ART_LINE));
Xvoid	vwtary _((ART_LINE,ART_POS));
END_OF_FILE
if test 1030 -ne `wc -c <'backpage.h'`; then
    echo shar: \"'backpage.h'\" unpacked with wrong size!
fi
# end of 'backpage.h'
fi
if test -f 'bits.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'bits.h'\"
else
echo shar: Extracting \"'bits.h'\" \(1657 characters\)
sed "s/^X//" >'bits.h' <<'END_OF_FILE'
X/* $Id: bits.h,v 3.0 1991/09/09 20:18:23 davison Trn $
X */
X/* This software is Copyright 1991 by Stan Barber. 
X *
X * Permission is hereby granted to copy, reproduce, redistribute or otherwise
X * use this software as long as: there is no monetary profit gained
X * specifically from the use or reproduction of this software, it is not
X * sold, rented, traded or otherwise marketed, and this copyright notice is
X * included prominently in any copy made. 
X *
X * The authors make no claims as to the fitness or correctness of this software
X * for any use whatsoever, and it is provided as is. Any use of this software
X * is at the user's own risk. 
X */
X
XEXT char *found_bits INIT(Nullch);
XEXT ART_NUM found_min;
X
X/* if subscripting is faster than shifting on your machine, define this */
X#undef USESUBSCRIPT
X#ifdef USESUBSCRIPT
XEXT char powerof2[] INIT({1,2,4,8,16,32,64,128});
X#define pow2(x) powerof2[x]
X#else
X#define pow2(x) (1 << (x))
X#endif
X
X#define foundart(a) (found_bits[((a)-found_min) / BITSPERBYTE] \
X	|= pow2(((a)-found_min) % BITSPERBYTE))
X#define artismissing(a) (!(found_bits[((a)-found_min) / BITSPERBYTE] \
X	& pow2(((a)-found_min) % BITSPERBYTE)))
X
XEXT int dmcount INIT(0);
X
Xvoid	bits_init _((void));
Xvoid	rc_to_bits _((void));
Xvoid	bits_to_rc _((void));
Xvoid	setfoundbits _((void));
Xvoid	setmissingbits _((void));
Xvoid	onemore _((ARTICLE*));
Xvoid	oneless _((ARTICLE*));
Xvoid	onemissing _((ARTICLE*));
Xvoid	unmark_as_read _((void));
Xvoid	set_read _((ARTICLE*));
Xvoid	set_unread _((ARTICLE*));
Xvoid	delay_unmark _((ARTICLE*));
Xvoid	mark_as_read _((void));
Xvoid	check_first _((ART_NUM));
Xvoid	yankback _((void));
Xint	chase_xrefs _((ART_NUM,int));
END_OF_FILE
if test 1657 -ne `wc -c <'bits.h'`; then
    echo shar: \"'bits.h'\" unpacked with wrong size!
fi
# end of 'bits.h'
fi
if test -f 'decode.c' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'decode.c'\"
else
echo shar: Extracting \"'decode.c'\" \(562 characters\)
sed "s/^X//" >'decode.c' <<'END_OF_FILE'
X/* $Id: decode.c,v 3.0 1991/11/22 04:12:25 davison Trn $
X */
X/* The authors make no claims as to the fitness or correctness of this software
X * for any use whatsoever, and it is provided as is. Any use of this software
X * is at the user's own risk. 
X */
X
X#include "EXTERN.h"
X#include "common.h"
X#include "INTERN.h"
X#include "decode.h"
X
Xvoid
Xdecode_init()
X{
X    unship_init();
X}
X
Xvoid
Xdecode_end()
X{
X    if (decode_fp != Nullfp) {
X	fclose(decode_fp);
X	decode_fp = Nullfp;
X	printf("\n%s INCOMPLETE -- removed.\n", decode_dest) FLUSH;
X	unlink(decode_dest);
X    }
X}
END_OF_FILE
if test 562 -ne `wc -c <'decode.c'`; then
    echo shar: \"'decode.c'\" unpacked with wrong size!
fi
# end of 'decode.c'
fi
if test -f 'decode.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'decode.h'\"
else
echo shar: Extracting \"'decode.h'\" \(578 characters\)
sed "s/^X//" >'decode.h' <<'END_OF_FILE'
X/* $Id: decode.h,v 3.0 1991/11/22 04:12:25 davison Trn $
X */
X/* The authors make no claims as to the fitness or correctness of this software
X * for any use whatsoever, and it is provided as is. Any use of this software
X * is at the user's own risk. 
X */
X
XEXT FILE *decode_fp INIT(NULL);
XEXT char decode_fname[MAXFILENAME];
XEXT char decode_dest[MAXFILENAME];
XEXT int decode_type;
X
Xvoid decode_init _((void));
Xvoid decode_end _((void));
X
Xvoid uud_start _((void));
Xint uudecode _((FILE*));
X
Xvoid unship_init _((void));
Xint unship _((FILE*));
X
X#define UUDECODE 0
X#define UNSHIP   1
END_OF_FILE
if test 578 -ne `wc -c <'decode.h'`; then
    echo shar: \"'decode.h'\" unpacked with wrong size!
fi
# end of 'decode.h'
fi
if test -f 'final.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'final.h'\"
else
echo shar: Extracting \"'final.h'\" \(1325 characters\)
sed "s/^X//" >'final.h' <<'END_OF_FILE'
X/* $Id: final.h,v 3.0 1992/02/01 03:09:32 davison Trn $
X */
X/* This software is Copyright 1991 by Stan Barber. 
X *
X * Permission is hereby granted to copy, reproduce, redistribute or otherwise
X * use this software as long as: there is no monetary profit gained
X * specifically from the use or reproduction of this software, it is not
X * sold, rented, traded or otherwise marketed, and this copyright notice is
X * included prominently in any copy made. 
X *
X * The authors make no claims as to the fitness or correctness of this software
X * for any use whatsoever, and it is provided as is. Any use of this software
X * is at the user's own risk. 
X */
X
X/* cleanup status for fast exits */
X
XEXT bool panic INIT(FALSE);		/* we got hung up or something-- */
X					/*  so leave tty alone */
XEXT bool rc_changed INIT(FALSE);	/* need we rewrite .newsrc? */
XEXT bool doing_ng INIT(FALSE);		/* do we need to reconstitute */
X					/* current rc line? */
X
XEXT char int_count INIT(0);		/* how many interrupts we've had */
X
XEXT bool clear_on_stop INIT(FALSE);	/* set when handling the stop signal */
X					/* would leave the screen a mess */
X
X/* signal catching routines */
X
XSignal_t int_catcher _((int));
XSignal_t sig_catcher _((int));
X#ifdef SIGTSTP
XSignal_t stop_catcher _((int));
X#endif
X
Xvoid	final_init _((void));
Xvoid	finalize _((int));
END_OF_FILE
if test 1325 -ne `wc -c <'final.h'`; then
    echo shar: \"'final.h'\" unpacked with wrong size!
fi
# end of 'final.h'
fi
if test -f 'getactive.c' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'getactive.c'\"
else
echo shar: Extracting \"'getactive.c'\" \(2120 characters\)
sed "s/^X//" >'getactive.c' <<'END_OF_FILE'
X/* $Id: getactive.c,v 3.0 1991/09/09 20:18:23 davison Trn $
X */
X/* This software is Copyright 1991 by Stan Barber. 
X *
X * Permission is hereby granted to copy, reproduce, redistribute or otherwise
X * use this software as long as: there is no monetary profit gained
X * specifically from the use or reproduction of this software, it is not
X * sold, rented, traded or otherwise marketed, and this copyright notice is
X * included prominently in any copy made. 
X *
X * The authors make no claims as to the fitness or correctness of this software
X * for any use whatsoever, and it is provided as is. Any use of this software
X * is at the user's own risk. 
X */
X
X#include "EXTERN.h"
X#include "common.h"
X#include "nntpclient.h"
X
Xvoid finalize _((int));
X
Xint debug = 0;			/* make nntpclient.c happy */
X
Xint
Xmain(argc, argv)
Xint argc;
Xchar *argv[];
X{
X    char command[32];
X    char *action;
X    register FILE *actfp;
X
X    if (argc < 2 || argc > 3) {
X	fprintf(stderr, "Usage: getactive [active|distributions|newsgroups|subscriptions] filename\n");
X	exit(1);
X    }
X    if (argc == 2)
X	action = "ACTIVE";
X    else {
X	action = argv[1];
X	argc--;
X	argv++;
X    }
X    nntp_connect();
X    sprintf(command,"LIST %s",action);
X    nntp_command(command); 
X#ifdef HAS_SIGHOLD
X    sighold(SIGINT);
X#endif
X    if (nntp_check(FALSE) != NNTP_CLASS_OK) {
X	fprintf(stderr,"getactive: Can't get %s file from server.\n",action);
X	fprintf(stderr, "Server said: %s\n", ser_line);
X	finalize(1);
X    }
X
X    actfp = fopen(argv[1], "w");
X    if (actfp == NULL) {
X	perror(argv[1]);
X	finalize(1);
X    }
X
X    while (nntp_gets(ser_line, sizeof ser_line) >= 0) {
X	if (ser_line[0] == '.')		/* while there's another line */
X	    break;			/* get it and write it to */
X	if (actfp != NULL) {		/* the temporary active file */
X	    fputs(ser_line, actfp);
X	    putc('\n', actfp);
X	}
X    }
X
X    if (ferror(actfp)) {
X	perror(argv[1]);
X	finalize(1);
X    }
X    if (fclose(actfp) == EOF) {
X	perror(argv[1]);
X	finalize(1);
X    }
X
X#ifdef HAS_SIGHOLD
X    sigrelse(SIGINT);
X#endif
X    nntp_close();
X    return 0;
X}
X
Xvoid
Xfinalize(num)
Xint num;
X{
X    nntp_close();
X    exit(num);
X}
END_OF_FILE
if test 2120 -ne `wc -c <'getactive.c'`; then
    echo shar: \"'getactive.c'\" unpacked with wrong size!
fi
# end of 'getactive.c'
fi
if test -f 'hash.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'hash.h'\"
else
echo shar: Extracting \"'hash.h'\" \(1165 characters\)
sed "s/^X//" >'hash.h' <<'END_OF_FILE'
X/*
X * general-purpose in-core hashing
X */
X/* The authors make no claims as to the fitness or correctness of this software
X * for any use whatsoever, and it is provided as is. Any use of this software
X * is at the user's own risk. 
X */
X
X#define HASHDATUM struct hashdatum
XHASHDATUM {
X    char *dat_ptr;
X    unsigned dat_len;
X};
X
X#ifndef HASHTABLE
X#define HASHTABLE struct hashtable
X#endif
X
XEXT HASHTABLE *hashcreate _((unsigned, int(*)()));
XEXT void hashdestroy _((HASHTABLE*));
XEXT void hashstore _((HASHTABLE*,char*,int,HASHDATUM));
XEXT void hashdelete _((HASHTABLE*,char*,int));
XEXT HASHDATUM hashfetch _((HASHTABLE*,char*,int));
XEXT void hashstorelast _((HASHDATUM));
XEXT void hashwalk _((HASHTABLE*,void(*)(),int));
X
X/* Internal stuff */
X
X#ifdef DOINIT
X
X#define BADTBL(tbl)	(((tbl)->ht_magic&BYTEMASK) != HASHMAG)
X
X#define HASHMAG  0257
X#define BYTEMASK 0377
X
X#define HASHENT struct hashent
X
XHASHENT {
X    HASHENT *he_next;		/* in hash chain */
X    HASHDATUM he_data;
X    int he_keylen;		/* to help verify a match */
X};
X
XHASHTABLE {
X    HASHENT **ht_addr;		/* array of HASHENT pointers */
X    unsigned ht_size;
X    char ht_magic;
X    int (*ht_cmp)();
X};
X#endif
END_OF_FILE
if test 1165 -ne `wc -c <'hash.h'`; then
    echo shar: \"'hash.h'\" unpacked with wrong size!
fi
# end of 'hash.h'
fi
if test -f 'help.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'help.h'\"
else
echo shar: Extracting \"'help.h'\" \(821 characters\)
sed "s/^X//" >'help.h' <<'END_OF_FILE'
X/* $Id: help.h,v 3.0 1991/09/09 20:18:23 davison Trn $
X */
X/* This software is Copyright 1991 by Stan Barber. 
X *
X * Permission is hereby granted to copy, reproduce, redistribute or otherwise
X * use this software as long as: there is no monetary profit gained
X * specifically from the use or reproduction of this software, it is not
X * sold, rented, traded or otherwise marketed, and this copyright notice is
X * included prominently in any copy made. 
X *
X * The authors make no claims as to the fitness or correctness of this software
X * for any use whatsoever, and it is provided as is. Any use of this software
X * is at the user's own risk. 
X */
X
Xvoid	help_init _((void));
Xint	help_ng _((void));
Xint	help_art _((void));
Xint	help_page _((void));
X#ifdef ESCSUBS
Xint	help_subs _((void));
X#endif
Xint help_select _((void));
END_OF_FILE
if test 821 -ne `wc -c <'help.h'`; then
    echo shar: \"'help.h'\" unpacked with wrong size!
fi
# end of 'help.h'
fi
if test ! -d 'hints' ; then
    echo shar: Creating directory \"'hints'\"
    mkdir 'hints'
fi
if test -f 'hints/aix_rs.sh' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'hints/aix_rs.sh'\"
else
echo shar: Extracting \"'hints/aix_rs.sh'\" \(58 characters\)
sed "s/^X//" >'hints/aix_rs.sh' <<'END_OF_FILE'
Xcppstdin='/lib/cpp -D_AIX -D_IBMR2 -U__STR__'
Xcppminus=''
END_OF_FILE
if test 58 -ne `wc -c <'hints/aix_rs.sh'`; then
    echo shar: \"'hints/aix_rs.sh'\" unpacked with wrong size!
fi
# end of 'hints/aix_rs.sh'
fi
if test -f 'hints/altos486.sh' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'hints/altos486.sh'\"
else
echo shar: Extracting \"'hints/altos486.sh'\" \(111 characters\)
sed "s/^X//" >'hints/altos486.sh' <<'END_OF_FILE'
X: have heard of problems with -lc_s on Altos 486
Xset `echo " $libswanted " | sed "s/ c_s / /"`
Xlibswanted="$*"
END_OF_FILE
if test 111 -ne `wc -c <'hints/altos486.sh'`; then
    echo shar: \"'hints/altos486.sh'\" unpacked with wrong size!
fi
# end of 'hints/altos486.sh'
fi
if test -f 'hints/convexos.sh' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'hints/convexos.sh'\"
else
echo shar: Extracting \"'hints/convexos.sh'\" \(139 characters\)
sed "s/^X//" >'hints/convexos.sh' <<'END_OF_FILE'
Xi_sgtty=undef
Xi_termios=define
Xccflags="-D__STDC__ -ext -tm c1"
Xd_voidsig='define'
Xsignal_t='void'
Xd_strchr='undef'
Xlibc='/usr/lib/libc.a'
END_OF_FILE
if test 139 -ne `wc -c <'hints/convexos.sh'`; then
    echo shar: \"'hints/convexos.sh'\" unpacked with wrong size!
fi
# end of 'hints/convexos.sh'
fi
if test -f 'hints/dec_osf1.sh' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'hints/dec_osf1.sh'\"
else
echo shar: Extracting \"'hints/dec_osf1.sh'\" \(132 characters\)
sed "s/^X//" >'hints/dec_osf1.sh' <<'END_OF_FILE'
Xlibpth="$libpth /usr/shlib" # Use the shared libraries if possible
Xlibc='/usr/shlib/libc.so'   # The archive version is /lib/libc.a
END_OF_FILE
if test 132 -ne `wc -c <'hints/dec_osf1.sh'`; then
    echo shar: \"'hints/dec_osf1.sh'\" unpacked with wrong size!
fi
# end of 'hints/dec_osf1.sh'
fi
if test -f 'hints/dgux.sh' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'hints/dgux.sh'\"
else
echo shar: Extracting \"'hints/dgux.sh'\" \(60 characters\)
sed "s/^X//" >'hints/dgux.sh' <<'END_OF_FILE'
Xcppstdin='/lib/cpp'
Xlibs='-ldgc'
Xd_strchr='define'
Xcc='gcc'
END_OF_FILE
if test 60 -ne `wc -c <'hints/dgux.sh'`; then
    echo shar: \"'hints/dgux.sh'\" unpacked with wrong size!
fi
# end of 'hints/dgux.sh'
fi
if test -f 'hints/dynix.sh' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'hints/dynix.sh'\"
else
echo shar: Extracting \"'hints/dynix.sh'\" \(69 characters\)
sed "s/^X//" >'hints/dynix.sh' <<'END_OF_FILE'
Xlibswanted=`echo $libswanted | sed -e 's/socket /socket seq inet /'`
END_OF_FILE
if test 69 -ne `wc -c <'hints/dynix.sh'`; then
    echo shar: \"'hints/dynix.sh'\" unpacked with wrong size!
fi
# end of 'hints/dynix.sh'
fi
if test -f 'hints/hp9000_800.sh' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'hints/hp9000_800.sh'\"
else
echo shar: Extracting \"'hints/hp9000_800.sh'\" \(66 characters\)
sed "s/^X//" >'hints/hp9000_800.sh' <<'END_OF_FILE'
Xlibswanted=`echo $libswanted | sed -e 's/malloc //' -e 's/BSD //`
END_OF_FILE
if test 66 -ne `wc -c <'hints/hp9000_800.sh'`; then
    echo shar: \"'hints/hp9000_800.sh'\" unpacked with wrong size!
fi
# end of 'hints/hp9000_800.sh'
fi
if test -f 'hints/hpux.sh' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'hints/hpux.sh'\"
else
echo shar: Extracting \"'hints/hpux.sh'\" \(114 characters\)
sed "s/^X//" >'hints/hpux.sh' <<'END_OF_FILE'
Xcase `(uname -r) 2>/dev/null` in
X*2.1*) libswanted=`echo $libswanted | sed 's/malloc //'` ;;
Xesac
Xd_strchr=define
END_OF_FILE
if test 114 -ne `wc -c <'hints/hpux.sh'`; then
    echo shar: \"'hints/hpux.sh'\" unpacked with wrong size!
fi
# end of 'hints/hpux.sh'
fi
if test -f 'hints/i386.sh' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'hints/i386.sh'\"
else
echo shar: Extracting \"'hints/i386.sh'\" \(24 characters\)
sed "s/^X//" >'hints/i386.sh' <<'END_OF_FILE'
Xldflags='-L/usr/ucblib'
END_OF_FILE
if test 24 -ne `wc -c <'hints/i386.sh'`; then
    echo shar: \"'hints/i386.sh'\" unpacked with wrong size!
fi
# end of 'hints/i386.sh'
fi
if test -f 'hints/isc_2_2_1.sh' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'hints/isc_2_2_1.sh'\"
else
echo shar: Extracting \"'hints/isc_2_2_1.sh'\" \(14 characters\)
sed "s/^X//" >'hints/isc_2_2_1.sh' <<'END_OF_FILE'
Xd_ftime=undef
END_OF_FILE
if test 14 -ne `wc -c <'hints/isc_2_2_1.sh'`; then
    echo shar: \"'hints/isc_2_2_1.sh'\" unpacked with wrong size!
fi
# end of 'hints/isc_2_2_1.sh'
fi
if test -f 'hints/isc_3_2_2.sh' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'hints/isc_3_2_2.sh'\"
else
echo shar: Extracting \"'hints/isc_3_2_2.sh'\" \(86 characters\)
sed "s/^X//" >'hints/isc_3_2_2.sh' <<'END_OF_FILE'
Xset `echo $libswanted | sed -e 's/ x//' -e 's/malloc //'`
Xlibswanted="inet malloc $*"
END_OF_FILE
if test 86 -ne `wc -c <'hints/isc_3_2_2.sh'`; then
    echo shar: \"'hints/isc_3_2_2.sh'\" unpacked with wrong size!
fi
# end of 'hints/isc_3_2_2.sh'
fi
if test -f 'hints/isc_3_2_3.sh' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'hints/isc_3_2_3.sh'\"
else
echo shar: Extracting \"'hints/isc_3_2_3.sh'\" \(69 characters\)
sed "s/^X//" >'hints/isc_3_2_3.sh' <<'END_OF_FILE'
Xset `echo $libswanted | sed -e 's/ socket / inet /'`
Xlibswanted="$*"
END_OF_FILE
if test 69 -ne `wc -c <'hints/isc_3_2_3.sh'`; then
    echo shar: \"'hints/isc_3_2_3.sh'\" unpacked with wrong size!
fi
# end of 'hints/isc_3_2_3.sh'
fi
if test -f 'hints/mc6000.sh' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'hints/mc6000.sh'\"
else
echo shar: Extracting \"'hints/mc6000.sh'\" \(87 characters\)
sed "s/^X//" >'hints/mc6000.sh' <<'END_OF_FILE'
X# defaults for the masscomp (concurrent) 6000 series running RTU 5.0
Xcppstdin=/lib/cpp
END_OF_FILE
if test 87 -ne `wc -c <'hints/mc6000.sh'`; then
    echo shar: \"'hints/mc6000.sh'\" unpacked with wrong size!
fi
# end of 'hints/mc6000.sh'
fi
if test -f 'hints/mips.sh' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'hints/mips.sh'\"
else
echo shar: Extracting \"'hints/mips.sh'\" \(19 characters\)
sed "s/^X//" >'hints/mips.sh' <<'END_OF_FILE'
Xcc=cc
Xnm_opts='-B'
END_OF_FILE
if test 19 -ne `wc -c <'hints/mips.sh'`; then
    echo shar: \"'hints/mips.sh'\" unpacked with wrong size!
fi
# end of 'hints/mips.sh'
fi
if test -f 'hints/next.sh' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'hints/next.sh'\"
else
echo shar: Extracting \"'hints/next.sh'\" \(19 characters\)
sed "s/^X//" >'hints/next.sh' <<'END_OF_FILE'
Xlibswanted='sys_s'
END_OF_FILE
if test 19 -ne `wc -c <'hints/next.sh'`; then
    echo shar: \"'hints/next.sh'\" unpacked with wrong size!
fi
# end of 'hints/next.sh'
fi
if test -f 'hints/osf1.sh' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'hints/osf1.sh'\"
else
echo shar: Extracting \"'hints/osf1.sh'\" \(13 characters\)
sed "s/^X//" >'hints/osf1.sh' <<'END_OF_FILE'
Xlibswanted=m
END_OF_FILE
if test 13 -ne `wc -c <'hints/osf1.sh'`; then
    echo shar: \"'hints/osf1.sh'\" unpacked with wrong size!
fi
# end of 'hints/osf1.sh'
fi
if test -f 'hints/sco_3.sh' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'hints/sco_3.sh'\"
else
echo shar: Extracting \"'hints/sco_3.sh'\" \(72 characters\)
sed "s/^X//" >'hints/sco_3.sh' <<'END_OF_FILE'
Xlibswanted=`echo $libswanted | sed 's/ x//'`
Xcppminus=''
Xd_rename=undef
END_OF_FILE
if test 72 -ne `wc -c <'hints/sco_3.sh'`; then
    echo shar: \"'hints/sco_3.sh'\" unpacked with wrong size!
fi
# end of 'hints/sco_3.sh'
fi
if test -f 'hints/sco_3_2_4.sh' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'hints/sco_3_2_4.sh'\"
else
echo shar: Extracting \"'hints/sco_3_2_4.sh'\" \(62 characters\)
sed "s/^X//" >'hints/sco_3_2_4.sh' <<'END_OF_FILE'
Xxlibpth=''
Xmailer='/usr/lib/mail/execmail'
Xlibc='/lib/libc.a'
END_OF_FILE
if test 62 -ne `wc -c <'hints/sco_3_2_4.sh'`; then
    echo shar: \"'hints/sco_3_2_4.sh'\" unpacked with wrong size!
fi
# end of 'hints/sco_3_2_4.sh'
fi
if test -f 'hints/sco_xenix.sh' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'hints/sco_xenix.sh'\"
else
echo shar: Extracting \"'hints/sco_xenix.sh'\" \(60 characters\)
sed "s/^X//" >'hints/sco_xenix.sh' <<'END_OF_FILE'
Xi_dirent=undef
Xlibswanted=`echo $libswanted | sed 's/ x//'`
END_OF_FILE
if test 60 -ne `wc -c <'hints/sco_xenix.sh'`; then
    echo shar: \"'hints/sco_xenix.sh'\" unpacked with wrong size!
fi
# end of 'hints/sco_xenix.sh'
fi
if test -f 'hints/sgi.sh' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'hints/sgi.sh'\"
else
echo shar: Extracting \"'hints/sgi.sh'\" \(51 characters\)
sed "s/^X//" >'hints/sgi.sh' <<'END_OF_FILE'
Xd_voidsig=define
Xd_novfork=define
Xd_sigblock=undef
END_OF_FILE
if test 51 -ne `wc -c <'hints/sgi.sh'`; then
    echo shar: \"'hints/sgi.sh'\" unpacked with wrong size!
fi
# end of 'hints/sgi.sh'
fi
if test -f 'hints/solaris_2_0.sh' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'hints/solaris_2_0.sh'\"
else
echo shar: Extracting \"'hints/solaris_2_0.sh'\" \(16 characters\)
sed "s/^X//" >'hints/solaris_2_0.sh' <<'END_OF_FILE'
Xd_novfork=undef
END_OF_FILE
if test 16 -ne `wc -c <'hints/solaris_2_0.sh'`; then
    echo shar: \"'hints/solaris_2_0.sh'\" unpacked with wrong size!
fi
# end of 'hints/solaris_2_0.sh'
fi
if test -f 'hints/solaris_2_1.sh' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'hints/solaris_2_1.sh'\"
else
echo shar: Extracting \"'hints/solaris_2_1.sh'\" \(47 characters\)
sed "s/^X//" >'hints/solaris_2_1.sh' <<'END_OF_FILE'
Xd_novfork=undef
Xi_dirent=undef
Xi_sysdir=define
END_OF_FILE
if test 47 -ne `wc -c <'hints/solaris_2_1.sh'`; then
    echo shar: \"'hints/solaris_2_1.sh'\" unpacked with wrong size!
fi
# end of 'hints/solaris_2_1.sh'
fi
if test -f 'hints/solaris_2_2.sh' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'hints/solaris_2_2.sh'\"
else
echo shar: Extracting \"'hints/solaris_2_2.sh'\" \(97 characters\)
sed "s/^X//" >'hints/solaris_2_2.sh' <<'END_OF_FILE'
Xd_sigblock='undef'
Xd_getcwd='define'
Xd_getwd='undef'
Xlibs='-lmalloc -lsocket -lnls -lnsl -lintl'
END_OF_FILE
if test 97 -ne `wc -c <'hints/solaris_2_2.sh'`; then
    echo shar: \"'hints/solaris_2_2.sh'\" unpacked with wrong size!
fi
# end of 'hints/solaris_2_2.sh'
fi
if test -f 'hints/sunos_4_1.sh' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'hints/sunos_4_1.sh'\"
else
echo shar: Extracting \"'hints/sunos_4_1.sh'\" \(31 characters\)
sed "s/^X//" >'hints/sunos_4_1.sh' <<'END_OF_FILE'
Xi_sgtty=define
Xi_termios=undef
END_OF_FILE
if test 31 -ne `wc -c <'hints/sunos_4_1.sh'`; then
    echo shar: \"'hints/sunos_4_1.sh'\" unpacked with wrong size!
fi
# end of 'hints/sunos_4_1.sh'
fi
if test -f 'hints/svr4.sh' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'hints/svr4.sh'\"
else
echo shar: Extracting \"'hints/svr4.sh'\" \(125 characters\)
sed "s/^X//" >'hints/svr4.sh' <<'END_OF_FILE'
Xcc='/bin/cc'
Xtest -f $cc || cc='/usr/ccs/bin/cc'
Xmansrc='/usr/share/man/man1'
Xlibswanted='malloc socket nsl'
Xd_strchr=define
END_OF_FILE
if test 125 -ne `wc -c <'hints/svr4.sh'`; then
    echo shar: \"'hints/svr4.sh'\" unpacked with wrong size!
fi
# end of 'hints/svr4.sh'
fi
if test -f 'init.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'init.h'\"
else
echo shar: Extracting \"'init.h'\" \(793 characters\)
sed "s/^X//" >'init.h' <<'END_OF_FILE'
X/* $Id: init.h,v 3.0 1991/09/09 20:18:23 davison Trn $
X */
X/* This software is Copyright 1991 by Stan Barber. 
X *
X * Permission is hereby granted to copy, reproduce, redistribute or otherwise
X * use this software as long as: there is no monetary profit gained
X * specifically from the use or reproduction of this software, it is not
X * sold, rented, traded or otherwise marketed, and this copyright notice is
X * included prominently in any copy made. 
X *
X * The authors make no claims as to the fitness or correctness of this software
X * for any use whatsoever, and it is provided as is. Any use of this software
X * is at the user's own risk. 
X */
X
XEXT char *lockname INIT(nullstr);
XEXT long our_pid;
X
Xbool	initialize _((int,char**));
Xvoid	lock_check _((void));
Xvoid	newsnews_check _((void));
END_OF_FILE
if test 793 -ne `wc -c <'init.h'`; then
    echo shar: \"'init.h'\" unpacked with wrong size!
fi
# end of 'init.h'
fi
if test -f 'intrp.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'intrp.h'\"
else
echo shar: Extracting \"'intrp.h'\" \(1451 characters\)
sed "s/^X//" >'intrp.h' <<'END_OF_FILE'
X/* $Id: intrp.h,v 3.0 1992/02/01 03:09:32 davison Trn $
X */
X/* This software is Copyright 1991 by Stan Barber. 
X *
X * Permission is hereby granted to copy, reproduce, redistribute or otherwise
X * use this software as long as: there is no monetary profit gained
X * specifically from the use or reproduction of this software, it is not
X * sold, rented, traded or otherwise marketed, and this copyright notice is
X * included prominently in any copy made. 
X *
X * The authors make no claims as to the fitness or correctness of this software
X * for any use whatsoever, and it is provided as is. Any use of this software
X * is at the user's own risk. 
X */
X
XEXT char *lib INIT(Nullch);		/* news library */
XEXT char *rnlib INIT(Nullch);		/* private news program library */
XEXT char *origdir INIT(Nullch);		/* cwd when rn invoked */
XEXT char *homedir INIT(Nullch);		/* login directory */
XEXT char *dotdir INIT(Nullch);		/* where . files go */
XEXT char *loginName INIT(Nullch);	/* login id of user */
XEXT char *realname INIT(Nullch);	/* real name of user */
XEXT char *phostname INIT(Nullch);	/* host name in a posting */
XEXT int perform_cnt;
X
X#ifdef NEWS_ADMIN
X    EXT char newsadmin[] INIT(NEWS_ADMIN);/* news administrator */
X    EXT int newsuid INIT(0);
X#endif
X
Xvoid    intrp_init _((char*));
Xchar	*filexp _((char*));
Xchar	*dointerp _((char*,int,char*,char*));
Xvoid	interp _((char*,int,char*));
Xvoid	refscpy _((char*,int,char*));
Xchar	*getrealname _((long));
END_OF_FILE
if test 1451 -ne `wc -c <'intrp.h'`; then
    echo shar: \"'intrp.h'\" unpacked with wrong size!
fi
# end of 'intrp.h'
fi
if test -f 'kfile.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'kfile.h'\"
else
echo shar: Extracting \"'kfile.h'\" \(1254 characters\)
sed "s/^X//" >'kfile.h' <<'END_OF_FILE'
X/* $Id: kfile.h,v 3.0 1991/09/09 20:18:23 davison Trn $
X */
X/* This software is Copyright 1991 by Stan Barber. 
X *
X * Permission is hereby granted to copy, reproduce, redistribute or otherwise
X * use this software as long as: there is no monetary profit gained
X * specifically from the use or reproduction of this software, it is not
X * sold, rented, traded or otherwise marketed, and this copyright notice is
X * included prominently in any copy made. 
X *
X * The authors make no claims as to the fitness or correctness of this software
X * for any use whatsoever, and it is provided as is. Any use of this software
X * is at the user's own risk. 
X */
X
X#define KF_GLOBAL 0
X#define KF_LOCAL 1
X
X#ifdef KILLFILES
XEXT FILE *globkfp INIT(Nullfp);		/* global article killer file */
XEXT FILE *localkfp INIT(Nullfp);	/* local (for this newsgroup) file */
XEXT int localkf_changes;		/* do we need to write changes? */
XEXT bool has_normal_kills;		/* flag when KILLs needs rereading */
XEXT ART_NUM killfirst;			/* used as firstart when killing */
X#endif
X
Xvoid	kfile_init _((void));
Xint	do_kfile _((FILE*,int));
Xvoid	kill_unwanted _((ART_NUM,char*,int));
Xint	edit_kfile _((void));
Xvoid	open_kfile _((int));
Xvoid    kf_append _((char*));
Xvoid	rewrite_kfile _((ART_NUM));
END_OF_FILE
if test 1254 -ne `wc -c <'kfile.h'`; then
    echo shar: \"'kfile.h'\" unpacked with wrong size!
fi
# end of 'kfile.h'
fi
if test -f 'last.c' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'last.c'\"
else
echo shar: Extracting \"'last.c'\" \(1997 characters\)
sed "s/^X//" >'last.c' <<'END_OF_FILE'
X/* $Id: last.c,v 3.0 1992/02/01 03:09:32 davison Trn $
X */
X/* This software is Copyright 1991 by Stan Barber. 
X *
X * Permission is hereby granted to copy, reproduce, redistribute or otherwise
X * use this software as long as: there is no monetary profit gained
X * specifically from the use or reproduction of this software, it is not
X * sold, rented, traded or otherwise marketed, and this copyright notice is
X * included prominently in any copy made. 
X *
X * The authors make no claims as to the fitness or correctness of this software
X * for any use whatsoever, and it is provided as is. Any use of this software
X * is at the user's own risk. 
X */
X
X#include "EXTERN.h"
X#include "common.h"
X#include "trn.h"
X#include "util.h"
X#include "intrp.h"
X#include "INTERN.h"
X#include "last.h"
X
Xchar *lastname = Nullch;	/* path name of .rnlast file */
X
Xvoid
Xlast_init(tcbuf)
Xchar *tcbuf;
X{
X    lastname = savestr(filexp(LASTNAME));
X    if ((tmpfp = fopen(lastname,"r")) != Nullfp &&
X	fgets(tcbuf,1024,tmpfp) != Nullch) {
X	tcbuf[strlen(tcbuf)-1] = '\0';
X	lastngname = savestr(tcbuf);
X	fgets(tcbuf,1024,tmpfp);
X	lasttime = atol(tcbuf);
X	fgets(tcbuf,1024,tmpfp);
X	lastactsiz = atol(tcbuf);
X	if (fgets(tcbuf,1024,tmpfp) != Nullch)
X	    lastnewtime = atol(tcbuf);
X	else
X	    lastnewtime = (lasttime? lasttime : time(Null(time_t*))-24L*60*60);
X	if (fgets(tcbuf,1024,tmpfp) != Nullch)
X	    lastnewsize = atol(tcbuf);
X	else
X	    lastnewsize = 0;
X	fclose(tmpfp);
X    }
X    else {
X	lastngname = nullstr;
X	lasttime = 0;
X	lastactsiz = 0;
X	lastnewsize = 0;
X	/* Use yesterday as an initial value for finding new groups. */
X	lastnewtime = time(Null(time_t*)) - 24L*60*60;
X    }
X}
X
X/* put out certain values for next run of rn */
X
Xvoid
Xwritelast()
X{
X    if ((tmpfp = fopen(lastname,"w")) != Nullfp) {
X	fprintf(tmpfp,"%s\n%ld\n%ld\n%ld\n%ld\n",
X	    (ngname==Nullch?nullstr:ngname),(long)lasttime,(long)lastactsiz,
X	    (long)lastnewtime,(long)lastnewsize);
X	fclose(tmpfp);
X    }
X    else
X	printf(cantcreate,lastname) FLUSH;
X}
END_OF_FILE
if test 1997 -ne `wc -c <'last.c'`; then
    echo shar: \"'last.c'\" unpacked with wrong size!
fi
# end of 'last.c'
fi
if test -f 'last.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'last.h'\"
else
echo shar: Extracting \"'last.h'\" \(1082 characters\)
sed "s/^X//" >'last.h' <<'END_OF_FILE'
X/* $Id: last.h,v 3.0 1992/02/01 03:09:32 davison Trn $
X */
X/* This software is Copyright 1991 by Stan Barber. 
X *
X * Permission is hereby granted to copy, reproduce, redistribute or otherwise
X * use this software as long as: there is no monetary profit gained
X * specifically from the use or reproduction of this software, it is not
X * sold, rented, traded or otherwise marketed, and this copyright notice is
X * included prominently in any copy made. 
X *
X * The authors make no claims as to the fitness or correctness of this software
X * for any use whatsoever, and it is provided as is. Any use of this software
X * is at the user's own risk. 
X */
X
XEXT char *lastngname INIT(Nullch);	/* last newsgroup read, from .rnlast file */
XEXT time_t lasttime INIT(0);	/* time last rn was started up */
XEXT long lastactsiz INIT(0);	/* size of active file when rn last started up */
XEXT time_t lastnewtime INIT(0);	/* time last new group was found */
XEXT long lastnewsize INIT(0);	/* size of active.times file when rn last started up */
X
Xvoid	last_init _((char*));
Xvoid    writelast _((void));
END_OF_FILE
if test 1082 -ne `wc -c <'last.h'`; then
    echo shar: \"'last.h'\" unpacked with wrong size!
fi
# end of 'last.h'
fi
if test -f 'makedir.SH' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'makedir.SH'\"
else
echo shar: Extracting \"'makedir.SH'\" \(1082 characters\)
sed "s/^X//" >'makedir.SH' <<'END_OF_FILE'
Xcase $CONFIG in
X'') . ./config.sh ;;
Xesac
Xecho "Extracting makedir (with variable substitutions)"
X$spitshell >makedir <<!GROK!THIS!
X$startsh
X# $Id: makedir.SH,v 2.11 90/09/17 17:03:55 hokey Exp Locker: hokey $
X# 
X# $Log:	makedir.SH,v $
X# Revision 2.11  90/09/17  17:03:55  hokey
X# 2.11 alpha baseline
X# 
X
Xexport PATH || (echo "OOPS, this isn't sh.  Desperation time.  I will feed myself to sh."; sh \$0; kill \$\$)
X
Xcase \$# in
X  0)
X    $echo "makedir pathname filenameflag"
X    exit 1
X    ;;
Xesac
X
X: guarantee one slash before 1st component
Xcase \$1 in
X  /*) ;;
X  *)  set ./\$1 \$2 ;;
Xesac
X
X: strip last component if it is to be a filename
Xcase X\$2 in
X  X1) set \`$echo \$1 | $sed 's:\(.*\)/[^/]*\$:\1:'\` ;;
X  *)  set \$1 ;;
Xesac
X
X: return reasonable status if nothing to be created
Xif $test -d "\$1" ; then
X    exit 0
Xfi
X
Xlist=''
Xwhile true ; do
X    case \$1 in
X    */*)
X	list="\$1 \$list"
X	set \`echo \$1 | $sed 's:\(.*\)/:\1 :'\`
X	;;
X    *)
X	break
X	;;
X    esac
Xdone
X
Xset \$list
X
Xfor dir do
X    $mkdir \$dir >/dev/null 2>&1
Xdone
X!GROK!THIS!
X$eunicefix makedir
Xchmod +x makedir
END_OF_FILE
if test 1082 -ne `wc -c <'makedir.SH'`; then
    echo shar: \"'makedir.SH'\" unpacked with wrong size!
fi
chmod +x 'makedir.SH'
# end of 'makedir.SH'
fi
if test -f 'mbox.saver.SH' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'mbox.saver.SH'\"
else
echo shar: Extracting \"'mbox.saver.SH'\" \(1759 characters\)
sed "s/^X//" >'mbox.saver.SH' <<'END_OF_FILE'
Xcase $CONFIG in
X    '') . ./config.sh ;;
Xesac
Xecho "Extracting mbox.saver (with variable substitutions)"
X$spitshell >mbox.saver <<!GROK!THIS!
X$startsh
X# $Id: mbox.saver.SH,v 3.0 1991/09/09 20:23:31 davison Trn $
X# 
X# This software is Copyright 1991 by Stan Barber. 
X#
X# Permission is hereby granted to copy, reproduce, redistribute or otherwise
X# use this software as long as: there is no monetary profit gained
X# specifically from the use or reproduction of this software, it is not
X# sold, rented, traded or otherwise marketed, and this copyright notice is
X# included prominently in any copy made. 
X#
X# The author make no claims as to the fitness or correctness of this software
X# for any use whatsoever, and it is provided as is. Any use of this software
X# is at the user's own risk. 
X# 
X#	Arguments:
X#	1 Full name of article (%A)
X#	2 Public news spool directory (%P)
X#	3 Directory of current newsgroup (%c)
X#	4 Article number (%a)
X#	5 Where in article to start (%B)
X#	6 Newsgroup name (%C)
X#	7 Save destination (%b)
X#	8 First line of message, normally From...
X#
Xexport PATH || (echo "OOPS, this isn't sh.  Desperation time.  I will feed myself to sh."; sh \$0; kill \$\$)
X
X!GROK!THIS!
Xcase $mboxchar in
X"$CTRLA")
X    $spitshell >>mbox.saver <<!GROK!THIS!
X( $echo "$CTRLA$CTRLA$CTRLA$CTRLA"
X  if $test "\$5" = 0 -a ! "\$4" = 0 ; then
X    $echo "Article: \$4 of \$6"
X  fi
X  $tail +\$5c \$1
X  $echo ""
X  $echo ""
X  $echo "$CTRLA$CTRLA$CTRLA$CTRLA" ) >> \$7
X!GROK!THIS!
X    ;;
X*)
X    $spitshell >>mbox.saver <<!GROK!THIS!
X ( $echo "\$8"
X  if $test "\$5" = 0 -a ! "\$4" = 0 ; then
X    $echo "Article: \$4 of \$6"
X  fi
X  $tail +\$5c \$1 | $sed "s/^From />From /"
X  $echo ""
X  $echo "" ) >> \$7
X!GROK!THIS!
X    ;;
Xesac
X$eunicefix mbox.saver
Xchmod 755 mbox.saver
END_OF_FILE
if test 1759 -ne `wc -c <'mbox.saver.SH'`; then
    echo shar: \"'mbox.saver.SH'\" unpacked with wrong size!
fi
chmod +x 'mbox.saver.SH'
# end of 'mbox.saver.SH'
fi
if test -f 'ndir.c' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'ndir.c'\"
else
echo shar: Extracting \"'ndir.c'\" \(2375 characters\)
sed "s/^X//" >'ndir.c' <<'END_OF_FILE'
X/* $Id: ndir.c,v 3.0 1991/09/09 20:23:31 davison Trn $
X */
X/* This software is Copyright 1991 by Stan Barber. 
X *
X * Permission is hereby granted to copy, reproduce, redistribute or otherwise
X * use this software as long as: there is no monetary profit gained
X * specifically from the use or reproduction of this software, it is not
X * sold, rented, traded or otherwise marketed, and this copyright notice is
X * included prominently in any copy made. 
X *
X * The authors make no claims as to the fitness or correctness of this software
X * for any use whatsoever, and it is provided as is. Any use of this software
X * is at the user's own risk. 
X */
X
X#include "EXTERN.h"
X#include "common.h"
X#include "INTERN.h"
X#include "ndir.h"
X
X#ifdef EMULATE_NDIR
X/*
X * support for Berkeley directory reading routine on a V7 file system
X */
X
X/*
X * open a directory.
X */
XDIR *
Xopendir(name)
Xchar *name;
X{
X	register DIR *dirp;
X	register int fd;
X	char *malloc();
X
X	if ((fd = open(name, 0)) == -1)
X		return NULL;
X	if ((dirp = (DIR *)malloc(sizeof(DIR))) == NULL) {
X		close (fd);
X		return NULL;
X	}
X	dirp->dd_fd = fd;
X	dirp->dd_loc = 0;
X	return dirp;
X}
X
X/*
X * read an old style directory entry and present it as a new one
X */
X#ifndef pyr
X#define	ODIRSIZ	14
X
Xstruct	olddirect {
X	ino_t	od_ino;
X	char	od_name[ODIRSIZ];
X};
X#else	/* an Pyramid in the ATT universe */
X#define	ODIRSIZ	248
X
Xstruct	olddirect {
X	long	od_ino;
X	short	od_fill1, od_fill2;
X	char	od_name[ODIRSIZ];
X};
X#endif
X
X/*
X * get next entry in a directory.
X */
Xstruct direct *
Xreaddir(dirp)
Xregister DIR *dirp;
X{
X	register struct olddirect *dp;
X	static struct direct dir;
X
X	for (;;) {
X		if (dirp->dd_loc == 0) {
X			dirp->dd_size = read(dirp->dd_fd, dirp->dd_buf,
X			    DIRBLKSIZ);
X			if (dirp->dd_size <= 0)
X				return NULL;
X		}
X		if (dirp->dd_loc >= dirp->dd_size) {
X			dirp->dd_loc = 0;
X			continue;
X		}
X		dp = (struct olddirect *)(dirp->dd_buf + dirp->dd_loc);
X		dirp->dd_loc += sizeof(struct olddirect);
X		if (dp->od_ino == 0)
X			continue;
X		dir.d_ino = dp->od_ino;
X		strncpy(dir.d_name, dp->od_name, ODIRSIZ);
X		dir.d_name[ODIRSIZ] = '\0'; /* insure null termination */
X		dir.d_namlen = strlen(dir.d_name);
X		dir.d_reclen = DIRSIZ(&dir);
X		return (&dir);
X	}
X}
X
X/*
X * close a directory.
X */
Xvoid
Xclosedir(dirp)
Xregister DIR *dirp;
X{
X	close(dirp->dd_fd);
X	dirp->dd_fd = -1;
X	dirp->dd_loc = 0;
X	free(dirp);
X}
X
X#endif /* EMULATE_NDIR */
END_OF_FILE
if test 2375 -ne `wc -c <'ndir.c'`; then
    echo shar: \"'ndir.c'\" unpacked with wrong size!
fi
# end of 'ndir.c'
fi
if test -f 'ndir.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'ndir.h'\"
else
echo shar: Extracting \"'ndir.h'\" \(2045 characters\)
sed "s/^X//" >'ndir.h' <<'END_OF_FILE'
X/* $Id: ndir.h,v 3.0 1991/09/09 20:23:31 davison Trn $
X */
X/* This software is Copyright 1991 by Stan Barber. 
X *
X * Permission is hereby granted to copy, reproduce, redistribute or otherwise
X * use this software as long as: there is no monetary profit gained
X * specifically from the use or reproduction of this software, it is not
X * sold, rented, traded or otherwise marketed, and this copyright notice is
X * included prominently in any copy made. 
X *
X * The authors make no claims as to the fitness or correctness of this software
X * for any use whatsoever, and it is provided as is. Any use of this software
X * is at the user's own risk. 
X */
X
X#ifdef I_NDIR
X#include <ndir.h>
X#else
X#ifdef I_DIRENT
X#include <dirent.h>
X#ifndef direct
X#define direct dirent
X#endif
X#else
X#ifdef I_SYS_NDIR
X#include <sys/ndir.h>
X#else
X#ifdef I_SYS_DIR
X#include <sys/dir.h>
X#else
X
X#ifndef DEV_BSIZE
X#define	DEV_BSIZE	512
X#endif
X#define DIRBLKSIZ	DEV_BSIZE
X#define	MAXNAMLEN	255
X
Xstruct	direct {
X	long	d_ino;			/* inode number of entry */
X	short	d_reclen;		/* length of this record */
X	short	d_namlen;		/* length of string in d_name */
X	char	d_name[MAXNAMLEN + 1];	/* name must be no longer than this */
X};
X
X/*
X * The DIRSIZ macro gives the minimum record length which will hold
X * the directory entry.  This requires the amount of space in struct direct
X * without the d_name field, plus enough space for the name with a terminating
X * null byte (dp->d_namlen+1), rounded up to a 4 byte boundary.
X */
X#undef DIRSIZ
X#define DIRSIZ(dp)     ((sizeof (struct direct) - (MAXNAMLEN+1)) + (((dp)->d_namlen+1 + 3) &~ 3))
X
X/*
X * Definitions for library routines operating on directories.
X */
Xtypedef struct _dirdesc {
X	int	dd_fd;
X	long	dd_loc;
X	long	dd_size;
X	char	dd_buf[DIRBLKSIZ];
X} DIR;
X#ifndef NULL
X#define NULL 0
X#endif
Xextern	DIR *opendir _((char*));
Xextern	struct direct *readdir _((DIR*));
Xextern	long telldir _((DIR*));
Xextern	void seekdir _((DIR*));
X#define rewinddir(dirp)	seekdir((dirp), (long)0)
Xextern	void closedir _((DIR*));
X
X#endif
X#endif
X#endif
X#endif
END_OF_FILE
if test 2045 -ne `wc -c <'ndir.h'`; then
    echo shar: \"'ndir.h'\" unpacked with wrong size!
fi
# end of 'ndir.h'
fi
if test -f 'newsetup.1' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'newsetup.1'\"
else
echo shar: Extracting \"'newsetup.1'\" \(2067 characters\)
sed "s/^X//" >'newsetup.1' <<'END_OF_FILE'
X.\" $Id: newsetup.1,v 4.4.3.1 1992/02/01 03:17:20 sob PATCH_3 sob $
X.\"
X.\" This software is Copyright 1991 by Stan Barber. 
X.\"
X.\" Permission is hereby granted to copy, reproduce, redistribute or otherwise
X.\" use this software as long as: there is no monetary profit gained
X.\" specifically from the use or reproduction of this software, it is not
X.\" sold, rented, traded or otherwise marketed, and this copyright notice is
X.\" included prominently in any copy made. 
X.\"
X.\" The authors make no claims as to the fitness or correctness of this software
X.\" for any use whatsoever, and it is provided as is. Any use of this software
X.\" is at the user's own risk. 
X.\"
X.de Sh
X.br
X.ne 5
X.PP
X\fB\\$1\fR
X.PP
X..
X.de Sp
X.if t .sp .5v
X.if n .sp
X..
X.\" unbreakable dash.
X.tr \(*W-|\(bv\*(Tr
X.ie n \{\
X.ds -- \(*W-
X.if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
X.if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\" diablo 12 pitch
X.ds L" ""
X.ds R" ""
X.ds L' '
X.ds R' '
X'br\}
X.el\{\
X.ds -- \(em\|
X.tr \*(Tr
X.ds L" ``
X.ds R" ''
X.ds L' `
X.ds R' '
X'br\}
X.TH NEWSETUP 1 LOCAL
X.SH NAME
Xnewsetup - a program to set up a .newsrc file
X.SH SYNOPSIS
X.B newsetup
X.SH DESCRIPTION
XThe
X.I newsetup
Xprogram creates a new .newsrc file containing an list of recommended
Xnewsgroups for the first time user.
XIf your news admin has specified such a list (usually in the file
XNEWSLIB/subscriptions) trn will use that as a default for your .newsrc.
XOtherwise you get a ridiculously small list that you'll want to add to
Xusing the \*(L"a pattern\*(R" command in trn (such as \*(L"a linux\*(R").
XIf you already have a .newsrc, it will be backed up with the name
X\*(L".newsrc-old\*(R".
X.SH ENVIRONMENT
X.IP DOTDIR 8
XWhere to put your .newsrc, if not in your home directory.
X.Sp
XDefault: $HOME
X.IP HOME 8
XYour home directory.
X.Sp
XDefault: $LOGDIR
X.IP LOGDIR 8
XYour home directory if HOME is undefined.
X.SH FILES
X/usr/lib/news/subscriptions or a reasonable facsimile
X.br
X${DOTDIR-{$HOME-$LOGDIR}}/.newsrc
X.SH SEE ALSO
Xtrn(1), rn(1), newsrc(5)
X.SH DIAGNOSTICS
X.SH BUGS
END_OF_FILE
if test 2067 -ne `wc -c <'newsetup.1'`; then
    echo shar: \"'newsetup.1'\" unpacked with wrong size!
fi
# end of 'newsetup.1'
fi
if test -f 'newsgroups.1' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'newsgroups.1'\"
else
echo shar: Extracting \"'newsgroups.1'\" \(2051 characters\)
sed "s/^X//" >'newsgroups.1' <<'END_OF_FILE'
X.\" $Id: newsgroups.1,v 4.4.3.1 1992/02/01 03:17:20 sob PATCH_3 sob $
X.\"
X.\" This software is Copyright 1991 by Stan Barber. 
X.\"
X.\" Permission is hereby granted to copy, reproduce, redistribute or otherwise
X.\" use this software as long as: there is no monetary profit gained
X.\" specifically from the use or reproduction of this software, it is not
X.\" sold, rented, traded or otherwise marketed, and this copyright notice is
X.\" included prominently in any copy made. 
X.\"
X.\" The authors make no claims as to the fitness or correctness of this software
X.\" for any use whatsoever, and it is provided as is. Any use of this software
X.\" is at the user's own risk. 
X.\"
X.de Sh
X.br
X.ne 5
X.PP
X\fB\\$1\fR
X.PP
X..
X.de Sp
X.if t .sp .5v
X.if n .sp
X..
X.\" unbreakable dash.
X.tr \(*W-|\(bv\*(Tr
X.ie n \{\
X.ds -- \(*W-
X.if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
X.if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\" diablo 12 pitch
X.ds L" ""
X.ds R" ""
X.ds L' '
X.ds R' '
X'br\}
X.el\{\
X.ds -- \(em\|
X.tr \*(Tr
X.ds L" ``
X.ds R" ''
X.ds L' `
X.ds R' '
X'br\}
X.TH NEWSGROUPS 1 LOCAL
X.SH NAME
Xnewsgroups - a program to list unsubscribed newsgroups.
X.SH SYNOPSIS
X.B newsgroups pattern flag
X.SH DESCRIPTION
XThe
X.I newsgroups
Xprogram compares your .newsrc file with the file of active newsgroups,
Xand prints a list of unsubscribed newsgroups matching pattern.
XIf the second argument \*(L"flag\*(R" is present, only newsgroups not
Xfound in your .newsrc are listed, and the display is not paged.
XIf the second argument is missing, the display is paged, and an additional
Xlist of unsubscribed newsgroups occurring in your .newsrc is printed.
X.SH ENVIRONMENT
X.IP DOTDIR 8
XWhere to find your .newsrc, if not in your home directory.
X.Sp
XDefault: $HOME
X.IP HOME 8
XYour home directory.
X.Sp
XDefault: $LOGDIR
X.IP LOGDIR 8
XYour home directory if HOME is undefined.
X.SH FILES
X/usr/lib/news/active or a reasonable facsimile
X.br
X${DOTDIR-{$HOME-$LOGDIR}}/.newsrc
X.SH SEE ALSO
Xrn(1), newsrc(5)
X.SH DIAGNOSTICS
X.SH BUGS
XThe flag argument is a kludge.
END_OF_FILE
if test 2051 -ne `wc -c <'newsgroups.1'`; then
    echo shar: \"'newsgroups.1'\" unpacked with wrong size!
fi
# end of 'newsgroups.1'
fi
if test -f 'newsnews.SH' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'newsnews.SH'\"
else
echo shar: Extracting \"'newsnews.SH'\" \(1217 characters\)
sed "s/^X//" >'newsnews.SH' <<'END_OF_FILE'
X: see end of file for revision information
Xcase $CONFIG in
X    '') . ./config.sh ;;
Xesac
Xecho "Extracting newsnews (with variable substitutions)"
Xcat >newsnews <<!GROK!THIS!
X			*** NEWS NEWS ***
X
XWelcome to trn 3.3.  This is a minor update from 3.2 with some bug fixes
Xand a few improvements.  Trn is "threaded read news", based on rn.
X
XYou can type 'h' at any prompt to display a summary of the commands that
Xare available.
X
XThis message will not be displayed again unless it is updated with new
Xinformation.
X
XWayne Davison  <davison@borland.com>
X!GROK!THIS!
X$eunicefix newsnews
X#
X# $Id: newsnews.SH,v 3.0 1991/09/09 20:23:31 davison Trn $
X#
X# This software is Copyright 1991 by Stan Barber. 
X#
X# Permission is hereby granted to copy, reproduce, redistribute or otherwise
X# use this software as long as: there is no monetary profit gained
X# specifically from the use or reproduction of this software, it is not
X# sold, rented, traded or otherwise marketed, and this copyright notice is
X# included prominently in any copy made. 
X#
X# The author make no claims as to the fitness or correctness of this software
X# for any use whatsoever, and it is provided as is. Any use of this software
X# is at the user's own risk. 
X
END_OF_FILE
if test 1217 -ne `wc -c <'newsnews.SH'`; then
    echo shar: \"'newsnews.SH'\" unpacked with wrong size!
fi
chmod +x 'newsnews.SH'
# end of 'newsnews.SH'
fi
if test -f 'ng.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'ng.h'\"
else
echo shar: Extracting \"'ng.h'\" \(1846 characters\)
sed "s/^X//" >'ng.h' <<'END_OF_FILE'
X/* $Id: ng.h,v 3.0 1991/09/09 20:23:31 davison Trn $
X */
X/* This software is Copyright 1991 by Stan Barber. 
X *
X * Permission is hereby granted to copy, reproduce, redistribute or otherwise
X * use this software as long as: there is no monetary profit gained
X * specifically from the use or reproduction of this software, it is not
X * sold, rented, traded or otherwise marketed, and this copyright notice is
X * included prominently in any copy made. 
X *
X * The authors make no claims as to the fitness or correctness of this software
X * for any use whatsoever, and it is provided as is. Any use of this software
X * is at the user's own risk. 
X */
X
XEXT ART_NUM art INIT(0);	/* current or prospective article # */
X
XEXT ART_NUM recent_art;		/* previous article # for '-' command */
XEXT ART_NUM curr_art;		/* current article # */
XEXT ARTICLE *recent_artp INIT(0);/* article_ptr equivilents */
XEXT ARTICLE *curr_artp INIT(0);
XEXT ARTICLE *artp INIT(0);  /* the article ptr we use when art is 0 */
X
XEXT int checkcount INIT(0);	/* how many articles have we read */
X			/*   in the current newsgroup since */
X			/*   the last checkpoint? */
XEXT int docheckwhen INIT(20);	/* how often to do checkpoint */
X
X#ifdef MAILCALL
XEXT int mailcount INIT(0);		/* check for mail when 0 mod 10 */
X#endif
XEXT char *mailcall INIT(nullstr);
XEXT bool forcelast INIT(FALSE);		/* ought we show "End of newsgroup"? */
XEXT bool forcegrow INIT(FALSE);		/* do we want to recalculate size */
X				    /* of newsgroup, e.g. after posting? */
X
X#define NG_ERROR -1
X#define NG_NORM 0
X#define NG_ASK 1
X#define NG_MINUS 2
X#define NG_SELPRIOR 3
X#define NG_SELNEXT 4
X
Xvoid    ng_init _((void));
Xint	do_newsgroup _((char*));
Xint	art_switch _((void));
X#ifdef MAILCALL
Xvoid	setmail _((bool_int));
X#endif
Xvoid	setdfltcmd _((void));
Xchar	ask_catchup _((void));
Xchar	ask_memorize _((char_int));
END_OF_FILE
if test 1846 -ne `wc -c <'ng.h'`; then
    echo shar: \"'ng.h'\" unpacked with wrong size!
fi
# end of 'ng.h'
fi
if test -f 'ngdata.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'ngdata.h'\"
else
echo shar: Extracting \"'ngdata.h'\" \(1577 characters\)
sed "s/^X//" >'ngdata.h' <<'END_OF_FILE'
X/* $Id: ngdata.h,v 3.0 1992/02/01 03:09:32 davison Trn $
X */
X/* This software is Copyright 1991 by Stan Barber. 
X *
X * Permission is hereby granted to copy, reproduce, redistribute or otherwise
X * use this software as long as: there is no monetary profit gained
X * specifically from the use or reproduction of this software, it is not
X * sold, rented, traded or otherwise marketed, and this copyright notice is
X * included prominently in any copy made. 
X *
X * The authors make no claims as to the fitness or correctness of this software
X * for any use whatsoever, and it is provided as is. Any use of this software
X * is at the user's own risk. 
X */
X
XEXT FILE *actfp INIT(Nullfp);	/* the active file */
XEXT bool writesoft INIT(FALSE);	/* rewrite the soft pointer file? */
XEXT int softtries INIT(0), softmisses INIT(0);
X
XEXT ART_NUM absfirst INIT(0);	/* 1st real article in current newsgroup */
XEXT ART_NUM firstart INIT(0);	/* minimum unread article number in newsgroup */
XEXT ART_NUM lastart INIT(0);	/* maximum article number in newsgroup */
X
X#ifdef USE_NNTP
XEXT char active_name[MAXFILENAME];
XEXT time_t lastactfetch INIT(0);
X#endif
X
XEXT ART_NUM *abs1st INIT(NULL);	/* 1st real article in newsgroup */
X
XEXT char *moderated;
XEXT char *redirected;
XEXT bool ThreadedGroup;
XEXT long activeitems;			/* number of enties in active file */
X
Xvoid	ngdata_init _((void));
Xbool	access_ng _((void));
Xvoid	grow_ng _((ART_NUM));
Xvoid	ng_skip _((void));
XART_NUM	getngsize _((NG_NUM));
Xvoid	getngmissing _((void));
X
XACT_POS findact _((char*,char*,int,long));
Xvoid ngdatahash_init _((void));
END_OF_FILE
if test 1577 -ne `wc -c <'ngdata.h'`; then
    echo shar: \"'ngdata.h'\" unpacked with wrong size!
fi
# end of 'ngdata.h'
fi
if test -f 'ngsrch.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'ngsrch.h'\"
else
echo shar: Extracting \"'ngsrch.h'\" \(1025 characters\)
sed "s/^X//" >'ngsrch.h' <<'END_OF_FILE'
X/* $Id: ngsrch.h,v 3.0 1992/02/01 03:09:32 davison Trn $
X */
X/* This software is Copyright 1991 by Stan Barber. 
X *
X * Permission is hereby granted to copy, reproduce, redistribute or otherwise
X * use this software as long as: there is no monetary profit gained
X * specifically from the use or reproduction of this software, it is not
X * sold, rented, traded or otherwise marketed, and this copyright notice is
X * included prominently in any copy made. 
X *
X * The authors make no claims as to the fitness or correctness of this software
X * for any use whatsoever, and it is provided as is. Any use of this software
X * is at the user's own risk. 
X */
X
X#ifdef NGSEARCH
X#define NGS_ABORT 0
X#define NGS_FOUND 1
X#define NGS_INTR 2
X#define NGS_NOTFOUND 3
X#define NGS_ERROR 4
X
XEXT bool ng_doread INIT(FALSE);		/* search read newsgroups? */
X#endif
X
Xvoid	ngsrch_init _((void));
X#ifdef NGSEARCH 
Xint	ng_search _((char*,int));
Xbool	ng_wanted _((void));
X#endif
X#ifdef NGSORONLY
Xchar	*ng_comp _((COMPEX*,char*,bool_int,bool_int));
X#endif
END_OF_FILE
if test 1025 -ne `wc -c <'ngsrch.h'`; then
    echo shar: \"'ngsrch.h'\" unpacked with wrong size!
fi
# end of 'ngsrch.h'
fi
if test -f 'ngstuff.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'ngstuff.h'\"
else
echo shar: Extracting \"'ngstuff.h'\" \(954 characters\)
sed "s/^X//" >'ngstuff.h' <<'END_OF_FILE'
X/* $Id: ngstuff.h,v 3.0 1991/09/09 20:23:31 davison Trn $
X */
X/* This software is Copyright 1991 by Stan Barber. 
X *
X * Permission is hereby granted to copy, reproduce, redistribute or otherwise
X * use this software as long as: there is no monetary profit gained
X * specifically from the use or reproduction of this software, it is not
X * sold, rented, traded or otherwise marketed, and this copyright notice is
X * included prominently in any copy made. 
X *
X * The authors make no claims as to the fitness or correctness of this software
X * for any use whatsoever, and it is provided as is. Any use of this software
X * is at the user's own risk. 
X */
X
X#define NN_NORM 0
X#define NN_INP 1
X#define NN_REREAD 2
X#define NN_ASK 3
X
XEXT bool one_command INIT(FALSE);	/* no ':' processing in perform() */
X
Xvoid	ngstuff_init _((void));
Xint	escapade _((void));
Xint	switcheroo _((void));
Xint	numnum _((void));
Xint	perform _((char*,int));
Xint	use_selected _((void));
END_OF_FILE
if test 954 -ne `wc -c <'ngstuff.h'`; then
    echo shar: \"'ngstuff.h'\" unpacked with wrong size!
fi
# end of 'ngstuff.h'
fi
if test ! -d 'nntp' ; then
    echo shar: Creating directory \"'nntp'\"
    mkdir 'nntp'
fi
if test -f 'nntp.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'nntp.h'\"
else
echo shar: Extracting \"'nntp.h'\" \(723 characters\)
sed "s/^X//" >'nntp.h' <<'END_OF_FILE'
X/* $Id: nntp.h,v 3.0 1992/12/14 00:14:55 davison Trn $
X*/ 
X/* The authors make no claims as to the fitness or correctness of this software
X * for any use whatsoever, and it is provided as is. Any use of this software
X * is at the user's own risk. 
X */
X
X#ifdef USE_NNTP
X
Xbool	nntp_group _((char*,NG_NUM));
Xbool	nntp_stat _((ART_NUM));
Xbool	nntp_header _((ART_NUM));
XFILE	*nntp_body _((ART_NUM));
Xtime_t	nntp_time _((void));
Xbool	nntp_newgroups _((time_t));
Xbool	nntp_listgroup _((void));
Xchar	*nntp_get_a_line _((char*, int));
Xchar	*nntp_artname _((void));
Xvoid	nntp_cleanup _((void));
X
X#ifdef USE_XTHREAD
Xlong	nntp_readcheck _((void));
Xlong	nntp_read _((char*,long));
X#endif
X
X#include "nntpclient.h"
X
X#endif /* USE_NNTP */
END_OF_FILE
if test 723 -ne `wc -c <'nntp.h'`; then
    echo shar: \"'nntp.h'\" unpacked with wrong size!
fi
# end of 'nntp.h'
fi
if test -f 'nntp/support.patch' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'nntp/support.patch'\"
else
echo shar: Extracting \"'nntp/support.patch'\" \(1037 characters\)
sed "s/^X//" >'nntp/support.patch' <<'END_OF_FILE'
XIf you apply this patch to NNTP's support directory and move the
Xacttimes.c file there also, it will compile the acttimes program
Xrather than the specious mkgrdates.
X
XWayne Davison                                        davison@borland.com
X---8<------8<------8<------8<---cut here--->8------>8------>8------>8---
XIndex: Makefile
X@@ -3,7 +3,7 @@
X #
X 
X-OBJS	=	mkgrdates.o
X+OBJS	=	acttimes.o
X 
X-SRCS	=	mkgrdates.c
X+SRCS	=	acttimes.c
X 
X HFILES	=	../common/conf.h
X@@ -15,18 +15,18 @@
X DESTDIR	= /usr/lib/news
X 
X-all: mkgrdates
X+all: acttimes
X 
X-mkgrdates: mkgrdates.o
X-	$(CC) ${CFLAGS} -o mkgrdates mkgrdates.o
X+acttimes: acttimes.o
X+	$(CC) ${CFLAGS} -o acttimes acttimes.o
X 
X-install: mkgrdates
X-	cp mkgrdates ${DESTDIR}/mkgrdates
X-	chmod 755 ${DESTDIR}/mkgrdates
X+install: acttimes
X+	cp acttimes ${DESTDIR}/acttimes
X+	chmod 755 ${DESTDIR}/acttimes
X 
X lint:
X-	lint mkgrdates.c
X+	lint acttimes.c
X 
X clean:
X-	-rm -f *.o mkgrdates
X+	-rm -f *.o acttimes
X 
X distrib: clean
X---8<------8<------8<------8<---cut here--->8------>8------>8------>8---
END_OF_FILE
if test 1037 -ne `wc -c <'nntp/support.patch'`; then
    echo shar: \"'nntp/support.patch'\" unpacked with wrong size!
fi
# end of 'nntp/support.patch'
fi
if test -f 'nntpclient.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'nntpclient.h'\"
else
echo shar: Extracting \"'nntpclient.h'\" \(1476 characters\)
sed "s/^X//" >'nntpclient.h' <<'END_OF_FILE'
X/* $Id: nntpclient.h,v 3.0 1992/12/14 00:14:55 davison Trn $
X*/ 
X/* The authors make no claims as to the fitness or correctness of this software
X * for any use whatsoever, and it is provided as is. Any use of this software
X * is at the user's own risk. 
X */
X
X#ifdef USE_NNTP
X
Xint	server_init _((char*));
X
Xvoid	nntp_connect _((void));
Xvoid	nntp_command _((char*));
Xchar	nntp_check _((bool_int));
Xint	nntp_gets _((char*, int));
Xvoid	nntp_close _((void));
X
X/* RFC 977 defines these, so don't change them */
X
X#define	NNTP_CLASS_INF  	'1'
X#define NNTP_CLASS_OK   	'2'
X#define	NNTP_CLASS_CONT 	'3'
X#define	NNTP_CLASS_ERR  	'4'
X#define	NNTP_CLASS_FATAL	'5'
X
X#define	NNTP_POSTOK_VAL 	200	/* Hello -- you can post */
X#define	NNTP_NOPOSTOK_VAL	201	/* Hello -- you can't post */
X
X#define NNTP_GOODBYE_VAL	400	/* Have to hang up for some reason */
X#define	NNTP_NOSUCHGROUP_VAL	411	/* No such newsgroup */
X
X#define	NNTP_AUTH_NEEDED_VAL 	480	/* Authorization Failed */
X#define	NNTP_AUTH_REJECT_VAL	482	/* Authorization data rejected */
X
X#define	NNTP_BAD_COMMAND_VAL	500	/* Command not recognized */
X#define	NNTP_SYNTAX_VAL		501	/* Command syntax error */
X#define	NNTP_ACCESS_VAL 	502	/* Access to server denied */
X#define	NNTP_TMPERR_VAL  	503	/* Program fault, command not performed */
X#define	NNTP_AUTH_BAD_VAL 	580	/* Authorization Failed */
X
X#define	NNTP_STRLEN	512
X
XEXT FILE *ser_rd_fp INIT(NULL);
XEXT FILE *ser_wr_fp INIT(NULL);
XEXT char ser_line[NNTP_STRLEN];
X
X#endif /* USE_NNTP */
END_OF_FILE
if test 1476 -ne `wc -c <'nntpclient.h'`; then
    echo shar: \"'nntpclient.h'\" unpacked with wrong size!
fi
# end of 'nntpclient.h'
fi
if test -f 'norm.saver.SH' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'norm.saver.SH'\"
else
echo shar: Extracting \"'norm.saver.SH'\" \(1296 characters\)
sed "s/^X//" >'norm.saver.SH' <<'END_OF_FILE'
Xcase $CONFIG in
X    '') . ./config.sh ;;
Xesac
Xecho "Extracting norm.saver (with variable substitutions)"
X$spitshell >norm.saver <<!GROK!THIS!
X$startsh
X# $Id: norm.saver.SH,v 3.0 1991/09/09 20:23:31 davison Trn $
X# 
X# This software is Copyright 1991 by Stan Barber. 
X#
X# Permission is hereby granted to copy, reproduce, redistribute or otherwise
X# use this software as long as: there is no monetary profit gained
X# specifically from the use or reproduction of this software, it is not
X# sold, rented, traded or otherwise marketed, and this copyright notice is
X# included prominently in any copy made. 
X#
X# The author make no claims as to the fitness or correctness of this software
X# for any use whatsoever, and it is provided as is. Any use of this software
X# is at the user's own risk. 
X# 
X#	Arguments:
X#	1 Full name of article (%A)
X#	2 Public news spool directory (%P)
X#	3 Directory of current newsgroup (%c)
X#	4 Article number (%a)
X#	5 Where in article to start (%B)
X#	6 Newsgroup name (%C)
X#	7 Save destination (%b)
X#
Xexport PATH || (echo "OOPS, this isn't sh.  Desperation time.  I will feed myself to sh."; sh \$0; kill \$\$)
X
X( case "\$5" in
X  0) $echo "Article \$4 of \$6:" ;;
X  esac
X  $tail +\$5c \$1
X  $echo ""
X  $echo "" ) >> \$7
X!GROK!THIS!
X$eunicefix norm.saver
Xchmod 755 norm.saver
END_OF_FILE
if test 1296 -ne `wc -c <'norm.saver.SH'`; then
    echo shar: \"'norm.saver.SH'\" unpacked with wrong size!
fi
chmod +x 'norm.saver.SH'
# end of 'norm.saver.SH'
fi
if test -f 'only.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'only.h'\"
else
echo shar: Extracting \"'only.h'\" \(1208 characters\)
sed "s/^X//" >'only.h' <<'END_OF_FILE'
X/* $Id: only.h,v 3.0 1991/09/09 20:23:31 davison Trn $
X */
X/* This software is Copyright 1991 by Stan Barber. 
X *
X * Permission is hereby granted to copy, reproduce, redistribute or otherwise
X * use this software as long as: there is no monetary profit gained
X * specifically from the use or reproduction of this software, it is not
X * sold, rented, traded or otherwise marketed, and this copyright notice is
X * included prominently in any copy made. 
X *
X * The authors make no claims as to the fitness or correctness of this software
X * for any use whatsoever, and it is provided as is. Any use of this software
X * is at the user's own risk. 
X */
X
X#ifndef NBRA
X#include "search.h"
X#endif
X
X#ifdef ONLY
X    EXT char *ngtodo[NGMAX];		/* restrictions in effect */
X#   ifdef SPEED_OVER_MEM
X	EXT COMPEX *compextodo[NGMAX];	/* restrictions in compiled form */
X#   endif
X#endif
X
XEXT int maxngtodo INIT(0);			/*  0 => no restrictions */
X					/* >0 => # of entries in ngtodo */
XEXT bool emptyOnly INIT(FALSE);
X
Xvoid	only_init _((void));
Xbool	inlist _((char*));	/* return TRUE if ngname is in command line list */
X			/* or if there was no list */
Xvoid	setngtodo _((char*));
X#ifdef ONLY
Xvoid	end_only _((void));
X#endif
END_OF_FILE
if test 1208 -ne `wc -c <'only.h'`; then
    echo shar: \"'only.h'\" unpacked with wrong size!
fi
# end of 'only.h'
fi
if test -f 'overview.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'overview.h'\"
else
echo shar: Extracting \"'overview.h'\" \(1774 characters\)
sed "s/^X//" >'overview.h' <<'END_OF_FILE'
X/* $Id: overview.h,v 3.0 1992/12/14 00:14:09 davison Trn $
X*/
X/* The authors make no claims as to the fitness or correctness of this software
X * for any use whatsoever, and it is provided as is. Any use of this software
X * is at the user's own risk. 
X */
X
X/* The order of the overview file fields */
X#define OV_NUM  	0
X#define OV_SUBJ 	1
X#define OV_FROM 	2
X#define OV_DATE 	3
X#define OV_MSGID	4
X#define OV_REFS 	5
X#define OV_BYTES	6
X#define OV_LINES	7
X#define OV_OTHERS	8	/* this catch-all field must be last */
X#undef	OV_OTHERS_HAS_XREFS	/* forces trn to assume xrefs always exist */
X
X/* If ALL the overview files trn will be accessing have xrefs in the OTHERS
X** field you may choose to define OV_OTHERS_HAS_XREFS.  This may save some
X** article accessing during the time that it would take trn to determine
X** this for itself. */
X
X/* NOTE that you must NOT define OV_XREFS unless you have opted to create
X** a new (non-standard) overview field for xrefs instead of placing them
X** in the OTHERS field.  If you have included the xref header without its
X** prefix into a field of its own, define OV_XREFS with the appropriate
X** field number in the list above.  If it has the "Xref:" prefix and you
X** didn't want to point the OV_OTHERS field at it (for some reason) you
X** can define both OV_XREFS and OV_LAX_XREFS and trn accepts a field with
X** or without the "Xref:" prefix. */
X
X#undef	OV_XREFS	/* only define when using non-standard .overview */
X#undef	OV_LAX_XREFS	/* allow xref field to have a header-prefix */
X
X/* What name to append to the directory name to read an overview file.
X** This REQUIRES a leading slash unless you're getting fancy.
X*/
X#define OV_FILE_NAME	"/.overview"
X
X/* How many overview lines to read with one NNTP call */
X#define OV_CHUNK_SIZE	100
END_OF_FILE
if test 1774 -ne `wc -c <'overview.h'`; then
    echo shar: \"'overview.h'\" unpacked with wrong size!
fi
# end of 'overview.h'
fi
if test -f 'patchlevel.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'patchlevel.h'\"
else
echo shar: Extracting \"'patchlevel.h'\" \(35 characters\)
sed "s/^X//" >'patchlevel.h' <<'END_OF_FILE'
X#define PATCHLEVEL "Version: 3.3 "
END_OF_FILE
if test 35 -ne `wc -c <'patchlevel.h'`; then
    echo shar: \"'patchlevel.h'\" unpacked with wrong size!
fi
# end of 'patchlevel.h'
fi
if test -f 'rcln.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'rcln.h'\"
else
echo shar: Extracting \"'rcln.h'\" \(949 characters\)
sed "s/^X//" >'rcln.h' <<'END_OF_FILE'
X/* $Id: rcln.h,v 3.0 1992/02/01 03:09:32 davison Trn $
X */
X/* This software is Copyright 1991 by Stan Barber. 
X *
X * Permission is hereby granted to copy, reproduce, redistribute or otherwise
X * use this software as long as: there is no monetary profit gained
X * specifically from the use or reproduction of this software, it is not
X * sold, rented, traded or otherwise marketed, and this copyright notice is
X * included prominently in any copy made. 
X *
X * The authors make no claims as to the fitness or correctness of this software
X * for any use whatsoever, and it is provided as is. Any use of this software
X * is at the user's own risk. 
X */
X
XEXT ART_NUM *ngmax INIT(NULL);
X
Xvoid    rcln_init _((void));
X#ifdef CATCHUP
Xvoid	catch_up _((NG_NUM));
X#endif
Xint	addartnum _((ART_NUM,char*));
X#ifdef MCHASE
Xvoid	subartnum _((ART_NUM,char*));
X#endif
Xvoid	prange _((char*,ART_NUM,ART_NUM));
Xvoid	set_toread _((NG_NUM));
Xvoid	checkexpired _((NG_NUM));
END_OF_FILE
if test 949 -ne `wc -c <'rcln.h'`; then
    echo shar: \"'rcln.h'\" unpacked with wrong size!
fi
# end of 'rcln.h'
fi
if test -f 'rcstuff.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'rcstuff.h'\"
else
echo shar: Extracting \"'rcstuff.h'\" \(2203 characters\)
sed "s/^X//" >'rcstuff.h' <<'END_OF_FILE'
X/* $Id: rcstuff.h,v 3.0 1992/02/01 03:09:32 davison Trn $
X */
X/* This software is Copyright 1991 by Stan Barber. 
X *
X * Permission is hereby granted to copy, reproduce, redistribute or otherwise
X * use this software as long as: there is no monetary profit gained
X * specifically from the use or reproduction of this software, it is not
X * sold, rented, traded or otherwise marketed, and this copyright notice is
X * included prominently in any copy made. 
X *
X * The authors make no claims as to the fitness or correctness of this software
X * for any use whatsoever, and it is provided as is. Any use of this software
X * is at the user's own risk. 
X */
X
XEXT char **rcline INIT(NULL);/* pointers to lines of .newsrc */
XEXT ART_UNREAD *toread INIT(NULL);
X			/* number of articles to be read in newsgroup */
X			/* <0 => invalid or unsubscribed newsgroup */
X#define TR_ONE ((ART_UNREAD) 1)
X#define TR_NONE ((ART_UNREAD) 0)
X#define TR_UNSUB ((ART_UNREAD) -1)
X			/* keep this one as -1, some tests use >= TR_UNSUB */
X#define TR_BOGUS ((ART_UNREAD) -2)
X#define TR_JUNK ((ART_UNREAD) -3)
X
X#define RCCHAR(ch) ((ch) == '0' ? ':' : (ch))
X
X#define ADDNEW_SUB ':'
X#define ADDNEW_UNSUB '!'
X
X#define GNG_RELOC	0x0001
X#define GNG_FUZZY	0x0002
X
XEXT char *rcchar INIT(NULL); /* holds the character : or ! while spot is \0 */
XEXT char *rcnums INIT(NULL); /* offset from rcline to numbers on line */
XEXT ACT_POS *softptr INIT(NULL);
X			/* likely ptr to active file entry for newsgroup */
XEXT bool paranoid INIT(FALSE);	/* did we detect some inconsistency in .newsrc? */
XEXT int maxrcline INIT(0);	/* current maximum # of lines in .newsrc */
XEXT int addnewbydefault INIT(0);
X
Xbool	rcstuff_init _((void));
Xvoid	abandon_ng _((NG_NUM));
Xbool	get_ng _((char*,int)); /* return TRUE if newsgroup is found or added */
XNG_NUM	add_newsgroup _((char*,char_int));
X#ifdef RELOCATE
XNG_NUM	relocate_newsgroup _((NG_NUM,NG_NUM)); /* move newsgroup around */
X#endif
Xvoid	list_newsgroups _((void));
XNG_NUM	find_ng _((char*));	/* return index of newsgroup */
Xvoid	cleanup_rc _((void));
Xvoid	sethash _((NG_NUM));
Xint	hash _((char*));
Xvoid	newsrc_check _((void));
Xvoid	checkpoint_rc _((void));
Xvoid	write_rc _((void));
Xvoid	get_old_rc _((void));
END_OF_FILE
if test 2203 -ne `wc -c <'rcstuff.h'`; then
    echo shar: \"'rcstuff.h'\" unpacked with wrong size!
fi
# end of 'rcstuff.h'
fi
if test -f 'respond.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'respond.h'\"
else
echo shar: Extracting \"'respond.h'\" \(1133 characters\)
sed "s/^X//" >'respond.h' <<'END_OF_FILE'
X/* $Id: respond.h,v 3.0 1992/02/01 03:09:32 davison Trn $
X */
X/* This software is Copyright 1991 by Stan Barber. 
X *
X * Permission is hereby granted to copy, reproduce, redistribute or otherwise
X * use this software as long as: there is no monetary profit gained
X * specifically from the use or reproduction of this software, it is not
X * sold, rented, traded or otherwise marketed, and this copyright notice is
X * included prominently in any copy made. 
X *
X * The authors make no claims as to the fitness or correctness of this software
X * for any use whatsoever, and it is provided as is. Any use of this software
X * is at the user's own risk. 
X */
X
XEXT char *savedest INIT(Nullch);	/* value of %b */
XEXT char *extractdest INIT(Nullch);	/* value of %E */
XEXT char *extractprog INIT(Nullch);	/* value of %e */
XEXT ART_POS savefrom INIT(0);		/* value of %B */
XEXT char *headname INIT(Nullch);
X
X#define SAVE_ABORT 0
X#define SAVE_DONE 1
X
Xvoid	respond_init _((void));
Xint	save_article _((void));
Xint	cancel_article _((void));
Xint	supersede_article _((void));
Xvoid	reply _((void));
Xvoid	followup _((void));
Xvoid	invoke _((char*,char*));
END_OF_FILE
if test 1133 -ne `wc -c <'respond.h'`; then
    echo shar: \"'respond.h'\" unpacked with wrong size!
fi
# end of 'respond.h'
fi
if test -f 'rt-mt.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'rt-mt.h'\"
else
echo shar: Extracting \"'rt-mt.h'\" \(1642 characters\)
sed "s/^X//" >'rt-mt.h' <<'END_OF_FILE'
X/* $Id: rt-mt.h,v 3.0 1992/12/14 00:14:09 davison Trn $
X*/
X/* The authors make no claims as to the fitness or correctness of this software
X * for any use whatsoever, and it is provided as is. Any use of this software
X * is at the user's own risk. 
X */
X
Xbool mt_init _((void));
Xbool mt_data _((void));
X
X/* Stuff internal to rt-mt.c */
X
X#ifdef DOINIT
X
X#define DB_VERSION	2
X
Xtypedef char		BYTE;
Xtypedef short		WORD;
X#ifndef __alpha
Xtypedef long		LONG;
X#else
Xtypedef int		LONG;
X#endif
X
X#define ROOT_ARTICLE	0x0001		/* article flag definitions */
X#define HAS_XREFS	0x0004		/* article has an xref line */
X
Xtypedef struct {
X    LONG root_num;
X    WORD articles;
X    WORD article_cnt;
X    WORD subject_cnt;
X    WORD pad_hack;
X} PACKED_ROOT;
X
Xtypedef struct {
X    LONG num;
X    LONG date;
X    WORD subject, author;
X    WORD flags;
X    WORD child_cnt;
X    WORD parent;
X    WORD padding;
X    WORD sibling;
X    WORD root;
X} PACKED_ARTICLE;
X
Xtypedef struct Total {
X    LONG first, last;
X    LONG string1;
X    LONG string2;
X    WORD root;
X    WORD article;
X    WORD subject;
X    WORD author;
X    WORD domain;
X    WORD pad_hack;
X} TOTAL;
X
Xtypedef struct {
X    BYTE l[sizeof (LONG)];
X    BYTE w[sizeof (WORD)];
X    BYTE version;
X    BYTE pad_hack;
X} BMAP;
X
X# ifndef USE_XTHREAD
Xstatic char *mt_name _((char*));
X# endif
Xstatic int read_authors _((void));
Xstatic int read_subjects _((void));
Xstatic int read_roots _((void));
Xstatic int read_articles _((void));
Xstatic int read_ids _((void));
Xstatic void tweak_data _((void));
Xstatic int read_item();
Xstatic void safefree _((char**));
Xstatic void mybytemap _((BMAP*));
Xstatic void wp_bmap(), lp_bmap();
X
X#endif
END_OF_FILE
if test 1642 -ne `wc -c <'rt-mt.h'`; then
    echo shar: \"'rt-mt.h'\" unpacked with wrong size!
fi
# end of 'rt-mt.h'
fi
if test -f 'rt-ov.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'rt-ov.h'\"
else
echo shar: Extracting \"'rt-ov.h'\" \(507 characters\)
sed "s/^X//" >'rt-ov.h' <<'END_OF_FILE'
X/* $Id: rt-ov.h,v 3.0 1992/12/14 00:14:15 davison Trn $
X*/
X/* The authors make no claims as to the fitness or correctness of this software
X * for any use whatsoever, and it is provided as is. Any use of this software
X * is at the user's own risk. 
X */
X
Xbool ov_init _((void));
Xbool ov_data _((ART_NUM,ART_NUM,bool_int));
Xvoid ov_close _((void));
X
X/* Stuff internal to rt-ov.c */
X
X#ifdef DOINIT
X
Xstatic ARTICLE *ov_parse _((char*, ART_NUM));
X#ifndef USE_XOVER
Xstatic char *ov_name _((char*));
X#endif
X
X#endif
END_OF_FILE
if test 507 -ne `wc -c <'rt-ov.h'`; then
    echo shar: \"'rt-ov.h'\" unpacked with wrong size!
fi
# end of 'rt-ov.h'
fi
if test -f 'rt-page.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'rt-page.h'\"
else
echo shar: Extracting \"'rt-page.h'\" \(848 characters\)
sed "s/^X//" >'rt-page.h' <<'END_OF_FILE'
X/* $Id: rt-page.h,v 3.0 1992/12/14 00:14:12 davison Trn $
X*/
X/* The authors make no claims as to the fitness or correctness of this software
X * for any use whatsoever, and it is provided as is. Any use of this software
X * is at the user's own risk. 
X */
X
Xbool set_sel_mode _((char_int));
Xbool set_sel_sort _((char_int));
Xvoid set_selector _((int,int));
Xvoid init_pages _((void));
Xbool first_page _((void));
Xbool last_page _((void));
Xbool next_page _((void));
Xbool prev_page _((void));
Xvoid display_page _((void));
Xvoid update_page _((void));
Xvoid output_sel _((int));
X
X/* Stuff internal to rt-select.c */
X
X#ifdef DOINIT
X
Xstatic int count_subject_lines _((SUBJECT*, int*));
Xstatic int count_thread_lines _((SUBJECT*, int*));
Xstatic void display_article _((ARTICLE*, char_int, int));
Xstatic void display_subject _((SUBJECT*, char_int, int));
X
X#endif
END_OF_FILE
if test 848 -ne `wc -c <'rt-page.h'`; then
    echo shar: \"'rt-page.h'\" unpacked with wrong size!
fi
# end of 'rt-page.h'
fi
if test -f 'rt-process.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'rt-process.h'\"
else
echo shar: Extracting \"'rt-process.h'\" \(440 characters\)
sed "s/^X//" >'rt-process.h' <<'END_OF_FILE'
X/* $Id: rt-process.h,v 3.0 1992/12/14 00:14:15 davison Trn $
X*/
X/* The authors make no claims as to the fitness or correctness of this software
X * for any use whatsoever, and it is provided as is. Any use of this software
X * is at the user's own risk. 
X */
X
Xint msgid_cmp _((char*,int,HASHDATUM));
XARTICLE *allocate_article _((ART_NUM));
Xbool valid_article _((ARTICLE*));
XARTICLE *get_article _((char*));
Xvoid thread_article _((ARTICLE*));
END_OF_FILE
if test 440 -ne `wc -c <'rt-process.h'`; then
    echo shar: \"'rt-process.h'\" unpacked with wrong size!
fi
# end of 'rt-process.h'
fi
if test -f 'rt-select.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'rt-select.h'\"
else
echo shar: Extracting \"'rt-select.h'\" \(1746 characters\)
sed "s/^X//" >'rt-select.h' <<'END_OF_FILE'
X/* $Id: rt-select.h,v 3.0 1992/12/14 00:14:15 davison Trn $
X*/
X/* The authors make no claims as to the fitness or correctness of this software
X * for any use whatsoever, and it is provided as is. Any use of this software
X * is at the user's own risk. 
X */
X
X#define MAX_SEL 64
X
XEXT bool sel_rereading INIT(0);
XEXT int sel_mode INIT(0);
XEXT int sel_threadmode INIT(0);
X#define SM_THREAD	0
X#define SM_SUBJECT	1
X#define SM_ARTICLE	2
XEXT char *sel_mode_string;
XEXT int sel_sort INIT(0);
XEXT int sel_artsort INIT(4);
XEXT int sel_threadsort INIT(0);
X#define SS_DATE		0
X#define SS_SUBJECT	1
X#define SS_AUTHOR	2
X#define SS_COUNT	3
X#define SS_GROUPS	4
XEXT char *sel_sort_string;
XEXT int sel_direction INIT(1);
XEXT bool sel_exclusive INIT(FALSE);
XEXT int sel_mask INIT(1);
X
XEXT bool selected_only INIT(FALSE);
XEXT ART_UNREAD selected_count INIT(0);
XEXT int selected_subj_cnt INIT(0);
XEXT int added_articles INIT(0);
X
X#define VOIDPTR void
X
Xstruct sel_item {
X    VOIDPTR *ptr;
X    int line;
X    int sel;
X};
X
XEXT char *sel_chars;
XEXT struct sel_item sel_items[MAX_SEL];
XEXT int sel_item_index;
XEXT int sel_item_cnt;
XEXT int sel_total_arts;
XEXT int sel_prior_arts;
XEXT int sel_page_arts;
XEXT int sel_page_cnt;
XEXT int sel_max_cnt;
XEXT int sel_line;
XEXT int sel_last_line;
XEXT bool sel_at_end;
XEXT ARTICLE **sel_page_app;
XEXT SUBJECT *sel_page_sp;
XEXT ARTICLE **sel_next_app;
XEXT SUBJECT *sel_next_sp;
XEXT ARTICLE *sel_last_ap;
XEXT SUBJECT *sel_last_sp;
X
Xchar do_selector _((char_int));
X#define DS_POS  	0
X#define DS_ASK  	1
X#define DS_UPDATE	2
X#define DS_DISPLAY	3
X#define DS_RESTART	4
X#define DS_STATUS	5
X#define DS_QUIT 	6
X
X#ifdef DOINIT
X
Xstatic void empty_complaint _((void));
Xstatic void sel_cleanup _((void));
Xstatic int sel_command _((char_int));
X
X#endif
END_OF_FILE
if test 1746 -ne `wc -c <'rt-select.h'`; then
    echo shar: \"'rt-select.h'\" unpacked with wrong size!
fi
# end of 'rt-select.h'
fi
if test -f 'rt-util.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'rt-util.h'\"
else
echo shar: Extracting \"'rt-util.h'\" \(751 characters\)
sed "s/^X//" >'rt-util.h' <<'END_OF_FILE'
X/* $Id: rt-util.h,v 3.0 1992/12/14 00:14:15 davison Trn $
X*/
X/* The authors make no claims as to the fitness or correctness of this software
X * for any use whatsoever, and it is provided as is. Any use of this software
X * is at the user's own risk. 
X */
X
Xchar *extract_name _((char*));
Xchar *compress_from _((ARTICLE*,int));
Xchar *compress_name _((char*,int));
Xchar *compress_subj _((ARTICLE*,int));
Xchar *get_subject_start _((char*));
X#ifndef HAS_STRCASECMP
Xint strcasecmp _((char*,char*));
Xint strncasecmp _((char*,char*,int));
X#endif
X
XEXT char spin_char INIT(' ');	/* char to put back when we're done spinning */
X
X#define SPIN_OFF	0
X#define SPIN_POP	1
X#define SPIN_FOREGROUND	2
X#define SPIN_BACKGROUND 3
X
Xvoid setspin _((int));
Xvoid spin _((int));
END_OF_FILE
if test 751 -ne `wc -c <'rt-util.h'`; then
    echo shar: \"'rt-util.h'\" unpacked with wrong size!
fi
# end of 'rt-util.h'
fi
if test -f 'rt-wumpus.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'rt-wumpus.h'\"
else
echo shar: Extracting \"'rt-wumpus.h'\" \(617 characters\)
sed "s/^X//" >'rt-wumpus.h' <<'END_OF_FILE'
X/* $Id: rt-wumpus.h,v 3.0 1992/12/14 00:14:15 davison Trn $
X*/
X/* The authors make no claims as to the fitness or correctness of this software
X * for any use whatsoever, and it is provided as is. Any use of this software
X * is at the user's own risk. 
X */
X
Xvoid init_tree _((void));
Xvoid entire_tree _((ARTICLE*));
Xint tree_puts _((char*,ART_LINE,int));
Xint finish_tree _((ART_LINE));
X
X#ifdef DOINIT
X
Xstatic void find_depth _((ARTICLE*,int));
Xstatic void cache_tree _((ARTICLE*,int,char*));
Xstatic void display_tree _((ARTICLE*,char*));
Xstatic char letter _((ARTICLE*));
Xstatic int check_page_line _((void));
X
X#endif
END_OF_FILE
if test 617 -ne `wc -c <'rt-wumpus.h'`; then
    echo shar: \"'rt-wumpus.h'\" unpacked with wrong size!
fi
# end of 'rt-wumpus.h'
fi
if test -f 'search.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'search.h'\"
else
echo shar: Extracting \"'search.h'\" \(1711 characters\)
sed "s/^X//" >'search.h' <<'END_OF_FILE'
X/* $Id: search.h,v 3.0 1991/09/09 20:27:37 davison Trn $
X */
X/* This software is Copyright 1991 by Stan Barber. 
X *
X * Permission is hereby granted to copy, reproduce, redistribute or otherwise
X * use this software as long as: there is no monetary profit gained
X * specifically from the use or reproduction of this software, it is not
X * sold, rented, traded or otherwise marketed, and this copyright notice is
X * included prominently in any copy made. 
X *
X * The authors make no claims as to the fitness or correctness of this software
X * for any use whatsoever, and it is provided as is. Any use of this software
X * is at the user's own risk. 
X */
X
X#ifndef NBRA
X#define	NBRA	10		/* the maximum number of meta-brackets in an
X				   RE -- \( \) */
X#define NALTS	10		/* the maximum number of \|'s */
X 
Xtypedef struct {	
X    char *expbuf;		/* The compiled search string */
X    int eblen;			/* Length of above buffer */
X    char *alternatives[NALTS];	/* The list of \| seperated alternatives */
X    char *braslist[NBRA];	/* RE meta-bracket start list */
X    char *braelist[NBRA];	/* RE meta-bracket end list */
X    char *brastr;		/* saved match string after execute() */
X    char nbra;			/* The number of meta-brackets int the most
X				   recenlty compiled RE */
X    bool do_folding;		/* fold upper and lower case? */
X} COMPEX;
X
Xvoid	search_init _((void));
Xvoid	init_compex _((COMPEX*));
Xvoid	free_compex _((COMPEX*));
Xchar	*getbracket _((COMPEX*,int));
Xvoid	case_fold _((int));
Xchar	*compile _((COMPEX*,char*,int,int)); 
Xchar	*grow_eb _((COMPEX*,char*,char**));
Xchar	*execute _((COMPEX*,char*)); 
Xbool	advance _((COMPEX*,char*,char*));
Xbool	backref _((COMPEX*,int,char*)); 
Xbool	cclass _((char*,int,int));
X#endif
END_OF_FILE
if test 1711 -ne `wc -c <'search.h'`; then
    echo shar: \"'search.h'\" unpacked with wrong size!
fi
# end of 'search.h'
fi
if test -f 'sw.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'sw.h'\"
else
echo shar: Extracting \"'sw.h'\" \(888 characters\)
sed "s/^X//" >'sw.h' <<'END_OF_FILE'
X/* $Id: sw.h,v 3.0 1992/02/01 03:09:32 davison Trn $
X */
X/* This software is Copyright 1991 by Stan Barber. 
X *
X * Permission is hereby granted to copy, reproduce, redistribute or otherwise
X * use this software as long as: there is no monetary profit gained
X * specifically from the use or reproduction of this software, it is not
X * sold, rented, traded or otherwise marketed, and this copyright notice is
X * included prominently in any copy made. 
X *
X * The authors make no claims as to the fitness or correctness of this software
X * for any use whatsoever, and it is provided as is. Any use of this software
X * is at the user's own risk. 
X */
X
X#ifdef INNERSEARCH
XEXT int gline INIT(0);
X#endif
X
Xvoid    sw_init _((int,char**,char**));
Xvoid    sw_file _((char**,bool_int));
Xvoid    sw_list _((char*));
Xvoid	decode_switch _((char*));
Xvoid	pr_switches _((void));
Xvoid	cwd_check _((void));
END_OF_FILE
if test 888 -ne `wc -c <'sw.h'`; then
    echo shar: \"'sw.h'\" unpacked with wrong size!
fi
# end of 'sw.h'
fi
if test -f 'trn.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'trn.h'\"
else
echo shar: Extracting \"'trn.h'\" \(1474 characters\)
sed "s/^X//" >'trn.h' <<'END_OF_FILE'
X/* $Id: trn.h,v 4.4 1991/09/09 20:27:37 davison Trn $
X */
X/* This software is Copyright 1991 by Stan Barber. 
X *
X * Permission is hereby granted to copy, reproduce, redistribute or otherwise
X * use this software as long as: there is no monetary profit gained
X * specifically from the use or reproduction of this software, it is not
X * sold, rented, traded or otherwise marketed, and this copyright notice is
X * included prominently in any copy made. 
X *
X * The authors make no claims as to the fitness or correctness of this software
X * for any use whatsoever, and it is provided as is. Any use of this software
X * is at the user's own risk. 
X */
X
XEXT char *ngname INIT(Nullch);		/* name of current newsgroup */
XEXT int ngnlen INIT(0);			/* current malloced size of ngname */
XEXT char *ngdir INIT(Nullch);		/* same thing in directory name form */
XEXT int ngdlen INIT(0);			/* current malloced size of ngdir */
X
XEXT NG_NUM ng INIT(0);		/* current newsgroup index into rcline and toread */
XEXT NG_NUM current_ng INIT(0);	/* stable current newsgroup so we can ditz with ng */
XEXT NG_NUM starthere INIT(0);   /* set to the first newsgroup with unread news on startup */
XEXT char *spool INIT(Nullch);		/* public news spool directory */
XEXT char *threaddir INIT(Nullch);	/* directory for thread data */
XEXT char *overviewdir INIT(Nullch);	/* directory for overview data */
X
Xvoid	rn_init _((void));
Xvoid	main _((int,char**));
Xvoid	set_ngname _((char*));
Xchar	*getngdir _((char*));
END_OF_FILE
if test 1474 -ne `wc -c <'trn.h'`; then
    echo shar: \"'trn.h'\" unpacked with wrong size!
fi
# end of 'trn.h'
fi
if test -f 'unipatch.c' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'unipatch.c'\"
else
echo shar: Extracting \"'unipatch.c'\" \(1507 characters\)
sed "s/^X//" >'unipatch.c' <<'END_OF_FILE'
X/*
XA filter to turn a unified diff into a degenerate context diff (no '!'s)
Xfor patch. Version 1.1. Author: davison@borland.com
X*/
X#include <stdio.h>
X#define ERR(a) {fputs(a,stderr);exit(1);}
X#define NUM(x) {for(x=0;*cp<='9'&&*cp>='0';)x=x*10+*cp++-'0';ch= *cp++;}
Xstruct Ln {struct Ln *lk; char t; char s[1];} r,*h,*ln;
Xchar bf[2048],*cp,ch,*malloc();
Xlong os,ol,ns,nl,ne,lncnt;
Xmain()
X{
X for(;;){
X  for(;;){
X   if(!fgets(bf,sizeof bf,stdin)) exit(0);
X   lncnt++;
X   if(!strncmp(bf,"@@ -",4)) break;
X   fputs(bf,stdout);
X  }
X  ol=nl=1, cp=bf+4;
X  NUM(os)
X  if(ch==',') NUM(ol)
X  if(*cp++!='+') goto bad;
X  NUM(ns)
X  if(ch==',') NUM(nl)
X  if(*cp!='@') goto bad;
X  r.lk=0, h= &r, ne=ns+nl-1;
X  printf("***************\n*** %ld,%ld ****\n",os,os+ol-(os>0));
X  while(ol||nl){
X   if(!fgets(bf,sizeof bf,stdin)){
X    if(nl>2) ERR("Unexpected end of file.\n")
X    strcpy(bf," \n");
X   }
X   lncnt++;
X   if(*bf=='\t'||*bf=='\n') ch=' ', cp=bf;
X   else ch= *bf, cp=bf+1;
X   switch(ch){
X   case'-':if(!ol--) goto bad;
X	printf("- %s",cp);
X	break;
X   case'=':ch=' ';
X   case' ':if(!ol--) goto bad;
X	printf("  %s",cp);
X   case'+':if(!nl--) goto bad;
X	ln = (struct Ln*)malloc(sizeof(*ln)+strlen(cp));
X	if(!ln) ERR("Out of memory!\n")
X	ln->lk=0, ln->t=ch, strcpy(ln->s,cp);
X	h->lk=ln, h=ln;
X	break;
X   default:
Xbad:	fprintf(stderr,"Malformed unified diff at line %ld: ",lncnt);
X	ERR(bf)
X   }
X  }
X  printf("--- %ld,%ld ----\n",ns,ne);
X  for(ln=r.lk;ln;ln=h){
X   printf("%c %s",ln->t,ln->s);
X   h=ln->lk; free(ln);
X  }
X }
X}
END_OF_FILE
if test 1507 -ne `wc -c <'unipatch.c'`; then
    echo shar: \"'unipatch.c'\" unpacked with wrong size!
fi
# end of 'unipatch.c'
fi
if test -f 'util.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'util.h'\"
else
echo shar: Extracting \"'util.h'\" \(1650 characters\)
sed "s/^X//" >'util.h' <<'END_OF_FILE'
X/* $Id: util.h,v 3.0 1991/09/09 20:27:37 davison Trn $
X */
X/* This software is Copyright 1991 by Stan Barber. 
X *
X * Permission is hereby granted to copy, reproduce, redistribute or otherwise
X * use this software as long as: there is no monetary profit gained
X * specifically from the use or reproduction of this software, it is not
X * sold, rented, traded or otherwise marketed, and this copyright notice is
X * included prominently in any copy made. 
X *
X * The authors make no claims as to the fitness or correctness of this software
X * for any use whatsoever, and it is provided as is. Any use of this software
X * is at the user's own risk. 
X */
X
XEXT bool waiting INIT(FALSE);	
X			/* are we waiting for subprocess (in doshell)? */
XEXT int len_last_line_got INIT(0);
X			/* strlen of some_buf after */
X			/*  some_buf = get_a_line(bufptr,buffersize,fp) */
XEXT MEM_SIZE buflen_last_line_got INIT(0);
X
X/* is the string for makedir a directory name or a filename? */
X
X#define MD_DIR 	0
X#define MD_FILE 1
X
Xvoid	util_init _((void));
Xint	doshell _((char*,char*));
Xchar	*safemalloc _((MEM_SIZE));
Xchar	*saferealloc _((char*,MEM_SIZE));
Xchar	*safecpy _((char*,char*,int));
Xchar	*safecat _((char*,char*,int));
Xchar	*cpytill _((char*,char*,int));
Xchar	*instr _((char*,char*,bool_int));
X#ifdef SETUIDGID
Xint	eaccess _((char*,int));
X#endif
Xchar	*getwd _((char*));
Xchar	*get_a_line _((char*,int,FILE*));
Xchar	*savestr _((char*));
Xint	makedir _((char*,int));
Xvoid	export _((char*,char*));
Xint	envix _((char*));
Xvoid	notincl _((char*));
Xchar	*getval _((char*,char*));
Xvoid	growstr _((char**,int*,int));
Xvoid	setdef _((char*,char*));
Xvoid	safelink _((char*,char*));
END_OF_FILE
if test 1650 -ne `wc -c <'util.h'`; then
    echo shar: \"'util.h'\" unpacked with wrong size!
fi
# end of 'util.h'
fi
echo shar: End of archive 1 \(of 12\).
cp /dev/null ark1isdone
MISSING=""
for I in 1 2 3 4 5 6 7 8 9 10 11 12 ; do
    if test ! -f ark${I}isdone ; then
	MISSING="${MISSING} ${I}"
    fi
done
if test "${MISSING}" = "" ; then
    echo You have unpacked all 12 archives.
    rm -f ark[1-9]isdone ark[1-9][0-9]isdone
else
    echo You still need to unpack the following archives:
    echo "        " ${MISSING}
fi
##  End of shell archive.
exit 0
