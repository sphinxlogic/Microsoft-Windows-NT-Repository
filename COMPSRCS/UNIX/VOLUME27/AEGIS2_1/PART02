Newsgroups: comp.sources.unix
From: pmiller@bmr.gov.au (Peter Miller)
Subject: v27i037: aegis - project change supervisor (V2.1), Part02/19
References: <1.748951883.12788@gw.home.vix.com>
Sender: unix-sources-moderator@gw.home.vix.com
Approved: vixie@gw.home.vix.com

Submitted-By: pmiller@bmr.gov.au (Peter Miller)
Posting-Number: Volume 27, Issue 37
Archive-Name: aegis-2.1/part02

#! /bin/sh
# This is a shell archive.  Remove anything before this line, then unpack
# it by saving it into a file and typing "sh file".  To overwrite existing
# files, type "sh file -c".  You can also feed this as standard input via
# unshar, or by typing "sh <file", e.g..  If this archive is complete, you
# will see the following message at the end:
#		"End of archive 2 (of 19)."
# Contents:  aegis/ael.h aegis/cattr.def aegis/gonzo.h aegis/gram.y
#   aegis/lock.h aegis/type.c aegis/type.h aegis/uconf.def
#   aegis/ustate.def aux/MANIFEST.sh aux/new.1.4.so aux/new.2.0.so
#   common/arglex.h common/error.h common/option.h common/s-v-arg.h
#   common/str.h common/word.h doc/aegis.ms doc/c1.1.so doc/c2.5.so
#   doc/c4.0.so doc/c4.3.so doc/c7.0.so doc/c8.3.so fmtgen/type.c
#   h/unistd.h lib/de.inews.sh lib/de.sh lib/deu.inews.sh lib/deu.sh
#   lib/if.inews.sh lib/if.sh lib/ip.inews.sh lib/ip.sh
#   lib/rf.inews.sh lib/rf.sh lib/rp.inews.sh lib/rp.sh
#   lib/rpu.inews.sh lib/rpu.sh man1/aeca.1 man1/aecd.1 man1/aedbu.1
#   man1/aedeu.1 man1/aeibu.1 man1/aena.1 man1/aencu.1 man1/aend.1
#   man1/aeni.1 man1/aenrv.1 man1/aentu.1 man1/aepa.1 man1/aera.1
#   man1/aerd.1 man1/aeri.1 man1/aerm.1 man1/aermpr.1 man1/aermu.1
#   man1/aerp.1 man1/aerpu.1 man1/aerrv.1 man1/aev.1 man1/o__rules.so
#   man1/o_anticip.so man1/o_change.so man1/o_lib.so man1/o_page.so
#   man1/o_project.so man1/z_cr.so man1/z_intuit.so man5/aegstate.5
#   man5/aeustate.5 man5/z_cr.so script/aegis.synpic test/00/t0012a.sh
# Wrapped by vixie@gw.home.vix.com on Sat Sep 25 03:00:24 1993
PATH=/bin:/usr/bin:/usr/ucb ; export PATH
if test -f 'aegis/ael.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'aegis/ael.h'\"
else
echo shar: Extracting \"'aegis/ael.h'\" \(2099 characters\)
sed "s/^X//" >'aegis/ael.h' <<'END_OF_FILE'
X/*
X *	aegis - project change supervisor
X *	Copyright (C) 1991, 1992, 1993 Peter Miller.
X *	All rights reserved.
X *
X *	This program is free software; you can redistribute it and/or modify
X *	it under the terms of the GNU General Public License as published by
X *	the Free Software Foundation; either version 2 of the License, or
X *	(at your option) any later version.
X *
X *	This program is distributed in the hope that it will be useful,
X *	but WITHOUT ANY WARRANTY; without even the implied warranty of
X *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X *	GNU General Public License for more details.
X *
X *	You should have received a copy of the GNU General Public License
X *	along with this program; if not, write to the Free Software
X *	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X *
X * MANIFEST: interface definition for aegis/ael.c
X */
X
X#ifndef AEGIS_AEL_H
X#define AEGIS_AEL_H
X
X#include <main.h>
X
Xstruct string_ty;
X
Xvoid list _((void));
X
Xvoid list_administrators _((struct string_ty *, long));
Xvoid list_change_details _((struct string_ty *, long));
Xvoid list_change_files _((struct string_ty *, long));
Xvoid list_change_history _((struct string_ty *, long));
Xvoid list_changes_in_state_mask _((struct string_ty *, int state_mask));
Xvoid list_changes _((struct string_ty *, long));
Xvoid list_default_change _((struct string_ty *, long));
Xvoid list_default_project _((struct string_ty *, long));
Xvoid list_developers _((struct string_ty *, long));
Xvoid list_integrators _((struct string_ty *, long));
Xvoid list_list_list _((struct string_ty *, long));
Xvoid list_locks _((struct string_ty *, long));
Xvoid list_outstanding_changes _((struct string_ty *, long));
Xvoid list_outstanding_changes_all _((struct string_ty *, long));
Xvoid list_project_files _((struct string_ty *, long));
Xvoid list_project_history _((struct string_ty *, long));
Xvoid list_projects _((struct string_ty *, long));
Xvoid list_reviewers _((struct string_ty *, long));
Xvoid list_user_changes _((struct string_ty *, long));
Xvoid list_version _((struct string_ty *, long));
X
X#endif /* AEGIS_AEL_H */
END_OF_FILE
if test 2099 -ne `wc -c <'aegis/ael.h'`; then
    echo shar: \"'aegis/ael.h'\" unpacked with wrong size!
fi
# end of 'aegis/ael.h'
fi
if test -f 'aegis/cattr.def' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'aegis/cattr.def'\"
else
echo shar: Extracting \"'aegis/cattr.def'\" \(2051 characters\)
sed "s/^X//" >'aegis/cattr.def' <<'END_OF_FILE'
X/*
X *	aegis - project change supervisor
X *	Copyright (C) 1991, 1992, 1993 Peter Miller.
X *	All rights reserved.
X *
X *	This program is free software; you can redistribute it and/or modify
X *	it under the terms of the GNU General Public License as published by
X *	the Free Software Foundation; either version 2 of the License, or
X *	(at your option) any later version.
X *
X *	This program is distributed in the hope that it will be useful,
X *	but WITHOUT ANY WARRANTY; without even the implied warranty of
X *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X *	GNU General Public License for more details.
X *
X *	You should have received a copy of the GNU General Public License
X *	along with this program; if not, write to the Free Software
X *	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X *
X * MANIFEST: change state file contents definition
X *
X * if you change this file, don't forget to change
X *	man5/aecattr.so
X */
X
X#include <common.def>
X
X/*
X * This file contains a brief description of the change.
X * It should be limited to a single line of text.
X */
Xbrief_description = string;
X
X/*
X * This file contains a detailed description of the change.
X */
Xdescription = string;
X
X/*
X * This field describes the cause which motivated the change.
X */
Xcause = change_cause;
X
X/*
X * This field is true if it is not necessary
X * to test the change.
X * It is, in general, desirable to test all changes,
X * whether new functionality or a bug fix.
X * This is, however, a project management issue.
X */
Xtest_exempt = boolean;
X
X/*
X * This field is true if it is not necessary
X * to test the change against the baseline before it is changed.
X * The test of the baseline is required to fail;
X * this is to establish that the test has isolated the bug,
X * and that the change has fixed that isolated bug.
X */
Xtest_baseline_exempt = boolean;
X
X/*
X * This field is true if it is not necessary
X * to perform a full regression test on the change.
X * If absent, defaults to true for all causes except improvments.
X */
Xregression_test_exempt = boolean;
END_OF_FILE
if test 2051 -ne `wc -c <'aegis/cattr.def'`; then
    echo shar: \"'aegis/cattr.def'\" unpacked with wrong size!
fi
# end of 'aegis/cattr.def'
fi
if test -f 'aegis/gonzo.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'aegis/gonzo.h'\"
else
echo shar: Extracting \"'aegis/gonzo.h'\" \(1646 characters\)
sed "s/^X//" >'aegis/gonzo.h' <<'END_OF_FILE'
X/*
X *	aegis - project change supervisor
X *	Copyright (C) 1991, 1992, 1993 Peter Miller.
X *	All rights reserved.
X *
X *	This program is free software; you can redistribute it and/or modify
X *	it under the terms of the GNU General Public License as published by
X *	the Free Software Foundation; either version 2 of the License, or
X *	(at your option) any later version.
X *
X *	This program is distributed in the hope that it will be useful,
X *	but WITHOUT ANY WARRANTY; without even the implied warranty of
X *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X *	GNU General Public License for more details.
X *
X *	You should have received a copy of the GNU General Public License
X *	along with this program; if not, write to the Free Software
X *	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X *
X * MANIFEST: interface definition for aegis/gonzo.c
X */
X
X#ifndef GONZO_H
X#define GONZO_H
X
X#include <main.h>
X#include <gstate.h>
X
Xstruct wlist;
Xstruct project_ty;
X
Xvoid gonzo_gstate_write _((void));
X
Xvoid gonzo_library_append _((char *path));
X
Xstruct string_ty *gonzo_project_home_path_from_name _((struct string_ty *));
Xvoid gonzo_project_list _((struct wlist *result));
Xvoid gonzo_project_list_user _((string_ty *, struct wlist *result));
Xvoid gonzo_project_add _((struct project_ty *));
Xvoid gonzo_project_delete _((struct project_ty *));
Xvoid gonzo_gstate_write _((void));
Xvoid gonzo_gstate_lock_prepare_new _((void));
X
Xstring_ty *gonzo_lockpath_get _((void));
Xstring_ty *gonzo_ustate_path _((string_ty *project_name, string_ty *user_name));
X
Xvoid gonzo_become _((void));
Xvoid gonzo_become_undo _((void));
X
X#endif /* GONZO_H */
END_OF_FILE
if test 1646 -ne `wc -c <'aegis/gonzo.h'`; then
    echo shar: \"'aegis/gonzo.h'\" unpacked with wrong size!
fi
# end of 'aegis/gonzo.h'
fi
if test -f 'aegis/gram.y' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'aegis/gram.y'\"
else
echo shar: Extracting \"'aegis/gram.y'\" \(1978 characters\)
sed "s/^X//" >'aegis/gram.y' <<'END_OF_FILE'
X/*
X *	aegis - project change supervisor
X *	Copyright (C) 1991, 1992, 1993 Peter Miller.
X *	All rights reserved.
X *
X *	This program is free software; you can redistribute it and/or modify
X *	it under the terms of the GNU General Public License as published by
X *	the Free Software Foundation; either version 2 of the License, or
X *	(at your option) any later version.
X *
X *	This program is distributed in the hope that it will be useful,
X *	but WITHOUT ANY WARRANTY; without even the implied warranty of
X *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X *	GNU General Public License for more details.
X *
X *	You should have received a copy of the GNU General Public License
X *	along with this program; if not, write to the Free Software
X *	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X *
X * MANIFEST: grammar and functions to parse aegis' data files
X */
X
X%{
X
X#include <stdlib.h>
X
X#include <gram.h>
X#include <lex.h>
X#include <mem.h>
X#include <parse.h>
X
X%}
X
X%token NAME
X%token INTEGER
X%token STRING
X
X%union
X{
X	string_ty	*lv_string;
X	long		lv_integer;
X}
X
X%type <lv_string> NAME STRING
X%type <lv_integer> INTEGER integer
X
X%%
X
Xfile
X	: field_list
X	;
X
Xfield_list
X	: /* empty */
X	| field_list field
X	;
X
Xfield
X	: field_name '=' value ';'
X		{
X			sem_pop();
X		}
X	;
X
Xfield_name
X	: NAME
X		{
X			sem_field($1);
X		}
X	;
X
Xvalue
X	: integer
X		{
X			sem_integer($1);
X		}
X	| STRING
X		{
X			sem_string($1);
X		}
X	| structure
X	| list
X	| enumeration
X	;
X
Xinteger
X	: INTEGER
X		{ $$ = $1; }
X	| '-' INTEGER
X		{ $$ = -$2; }
X	;
X
Xstructure
X	: '{' field_list '}'
X	;
X
Xlist
X	: list_begin optional_value_list list_end
X	;
X
Xlist_begin
X	: '['
X		{
X			/* sem_list(); */
X		}
X	;
X
Xlist_end
X	: ']'
X		{
X			/* sem_pop(); */
X		}
X	;
X
Xoptional_value_list
X	: /* empty */
X	| value_list optional_comma
X	;
X
Xvalue_list
X	: list_value
X	| value_list ',' list_value
X	;
X
Xlist_value
X	: { sem_list(); } value {sem_pop(); }
X	;
X
Xoptional_comma
X	: /* empty */
X	| ','
X	;
X
Xenumeration
X	: NAME
X		{
X			sem_enum($1);
X		}
X	;
END_OF_FILE
if test 1978 -ne `wc -c <'aegis/gram.y'`; then
    echo shar: \"'aegis/gram.y'\" unpacked with wrong size!
fi
# end of 'aegis/gram.y'
fi
if test -f 'aegis/lock.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'aegis/lock.h'\"
else
echo shar: Extracting \"'aegis/lock.h'\" \(2100 characters\)
sed "s/^X//" >'aegis/lock.h' <<'END_OF_FILE'
X/*
X *	aegis - project change supervisor
X *	Copyright (C) 1991, 1992, 1993 Peter Miller.
X *	All rights reserved.
X *
X *	This program is free software; you can redistribute it and/or modify
X *	it under the terms of the GNU General Public License as published by
X *	the Free Software Foundation; either version 2 of the License, or
X *	(at your option) any later version.
X *
X *	This program is distributed in the hope that it will be useful,
X *	but WITHOUT ANY WARRANTY; without even the implied warranty of
X *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X *	GNU General Public License for more details.
X *
X *	You should have received a copy of the GNU General Public License
X *	along with this program; if not, write to the Free Software
X *	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X *
X * MANIFEST: interface definition for aegis/lock.c
X */
X
X#ifndef LOCK_H
X#define LOCK_H
X
X#include <main.h>
X
Xstruct string_ty;
X
Xvoid lock_prepare_gstate _((void));
Xvoid lock_prepare_pstate _((struct string_ty *project_name));
Xvoid lock_prepare_ustate _((int uid));
Xvoid lock_prepare_ustate_all _((void));
Xvoid lock_prepare_cstate _((struct string_ty *project_name, long change_number));
Xvoid lock_take _((void));
Xvoid lock_release _((void));
Xlong lock_magic _((void));
Xvoid lock_prepare_build_read _((struct string_ty *project_name));
Xvoid lock_prepare_build_write _((struct string_ty *project_name));
X
Xenum lock_walk_name
X{
X	lock_walk_name_master,
X	lock_walk_name_gstate,
X	lock_walk_name_pstate,
X	lock_walk_name_cstate,
X	lock_walk_name_build,
X	lock_walk_name_ustate,
X	lock_walk_name_unknown
X};
Xtypedef enum lock_walk_name lock_walk_name;
X
Xenum lock_walk_type
X{
X	lock_walk_type_shared,
X	lock_walk_type_exclusive,
X	lock_walk_type_unknown
X};
Xtypedef enum lock_walk_type lock_walk_type;
X
Xtypedef struct lock_walk_found lock_walk_found;
Xstruct lock_walk_found
X{
X	lock_walk_name	name;
X	lock_walk_type	type;
X	long		subset;
X	long		address;
X	int		pid;
X	int		pid_is_local;
X};
X
Xtypedef void (*lock_walk_callback)_((lock_walk_found *));
X
Xvoid lock_walk _((lock_walk_callback));
X
X#endif /* LOCK_H */
END_OF_FILE
if test 2100 -ne `wc -c <'aegis/lock.h'`; then
    echo shar: \"'aegis/lock.h'\" unpacked with wrong size!
fi
# end of 'aegis/lock.h'
fi
if test -f 'aegis/type.c' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'aegis/type.c'\"
else
echo shar: Extracting \"'aegis/type.c'\" \(1610 characters\)
sed "s/^X//" >'aegis/type.c' <<'END_OF_FILE'
X/*
X *	aegis - project change supervisor
X *	Copyright (C) 1991, 1992, 1993 Peter Miller.
X *	All rights reserved.
X *
X *	This program is free software; you can redistribute it and/or modify
X *	it under the terms of the GNU General Public License as published by
X *	the Free Software Foundation; either version 2 of the License, or
X *	(at your option) any later version.
X *
X *	This program is distributed in the hope that it will be useful,
X *	but WITHOUT ANY WARRANTY; without even the implied warranty of
X *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X *	GNU General Public License for more details.
X *
X *	You should have received a copy of the GNU General Public License
X *	along with this program; if not, write to the Free Software
X *	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X *
X * MANIFEST: functions to manipulate types in aegis' data files
X */
X
X#include <type.h>
X
X
X/*
X * NAME
X *	type_class_name
X *
X * SYNOPSIS
X *	char *type_class_name(type_class_ty n);
X *
X * DESCRIPTION
X *	The type_class_name function is used to
X *	find the symbolic name of a type class number.
X *
X * ARGUMENTS
X *	n	- type class number to finf symbolic name for
X *
X * RETURNS
X *	char *;	pointer to nul-terminated string.
X *
X * CAVEAT
X *	Do not modify the string pointed to.
X */
X
Xchar *
Xtype_class_name(type)
X	type_ty	*type;
X{
X	switch (type->class)
X	{
X	case type_class_integer:
X		return "integer";
X
X	case type_class_string:
X		return "string";
X
X	case type_class_enum:
X		return "enumerator";
X
X	case type_class_list:
X		return "list";
X
X	case type_class_struct:
X		return "structure";
X	}
X	return "unknown";
X}
END_OF_FILE
if test 1610 -ne `wc -c <'aegis/type.c'`; then
    echo shar: \"'aegis/type.c'\" unpacked with wrong size!
fi
# end of 'aegis/type.c'
fi
if test -f 'aegis/type.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'aegis/type.h'\"
else
echo shar: Extracting \"'aegis/type.h'\" \(1561 characters\)
sed "s/^X//" >'aegis/type.h' <<'END_OF_FILE'
X/*
X *	aegis - project change supervisor
X *	Copyright (C) 1991, 1992, 1993 Peter Miller.
X *	All rights reserved.
X *
X *	This program is free software; you can redistribute it and/or modify
X *	it under the terms of the GNU General Public License as published by
X *	the Free Software Foundation; either version 2 of the License, or
X *	(at your option) any later version.
X *
X *	This program is distributed in the hope that it will be useful,
X *	but WITHOUT ANY WARRANTY; without even the implied warranty of
X *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X *	GNU General Public License for more details.
X *
X *	You should have received a copy of the GNU General Public License
X *	along with this program; if not, write to the Free Software
X *	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X *
X * MANIFEST: interface definition for aegis/type.c
X */
X
X#ifndef TYPE_H
X#define TYPE_H
X
X#include <stddef.h>
X
X#include <main.h>
X#include <str.h>
X
Xenum type_class_ty
X{
X	type_class_integer,
X	type_class_string,
X	type_class_enum,
X	type_class_list,
X	type_class_struct
X};
Xtypedef enum type_class_ty type_class_ty;
X
Xtypedef struct type_ty type_ty;
Xstruct type_ty
X{
X	type_class_ty	class;
X	char		*name;
X
X	void *(*alloc)_((void));
X	void (*free)_((void *this));
X	int (*enum_parse)_((string_ty *name, void *addr));
X	void (*list_parse)_((void *this, type_ty **type_pp, void **addr_p));
X	int (*struct_parse)_((void *this, string_ty *name, type_ty **type_pp,
X		void **addr_p, unsigned long *maskp));
X};
X
Xchar *type_class_name _((type_ty *));
X
X#endif /* TYPE_H */
END_OF_FILE
if test 1561 -ne `wc -c <'aegis/type.h'`; then
    echo shar: \"'aegis/type.h'\" unpacked with wrong size!
fi
# end of 'aegis/type.h'
fi
if test -f 'aegis/uconf.def' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'aegis/uconf.def'\"
else
echo shar: Extracting \"'aegis/uconf.def'\" \(1671 characters\)
sed "s/^X//" >'aegis/uconf.def' <<'END_OF_FILE'
X/*
X *	aegis - project change supervisor
X *	Copyright (C) 1991, 1992, 1993 Peter Miller.
X *	All rights reserved.
X *
X *	This program is free software; you can redistribute it and/or modify
X *	it under the terms of the GNU General Public License as published by
X *	the Free Software Foundation; either version 2 of the License, or
X *	(at your option) any later version.
X *
X *	This program is distributed in the hope that it will be useful,
X *	but WITHOUT ANY WARRANTY; without even the implied warranty of
X *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X *	GNU General Public License for more details.
X *
X *	You should have received a copy of the GNU General Public License
X *	along with this program; if not, write to the Free Software
X *	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X * 
X * MANIFEST: user config file contents definition
X *
X * this file resides at $HOME/.aegisrc
X *
X * it is only ever read by aegis, so there is no need for locking.
X *
X * If you change this file, don't forget to change
X *	man5/aeuconf.5
X */
X
X/*
X * The name of a project.
X */
Xdefault_project_name = string;
X
X/*
X * the number of a change
X */
Xdefault_change_number = integer;
X
X/*
X * The pathname of where to place new development directories.
X * The pathname may be relative,
X * in which case it is relative to $HOME.
X * The default is $HOME.
X * The project attribute of the same name overrides this user attribute.
X */
Xdefault_development_directory = string;
X
X/*
X * The pathname of where to place new project directories.
X * This pathname may be relative, in which case it is relative to $HOME.
X * The default is $HOME.
X */
Xdefault_project_directory = string;
END_OF_FILE
if test 1671 -ne `wc -c <'aegis/uconf.def'`; then
    echo shar: \"'aegis/uconf.def'\" unpacked with wrong size!
fi
# end of 'aegis/uconf.def'
fi
if test -f 'aegis/ustate.def' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'aegis/ustate.def'\"
else
echo shar: Extracting \"'aegis/ustate.def'\" \(1434 characters\)
sed "s/^X//" >'aegis/ustate.def' <<'END_OF_FILE'
X/*
X *	aegis - project change supervisor
X *	Copyright (C) 1991, 1992, 1993 Peter Miller.
X *	All rights reserved.
X *
X *	This program is free software; you can redistribute it and/or modify
X *	it under the terms of the GNU General Public License as published by
X *	the Free Software Foundation; either version 2 of the License, or
X *	(at your option) any later version.
X *
X *	This program is distributed in the hope that it will be useful,
X *	but WITHOUT ANY WARRANTY; without even the implied warranty of
X *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X *	GNU General Public License for more details.
X *
X *	You should have received a copy of the GNU General Public License
X *	along with this program; if not, write to the Free Software
X *	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X *
X * MANIFEST: user state file contents definition
X *
X * the file normally resides at /usr/local/lib/aegis/user/$LOGNAME
X *
X * this file is only read and written by aegis, and so must be locked
X *
X * If you change this file, don't forget to chanbge
X *	man5/aeustate.5
X */
X
X/*
X * This field is a list of change the user is currently working on,
X * within project.  The changes are in either the 'being_developed'
X * or 'being integrated' state.
X */
Xown =
X[
X	{
X		/*
X		 * The name of a project.
X		 */
X		project_name = string;
X
X		/*
X		 * The changes this user is working on in the project.
X		 */
X		changes = [integer];
X	}
X];
END_OF_FILE
if test 1434 -ne `wc -c <'aegis/ustate.def'`; then
    echo shar: \"'aegis/ustate.def'\" unpacked with wrong size!
fi
# end of 'aegis/ustate.def'
fi
if test -f 'aux/MANIFEST.sh' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'aux/MANIFEST.sh'\"
else
echo shar: Extracting \"'aux/MANIFEST.sh'\" \(1736 characters\)
sed "s/^X//" >'aux/MANIFEST.sh' <<'END_OF_FILE'
X#! /bin/sh
X#
X#	aegis - project change supervisor
X#	Copyright (C) 1992, 1993 Peter Miller.
X#	All rights reserved.
X#
X#	This program is free software; you can redistribute it and/or modify
X#	it under the terms of the GNU General Public License as published by
X#	the Free Software Foundation; either version 2 of the License, or
X#	(at your option) any later version.
X#
X#	This program is distributed in the hope that it will be useful,
X#	but WITHOUT ANY WARRANTY; without even the implied warranty of
X#	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X#	GNU General Public License for more details.
X#
X#	You should have received a copy of the GNU General Public License
X#	along with this program; if not, write to the Free Software
X#	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X#
X# MANIFEST: shell script to generate the MANIFEST file
X#
Xecho
Xecho
Xfor f in $*
Xdo
X	case $f in
X	MANIFEST)
X		info="This file"
X		;;
X	LICENSE)
X		info="GNU General Public License"
X		;;
X	README)
X		info="Blurb about aegis"
X		;;
X	BUILDING)
X		info="Instructions how to build, test and install aegis"
X		;;
X	BUILDpyr)
X		info="Additional build instructions for Pyramid"
X		;;
X	CHANGES)
X		info="Change history of this release of aegis"
X		;;
X	Makefile)
X		info="Instructions to make(1) how to build and test aegis"
X		;;
X	common/patchlevel.h)
X		info="The patch level of this distribution."
X		;;
X	doc/version.so)
X		info="The patch level of this distribution."
X		;;
X	aux/new.so)
X		info="Include redirection for release notes."
X		;;
X	*)
X		info=`awk '
X/[ 	]MANIFEST:[ 	]/ {
X	for (j = 1; j < NF; ++j)
X		if ($j == "MANIFEST:")
X			break;
X	for (k = j + 1; k <= NF; ++k)
X		printf(" %s", $k);
X	printf("\n");
X	exit;
X}' $f`
X		;;
X	esac
X	echo "$f	$info"
Xdone
Xexit 0
END_OF_FILE
if test 1736 -ne `wc -c <'aux/MANIFEST.sh'`; then
    echo shar: \"'aux/MANIFEST.sh'\" unpacked with wrong size!
fi
# end of 'aux/MANIFEST.sh'
fi
if test -f 'aux/new.1.4.so' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'aux/new.1.4.so'\"
else
echo shar: Extracting \"'aux/new.1.4.so'\" \(1609 characters\)
sed "s/^X//" >'aux/new.1.4.so' <<'END_OF_FILE'
X.\"
X.\"	aegis - project change supervisor
X.\"	Copyright (C) 1993 Peter Miller.
X.\"	All rights reserved.
X.\"
X.\"	This program is free software; you can redistribute it and/or modify
X.\"	it under the terms of the GNU General Public License as published by
X.\"	the Free Software Foundation; either version 2 of the License, or
X.\"	(at your option) any later version.
X.\"
X.\"	This program is distributed in the hope that it will be useful,
X.\"	but WITHOUT ANY WARRANTY; without even the implied warranty of
X.\"	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X.\"	GNU General Public License for more details.
X.\"
X.\"	You should have received a copy of the GNU General Public License
X.\"	along with this program; if not, write to the Free Software
X.\"	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X.\"
X.\" MANIFEST: document describing features new to version 1.4
X.\"
X.PP
X.if n *
X.if t \(bu
XSupport has been added for systems without the
X.I seteuid
Xsystem call,
Xor those with crippled implementations.
X.PP
X.if n *
X.if t \(bu
XMost of the unimplemented command variants have been finished.
XThese include
X.IR "New Change Undo" ,
X.IR "Develop Begin Undo"
Xand
X.IR "ReMove PRoject" .
XMost notable of the exceptions is
X.I -ANticipate
Xoption for the
X.I -CoPy_file
Xand
X.I -DIFFerence
Xcommand.
X.PP
X.if n *
X.if t \(bu
XThe User Guide has been added to,
Xmaking it a little more complete.
XIt still needs more work, sigh.
X.PP
X.if n *
X.if t \(bu
XThe code to handle automounters has been made more robust.
X.PP
X.if n *
X.if t \(bu
XThe command substitutions have been vastly improved,
Xand are now documented.
END_OF_FILE
if test 1609 -ne `wc -c <'aux/new.1.4.so'`; then
    echo shar: \"'aux/new.1.4.so'\" unpacked with wrong size!
fi
# end of 'aux/new.1.4.so'
fi
if test -f 'aux/new.2.0.so' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'aux/new.2.0.so'\"
else
echo shar: Extracting \"'aux/new.2.0.so'\" \(2038 characters\)
sed "s/^X//" >'aux/new.2.0.so' <<'END_OF_FILE'
X.\"
X.\"	aegis - project change supervisor
X.\"	Copyright (C) 1993 Peter Miller.
X.\"	All rights reserved.
X.\"
X.\"	This program is free software; you can redistribute it and/or modify
X.\"	it under the terms of the GNU General Public License as published by
X.\"	the Free Software Foundation; either version 2 of the License, or
X.\"	(at your option) any later version.
X.\"
X.\"	This program is distributed in the hope that it will be useful,
X.\"	but WITHOUT ANY WARRANTY; without even the implied warranty of
X.\"	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X.\"	GNU General Public License for more details.
X.\"
X.\"	You should have received a copy of the GNU General Public License
X.\"	along with this program; if not, write to the Free Software
X.\"	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X.\"
X.\" MANIFEST: document describing some of the features new to version 2.0
X.\"
X.PP
X.if n *
X.if t \(bu
XA new command
Xhas been added to facilitate changing the name of a file as
Xpart of a change.
XSee
X.IR aemv (1)
Xfor more information.
X.PP
X.if n *
X.if t \(bu
XIt is now possible to list the locks currently held.
XSee
X.IR ael (1)
Xfor more information.
X.PP
X.if n *
X.if t \(bu
XIf no other defaulting mechanism is specified,
Xaegis will now attempt to guess the project name and change number
Xfrom the pathname of the current directory.
XThis only works from within development directories.
X.PP
X.if n *
X.if t \(bu
XThe
X.IR aenc ,
X.IR aeca ,
X.IR aerfail ,
X.I aeifail
Xand
X.I aepa
Xcommands now accept a
X.B -Edit
Xcommand line argument.
XSee the relevant manual pages for more information.
X.PP
X.if n *
X.if t \(bu
XThe
X.I aenpr
Xcommand now understands the
X.B -MAJor
Xand
X.B -MINOr
Xoptions,
Xallowing the initial version of a project
Xto be something other than 1.0.
X.PP
X.if n *
X.if t \(bu
XThe
X.I aed
Xcommand now understands the
X.B -ANticipate
Xoption.
XSee
X.IR aed (1)
Xfor more information.
X.PP
X.if n *
X.if t \(bu
XIt is now possible to list all the outstanding changes of a project,
Xor of all projects.
XSee
X.IR ael (1)
Xfor more information.
END_OF_FILE
if test 2038 -ne `wc -c <'aux/new.2.0.so'`; then
    echo shar: \"'aux/new.2.0.so'\" unpacked with wrong size!
fi
# end of 'aux/new.2.0.so'
fi
if test -f 'common/arglex.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'common/arglex.h'\"
else
echo shar: Extracting \"'common/arglex.h'\" \(1649 characters\)
sed "s/^X//" >'common/arglex.h' <<'END_OF_FILE'
X/*
X *	aegis - project change supervisor
X *	Copyright (C) 1991, 1992, 1993 Peter Miller.
X *	All rights reserved.
X *
X *	This program is free software; you can redistribute it and/or modify
X *	it under the terms of the GNU General Public License as published by
X *	the Free Software Foundation; either version 2 of the License, or
X *	(at your option) any later version.
X *
X *	This program is distributed in the hope that it will be useful,
X *	but WITHOUT ANY WARRANTY; without even the implied warranty of
X *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X *	GNU General Public License for more details.
X *
X *	You should have received a copy of the GNU General Public License
X *	along with this program; if not, write to the Free Software
X *	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X *
X * MANIFEST: interface definition for common/arglex.c
X */
X
X#ifndef ARGLEX_H
X#define ARGLEX_H
X
X#include <main.h>
X
Xenum arglex_token_ty
X{
X	arglex_token_eoln = -20,
X	arglex_token_help,
X	arglex_token_number,
X	arglex_token_option,
X	arglex_token_stdio,
X	arglex_token_string,
X	arglex_token_trace,
X	arglex_token_version
X};
Xtypedef enum arglex_token_ty arglex_token_ty;
X
Xtypedef struct arglex_table_ty arglex_table_ty;
Xstruct arglex_table_ty
X{
X	char		*t_name;
X	arglex_token_ty	t_token;
X};
X
Xtypedef struct arglex_value_ty arglex_value_ty;
Xstruct arglex_value_ty
X{
X	char	*alv_string;
X	long	alv_number;
X};
X
Xextern arglex_token_ty arglex_token;
Xextern arglex_value_ty arglex_value;
X
Xvoid arglex_init _((int, char **, arglex_table_ty *));
Xarglex_token_ty arglex _((void));
Xint arglex_compare _((char *formal, char *actual));
X
X#endif /* ARGLEX_H */
END_OF_FILE
if test 1649 -ne `wc -c <'common/arglex.h'`; then
    echo shar: \"'common/arglex.h'\" unpacked with wrong size!
fi
# end of 'common/arglex.h'
fi
if test -f 'common/error.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'common/error.h'\"
else
echo shar: Extracting \"'common/error.h'\" \(1636 characters\)
sed "s/^X//" >'common/error.h' <<'END_OF_FILE'
X/*
X *	aegis - project change supervisor
X *	Copyright (C) 1991, 1992, 1993 Peter Miller.
X *	All rights reserved.
X *
X *	This program is free software; you can redistribute it and/or modify
X *	it under the terms of the GNU General Public License as published by
X *	the Free Software Foundation; either version 2 of the License, or
X *	(at your option) any later version.
X *
X *	This program is distributed in the hope that it will be useful,
X *	but WITHOUT ANY WARRANTY; without even the implied warranty of
X *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X *	GNU General Public License for more details.
X *
X *	You should have received a copy of the GNU General Public License
X *	along with this program; if not, write to the Free Software
X *	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X *
X * MANIFEST: interface definition for common/error.c
X */
X
X#ifndef ERROR_H
X#define ERROR_H
X
X#include <main.h>
X
Xvoid error _((char *, ...));
Xvoid fatal _((char *, ...));
Xvoid verbose _((char *, ...));
X
Xvoid nerror _((char *, ...));
Xvoid nfatal _((char *, ...));
X
Xtypedef void (*quit_ty)_((int));
Xvoid quit_register _((quit_ty));
Xvoid quit _((int));
X
Xchar *signal_name _((int));
X
Xint assert_failed _((char *condition, char *file, int line));
X#ifdef DEBUG
X# if defined(__STDC__) || defined(__stdc__)
X#  define assert(c) ((void)((c) != 0 || assert_failed(#c, __FILE__, __LINE__)))
X# else
X#  define assert(c) ((void)((c) != 0 || assert_failed("c", __FILE__, __LINE__)))
X# endif
X#else
X# define assert(c)
X#endif
X
Xtypedef void (*error_id_ty)_((int *uid, int *gid));
X
Xvoid error_set_id_func _((error_id_ty));
X
X#endif /* ERROR_H */
END_OF_FILE
if test 1636 -ne `wc -c <'common/error.h'`; then
    echo shar: \"'common/error.h'\" unpacked with wrong size!
fi
# end of 'common/error.h'
fi
if test -f 'common/option.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'common/option.h'\"
else
echo shar: Extracting \"'common/option.h'\" \(1588 characters\)
sed "s/^X//" >'common/option.h' <<'END_OF_FILE'
X/*
X *	aegis - project change supervisor
X *	Copyright (C) 1991, 1992, 1993 Peter Miller.
X *	All rights reserved.
X *
X *	This program is free software; you can redistribute it and/or modify
X *	it under the terms of the GNU General Public License as published by
X *	the Free Software Foundation; either version 2 of the License, or
X *	(at your option) any later version.
X *
X *	This program is distributed in the hope that it will be useful,
X *	but WITHOUT ANY WARRANTY; without even the implied warranty of
X *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X *	GNU General Public License for more details.
X *
X *	You should have received a copy of the GNU General Public License
X *	along with this program; if not, write to the Free Software
X *	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X *
X * MANIFEST: interface definition for common/option.c
X */
X
X#ifndef OPTION_H
X#define OPTION_H
X
X#include <main.h>
X
X/*
X * This is set to 14 so that your project will be portable
X * to less privileged unix boxes.  Please don't mess with it.
X */
X#define PATH_ELEMENT_MAX 14
X
X#define MAX_PAGE_WIDTH 2000
X
Xvoid option_progname_set _((char *));
Xchar *option_progname_get _((void));
X
Xvoid option_verbose_set _((void));
Xint option_verbose_get _((void));
Xvoid option_unformatted_set _((void));
Xint option_unformatted_get _((void));
Xvoid option_terse_set _((void));
Xint option_terse_get _((void));
X
Xvoid option_page_width_set _((int columns));
Xint option_page_width_get _((void));
Xvoid option_page_length_set _((int rows));
Xint option_page_length_get _((void));
X
X#endif /* OPTION_H */
END_OF_FILE
if test 1588 -ne `wc -c <'common/option.h'`; then
    echo shar: \"'common/option.h'\" unpacked with wrong size!
fi
# end of 'common/option.h'
fi
if test -f 'common/s-v-arg.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'common/s-v-arg.h'\"
else
echo shar: Extracting \"'common/s-v-arg.h'\" \(1886 characters\)
sed "s/^X//" >'common/s-v-arg.h' <<'END_OF_FILE'
X/*
X *	aegis - project change supervisor
X *	Copyright (C) 1992, 1993 Peter Miller.
X *	All rights reserved.
X *
X *	This program is free software; you can redistribute it and/or modify
X *	it under the terms of the GNU General Public License as published by
X *	the Free Software Foundation; either version 2 of the License, or
X *	(at your option) any later version.
X *
X *	This program is distributed in the hope that it will be useful,
X *	but WITHOUT ANY WARRANTY; without even the implied warranty of
X *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X *	GNU General Public License for more details.
X *
X *	You should have received a copy of the GNU General Public License
X *	along with this program; if not, write to the Free Software
X *	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X *
X * MANIFEST: insulation from varargs.h versus stdarg.h incompatibilities
X */
X
X#ifndef S_V_ARG_H
X#define S_V_ARG_H
X
X/*
X * This file contains insulation from whether <varargs.h> is being used
X * or whether <stdarg.h> is being used.  Incompatibilities are hidden behind
X * three macros:
X *	sva_last	- last argument in variable arg func defn
X *	sva_last_decl	- declaration for last arg
X *	sva_start	- hides whether nth is used or not
X * These macros are non-syntactic (ugh!) but they sure make things prettier.
X *
X * Do not directly include either <stdarg.h> or <varargs.h> in the code,
X * always use this header <s-v-arg.h> instead.
X *
X * Never refer directly to va_start, va_arg, or va_dcl directly in the code.
X * Direct references to va_list, va_arg and va_end are OK.
X */
X
X#include <conf.h>
X
X#ifdef CONF_NO_stdarg
X
X#include <varargs.h>
X
X#define sva_last ,va_alist
X#define sva_last_decl va_dcl
X#define sva_init(ap, nth) va_start(ap)
X
X#else
X
X#include <stdarg.h>
X
X#define sva_last
X#define	sva_last_decl
X#define	sva_init(ap, nth) va_start(ap, nth)
X
X#endif
X
X#endif /* S_V_ARG_H */
END_OF_FILE
if test 1886 -ne `wc -c <'common/s-v-arg.h'`; then
    echo shar: \"'common/s-v-arg.h'\" unpacked with wrong size!
fi
# end of 'common/s-v-arg.h'
fi
if test -f 'common/str.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'common/str.h'\"
else
echo shar: Extracting \"'common/str.h'\" \(1871 characters\)
sed "s/^X//" >'common/str.h' <<'END_OF_FILE'
X/*
X *	aegis - project change supervisor
X *	Copyright (C) 1991, 1992, 1993 Peter Miller.
X *	All rights reserved.
X *
X *	This program is free software; you can redistribute it and/or modify
X *	it under the terms of the GNU General Public License as published by
X *	the Free Software Foundation; either version 2 of the License, or
X *	(at your option) any later version.
X *
X *	This program is distributed in the hope that it will be useful,
X *	but WITHOUT ANY WARRANTY; without even the implied warranty of
X *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X *	GNU General Public License for more details.
X *
X *	You should have received a copy of the GNU General Public License
X *	along with this program; if not, write to the Free Software
X *	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X *
X * MANIFEST: interface definition for common/str.c
X */
X
X#ifndef STR_H
X#define STR_H
X
X#include <stddef.h>
X#include <s-v-arg.h>
X#include <main.h>
X
Xtypedef unsigned long str_hash_ty;
X
Xtypedef struct string_ty string_ty;
Xstruct string_ty
X{
X	str_hash_ty	str_hash;
X	string_ty	*str_next;
X	long		str_references;
X	size_t		str_length;
X	char		str_text[1];
X};
X
Xvoid str_initialize _((void));
Xstring_ty *str_from_c _((char *));
Xstring_ty *str_n_from_c _((char *, size_t));
Xstring_ty *str_copy _((string_ty *));
Xvoid str_free _((string_ty *));
Xstring_ty *str_catenate _((string_ty *, string_ty *));
Xstring_ty *str_cat_three _((string_ty *, string_ty *, string_ty *));
Xint str_bool _((string_ty *));
Xstring_ty *str_upcase _((string_ty *));
Xstring_ty *str_downcase _((string_ty *));
Xvoid str_dump _((void));
Xstring_ty *str_field _((string_ty *str, int sep, int fldnum));
Xvoid slow_to_fast _((char **, string_ty **, size_t));
Xstring_ty *str_format _((char *, ...));
Xstring_ty *str_vformat _((char *, va_list));
X
X#define str_equal(s1, s2) ((s1) == (s2))
X
X#endif /* STR_H */
END_OF_FILE
if test 1871 -ne `wc -c <'common/str.h'`; then
    echo shar: \"'common/str.h'\" unpacked with wrong size!
fi
# end of 'common/str.h'
fi
if test -f 'common/word.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'common/word.h'\"
else
echo shar: Extracting \"'common/word.h'\" \(1384 characters\)
sed "s/^X//" >'common/word.h' <<'END_OF_FILE'
X/*
X *	aegis - project change supervisor
X *	Copyright (C) 1991, 1992, 1993 Peter Miller.
X *	All rights reserved.
X *
X *	This program is free software; you can redistribute it and/or modify
X *	it under the terms of the GNU General Public License as published by
X *	the Free Software Foundation; either version 2 of the License, or
X *	(at your option) any later version.
X *
X *	This program is distributed in the hope that it will be useful,
X *	but WITHOUT ANY WARRANTY; without even the implied warranty of
X *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X *	GNU General Public License for more details.
X *
X *	You should have received a copy of the GNU General Public License
X *	along with this program; if not, write to the Free Software
X *	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X *
X * MANIFEST: interface definition for common/word.c
X */
X
X#ifndef WORD_H
X#define WORD_H
X
X#include <str.h>
X
Xtypedef struct wlist wlist;
Xstruct wlist
X{
X	size_t		wl_nwords;
X	string_ty	**wl_word;
X};
X
Xint wl_member _((wlist *, string_ty *));
Xstring_ty *wl2str _((wlist *, int, int));
Xvoid str2wl _((wlist *, string_ty *, char *));
Xvoid wl_append _((wlist *, string_ty *));
Xvoid wl_append_unique _((wlist *, string_ty *));
Xvoid wl_copy _((wlist *, wlist *));
Xvoid wl_delete _((wlist *, string_ty *));
Xvoid wl_free _((wlist *));
Xvoid wl_zero _((wlist *));
X
X#endif /* WORD_H */
END_OF_FILE
if test 1384 -ne `wc -c <'common/word.h'`; then
    echo shar: \"'common/word.h'\" unpacked with wrong size!
fi
# end of 'common/word.h'
fi
if test -f 'doc/aegis.ms' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'doc/aegis.ms'\"
else
echo shar: Extracting \"'doc/aegis.ms'\" \(1638 characters\)
sed "s/^X//" >'doc/aegis.ms' <<'END_OF_FILE'
X.\"
X.\"	aegis - project change supervisor
X.\"	Copyright (C) 1991, 1992, 1993 Peter Miller.
X.\"	All rights reserved.
X.\"
X.\"	This program is free software; you can redistribute it and/or modify
X.\"	it under the terms of the GNU General Public License as published by
X.\"	the Free Software Foundation; either version 2 of the License, or
X.\"	(at your option) any later version.
X.\"
X.\"	This program is distributed in the hope that it will be useful,
X.\"	but WITHOUT ANY WARRANTY; without even the implied warranty of
X.\"	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X.\"	GNU General Public License for more details.
X.\"
X.\"	You should have received a copy of the GNU General Public License
X.\"	along with this program; if not, write to the Free Software
X.\"	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X.\"
X.\" MANIFEST: User Guide
X.\"
X.\" Format this file with 
X.\"	roffpp aegis.ms | pic | tbl | troff -t -ms | lpr -t
X.\" from the directory this file appears in.
X.\" Roffpp is part of "cook" available from the same author,
X.\" or you could use soelim instead.
X.\"
X.\" Note that the GNU groff package uses a command like
X.\"	groff -s -p -t -ms aegis.ms | lpr
X.\" and gives PostScript output and far better error messages.
X.\"
X.de nh
X.NH \\$1
X\\$2
X.if !\\n(NS-2 \{\
X.XS \\n%
X\h'\\n(NSi/2u-0.5i'\\*(SN \\$2
X.XE
X.\}
X..
X.\" Example Start, use Courier if you have it
X.de E(
X.DS
X.ft R
X.ft C
X.nf
X.ta 8n 16n 24n 32n 40n 48n 56n 64n 72n 8n
X..
X.\" Example End
X.de E)
X.ft R
X.fi
X.DE
X..
X.so c1.0.so
X.so c7.0.so
X.so c2.0.so
X.so c3.0.so
X.so c4.0.so
X.so c8.0.so
X.so c5.0.so
X.so c6.0.so
X.so cA.0.so
X.so cB.0.so
X.so cC.0.so
X.TC
END_OF_FILE
if test 1638 -ne `wc -c <'doc/aegis.ms'`; then
    echo shar: \"'doc/aegis.ms'\" unpacked with wrong size!
fi
# end of 'doc/aegis.ms'
fi
if test -f 'doc/c1.1.so' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'doc/c1.1.so'\"
else
echo shar: Extracting \"'doc/c1.1.so'\" \(1739 characters\)
sed "s/^X//" >'doc/c1.1.so' <<'END_OF_FILE'
X.\"
X.\"	aegis - project change supervisor
X.\"	Copyright (C) 1991, 1992, 1993 Peter Miller.
X.\"	All rights reserved.
X.\"
X.\"	This program is free software; you can redistribute it and/or modify
X.\"	it under the terms of the GNU General Public License as published by
X.\"	the Free Software Foundation; either version 2 of the License, or
X.\"	(at your option) any later version.
X.\"
X.\"	This program is distributed in the hope that it will be useful,
X.\"	but WITHOUT ANY WARRANTY; without even the implied warranty of
X.\"	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X.\"	GNU General Public License for more details.
X.\"
X.\"	You should have received a copy of the GNU General Public License
X.\"	along with this program; if not, write to the Free Software
X.\"	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X.\"
X.\" MANIFEST: User Guide, Introduction, What does aegis do?
X.\"
X.nh 2 "What does aegis do?"
X.LP
XJust what is software configuration management?
XThis question is sufficiently broad as to require a book in answer.
XIn essence, the aegis program is a project change supervisor.
XIt provides a
Xframework within which a team of developers may work on many changes to a
Xprogram independently,
Xand the aegis program coordinates integrating these
Xchanges back into the master source of the program,
Xwith as little disruption as possible.
XResolution of contention for source files,
Xa major headache for any project with more than one developer,
Xis one of the aegis program's major functions. 
X.LP
XIt should be noted that the aegis program is a developer's tool,
Xin the same sense as make or SCCS are developer's tools.
XIt is not a manager's tool - it does not provide progress tracking
Xor help with work allocation.
END_OF_FILE
if test 1739 -ne `wc -c <'doc/c1.1.so'`; then
    echo shar: \"'doc/c1.1.so'\" unpacked with wrong size!
fi
# end of 'doc/c1.1.so'
fi
if test -f 'doc/c2.5.so' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'doc/c2.5.so'\"
else
echo shar: Extracting \"'doc/c2.5.so'\" \(1963 characters\)
sed "s/^X//" >'doc/c2.5.so' <<'END_OF_FILE'
X.\"
X.\"	aegis - project change supervisor
X.\"	Copyright (c) 1993 Peter Miller.
X.\"	All rights reserved.
X.\"
X.\"	This program is free software; you can redistribute it and/or modify
X.\"	it under the terms of the GNU General Public License as published by
X.\"	the Free Software Foundation; either version 1, or (at your option)
X.\"	any later version.
X.\"
X.\"	This program is distributed in the hope that it will be useful,
X.\"	but WITHOUT ANY WARRANTY; without even the implied warranty of
X.\"	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X.\"	GNU General Public License for more details.
X.\"
X.\"	You should have received a copy of the GNU General Public License
X.\"	along with this program; if not, write to the Free Software
X.\"	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X.\"
X.\" MANIFEST: User Guide, The Change Development Cycle, What to do Next
X.\"
X.bp
X.2C
X.nh 2 "What to do Next"
X.LP
XThis chapter has given a vicarious view of what using aegis feels like.
XAs a next step in getting to know aegis,
Xit would be a good idea if you created a project and
Xwent through this same exercise;
Xyou could use this exact example,
Xor you could use a similar small project.
XThis idea simply to run through many of the same steps as in the example.
XTypos and other natural events will ensure that you come across
Xa number of situations not directly covered by this chapter.
X.LP
XIf you have not already done do,
Xa printed copy of the section 1 and 5 manual entries will be invaluable.
XIf you don't want to use that many trees,
Xthey will be available on-line,
Xby using the "-Help" option of the appropriate command variant.
XTry:
X.E(
X% \f(CBaedb -help\fP
X\&.\&.\&.manual entry\&.\&.\&.
X%
X.E)
X.LP
XNote that this example has not demonstrated all of the available functionality.
XOne item of particular interest is that tests,
Xlike any other source file,
Xmay be copied into a change and modified,
Xor even deleted,
Xjust like any other source file.
X.1C
END_OF_FILE
if test 1963 -ne `wc -c <'doc/c2.5.so'`; then
    echo shar: \"'doc/c2.5.so'\" unpacked with wrong size!
fi
# end of 'doc/c2.5.so'
fi
if test -f 'doc/c4.0.so' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'doc/c4.0.so'\"
else
echo shar: Extracting \"'doc/c4.0.so'\" \(1430 characters\)
sed "s/^X//" >'doc/c4.0.so' <<'END_OF_FILE'
X.\"
X.\"	aegis - project change supervisor
X.\"	Copyright (C) 1991, 1992, 1993 Peter Miller.
X.\"	All rights reserved.
X.\"
X.\"	This program is free software; you can redistribute it and/or modify
X.\"	it under the terms of the GNU General Public License as published by
X.\"	the Free Software Foundation; either version 2 of the License, or
X.\"	(at your option) any later version.
X.\"
X.\"	This program is distributed in the hope that it will be useful,
X.\"	but WITHOUT ANY WARRANTY; without even the implied warranty of
X.\"	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X.\"	GNU General Public License for more details.
X.\"
X.\"	You should have received a copy of the GNU General Public License
X.\"	along with this program; if not, write to the Free Software
X.\"	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X.\"
X.\" MANIFEST: User Guide, The Dependency Maintenance Tool
X.\"
X.bp
X.2C
X.nh 1 "The Dependency Maintenance Tool"
X.LP
XThe aegis program places heavy demands on the dependency maintenance tool,
Xso it is important that you select an appropriate one.
XThis chapter talks about what a dependency tool requires,
Xand gives examples of how to use the various alternatives.
X.LP
XAt this writing,
Xthe author has seen few sufficiently capable dependency maintenance tools.
X.so c4.1.so
X.1C
X.so c4.2.so
X.\" add other useful DMTs here
X.\" before the next section, which talks about ones that DON'T work
X.so c4.3.so
END_OF_FILE
if test 1430 -ne `wc -c <'doc/c4.0.so'`; then
    echo shar: \"'doc/c4.0.so'\" unpacked with wrong size!
fi
# end of 'doc/c4.0.so'
fi
if test -f 'doc/c4.3.so' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'doc/c4.3.so'\"
else
echo shar: Extracting \"'doc/c4.3.so'\" \(1766 characters\)
sed "s/^X//" >'doc/c4.3.so' <<'END_OF_FILE'
X.\"
X.\"	aegis - project change supervisor
X.\"	Copyright (C) 1993 Peter Miller.
X.\"	All rights reserved.
X.\"
X.\"	This program is free software; you can redistribute it and/or modify
X.\"	it under the terms of the GNU General Public License as published by
X.\"	the Free Software Foundation; either version 2 of the License, or
X.\"	(at your option) any later version.
X.\"
X.\"	This program is distributed in the hope that it will be useful,
X.\"	but WITHOUT ANY WARRANTY; without even the implied warranty of
X.\"	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X.\"	GNU General Public License for more details.
X.\"
X.\"	You should have received a copy of the GNU General Public License
X.\"	along with this program; if not, write to the Free Software
X.\"	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X.\"
X.\" MANIFEST: User Guide, The Dependency Maintenance Tool, Other Packages
X.\"
X.bp
X.2C
X.nh 2 "Other Packages"
X.LP
XThis section briefly discusses other DMTs
Xwhich are known to the author
Xand are known to be inadequate.
X.nh 3 "Traditional Make"
X.LP
XThe
X.I make (1)
Xwhich comes with most flavors of
X.UX
Xis inadequate for both requirements:
Xit has no dependency search path,
Xand it has no dynamic include file dependency facility.
XMany also have no ability to include files in the Makefiles,
Xand have no ability to collect the output of a shell command.
X.nh 3 "GNU make"
X.LP
XThe version of GNU make evaluated in writing this section was 3.62.
XA later version may be more capable.
X.LP
XThe GNU make program has the dependency search path,
Xin the form of its
X.I VPATH
Xvariable,
Xbut it has no dynamic include file dependency facility.
XIt does have the ability to include files in the Makefiles,
Xand the ability to collect the output of a shell command.
END_OF_FILE
if test 1766 -ne `wc -c <'doc/c4.3.so'`; then
    echo shar: \"'doc/c4.3.so'\" unpacked with wrong size!
fi
# end of 'doc/c4.3.so'
fi
if test -f 'doc/c7.0.so' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'doc/c7.0.so'\"
else
echo shar: Extracting \"'doc/c7.0.so'\" \(1728 characters\)
sed "s/^X//" >'doc/c7.0.so' <<'END_OF_FILE'
X.\"
X.\"	aegis - project change supervisor
X.\"	Copyright (C) 1991, 1992, 1993 Peter Miller.
X.\"	All rights reserved.
X.\"
X.\"	This program is free software; you can redistribute it and/or modify
X.\"	it under the terms of the GNU General Public License as published by
X.\"	the Free Software Foundation; either version 2 of the License, or
X.\"	(at your option) any later version.
X.\"
X.\"	This program is distributed in the hope that it will be useful,
X.\"	but WITHOUT ANY WARRANTY; without even the implied warranty of
X.\"	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X.\"	GNU General Public License for more details.
X.\"
X.\"	You should have received a copy of the GNU General Public License
X.\"	along with this program; if not, write to the Free Software
X.\"	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X.\"
X.\" MANIFEST: User Guide, How Aegis Works
X.\"
X.bp
X.2C
X.nh 1 "How Aegis Works"
X.LP
XBefore you will be able to exploit aegis fully,
Xyou will need to know just what it is that aegis does,
Xand why aegis does these things.
X.LP
XThe aegis program provides a change control mechanism and a repository,
Xa subset of what CASE vendors call Software Configuration Management (SCM).
XIn order to fit into a software engineering environment,
Xor any place software  is written,
Xaegis needs a clearly defined place is the scheme of things.
X.LP
XThis chapter describes the model of the software development process
Xembodied in the aegis program,
Xit describes some of the deliberate design decisions made for aegis,
Xit describes some of the things aegis will and wont do for you,
Xand it describes the situations where aegis is most and least useful.
X.so c7.1.so
X.so c7.2.so
X.so c7.5.so
X.so c1.3.so
X.so c7.4.so
X.1C
END_OF_FILE
if test 1728 -ne `wc -c <'doc/c7.0.so'`; then
    echo shar: \"'doc/c7.0.so'\" unpacked with wrong size!
fi
# end of 'doc/c7.0.so'
fi
if test -f 'doc/c8.3.so' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'doc/c8.3.so'\"
else
echo shar: Extracting \"'doc/c8.3.so'\" \(1982 characters\)
sed "s/^X//" >'doc/c8.3.so' <<'END_OF_FILE'
X.\"
X.\"	aegis - project change supervisor
X.\"	Copyright (C) 1993 Peter Miller.
X.\"	All rights reserved.
X.\"
X.\"	This program is free software; you can redistribute it and/or modify
X.\"	it under the terms of the GNU General Public License as published by
X.\"	the Free Software Foundation; either version 2 of the License, or
X.\"	(at your option) any later version.
X.\"
X.\"	This program is distributed in the hope that it will be useful,
X.\"	but WITHOUT ANY WARRANTY; without even the implied warranty of
X.\"	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X.\"	GNU General Public License for more details.
X.\"
X.\"	You should have received a copy of the GNU General Public License
X.\"	along with this program; if not, write to the Free Software
X.\"	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X.\"
X.\" MANIFEST: User Guide, The Difference Tools, Using fhist
X.\"
X.bp
X.nh 2 "Using fhist"
X.LP
XThe
X.B fhist
Xprogram by David I. Bell
Xalso comes with two other utilities,
X.I fcomp
Xand
X.I fmerge ,
Xwhich use the same minimal difference algorithm.
X.nh 3 "diff_command"
X.LP
XSee the earlier
X.I Interfacing
Xsection for substitution details.
X.LP
XThe entry in the
X.I config
Xfile looks like this:
X.E(
Xdiff_command =
X        "fcomp -w $original $input -o $output";
X.E)
X.LP
XThe
X.B -w
Xoption produces an output of the entire file,
Xwith insertions an deletions marked by "change bars" in the left margin.
XThis is superior to context difference,
Xas it shows the entire file as context.
X.LP
XFor more information,
Xsee the
X.I fcomp (1)
Xmanual entry.
X.nh 3 "diff3_command"
X.LP
XSee the earlier
X.I Interfacing
Xsection for substitution details.
X.LP
XThe entry in the
X.I config
Xfile looks like this:
X.E(
Xdiff3_command =
X        "fmerge $original $MostRecent $input -o $output -c /dev/null";
X.E)
X.LP
XThe output of this command is similar to the output of the diff3_command
Xin the last section.
XConflicts are marked in the output.
XFor more information,
Xsee the
X.I fmerge (1)
Xmanual entry.
END_OF_FILE
if test 1982 -ne `wc -c <'doc/c8.3.so'`; then
    echo shar: \"'doc/c8.3.so'\" unpacked with wrong size!
fi
# end of 'doc/c8.3.so'
fi
if test -f 'fmtgen/type.c' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'fmtgen/type.c'\"
else
echo shar: Extracting \"'fmtgen/type.c'\" \(1816 characters\)
sed "s/^X//" >'fmtgen/type.c' <<'END_OF_FILE'
X/*
X *	aegis - project change supervisor
X *	Copyright (C) 1991, 1992, 1993 Peter Miller.
X *	All rights reserved.
X *
X *	This program is free software; you can redistribute it and/or modify
X *	it under the terms of the GNU General Public License as published by
X *	the Free Software Foundation; either version 2 of the License, or
X *	(at your option) any later version.
X *
X *	This program is distributed in the hope that it will be useful,
X *	but WITHOUT ANY WARRANTY; without even the implied warranty of
X *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X *	GNU General Public License for more details.
X *
X *	You should have received a copy of the GNU General Public License
X *	along with this program; if not, write to the Free Software
X *	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X *
X * MANIFEST: functions to manipulate data types
X */
X
X#include <type.h>
X
X
Xvoid
Xtype_gen_include_declarator(type, name, is_a_list)
X	type_ty		*type;
X	string_ty	*name;
X	int		is_a_list;
X{
X	if (type->method->gen_include_declarator)
X		type->method->gen_include_declarator(type, name, is_a_list);
X}
X
X
Xvoid
Xtype_gen_include(type, name)
X	type_ty		*type;
X	string_ty 	*name;
X{
X	if (type->method->gen_include)
X		type->method->gen_include(type, name);
X}
X
X
Xvoid
Xtype_gen_code_declarator(type, name, is_a_list)
X	type_ty		*type;
X	string_ty	*name;
X	int		is_a_list;
X{
X	if (type->method->gen_code_declarator)
X		type->method->gen_code_declarator(type, name, is_a_list);
X}
X
X
Xvoid
Xtype_gen_code(type, name)
X	type_ty		*type;
X	string_ty	*name;
X{
X	if (type->method->gen_code)
X		type->method->gen_code(type, name);
X}
X
X
Xvoid
Xtype_gen_free_declarator(type, name, is_a_list)
X	type_ty		*type;
X	string_ty	*name;
X	int		is_a_list;
X{
X	if (type->method->gen_free_declarator)
X		type->method->gen_free_declarator(type, name, is_a_list);
X}
END_OF_FILE
if test 1816 -ne `wc -c <'fmtgen/type.c'`; then
    echo shar: \"'fmtgen/type.c'\" unpacked with wrong size!
fi
# end of 'fmtgen/type.c'
fi
if test -f 'h/unistd.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'h/unistd.h'\"
else
echo shar: Extracting \"'h/unistd.h'\" \(1463 characters\)
sed "s/^X//" >'h/unistd.h' <<'END_OF_FILE'
X/*
X *	aegis - project change supervisor
X *
X * MANIFEST: minimal substitute for unistd.h
X */
X
X#ifndef UNISTD_H
X#define UNISTD_H
X
X#ifndef NULL
X#define	NULL 0
X#endif
X
X#ifndef SEEK_SET
X#define	SEEK_SET 0
X#define	SEEK_CUR 1
X#define	SEEK_END 2
X#endif
X
X#ifndef F_OK
X#define	F_OK 0
X#define	X_OK 1
X#define	W_OK 2
X#define	R_OK 4
X#endif
X
Xvoid _exit();
Xint access();
Xint acct();
Xunsigned alarm();
Xint brk();
Xint chroot();
Xint chdir();
Xint chmod();
Xint chown();
Xint close();
Xchar *ctermid();
Xchar *cuserid();
Xint dup();
Xint dup2();
Xint execl();
Xint execle();
Xint execlp();
Xint execv();
Xint execve();
Xint execvp();
Xvoid exit();
Xint fchdir();
Xint fchown();
Xpid_t fork();
Xlong fpathconf();
Xint fsync();
Xint ftruncate();
Xchar *getcwd();
Xgid_t getegid();
Xuid_t geteuid();
Xgid_t getgid();
Xint getgroups();
Xchar *getlogin();
Xpid_t getpgrp();
Xpid_t getpid();
Xpid_t getppid();
Xpid_t getsid();
Xuid_t getuid();
Xint ioctl();
Xint isatty();
Xint lchown();
Xint link();
Xint lockf();
Xoff_t lseek();
Xint mincore();
Xint nice();
Xlong pathconf();
Xint pause();
Xint pipe();
Xvoid profil();
Xint ptrace();
Xint read();
Xint readlink();
Xint rmdir();
Xvoid *sbrk();
Xint setgid();
Xint setegid();
Xint setgroups();
Xint setpgid();
Xint setpgrp();
Xpid_t setsid();
Xint setuid();
Xint seteuid();
Xint symlink();
Xvoid sync();
Xunsigned sleep();
Xlong sysconf();
Xpid_t tcgetpgrp();
Xint tcsetpgrp();
Xint truncate();
Xchar *ttyname();
Xint unlink();
Xint vfork();
Xint wait();
Xint waitpid();
Xint write();
X
X#endif /* UNISTD_H */
END_OF_FILE
if test 1463 -ne `wc -c <'h/unistd.h'`; then
    echo shar: \"'h/unistd.h'\" unpacked with wrong size!
fi
# end of 'h/unistd.h'
fi
if test -f 'lib/de.inews.sh' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'lib/de.inews.sh'\"
else
echo shar: Extracting \"'lib/de.inews.sh'\" \(1615 characters\)
sed "s/^X//" >'lib/de.inews.sh' <<'END_OF_FILE'
X#! /bin/sh
X#
X#	aegis - project change supervisor
X#	Copyright (C) 1992, 1993 Peter Miller.
X#	All rights reserved.
X#
X#	This program is free software; you can redistribute it and/or modify
X#	it under the terms of the GNU General Public License as published by
X#	the Free Software Foundation; either version 2 of the License, or
X#	(at your option) any later version.
X#
X#	This program is distributed in the hope that it will be useful,
X#	but WITHOUT ANY WARRANTY; without even the implied warranty of
X#	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X#	GNU General Public License for more details.
X#
X#	You should have received a copy of the GNU General Public License
X#	along with this program; if not, write to the Free Software
X#	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X#
X# MANIFEST: command used to notify by usenet that a change is ready for review
X#
Xaegis=aegis
Xcase $# in
X3)
X	project=$1
X	change=$2
X	newsgroups=$3
X	;;
X
X*)
X	echo "Usage: $0 <project> <change> <newsgroups>" 1>&2
X	exit 1
X	;;
Xesac
X
Xtmp=/tmp/de.$$
Xtrap "rm -f $tmp" 1 2 3 15
Xquit()
X{
X	rm -f $tmp
X	exit 1
X}
X
X#
X# build the notice
X#
Xcat > $tmp << TheEnd
XSubject: project $project, change $change, develop end
XNewsgroups: $newsgroups
X
XDevelopment of the following change has been
Xcompleted and it is now ready for review.
X
XTheEnd
Xif [ $? -ne 0 ]; then quit; fi
X
X#
X# include full details of the change
X#
X$aegis -list change_details -project $project -change $change -verbose >> $tmp
Xif [ $? -ne 0 ]; then quit; fi
X
X#
X# post on usenet
X#
Xinews -h < $tmp
Xif [ $? -ne 0 ]; then quit; fi
X
X#
X# clean up and go home
X#
Xrm $tmp
Xexit 0
END_OF_FILE
if test 1615 -ne `wc -c <'lib/de.inews.sh'`; then
    echo shar: \"'lib/de.inews.sh'\" unpacked with wrong size!
fi
# end of 'lib/de.inews.sh'
fi
if test -f 'lib/de.sh' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'lib/de.sh'\"
else
echo shar: Extracting \"'lib/de.sh'\" \(1824 characters\)
sed "s/^X//" >'lib/de.sh' <<'END_OF_FILE'
X#! /bin/sh
X#
X#	aegis - project change supervisor
X#	Copyright (C) 1992, 1993 Peter Miller.
X#	All rights reserved.
X#
X#	This program is free software; you can redistribute it and/or modify
X#	it under the terms of the GNU General Public License as published by
X#	the Free Software Foundation; either version 2 of the License, or
X#	(at your option) any later version.
X#
X#	This program is distributed in the hope that it will be useful,
X#	but WITHOUT ANY WARRANTY; without even the implied warranty of
X#	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X#	GNU General Public License for more details.
X#
X#	You should have received a copy of the GNU General Public License
X#	along with this program; if not, write to the Free Software
X#	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X#
X# MANIFEST: command used to notify by email that a change is ready for review
X#
Xaegis=aegis
Xcase $# in
X3)
X	project=$1
X	change=$2
X	developer=$3
X	;;
X
X*)
X	echo "Usage: $0 <project> <change> <developer>" 1>&2
X	exit 1
X	;;
Xesac
X
Xtmp=/tmp/de.$$
Xtrap "rm -f $tmp" 1 2 3 15
Xquit()
X{
X	rm -f $tmp
X	exit 1
X}
X
X#
X# find out who the reviewers are
X#
Xreviewers=`$aegis -list reviewers -project $project -terse`
Xif [ $? -ne 0 ]; then quit; fi
Xif [ "$reviewers" = "" ]
Xthen
X	reviewers=`$aegis -list administrators -project $project -terse`
X	if [ $? -ne 0 ]; then quit; fi
Xfi
X
X#
X# build the notice to be mailed
X#
Xcat > $tmp << 'TheEnd'
XDevelopment of the following change has been
Xcompleted and it is now ready for review.
X
XTheEnd
Xif [ $? -ne 0 ]; then quit; fi
X
X#
X# include full details of the change
X#
X$aegis -list change_details -project $project -change $change -verbose >> $tmp
Xif [ $? -ne 0 ]; then quit; fi
X
X#
X# mail it to all reviewers
X#
Xmail $reviewers < $tmp
Xif [ $? -ne 0 ]; then quit; fi
X
X#
X# clean up and go home
X#
Xrm $tmp
Xexit 0
END_OF_FILE
if test 1824 -ne `wc -c <'lib/de.sh'`; then
    echo shar: \"'lib/de.sh'\" unpacked with wrong size!
fi
# end of 'lib/de.sh'
fi
if test -f 'lib/deu.inews.sh' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'lib/deu.inews.sh'\"
else
echo shar: Extracting \"'lib/deu.inews.sh'\" \(1654 characters\)
sed "s/^X//" >'lib/deu.inews.sh' <<'END_OF_FILE'
X#! /bin/sh
X#
X#	aegis - project change supervisor
X#	Copyright (C) 1992, 1993 Peter Miller.
X#	All rights reserved.
X#
X#	This program is free software; you can redistribute it and/or modify
X#	it under the terms of the GNU General Public License as published by
X#	the Free Software Foundation; either version 2 of the License, or
X#	(at your option) any later version.
X#
X#	This program is distributed in the hope that it will be useful,
X#	but WITHOUT ANY WARRANTY; without even the implied warranty of
X#	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X#	GNU General Public License for more details.
X#
X#	You should have received a copy of the GNU General Public License
X#	along with this program; if not, write to the Free Software
X#	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X#
X# MANIFEST: command used to notify by usenet that a change has been withdrawn from review
X#
Xaegis=aegis
Xcase $# in
X3)
X	project=$1
X	change=$2
X	newsgroups=$3
X	;;
X
X*)
X	echo "Usage: $0 <project> <change> <newsgroups>" 1>&2
X	exit 1
X	;;
Xesac
X
Xtmp=/tmp/de.$$
Xtrap "rm -f $tmp" 1 2 3 15
Xquit()
X{
X	rm -f $tmp
X	exit 1
X}
X
X#
X# build the notice
X#
Xcat > $tmp << TheEnd
XSubject: project $project, change $change, develop end undo
XNewsgroups: $newsgroups
X
XThe change described below is no longer available for review.
XIt has been withdrawn for further development.
X
XTheEnd
Xif [ $? -ne 0 ]; then quit; fi
X
X#
X# include full details of the change
X#
X$aegis -list change_details -project $project -change $change -verbose >> $tmp
Xif [ $? -ne 0 ]; then quit; fi
X
X#
X# post on usenet
X#
Xinews -h < $tmp
Xif [ $? -ne 0 ]; then quit; fi
X
X#
X# clean up and go home
X#
Xrm $tmp
Xexit 0;
END_OF_FILE
if test 1654 -ne `wc -c <'lib/deu.inews.sh'`; then
    echo shar: \"'lib/deu.inews.sh'\" unpacked with wrong size!
fi
# end of 'lib/deu.inews.sh'
fi
if test -f 'lib/deu.sh' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'lib/deu.sh'\"
else
echo shar: Extracting \"'lib/deu.sh'\" \(1855 characters\)
sed "s/^X//" >'lib/deu.sh' <<'END_OF_FILE'
X#! /bin/sh
X#
X#	aegis - project change supervisor
X#	Copyright (C) 1992, 1993 Peter Miller.
X#	All rights reserved.
X#
X#	This program is free software; you can redistribute it and/or modify
X#	it under the terms of the GNU General Public License as published by
X#	the Free Software Foundation; either version 2 of the License, or
X#	(at your option) any later version.
X#
X#	This program is distributed in the hope that it will be useful,
X#	but WITHOUT ANY WARRANTY; without even the implied warranty of
X#	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X#	GNU General Public License for more details.
X#
X#	You should have received a copy of the GNU General Public License
X#	along with this program; if not, write to the Free Software
X#	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X#
X# MANIFEST: command used to notify by email that a change has been withdrawn from review
X#
Xaegis=aegis
Xcase $# in
X3)
X	project=$1
X	change=$2
X	developer=$3
X	;;
X
X*)
X	echo "Usage: $0 <project> <change> <developer>" 1>&2
X	exit 1
X	;;
Xesac
X
Xtmp=/tmp/de.$$
Xtrap "rm -f $tmp" 1 2 3 15
Xquit()
X{
X	rm -f $tmp
X	exit 1
X}
X
X#
X# find out who the reviewers are
X#
Xreviewers=`$aegis -list reviewers -project $project -terse`
Xif [ $? -ne 0 ]; then quit; fi
Xif [ "$reviewers" = "" ]
Xthen
X	reviewers=`$aegis -list integrators -project $project -terse`
X	if [ $? -ne 0 ]; then quit; fi
Xfi
X
X#
X# build the notice to be mailed
X#
Xcat > $tmp << 'TheEnd'
XThe change described below is no longer available for review.
XIt has been withdrawn for further development.
X
XTheEnd
Xif [ $? -ne 0 ]; then quit; fi
X
X#
X# include full details of the change
X#
X$aegis -list change_details -project $project -change $change -verbose >> $tmp
Xif [ $? -ne 0 ]; then quit; fi
X
X#
X# mail it to all reviewers
X#
Xmail $reviewers < $tmp
Xif [ $? -ne 0 ]; then quit; fi
X
X#
X# clean up and go home
X#
Xrm $tmp
Xexit 0;
END_OF_FILE
if test 1855 -ne `wc -c <'lib/deu.sh'`; then
    echo shar: \"'lib/deu.sh'\" unpacked with wrong size!
fi
# end of 'lib/deu.sh'
fi
if test -f 'lib/if.inews.sh' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'lib/if.inews.sh'\"
else
echo shar: Extracting \"'lib/if.inews.sh'\" \(1637 characters\)
sed "s/^X//" >'lib/if.inews.sh' <<'END_OF_FILE'
X#! /bin/sh
X#
X#	aegis - project change supervisor
X#	Copyright (C) 1992, 1993 Peter Miller.
X#	All rights reserved.
X#
X#	This program is free software; you can redistribute it and/or modify
X#	it under the terms of the GNU General Public License as published by
X#	the Free Software Foundation; either version 2 of the License, or
X#	(at your option) any later version.
X#
X#	This program is distributed in the hope that it will be useful,
X#	but WITHOUT ANY WARRANTY; without even the implied warranty of
X#	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X#	GNU General Public License for more details.
X#
X#	You should have received a copy of the GNU General Public License
X#	along with this program; if not, write to the Free Software
X#	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X#
X# MANIFEST: command used to notify by usenet that a change failed integration
X#
Xaegis=aegis
Xcase $# in
X3)
X	project=$1
X	change=$2
X	newsgroups=$3
X	;;
X
X*)
X	echo "Usage: $0 <project> <change> <newsgroups>" 1>&2
X	exit 1
X	;;
Xesac
X
Xtmp=/tmp/de.$$
Xtrap "rm -f $tmp" 1 2 3 15
Xquit()
X{
X	rm -f $tmp
X	exit 1
X}
X
X#
X# build the notice
X#
Xcat > $tmp << TheEnd
XSubject: project $project, change $change, integrate fail
XNewsgroups: $newsgroups
X
XThe change described below has failed integration.
XIt has been returned to the developer for further work.
X
XTheEnd
Xif [ $? -ne 0 ]; then quit; fi
X
X#
X# include full details of the change
X#
X$aegis -list change_details -project $project -change $change -verbose >> $tmp
Xif [ $? -ne 0 ]; then quit; fi
X
X#
X# post on usenet
X#
Xinews -h < $tmp
Xif [ $? -ne 0 ]; then quit; fi
X
X#
X# clean up and go home
X#
Xrm $tmp
Xexit 0
END_OF_FILE
if test 1637 -ne `wc -c <'lib/if.inews.sh'`; then
    echo shar: \"'lib/if.inews.sh'\" unpacked with wrong size!
fi
# end of 'lib/if.inews.sh'
fi
if test -f 'lib/if.sh' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'lib/if.sh'\"
else
echo shar: Extracting \"'lib/if.sh'\" \(1662 characters\)
sed "s/^X//" >'lib/if.sh' <<'END_OF_FILE'
X#! /bin/sh
X#
X#	aegis - project change supervisor
X#	Copyright (C) 1992, 1993 Peter Miller.
X#	All rights reserved.
X#
X#	This program is free software; you can redistribute it and/or modify
X#	it under the terms of the GNU General Public License as published by
X#	the Free Software Foundation; either version 2 of the License, or
X#	(at your option) any later version.
X#
X#	This program is distributed in the hope that it will be useful,
X#	but WITHOUT ANY WARRANTY; without even the implied warranty of
X#	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X#	GNU General Public License for more details.
X#
X#	You should have received a copy of the GNU General Public License
X#	along with this program; if not, write to the Free Software
X#	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X#
X# MANIFEST: command used to notify by email that a change failed integration
X#
Xaegis=aegis
Xcase $# in
X5)
X	project=$1
X	change=$2
X	developer=$3
X	reviewer=$4
X	integrator=$5
X	;;
X
X*)
X	echo "Usage: $0 <project> <change> <developer> <reviewer> <integrator>" 1>&2
X	exit 1
X	;;
Xesac
X
Xtmp=/tmp/de.$$
Xtrap "rm -f $tmp" 1 2 3 15
Xquit()
X{
X	rm -f $tmp
X	exit 1
X}
X
X#
X# build the notice to be mailed
X#
Xcat > $tmp << 'TheEnd'
XThe change described below has failed integration.
XIt has been returned to the developer for further work.
X
XTheEnd
Xif [ $? -ne 0 ]; then quit; fi
X
X#
X# include full details of the change
X#
X$aegis -list change_details -project $project -change $change -verbose >> $tmp
Xif [ $? -ne 0 ]; then quit; fi
X
X#
X# mail it to the developer and the reviewer
X#
Xmail $developer $reviewer < $tmp
Xif [ $? -ne 0 ]; then quit; fi
X
X#
X# clean up and go home
X#
Xrm $tmp
Xexit 0
END_OF_FILE
if test 1662 -ne `wc -c <'lib/if.sh'`; then
    echo shar: \"'lib/if.sh'\" unpacked with wrong size!
fi
# end of 'lib/if.sh'
fi
if test -f 'lib/ip.inews.sh' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'lib/ip.inews.sh'\"
else
echo shar: Extracting \"'lib/ip.inews.sh'\" \(1617 characters\)
sed "s/^X//" >'lib/ip.inews.sh' <<'END_OF_FILE'
X#! /bin/sh
X#
X#	aegis - project change supervisor
X#	Copyright (C) 1992, 1993 Peter Miller.
X#	All rights reserved.
X#
X#	This program is free software; you can redistribute it and/or modify
X#	it under the terms of the GNU General Public License as published by
X#	the Free Software Foundation; either version 2 of the License, or
X#	(at your option) any later version.
X#
X#	This program is distributed in the hope that it will be useful,
X#	but WITHOUT ANY WARRANTY; without even the implied warranty of
X#	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X#	GNU General Public License for more details.
X#
X#	You should have received a copy of the GNU General Public License
X#	along with this program; if not, write to the Free Software
X#	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X#
X# MANIFEST: command used to notify by usenet that a change has passed integration
X#
Xaegis=aegis
Xcase $# in
X3)
X	project=$1
X	change=$2
X	newsgroups=$3
X	;;
X
X*)
X	echo "Usage: $0 <project> <change> <newsgroups>" 1>&2
X	exit 1
X	;;
Xesac
X
Xtmp=/tmp/de.$$
Xtrap "rm -f $tmp" 1 2 3 15
Xquit()
X{
X	rm -f $tmp
X	exit 1
X}
X
X#
X# build the notice
X#
Xcat > $tmp << TheEnd
XSubject: project $project, change $change, integrate pass
XNewsgroups: $newsgroups
X
XThe change described below has passed integration
Xand is now part of the baseline.
X
XTheEnd
Xif [ $? -ne 0 ]; then quit; fi
X
X#
X# include full details of the change
X#
X$aegis -list change_details -project $project -change $change -verbose >> $tmp
Xif [ $? -ne 0 ]; then quit; fi
X
X#
X# post on usenet
X#
Xinews -h < $tmp
Xif [ $? -ne 0 ]; then quit; fi
X
X#
X# clean up and go home
X#
Xrm $tmp
Xexit 0
END_OF_FILE
if test 1617 -ne `wc -c <'lib/ip.inews.sh'`; then
    echo shar: \"'lib/ip.inews.sh'\" unpacked with wrong size!
fi
# end of 'lib/ip.inews.sh'
fi
if test -f 'lib/ip.sh' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'lib/ip.sh'\"
else
echo shar: Extracting \"'lib/ip.sh'\" \(1641 characters\)
sed "s/^X//" >'lib/ip.sh' <<'END_OF_FILE'
X#! /bin/sh
X#
X#	aegis - project change supervisor
X#	Copyright (C) 1992, 1993 Peter Miller.
X#	All rights reserved.
X#
X#	This program is free software; you can redistribute it and/or modify
X#	it under the terms of the GNU General Public License as published by
X#	the Free Software Foundation; either version 2 of the License, or
X#	(at your option) any later version.
X#
X#	This program is distributed in the hope that it will be useful,
X#	but WITHOUT ANY WARRANTY; without even the implied warranty of
X#	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X#	GNU General Public License for more details.
X#
X#	You should have received a copy of the GNU General Public License
X#	along with this program; if not, write to the Free Software
X#	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X#
X# MANIFEST: command used to notify by email that a change has passed integration
X#
Xaegis=aegis
Xcase $# in
X5)
X	project=$1
X	change=$2
X	developer=$3
X	reviewer=$4
X	intgrator=$5
X	;;
X
X*)
X	echo "Usage: $0 <project> <change> <developer> <reviewer> <integrator>" 1>&2
X	exit 1
X	;;
Xesac
X
Xtmp=/tmp/de.$$
Xtrap "rm -f $tmp" 1 2 3 15
Xquit()
X{
X	rm -f $tmp
X	exit 1
X}
X
X#
X# build the notice to be mailed
X#
Xcat > $tmp << 'TheEnd'
XThe change described below has passed integration
Xand is now part of the baseline.
X
XTheEnd
Xif [ $? -ne 0 ]; then quit; fi
X
X#
X# include full details of the change
X#
X$aegis -list change_details -project $project -change $change -verbose >> $tmp
Xif [ $? -ne 0 ]; then quit; fi
X
X#
X# mail it to the developer and the reviewer
X#
Xmail $developer $reviewer < $tmp
Xif [ $? -ne 0 ]; then quit; fi
X
X#
X# clean up and go home
X#
Xrm $tmp
Xexit 0
END_OF_FILE
if test 1641 -ne `wc -c <'lib/ip.sh'`; then
    echo shar: \"'lib/ip.sh'\" unpacked with wrong size!
fi
# end of 'lib/ip.sh'
fi
if test -f 'lib/rf.inews.sh' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'lib/rf.inews.sh'\"
else
echo shar: Extracting \"'lib/rf.inews.sh'\" \(1622 characters\)
sed "s/^X//" >'lib/rf.inews.sh' <<'END_OF_FILE'
X#! /bin/sh
X#
X#	aegis - project change supervisor
X#	Copyright (C) 1992, 1993 Peter Miller.
X#	All rights reserved.
X#
X#	This program is free software; you can redistribute it and/or modify
X#	it under the terms of the GNU General Public License as published by
X#	the Free Software Foundation; either version 2 of the License, or
X#	(at your option) any later version.
X#
X#	This program is distributed in the hope that it will be useful,
X#	but WITHOUT ANY WARRANTY; without even the implied warranty of
X#	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X#	GNU General Public License for more details.
X#
X#	You should have received a copy of the GNU General Public License
X#	along with this program; if not, write to the Free Software
X#	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X#
X# MANIFEST: command used to notify by usenet that a change failed review
X#
Xaegis=aegis
Xcase $# in
X3)
X	project=$1
X	change=$2
X	newsgroups3
X	;;
X
X*)
X	echo "Usage: $0 <project> <change> <newsgroups>" 1>&2
X	exit 1
X	;;
Xesac
X
Xtmp=/tmp/de.$$
Xtrap "rm -f $tmp" 1 2 3 15
Xquit()
X{
X	rm -f $tmp
X	exit 1
X}
X
X#
X# build the notice
X#
Xcat > $tmp << TheEnd
XSubject: project $project, change $change, review fail
XNewsgroups: $newsgroups
X
XThe change described below has failed review.
XIt has been returned to the developer for further work.
X
XTheEnd
Xif [ $? -ne 0 ]; then quit; fi
X
X#
X# include full details of the change
X#
X$aegis -list change_details -project $project -change $change -verbose >> $tmp
Xif [ $? -ne 0 ]; then quit; fi
X
X#
X# post on usenet
X#
Xinews -h < $tmp
Xif [ $? -ne 0 ]; then quit; fi
X
X#
X# clean up and go home
X#
Xrm $tmp
Xexit 0
END_OF_FILE
if test 1622 -ne `wc -c <'lib/rf.inews.sh'`; then
    echo shar: \"'lib/rf.inews.sh'\" unpacked with wrong size!
fi
# end of 'lib/rf.inews.sh'
fi
if test -f 'lib/rf.sh' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'lib/rf.sh'\"
else
echo shar: Extracting \"'lib/rf.sh'\" \(1597 characters\)
sed "s/^X//" >'lib/rf.sh' <<'END_OF_FILE'
X#! /bin/sh
X#
X#	aegis - project change supervisor
X#	Copyright (C) 1992, 1993 Peter Miller.
X#	All rights reserved.
X#
X#	This program is free software; you can redistribute it and/or modify
X#	it under the terms of the GNU General Public License as published by
X#	the Free Software Foundation; either version 2 of the License, or
X#	(at your option) any later version.
X#
X#	This program is distributed in the hope that it will be useful,
X#	but WITHOUT ANY WARRANTY; without even the implied warranty of
X#	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X#	GNU General Public License for more details.
X#
X#	You should have received a copy of the GNU General Public License
X#	along with this program; if not, write to the Free Software
X#	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X#
X# MANIFEST: command used to notify by email that a change failed review
X#
Xaegis=aegis
Xcase $# in
X4)
X	project=$1
X	change=$2
X	developer=$3
X	reviewer=$4
X	;;
X
X*)
X	echo "Usage: $0 <project> <change> <developer> <reviewer>" 1>&2
X	exit 1
X	;;
Xesac
X
Xtmp=/tmp/de.$$
Xtrap "rm -f $tmp" 1 2 3 15
Xquit()
X{
X	rm -f $tmp
X	exit 1
X}
X
X#
X# build the notice to be mailed
X#
Xcat > $tmp << 'TheEnd'
XThe change described below has failed review.
XIt has been returned to the developer for further work.
X
XTheEnd
Xif [ $? -ne 0 ]; then quit; fi
X
X#
X# include full details of the change
X#
X$aegis -list change_details -project $project -change $change -verbose >> $tmp
Xif [ $? -ne 0 ]; then quit; fi
X
X#
X# mail it to the developer
X#
Xmail $developer < $tmp
Xif [ $? -ne 0 ]; then quit; fi
X
X#
X# clean up and go home
X#
Xrm $tmp
Xexit 0
END_OF_FILE
if test 1597 -ne `wc -c <'lib/rf.sh'`; then
    echo shar: \"'lib/rf.sh'\" unpacked with wrong size!
fi
# end of 'lib/rf.sh'
fi
if test -f 'lib/rp.inews.sh' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'lib/rp.inews.sh'\"
else
echo shar: Extracting \"'lib/rp.inews.sh'\" \(1605 characters\)
sed "s/^X//" >'lib/rp.inews.sh' <<'END_OF_FILE'
X#! /bin/sh
X#
X#	aegis - project change supervisor
X#	Copyright (C) 1992, 1993 Peter Miller.
X#	All rights reserved.
X#
X#	This program is free software; you can redistribute it and/or modify
X#	it under the terms of the GNU General Public License as published by
X#	the Free Software Foundation; either version 2 of the License, or
X#	(at your option) any later version.
X#
X#	This program is distributed in the hope that it will be useful,
X#	but WITHOUT ANY WARRANTY; without even the implied warranty of
X#	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X#	GNU General Public License for more details.
X#
X#	You should have received a copy of the GNU General Public License
X#	along with this program; if not, write to the Free Software
X#	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X#
X# MANIFEST: command used to notify by usenet that a change has passed review
X#
Xaegis=aegis
Xcase $# in
X3)
X	project=$1
X	change=$2
X	newsgroups=$3
X	;;
X
X*)
X	echo "Usage: $0 <project> <change> <newsgroups>" 1>&2
X	exit 1
X	;;
Xesac
X
Xtmp=/tmp/de.$$
Xtrap "rm -f $tmp" 1 2 3 15
Xquit()
X{
X	rm -f $tmp
X	exit 1
X}
X
X#
X# build the notice
X#
Xcat > $tmp << TheEnd
XSubject: project $project, change $change, review pass
XNewsgroups: $newsgroups
X
XThe change described below has passed review.
XIt is now awaiting integration.
X
XTheEnd
Xif [ $? -ne 0 ]; then quit; fi
X
X#
X# include full details of the change
X#
X$aegis -list change_details -project $project -change $change -verbose >> $tmp
Xif [ $? -ne 0 ]; then quit; fi
X
X#
X# post on usenet
X#
Xinews -h < $tmp
Xif [ $? -ne 0 ]; then quit; fi
X
X#
X# clean up and go home
X#
Xrm $tmp
Xexit 0;
END_OF_FILE
if test 1605 -ne `wc -c <'lib/rp.inews.sh'`; then
    echo shar: \"'lib/rp.inews.sh'\" unpacked with wrong size!
fi
# end of 'lib/rp.inews.sh'
fi
if test -f 'lib/rp.sh' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'lib/rp.sh'\"
else
echo shar: Extracting \"'lib/rp.sh'\" \(1881 characters\)
sed "s/^X//" >'lib/rp.sh' <<'END_OF_FILE'
X#! /bin/sh
X#
X#	aegis - project change supervisor
X#	Copyright (C) 1992, 1993 Peter Miller.
X#	All rights reserved.
X#
X#	This program is free software; you can redistribute it and/or modify
X#	it under the terms of the GNU General Public License as published by
X#	the Free Software Foundation; either version 2 of the License, or
X#	(at your option) any later version.
X#
X#	This program is distributed in the hope that it will be useful,
X#	but WITHOUT ANY WARRANTY; without even the implied warranty of
X#	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X#	GNU General Public License for more details.
X#
X#	You should have received a copy of the GNU General Public License
X#	along with this program; if not, write to the Free Software
X#	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X#
X# MANIFEST: command used to notify by email that a change has passed review
X#
Xaegis=aegis
Xcase $# in
X4)
X	project=$1
X	change=$2
X	developer=$3
X	reviewer=$4
X	;;
X
X*)
X	echo "Usage: $0 <project> <change> <developer> <reviewer>" 1>&2
X	exit 1
X	;;
Xesac
X
Xtmp=/tmp/de.$$
Xtrap "rm -f $tmp" 1 2 3 15
Xquit()
X{
X	rm -f $tmp
X	exit 1
X}
X
X#
X# find out who the integrators are
X#
Xintegrators=`$aegis -list integrators -project $project -terse`
Xif [ $? -ne 0 ]; then quit; fi
Xif [ "$integrators" = "" ]
Xthen
X	integrators=`$aegis -list administrators -project $project -terse`
X	if [ $? -ne 0 ]; then quit; fi
Xfi
X
X#
X# build the notice to be mailed
X#
Xcat > $tmp << 'TheEnd'
XThe change described below has passed review.
XIt is now awaiting integration.
X
XTheEnd
Xif [ $? -ne 0 ]; then quit; fi
X
X#
X# include full details of the change
X#
X$aegis -list change_details -project $project -change $change -verbose >> $tmp
Xif [ $? -ne 0 ]; then quit; fi
X
X#
X# mail it to the developer and all integrators
X#
Xmail $developer $integrators < $tmp
Xif [ $? -ne 0 ]; then quit; fi
X
X#
X# clean up and go home
X#
Xrm $tmp
Xexit 0;
END_OF_FILE
if test 1881 -ne `wc -c <'lib/rp.sh'`; then
    echo shar: \"'lib/rp.sh'\" unpacked with wrong size!
fi
# end of 'lib/rp.sh'
fi
if test -f 'lib/rpu.inews.sh' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'lib/rpu.inews.sh'\"
else
echo shar: Extracting \"'lib/rpu.inews.sh'\" \(1627 characters\)
sed "s/^X//" >'lib/rpu.inews.sh' <<'END_OF_FILE'
X#! /bin/sh
X#
X#	aegis - project change supervisor
X#	Copyright (C) 1992, 1993 Peter Miller.
X#	All rights reserved.
X#
X#	This program is free software; you can redistribute it and/or modify
X#	it under the terms of the GNU General Public License as published by
X#	the Free Software Foundation; either version 2 of the License, or
X#	(at your option) any later version.
X#
X#	This program is distributed in the hope that it will be useful,
X#	but WITHOUT ANY WARRANTY; without even the implied warranty of
X#	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X#	GNU General Public License for more details.
X#
X#	You should have received a copy of the GNU General Public License
X#	along with this program; if not, write to the Free Software
X#	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X#
X# MANIFEST: command used to notify by usenet that a change review passed is rescinded
X#
Xaegis=aegis
Xcase $# in
X3)
X	project=$1
X	change=$2
X	newsgroups=$3
X	;;
X
X*)
X	echo "Usage: $0 <project> <change> <newsgroups>" 1>&2
X	exit 1
X	;;
Xesac
X
Xtmp=/tmp/de.$$
Xtrap "rm -f $tmp" 1 2 3 15
Xquit()
X{
X	rm -f $tmp
X	exit 1
X}
X
X#
X# build the notice
X#
Xcat > $tmp << TheEnd
XSubject: project $project, change $change, review pass undo
XNewsgroups: $newsgroups
X
XThe change described below has had its review
Xpass rescinded, pending further review.
X
XTheEnd
Xif [ $? -ne 0 ]; then quit; fi
X
X#
X# include full details of the change
X#
X$aegis -list change_details -project $project -change $change -verbose >> $tmp
Xif [ $? -ne 0 ]; then quit; fi
X
X#
X# post on usenet
X#
Xinews -h < $tmp
Xif [ $? -ne 0 ]; then quit; fi
X
X#
X# clean up and go home
X#
Xrm $tmp
Xexit 0;
END_OF_FILE
if test 1627 -ne `wc -c <'lib/rpu.inews.sh'`; then
    echo shar: \"'lib/rpu.inews.sh'\" unpacked with wrong size!
fi
# end of 'lib/rpu.inews.sh'
fi
if test -f 'lib/rpu.sh' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'lib/rpu.sh'\"
else
echo shar: Extracting \"'lib/rpu.sh'\" \(1860 characters\)
sed "s/^X//" >'lib/rpu.sh' <<'END_OF_FILE'
X#! /bin/sh
X#
X#	aegis - project change supervisor
X#	Copyright (C) 1992, 1993 Peter Miller.
X#	All rights reserved.
X#
X#	This program is free software; you can redistribute it and/or modify
X#	it under the terms of the GNU General Public License as published by
X#	the Free Software Foundation; either version 2 of the License, or
X#	(at your option) any later version.
X#
X#	This program is distributed in the hope that it will be useful,
X#	but WITHOUT ANY WARRANTY; without even the implied warranty of
X#	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X#	GNU General Public License for more details.
X#
X#	You should have received a copy of the GNU General Public License
X#	along with this program; if not, write to the Free Software
X#	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X#
X# MANIFEST: command used to notify by email that a change review passed is rescinded
X#
Xaegis=aegis
Xcase $# in
X3)
X	project=$1
X	change=$2
X	developer=$3
X	;;
X
X*)
X	echo "Usage: $0 <project> <change> <developer>" 1>&2
X	exit 1
X	;;
Xesac
X
Xtmp=/tmp/de.$$
Xtrap "rm -f $tmp" 1 2 3 15
Xquit()
X{
X	rm -f $tmp
X	exit 1
X}
X
X#
X# find out who the reviewers are
X#
Xreviewers=`$aegis -list reviewers -project $project -terse`
Xif [ $? -ne 0 ]; then quit; fi
Xif [ "$reviewers" = "" ]
Xthen
X	reviewers=`$aegis -list administrators -project $project -terse`
X	if [ $? -ne 0 ]; then quit; fi
Xfi
X
X#
X# build the notice to be mailed
X#
Xcat > $tmp << 'TheEnd'
XThe change described below has had its review
Xpass rescinded, pending further review.
X
XTheEnd
Xif [ $? -ne 0 ]; then quit; fi
X
X#
X# include full details of the change
X#
X$aegis -list change_details -project $project -change $change -verbose >> $tmp
Xif [ $? -ne 0 ]; then quit; fi
X
X#
X# mail it to the developer and all reviewers
X#
Xmail $developer $reviewers < $tmp
Xif [ $? -ne 0 ]; then quit; fi
X
X#
X# clean up and go home
X#
Xrm $tmp
Xexit 0;
END_OF_FILE
if test 1860 -ne `wc -c <'lib/rpu.sh'`; then
    echo shar: \"'lib/rpu.sh'\" unpacked with wrong size!
fi
# end of 'lib/rpu.sh'
fi
if test -f 'man1/aeca.1' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'man1/aeca.1'\"
else
echo shar: Extracting \"'man1/aeca.1'\" \(1981 characters\)
sed "s/^X//" >'man1/aeca.1' <<'END_OF_FILE'
X'\" t
X.\"	aegis - project change supervisor
X.\"	Copyright (C) 1991, 1992, 1993 Peter Miller.
X.\"	All rights reserved.
X.\"
X.\"	This program is free software; you can redistribute it and/or modify
X.\"	it under the terms of the GNU General Public License as published by
X.\"	the Free Software Foundation; either version 2 of the License, or
X.\"	(at your option) any later version.
X.\"
X.\"	This program is distributed in the hope that it will be useful,
X.\"	but WITHOUT ANY WARRANTY; without even the implied warranty of
X.\"	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X.\"	GNU General Public License for more details.
X.\"
X.\"	You should have received a copy of the GNU General Public License
X.\"	along with this program; if not, write to the Free Software
X.\"	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X.\"
X.\" MANIFEST: manual entry for 'aegis -Change_Attributes' command
X.\"
X.so z_name.so
X.TH "\*(n) -Change_Attributes" 1 \*(N)
X.SH NAME
X\*(n) -Change_Attributes \- modify the attributes of a change
X.SH SYNOPSIS
X.B \*(n)
X.B -Change_Attributes
X.I attr-file
X[
X.IR option ...
X]
X.br
X.B \*(n)
X.B -Change_Attributes
X.B -Edit
X[
X.IR option ...
X]
X.br
X.B \*(n)
X.B -Change_Attributes
X.B -List
X[
X.IR option ...
X]
X.br
X.B \*(n)
X.B -Change_Attributes
X.B -Help
X.SH DESCRIPTION
XThe
X.I \*(n)
X.I -Change_Attributes
Xcommand is used to set, edit or list the attributes of a change.
X.PP
XThe output of the
X.B -List
Xvariant is suitable for use as input at a later time.
X.PP
XSee
X.IR aecattr (5)
Xfor a description of the file format.
X.SH OPTIONS
XThe following options are understood:
X.so o_change.so
X.so o_edit.so
X.so o_help.so
X.so o_list.so
X.so o_project.so
X.so o_terse.so
X.so o_verbose.so
X.so o__rules.so
X.SH RECOMMENDED ALIAS
XThe recommended alias for this command is
X.nf
X.ta 8n 16n
Xcsh%	alias aeca '\*(n) -ca \e!* -v'
Xsh$	aeca(){\*(n) -ca $* -v}
X.fi
X.SH ERRORS
XIt is an error if
Xthe current user is not an administrator of the specified project.
X.so z_exit.so
X.so z_cr.so
END_OF_FILE
if test 1981 -ne `wc -c <'man1/aeca.1'`; then
    echo shar: \"'man1/aeca.1'\" unpacked with wrong size!
fi
# end of 'man1/aeca.1'
fi
if test -f 'man1/aecd.1' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'man1/aecd.1'\"
else
echo shar: Extracting \"'man1/aecd.1'\" \(2017 characters\)
sed "s/^X//" >'man1/aecd.1' <<'END_OF_FILE'
X'\" t
X.\"	aegis - project change supervisor
X.\"	Copyright (C) 1991, 1992, 1993 Peter Miller.
X.\"	All rights reserved.
X.\"
X.\"	This program is free software; you can redistribute it and/or modify
X.\"	it under the terms of the GNU General Public License as published by
X.\"	the Free Software Foundation; either version 2 of the License, or
X.\"	(at your option) any later version.
X.\"
X.\"	This program is distributed in the hope that it will be useful,
X.\"	but WITHOUT ANY WARRANTY; without even the implied warranty of
X.\"	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X.\"	GNU General Public License for more details.
X.\"
X.\"	You should have received a copy of the GNU General Public License
X.\"	along with this program; if not, write to the Free Software
X.\"	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X.\"
X.\" MANIFEST: manual entry for 'aegis -Change_Directory' command
X.\"
X.so z_name.so
X.TH "\*(n) -Change_Directory" 1 \*(N)
X.SH NAME
X\*(n) -Change_Directory \- change directory
X.SH SYNOPSIS
X.B \*(n)
X.B -Change_Directory
X[
X.IR option ...
X][
X]
X.I relative-path
X.br
X.B \*(n)
X.B -Change_Directory
X.B -List
X[
X.IR option ...
X]
X.br
X.B \*(n)
X.B -Change_Directory
X.B -Help
X.SH DESCRIPTION
XThe
X.I \*(n)
X.I -Change_Directory
Xcommand is used to
Xobtain a path to change directory to.
XIf the 
X.I relative-path
Xis supplied, this will be added to the output.
X.PP
XThis command is usually used to calculate an argument for
X.IR cd (1),
Xhowever it can also be used to obtain an absolute path
Xfor change and project files.
X.SH OPTIONS
XThe following options are understood:
X.so o_baselin.so
X.so o_change.so
X.so o_devdir.so
X.so o_help.so
X.so o_list.so
X.so o_project.so
X.so o_terse.so
X.so o_verbose.so
X.so o__rules.so
X.SH RECOMMENDED ALIAS
XThe recommended alias for this command is
X.nf
X.ta 8n 16n
Xcsh%	alias aecd 'cd `\*(n) -cd \e!* -v`'
Xsh$	aecd(){cd `\*(n) -cd $* -v`}
X.fi
X.SH ERRORS
XIt is an error if
Xthe specified change is not in a state where it has a directory to change to.
X.so z_exit.so
X.so z_cr.so
END_OF_FILE
if test 2017 -ne `wc -c <'man1/aecd.1'`; then
    echo shar: \"'man1/aecd.1'\" unpacked with wrong size!
fi
# end of 'man1/aecd.1'
fi
if test -f 'man1/aedbu.1' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'man1/aedbu.1'\"
else
echo shar: Extracting \"'man1/aedbu.1'\" \(1878 characters\)
sed "s/^X//" >'man1/aedbu.1' <<'END_OF_FILE'
X'\" t
X.\"	aegis - project change supervisor
X.\"	Copyright (C) 1991, 1992, 1993 Peter Miller.
X.\"	All rights reserved.
X.\"
X.\"	This program is free software; you can redistribute it and/or modify
X.\"	it under the terms of the GNU General Public License as published by
X.\"	the Free Software Foundation; either version 2 of the License, or
X.\"	(at your option) any later version.
X.\"
X.\"	This program is distributed in the hope that it will be useful,
X.\"	but WITHOUT ANY WARRANTY; without even the implied warranty of
X.\"	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X.\"	GNU General Public License for more details.
X.\"
X.\"	You should have received a copy of the GNU General Public License
X.\"	along with this program; if not, write to the Free Software
X.\"	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X.\"
X.\" MANIFEST: manual entry for 'aegis -Develop_Begin_Undo' command
X.\"
X.so z_name.so
X.TH "\*(n) -Develop_Begin_Undo" 1 \*(N)
X.SH NAME
X\*(n) -Develop_Begin_Undo \- undo the effects of aedb
X.SH SYNOPSIS
X.B \*(n)
X.B -Develop_Begin_Undo
X.I change-number
X[
X.IR option ...
X]
X.br
X.B \*(n)
X.B -Develop_Begin_Undo
X.B -List
X[
X.IR option ...
X]
X.br
X.B \*(n)
X.B -Develop_Begin_Undo
X.B -Help
X.SH DESCRIPTION
XThe
X.I \*(n)
X.I -Develop_Begin_Undo
Xcommand is used to
Xreverse the effects of the '\*(n) -Develop_Begin' command.
X.B \*(n)
X.B -Develop_Begin
Xcommand.
X.SH OPTIONS
XThe following options are understood:
X.so o_change.so
X.so o_help.so
X.so o_keep.so
X.so o_list.so
X.so o_project.so
X.so o_terse.so
X.so o_verbose.so
X.so o__rules.so
X.SH RECOMMENDED ALIAS
XThe recommended alias for this command is
X.nf
X.ta 8n 16n
Xcsh%	alias aedbu '\*(n) -dbu \e!* -v'
Xsh$	aedbu(){\*(n) -dbu $* -v}
X.fi
X.SH ERRORS
XIt is an error if
Xthe change is no assigned to the current user.
X.br
XIt is an error if
Xthe change is not in the 'being_developed' state.
X.so z_exit.so
X.so z_cr.so
END_OF_FILE
if test 1878 -ne `wc -c <'man1/aedbu.1'`; then
    echo shar: \"'man1/aedbu.1'\" unpacked with wrong size!
fi
# end of 'man1/aedbu.1'
fi
if test -f 'man1/aedeu.1' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'man1/aedeu.1'\"
else
echo shar: Extracting \"'man1/aedeu.1'\" \(2033 characters\)
sed "s/^X//" >'man1/aedeu.1' <<'END_OF_FILE'
X'\" t
X.\"	aegis - project change supervisor
X.\"	Copyright (C) 1991, 1992, 1993 Peter Miller.
X.\"	All rights reserved.
X.\"
X.\"	This program is free software; you can redistribute it and/or modify
X.\"	it under the terms of the GNU General Public License as published by
X.\"	the Free Software Foundation; either version 2 of the License, or
X.\"	(at your option) any later version.
X.\"
X.\"	This program is distributed in the hope that it will be useful,
X.\"	but WITHOUT ANY WARRANTY; without even the implied warranty of
X.\"	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X.\"	GNU General Public License for more details.
X.\"
X.\"	You should have received a copy of the GNU General Public License
X.\"	along with this program; if not, write to the Free Software
X.\"	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X.\"
X.\" MANIFEST: manual entry for 'aegis -Develop_End_Undo' command
X.\"
X.so z_name.so
X.TH "\*(n) -Develop_End_Undo" 1 \*(N)
X.SH NAME
X\*(n) -Develop_End_Undo \- recall a change for further development
X.SH SYNOPSIS
X.B \*(n)
X.B -Develop_End_Undo
X.I change-number
X[
X.IR option ...
X]
X.br
X.B \*(n)
X.B -Develop_End_Undo
X.B -List
X[
X.IR option ...
X]
X.br
X.B \*(n)
X.B -Develop_End_Undo
X.B -Help
X.SH DESCRIPTION
XThe
X.I \*(n)
X.I -Develop_End_Undo
Xcommand is used to
Xrecall a change for further development.
X.PP
XSuccessful execution of this command returns the change
Xto the 'being_developed' state.
X.PP
XThe files are changed back to being owned by the current user,
Xand cease to be read-only.
X.SH OPTIONS
XThe following options are understood:
X.so o_change.so
X.so o_help.so
X.so o_list.so
X.so o_project.so
X.so o_terse.so
X.so o_verbose.so
X.so o__rules.so
X.SH RECOMMENDED ALIAS
XThe recommended alias for this command is
X.nf
X.ta 8n 16n
Xcsh%	alias aedeu '\*(n) -deu \e!* -v'
Xsh$	aedeu(){\*(n) -deu $* -v}
X.fi
X.SH ERRORS
XIt is an error if
Xthe change is not in one of
Xthe 'being_reviewed' or 'awaiting_integration' states.
X.br
XIt is an error if
Xthe change was not developed by the current user.
X.so z_exit.so
X.so z_cr.so
END_OF_FILE
if test 2033 -ne `wc -c <'man1/aedeu.1'`; then
    echo shar: \"'man1/aedeu.1'\" unpacked with wrong size!
fi
# end of 'man1/aedeu.1'
fi
if test -f 'man1/aeibu.1' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'man1/aeibu.1'\"
else
echo shar: Extracting \"'man1/aeibu.1'\" \(2082 characters\)
sed "s/^X//" >'man1/aeibu.1' <<'END_OF_FILE'
X'\" t
X.\"	aegis - project change supervisor
X.\"	Copyright (C) 1991, 1992, 1993 Peter Miller.
X.\"	All rights reserved.
X.\"
X.\"	This program is free software; you can redistribute it and/or modify
X.\"	it under the terms of the GNU General Public License as published by
X.\"	the Free Software Foundation; either version 2 of the License, or
X.\"	(at your option) any later version.
X.\"
X.\"	This program is distributed in the hope that it will be useful,
X.\"	but WITHOUT ANY WARRANTY; without even the implied warranty of
X.\"	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X.\"	GNU General Public License for more details.
X.\"
X.\"	You should have received a copy of the GNU General Public License
X.\"	along with this program; if not, write to the Free Software
X.\"	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X.\"
X.\" MANIFEST: manual entry for 'aegis -Integrate_Begin_Undo' command
X.\"
X.so z_name.so
X.TH "\*(n) -Integrate_Begin_Undo" 1 \*(N)
X.SH NAME
X\*(n) -Integrate_Begin_Undo \- reverse the aeib command
X.SH SYNOPSIS
X.B \*(n)
X.B -Integrate_Begin_Undo
X[
X.IR option ...
X]
X.br
X.B \*(n)
X.B -Integrate_Begin_Undo
X.B -List
X[
X.IR option ...
X]
X.br
X.B \*(n)
X.B -Integrate_Begin_Undo
X.B -Help
X.SH DESCRIPTION
XThe
X.I \*(n)
X.I -Integrate_Begin_Undo
Xcommand is used to
Xreverse the actions of the
X.I "'\*(n) -Integrate_Begin'"
Xcommand.
X.PP
XSuccessful execution of this command will move the change
Xfrom the 'being_integrated' state
Xto the 'awaiting_integration' state.
XThe integration directory will be deleted.
XThe change will cease to be assigned to the current user.
X.SH OPTIONS
XThe following options are understood:
X.so o_change.so
X.so o_help.so
X.so o_keep.so
X.so o_list.so
X.so o_project.so
X.so o_terse.so
X.so o_verbose.so
X.so o__rules.so
X.SH RECOMMENDED ALIAS
XThe recommended alias for this command is
X.nf
X.ta 8n 16n
Xcsh%	alias aeibu '\*(n) -ibu \e!* -v'
Xsh$	aeibu(){\*(n) -ibu $* -v}
X.fi
X.SH ERRORS
XIt is an error if
Xthe change is not in the 'being_integrated' state.
X.br
XIt is an error if
Xthe change is not assigned to the current user.
X.so z_exit.so
X.so z_cr.so
END_OF_FILE
if test 2082 -ne `wc -c <'man1/aeibu.1'`; then
    echo shar: \"'man1/aeibu.1'\" unpacked with wrong size!
fi
# end of 'man1/aeibu.1'
fi
if test -f 'man1/aena.1' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'man1/aena.1'\"
else
echo shar: Extracting \"'man1/aena.1'\" \(1805 characters\)
sed "s/^X//" >'man1/aena.1' <<'END_OF_FILE'
X'\" t
X.\"	aegis - project change supervisor
X.\"	Copyright (C) 1991, 1992, 1993 Peter Miller.
X.\"	All rights reserved.
X.\"
X.\"	This program is free software; you can redistribute it and/or modify
X.\"	it under the terms of the GNU General Public License as published by
X.\"	the Free Software Foundation; either version 2 of the License, or
X.\"	(at your option) any later version.
X.\"
X.\"	This program is distributed in the hope that it will be useful,
X.\"	but WITHOUT ANY WARRANTY; without even the implied warranty of
X.\"	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X.\"	GNU General Public License for more details.
X.\"
X.\"	You should have received a copy of the GNU General Public License
X.\"	along with this program; if not, write to the Free Software
X.\"	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X.\"
X.\" MANIFEST: manual entry for 'aegis -New_Administrator' command
X.\"
X.so z_name.so
X.TH "\*(n) -New_Administrator" 1 \*(N)
X.SH NAME
X\*(n) -New_Administrator \- add a new administrator to a project
X.SH SYNOPSIS
X.B \*(n)
X.B -New_Administrator
X.IR user-name ...
X[
X.IR option ...
X]
X.br
X.B \*(n)
X.B -New_Administrator
X.B -List
X[
X.IR option ...
X]
X.br
X.B \*(n)
X.B -New_Administrator
X.B -Help
X.SH DESCRIPTION
XThe
X.I \*(n)
X.I -New_Administrator
Xcommand is used to
Xadd a new administrator to a project.
X.SH OPTIONS
XThe following options are understood:
X.so o_help.so
X.so o_list.so
X.so o_project.so
X.so o_terse.so
X.so o_verbose.so
X.so o__rules.so
X.SH RECOMMENDED ALIAS
XThe recommended alias for this command is
X.nf
X.ta 8n 16n
Xcsh%	alias aena '\*(n) -na \e!* -v'
Xsh$	aena(){\*(n) -na $* -v}
X.fi
X.SH ERRORS
XIt is an error if
Xthe current user is not an administrator of the project.
X.br
XIt is an error if
Xany of the named users have a uid of less than 100.
X.so z_exit.so
X.so z_cr.so
END_OF_FILE
if test 1805 -ne `wc -c <'man1/aena.1'`; then
    echo shar: \"'man1/aena.1'\" unpacked with wrong size!
fi
# end of 'man1/aena.1'
fi
if test -f 'man1/aencu.1' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'man1/aencu.1'\"
else
echo shar: Extracting \"'man1/aencu.1'\" \(2060 characters\)
sed "s/^X//" >'man1/aencu.1' <<'END_OF_FILE'
X'\" t
X.\"	aegis - project change supervisor
X.\"	Copyright (C) 1991, 1992, 1993 Peter Miller.
X.\"	All rights reserved.
X.\"
X.\"	This program is free software; you can redistribute it and/or modify
X.\"	it under the terms of the GNU General Public License as published by
X.\"	the Free Software Foundation; either version 2 of the License, or
X.\"	(at your option) any later version.
X.\"
X.\"	This program is distributed in the hope that it will be useful,
X.\"	but WITHOUT ANY WARRANTY; without even the implied warranty of
X.\"	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X.\"	GNU General Public License for more details.
X.\"
X.\"	You should have received a copy of the GNU General Public License
X.\"	along with this program; if not, write to the Free Software
X.\"	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X.\"
X.\" MANIFEST: manual entry for 'aegis -New_Change_Undo' command
X.\"
X.so z_name.so
X.TH "\*(n) -New_Change_Undo" 1 \*(N)
X.SH NAME
X\*(n) -New_Change_Undo \- remove a new change from a project
X.SH SYNOPSIS
X.B \*(n)
X.B -New_Change_Undo
X[
X.IR option ...
X]
X.br
X.B \*(n)
X.B -New_Change_Undo
X.B -List
X[
X.IR option ...
X]
X.br
X.B \*(n)
X.B -New_Change_Undo
X.B -Help
X.SH DESCRIPTION
XThe
X.I \*(n)
X.I -New_Change_Undo
Xcommand is used to
Xremove a new change from a project.
X.PP
XIt wasn't called 
X.I "'\*(n) -Remove_Change'"
Xin order to emphasize that fact the the change
Xmust be in the 'awaiting_development' state.
XIn practice it is possible,
Xwith a combination of commands,
Xto remove any change which has not reached
Xthe 'completed' state.
X.SH OPTIONS
XThe following options are understood:
X.so o_change.so
X.so o_help.so
X.so o_list.so
X.so o_project.so
X.so o_terse.so
X.so o_verbose.so
X.so o__rules.so
X.SH RECOMMENDED ALIAS
XThe recommended alias for this command is
X.nf
X.ta 8n 16n
Xcsh%	alias aencu '\*(n) -ncu \e!* -v'
Xsh$	aencu(){\*(n) -ncu $* -v}
X.fi
X.SH ERRORS
XIt is an error if
Xthe change is not in the 'awaiting_development' state.
X.br
XIt is an error if
Xthe current user is not an administrator of the project.
X.so z_exit.so
X.so z_cr.so
END_OF_FILE
if test 2060 -ne `wc -c <'man1/aencu.1'`; then
    echo shar: \"'man1/aencu.1'\" unpacked with wrong size!
fi
# end of 'man1/aencu.1'
fi
if test -f 'man1/aend.1' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'man1/aend.1'\"
else
echo shar: Extracting \"'man1/aend.1'\" \(1693 characters\)
sed "s/^X//" >'man1/aend.1' <<'END_OF_FILE'
X'\" t
X.\"	aegis - project change supervisor
X.\"	Copyright (C) 1991, 1992, 1993 Peter Miller.
X.\"	All rights reserved.
X.\"
X.\"	This program is free software; you can redistribute it and/or modify
X.\"	it under the terms of the GNU General Public License as published by
X.\"	the Free Software Foundation; either version 2 of the License, or
X.\"	(at your option) any later version.
X.\"
X.\"	This program is distributed in the hope that it will be useful,
X.\"	but WITHOUT ANY WARRANTY; without even the implied warranty of
X.\"	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X.\"	GNU General Public License for more details.
X.\"
X.\"	You should have received a copy of the GNU General Public License
X.\"	along with this program; if not, write to the Free Software
X.\"	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X.\"
X.\" MANIFEST: manual entry for 'aegis -New_Developer' command
X.\"
X.so z_name.so
X.TH "\*(n) -New_Developer" 1 \*(N)
X.SH NAME
X\*(n) -New_Developer \- add new developers to a project
X.SH SYNOPSIS
X.B \*(n)
X.B -New_Developer
X.IR user-name ...
X[
X.IR option ...
X]
X.br
X.B \*(n)
X.B -New_Developer
X.B -List
X[
X.IR option ...
X]
X.br
X.B \*(n)
X.B -New_Developer
X.B -Help
X.SH DESCRIPTION
XThe
X.I \*(n)
X.I -New_Developer
Xcommand is used to
Xadd new developers to a project.
X.SH OPTIONS
XThe following options are understood:
X.so o_help.so
X.so o_list.so
X.so o_project.so
X.so o_terse.so
X.so o_verbose.so
X.so o__rules.so
X.SH RECOMMENDED ALIAS
XThe recommended alias for this command is
X.nf
X.ta 8n 16n
Xcsh%	alias aend '\*(n) -nd \e!* -v'
Xsh$	aend(){\*(n) -nd $* -v}
X.fi
X.SH ERRORS
XIt is an error if
Xthe current user is not an administrator of the project.
X.so z_exit.so
X.so z_cr.so
END_OF_FILE
if test 1693 -ne `wc -c <'man1/aend.1'`; then
    echo shar: \"'man1/aend.1'\" unpacked with wrong size!
fi
# end of 'man1/aend.1'
fi
if test -f 'man1/aeni.1' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'man1/aeni.1'\"
else
echo shar: Extracting \"'man1/aeni.1'\" \(1702 characters\)
sed "s/^X//" >'man1/aeni.1' <<'END_OF_FILE'
X'\" t
X.\"	aegis - project change supervisor
X.\"	Copyright (C) 1991, 1992, 1993 Peter Miller.
X.\"	All rights reserved.
X.\"
X.\"	This program is free software; you can redistribute it and/or modify
X.\"	it under the terms of the GNU General Public License as published by
X.\"	the Free Software Foundation; either version 2 of the License, or
X.\"	(at your option) any later version.
X.\"
X.\"	This program is distributed in the hope that it will be useful,
X.\"	but WITHOUT ANY WARRANTY; without even the implied warranty of
X.\"	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X.\"	GNU General Public License for more details.
X.\"
X.\"	You should have received a copy of the GNU General Public License
X.\"	along with this program; if not, write to the Free Software
X.\"	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X.\"
X.\" MANIFEST: manual entry for 'aegis -New_Integrator' command
X.\"
X.so z_name.so
X.TH "\*(n) -New_Integrator" 1 \*(N)
X.SH NAME
X\*(n) -New_Integrator \- add new integrators to a project
X.SH SYNOPSIS
X.B \*(n)
X.B -New_Integrator
X.IR user-name ...
X[
X.IR option ...
X]
X.br
X.B \*(n)
X.B -New_Integrator
X.B -List
X[
X.IR option ...
X]
X.br
X.B \*(n)
X.B -New_Integrator
X.B -Help
X.SH DESCRIPTION
XThe
X.I \*(n)
X.I -New_Integrator
Xcommand is used to
Xadd new integrators to a project.
X.SH OPTIONS
XThe following options are understood:
X.so o_help.so
X.so o_list.so
X.so o_project.so
X.so o_terse.so
X.so o_verbose.so
X.so o__rules.so
X.SH RECOMMENDED ALIAS
XThe recommended alias for this command is
X.nf
X.ta 8n 16n
Xcsh%	alias aeni '\*(n) -ni \e!* -v'
Xsh$	aeni(){\*(n) -ni $* -v}
X.fi
X.SH ERRORS
XIt is an error if
Xthe current user is not an administrator of the project.
X.so z_exit.so
X.so z_cr.so
END_OF_FILE
if test 1702 -ne `wc -c <'man1/aeni.1'`; then
    echo shar: \"'man1/aeni.1'\" unpacked with wrong size!
fi
# end of 'man1/aeni.1'
fi
if test -f 'man1/aenrv.1' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'man1/aenrv.1'\"
else
echo shar: Extracting \"'man1/aenrv.1'\" \(1688 characters\)
sed "s/^X//" >'man1/aenrv.1' <<'END_OF_FILE'
X'\" t
X.\"	aegis - project change supervisor
X.\"	Copyright (C) 1991, 1992, 1993 Peter Miller.
X.\"	All rights reserved.
X.\"
X.\"	This program is free software; you can redistribute it and/or modify
X.\"	it under the terms of the GNU General Public License as published by
X.\"	the Free Software Foundation; either version 2 of the License, or
X.\"	(at your option) any later version.
X.\"
X.\"	This program is distributed in the hope that it will be useful,
X.\"	but WITHOUT ANY WARRANTY; without even the implied warranty of
X.\"	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X.\"	GNU General Public License for more details.
X.\"
X.\"	You should have received a copy of the GNU General Public License
X.\"	along with this program; if not, write to the Free Software
X.\"	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X.\"
X.\" MANIFEST: manual entry for 'aegis -New_ReViewer' command
X.\"
X.so z_name.so
X.TH "\*(n) -New_ReViewer" 1 \*(N)
X.SH NAME
X\*(n) -New_ReViewer \- add new reviewers to a project
X.SH SYNOPSIS
X.B \*(n)
X.B -New_ReViewer
X.IR user-name ...
X[
X.IR option ...
X]
X.br
X.B \*(n)
X.B -New_ReViewer
X.B -List
X[
X.IR option ...
X]
X.br
X.B \*(n)
X.B -New_ReViewer
X.B -Help
X.SH DESCRIPTION
XThe
X.I \*(n)
X.I -New_ReViewer
Xcommand is used to
Xadd new reviewers to a project.
X.SH OPTIONS
XThe following options are understood:
X.so o_help.so
X.so o_list.so
X.so o_project.so
X.so o_terse.so
X.so o_verbose.so
X.so o__rules.so
X.SH RECOMMENDED ALIAS
XThe recommended alias for this command is
X.nf
X.ta 8n 16n
Xcsh%	alias aenrv '\*(n) -nrv \e!* -v'
Xsh$	aenrv(){\*(n) -nrv $* -v}
X.fi
X.SH ERRORS
XIt is an error if
Xthe current user is not an administrator of the project.
X.so z_exit.so
X.so z_cr.so
END_OF_FILE
if test 1688 -ne `wc -c <'man1/aenrv.1'`; then
    echo shar: \"'man1/aenrv.1'\" unpacked with wrong size!
fi
# end of 'man1/aenrv.1'
fi
if test -f 'man1/aentu.1' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'man1/aentu.1'\"
else
echo shar: Extracting \"'man1/aentu.1'\" \(2059 characters\)
sed "s/^X//" >'man1/aentu.1' <<'END_OF_FILE'
X'\" t
X.\"	aegis - project change supervisor
X.\"	Copyright (C) 1991, 1992, 1993 Peter Miller.
X.\"	All rights reserved.
X.\"
X.\"	This program is free software; you can redistribute it and/or modify
X.\"	it under the terms of the GNU General Public License as published by
X.\"	the Free Software Foundation; either version 2 of the License, or
X.\"	(at your option) any later version.
X.\"
X.\"	This program is distributed in the hope that it will be useful,
X.\"	but WITHOUT ANY WARRANTY; without even the implied warranty of
X.\"	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X.\"	GNU General Public License for more details.
X.\"
X.\"	You should have received a copy of the GNU General Public License
X.\"	along with this program; if not, write to the Free Software
X.\"	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X.\"
X.\" MANIFEST: manual entry for 'aegis -New_Test_Undo' command
X.\"
X.so z_name.so
X.TH "\*(n) -New_Test_Undo" 1 \*(N)
X.SH NAME
X\*(n) -New_Test_Undo \- remove new tests from a change
X.SH SYNOPSIS
X.B \*(n)
X.B -New_Test_Undo
X.IR file-name ...
X[
X.IR option ...
X]
X.br
X.B \*(n)
X.B -New_Test_Undo
X.B -List
X[
X.IR option ...
X]
X.br
X.B \*(n)
X.B -New_Test_Undo
X.B -Help
X.SH DESCRIPTION
XThe
X.I \*(n)
X.I -New_Test_Undo
Xcommand is used to
Xremove new tests from a change
X(reverse the actions of the '\*(n) -New_Test' command).
XThe file is deleted from the development directory.
X.so z_intuit.so
X.SH OPTIONS
XThe following options are understood:
X.so o_change.so
X.so o_help.so
X.so o_keep.so
X.so o_list.so
X.so o_project.so
X.so o_terse.so
X.so o_verbose.so
X.so o__rules.so
X.SH RECOMMENDED ALIAS
XThe recommended alias for this command is
X.nf
X.ta 8n 16n
Xcsh%	alias aentu '\*(n) -ntu \e!$ -v'
Xsh$	aentu(){\*(n) -ntu $* -v}
X.fi
X.SH ERRORS
XIt is an error if
Xthe change is not in the 'being_developed' state.
X.br
XIt is an error if
Xthe change is not assigned to the current user.
X.br
XIt is an error if
Xthe file is not in the change.
X.br
XIt is an error if
Xthe file was not added to the change with the '\*(n) -New_Test' command.
X.so z_exit.so
X.so z_cr.so
END_OF_FILE
if test 2059 -ne `wc -c <'man1/aentu.1'`; then
    echo shar: \"'man1/aentu.1'\" unpacked with wrong size!
fi
# end of 'man1/aentu.1'
fi
if test -f 'man1/aepa.1' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'man1/aepa.1'\"
else
echo shar: Extracting \"'man1/aepa.1'\" \(1975 characters\)
sed "s/^X//" >'man1/aepa.1' <<'END_OF_FILE'
X'\" t
X.\"	aegis - project change supervisor
X.\"	Copyright (C) 1991, 1992, 1993 Peter Miller.
X.\"	All rights reserved.
X.\"
X.\"	This program is free software; you can redistribute it and/or modify
X.\"	it under the terms of the GNU General Public License as published by
X.\"	the Free Software Foundation; either version 2 of the License, or
X.\"	(at your option) any later version.
X.\"
X.\"	This program is distributed in the hope that it will be useful,
X.\"	but WITHOUT ANY WARRANTY; without even the implied warranty of
X.\"	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X.\"	GNU General Public License for more details.
X.\"
X.\"	You should have received a copy of the GNU General Public License
X.\"	along with this program; if not, write to the Free Software
X.\"	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X.\"
X.\" MANIFEST: manual entry for 'aegis -Project_Attributes' command
X.\"
X.so z_name.so
X.TH "\*(n) -Project_Attributes" 1 \*(N)
X.SH NAME
X\*(n) -Project_Attributes \- modify the attributes of a project
X.SH SYNOPSIS
X.B \*(n)
X.B -Project_Attributes
X.I attr-file
X[
X.IR option ...
X]
X.br
X.B \*(n)
X.B -Project_Attributes
X.B -Edit
X[
X.IR option ...
X]
X.br
X.B \*(n)
X.B -Project_Attributes
X.B -List
X[
X.IR option ...
X]
X.br
X.B \*(n)
X.B -Project_Attributes
X.B -Help
X.SH DESCRIPTION
XThe
X.I \*(n)
X.I -Project_Attributes
Xcommand is used to
Xset, edit or list the attributes of a project.
X.PP
XThe output of the
X.B -List
Xvariant is suitable for use as input at a later time.
X.PP
XSee
X.IR aepattr (5)
Xfor a description of the file format.
X.SH OPTIONS
XThe following options are understood:
X.so o_edit.so
X.so o_help.so
X.so o_list.so
X.so o_project.so
X.so o_terse.so
X.so o_verbose.so
X.so o__rules.so
X.SH RECOMMENDED ALIAS
XThe recommended alias for this command is
X.nf
X.ta 8n 16n
Xcsh%	alias aepa '\*(n) -pa \e!* -v'
Xsh$	aepa(){\*(n) -pa $* -v}
X.fi
X.SH ERRORS
XIt is an error if
Xthe current user is not an administrator of the specified project.
X.so z_exit.so
X.so z_cr.so
END_OF_FILE
if test 1975 -ne `wc -c <'man1/aepa.1'`; then
    echo shar: \"'man1/aepa.1'\" unpacked with wrong size!
fi
# end of 'man1/aepa.1'
fi
if test -f 'man1/aera.1' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'man1/aera.1'\"
else
echo shar: Extracting \"'man1/aera.1'\" \(1843 characters\)
sed "s/^X//" >'man1/aera.1' <<'END_OF_FILE'
X'\" t
X.\"	aegis - project change supervisor
X.\"	Copyright (C) 1991, 1992, 1993 Peter Miller.
X.\"	All rights reserved.
X.\"
X.\"	This program is free software; you can redistribute it and/or modify
X.\"	it under the terms of the GNU General Public License as published by
X.\"	the Free Software Foundation; either version 2 of the License, or
X.\"	(at your option) any later version.
X.\"
X.\"	This program is distributed in the hope that it will be useful,
X.\"	but WITHOUT ANY WARRANTY; without even the implied warranty of
X.\"	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X.\"	GNU General Public License for more details.
X.\"
X.\"	You should have received a copy of the GNU General Public License
X.\"	along with this program; if not, write to the Free Software
X.\"	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X.\"
X.\" MANIFEST: manual entry for 'aegis -Remove_Administrator' command
X.\"
X.so z_name.so
X.TH "\*(n) -Remove_Administrator" 1 \*(N)
X.SH NAME
X\*(n) -Remove_Administrator \- remove administrators from a project
X.SH SYNOPSIS
X.B \*(n)
X.B -Remove_Administrator
X.I user-name ...
X[
X.IR option ...
X]
X.br
X.B \*(n)
X.B -Remove_Administrator
X.B -List
X[
X.IR option ...
X]
X.br
X.B \*(n)
X.B -Remove_Administrator
X.B -Help
X.SH DESCRIPTION
XThe
X.I \*(n)
X.I -Remove_Administrator
Xcommand is used to
Xremove administrators from a project.
X.SH OPTIONS
XThe following options are understood:
X.so o_help.so
X.so o_list.so
X.so o_project.so
X.so o_terse.so
X.so o_verbose.so
X.so o__rules.so
X.SH RECOMMENDED ALIAS
XThe recommended alias for this command is
X.nf
X.ta 8n 16n
Xcsh%	alias aera '\*(n) -ra \e!* -v'
Xsh$	aera(){\*(n) -ra $* -v}
X.fi
X.SH ERRORS
XIt is an error if
Xthe current user is not an administrator of the project.
X.PP
XIt is an error if
Xan attempt is made to remove the last administrator from the project.
X.so z_exit.so
X.so z_cr.so
END_OF_FILE
if test 1843 -ne `wc -c <'man1/aera.1'`; then
    echo shar: \"'man1/aera.1'\" unpacked with wrong size!
fi
# end of 'man1/aera.1'
fi
if test -f 'man1/aerd.1' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'man1/aerd.1'\"
else
echo shar: Extracting \"'man1/aerd.1'\" \(1716 characters\)
sed "s/^X//" >'man1/aerd.1' <<'END_OF_FILE'
X'\" t
X.\"	aegis - project change supervisor
X.\"	Copyright (C) 1991, 1992, 1993 Peter Miller.
X.\"	All rights reserved.
X.\"
X.\"	This program is free software; you can redistribute it and/or modify
X.\"	it under the terms of the GNU General Public License as published by
X.\"	the Free Software Foundation; either version 2 of the License, or
X.\"	(at your option) any later version.
X.\"
X.\"	This program is distributed in the hope that it will be useful,
X.\"	but WITHOUT ANY WARRANTY; without even the implied warranty of
X.\"	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X.\"	GNU General Public License for more details.
X.\"
X.\"	You should have received a copy of the GNU General Public License
X.\"	along with this program; if not, write to the Free Software
X.\"	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X.\"
X.\" MANIFEST: manual entry for 'aegis -Remove_Developer' command
X.\"
X.so z_name.so
X.TH "\*(n) -Remove_Developer" 1 \*(N)
X.SH NAME
X\*(n) -Remove_Developer \- remove developers from a project
X.SH SYNOPSIS
X.B \*(n)
X.B -Remove_Developer
X.IR user-name ...
X[
X.IR option ...
X]
X.br
X.B \*(n)
X.B -Remove_Developer
X.B -List
X[
X.IR option ...
X]
X.br
X.B \*(n)
X.B -Remove_Developer
X.B -Help
X.SH DESCRIPTION
XThe
X.I \*(n)
X.I -Remove_Developer
Xcommand is used to
Xremove developers from a project.
X.SH OPTIONS
XThe following options are understood:
X.so o_help.so
X.so o_list.so
X.so o_project.so
X.so o_terse.so
X.so o_verbose.so
X.so o__rules.so
X.SH RECOMMENDED ALIAS
XThe recommended alias for this command is
X.nf
X.ta 8n 16n
Xcsh%	alias aerd '\*(n) -rd \e!* -v'
Xsh$	aerd(){\*(n) -rd $* -v}
X.fi
X.SH ERRORS
XIt is an error if
Xthe current user is not an administrator of the project.
X.so z_exit.so
X.so z_cr.so
END_OF_FILE
if test 1716 -ne `wc -c <'man1/aerd.1'`; then
    echo shar: \"'man1/aerd.1'\" unpacked with wrong size!
fi
# end of 'man1/aerd.1'
fi
if test -f 'man1/aeri.1' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'man1/aeri.1'\"
else
echo shar: Extracting \"'man1/aeri.1'\" \(1729 characters\)
sed "s/^X//" >'man1/aeri.1' <<'END_OF_FILE'
X'\" t
X.\"	aegis - project change supervisor
X.\"	Copyright (C) 1991, 1992, 1993 Peter Miller.
X.\"	All rights reserved.
X.\"
X.\"	This program is free software; you can redistribute it and/or modify
X.\"	it under the terms of the GNU General Public License as published by
X.\"	the Free Software Foundation; either version 2 of the License, or
X.\"	(at your option) any later version.
X.\"
X.\"	This program is distributed in the hope that it will be useful,
X.\"	but WITHOUT ANY WARRANTY; without even the implied warranty of
X.\"	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X.\"	GNU General Public License for more details.
X.\"
X.\"	You should have received a copy of the GNU General Public License
X.\"	along with this program; if not, write to the Free Software
X.\"	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X.\"
X.\" MANIFEST: manual entry for the 'aegis -Remove_Integrator' command
X.\"
X.so z_name.so
X.TH "\*(n) -Remove_Integrator" 1 \*(N)
X.SH NAME
X\*(n) -Remove_Integrator \- remove integrators from a project
X.SH SYNOPSIS
X.B \*(n)
X.B -Remove_Integrator
X.IR user-name ...
X[
X.IR option ...
X]
X.br
X.B \*(n)
X.B -Remove_Integrator
X.B -List
X[
X.IR option ...
X]
X.br
X.B \*(n)
X.B -Remove_Integrator
X.B -Help
X.SH DESCRIPTION
XThe
X.I \*(n)
X.I -Remove_Integrator
Xcommand is used to
Xremove integrators from a project.
X.SH OPTIONS
XThe following options are understood:
X.so o_help.so
X.so o_list.so
X.so o_project.so
X.so o_terse.so
X.so o_verbose.so
X.so o__rules.so
X.SH RECOMMENDED ALIAS
XThe recommended alias for this command is
X.nf
X.ta 8n 16n
Xcsh%	alias aeri '\*(n) -ri \e!* -v'
Xsh$	aeri(){\*(n) -ri $* -v}
X.fi
X.SH ERRORS
XIt is an error if
Xthe current user is not an administrator of the project.
X.so z_exit.so
X.so z_cr.so
END_OF_FILE
if test 1729 -ne `wc -c <'man1/aeri.1'`; then
    echo shar: \"'man1/aeri.1'\" unpacked with wrong size!
fi
# end of 'man1/aeri.1'
fi
if test -f 'man1/aerm.1' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'man1/aerm.1'\"
else
echo shar: Extracting \"'man1/aerm.1'\" \(2048 characters\)
sed "s/^X//" >'man1/aerm.1' <<'END_OF_FILE'
X'\" t
X.\"	aegis - project change supervisor
X.\"	Copyright (C) 1991, 1992, 1993 Peter Miller.
X.\"	All rights reserved.
X.\"
X.\"	This program is free software; you can redistribute it and/or modify
X.\"	it under the terms of the GNU General Public License as published by
X.\"	the Free Software Foundation; either version 2 of the License, or
X.\"	(at your option) any later version.
X.\"
X.\"	This program is distributed in the hope that it will be useful,
X.\"	but WITHOUT ANY WARRANTY; without even the implied warranty of
X.\"	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X.\"	GNU General Public License for more details.
X.\"
X.\"	You should have received a copy of the GNU General Public License
X.\"	along with this program; if not, write to the Free Software
X.\"	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X.\"
X.\" MANIFEST: manual entry for the 'aegis -ReMove_file' command
X.\"
X.so z_name.so
X.TH "\*(n) -ReMove_file" 1 \*(N)
X.SH NAME
X\*(n) -ReMove_file \- add files to be deleted to a change
X.SH SYNOPSIS
X.B \*(n)
X.B -ReMove_file
X.IR file-name ...
X[
X.IR option ...
X]
X.br
X.B \*(n)
X.B -ReMove_file
X.B -List
X[
X.IR option ...
X]
X.br
X.B \*(n)
X.B -ReMove_file
X.B -Help
X.SH DESCRIPTION
XThe
X.I \*(n)
X.I -ReMove_file
Xcommand is used to
Xadd files to be deleted to a change.
X.so z_intuit.so
X.PP
XThe file will be added to the list of files in the change,
Xand will be removed from the baseline at integration time.
X.SH OPTIONS
XThe following options are understood:
X.so o_change.so
X.so o_help.so
X.so o_list.so
X.so o_nolog.so
X.so o_project.so
X.so o_terse.so
X.so o_verbose.so
X.so o__rules.so
X.SH RECOMMENDED ALIAS
XThe recommended alias for this command is
X.nf
X.ta 8n 16n
Xcsh%	alias aerm '\*(n) -rm \e!* -v'
Xsh$	aerm(){\*(n) -rm $* -v}
X.fi
X.SH ERRORS
XIt is an error if
Xthe change is not in the 'being_developed' state.
X.br
XIt is an error if
Xthe change is not assigned to the current user.
X.br
XIt is an error if
Xthe file does not exist in the baseline.
X.br
XIt is an error if
Xthe file is already part of the change.
X.so z_exit.so
X.so z_cr.so
END_OF_FILE
if test 2048 -ne `wc -c <'man1/aerm.1'`; then
    echo shar: \"'man1/aerm.1'\" unpacked with wrong size!
fi
# end of 'man1/aerm.1'
fi
if test -f 'man1/aermpr.1' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'man1/aermpr.1'\"
else
echo shar: Extracting \"'man1/aermpr.1'\" \(1897 characters\)
sed "s/^X//" >'man1/aermpr.1' <<'END_OF_FILE'
X'\" t
X.\"	aegis - project change supervisor
X.\"	Copyright (C) 1991, 1992, 1993 Peter Miller.
X.\"	All rights reserved.
X.\"
X.\"	This program is free software; you can redistribute it and/or modify
X.\"	it under the terms of the GNU General Public License as published by
X.\"	the Free Software Foundation; either version 2 of the License, or
X.\"	(at your option) any later version.
X.\"
X.\"	This program is distributed in the hope that it will be useful,
X.\"	but WITHOUT ANY WARRANTY; without even the implied warranty of
X.\"	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X.\"	GNU General Public License for more details.
X.\"
X.\"	You should have received a copy of the GNU General Public License
X.\"	along with this program; if not, write to the Free Software
X.\"	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X.\"
X.\" MANIFEST: manual entry for the 'aegis -ReMove_PRoject' command
X.\"
X.so z_name.so
X.TH "\*(n) -ReMove_PRoject" 1 \*(N)
X.if n .ad l
X.if n .hy 0
X.SH NAME
X\*(n) -ReMove_PRoject \- remove project
X.SH SYNOPSIS
X.B \*(n)
X.B -ReMove_Project
X.I project-name
X[
X.IR option \&...
X]
X.br
X.B \*(n)
X.B -ReMove_Project
X.B -List
X[
X.IR option \&...
X]
X.br
X.B \*(n)
X.B -ReMove_Project
X.B -Help
X.SH DESCRIPTION
XThe
X.I \*(n)
X.I -ReMove_PRoject
Xcommand is used to
Xremove a project, either entirely,
Xor just from \*(n)' supervision.
X.SH OPTIONS
XThe following options are understood:
X.so o_keep.so
X.so o_lib.so
X.so o_list.so
X.so o_help.so
X.so o_project.so
X.so o_terse.so
X.so o_verbose.so
X.so o__rules.so
X.SH RECOMMENDED ALIAS
XThe recommended alias for this command is
X.nf
X.ta 8n 16n
Xcsh%	alias aermpr '\*(n) -rmpr \e!* -v'
Xsh$	aermpr(){\*(n) -rmpr $* -v}
X.fi
X.SH ERRORS
XIt is an error if
Xthe project has any changes between the
X.I "being developed"
Xand 
X.I "being integrated"
Xstates,
Xinclusive.
X.br
XIt is an error if
Xthe current user is not an administrator.
X.so z_exit.so
X.so z_cr.so
END_OF_FILE
if test 1897 -ne `wc -c <'man1/aermpr.1'`; then
    echo shar: \"'man1/aermpr.1'\" unpacked with wrong size!
fi
# end of 'man1/aermpr.1'
fi
if test -f 'man1/aermu.1' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'man1/aermu.1'\"
else
echo shar: Extracting \"'man1/aermu.1'\" \(2050 characters\)
sed "s/^X//" >'man1/aermu.1' <<'END_OF_FILE'
X'\" t
X.\"	aegis - project change supervisor
X.\"	Copyright (C) 1991, 1992, 1993 Peter Miller.
X.\"	All rights reserved.
X.\"
X.\"	This program is free software; you can redistribute it and/or modify
X.\"	it under the terms of the GNU General Public License as published by
X.\"	the Free Software Foundation; either version 2 of the License, or
X.\"	(at your option) any later version.
X.\"
X.\"	This program is distributed in the hope that it will be useful,
X.\"	but WITHOUT ANY WARRANTY; without even the implied warranty of
X.\"	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X.\"	GNU General Public License for more details.
X.\"
X.\"	You should have received a copy of the GNU General Public License
X.\"	along with this program; if not, write to the Free Software
X.\"	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X.\"
X.\" MANIFEST: manual entry for the 'aegis -ReMove_file_Undo' command
X.\"
X.so z_name.so
X.TH "\*(n) -ReMove_file_Undo" 1 \*(N)
X.SH NAME
X\*(n) -ReMove_file_Undo \- remove files to be deleted from a change.
X.SH SYNOPSIS
X.B \*(n)
X.B -ReMove_file_Undo
X.IR file-name ...
X[
X.IR option ...
X]
X.br
X.B \*(n)
X.B -ReMove_file_Undo
X.B -List
X[
X.IR option ...
X]
X.br
X.B \*(n)
X.B -ReMove_file_Undo
X.B -Help
X.SH DESCRIPTION
XThe
X.I \*(n)
X.I -ReMove_file_Undo
Xcommand is used to
Xremove files to be deleted from a change.
X.so z_intuit.so
X.PP
XThe files is removed from the list of files in the change.
X.SH OPTIONS
XThe following options are understood:
X.so o_change.so
X.so o_help.so
X.so o_list.so
X.so o_project.so
X.so o_terse.so
X.so o_verbose.so
X.so o__rules.so
X.SH RECOMMENDED ALIAS
XThe recommended alias for this command is
X.nf
X.ta 8n 16n
Xcsh%	alias aermu '\*(n) -rmu \e!* -v'
Xsh$	aermu(){\*(n) -rmu $* -v}
X.fi
X.SH ERRORS
XIt is an error if
Xthe change is not in the 'being_developed' state.
X.br
XIt is an error if
Xthe change is not assigned to the current user.
X.br
XIt is an error if
Xthe file is not in the change.
X.br
XIt is an error if
Xthe was not added to the change using the
X.I \*(n)
X.I -ReMove_file
Xcommand.
X.so z_exit.so
X.so z_cr.so
END_OF_FILE
if test 2050 -ne `wc -c <'man1/aermu.1'`; then
    echo shar: \"'man1/aermu.1'\" unpacked with wrong size!
fi
# end of 'man1/aermu.1'
fi
if test -f 'man1/aerp.1' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'man1/aerp.1'\"
else
echo shar: Extracting \"'man1/aerp.1'\" \(2014 characters\)
sed "s/^X//" >'man1/aerp.1' <<'END_OF_FILE'
X'\" t
X.\"	aegis - project change supervisor
X.\"	Copyright (C) 1991, 1992, 1993 Peter Miller.
X.\"	All rights reserved.
X.\"
X.\"	This program is free software; you can redistribute it and/or modify
X.\"	it under the terms of the GNU General Public License as published by
X.\"	the Free Software Foundation; either version 2 of the License, or
X.\"	(at your option) any later version.
X.\"
X.\"	This program is distributed in the hope that it will be useful,
X.\"	but WITHOUT ANY WARRANTY; without even the implied warranty of
X.\"	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X.\"	GNU General Public License for more details.
X.\"
X.\"	You should have received a copy of the GNU General Public License
X.\"	along with this program; if not, write to the Free Software
X.\"	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X.\"
X.\" MANIFEST: manual entry for the 'aegis -Review_PASS' command
X.\"
X.so z_name.so
X.TH "\*(n) -Review_PASS" 1 \*(N)
X.SH NAME
X\*(n) -Review_PASS \- pass a change review
X.SH SYNOPSIS
X.B \*(n)
X.B -Review_PASS
X[
X.IR option ...
X]
X.br
X.B \*(n)
X.B -Review_PASS
X.B -List
X[
X.IR option ...
X]
X.br
X.B \*(n)
X.B -Review_PASS
X.B -Help
X.SH DESCRIPTION
XThe
X.I \*(n)
X.I -Review_PASS
Xcommand is used to
Xnotify \*(n) that a change has passed review.
X.PP
XThe change will be advanced from the 'being_reviewed' state
Xto the 'awaiting_integration' state.
X.SH OPTIONS
XThe following options are understood:
X.so o_change.so
X.so o_help.so
X.so o_list.so
X.so o_project.so
X.so o_terse.so
X.so o_verbose.so
X.so o__rules.so
X.SH RECOMMENDED ALIAS
XThe recommended alias for this command is
X.nf
X.ta 8n 16n
Xcsh%	alias aerpass '\*(n) -rpass \e!* -v'
Xsh$	aerpass(){\*(n) -rpass $* -v}
X.fi
X.SH ERRORS
XIt is an error if
Xthe change is not in the 'being_reviewed' state.
X.br
XIt is an error if
Xthe current user is not a reviewer of the project.
X.br
XIts is an error if
Xthe current user developed the change and the project is configured to
Xdisallow developers to review their own changes (default).
X.so z_exit.so
X.so z_cr.so
END_OF_FILE
if test 2014 -ne `wc -c <'man1/aerp.1'`; then
    echo shar: \"'man1/aerp.1'\" unpacked with wrong size!
fi
# end of 'man1/aerp.1'
fi
if test -f 'man1/aerpu.1' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'man1/aerpu.1'\"
else
echo shar: Extracting \"'man1/aerpu.1'\" \(1911 characters\)
sed "s/^X//" >'man1/aerpu.1' <<'END_OF_FILE'
X'\" t
X.\"	aegis - project change supervisor
X.\"	Copyright (C) 1991, 1992, 1993 Peter Miller.
X.\"	All rights reserved.
X.\"
X.\"	This program is free software; you can redistribute it and/or modify
X.\"	it under the terms of the GNU General Public License as published by
X.\"	the Free Software Foundation; either version 2 of the License, or
X.\"	(at your option) any later version.
X.\"
X.\"	This program is distributed in the hope that it will be useful,
X.\"	but WITHOUT ANY WARRANTY; without even the implied warranty of
X.\"	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X.\"	GNU General Public License for more details.
X.\"
X.\"	You should have received a copy of the GNU General Public License
X.\"	along with this program; if not, write to the Free Software
X.\"	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X.\"
X.\" MANIFEST: manual entry for the 'aegis -Review_Pass_Undo' command
X.\"
X.so z_name.so
X.TH "\*(n) -Review_Pass_Undo" 1 \*(N)
X.SH NAME
X\*(n) -Review_Pass_Undo \- rescind a change review pass
X.SH SYNOPSIS
X.B \*(n)
X.B -Review_Pass_Undo
X[
X.IR option ...
X]
X.br
X.B \*(n)
X.B -Review_Pass_Undo
X.B -List
X[
X.IR option ...
X]
X.br
X.B \*(n)
X.B -Review_Pass_Undo
X.B -Help
X.SH DESCRIPTION
XThe
X.I \*(n)
X.I -Review_Pass_Undo
Xcommand is used to
Xnotify \*(n) that a change review pass has been rescinded.
X.PP
XThe change will be moved from the 'awaiting_integration' state
Xto the 'being_reviewed' state.
X.SH OPTIONS
XThe following options are understood:
X.so o_change.so
X.so o_help.so
X.so o_list.so
X.so o_project.so
X.so o_terse.so
X.so o_verbose.so
X.so o__rules.so
X.SH RECOMMENDED ALIAS
XThe recommended alias for this command is
X.nf
X.ta 8n 16n
Xcsh%	alias aerpu '\*(n) -rp \e!* -v'
Xsh$	aerpu(){\*(n) -rp $* -v}
X.fi
X.SH ERRORS
XIt is an error if
Xthe change is not in the 'awaiting_integration' state.
X.br
XIt is an error if
Xthe current user is not the reviewer of the change.
X.so z_exit.so
X.so z_cr.so
END_OF_FILE
if test 1911 -ne `wc -c <'man1/aerpu.1'`; then
    echo shar: \"'man1/aerpu.1'\" unpacked with wrong size!
fi
# end of 'man1/aerpu.1'
fi
if test -f 'man1/aerrv.1' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'man1/aerrv.1'\"
else
echo shar: Extracting \"'man1/aerrv.1'\" \(1715 characters\)
sed "s/^X//" >'man1/aerrv.1' <<'END_OF_FILE'
X'\" t
X.\"	aegis - project change supervisor
X.\"	Copyright (C) 1991, 1992, 1993 Peter Miller.
X.\"	All rights reserved.
X.\"
X.\"	This program is free software; you can redistribute it and/or modify
X.\"	it under the terms of the GNU General Public License as published by
X.\"	the Free Software Foundation; either version 2 of the License, or
X.\"	(at your option) any later version.
X.\"
X.\"	This program is distributed in the hope that it will be useful,
X.\"	but WITHOUT ANY WARRANTY; without even the implied warranty of
X.\"	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X.\"	GNU General Public License for more details.
X.\"
X.\"	You should have received a copy of the GNU General Public License
X.\"	along with this program; if not, write to the Free Software
X.\"	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X.\"
X.\" MANIFEST: manual entry for the 'aegis -Remove ReViewer' command
X.\"
X.so z_name.so
X.TH "\*(n) -Remove_ReViewer" 1 \*(N)
X.SH NAME
X\*(n) -Remove_ReViewer \- remove reviewers from a project
X.SH SYNOPSIS
X.B \*(n)
X.B -Remove_ReViewer
X.IR user-name ...
X[
X.IR option ...
X]
X.br
X.B \*(n)
X.B -Remove_ReViewer
X.B -List
X[
X.IR option ...
X]
X.br
X.B \*(n)
X.B -Remove_ReViewer
X.B -Help
X.SH DESCRIPTION
XThe
X.I \*(n)
X.I -Remove_ReViewer
Xcommand is used to
Xremove reviewers from a project.
X.SH OPTIONS
XThe following options are understood:
X.so o_help.so
X.so o_list.so
X.so o_project.so
X.so o_terse.so
X.so o_verbose.so
X.so o__rules.so
X.SH RECOMMENDED ALIAS
XThe recommended alias for this command is
X.nf
X.ta 8n 16n
Xcsh%	alias aerrv '\*(n) -rrv \e!* -v'
Xsh$	aerrv(){\*(n) -rrv $* -v}
X.fi
X.SH ERRORS
XIt is an error if
Xthe current user is not an administrator of the project.
X.so z_exit.so
X.so z_cr.so
END_OF_FILE
if test 1715 -ne `wc -c <'man1/aerrv.1'`; then
    echo shar: \"'man1/aerrv.1'\" unpacked with wrong size!
fi
# end of 'man1/aerrv.1'
fi
if test -f 'man1/aev.1' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'man1/aev.1'\"
else
echo shar: Extracting \"'man1/aev.1'\" \(1848 characters\)
sed "s/^X//" >'man1/aev.1' <<'END_OF_FILE'
X'\" t
X.\"	aegis - project change supervisor
X.\"	Copyright (C) 1991, 1992, 1993 Peter Miller.
X.\"	All rights reserved.
X.\"
X.\"	This program is free software; you can redistribute it and/or modify
X.\"	it under the terms of the GNU General Public License as published by
X.\"	the Free Software Foundation; either version 2 of the License, or
X.\"	(at your option) any later version.
X.\"
X.\"	This program is distributed in the hope that it will be useful,
X.\"	but WITHOUT ANY WARRANTY; without even the implied warranty of
X.\"	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X.\"	GNU General Public License for more details.
X.\"
X.\"	You should have received a copy of the GNU General Public License
X.\"	along with this program; if not, write to the Free Software
X.\"	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X.\"
X.\" MANIFEST: manual entry for the 'aegis -VERSion' command
X.\"
X.so z_name.so
X.TH "\*(n) -VERSion" 1 \*(N)
X.SH NAME
X\*(n) -VERSion \- give version information
X.SH SYNOPSIS
X.B \*(n)
X.B -VERSion
X[
X.IR info-name
X]
X.br
X.B \*(n)
X.B -VERSion
X.B -Help
X.SH DESCRIPTION
XThe
X.I \*(n)
X.I -VERSion
Xcommand is used to
Xgive version information
Xand conditions of use.
X.PP
XThere are a number of possible
X.IR info-name s,
Xas follow (abbreviations as for command line options):
X.TP 8n
XCopyright
XThe copyright notice for the \*(n) program.
XVersion information will also be printed.
XThis is the default.
X.TP 8n
XRedistribution
XPrint the conditions of use and redistribution.
X.TP 8n
XWarranty
XPrint the limited warranty.
X.SH OPTIONS
XThe following options are understood:
X.so o_help.so
X.so o__rules.so
X.SH RECOMMENDED ALIAS
XThe recommended alias for this command is
X.nf
X.ta 8n 16n
Xcsh%	alias aev '\*(n) -vers \e!*'
Xsh$	aev(){\*(n) -vers $*}
X.fi
X.SH ERRORS
XIt is an error if
Xthe 
X.I info-name
Xgiven is unknown.
X.so z_exit.so
X.so z_cr.so
END_OF_FILE
if test 1848 -ne `wc -c <'man1/aev.1'`; then
    echo shar: \"'man1/aev.1'\" unpacked with wrong size!
fi
# end of 'man1/aev.1'
fi
if test -f 'man1/o__rules.so' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'man1/o__rules.so'\"
else
echo shar: Extracting \"'man1/o__rules.so'\" \(1785 characters\)
sed "s/^X//" >'man1/o__rules.so' <<'END_OF_FILE'
X.\"
X.\"	aegis - project change supervisor
X.\"	Copyright (C) 1991, 1992, 1993 Peter Miller.
X.\"	All rights reserved.
X.\"
X.\"	This program is free software; you can redistribute it and/or modify
X.\"	it under the terms of the GNU General Public License as published by
X.\"	the Free Software Foundation; either version 2 of the License, or
X.\"	(at your option) any later version.
X.\"
X.\"	This program is distributed in the hope that it will be useful,
X.\"	but WITHOUT ANY WARRANTY; without even the implied warranty of
X.\"	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X.\"	GNU General Public License for more details.
X.\"
X.\"	You should have received a copy of the GNU General Public License
X.\"	along with this program; if not, write to the Free Software
X.\"	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X.\"
X.\" MANIFEST: description of option up/down case convention
X.\"
X.PP
XAll options may be abbreviated;
Xthe abbreviation is documented as the upper case letters,
Xall lower case letters and underscores (_) are optional.
XYou must use consecutive sequences of optional letters.
X.PP
XAll options are case insensitive,
Xyou may type them in upper case or lower case or a combination of both,
Xcase is not important.
X.PP
XFor example:
Xthe arguments "-project, "-PROJ" and "-p" are
Xall interpreted to mean the \fB-Project\fP option.
XThe argument "-prj" will not be understood,
Xbecause consecutive optional characters were not supplied.
X.PP
XOptions and other command line arguments may be
Xmixed arbitrarily on the command line,
Xafter the function selectors.
X.br
X.ne 4
X.PP
XThe GNU long option names are understood.
XSince all option names for aegis are long,
Xthis means ignoring the extra leading '-'.
XThe "\fB--\fIoption\fB=\fIvalue\fR" convention is also understood.
END_OF_FILE
if test 1785 -ne `wc -c <'man1/o__rules.so'`; then
    echo shar: \"'man1/o__rules.so'\" unpacked with wrong size!
fi
# end of 'man1/o__rules.so'
fi
if test -f 'man1/o_anticip.so' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'man1/o_anticip.so'\"
else
echo shar: Extracting \"'man1/o_anticip.so'\" \(1455 characters\)
sed "s/^X//" >'man1/o_anticip.so' <<'END_OF_FILE'
X.\"
X.\"	aegis - project change supervisor
X.\"	Copyright (C) 1991, 1992, 1993 Peter Miller.
X.\"	All rights reserved.
X.\"
X.\"	This program is free software; you can redistribute it and/or modify
X.\"	it under the terms of the GNU General Public License as published by
X.\"	the Free Software Foundation; either version 2 of the License, or
X.\"	(at your option) any later version.
X.\"
X.\"	This program is distributed in the hope that it will be useful,
X.\"	but WITHOUT ANY WARRANTY; without even the implied warranty of
X.\"	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X.\"	GNU General Public License for more details.
X.\"
X.\"	You should have received a copy of the GNU General Public License
X.\"	along with this program; if not, write to the Free Software
X.\"	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X.\"
X.\" MANIFEST: description of -ANticipate command line option
X.\"
X.TP 8n
X\fB-ANticipate\fP \fIchange-number\fP
X.br
XThis option is used to nominate a source for the reference files,
Xrather than the baseline.
XThis may be used to synchronize with a change without 
Xhaving to wait for it to arrive in the baseline.
XIt is an error if the anticipated change is not in one of the
X.I "'being reviewed'"
Xor
X.I "'awaiting integration'"
Xor
X.I "'being integrated'"
Xstates.
XA merge is always performed,
Xbecause the anticipated change is "about" to make
Xany common file out-of-date.
XYou will still have to perform a "real" merge later.
END_OF_FILE
if test 1455 -ne `wc -c <'man1/o_anticip.so'`; then
    echo shar: \"'man1/o_anticip.so'\" unpacked with wrong size!
fi
# end of 'man1/o_anticip.so'
fi
if test -f 'man1/o_change.so' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'man1/o_change.so'\"
else
echo shar: Extracting \"'man1/o_change.so'\" \(1386 characters\)
sed "s/^X//" >'man1/o_change.so' <<'END_OF_FILE'
X.\"
X.\"	aegis - project change supervisor
X.\"	Copyright (C) 1991, 1992, 1993 Peter Miller.
X.\"	All rights reserved.
X.\"
X.\"	This program is free software; you can redistribute it and/or modify
X.\"	it under the terms of the GNU General Public License as published by
X.\"	the Free Software Foundation; either version 2 of the License, or
X.\"	(at your option) any later version.
X.\"
X.\"	This program is distributed in the hope that it will be useful,
X.\"	but WITHOUT ANY WARRANTY; without even the implied warranty of
X.\"	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X.\"	GNU General Public License for more details.
X.\"
X.\"	You should have received a copy of the GNU General Public License
X.\"	along with this program; if not, write to the Free Software
X.\"	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X.\"
X.\" MANIFEST: description of -Change command line option
X.\"
X.TP 8n
X\fB-Change\fP \fInumber\fP
XThis option may be used to specify a particular change within a project.
XWhen no
X.B -Change
Xoption is specified,
Xthe
X.I AEGIS_CHANGE
Xenvironment variable is consulted.
XIf that does not exist,
Xthe user's
X.I $HOME/.\*(n)rc
Xfile is examined for a default change field (see
X.IR aeuconf (5)
Xfor more information).
XIf that does not exist,
Xwhen the user is only working on one change within a project,
Xthat is the default change number.
XOtherwise,
Xit is an error.
END_OF_FILE
if test 1386 -ne `wc -c <'man1/o_change.so'`; then
    echo shar: \"'man1/o_change.so'\" unpacked with wrong size!
fi
# end of 'man1/o_change.so'
fi
if test -f 'man1/o_lib.so' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'man1/o_lib.so'\"
else
echo shar: Extracting \"'man1/o_lib.so'\" \(1486 characters\)
sed "s/^X//" >'man1/o_lib.so' <<'END_OF_FILE'
X.\"
X.\"	aegis - project change supervisor
X.\"	Copyright (C) 1992, 1993 Peter Miller.
X.\"	All rights reserved.
X.\"
X.\"	This program is free software; you can redistribute it and/or modify
X.\"	it under the terms of the GNU General Public License as published by
X.\"	the Free Software Foundation; either version 2 of the License, or
X.\"	(at your option) any later version.
X.\"
X.\"	This program is distributed in the hope that it will be useful,
X.\"	but WITHOUT ANY WARRANTY; without even the implied warranty of
X.\"	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X.\"	GNU General Public License for more details.
X.\"
X.\"	You should have received a copy of the GNU General Public License
X.\"	along with this program; if not, write to the Free Software
X.\"	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X.\"
X.\" MANIFEST: description of -LIBrary command line option
X.\"
X.TP 8n
X\fB-LIBrary\fP \fIabspath\fP
X.br
XThis option may be used to
Xspecify a directory to be searched for global state files and user state files.
X(See
X.IR aegstate (5)
Xand
X.IR aeustate (5)
Xfor more information.)
XSeveral library options may be present on the command line,
Xand are search in the order given.
XAppended to this explicit search path are the directories specified
Xby the
X.I AEGIS
Xenvironment variable (colon separated),
Xand finally,
X.I /usr/local/lib/aegis
Xis always searched.
XAll paths specified,
Xeither on the command line or in the
X.I AEGIS
Xenvironment variable,
Xmust be absolute.
END_OF_FILE
if test 1486 -ne `wc -c <'man1/o_lib.so'`; then
    echo shar: \"'man1/o_lib.so'\" unpacked with wrong size!
fi
# end of 'man1/o_lib.so'
fi
if test -f 'man1/o_page.so' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'man1/o_page.so'\"
else
echo shar: Extracting \"'man1/o_page.so'\" \(1402 characters\)
sed "s/^X//" >'man1/o_page.so' <<'END_OF_FILE'
X.\"
X.\"	aegis - project change supervisor
X.\"	Copyright (C) 1991, 1992, 1993 Peter Miller.
X.\"	All rights reserved.
X.\"
X.\"	This program is free software; you can redistribute it and/or modify
X.\"	it under the terms of the GNU General Public License as published by
X.\"	the Free Software Foundation; either version 2 of the License, or
X.\"	(at your option) any later version.
X.\"
X.\"	This program is distributed in the hope that it will be useful,
X.\"	but WITHOUT ANY WARRANTY; without even the implied warranty of
X.\"	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X.\"	GNU General Public License for more details.
X.\"
X.\"	You should have received a copy of the GNU General Public License
X.\"	along with this program; if not, write to the Free Software
X.\"	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X.\"
X.\" MANIFEST: description of -Page_Length and -Page_Width command line options
X.\"
X.TP 8n
X\fB-Page_Length\fP \fInumber\fP
X.br
XThis option may be used to set the page length of listings.
XThe default,
Xin order of preference,
Xis obtained from the system,
Xfrom the \fILINES\fP environment variable,
Xor set to 24 lines.
X.TP 8n
X\fB-Page_Width\fP \fInumber\fP
X.br
XThis option may be used to set the page width of listings
Xand error messages.
XThe default,
Xin order of preference,
Xis obtained from the system,
Xfrom the \fICOLS\fP environment variable,
Xor set to 79 characters.
END_OF_FILE
if test 1402 -ne `wc -c <'man1/o_page.so'`; then
    echo shar: \"'man1/o_page.so'\" unpacked with wrong size!
fi
# end of 'man1/o_page.so'
fi
if test -f 'man1/o_project.so' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'man1/o_project.so'\"
else
echo shar: Extracting \"'man1/o_project.so'\" \(1387 characters\)
sed "s/^X//" >'man1/o_project.so' <<'END_OF_FILE'
X.\"
X.\"	aegis - project change supervisor
X.\"	Copyright (C) 1991, 1992, 1993 Peter Miller.
X.\"	All rights reserved.
X.\"
X.\"	This program is free software; you can redistribute it and/or modify
X.\"	it under the terms of the GNU General Public License as published by
X.\"	the Free Software Foundation; either version 2 of the License, or
X.\"	(at your option) any later version.
X.\"
X.\"	This program is distributed in the hope that it will be useful,
X.\"	but WITHOUT ANY WARRANTY; without even the implied warranty of
X.\"	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X.\"	GNU General Public License for more details.
X.\"
X.\"	You should have received a copy of the GNU General Public License
X.\"	along with this program; if not, write to the Free Software
X.\"	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X.\"
X.\" MANIFEST: description of -Project command line option
X.\"
X.TP 8n
X\fB-Project\fP \fIname\fP
XThis option may be used to select the project of interest.
XWhen no
X.B -Project
Xoption is specified,
Xthe
X.I AEGIS_PROJECT
Xenvironment variable is consulted.
XIf that does not exist,
Xthe user's
X.I $HOME/.\*(n)rc
Xfile is examined for a default project field (see
X.IR aeuconf (5)
Xfor more information).
XIf that does not exist,
Xwhen the user is only working on changes within a single project,
Xthe project name defaults to that project.
XOtherwise,
Xit is an error.
END_OF_FILE
if test 1387 -ne `wc -c <'man1/o_project.so'`; then
    echo shar: \"'man1/o_project.so'\" unpacked with wrong size!
fi
# end of 'man1/o_project.so'
fi
if test -f 'man1/z_cr.so' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'man1/z_cr.so'\"
else
echo shar: Extracting \"'man1/z_cr.so'\" \(1503 characters\)
sed "s/^X//" >'man1/z_cr.so' <<'END_OF_FILE'
X.\"
X.\"	aegis - project change supervisor
X.\"	Copyright (C) 1991, 1992, 1993 Peter Miller.
X.\"	All rights reserved.
X.\"
X.\"	This program is free software; you can redistribute it and/or modify
X.\"	it under the terms of the GNU General Public License as published by
X.\"	the Free Software Foundation; either version 2 of the License, or
X.\"	(at your option) any later version.
X.\"
X.\"	This program is distributed in the hope that it will be useful,
X.\"	but WITHOUT ANY WARRANTY; without even the implied warranty of
X.\"	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X.\"	GNU General Public License for more details.
X.\"
X.\"	You should have received a copy of the GNU General Public License
X.\"	along with this program; if not, write to the Free Software
X.\"	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X.\"
X.\" MANIFEST: copyright and author parts of section 1 manual entries
X.\"
X.br
X.ne 2i
X.SH COPYRIGHT
X.so ../doc/version.so
X\*(n) version \*(V)
X.br
X.if t .ds C) \(co
X.if n .ds C) (C)
XCopyright \*(C) 1990, 1991, 1992, 1993 Peter Miller.
X.br
XAll rights reserved.
X.PP
XThe \*(n) program comes with ABSOLUTELY NO WARRANTY;
Xfor details use the '\fI\*(n) -VERSion Warranty\fP' command.
XThis is free software
Xand you are welcome to redistribute it under certain conditions;
Xfor details use the '\fI\*(n) -VERSion Redistribution\fP' command.
X.br
X.ne 1i
X.SH AUTHOR
X.TS
Xtab(;);
Xl l l.
XPeter Miller;UUCP;uunet!munnari!bmr.gov.au!pmiller
X\f(CW/\e/\e*\fR;Internet;pmiller@bmr.gov.au
X.TE
END_OF_FILE
if test 1503 -ne `wc -c <'man1/z_cr.so'`; then
    echo shar: \"'man1/z_cr.so'\" unpacked with wrong size!
fi
# end of 'man1/z_cr.so'
fi
if test -f 'man1/z_intuit.so' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'man1/z_intuit.so'\"
else
echo shar: Extracting \"'man1/z_intuit.so'\" \(1590 characters\)
sed "s/^X//" >'man1/z_intuit.so' <<'END_OF_FILE'
X.\"
X.\"	aegis - project change supervisor
X.\"	Copyright (C) 1991, 1992, 1993 Peter Miller.
X.\"	All rights reserved.
X.\"
X.\"	This program is free software; you can redistribute it and/or modify
X.\"	it under the terms of the GNU General Public License as published by
X.\"	the Free Software Foundation; either version 2 of the License, or
X.\"	(at your option) any later version.
X.\"
X.\"	This program is distributed in the hope that it will be useful,
X.\"	but WITHOUT ANY WARRANTY; without even the implied warranty of
X.\"	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X.\"	GNU General Public License for more details.
X.\"
X.\"	You should have received a copy of the GNU General Public License
X.\"	along with this program; if not, write to the Free Software
X.\"	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X.\"
X.\" MANIFEST: description of how file names are interpreted on command line
X.\"
X.PP
XThe \*(n) program will attempt to determine the project file names
Xfrom the file names given on the command line.
XAll file names are stored within \*(n) projects as relative to
Xthe root of the baseline directory tree.
XThe development directory and the integration directory are shadows of
Xthis baseline directory, and so these relative names apply here, too.
XFiles named on the command line 
Xare first converted to absolute paths if necessary.
XThey are then compared with the baseline path,
Xthe development directory path,
Xand the integration directory path,
Xto determine a baseline-relative name.
XIt is an error if the file named is outside one of these directory trees.
END_OF_FILE
if test 1590 -ne `wc -c <'man1/z_intuit.so'`; then
    echo shar: \"'man1/z_intuit.so'\" unpacked with wrong size!
fi
# end of 'man1/z_intuit.so'
fi
if test -f 'man5/aegstate.5' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'man5/aegstate.5'\"
else
echo shar: Extracting \"'man5/aegstate.5'\" \(1400 characters\)
sed "s/^X//" >'man5/aegstate.5' <<'END_OF_FILE'
X'\" t
X.\"	aegis - project change supervisor
X.\"	Copyright (C) 1991, 1992, 1993 Peter Miller.
X.\"	All rights reserved.
X.\"
X.\"	This program is free software; you can redistribute it and/or modify
X.\"	it under the terms of the GNU General Public License as published by
X.\"	the Free Software Foundation; either version 2 of the License, or
X.\"	(at your option) any later version.
X.\"
X.\"	This program is distributed in the hope that it will be useful,
X.\"	but WITHOUT ANY WARRANTY; without even the implied warranty of
X.\"	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X.\"	GNU General Public License for more details.
X.\"
X.\"	You should have received a copy of the GNU General Public License
X.\"	along with this program; if not, write to the Free Software
X.\"	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X.\"
X.\" MANIFEST: description of aegis global state file format
X.\"
X.so z_name.so
X.TH aegstate 5 \*(N)
X.SH NAME
Xaegstate \- \*(n) state file
X.SH SYNOPSIS
X\f(CW/usr/local/lib/\*(n)/state\fP
X.SH DESCRIPTION
XThe \*(n) state file
Xis used to store
Xthe pointers to project directories.
X.SH CONTENTS
X.TP 8n
Xwhere = [{ ... }];
X.br
XThis field is a table relating project name to project directory.
XThe structure is as follows:
X.RS
X.TP 8n
Xproject_name = string;
X.br
XThe name of a project.
X.TP 8n
Xdirectory = string;
X.br
XAbsolute path of the project's directory.
X.RE
X.so z_cr.so
END_OF_FILE
if test 1400 -ne `wc -c <'man5/aegstate.5'`; then
    echo shar: \"'man5/aegstate.5'\" unpacked with wrong size!
fi
# end of 'man5/aegstate.5'
fi
if test -f 'man5/aeustate.5' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'man5/aeustate.5'\"
else
echo shar: Extracting \"'man5/aeustate.5'\" \(1588 characters\)
sed "s/^X//" >'man5/aeustate.5' <<'END_OF_FILE'
X'\" t
X.\"	aegis - project change supervisor
X.\"	Copyright (C) 1991, 1992, 1993  Peter Miller.
X.\"	All rights reserved.
X.\"
X.\"	This program is free software; you can redistribute it and/or modify
X.\"	it under the terms of the GNU General Public License as published by
X.\"	the Free Software Foundation; either version 2 of the License, or
X.\"	(at your option) any later version.
X.\"
X.\"	This program is distributed in the hope that it will be useful,
X.\"	but WITHOUT ANY WARRANTY; without even the implied warranty of
X.\"	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X.\"	GNU General Public License for more details.
X.\"
X.\"	You should have received a copy of the GNU General Public License
X.\"	along with this program; if not, write to the Free Software
X.\"	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X.\"
X.\" MANIFEST: description of aegis user state file format
X.\"
X.so z_name.so
X.TH aeustate 5 \*(N)
X.SH NAME
Xaeustate - user state file
X.SH SYNOPSIS
X\f(CW/usr/local/lib/\*(n)/user/\fP\fIuser-name\fP
X.SH DESCRIPTION
XA user state file
Xis used to store information about a user.
XThese file are created and maintained by \*(n).
XThese file should not be edited by humans.
X.SH CONTENTS
X.TP 8n
Xown = [{ ... }];
XThis field is a list of change the user is currently working on,
Xwithin project.
XThe changes are in either the
X.I being_developed
Xor
X.I being_integrated
Xstate.
XThe structure of this field is as follows:
X.RS
X.TP 8n
Xproject = string;
XThe name of a project.
X.TP 8n
Xchange = [integer];
XThe changes this user is working on in the project.
X.RE
X.so z_cr.so
END_OF_FILE
if test 1588 -ne `wc -c <'man5/aeustate.5'`; then
    echo shar: \"'man5/aeustate.5'\" unpacked with wrong size!
fi
# end of 'man5/aeustate.5'
fi
if test -f 'man5/z_cr.so' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'man5/z_cr.so'\"
else
echo shar: Extracting \"'man5/z_cr.so'\" \(1503 characters\)
sed "s/^X//" >'man5/z_cr.so' <<'END_OF_FILE'
X.\"
X.\"	aegis - project change supervisor
X.\"	Copyright (C) 1991, 1992, 1993 Peter Miller.
X.\"	All rights reserved.
X.\"
X.\"	This program is free software; you can redistribute it and/or modify
X.\"	it under the terms of the GNU General Public License as published by
X.\"	the Free Software Foundation; either version 2 of the License, or
X.\"	(at your option) any later version.
X.\"
X.\"	This program is distributed in the hope that it will be useful,
X.\"	but WITHOUT ANY WARRANTY; without even the implied warranty of
X.\"	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X.\"	GNU General Public License for more details.
X.\"
X.\"	You should have received a copy of the GNU General Public License
X.\"	along with this program; if not, write to the Free Software
X.\"	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X.\"
X.\" MANIFEST: copyright and author parts of section 5 manual entries
X.\"
X.br
X.ne 2i
X.SH COPYRIGHT
X.so ../doc/version.so
X\*(n) version \*(V)
X.br
X.if t .ds C) \(co
X.if n .ds C) (C)
XCopyright \*(C) 1990, 1991, 1992, 1993 Peter Miller.
X.br
XAll rights reserved.
X.sp
XThe \*(n) program comes with ABSOLUTELY NO WARRANTY;
Xfor details use the '\fI\*(n) -VERSion Warranty\fP' command.
XThis is free software
Xand you are welcome to redistribute it under certain conditions;
Xfor details use the '\fI\*(n) -VERSion Redistribution\fP' command.
X.br
X.ne 1i
X.SH AUTHOR
X.TS
Xtab(;);
Xl l l.
XPeter Miller;UUCP;uunet!munnari!bmr.gov.au!pmiller
X\f(CW/\e/\e*\fR;Internet;pmiller@bmr.gov.au
X.TE
END_OF_FILE
if test 1503 -ne `wc -c <'man5/z_cr.so'`; then
    echo shar: \"'man5/z_cr.so'\" unpacked with wrong size!
fi
# end of 'man5/z_cr.so'
fi
if test -f 'script/aegis.synpic' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'script/aegis.synpic'\"
else
echo shar: Extracting \"'script/aegis.synpic'\" \(1936 characters\)
sed "s/^X//" >'script/aegis.synpic' <<'END_OF_FILE'
X/*
X *	aegis - project change supervisor
X *	Copyright (C) 1993 Peter Miller.
X *	All rights reserved.
X *
X *	This program is free software; you can redistribute it and/or modify
X *	it under the terms of the GNU General Public License as published by
X *	the Free Software Foundation; either version 2 of the License, or
X *	(at your option) any later version.
X *
X *	This program is distributed in the hope that it will be useful,
X *	but WITHOUT ANY WARRANTY; without even the implied warranty of
X *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X *	GNU General Public License for more details.
X *
X *	You should have received a copy of the GNU General Public License
X *	along with this program; if not, write to the Free Software
X *	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X *
X * MANIFEST: synpic program to generate aegis icon
X */
X
Xconst black = color(0, 0, 0);
Xconst white = color(1, 1, 1);
Xconst skin = looks(white * 0.8);
X
Xlooks
Xpt(h)
X	hit	h;
X{
X	if (h.osi.x ^ 2 + h.osi.y ^ 2 >= (31/32) ^ 2)
X		return looks(black);
X	return skin;
X}
X
Xvoid
Xmain()
X{
X	const pi = 4 * atan(1);
X	scalar j;
X	const studs = 7;
X	const stud_rad = 0.1;
X	const stud_placement = 0.7;
X	const thick = 0.1;
X
X	ellipsoid
X	(
X		point(0, 0, 0),
X		point(1, 0, 0),
X		point(0, 0, 1),
X		point(0, thick, 0),
X		pt
X	);
X	background(white);
X	ellipsoid
X	(
X		point(0, -0.1, 0),
X		vector(stud_rad, 0, 0),
X		vector(0, stud_rad, 0),
X		vector(0, 0, stud_rad),
X		skin
X	);
X	for (j = 0; j < studs; j = j+ 1)
X	{
X		scalar ang;
X		ang = j*(2*pi/studs)+pi/2;
X		ellipsoid
X		(
X			point
X			(
X				cos(ang) * stud_placement,
X				-thick * sqrt(1 - stud_placement ^ 2),
X				sin(ang) * stud_placement
X			),
X			vector(stud_rad, 0, 0),
X			vector(0, stud_rad, 0),
X			vector(0, 0, stud_rad),
X			skin
X		);
X	}
X	light(vector(0.4, 1, -0.4), white);
X	view
X	(
X		vector(0, 1, 0),
X		point(-1, -4, -1),
X		vector(2, 0, 0),
X		vector(0, 0, 2)
X	);
X	image_size(64, 64);
X	jittered_sampling(4);
X}
END_OF_FILE
if test 1936 -ne `wc -c <'script/aegis.synpic'`; then
    echo shar: \"'script/aegis.synpic'\" unpacked with wrong size!
fi
# end of 'script/aegis.synpic'
fi
if test -f 'test/00/t0012a.sh' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'test/00/t0012a.sh'\"
else
echo shar: Extracting \"'test/00/t0012a.sh'\" \(1940 characters\)
sed "s/^X//" >'test/00/t0012a.sh' <<'END_OF_FILE'
X#! /bin/sh
X#
X#	aegis - project change supervisor
X#	Copyright (C) 1993 Peter Miller.
X#	All rights reserved.
X#
X#	This program is free software; you can redistribute it and/or modify
X#	it under the terms of the GNU General Public License as published by
X#	the Free Software Foundation; either version 2 of the License, or
X#	(at your option) any later version.
X#
X#	This program is distributed in the hope that it will be useful,
X#	but WITHOUT ANY WARRANTY; without even the implied warranty of
X#	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X#	GNU General Public License for more details.
X#
X#	You should have received a copy of the GNU General Public License
X#	along with this program; if not, write to the Free Software
X#	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X#
X# MANIFEST: Test the aermpr functionality
X#
X
Xunset AEGIS_PROJECT
Xunset AEGIS_CHANGE
Xumask 022
X
XUSER=${USER:-${LOGNAME:-`whoami`}}
X
Xwork=${AEGIS_TMP:-/tmp}/$$
XPAGER=cat
Xexport PAGER
X
Xhere=`pwd`
Xif test $? -ne 0 ; then exit 1; fi
X
Xfail()
X{
X	set +x
X	cd $here
X	echo FAILED test of aermpr functionality 1>&2
X	find $work -type d -user $USER -exec chmod u+w {} \;
X	rm -rf $work
X	exit 1
X}
Xpass()
X{
X	set +x
X	cd $here
X	echo PASSED 1>&2
X	find $work -type d -user $USER -exec chmod u+w {} \;
X	rm -rf $work
X	exit 0
X}
Xtrap "fail" 1 2 3 15
X
Xmkdir $work
Xif test $? -ne 0 ; then exit 1; fi
Xcd $work
Xif test $? -ne 0 ; then fail; fi
X
Xworkproj=$work/proj
Xworklib=$work/lib
X
X#
X# create the project
X#	and make sure it is there
X#
X$here/bin/aegis -newpro foo -dir $workproj -lib $worklib
Xif test $? -ne 0 ; then fail; fi
Xif test ! -d $workproj ; then fail; fi
X
X#
X# remove the project
X#	and make sure it is gone
X#
X$here/bin/aegis -remproj foo -lib $worklib
Xif test $? -ne 0 ; then fail; fi
Xif test -d $workproj ; then fail; fi
X
X#
X# Only definite negatives are possible.
X# The functionality exercised by this test appears to work,
X# no other guarantees are made.
X#
Xpass
END_OF_FILE
if test 1940 -ne `wc -c <'test/00/t0012a.sh'`; then
    echo shar: \"'test/00/t0012a.sh'\" unpacked with wrong size!
fi
# end of 'test/00/t0012a.sh'
fi
echo shar: End of archive 2 \(of 19\).
cp /dev/null ark2isdone
MISSING=""
for I in 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 ; do
    if test ! -f ark${I}isdone ; then
	MISSING="${MISSING} ${I}"
    fi
done
if test "${MISSING}" = "" ; then
    echo You have unpacked all 19 archives.
    rm -f ark[1-9]isdone ark[1-9][0-9]isdone
else
    echo You still need to unpack the following archives:
    echo "        " ${MISSING}
fi
##  End of shell archive.
exit 0
