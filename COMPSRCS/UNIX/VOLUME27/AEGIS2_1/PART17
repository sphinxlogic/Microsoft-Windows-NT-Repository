Newsgroups: comp.sources.unix
From: pmiller@bmr.gov.au (Peter Miller)
Subject: v27i052: aegis - project change supervisor (V2.1), Part17/19
References: <1.748951883.12788@gw.home.vix.com>
Sender: unix-sources-moderator@gw.home.vix.com
Approved: vixie@gw.home.vix.com

Submitted-By: pmiller@bmr.gov.au (Peter Miller)
Posting-Number: Volume 27, Issue 52
Archive-Name: aegis-2.1/part17

#! /bin/sh
# This is a shell archive.  Remove anything before this line, then unpack
# it by saving it into a file and typing "sh file".  To overwrite existing
# files, type "sh file -c".  You can also feed this as standard input via
# unshar, or by typing "sh <file", e.g..  If this archive is complete, you
# will see the following message at the end:
#		"End of archive 17 (of 19)."
# Contents:  aegis/ael.c aux/CHANGES.1.3
# Wrapped by vixie@gw.home.vix.com on Sat Sep 25 03:00:55 1993
PATH=/bin:/usr/bin:/usr/ucb ; export PATH
if test -f 'aegis/ael.c' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'aegis/ael.c'\"
else
echo shar: Extracting \"'aegis/ael.c'\" \(55482 characters\)
sed "s/^X//" >'aegis/ael.c' <<'END_OF_FILE'
X/*
X *	aegis - project change supervisor
X *	Copyright (C) 1991, 1992, 1993 Peter Miller.
X *	All rights reserved.
X *
X *	This program is free software; you can redistribute it and/or modify
X *	it under the terms of the GNU General Public License as published by
X *	the Free Software Foundation; either version 2 of the License, or
X *	(at your option) any later version.
X *
X *	This program is distributed in the hope that it will be useful,
X *	but WITHOUT ANY WARRANTY; without even the implied warranty of
X *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X *	GNU General Public License for more details.
X *
X *	You should have received a copy of the GNU General Public License
X *	along with this program; if not, write to the Free Software
X *	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X *
X * MANIFEST: list interesting things about changes and projects
X *
X * If you add another list to this file,
X * don't forget to update man1/ael.1
X */
X
X#include <string.h>
X#include <stdio.h>
X#include <stdlib.h>
X#include <time.h>
X
X#include <ael.h>
X#include <arglex2.h>
X#include <col.h>
X#include <change.h>
X#include <error.h>
X#include <gonzo.h>
X#include <help.h>
X#include <lock.h>
X#include <option.h>
X#include <os.h>
X#include <project.h>
X#include <trace.h>
X#include <user.h>
X#include <word.h>
X
X
Xtypedef struct table_ty table_ty;
Xstruct table_ty
X{
X	char	*name;
X	char	*description;
X	void	(*func)_((string_ty *, long));
X};
X
X
Xstatic	table_ty	table[] =
X{
X	{
X		"Administrators",
X		"List the administrators of a project",
X		list_administrators,
X	},
X	{
X		"Change_Details",
X		"List all information about a change in large layout form.",
X		list_change_details,
X	},
X	{
X		"Change_Files",
X		"List all files in a change",
X		list_change_files,
X	},
X	{
X		"Change_History",
X		"List the history of a change",
X		list_change_history,
X	},
X	{
X		"Changes",
X		"List the changes of a project",
X		list_changes,
X	},
X	{
X		"Default_Change",
X		"List the default change for the current user",
X		list_default_change,
X	},
X	{
X		"Default_Project",
X		"List the default project for the current user",
X		list_default_project,
X	},
X	{
X		"Developers",
X		"List the developers of a project",
X		list_developers,
X	},
X	{
X		"Integrators",
X		"List the integrators of a project",
X		list_integrators,
X	},
X	{
X		"List_List",
X		"List all lists available",
X		list_list_list,
X	},
X	{
X		"Locks",
X		"List the active locks",
X		list_locks,
X	},
X	{
X		"Outstanding_Changes",
X		"List the outstanding changes",
X		list_outstanding_changes,
X	},
X	{
X		"All_Outstanding_Changes",
X		"List the outstanding changes for all projects",
X		list_outstanding_changes_all,
X	},
X	{
X		"Project_Files",
X		"List all files in the baseline of a project",
X		list_project_files,
X	},
X	{
X		"Project_History",
X		"List the integration history of a project",
X		list_project_history,
X	},
X	{
X		"Projects",
X		"List all projects",
X		list_projects,
X	},
X	{
X		"Reviewers",
X		"List the reviewers of a project",
X		list_reviewers,
X	},
X	{
X		"Users_Changes",
X		"List of changes owned by the current user",
X		list_user_changes,
X
X	},
X	{
X		"Version",
X		"List version of a project or change",
X		list_version,
X	},
X};
X
X
Xstatic void list_usage _((void));
X
Xstatic void
Xlist_usage()
X{
X	char		*progname;
X
X	progname = option_progname_get();
X	fprintf(stderr, "usage: %s -List [ <option>... ] <listname>\n", progname);
X	fprintf(stderr, "       %s -List -List [ <option>... ]\n", progname);
X	fprintf(stderr, "       %s -List -Help\n", progname);
X	quit(1);
X}
X
X
Xstatic void list_help _((void));
X
Xstatic void
Xlist_help()
X{
X	static char *text[] =
X	{
X"NAME",
X"	%s -List - list (possibly) interesting things",
X"",
X"SYNOPSIS",
X"	%s -List [ <option>... ] <list-name>",
X"	%s -List -List [ <option>... ]",
X"	%s -List -Help",
X"",
X"DESCRIPTION",
X"	The %s -List command is used to list information.",
X"	There are a number of possible list-names, as follows",
X"	(abbreviations as for command line options):",
X"",
X"	Administrators",
X"		List the administrators of a project.",
X"",
X"	Change_Details",
X"		List full information about a change in large",
X"		format.",
X"",
X"	Change_Files",
X"		List all files in a change.",
X"",
X"	Change_History",
X"		List the history of a change.",
X"",
X"	Changes",
X"		List the changes of a project.",
X"",
X"	Default_Change",
X"		List the default change for the current user.",
X"",
X"	Default_Project",
X"		List the default project for the current user.",
X"",
X"	Developers",
X"		List the developers of a project.",
X"",
X"	Integrators",
X"		List the integrators of a project.",
X"",
X"	List_List",
X"		List all lists available.",
X"",
X"	Locks",
X"		List all currently active locks.",
X"",
X"	Outstanding_Changes",
X"		List all changes not yet completed.",
X"",
X"	All_Outstanding_Changes",
X"		List all changes not yet completed, for all",
X"		projects.",
X"",
X"	Project_Files",
X"		List all files in the baseline of a project.",
X"",
X"	Project_History",
X"		List the integration history of a project.",
X"",
X"	Projects",
X"		List all projects.",
X"",
X"	Reviewers",
X"		List the reviewers of a project.",
X"",
X"	Users_Changes",
X"		List of changes owned by the current user.",
X"",
X"	Version",
X"		List version of a project or change.",
X"",
X"	Most of these lists are available from other %s",
X"	functions.  Many %s functions provide more specific",
X"	lists.",
X"",
X"OPTIONS",
X"	The following options are understood:",
X"",
X"	-Change <number>",
X"		This option may be used to specify a particular",
X"		change within a project.  When no -Change option",
X"		is specified, the AEGIS_CHANGE environment",
X"		variable is consulted.  If that does not exist,",
X"		the user's $HOME/.%src file is examined for a",
X"		default change field (see aeuconf(5) for more",
X"		information).  If that does not exist, when the",
X"		user is only working on one change within a",
X"		project, that is the default change number.",
X"		Otherwise, it is an error.",
X"",
X"	-Help",
X"		This option may be used to obtain more",
X"		information about how to use the %s program.",
X"",
X"	-List",
X"		This option may be used to obtain a list of",
X"		suitable subjects for this command.  The list may",
X"		be more general than expected.",
X"",
X"	-Page_Length <number>",
X"		This option may be used to set the page length of",
X"		listings.  The default, in order of preference,",
X"		is obtained from the system, from the LINES",
X"		environment variable, or set to 24 lines.",
X"",
X"	-Page_Width <number>",
X"		This option may be used to set the page width of",
X"		listings and error messages.  The default, in",
X"		order of preference, is obtained from the system,",
X"		from the COLS environment variable, or set to 79",
X"		characters.",
X"",
X"	-Project <name>",
X"		This option may be used to select the project of",
X"		interest.  When no -Project option is specified,",
X"		the AEGIS_PROJECT environment variable is",
X"		consulted.  If that does not exist, the user's",
X"		$HOME/.%src file is examined for a default",
X"		project field (see aeuconf(5) for more",
X"		information).  If that does not exist, when the",
X"		user is only working on changes within a single",
X"		project, the project name defaults to that",
X"		project.  Otherwise, it is an error.",
X"",
X"	-TERse",
X"		This option may be used to cause listings to",
X"		produce the bare minimum of information.  It is",
X"		usually useful for shell scripts.",
X"",
X"	-UNFormatted",
X"		This option may be used with most listings to",
X"		specify that the column formatting is not to be",
X"		performed.  This is useful for shell scripts.",
X"",
X"	-Verbose",
X"		This option may be used to cause %s to produce",
X"		more output.  By default %s only produces",
X"		output on errors.  When used with the -List",
X"		option this option causes column headings to be",
X"		added.",
X"",
X"	All options may be abbreviated; the abbreviation is",
X"	documented as the upper case letters, all lower case",
X"	letters and underscores (_) are optional.  You must use",
X"	consecutive sequences of optional letters.",
X"",
X"	All options are case insensitive, you may type them in",
X"	upper case or lower case or a combination of both, case",
X"	is not important.",
X"",
X"	For example: the arguments \"-project, \"-PROJ\" and \"-p\"",
X"	are all interpreted to mean the -Project option.  The",
X"	argument \"-prj\" will not be understood, because",
X"	consecutive optional characters were not supplied.",
X"",
X"	Options and other command line arguments may be mixed",
X"	arbitrarily on the command line, after the function",
X"	selectors.",
X"",
X"	The GNU long option names are understood.  Since all",
X"	option names for aegis are long, this means ignoring the",
X"	extra leading '-'.  The \"--option=value\" convention is",
X"	also understood.",
X"",
X"RECOMMENDED ALIAS",
X"	The recommended alias for this command is",
X"	csh%%	alias ael '%s -l \\!* -v'",
X"	sh$	ael(){%s -l $* -v}",
X"",
X"ERRORS",
X"	It is an error if the list name given is unknown.",
X"",
X"EXIT STATUS",
X"	The %s command will exit with a status of 1 on any",
X"	error.  The %s command will only exit with a status of",
X"	0 if there are no errors.",
X"",
X"COPYRIGHT",
X"	%C",
X"",
X"AUTHOR",
X"	%A",
X	};
X
X	help(text, SIZEOF(text), list_usage);
X}
X
X
Xstatic void list_list _((void));
X
Xstatic void
Xlist_list()
X{
X	trace(("list_list()\n{\n"/*}*/));
X	arglex();
X	while (arglex_token != arglex_token_eoln)
X		generic_argument(list_usage);
X	list_list_list(0, 0);
X	trace((/*{*/"}\n"));
X}
X
X
Xstatic void list_main _((void));
X
Xstatic void
Xlist_main()
X{
X	char		*listname;
X	table_ty		*tp;
X	int		j;
X	table_ty		*hit[SIZEOF(table)];
X	int		nhit;
X	string_ty	*s1;
X	string_ty	*s2;
X	string_ty	*project_name;
X	long		change_number;
X
X	trace(("list_main()\n{\n"/*}*/));
X	listname = 0;
X	project_name = 0;
X	change_number = 0;
X	while (arglex_token != arglex_token_eoln)
X	{
X		switch (arglex_token)
X		{
X		default:
X			generic_argument(list_usage);
X			continue;
X
X		case arglex_token_string:
X			if (listname)
X				fatal("too many lists named");
X			listname = arglex_value.alv_string;
X			break;
X
X		case arglex_token_change:
X			if (arglex() != arglex_token_number)
X				list_usage();
X			/* fall through... */
X
X		case arglex_token_number:
X			if (change_number)
X				fatal("duplicate -Change option");
X			change_number = arglex_value.alv_number;
X			if (change_number < 1)
X				fatal("change %ld out of range", change_number);
X			break;
X
X		case arglex_token_project:
X			if (arglex() != arglex_token_string)
X				list_usage();
X			if (project_name)
X				fatal("duplicate -Project option");
X			project_name = str_from_c(arglex_value.alv_string);
X			break;
X		}
X		arglex();
X	}
X	if (!listname)
X		fatal("no list name given");
X
X	nhit = 0;
X	for (tp = table; tp < ENDOF(table); ++tp)
X	{
X		if (arglex_compare(tp->name, listname))
X			hit[nhit++] = tp;
X	}
X	switch (nhit)
X	{
X	case 0:
X		fatal("list name \"%s\" unknown", listname);
X
X	case 1:
X		hit[0]->func(project_name, change_number);
X		break;
X
X	default:
X		s1 = str_from_c(hit[0]->name);
X		for (j = 1; j < nhit; ++j)
X		{
X			s2 = str_format("%S, %s", s1, hit[j]->name);
X			str_free(s1);
X			s1 = s2;
X		}
X		fatal("list name \"%s\" ambiguous (%s)", listname, s1->str_text);
X	}
X	if (project_name)
X		str_free(project_name);
X	trace((/*{*/"}\n"));
X}
X
X
Xvoid
Xlist()
X{
X	trace(("list()\n{\n"/*}*/));
X	switch (arglex())
X	{
X	default:
X		list_main();
X		break;
X
X	case arglex_token_help:
X		list_help();
X		break;
X
X	case arglex_token_list:
X		list_list();
X		break;
X	}
X	trace((/*{*/"}\n"));
X}
X
X
Xstatic int name_cmp _((const void *, const void *));
X
Xstatic int
Xname_cmp(va, vb)
X	const void	*va;
X	const void	*vb;
X{
X	string_ty	*a;
X	string_ty	*b;
X
X	a = *(string_ty **)va;
X	b = *(string_ty **)vb;
X	return strcmp(a->str_text, b->str_text);
X}
X
X
Xvoid
Xlist_projects(project_name, change_number)
X	string_ty	*project_name;
X	long		change_number;
X{
X	wlist		name;
X	int		name_col = 0;
X	int		dir_col = 0;
X	int		desc_col = 0;
X	int		j;
X
X	trace(("list_projects()\n{\n"/*}*/));
X	if (project_name)
X		fatal("inappropriate -Project option");
X	if (change_number)
X		fatal("inappropriate -Change option");
X
X	/*
X	 * list the projects
X	 */
X	gonzo_project_list(&name);
X	qsort
X	(
X		name.wl_word,
X		name.wl_nwords,
X		sizeof(name.wl_word[0]),
X		name_cmp
X	);
X
X	/*
X	 * create the columns
X	 */
X	col_open((char *)0);
X	col_title("List of Projects", (char *)0);
X	name_col = col_create(0, 15);
X	col_heading(name_col, "Project\n---------");
X	if (!option_terse_get())
X	{
X		dir_col = col_create(16, 39);
X		desc_col = col_create(40, 0);
X		col_heading(dir_col, "Directory\n-----------");
X		col_heading(desc_col, "Description\n-------------");
X	}
X
X	/*
X	 * list each project
X	 */
X	for (j = 0; j < name.wl_nwords; ++j)
X	{
X		project_ty	*pp;
X		int		err;
X
X		pp = project_alloc(name.wl_word[j]);
X		project_bind_existing(pp);
X
X		os_become_orig();
X		err = os_readable(project_pstate_path_get(pp));
X		os_become_undo();
X
X		col_puts(name_col, project_name_get(pp)->str_text);
X		if (!option_terse_get())
X		{
X			col_puts(dir_col, project_home_path_get(pp)->str_text);
X			if (err)
X				col_puts(desc_col, strerror(err));
X			else
X			{
X				col_puts
X				(
X					desc_col,
X					project_pstate_get(pp)->description->
X						str_text
X				);
X			}
X		}
X		project_free(pp);
X		col_eoln();
X	}
X
X	/*
X	 * clean up and go home
X	 */
X	col_close();
X	if (!name.wl_nwords)
X		verbose("there are no projects");
X	trace((/*{*/"}\n"));
X}
X
X
Xvoid
Xlist_project_files(project_name, change_number)
X	string_ty	*project_name;
X	long		change_number;
X{
X	pstate		pstate_data;
X	project_ty	*pp;
X	change_ty	*cp;
X	user_ty		*up;
X	int		usage_col = 0;
X	int		edit_col = 0;
X	int		file_name_col = 0;
X	int		j;
X	string_ty	*line1;
X
X	/*
X	 * locate project data
X	 */
X	trace(("list_project_files()\n{\n"/*}*/));
X	if (!project_name)
X		project_name = user_default_project();
X	else
X		project_name = str_copy(project_name);
X	pp = project_alloc(project_name);
X	str_free(project_name);
X	project_bind_existing(pp);
X
X	/*
X	 * locate user data
X	 */
X	up = user_executing(pp);
X
X	/*
X	 * locate change data
X	 */
X	if (change_number)
X	{
X		cp = change_alloc(pp, change_number);
X		change_bind_existing(cp);
X	}
X	else
X		cp = 0;
X
X	pstate_data = project_pstate_get(pp);
X	assert(pstate_data->src);
X
X	/*
X	 * create the columns
X	 */
X	col_open((char *)0);
X	if (change_number)
X		line1 = str_format("Project \"%S\"  Change %ld", project_name, change_number);
X	else
X		line1 = str_format("Project \"%S\"", project_name);
X	col_title(line1->str_text, "List of Project's Files");
X	str_free(line1);
X
X	if (!option_terse_get())
X	{
X		usage_col = col_create(0, 7);
X		edit_col = col_create(8, 15);
X		col_heading(usage_col, "Type\n-------");
X		col_heading(edit_col, "Edit\n-------");
X	}
X	file_name_col = col_create(16, 0);
X	col_heading(file_name_col, "File Name\n-----------");
X
X	/*
X	 * list the project's files
X	 */
X	for (j = 0; j < pstate_data->src->length; ++j)
X	{
X		pstate_src	src_data;
X
X		src_data = pstate_data->src->list[j];
X		if
X		(
X			(
X				src_data->about_to_be_created_by
X			||
X				src_data->deleted_by
X			)
X		&&
X			!option_verbose_get()
X		)
X			continue;
X		if (cp && change_src_find(cp, src_data->file_name))
X			continue;
X		if (option_terse_get())
X		{
X			if (src_data->deleted_by)
X				continue;
X			if (src_data->about_to_be_created_by)
X				continue;
X		}
X		else
X		{
X			col_puts
X			(
X				usage_col,
X				file_usage_ename(src_data->usage)
X			);
X			if (src_data->edit_number)
X			{
X				col_puts
X				(
X					edit_col,
X					src_data->edit_number->str_text
X				);
X			}
X		}
X		assert(src_data->file_name);
X		col_puts
X		(
X			file_name_col,
X			src_data->file_name->str_text
X		);
X		if (src_data->about_to_be_created_by)
X		{
X			col_bol(file_name_col);
X			col_printf
X			(
X				file_name_col,
X				"About to be created by change %ld.",
X				src_data->about_to_be_created_by
X			);
X		}
X		if (src_data->deleted_by)
X		{
X			col_bol(file_name_col);
X			col_printf
X			(
X				file_name_col,
X				"Deleted by change %ld.",
X				src_data->deleted_by
X			);
X		}
X		if (src_data->locked_by)
X		{
X			col_bol(file_name_col);
X			col_printf
X			(
X				file_name_col,
X				"Locked by change %ld.",
X				src_data->locked_by
X			);
X		}
X		col_eoln();
X	}
X
X	/*
X	 * clean up and go home
X	 */
X	col_close();
X	if (!pstate_data->src->length)
X		project_verbose(pp, "no files");
X	project_free(pp);
X	if (cp)
X		change_free(cp);
X	user_free(up);
X	trace((/*{*/"}\n"));
X}
X
X
Xvoid
Xlist_administrators(project_name, change_number)
X	string_ty	*project_name;
X	long		change_number;
X{
X	pstate		pstate_data;
X	project_ty	*pp;
X	int		login_col = 0;
X	int		name_col = 0;
X	int		j;
X	string_ty	*line1;
X
X	trace(("list_administrators()\n{\n"/*}*/));
X	if (change_number)
X		fatal("inappropriate -Change option");
X
X	/*
X	 * locate project data
X	 */
X	if (!project_name)
X		project_name = user_default_project();
X	else
X		project_name = str_copy(project_name);
X	pp = project_alloc(project_name);
X	str_free(project_name);
X	project_bind_existing(pp);
X
X	pstate_data = project_pstate_get(pp);
X	assert(pstate_data->administrator);
X
X	/*
X	 * create the columns
X	 */
X	col_open((char *)0);
X	line1 = str_format("Project \"%S\"", project_name);
X	col_title(line1->str_text, "List of Administrators");
X	str_free(line1);
X
X	login_col = col_create(0, 15);
X	col_heading(login_col, "User\n------");
X	if (!option_terse_get())
X	{
X		name_col = col_create(16, 0);
X		col_heading(name_col, "Full Name\n-----------");
X	}
X
X	/*
X	 * list project's administrators
X	 */
X	for (j = 0; j < pstate_data->administrator->length; ++j)
X	{
X		string_ty	*logname;
X
X		logname = pstate_data->administrator->list[j];
X		col_puts(login_col, logname->str_text);
X		if (!option_terse_get())
X			col_puts(name_col, user_full_name(logname));
X		col_eoln();
X	}
X
X	/*
X	 * clean up and go home
X	 */
X	col_close();
X	if (!pstate_data->administrator->length)
X		project_verbose(pp, "no administrators");
X	project_free(pp);
X	trace((/*{*/"}\n"));
X}
X
X
Xvoid
Xlist_change_files(project_name, change_number)
X	string_ty	*project_name;
X	long		change_number;
X{
X	cstate		cstate_data;
X	project_ty	*pp;
X	change_ty	*cp;
X	user_ty		*up;
X	int		usage_col = 0;
X	int		action_col = 0;
X	int		edit_col = 0;
X	int		file_name_col = 0;
X	int		j;
X	string_ty	*line1;
X
X	/*
X	 * locate project data
X	 */
X	trace(("list_change_files()\n{\n"/*}*/));
X	if (!project_name)
X		project_name = user_default_project();
X	else
X		project_name = str_copy(project_name);
X	pp = project_alloc(project_name);
X	str_free(project_name);
X	project_bind_existing(pp);
X
X	/*
X	 * locate user data
X	 */
X	up = user_executing(pp);
X
X	/*
X	 * locate change data
X	 */
X	if (!change_number)
X		change_number = user_default_change(up);
X	cp = change_alloc(pp, change_number);
X	change_bind_existing(cp);
X
X	cstate_data = change_cstate_get(cp);
X	assert(cstate_data->src);
X
X	/*
X	 * create the columns
X	 */
X	col_open((char *)0);
X	line1 =
X		str_format
X		(
X			"Project \"%S\"  Change %ld",
X			project_name,
X			change_number
X		);
X	col_title(line1->str_text, "List of Change's Files");
X	str_free(line1);
X
X	if (!option_terse_get())
X	{
X		usage_col = col_create(0, 7);
X		action_col = col_create(8, 15);
X		edit_col = col_create(16, 23);
X		col_heading(usage_col, "Type\n-------");
X		col_heading(action_col, "Action\n-------");
X		col_heading(edit_col, "Edit\n-------");
X	}
X	file_name_col = col_create(24, 0);
X	col_heading(file_name_col, "File Name\n-----------");
X
X	/*
X	 * list the change's files
X	 */
X	for (j = 0; j < cstate_data->src->length; ++j)
X	{
X		cstate_src	src_data;
X
X		src_data = cstate_data->src->list[j];
X		assert(src_data->file_name);
X		if (option_terse_get())
X		{
X			if (src_data->action == file_action_remove)
X				continue;
X		}
X		else
X		{
X			col_puts
X			(
X				usage_col,
X				file_usage_ename(src_data->usage)
X			);
X			col_puts
X			(
X				action_col,
X				file_action_ename(src_data->action)
X			);
X			if (src_data->edit_number)
X			{
X				pstate_src	psrc_data;
X
X				col_puts
X				(
X					edit_col,
X					src_data->edit_number->str_text
X				);
X				if
X				(
X					cstate_data->state
X				==
X					cstate_state_being_developed
X				)
X					psrc_data =
X						project_src_find
X						(
X							pp,
X						     src_data->file_name
X						);
X				else
X					psrc_data = 0;
X				if
X				(
X					psrc_data
X				&&
X					psrc_data->edit_number
X				&&
X					!str_equal
X					(
X						src_data->edit_number,
X						psrc_data->edit_number
X					)
X				)
X				{
X					col_printf
X					(
X						edit_col,
X						" (%s)",
X					psrc_data->edit_number->str_text
X					);
X				}
X			}
X		}
X		col_puts
X		(
X			file_name_col,
X			src_data->file_name->str_text
X		);
X		if (src_data->move)
X		{
X			col_bol(file_name_col);
X			col_puts(file_name_col, "Moved ");
X			if (src_data->action == file_action_create)
X				col_puts(file_name_col, "from ");
X			else
X				col_puts(file_name_col, "to ");
X			col_puts(file_name_col, src_data->move->str_text);
X		}
X		col_eoln();
X	}
X
X	/*
X	 * clean up and go home
X	 */
X	col_close();
X	if (!cstate_data->src->length)
X		change_verbose(cp, "no files");
X	project_free(pp);
X	change_free(cp);
X	user_free(up);
X	trace((/*{*/"}\n"));
X}
X
X#define HOURS_PER_WORKING_DAY 7.5
X#define SECONDS_PER_WORKING_DAY (long)(HOURS_PER_WORKING_DAY * 60L * 60L)
X#define SECONDS_PER_DAY (24L * 60L * 60L)
X#define ELAPSED_TIME_THRESHOLD (10L * 60L) /* ten minutes */
X
Xstatic double working_days _((time_t, time_t));
X
Xstatic double
Xworking_days(start, finish)
X	time_t		start;
X	time_t		finish;
X{
X	time_t		duration;
X	double		working_days_frac;
X	long		working_days;
X	long		ndays;
X	long		nweeks;
X	struct tm 	*tm;
X
X	/*
X	 * elapsed time in seconds
X	 */
X	trace(("working_days(start = %ld, finish = %ld)\n{\n"/*}*/, start,
X		finish));
X	trace(("start = %s", ctime(&start)));
X	trace(("finish = %s", ctime(&finish)));
X	duration = finish - start;
X	if (duration < 0)
X		duration = 0;
X	trace(("duration = %ld;\n", duration));
X
X	/*
X	 * determine the number of whole calendar days
X	 */
X	ndays =
X		(
X			(duration + (SECONDS_PER_DAY - SECONDS_PER_WORKING_DAY))
X		/
X			SECONDS_PER_DAY
X		);
X	trace(("ndays = %ld;\n", ndays));
X
X	/*
X	 * determine the fractional part
X	 */
X	working_days_frac =
X		(
X			(double)(duration - ndays * SECONDS_PER_DAY)
X		/
X			SECONDS_PER_WORKING_DAY
X		);
X	trace(("working_days_frac = %g;\n", working_days_frac));
X
X	/*
X	 * 5 working days per working week
X	 */
X	nweeks = ndays / 7;
X	working_days = 5 * nweeks;
X	ndays -= nweeks * 7;
X	working_days += ndays;
X	trace(("working_days = %ld;\n", working_days));
X
X	/*
X	 * give credit for working over the weekend
X	 */
X	tm = localtime(&start);
X	ndays += tm->tm_wday;
X	trace(("ndays = %ld;\n", ndays));
X	if (ndays >= 7 && tm->tm_wday != 6)
X		working_days--;
X	if (ndays >= 8)
X		working_days--;
X	if (working_days < 0)
X		working_days = 0;
X	trace(("working_days = %ld;\n", working_days));
X
X	/*
X	 * done
X	 */
X	working_days_frac += working_days;
X	if (working_days_frac < 0)
X		working_days_frac = 0;
X	trace(("return %.10g;\n", working_days_frac));
X	trace((/*{*/"}\n"));
X	return working_days_frac;
X}
X
X
Xvoid
Xlist_change_history(project_name, change_number)
X	string_ty	*project_name;
X	long		change_number;
X{
X	cstate		cstate_data;
X	project_ty	*pp;
X	change_ty	*cp;
X	user_ty		*up;
X	int		what_col;
X	int		when_col;
X	int		who_col;
X	int		why_col;
X	int		j;
X	string_ty	*line1;
X
X	/*
X	 * locate project data
X	 */
X	trace(("list_change_history()\n{\n"/*}*/));
X	if (!project_name)
X		project_name = user_default_project();
X	else
X		project_name = str_copy(project_name);
X	pp = project_alloc(project_name);
X	str_free(project_name);
X	project_bind_existing(pp);
X
X	/*
X	 * locate user data
X	 */
X	up = user_executing(pp);
X
X	/*
X	 * locate change data
X	 */
X	if (!change_number)
X		change_number = user_default_change(up);
X	cp = change_alloc(pp, change_number);
X	change_bind_existing(cp);
X
X	cstate_data = change_cstate_get(cp);
X	assert(cstate_data->src);
X
X	/*
X	 * create the columns
X	 */
X	col_open((char *)0);
X	line1 =
X		str_format
X		(
X			"Project \"%S\"  Change %ld",
X			project_name,
X			change_number
X		);
X	col_title(line1->str_text, "History");
X	str_free(line1);
X
X	what_col = col_create(0, 15);
X	when_col = col_create(16, 31);
X	who_col = col_create(32, 39);
X	why_col = col_create(40, 0);
X	col_heading(what_col, "What\n------");
X	col_heading(when_col, "When\n------");
X	col_heading(who_col, "Who\n-----");
X	col_heading(why_col, "Comment\n---------");
X
X	/*
X	 * list the history
X	 */
X	for (j = 0; j < cstate_data->history->length; ++j)
X	{
X		cstate_history	history_data;
X		time_t		t;
X
X		history_data = cstate_data->history->list[j];
X		col_puts
X		(
X			what_col,
X			cstate_history_what_ename(history_data->what)
X		);
X		t = history_data->when;
X		col_puts(when_col, ctime(&t));
X		col_puts(who_col, history_data->who->str_text);
X		if (history_data->why)
X			col_puts(why_col, history_data->why->str_text);
X		if (history_data->what != cstate_history_what_integrate_pass)
X		{
X			time_t	finish;
X
X			if (j + 1 < cstate_data->history->length)
X				finish = cstate_data->history->list[j + 1]->when;
X			else
X				time(&finish);
X			if (finish - t >= ELAPSED_TIME_THRESHOLD)
X			{
X				col_bol(why_col);
X				col_printf
X				(
X					why_col,
X					"Elapsed time: %5.3f days.\n",
X					working_days(t, finish)
X				);
X			}
X		}
X		col_eoln();
X	}
X
X	/*
X	 * clean up and go home
X	 */
X	col_close();
X	if (!cstate_data->history->length)
X		change_verbose(cp, "no history");
X	change_free(cp);
X	project_free(pp);
X	user_free(up);
X	trace((/*{*/"}\n"));
X}
X
X
Xstatic int single_bit _((int));
X
Xstatic int
Xsingle_bit(n)
X	int		n;
X{
X	int		result;
X
X	/* see if no bits are set */
X	if (!n)
X		return -1;
X	/*
X	 * see if more than 1 bit is set
X	 *	(only works on 2s compliment machines)
X	 */
X	if ((n & -n) != n)
X		return -1;
X	/*
X	 * will need to extend this for 64bit machines,
X	 * if ever have >32 states
X	 */
X	result = 0;
X	if (n & 0xFFFF0000)
X		result += 16;
X	if (n & 0xFF00FF00)
X		result += 8;
X	if (n & 0xF0F0F0F0)
X		result += 4;
X	if (n & 0xCCCCCCCC)
X		result += 2;
X	if (n & 0xAAAAAAAA)
X		result++;
X	return result;
X}
X
X
Xvoid
Xlist_changes_in_state_mask(project_name, state_mask)
X	string_ty	*project_name;
X	int		state_mask;
X{
X	pstate		pstate_data;
X	int		number_col = 0;
X	int		state_col = 0;
X	int		description_col = 0;
X	int		j;
X	project_ty	*pp;
X	string_ty	*line1;
X	string_ty	*line2;
X
X	/*
X	 * locate project data
X	 */
X	trace(("list_changes_in_state_mask(state_mask = 0x%X)\n{\n"/*}*/, state_mask));
X	if (!project_name)
X		project_name = user_default_project();
X	else
X		project_name = str_copy(project_name);
X	pp = project_alloc(project_name);
X	str_free(project_name);
X	project_bind_existing(pp);
X
X	pstate_data = project_pstate_get(pp);
X
X	/*
X	 * create the columns
X	 */
X	col_open((char *)0);
X	line1 = str_format("Project \"%S\"", project_name);
X	j = single_bit(state_mask);
X	if (j >= 0)
X		line2 = str_format("List of Changes %s", cstate_state_ename(j));
X	else
X	{
X		j = single_bit(~state_mask);
X		if (j >= 0)
X		{
X			line2 =
X				str_format
X				(
X					"List of Changes not %s",
X					cstate_state_ename(j)
X				);
X		}
X		else
X			line2 = str_from_c("List of Changes");
X	}
X	col_title(line1->str_text, line2->str_text);
X	str_free(line1);
X	str_free(line2);
X
X	number_col = col_create(0, 7);
X	col_heading(number_col, "Change\n-------");
X	if (!option_terse_get())
X	{
X		state_col = col_create(8, 23);
X		description_col = col_create(24, 0);
X		col_heading(state_col, "State\n-------");
X		col_heading(description_col, "Description\n-------------");
X	}
X
X	/*
X	 * list the project's changes
X	 */
X	for (j = 0; j < pstate_data->change->length; ++j)
X	{
X		cstate		cstate_data;
X		long		change_number;
X		change_ty	*cp;
X
X		change_number = pstate_data->change->list[j];
X		cp = change_alloc(pp, change_number);
X		change_bind_existing(cp);
X		cstate_data = change_cstate_get(cp);
X		if (state_mask & (1 << cstate_data->state))
X		{
X			col_printf(number_col, "%4ld", change_number);
X			if (!option_terse_get())
X			{
X				col_puts
X				(
X					state_col,
X					cstate_state_ename(cstate_data->state)
X				);
X				if (cstate_data->brief_description)
X				{
X					col_puts
X					(
X						description_col,
X					cstate_data->brief_description->str_text
X					);
X				}
X			}
X			col_eoln();
X		}
X		change_free(cp);
X	}
X
X	/*
X	 * clean up and go home
X	 */
X	col_close();
X	if (!pstate_data->change->length)
X		project_verbose(pp, "no changes");
X	project_free(pp);
X	trace((/*{*/"}\n"));
X}
X
X
Xvoid
Xlist_changes(project_name, change_number)
X	string_ty	*project_name;
X	long		change_number;
X{
X	trace(("list_changes()\n{\n"/*}*/));
X	if (change_number)
X		fatal("inappropriate -Change option");
X	list_changes_in_state_mask(project_name, ~0);
X	trace((/*{*/"}\n"));
X}
X
X
Xvoid
Xlist_list_list(project_name, change_number)
X	string_ty	*project_name;
X	long		change_number;
X{
X	int		name_col = 0;
X	int		desc_col = 0;
X	table_ty	*tp;
X
X	trace(("list_list_list()\n{\n"/*}*/));
X	if (project_name)
X		fatal("inappropriate -Project option");
X	if (change_number)
X		fatal("inappropriate -Change option");
X
X	/*
X	 * create the columns
X	 */
X	col_open((char *)0);
X	col_title("List of Lists", (char *)0);
X	name_col = col_create(0, 15);
X	col_heading(name_col, "Name\n------");
X	if (!option_terse_get())
X	{
X		desc_col = col_create(16, 0);
X		col_heading(desc_col, "Description\n-------------");
X	}
X
X	/*
X	 * list the lists
X	 */
X	for (tp = table; tp < ENDOF(table); ++tp)
X	{
X		col_puts(name_col, tp->name);
X		if (!option_terse_get())
X			col_puts(desc_col, tp->description);
X		col_eoln();
X	}
X
X	/*
X	 * clean up and go home
X	 */
X	col_close();
X	trace((/*{*/"}\n"));
X}
X
X
Xvoid
Xlist_developers(project_name, change_number)
X	string_ty	*project_name;
X	long		change_number;
X{
X	pstate		pstate_data;
X	project_ty	*pp;
X	int		login_col = 0;
X	int		name_col = 0;
X	int		j;
X	string_ty	*line1;
X
X	trace(("list_developers()\n{\n"/*}*/));
X	if (change_number)
X		fatal("inappropriate -Change option");
X
X	/*
X	 * locate project data
X	 */
X	if (!project_name)
X		project_name = user_default_project();
X	else
X		project_name = str_copy(project_name);
X	pp = project_alloc(project_name);
X	str_free(project_name);
X	project_bind_existing(pp);
X
X	pstate_data = project_pstate_get(pp);
X	assert(pstate_data->developer);
X
X	/*
X	 * create the columns
X	 */
X	col_open((char *)0);
X	line1 = str_format("Project \"%S\"", project_name);
X	col_title(line1->str_text, "List of Developers");
X	str_free(line1);
X
X	login_col = col_create(0, 15);
X	col_heading(login_col, "User\n------");
X	if (!option_terse_get())
X	{
X		name_col = col_create(16, 0);
X		col_heading(name_col, "Full Name\n-----------");
X	}
X
X	/*
X	 * list the project's developers
X	 */
X	for (j = 0; j < pstate_data->developer->length; ++j)
X	{
X		string_ty	*logname;
X
X		logname = pstate_data->developer->list[j];
X		col_puts(login_col, logname->str_text);
X		if (!option_terse_get())
X			col_puts(name_col, user_full_name(logname));
X		col_eoln();
X	}
X
X	/*
X	 * clean up and go home
X	 */
X	col_close();
X	if (!pstate_data->developer->length)
X		project_verbose(pp, "no developers");
X	project_free(pp);
X	trace((/*{*/"}\n"));
X}
X
X
Xvoid
Xlist_integrators(project_name, change_number)
X	string_ty	*project_name;
X	long		change_number;
X{
X	pstate		pstate_data;
X	project_ty	*pp;
X	int		login_col = 0;
X	int		name_col = 0;
X	int		j;
X	string_ty	*line1;
X
X	trace(("list_integrators()\n{\n"/*}*/));
X	if (change_number)
X		fatal("inappropriate -Change option");
X
X	/*
X	 * locate project data
X	 */
X	if (!project_name)
X		project_name = user_default_project();
X	else
X		project_name = str_copy(project_name);
X	pp = project_alloc(project_name);
X	str_free(project_name);
X	project_bind_existing(pp);
X
X	pstate_data = project_pstate_get(pp);
X	assert(pstate_data->integrator);
X
X	/*
X	 * create the columns
X	 */
X	col_open((char *)0);
X	line1 = str_format("Project \"%S\"", project_name);
X	col_title(line1->str_text, "List of Integrators");
X	str_free(line1);
X
X	login_col = col_create(0, 15);
X	col_heading(login_col, "User\n------");
X	if (!option_terse_get())
X	{
X		name_col = col_create(16, 0);
X		col_heading(name_col, "Full Name\n-----------");
X	}
X
X	/*
X	 * list the project's integrators
X	 */
X	for (j = 0; j < pstate_data->integrator->length; ++j)
X	{
X		string_ty	*logname;
X
X		logname = pstate_data->integrator->list[j];
X		col_puts(login_col, logname->str_text);
X		if (!option_terse_get())
X			col_puts(name_col, user_full_name(logname));
X		col_eoln();
X	}
X
X	/*
X	 * clean up and go home
X	 */
X	col_close();
X	if (!pstate_data->integrator->length)
X		project_verbose(pp, "no integrators");
X	project_free(pp);
X	trace((/*{*/"}\n"));
X}
X
X
Xvoid
Xlist_reviewers(project_name, change_number)
X	string_ty	*project_name;
X	long		change_number;
X{
X	pstate		pstate_data;
X	project_ty	*pp;
X	int		login_col = 0;
X	int		name_col = 0;
X	int		j;
X	string_ty	*line1;
X
X	trace(("list_reviewers()\n{\n"/*}*/));
X	if (change_number)
X		fatal("inappropriate -Change option");
X
X	/*
X	 * locate project data
X	 */
X	if (!project_name)
X		project_name = user_default_project();
X	else
X		project_name = str_copy(project_name);
X	pp = project_alloc(project_name);
X	str_free(project_name);
X	project_bind_existing(pp);
X
X	pstate_data = project_pstate_get(pp);
X	assert(pstate_data->reviewer);
X
X	/*
X	 * create the columns
X	 */
X	col_open((char *)0);
X	line1 = str_format("Project \"%S\"", project_name);
X	col_title(line1->str_text, "List of Reviewers");
X	str_free(line1);
X
X	login_col = col_create(0, 15);
X	col_heading(login_col, "User\n------");
X	if (!option_terse_get())
X	{
X		name_col = col_create(16, 0);
X		col_heading(name_col, "Full Name\n-----------");
X	}
X
X	/*
X	 * list the project's reviewers
X	 */
X	for (j = 0; j < pstate_data->reviewer->length; ++j)
X	{
X		string_ty	*logname;
X
X		logname = pstate_data->reviewer->list[j];
X		col_puts(login_col, logname->str_text);
X		if (!option_terse_get())
X			col_puts(name_col, user_full_name(logname));
X		col_eoln();
X	}
X
X	/*
X	 * clean up and go home
X	 */
X	col_close();
X	if (!pstate_data->reviewer->length)
X		project_verbose(pp, "no reviewers");
X	project_free(pp);
X	trace((/*{*/"}\n"));
X}
X
X
Xvoid
Xlist_project_history(project_name, change_number)
X	string_ty	*project_name;
X	long		change_number;
X{
X	pstate		pstate_data;
X	int		delta_col = 0;
X	int		date_col = 0;
X	int		change_col = 0;
X	int		description_col = 0;
X	int		j;
X	project_ty	*pp;
X	string_ty	*line1;
X
X	trace(("list_project_history()\n{\n"/*}*/));
X	if (change_number)
X		fatal("inappropriate -Change option");
X
X	/*
X	 * locate project data
X	 */
X	if (!project_name)
X		project_name = user_default_project();
X	else
X		project_name = str_copy(project_name);
X	pp = project_alloc(project_name);
X	str_free(project_name);
X	project_bind_existing(pp);
X
X	pstate_data = project_pstate_get(pp);
X
X	/*
X	 * create the columns
X	 */
X	col_open((char *)0);
X	line1 = str_format("Project \"%S\"", project_name);
X	col_title(line1->str_text, "History");
X	str_free(line1);
X
X	delta_col = col_create(0, 7);
X	col_heading(delta_col, "Delta\n-------");
X	if (!option_terse_get())
X	{
X		date_col = col_create(8, 23);
X		change_col = col_create(24, 31);
X		description_col = col_create(32, 0);
X		col_heading(date_col, "Date and Time\n---------------");
X		col_heading(change_col, "Change\n-------");
X		col_heading(description_col, "Description\n-------------");
X	}
X
X	/*
X	 * list the project's sucessful i9ntegrations
X	 */
X	for (j = 0; j < pstate_data->history->length; ++j)
X	{
X		pstate_history	history_data;
X
X		history_data = pstate_data->history->list[j];
X		col_printf(delta_col, "%4ld", history_data->delta_number);
X		if (!option_terse_get())
X		{
X			cstate		cstate_data;
X			time_t		t;
X			change_ty	*cp;
X
X			cp = change_alloc(pp, history_data->change_number);
X			change_bind_existing(cp);
X			cstate_data = change_cstate_get(cp);
X			t =
X				cstate_data->history->list
X				[
X					cstate_data->history->length - 1
X				]->when;
X			col_puts(date_col, ctime(&t));
X			col_printf
X			(
X				change_col,
X				"%4ld",
X				history_data->change_number
X			);
X			assert(cstate_data->brief_description);
X			col_puts
X			(
X				description_col,
X				cstate_data->brief_description->str_text
X			);
X			change_free(cp);
X		}
X		col_eoln();
X	}
X
X	/*
X	 * clean up and go home
X	 */
X	col_close();
X	if (!pstate_data->history->length)
X		project_verbose(pp, "no integrations");
X	project_free(pp);
X	trace((/*{*/"}\n"));
X}
X
X
Xvoid
Xlist_version(project_name, change_number)
X	string_ty	*project_name;
X	long		change_number;
X{
X	pstate		pstate_data;
X	project_ty	*pp;
X	cstate		cstate_data;
X	change_ty	*cp;
X	user_ty		*up;
X
X	/*
X	 * locate project data
X	 */
X	trace(("list_version()\n{\n"/*}*/));
X	if (!project_name)
X		project_name = user_default_project();
X	else
X		project_name = str_copy(project_name);
X	pp = project_alloc(project_name);
X	str_free(project_name);
X	project_bind_existing(pp);
X
X	/*
X	 * locate user data
X	 */
X	up = user_executing(pp);
X
X	/*
X	 * locate change data
X	 */
X	if (!change_number)
X		change_number = user_default_change(up);
X	cp = change_alloc(pp, change_number);
X	change_bind_existing(cp);
X
X	pstate_data = project_pstate_get(pp);
X	cstate_data = change_cstate_get(cp);
X	if (option_terse_get())
X	{
X		if (cstate_data->state == cstate_state_being_developed)
X		{
X			printf
X			(
X				"%ld.%ld.C%3.3ld\n",
X				pstate_data->version_major,
X				pstate_data->version_minor,
X				change_number
X			);
X		}
X		else
X		{
X			printf
X			(
X				"%ld.%ld.D%3.3ld\n",
X				pstate_data->version_major,
X				pstate_data->version_minor,
X				cstate_data->delta_number
X			);
X		}
X	}
X	else
X	{
X		printf("version_major = %ld;\n", pstate_data->version_major);
X		printf("version_minor = %ld;\n", pstate_data->version_minor);
X		if (cstate_data->state == cstate_state_being_developed)
X			printf("change_number = %ld;\n", change_number);
X		else
X		{
X			printf
X			(
X				"delta_number = %ld;\n",
X				cstate_data->delta_number
X			);
X		}
X		if (pstate_data->version_previous)
X		{
X			printf
X			(
X				"version_previous = \"%s\";\n",
X				pstate_data->version_previous->str_text
X			);
X		}
X	}
X	change_free(cp);
X	project_free(pp);
X	user_free(up);
X	trace((/*{*/"}\n"));
X}
X
X
Xvoid
Xlist_change_details(project_name, change_number)
X	string_ty	*project_name;
X	long		change_number;
X{
X	int		j;
X	int		head_col;
X	int		body_col;
X	project_ty	*pp;
X	change_ty	*cp;
X	cstate		cstate_data;
X	user_ty		*up;
X	string_ty	*line1;
X
X	/*
X	 * locate project data
X	 */
X	trace(("list_change_details()\n{\n"/*}*/));
X	if (!project_name)
X		project_name = user_default_project();
X	else
X		project_name = str_copy(project_name);
X	pp = project_alloc(project_name);
X	str_free(project_name);
X	project_bind_existing(pp);
X
X	/*
X	 * locate user data
X	 */
X	up = user_executing(pp);
X
X	/*
X	 * locate change data
X	 */
X	if (!change_number)
X		change_number = user_default_change(up);
X	cp = change_alloc(pp, change_number);
X	change_bind_existing(cp);
X	cstate_data = change_cstate_get(cp);
X
X	/*
X	 * identification
X	 */
X	col_open((char *)0);
X	line1 = str_format("Project \"%S\", Change %ld", project_name, change_number);
X	col_title(line1->str_text, "Change Details");
X	str_free(line1);
X
X	head_col = col_create(0, 0);
X	body_col = col_create(8, 0);
X	col_puts(head_col, "NAME");
X	col_eoln();
X	col_printf(body_col, "Project \"%s\"", project_name->str_text);
X	if (cstate_data->delta_number)
X		col_printf(body_col, ", Delta %ld", cstate_data->delta_number);
X	if (cstate_data->state < cstate_state_completed || option_verbose_get())
X		col_printf(body_col, ", Change %ld", change_number);
X	col_puts(body_col, ".");
X	col_eoln();
X
X	/*
X	 * synopsis
X	 */
X	col_need(5);
X	col_puts(head_col, "SUMMARY");
X	col_eoln();
X	col_puts(body_col, cstate_data->brief_description->str_text);
X	col_eoln();
X
X	/*
X	 * description
X	 */
X	col_need(5);
X	col_puts(head_col, "DESCRIPTION");
X	col_eoln();
X	col_puts(body_col, cstate_data->description->str_text);
X	if (cstate_data->test_exempt || cstate_data->test_baseline_exempt)
X	{
X		col_bol(body_col);
X		col_puts(body_col, "\n");
X		if (!cstate_data->regression_test_exempt)
X		{
X			col_puts
X			(
X				body_col,
X			       "This change must pass a full regression test.  "
X			);
X		}
X		if (cstate_data->test_exempt)
X		{
X			col_puts
X			(
X				body_col,
X       "This change is exempt from testing against the development directory.  "
X			);
X		}
X		if (cstate_data->test_baseline_exempt)
X		{
X			col_puts
X			(
X				body_col,
X		      "This change is exempt from testing against the baseline."
X			);
X		}
X	}
X	col_eoln();
X
X	/*
X	 * cause
X	 */
X	col_need(5);
X	col_puts(head_col, "CAUSE");
X	col_eoln();
X	col_printf
X	(
X		body_col,
X		"This change was caused by %s.",
X		change_cause_ename(cstate_data->cause)
X	);
X	col_eoln();
X
X	/*
X	 * state
X	 */
X	if
X	(
X		option_verbose_get()
X	&&
X		cstate_data->state != cstate_state_completed
X	)
X	{
X		col_need(5);
X		col_puts(head_col, "STATE");
X		col_eoln();
X		col_printf
X		(
X			body_col,
X			"This change is in '%s' state.",
X			cstate_state_ename(cstate_data->state)
X		);
X		col_eoln();
X	}
X
X	/*
X	 * files
X	 */
X	col_need(5);
X	col_puts(head_col, "FILES");
X	col_eoln();
X	if (cstate_data->src->length)
X	{
X		int	usage_col;
X		int	action_col;
X		int	edit_col;
X		int	file_name_col;
X
X		usage_col = col_create(8, 15);
X		action_col = col_create(16, 23);
X		edit_col = col_create(24, 31);
X		file_name_col = col_create(32, 0);
X		col_heading(usage_col, "Type\n-------");
X		col_heading(action_col, "Action\n-------");
X		col_heading(edit_col, "Edit\n-------");
X		col_heading(file_name_col, "File Name\n-----------");
X		for (j = 0; j < cstate_data->src->length; ++j)
X		{
X			cstate_src	src_data;
X	
X			src_data = cstate_data->src->list[j];
X			assert(src_data->file_name);
X			col_puts(usage_col, file_usage_ename(src_data->usage));
X			col_puts
X			(
X				action_col,
X				file_action_ename(src_data->action)
X			);
X			if (src_data->edit_number)
X			{
X				pstate_src	psrc_data;
X	
X				col_puts
X				(
X					edit_col,
X					src_data->edit_number->str_text
X				);
X				if (cstate_data->state == cstate_state_being_developed)
X					psrc_data =
X						project_src_find
X						(
X							pp,
X						     src_data->file_name
X						);
X				else
X					psrc_data = 0;
X				if
X				(
X					psrc_data
X				&&
X					psrc_data->edit_number
X				&&
X					!str_equal
X					(
X						src_data->edit_number,
X						psrc_data->edit_number
X					)
X				)
X				{
X					col_printf
X					(
X						edit_col,
X						" (%s)",
X						psrc_data->edit_number->str_text
X					);
X				}
X			}
X			col_puts(file_name_col, src_data->file_name->str_text);
X			if (src_data->move)
X			{
X				col_bol(file_name_col);
X				col_puts(file_name_col, "Moved ");
X				if (src_data->action == file_action_create)
X					col_puts(file_name_col, "from ");
X				else
X					col_puts(file_name_col, "to ");
X				col_puts(file_name_col, src_data->move->str_text);
X			}
X			col_eoln();
X		}
X		col_heading(usage_col, (char *)0);
X		col_heading(action_col, (char *)0);
X		col_heading(edit_col, (char *)0);
X		col_heading(file_name_col, (char *)0);
X	}
X	else
X	{
X		col_printf(body_col, "This change has no files.");
X		col_eoln();
X	}
X
X	/*
X	 * history
X	 */
X	col_need(5);
X	col_puts(head_col, "HISTORY");
X	col_eoln();
X	if (option_verbose_get())
X	{
X		int	what_col;
X		int	when_col;
X		int	who_col;
X		int	why_col;
X
X		what_col = col_create(8, 23);
X		when_col = col_create(24, 39);
X		who_col = col_create(40, 47);
X		why_col = col_create(48, 0);
X		col_heading(what_col, "What\n------");
X		col_heading(when_col, "When\n------");
X		col_heading(who_col, "Who\n-----");
X		col_heading(why_col, "Comment\n---------");
X		for (j = 0; j < cstate_data->history->length; ++j)
X		{
X			cstate_history	history_data;
X			time_t		t;
X
X			history_data = cstate_data->history->list[j];
X			col_puts
X			(
X				what_col,
X				cstate_history_what_ename(history_data->what)
X			);
X			t = history_data->when;
X			col_puts(when_col, ctime(&t));
X			col_puts(who_col, history_data->who->str_text);
X			if (history_data->why)
X				col_puts(why_col, history_data->why->str_text);
X			if (history_data->what != cstate_history_what_integrate_pass)
X			{
X				time_t	finish;
X
X				if (j + 1 < cstate_data->history->length)
X					finish = cstate_data->history->list[j + 1]->when;
X				else
X					time(&finish);
X				if (finish - t >= ELAPSED_TIME_THRESHOLD)
X				{
X					col_bol(why_col);
X					col_printf
X					(
X						why_col,
X						"Elapsed time: %5.3f days.\n",
X						working_days(t, finish)
X					);
X				}
X			}
X			col_eoln();
X		}
X		col_heading(what_col, (char *)0);
X		col_heading(when_col, (char *)0);
X		col_heading(who_col, (char *)0);
X		col_heading(why_col, (char *)0);
X	}
X	else
X	{
X		if (cstate_data->state >= cstate_state_being_developed)
X		{
X			col_printf
X			(
X				body_col,
X				"Developed by %s.",
X				change_developer_name(cp)->str_text
X			);
X		}
X		if (cstate_data->state >= cstate_state_awaiting_integration)
X		{
X			col_printf
X			(
X				body_col,
X				"  Reviewed by %s.",
X				change_reviewer_name(cp)->str_text
X			);
X		}
X		if (cstate_data->state >= cstate_state_being_integrated)
X		{
X			col_printf
X			(
X				body_col,
X				"  Integrated by %s.",
X				change_integrator_name(cp)->str_text
X			);
X		}
X		col_eoln();
X	}
X
X	/*
X	 * clean up and go home
X	 */
X	col_close();
X	change_free(cp);
X	project_free(pp);
X	user_free(up);
X	trace((/*{*/"}\n"));
X}
X
X
Xvoid
Xlist_user_changes(project_name, change_number)
X	string_ty	*project_name;
X	long		change_number;
X{
X	user_ty		*up;
X	int		project_col;
X	int		change_col;
X	int		state_col;
X	int		description_col;
X	string_ty	*s;
X	wlist		name;
X	long		j;
X
X	trace(("list_user_changes()\n{\n"/*}*/));
X	if (project_name)
X		fatal("inappropriate -Project option");
X	if (change_number)
X		fatal("inappropriate -Change option");
X
X	/*
X	 * get the list of projects
X	 */
X	gonzo_project_list(&name);
X	if (!name.wl_nwords)
X	{
X		verbose("there are no projects");
X		goto done;
X	}
X
X	/*
X	 * sort the list so the listing is pretty
X	 */
X	qsort
X	(
X		name.wl_word,
X		name.wl_nwords,
X		sizeof(name.wl_word[0]),
X		name_cmp
X	);
X
X	/*
X	 * open listing
X	 */
X	col_open((char *)0);
X	up = user_executing((project_ty *)0);
X	s = str_format("Owned by %S <%S>", up->full_name, user_name(up));
X	user_free(up);
X	col_title("List of Changes", s->str_text);
X	str_free(s);
X
X	/*
X	 * create the columns
X	 */
X	project_col = col_create(0, 10);
X	change_col = col_create(11, 17);
X	state_col = col_create(18, 28);
X	description_col = col_create(29, 0);
X	col_heading(project_col, "Project\n----------");
X	col_heading(change_col, "Change\n------");
X	col_heading(state_col, "State\n----------");
X	col_heading(description_col, "Description\n-------------");
X
X	/*
X	 * for each project, see if the current user
X	 * is working on any of them.
X	 */
X	for (j = 0; j < name.wl_nwords; ++j)
X	{
X		project_ty	*pp;
X		int		err;
X		long		n;
X
X		/*
X		 * locate the project,
X		 * and make sure we are allowed to look at it
X		 */
X		pp = project_alloc(name.wl_word[j]);
X		project_bind_existing(pp);
X		os_become_orig();
X		err = os_readable(project_pstate_path_get(pp));
X		os_become_undo();
X		if (err)
X		{
X			project_free(pp);
X			continue;
X		}
X
X		/*
X		 * bind a user to that project
X		 */
X		up = user_executing(pp);
X
X		/*
X		 * for each change within this project the user
X		 * is working on emit a line of information
X		 */
X		for (n = 0; ; ++n)
X		{
X			change_ty	*cp;
X			cstate		cstate_data;
X
X			if (!user_own_nth(up, n, &change_number))
X				break;
X			
X			/*
X			 * locate change data
X			 */
X			cp = change_alloc(pp, change_number);
X			change_bind_existing(cp);
X	
X			/*
X			 * emit the info
X			 */
X			col_puts(project_col, project_name_get(pp)->str_text);
X			col_printf(change_col, "%4ld", change_number);
X			cstate_data = change_cstate_get(cp);
X			col_puts
X			(
X				state_col,
X				cstate_state_ename(cstate_data->state)
X			);
X			if (cstate_data->brief_description)
X			{
X				col_puts
X				(
X					description_col,
X					cstate_data->brief_description->str_text
X				);
X			}
X			col_eoln();
X	
X			/*
X			 * release change and project
X			 */
X			change_free(cp);
X		}
X
X		/*
X		 * free user and project
X		 */
X		user_free(up);
X		project_free(pp);
X	}
X
X	/*
X	 * clean up and go home
X	 */
X	col_close();
X	done:
X	trace((/*{*/"}\n"));
X}
X
X
Xstatic int list_locks_name_col;
Xstatic int list_locks_type_col;
Xstatic int list_locks_project_col;
Xstatic int list_locks_change_col;
Xstatic int list_locks_address_col;
Xstatic int list_locks_process_col;
Xstatic wlist list_locks_pnames;
Xstatic long list_locks_count;
X
X
Xstatic void list_locks_callback _((lock_walk_found *));
X
Xstatic void
Xlist_locks_callback(found)
X	lock_walk_found *found;
X{
X	char		*name_str;
X	char		*type_str;
X	char		*project_str;
X	long		change_number;
X	long		j;
X
X	list_locks_count++;
X	switch (found->name)
X	{
X	case lock_walk_name_master:
X		name_str = "master";
X		break;
X
X	case lock_walk_name_gstate:
X		name_str = "gonzo";
X		break;
X
X	case lock_walk_name_pstate:
X		name_str = "project";
X		break;
X
X	case lock_walk_name_cstate:
X		name_str = "change";
X		break;
X
X	case lock_walk_name_ustate:
X		name_str = "user";
X		break;
X
X	case lock_walk_name_build:
X		name_str = "build";
X		break;
X
X	default:
X		name_str = "unknown";
X		break;
X	}
X
X	switch (found->type)
X	{
X	case lock_walk_type_shared:
X		type_str = "shared";
X		break;
X
X	case lock_walk_type_exclusive:
X		type_str = "exclusive";
X		break;
X
X	default:
X		type_str = "unknown";
X		break;
X	}
X
X	project_str = 0;
X	change_number = 0;
X	switch (found->name)
X	{
X	case lock_walk_name_pstate:
X	case lock_walk_name_build:
X		for (j = 0; j < list_locks_pnames.wl_nwords; ++j)
X		{
X			string_ty *s;
X
X			s = list_locks_pnames.wl_word[j];
X			if ((s->str_hash & 0xFFFF) == found->subset)
X			{
X				project_str = s->str_text;
X				break;
X			}
X		}
X		if (!project_str)
X			project_str = "unknown";
X		break;
X
X	case lock_walk_name_cstate:
X		for (j = 0; j < list_locks_pnames.wl_nwords; ++j)
X		{
X			string_ty *s;
X			long	cn;
X
X			/*
X			 * This is very messy, because the change
X			 * number is added to the project name hash.
X			 *
X			 * Work out the change number,
X			 * and the assume it can be more than,
X			 * say, 5000.  We could do better by looking
X			 * in each project, but what the hell.
X			 *
X			 * Use (mod 2**16) arithmetic, that's how its done.
X			 * Should bring this out in lock.h if ever change.
X			 *
X			 * Loop and find the smallest change number.
X			 * Use that as a probable "best" fit.
X			 */
X			s = list_locks_pnames.wl_word[j];
X			cn = (found->subset - s->str_hash) & 0xFFFF;
X			if
X			(
X				cn >= 1
X			&&
X				cn <= 5000
X			&&
X				(!change_number || cn < change_number)
X			)
X			{
X				project_str = s->str_text;
X				change_number = cn;
X			}
X		}
X		if (!project_str)
X			project_str = "unknown";
X		break;
X
X	default:
X		break;
X	}
X
X	/*
X	 * print it all out
X	 */
X	col_printf(list_locks_name_col, "%s", name_str);
X	col_printf(list_locks_type_col, "%s", type_str);
X	if (project_str)
X		col_printf(list_locks_project_col, "%s", project_str);
X	if (change_number)
X		col_printf(list_locks_change_col, "%4ld", change_number);
X	col_printf(list_locks_address_col, "%8.8lX", found->address);
X	col_printf(list_locks_process_col, "%5d", found->pid);
X	if (!found->pid_is_local)
X		col_printf(list_locks_process_col, " remote");
X	col_eoln();
X}
X
X
Xvoid
Xlist_locks(project_name, change_number)
X	string_ty	*project_name;
X	long		change_number;
X{
X	/*
X	 * check for silly arguments
X	 */
X	trace(("list_locks()\n{\n"/*}*/));
X	if (project_name)
X		fatal("inappropriate -Project option");
X	if (change_number)
X		fatal("inappropriate -Change option");
X
X	/*
X	 * get the list of projects
X	 */
X	gonzo_project_list(&list_locks_pnames);
X
X	/*
X	 * open the columns
X	 */
X	col_open((char *)0);
X	list_locks_name_col = col_create(0, 8);
X	list_locks_type_col = col_create(9, 19);
X	list_locks_project_col = col_create(20, 32);
X	list_locks_change_col = col_create(33, 40);
X	list_locks_address_col = col_create(41, 50);
X	list_locks_process_col = col_create(51, 0);
X	list_locks_count = 0;
X
X	/*
X	 * set the column headings
X	 */
X	col_title("List of Locks", gonzo_lockpath_get()->str_text);
X	col_heading(list_locks_name_col, "Type\n------");
X	col_heading(list_locks_type_col, "Mode\n------");
X	col_heading(list_locks_project_col, "Project\n---------");
X	col_heading(list_locks_change_col, "Change\n------");
X	col_heading(list_locks_address_col, "Address\n--------");
X	col_heading(list_locks_process_col, "Process\n--------");
X
X	/*
X	 * list the locks found
X	 */
X	lock_walk(list_locks_callback);
X	wl_free(&list_locks_pnames);
X	if (list_locks_count == 0)
X	{
X		int info = col_create(4, 0);
X		col_puts(info, "No locks found.");
X		col_eoln();
X	}
X	col_close();
X	trace((/*{*/"}\n"));
X}
X
X
Xvoid
Xlist_default_project(project_name, change_number)
X	string_ty	*project_name;
X	long		change_number;
X{
X	/*
X	 * check for silly arguments
X	 */
X	trace(("list_default_project()\n{\n"/*}*/));
X	if (project_name)
X		fatal("inappropriate -Project option");
X	if (change_number)
X		fatal("inappropriate -Change option");
X
X	/*
X	 * Find default project name;
X	 * will generate fatal error if no default.
X	 */
X	project_name = user_default_project();
X
X	/*
X	 * print it out
X	 */
X	printf("%s\n", project_name->str_text);
X	trace((/*{*/"}\n"));
X}
X
X
Xvoid
Xlist_default_change(project_name, change_number)
X	string_ty	*project_name;
X	long		change_number;
X{
X	project_ty	*pp;
X	user_ty		*up;
X
X	/*
X	 * check for silly arguments
X	 */
X	trace(("list_default_change()\n{\n"/*}*/));
X	if (change_number)
X		fatal("inappropriate -Change option");
X
X	/*
X	 * resolve the project name
X	 */
X	if (!project_name)
X		project_name = user_default_project();
X	else
X		project_name = str_copy(project_name);
X	pp = project_alloc(project_name);
X	str_free(project_name);
X	project_bind_existing(pp);
X
X	/*
X	 * locate user data
X	 */
X	up = user_executing(pp);
X
X	/*
X	 * Find default change number;
X	 * will generate fatal error if no default.
X	 */
X	change_number = user_default_change(up);
X
X	/*
X	 * print it out
X	 */
X	printf("%ld\n", change_number);
X
X	/*
X	 * clean up and go home
X	 */
X	project_free(pp);
X	user_free(up);
X	trace((/*{*/"}\n"));
X}
X
X
Xvoid
Xlist_outstanding_changes(project_name, change_number)
X	string_ty	*project_name;
X	long		change_number;
X{
X	trace(("list_outstanding_changes()\n{\n"/*}*/));
X	if (change_number)
X		fatal("inappropriate -Change option");
X	list_changes_in_state_mask
X	(
X		project_name,
X		~(1 << cstate_state_completed)
X	);
X	trace((/*{*/"}\n"));
X}
X
X
Xvoid
Xlist_outstanding_changes_all(project_name, change_number)
X	string_ty	*project_name;
X	long		change_number;
X{
X	pstate		pstate_data;
X	int		project_col = 0;
X	int		number_col = 0;
X	int		state_col = 0;
X	int		description_col = 0;
X	int		j, k;
X	wlist		name;
X
X	trace(("list_outstanding_changes_all()\n{\n"/*}*/));
X	if (project_name)
X		fatal("inappropriate -Project option");
X	if (change_number)
X		fatal("inappropriate -Change option");
X
X	/*
X	 * list the projects
X	 */
X	gonzo_project_list(&name);
X	qsort
X	(
X		name.wl_word,
X		name.wl_nwords,
X		sizeof(name.wl_word[0]),
X		name_cmp
X	);
X
X	/*
X	 * create the columns
X	 */
X	col_open((char *)0);
X	col_title("List of Outstanding Changes", "for all projects");
X	project_col = col_create(0, 15);
X	col_heading(project_col, "Project\n---------");
X	number_col = col_create(16, 23);
X	col_heading(number_col, "Change\n------");
X	if (!option_terse_get())
X	{
X		state_col = col_create(24, 35);
X		col_heading(state_col, "State\n-------");
X		description_col = col_create(36, 0);
X		col_heading(description_col, "Description\n-------------");
X	}
X
X	/*
X	 * scan each project
X	 */
X	for (j = 0; j < name.wl_nwords; ++j)
X	{
X		project_ty	*pp;
X		int		err;
X
X		pp = project_alloc(name.wl_word[j]);
X		project_bind_existing(pp);
X
X		/*
X		 * make sure we have permission
X		 */
X		os_become_orig();
X		err = os_readable(project_pstate_path_get(pp));
X		os_become_undo();
X		if (err)
X		{
X			project_free(pp);
X			continue;
X		}
X
X		/*
X		 * list the project's changes
X		 */
X		pstate_data = project_pstate_get(pp);
X		for (k = 0; k < pstate_data->change->length; ++k)
X		{
X			cstate		cstate_data;
X			long		change_number;
X			change_ty	*cp;
X
X			/*
X			 * make sure the change is not completed
X			 */
X			change_number = pstate_data->change->list[k];
X			cp = change_alloc(pp, change_number);
X			change_bind_existing(cp);
X			cstate_data = change_cstate_get(cp);
X			if (cstate_data->state == cstate_state_completed)
X			{
X				change_free(cp);
X				continue;
X			}
X
X			/*
X			 * print the details
X			 */
X			col_puts(project_col, project_name_get(pp)->str_text);
X			col_printf(number_col, "%4ld", change_number);
X			if (!option_terse_get())
X			{
X				col_puts
X				(
X					state_col,
X					cstate_state_ename(cstate_data->state)
X				);
X				if (cstate_data->brief_description)
X				{
X					col_puts
X					(
X						description_col,
X					cstate_data->brief_description->str_text
X					);
X				}
X			}
X			col_eoln();
X			change_free(cp);
X		}
X		project_free(pp);
X	}
X
X	/*
X	 * clean up and go home
X	 */
X	col_close();
X	trace((/*{*/"}\n"));
X}
END_OF_FILE
if test 55482 -ne `wc -c <'aegis/ael.c'`; then
    echo shar: \"'aegis/ael.c'\" unpacked with wrong size!
fi
# end of 'aegis/ael.c'
fi
if test -f 'aux/CHANGES.1.3' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'aux/CHANGES.1.3'\"
else
echo shar: Extracting \"'aux/CHANGES.1.3'\" \(66004 characters\)
sed "s/^X//" >'aux/CHANGES.1.3' <<'END_OF_FILE'
X
X
X
XProject "aegis.1.3"						  Page 1
XList of Changes					Thu Jan	 7 14:31:46 1993
X
XChange	State		Description
X------- -------		-------------
X   1	completed	New release derived from aegis.1.2.
X   2	completed	make more robust for NFS mounted partitions
X   3	completed	orthoganalize the notification execution
X			functions
X   4	completed	change the tests to use RCS
X   5	completed	improve generated Makefile
X   6	completed	make aegis work on dgux
X   7	completed	enhance columns output
X   8	completed	do not automagically append the program name to
X			the library path
X   9	completed	change the build_number field to a delta_number
X			field
X  10	completed	fix niggling bugs
X  11	completed	add default_test_exempt attribute to projects
X  12	completed	change the way use yacc
X  13	completed	remove ,D file when remove a file from a change
X  14	completed	cope with /tmp_mnt/... in the current directory
X  15	completed	fix bug in -new_project
X  16	completed	log_open needs to know which user
X  17	completed	Add the -Delta and -Output options to the -CoPy_
X			file
X  18	completed	add more to the documentation
X  19	completed	more documentation
X  20	completed	fix problems with distribution
X  21	completed	more documentation
X  22	completed	make sure each file as a MANIFEST line
X  23	completed	make the patch file work
X  24	completed	fix year in copyright notices issued
X  25	completed	fix year in more copyright notices
X  26	completed	fix the generated patch file
X  27	completed	user cook search list to simplify the cookbook
X  28	completed	patch file not generated correctly for new files
X  29	being_		document cook usage
X	integrated
X
X
X
XProject "aegis.1.3", Change 1					  Page 1
XChange Details					Thu Jan	 7 14:31:51 1993
X
XNAME
X	Project "aegis.1.3", Delta 1, Change 1.
X
XSUMMARY
X	New release derived from aegis.1.2.
X
XDESCRIPTION
X	New release derived from aegis.1.2.
X
X	This change is exempt from testing.  This change is exempt from
X	testing against the baseline.
X
XCAUSE
X	This change was caused by internal_enhancement.
X
XFILES
X	Type	Action	Edit	File Name
X	------- ------- ------- -----------
X	source	create	1	CHANGES.sh
X	source	create	1	COPYING
X	source	create	1	Howto.cook
X	source	create	1	Makefile.awk
X	source	create	1	Makefile.sh
X	source	create	1	aegis/administ.c
X	source	create	1	aegis/administ.h
X	source	create	1	aegis/archaeol.c
X	source	create	1	aegis/archaeol.h
X	source	create	1	aegis/arglex2.h
X	source	create	1	aegis/build.c
X	source	create	1	aegis/build.h
X	source	create	1	aegis/cattr.def
X	source	create	1	aegis/cattr_ed.c
X	source	create	1	aegis/cattr_ed.h
X	source	create	1	aegis/change.c
X	source	create	1	aegis/change.h
X	source	create	1	aegis/chdir.c
X	source	create	1	aegis/chdir.h
X	source	create	1	aegis/col.c
X	source	create	1	aegis/col.h
X	source	create	1	aegis/commit.c
X	source	create	1	aegis/commit.h
X	source	create	1	aegis/common.def
X	source	create	1	aegis/copyfile.c
X	source	create	1	aegis/copyfile.h
X	source	create	1	aegis/cstate.def
X	source	create	1	aegis/develop1.c
X	source	create	1	aegis/develop1.h
X	source	create	1	aegis/develop2.c
X	source	create	1	aegis/develop2.h
X	source	create	1	aegis/diff.c
X	source	create	1	aegis/diff.h
X	source	create	1	aegis/dir.c
X	source	create	1	aegis/dir.h
X	source	create	1	aegis/file.c
X	source	create	1	aegis/file.h
X	source	create	1	aegis/gate.h
X	source	create	1	aegis/gonzo.c
X
X
X
XProject "aegis.1.3", Change 1					  Page 2
XChange Details					Thu Jan	 7 14:31:51 1993
X
X	Type	Action	Edit	File Name
X	------- ------- ------- -----------
X	source	create	1	aegis/gonzo.h
X	source	create	1	aegis/gram.y
X	source	create	1	aegis/gstate.def
X	source	create	1	aegis/help.c
X	source	create	1	aegis/help.h
X	source	create	1	aegis/integra1.c
X	source	create	1	aegis/integra1.h
X	source	create	1	aegis/integra2.c
X	source	create	1	aegis/integra2.h
X	source	create	1	aegis/io.c
X	source	create	1	aegis/io.h
X	source	create	1	aegis/lex.c
X	source	create	1	aegis/lex.h
X	source	create	1	aegis/list.c
X	source	create	1	aegis/list.h
X	source	create	1	aegis/lock.c
X	source	create	1	aegis/lock.h
X	source	create	1	aegis/log.c
X	source	create	1	aegis/log.h
X	source	create	1	aegis/main.c
X	source	create	1	aegis/new_chan.c
X	source	create	1	aegis/new_chan.h
X	source	create	1	aegis/new_file.c
X	source	create	1	aegis/new_file.h
X	source	create	1	aegis/new_proj.c
X	source	create	1	aegis/new_proj.h
X	source	create	1	aegis/new_rele.c
X	source	create	1	aegis/new_rele.h
X	source	create	1	aegis/new_test.c
X	source	create	1	aegis/new_test.h
X	source	create	1	aegis/os.c
X	source	create	1	aegis/os.h
X	source	create	1	aegis/parse.c
X	source	create	1	aegis/parse.h
X	source	create	1	aegis/pattr.def
X	source	create	1	aegis/pattr_ed.c
X	source	create	1	aegis/pattr_ed.h
X	source	create	1	aegis/pconf.def
X	source	create	1	aegis/project.c
X	source	create	1	aegis/project.h
X	source	create	1	aegis/pstate.def
X	source	create	1	aegis/rem_file.c
X	source	create	1	aegis/rem_file.h
X	source	create	1	aegis/review.c
X	source	create	1	aegis/review.h
X	source	create	1	aegis/reviewer.c
X	source	create	1	aegis/reviewer.h
X	source	create	1	aegis/sub.c
X	source	create	1	aegis/sub.h
X	source	create	1	aegis/test.c
X	source	create	1	aegis/test.h
X	source	create	1	aegis/tree.c
X	source	create	1	aegis/tree.h
X	source	create	1	aegis/type.c
X	source	create	1	aegis/type.h
X
X
X
XProject "aegis.1.3", Change 1					  Page 3
XChange Details					Thu Jan	 7 14:31:51 1993
X
X	Type	Action	Edit	File Name
X	------- ------- ------- -----------
X	source	create	1	aegis/uconf.def
X	source	create	1	aegis/undo.c
X	source	create	1	aegis/undo.h
X	source	create	1	aegis/user.c
X	source	create	1	aegis/user.h
X	source	create	1	aegis/ustate.def
X	source	create	1	aegis/version.c
X	source	create	1	aegis/version.h
X	source	create	1	common/ansi.c
X	source	create	1	common/arglex.c
X	source	create	1	common/arglex.h
X	source	create	1	common/error.c
X	source	create	1	common/error.h
X	source	create	1	common/indent.c
X	source	create	1	common/indent.h
X	source	create	1	common/main.h
X	source	create	1	common/mem.c
X	source	create	1	common/mem.h
X	source	create	1	common/option.c
X	source	create	1	common/option.h
X	source	create	1	common/str.c
X	source	create	1	common/str.h
X	source	create	1	common/trace.c
X	source	create	1	common/trace.h
X	source	create	1	common/word.c
X	source	create	1	common/word.h
X	source	create	1	conf/ConvexOS-10
X	source	create	1	conf/SunOS-4.1.2
X	source	create	1	conf/SysV-4.0
X	source	create	1	config
X	source	create	1	doc/ALPHA.man
X	source	create	1	doc/BUILDING.man
X	source	create	1	doc/README.man
X	source	create	1	doc/aegis.ms
X	source	create	1	doc/c1.0.so
X	source	create	1	doc/c1.1.so
X	source	create	1	doc/c1.2.so
X	source	create	1	doc/c1.3.so
X	source	create	1	doc/c1.4.so
X	source	create	1	doc/c2.0.so
X	source	create	1	doc/c2.1.so
X	source	create	1	doc/c2.2.so
X	source	create	1	doc/c2.3.so
X	source	create	1	doc/c2.4.so
X	source	create	1	doc/c3.0.so
X	source	create	1	doc/c3.1.so
X	source	create	1	doc/c3.2.so
X	source	create	1	doc/c3.3.so
X	source	create	1	doc/c4.0.so
X	source	create	1	doc/c5.0.so
X	source	create	1	doc/c6.0.so
X	source	create	1	doc/c7.0.so
X	source	create	1	doc/c7.1.so
X	source	create	1	doc/c7.2.so
X	source	create	1	doc/cA.0.so
X
X
X
XProject "aegis.1.3", Change 1					  Page 4
XChange Details					Thu Jan	 7 14:31:51 1993
X
X	Type	Action	Edit	File Name
X	------- ------- ------- -----------
X	source	create	1	dot.cshrc
X	source	create	1	dot.profile
X	source	create	1	fmtgen/id.c
X	source	create	1	fmtgen/id.h
X	source	create	1	fmtgen/lex.c
X	source	create	1	fmtgen/lex.h
X	source	create	1	fmtgen/main.c
X	source	create	1	fmtgen/parse.y
X	source	create	1	fmtgen/type.c
X	source	create	1	fmtgen/type.h
X	source	create	1	fmtgen/type_enum.c
X	source	create	1	fmtgen/type_integ.c
X	source	create	1	fmtgen/type_list.c
X	source	create	1	fmtgen/type_ref.c
X	source	create	1	fmtgen/type_strin.c
X	source	create	1	fmtgen/type_struc.c
X	source	create	1	h/stdarg.h-min
X	source	create	1	h/stddef.h
X	source	create	1	h/stdlib.h
X	source	create	1	man1/aea.1
X	source	create	1	man1/aeb.1
X	source	create	1	man1/aeca.1
X	source	create	1	man1/aecd.1
X	source	create	1	man1/aecp.1
X	source	create	1	man1/aecpu.1
X	source	create	1	man1/aed.1
X	source	create	1	man1/aedb.1
X	source	create	1	man1/aedbu.1
X	source	create	1	man1/aede.1
X	source	create	1	man1/aedeu.1
X	source	create	1	man1/aegis.1
X	source	create	1	man1/aeib.1
X	source	create	1	man1/aeibu.1
X	source	create	1	man1/aeif.1
X	source	create	1	man1/aeip.1
X	source	create	1	man1/ael.1
X	source	create	1	man1/aena.1
X	source	create	1	man1/aenc.1
X	source	create	1	man1/aencu.1
X	source	create	1	man1/aend.1
X	source	create	1	man1/aenf.1
X	source	create	1	man1/aenfu.1
X	source	create	1	man1/aeni.1
X	source	create	1	man1/aenpr.1
X	source	create	1	man1/aenrls.1
X	source	create	1	man1/aenrv.1
X	source	create	1	man1/aent.1
X	source	create	1	man1/aentu.1
X	source	create	1	man1/aepa.1
X	source	create	1	man1/aera.1
X	source	create	1	man1/aerd.1
X	source	create	1	man1/aerf.1
X	source	create	1	man1/aeri.1
X	source	create	1	man1/aerm.1
X	source	create	1	man1/aermu.1
X
X
X
XProject "aegis.1.3", Change 1					  Page 5
XChange Details					Thu Jan	 7 14:31:51 1993
X
X	Type	Action	Edit	File Name
X	------- ------- ------- -----------
X	source	create	1	man1/aerp.1
X	source	create	1	man1/aerpr.1
X	source	create	1	man1/aerpu.1
X	source	create	1	man1/aerrv.1
X	source	create	1	man1/aet.1
X	source	create	1	man1/aev.1
X	source	create	1	man1/install.sh
X	source	create	1	man1/o__rules.so
X	source	create	1	man1/o_anticip.so
X	source	create	1	man1/o_auto.so
X	source	create	1	man1/o_baselin.so
X	source	create	1	man1/o_change.so
X	source	create	1	man1/o_devdir.so
X	source	create	1	man1/o_dir.so
X	source	create	1	man1/o_help.so
X	source	create	1	man1/o_indep.so
X	source	create	1	man1/o_keep.so
X	source	create	1	man1/o_lib.so
X	source	create	1	man1/o_list.so
X	source	create	1	man1/o_major.so
X	source	create	1	man1/o_manual.so
X	source	create	1	man1/o_min.so
X	source	create	1	man1/o_minor.so
X	source	create	1	man1/o_nolog.so
X	source	create	1	man1/o_overw.so
X	source	create	1	man1/o_page.so
X	source	create	1	man1/o_project.so
X	source	create	1	man1/o_terse.so
X	source	create	1	man1/o_verbose.so
X	source	create	1	man1/z_cr.so
X	source	create	1	man1/z_exit.so
X	source	create	1	man1/z_intuit.so
X	source	create	1	man1/z_name.so
X	source	create	1	man5/aecattr.5
X	source	create	1	man5/aecstate.5
X	source	create	1	man5/aedir.5
X	source	create	1	man5/aegis.5
X	source	create	1	man5/aegstate.5
X	source	create	1	man5/aepattr.5
X	source	create	1	man5/aepconf.5
X	source	create	1	man5/aepstate.5
X	source	create	1	man5/aeuconf.5
X	source	create	1	man5/aeustate.5
X	source	create	1	man5/install.sh
X	source	create	1	man5/z_cr.so
X	source	create	1	man5/z_name.so
X	source	create	1	notify/de.sh
X	source	create	1	notify/deu.sh
X	source	create	1	notify/if.sh
X	source	create	1	notify/ip.sh
X	source	create	1	notify/rf.sh
X	source	create	1	notify/rp.sh
X	source	create	1	notify/rpu.sh
X	test	create	1	test/00/t0001a.sh
X	test	create	1	test/00/t0002a.sh
X
X
X
XProject "aegis.1.3", Change 1					  Page 6
XChange Details					Thu Jan	 7 14:31:51 1993
X
X	Type	Action	Edit	File Name
X	------- ------- ------- -----------
X	test	create	1	test/00/t0003a.sh
X	test	create	1	test/00/t0004a.sh
X	test	create	1	test/00/t0005a.sh
X	test	create	1	test/00/t0006a.sh
X	test	create	1	test/00/t0007a.sh
X	test	create	1	test/00/t0008a.sh
X	test	create	1	test/00/t0009a.sh
X	test	create	1	test/00/t0010a.sh
X	test	create	1	test/00/t0011a.sh
X
XHISTORY
X	What		When		Who	Comment
X	------		------		-----	---------
X	new_change	Mon Jul 20	pmiller
X			12:51:15 1992
X	develop_begin	Mon Jul 20	pmiller
X			12:51:15 1992
X	develop_end	Mon Jul 20	pmiller
X			12:51:15 1992
X	review_pass	Mon Jul 20	pmiller
X			12:51:15 1992
X	integrate_begin Mon Jul 20	pmiller
X			12:51:15 1992
X	integrate_pass	Mon Jul 20	pmiller
X			13:01:05 1992
X
X
X
XProject "aegis.1.3", Change 2					  Page 1
XChange Details					Thu Jan	 7 14:31:52 1993
X
XNAME
X	Project "aegis.1.3", Delta 2, Change 2.
X
XSUMMARY
X	make more robust for NFS mounted partitions
X
XDESCRIPTION
X	Most sites do not mount NFS partitions with root permissions,
X	and thus aegis does not work at all.
X	My thanks to Esa K Viitala <esa@tollpost-globe.no>, and Andy
X	Whitcroft <andy@cs.city.ac.uk> for raising this problem.
X
X	Locking sometimes does not work correctly.
X	My thanks to Jesse Perry <jesse@franklin.com> for raising this
X	problem.
X
X	1. store aegis' global files as user 'sys' (configurable)
X	2. bracket most open and creat and mkdir and unlink calls with
X	suitable seteuid calls.
X	3. this means aegis will no longer link on systems without
X	seteuid (e.g. SCO 3.2, but SYSV and BSD are still capable).
X	4. Made the locking code diagnostics more complete, and made
X	the locking itself more paranoid.  Avoided inconsistent fcntl-
X	isms which happen on some systems.
X	5. made aeca more secure.
X	6. database files now contain human-readable time equivalents
X	as comments
X
X	This change is exempt from testing against the baseline.
X
XCAUSE
X	This change was caused by external_bug.
X
XFILES
X	Type	Action	Edit	File Name
X	------- ------- ------- -----------
X	source	modify	2	Howto.cook
X	source	modify	2	aegis/build.c
X	source	modify	2	aegis/cattr_ed.c
X	source	modify	2	aegis/change.c
X	source	modify	2	aegis/change.h
X	source	modify	2	aegis/chdir.c
X	source	modify	2	aegis/col.c
X	source	modify	2	aegis/commit.c
X	source	modify	2	aegis/commit.h
X	source	modify	2	aegis/copyfile.c
X	source	modify	2	aegis/cstate.def
X	source	modify	2	aegis/develop2.c
X	source	modify	2	aegis/diff.c
X	source	modify	2	aegis/file.c
X	source	modify	2	aegis/file.h
X	source	modify	2	aegis/gate.h
X	source	modify	2	aegis/gonzo.c
X	source	modify	2	aegis/gonzo.h
X	source	modify	2	aegis/gram.y
X	source	modify	2	aegis/help.c
X	source	modify	2	aegis/integra2.c
X
X
X
XProject "aegis.1.3", Change 2					  Page 2
XChange Details					Thu Jan	 7 14:31:52 1993
X
X	Type	Action	Edit	File Name
X	------- ------- ------- -----------
X	source	modify	2	aegis/io.c
X	source	modify	2	aegis/lex.c
X	source	modify	2	aegis/list.c
X	source	modify	2	aegis/lock.c
X	source	modify	2	aegis/log.c
X	source	modify	2	aegis/main.c
X	source	modify	2	aegis/new_chan.c
X	source	modify	2	aegis/new_file.c
X	source	modify	2	aegis/new_proj.c
X	source	modify	2	aegis/new_rele.c
X	source	modify	2	aegis/new_test.c
X	source	modify	2	aegis/os.c
X	source	modify	2	aegis/os.h
X	source	modify	2	aegis/pattr.def
X	source	modify	2	aegis/pattr_ed.c
X	source	modify	2	aegis/project.c
X	source	modify	2	aegis/project.h
X	source	modify	2	aegis/rem_file.c
X	source	modify	2	aegis/review.c
X	source	modify	2	aegis/sub.c
X	source	modify	2	aegis/test.c
X	source	remove	1	aegis/tree.c
X	source	remove	1	aegis/tree.h
X	source	modify	2	aegis/type.c
X	source	modify	2	aegis/type.h
X	source	modify	2	aegis/undo.c
X	source	modify	2	aegis/undo.h
X	source	modify	2	aegis/user.c
X	source	modify	2	aegis/user.h
X	source	modify	2	common/error.c
X	source	modify	2	common/main.h
X	source	modify	2	conf/ConvexOS-10
X	source	modify	2	conf/SunOS-4.1.2
X	source	modify	2	conf/SysV-4.0
X	source	modify	2	doc/BUILDING.man
X	source	modify	2	doc/README.man
X	source	modify	2	fmtgen/parse.y
X	source	modify	2	man5/aecstate.5
X	test	modify	2	test/00/t0002a.sh
X	test	modify	2	test/00/t0004a.sh
X	test	modify	2	test/00/t0005a.sh
X	test	modify	2	test/00/t0006a.sh
X	test	modify	2	test/00/t0007a.sh
X	test	modify	2	test/00/t0008a.sh
X	test	modify	2	test/00/t0009a.sh
X	test	modify	2	test/00/t0010a.sh
X	test	modify	2	test/00/t0011a.sh
X
XHISTORY
X	What		When		Who	Comment
X	------		------		-----	---------
X	new_change	Sun Aug	 2	pmiller
X			21:55:14 1992
X	develop_begin	Sun Aug	 2	pmiller Elapsed time: 52.937
X			21:55:42 1992		days.
X
X
X
XProject "aegis.1.3", Change 2					  Page 3
XChange Details					Thu Jan	 7 14:31:52 1993
X
X	What		When		Who	Comment
X	------		------		-----	---------
X	develop_end	Thu Oct 15	pmiller
X			13:57:28 1992
X	review_pass	Thu Oct 15	pmiller
X			13:58:18 1992
X	integrate_begin Thu Oct 15	pmiller Elapsed time: 0.285
X			13:59:34 1992		days.
X	integrate_pass	Thu Oct 15	pmiller
X			16:07:45 1992
X
X
X
XProject "aegis.1.3", Change 3					  Page 1
XChange Details					Thu Jan	 7 14:31:53 1993
X
XNAME
X	Project "aegis.1.3", Delta 3, Change 3.
X
XSUMMARY
X	orthoganalize the notification execution functions
X
XDESCRIPTION
X	Round up all of the notification commands and place them into
X	aegis/change.c for consistency.
X
X	This change is exempt from testing.  This change is exempt from
X	testing against the baseline.
X
XCAUSE
X	This change was caused by internal_enhancement.
X
XFILES
X	Type	Action	Edit	File Name
X	------- ------- ------- -----------
X	source	modify	3	aegis/build.c
X	source	modify	3	aegis/cattr_ed.c
X	source	modify	3	aegis/change.c
X	source	modify	3	aegis/change.h
X	source	modify	3	aegis/develop2.c
X	source	modify	3	aegis/integra2.c
X	source	modify	3	aegis/review.c
X
XHISTORY
X	What		When		Who	Comment
X	------		------		-----	---------
X	new_change	Thu Oct 15	pmiller
X			16:13:34 1992
X	develop_begin	Thu Oct 15	pmiller Elapsed time: 0.429
X			16:13:44 1992		days.
X	develop_end	Fri Oct 16	pmiller
X			11:56:54 1992
X	review_pass	Fri Oct 16	pmiller
X			11:57:04 1992
X	integrate_begin Fri Oct 16	pmiller Elapsed time: 0.169
X			11:57:50 1992		days.
X	integrate_pass	Fri Oct 16	pmiller
X			13:13:52 1992
X
X
X
XProject "aegis.1.3", Change 4					  Page 1
XChange Details					Thu Jan	 7 14:31:54 1993
X
XNAME
X	Project "aegis.1.3", Delta 4, Change 4.
X
XSUMMARY
X	change the tests to use RCS
X
XDESCRIPTION
X	Not all sites have SCCS bundled with their system, and so they
X	must fork out real money for it. RCS is available from the GNU
X	folks, and so is a far better choice.
X
X	This change is exempt from testing against the baseline.
X
XCAUSE
X	This change was caused by internal_enhancement.
X
XFILES
X	Type	Action	Edit	File Name
X	------- ------- ------- -----------
X	source	modify	3	Howto.cook
X	source	modify	3	doc/BUILDING.man
X	test	modify	3	test/00/t0002a.sh
X	test	modify	3	test/00/t0004a.sh
X	test	modify	3	test/00/t0005a.sh
X	test	modify	3	test/00/t0006a.sh
X	test	modify	3	test/00/t0007a.sh
X	test	modify	3	test/00/t0008a.sh
X	test	modify	3	test/00/t0009a.sh
X	test	modify	3	test/00/t0010a.sh
X	test	modify	3	test/00/t0011a.sh
X
XHISTORY
X	What		When		Who	Comment
X	------		------		-----	---------
X	new_change	Fri Oct 16	pmiller
X			13:16:54 1992
X	develop_begin	Fri Oct 16	pmiller Elapsed time: 0.111
X			13:17:04 1992		days.
X	develop_end	Fri Oct 16	pmiller
X			14:07:08 1992
X	review_pass	Fri Oct 16	pmiller
X			14:09:08 1992
X	integrate_begin Fri Oct 16	pmiller Elapsed time: 0.105
X			14:09:55 1992		days.
X	integrate_pass	Fri Oct 16	pmiller
X			14:57:08 1992
X
X
X
XProject "aegis.1.3", Change 5					  Page 1
XChange Details					Thu Jan	 7 14:31:55 1993
X
XNAME
X	Project "aegis.1.3", Delta 5, Change 5.
X
XSUMMARY
X	improve generated Makefile
X
XDESCRIPTION
X	Improve the Makefile generated to include clean, realclean and
X	clobber targets. My thanks to Raphael Manfredi <ram@eiffel.com>
X	for this suggestion.
X
X	Improve the Makefile generated to use a define for YACC,
X	allowing sites to use their own.  My thanks to Jesse Perry
X	<jesse@franklin.com> for this suggestion.
X
X	This change is exempt from testing.  This change is exempt from
X	testing against the baseline.
X
XCAUSE
X	This change was caused by external_enhancement.
X
XFILES
X	Type	Action	Edit	File Name
X	------- ------- ------- -----------
X	source	modify	2	Makefile.sh
X
XHISTORY
X	What		When		Who	Comment
X	------		------		-----	---------
X	new_change	Fri Oct 16	pmiller
X			15:03:51 1992
X	develop_begin	Fri Oct 16	pmiller Elapsed time: 0.136
X			15:05:54 1992		days.
X	develop_end	Fri Oct 16	pmiller
X			16:07:13 1992
X	review_pass	Fri Oct 16	pmiller
X			16:07:21 1992
X	integrate_begin Fri Oct 16	pmiller Elapsed time: 0.028
X			16:08:03 1992		days.
X	integrate_pass	Fri Oct 16	pmiller
X			16:20:52 1992
X
X
X
XProject "aegis.1.3", Change 6					  Page 1
XChange Details					Thu Jan	 7 14:31:57 1993
X
XNAME
X	Project "aegis.1.3", Delta 8, Change 6.
X
XSUMMARY
X	make aegis work on dgux
X
XDESCRIPTION
X	1. Change it so that it will compile on dgux.  The DG is one of
X	those rare machines where jmp_buf is a structure and not an
X	array, and this arguments of type va_list can't be passed as
X	pointers (they never should have, of course, but when does one
X	write truly portable code except when forced?
X	2. fix a bug concerning templates which stopped new_file and
X	new_test from working correctly.
X	3. remove the last of the '#pragma once' directives from the
X	include files.	My thanks to Peter Chubb
X	<peterc@suite.sw.oz.au> and Jesse Perry <jesse@franklin.com>
X	for raising this problem.
X	4. There was a problem with tests 6, 8 and 9: they did not
X	correctly unlink files during builds.
X	5. There was a problem with integrate_fail: it tried to chmod
X	files which did not belong to the user.
X
X	This change is exempt from testing.  This change is exempt from
X	testing against the baseline.
X
XCAUSE
X	This change was caused by internal_enhancement.
X
XFILES
X	Type	Action	Edit	File Name
X	------- ------- ------- -----------
X	source	modify	3	Makefile.sh
X	source	modify	2	aegis/administ.h
X	source	modify	2	aegis/archaeol.h
X	source	modify	2	aegis/build.h
X	source	modify	2	aegis/cattr_ed.h
X	source	modify	4	aegis/change.c
X	source	modify	2	aegis/chdir.h
X	source	modify	3	aegis/col.c
X	source	modify	2	aegis/col.h
X	source	modify	2	aegis/copyfile.h
X	source	modify	2	aegis/develop1.h
X	source	modify	2	aegis/develop2.h
X	source	modify	3	aegis/diff.c
X	source	modify	2	aegis/diff.h
X	source	modify	2	aegis/dir.c
X	source	modify	2	aegis/dir.h
X	source	remove	2	aegis/gate.h
X	source	modify	2	aegis/help.h
X	source	modify	2	aegis/integra1.h
X	source	modify	4	aegis/integra2.c
X	source	modify	2	aegis/integra2.h
X	source	modify	2	aegis/io.h
X	source	modify	3	aegis/lex.c
X	source	modify	2	aegis/lex.h
X	source	modify	2	aegis/list.h
X
X
X
XProject "aegis.1.3", Change 6					  Page 2
XChange Details					Thu Jan	 7 14:31:57 1993
X
X	Type	Action	Edit	File Name
X	------- ------- ------- -----------
X	source	modify	3	aegis/lock.c
X	source	modify	2	aegis/lock.h
X	source	modify	2	aegis/log.h
X	source	modify	3	aegis/main.c
X	source	modify	2	aegis/new_chan.h
X	source	modify	3	aegis/new_file.c
X	source	modify	2	aegis/new_file.h
X	source	modify	2	aegis/new_proj.h
X	source	modify	2	aegis/new_rele.h
X	source	modify	3	aegis/new_test.c
X	source	modify	2	aegis/new_test.h
X	source	modify	3	aegis/os.c
X	source	modify	2	aegis/parse.c
X	source	modify	2	aegis/parse.h
X	source	modify	2	aegis/pattr_ed.h
X	source	modify	3	aegis/project.c
X	source	modify	2	aegis/rem_file.h
X	source	modify	2	aegis/review.h
X	source	modify	2	aegis/reviewer.h
X	source	modify	3	aegis/sub.c
X	source	modify	2	aegis/sub.h
X	source	modify	2	aegis/test.h
X	source	modify	2	aegis/version.h
X	source	modify	2	common/arglex.h
X	source	modify	3	common/error.c
X	source	modify	2	common/error.h
X	source	modify	2	common/indent.c
X	source	modify	2	common/indent.h
X	source	modify	3	common/main.h
X	source	modify	2	common/mem.h
X	source	modify	2	common/option.h
X	source	create	1	common/s-v-arg.h
X	source	modify	2	common/str.c
X	source	modify	2	common/str.h
X	source	modify	2	common/trace.c
X	source	modify	2	common/trace.h
X	source	modify	2	common/word.h
X	source	create	1	conf/dgux-5.4.1
X	source	modify	2	config
X	source	modify	2	fmtgen/id.h
X	source	modify	2	fmtgen/lex.c
X	source	modify	2	fmtgen/lex.h
X	source	modify	2	fmtgen/type.h
X	test	modify	4	test/00/t0002a.sh
X	test	modify	4	test/00/t0004a.sh
X	test	modify	4	test/00/t0005a.sh
X	test	modify	4	test/00/t0006a.sh
X	test	modify	4	test/00/t0007a.sh
X	test	modify	4	test/00/t0008a.sh
X	test	modify	4	test/00/t0009a.sh
X	test	modify	4	test/00/t0010a.sh
X
X
X
XProject "aegis.1.3", Change 6					  Page 3
XChange Details					Thu Jan	 7 14:31:57 1993
X
XHISTORY
X	What		When		Who	Comment
X	------		------		-----	---------
X	new_change	Fri Oct 16	pmiller
X			16:21:58 1992
X	develop_begin	Fri Oct 16	pmiller Elapsed time: 0.591
X			16:22:07 1992		days.
X	develop_end	Mon Oct 19	pmiller
X			13:18:10 1992
X	review_pass	Mon Oct 19	pmiller
X			13:18:25 1992
X	integrate_begin Mon Oct 19	pmiller Elapsed time: 0.177
X			13:19:13 1992		days.
X	integrate_fail	Mon Oct 19	pmiller 1. The file gate.h
X			14:39:00 1992		needs more constants in
X						it.
X						2. the use of lock_t in
X						aegis/lock.c needs to
X						be changed.
X						Elapsed time: 0.267
X						days.
X	develop_end	Mon Oct 19	pmiller
X			16:39:06 1992
X	review_pass	Mon Oct 19	pmiller
X			16:39:45 1992
X	integrate_begin Mon Oct 19	pmiller Elapsed time: 1.702
X			16:41:29 1992		days.
X	integrate_fail	Tue Oct 20	pmiller 1. tests 6, 8, 9 fail
X			21:57:36 1992		on the DG because of
X						ld(1) semantics
X						2. problem with -intfail
X						Elapsed time: 0.000
X						days.
X	develop_end	Wed Oct 21	pmiller
X			09:31:53 1992
X	review_pass	Wed Oct 21	pmiller
X			09:32:05 1992
X	integrate_begin Wed Oct 21	pmiller Elapsed time: 0.111
X			09:32:37 1992		days.
X	integrate_pass	Wed Oct 21	pmiller
X			10:22:45 1992
X
X
X
XProject "aegis.1.3", Change 7					  Page 1
XChange Details					Thu Jan	 7 14:31:58 1993
X
XNAME
X	Project "aegis.1.3", Delta 9, Change 7.
X
XSUMMARY
X	enhance columns output
X
XDESCRIPTION
X	enhance columns output
X
X	This change is exempt from testing.  This change is exempt from
X	testing against the baseline.
X
XCAUSE
X	This change was caused by internal_enhancement.
X
XFILES
X	Type	Action	Edit	File Name
X	------- ------- ------- -----------
X	source	modify	2	CHANGES.sh
X	source	modify	2	aegis/arglex2.h
X	source	modify	4	aegis/col.c
X	source	modify	3	aegis/col.h
X	source	modify	3	aegis/help.c
X	source	modify	3	aegis/list.c
X	source	modify	3	aegis/log.c
X	source	modify	4	aegis/main.c
X	source	modify	4	aegis/os.c
X	source	modify	3	aegis/os.h
X	source	create	1	aegis/pager.c
X	source	create	1	aegis/pager.h
X	source	modify	4	common/main.h
X	source	modify	2	common/option.c
X	source	modify	3	common/option.h
X	source	modify	2	man1/aegis.1
X	source	modify	2	man1/o_page.so
X
XHISTORY
X	What		When		Who	Comment
X	------		------		-----	---------
X	new_change	Wed Oct 21	pmiller
X			10:29:04 1992
X	develop_begin	Wed Oct 21	pmiller Elapsed time: 1.061
X			10:29:21 1992		days.
X	develop_end	Thu Oct 22	pmiller
X			10:56:37 1992
X	review_pass	Thu Oct 22	pmiller
X			10:57:14 1992
X	integrate_begin Thu Oct 22	pmiller Elapsed time: 0.235
X			10:57:57 1992		days.
X	integrate_pass	Thu Oct 22	pmiller
X			12:43:40 1992
X
X
X
XProject "aegis.1.3", Change 8					  Page 1
XChange Details					Thu Jan	 7 14:31:59 1993
X
XNAME
X	Project "aegis.1.3", Delta 10, Change 8.
X
XSUMMARY
X	do not automagically append the program name to the library path
X
XDESCRIPTION
X	Do not automagically append the program name to the library
X	path, as this makes it difficult for some sites to customize
X	the location.
X
X	My thanks to Andy Whitcroft <andy@cs.city.ac.uk> for this
X	suggestion.
X
X	This change is exempt from testing.  This change is exempt from
X	testing against the baseline.
X
XCAUSE
X	This change was caused by external_enhancement.
X
XFILES
X	Type	Action	Edit	File Name
X	------- ------- ------- -----------
X	source	modify	4	Howto.cook
X	source	modify	4	Makefile.sh
X	source	modify	3	aegis/gonzo.c
X	source	modify	3	common/option.c
X	source	modify	2	common/s-v-arg.h
X	source	create	1	conf/SunOS-4.1.1
X
XHISTORY
X	What		When		Who	Comment
X	------		------		-----	---------
X	new_change	Sat Oct 24	pmiller
X			23:51:45 1992
X	develop_begin	Sat Oct 24	pmiller Elapsed time: 0.605
X			23:51:52 1992		days.
X	develop_end	Sun Oct 25	pmiller
X			21:53:55 1992
X	review_pass	Sun Oct 25	pmiller
X			21:56:55 1992
X	integrate_begin Sun Oct 25	pmiller Elapsed time: 0.952
X			21:57:46 1992		days.
X	integrate_pass	Mon Oct 26	pmiller
X			21:36:01 1992
X
X
X
XProject "aegis.1.3", Change 9					  Page 1
XChange Details					Thu Jan	 7 14:32:00 1993
X
XNAME
X	Project "aegis.1.3", Delta 11, Change 9.
X
XSUMMARY
X	change the build_number field to a delta_number field
X
XDESCRIPTION
X	1. The use of 'build' is ambiguous.  Use delta instead.	 It
X	also makes the 'D' in the version number make more sense.
X	2. remove long-standing build problem w.r.t. common/conf.h.
X	3. make test 2 quieter.
X	4. make column code more capable, and exploit this in the
X	listings.
X	5. note the incompatibility of this version of aegis with
X	earlier versions in the ALPGHA file.
X	6. testing exemptions cancelled when tests added to a change.
X
X	This change is exempt from testing.  This change is exempt from
X	testing against the baseline.
X
XCAUSE
X	This change was caused by internal_enhancement.
X
XFILES
X	Type	Action	Edit	File Name
X	------- ------- ------- -----------
X	source	modify	5	Howto.cook
X	source	modify	4	aegis/build.c
X	source	modify	5	aegis/col.c
X	source	modify	4	aegis/col.h
X	source	modify	3	aegis/copyfile.c
X	source	modify	3	aegis/cstate.def
X	source	modify	5	aegis/integra2.c
X	source	modify	4	aegis/list.c
X	source	modify	3	aegis/new_proj.c
X	source	modify	3	aegis/new_rele.c
X	source	modify	4	aegis/new_test.c
X	source	modify	4	aegis/project.c
X	source	modify	2	aegis/pstate.def
X	source	modify	5	common/main.h
X	source	modify	2	doc/ALPHA.man
X	source	modify	4	doc/BUILDING.man
X	source	modify	2	man1/aeib.1
X	source	modify	3	man5/aecstate.5
X	source	modify	2	man5/aepstate.5
X	test	modify	5	test/00/t0002a.sh
X
XHISTORY
X	What		When		Who	Comment
X	------		------		-----	---------
X	new_change	Mon Oct 26	pmiller
X			21:40:38 1992
X	develop_begin	Mon Oct 26	pmiller Elapsed time: 4.939
X			21:40:50 1992		days.
X	develop_end	Sat Oct 31	pmiller Elapsed time: 0.051
X			21:13:32 1992		days.
X	review_pass	Sat Oct 31	pmiller
X
X
X
XProject "aegis.1.3", Change 9					  Page 2
XChange Details					Thu Jan	 7 14:32:00 1993
X
X	What		When		Who	Comment
X	------		------		-----	---------
X			21:36:20 1992
X	integrate_begin Sat Oct 31	pmiller Elapsed time: 0.110
X			21:37:13 1992		days.
X	integrate_pass	Sat Oct 31	pmiller
X			22:26:45 1992
X
X
X
XProject "aegis.1.3", Change 10					  Page 1
XChange Details					Thu Jan	 7 14:32:02 1993
X
XNAME
X	Project "aegis.1.3", Delta 12, Change 10.
X
XSUMMARY
X	fix niggling bugs
X
XDESCRIPTION
X	1. Check state=complete implies delta_number set.
X	2. build_number should be set on new_release.
X	3. CHANGES.sh needs improving.
X	4. quit needs to close pager.
X	5. when field in history needs human-readable comment.
X
X	This change is exempt from testing.  This change is exempt from
X	testing against the baseline.
X
XCAUSE
X	This change was caused by internal_bug.
X
XFILES
X	Type	Action	Edit	File Name
X	------- ------- ------- -----------
X	source	modify	3	CHANGES.sh
X	source	modify	5	aegis/change.c
X	source	modify	6	aegis/col.c
X	source	modify	3	aegis/io.c
X	source	modify	5	aegis/list.c
X	source	modify	4	aegis/new_rele.c
X	source	modify	2	aegis/pager.c
X
XHISTORY
X	What		When		Who	Comment
X	------		------		-----	---------
X	new_change	Sat Oct 31	pmiller
X			23:21:05 1992
X	develop_begin	Sat Oct 31	pmiller Elapsed time: 0.941
X			23:21:16 1992		days.
X	develop_end	Sun Nov	 1	pmiller
X			22:54:34 1992
X	review_pass	Sun Nov	 1	pmiller
X			22:54:42 1992
X	integrate_begin Sun Nov	 1	pmiller Elapsed time: 0.000
X			22:55:21 1992		days.
X	integrate_pass	Mon Nov	 2	pmiller
X			08:33:33 1992
X
X
X
XProject "aegis.1.3", Change 11					  Page 1
XChange Details					Thu Jan	 7 14:32:04 1993
X
XNAME
X	Project "aegis.1.3", Delta 13, Change 11.
X
XSUMMARY
X	add default_test_exempt attribute to projects
X
XDESCRIPTION
X	1. Add a setting mask to structures so that we can determine
X	that a given field has been set.
X	2. Use this information to rationalize some of the validation
X	code.
X	3. Add a default_test_exemption field to project attributes.
X
X	This change is exempt from testing.  This change is exempt from
X	testing against the baseline.
X
XCAUSE
X	This change was caused by internal_enhancement.
X
XFILES
X	Type	Action	Edit	File Name
X	------- ------- ------- -----------
X	source	modify	4	aegis/cattr_ed.c
X	source	modify	2	aegis/common.def
X	source	modify	3	aegis/new_chan.c
X	source	modify	3	aegis/parse.c
X	source	modify	3	aegis/pattr.def
X	source	modify	3	aegis/pattr_ed.c
X	source	modify	3	aegis/type.h
X	source	modify	2	fmtgen/type_struc.c
X	source	modify	2	man5/aepattr.5
X	source	modify	3	man5/aepstate.5
X
XHISTORY
X	What		When		Who	Comment
X	------		------		-----	---------
X	new_change	Sun Nov	 1	pmiller Elapsed time: 0.000
X			22:49:37 1992		days.
X	develop_begin	Mon Nov	 2	pmiller Elapsed time: 0.000
X			08:36:00 1992		days.
X	develop_end	Mon Nov	 2	pmiller
X			16:38:21 1992
X	review_pass	Mon Nov	 2	pmiller
X			16:40:48 1992
X	integrate_begin Mon Nov	 2	pmiller Elapsed time: 0.656
X			16:41:42 1992		days.
X	integrate_pass	Mon Nov	 2	pmiller
X			21:36:49 1992
X
X
X
XProject "aegis.1.3", Change 12					  Page 1
XChange Details					Thu Jan	 7 14:32:05 1993
X
XNAME
X	Project "aegis.1.3", Delta 14, Change 12.
X
XSUMMARY
X	change the way use yacc
X
XDESCRIPTION
X	Have yacc produce *.gen.[ch] files, so can have true .h
X	interface definition file for yacc sources.
X
X	This change is exempt from testing.  This change is exempt from
X	testing against the baseline.
X
XCAUSE
X	This change was caused by internal_enhancement.
X
XFILES
X	Type	Action	Edit	File Name
X	------- ------- ------- -----------
X	source	modify	6	Howto.cook
X	source	modify	5	Makefile.sh
X	source	modify	4	aegis/develop2.c
X	source	create	1	aegis/gram.h
X	source	modify	3	aegis/gram.y
X	source	modify	4	aegis/lex.c
X	source	modify	3	aegis/lex.h
X	source	modify	4	aegis/parse.c
X	source	modify	3	fmtgen/lex.c
X	source	modify	3	fmtgen/lex.h
X	source	modify	2	fmtgen/main.c
X	source	create	1	fmtgen/parse.h
X	source	modify	3	fmtgen/parse.y
X	source	modify	3	fmtgen/type_struc.c
X
XHISTORY
X	What		When		Who	Comment
X	------		------		-----	---------
X	new_change	Sun Nov	 1	pmiller Elapsed time: 0.844
X			22:51:07 1992		days.
X	develop_begin	Mon Nov	 2	pmiller Elapsed time: 0.245
X			21:41:02 1992		days.
X	develop_end	Tue Nov	 3	pmiller
X			16:01:23 1992
X	review_pass	Tue Nov	 3	pmiller
X			16:01:37 1992
X	integrate_begin Tue Nov	 3	pmiller Elapsed time: 0.072
X			16:02:18 1992		days.
X	integrate_pass	Tue Nov	 3	pmiller
X			16:34:48 1992
X
X
X
XProject "aegis.1.3", Change 13					  Page 1
XChange Details					Thu Jan	 7 14:32:06 1993
X
XNAME
X	Project "aegis.1.3", Delta 15, Change 13.
X
XSUMMARY
X	remove ,D file when remove a file from a change
X
XDESCRIPTION
X	The aecpu, aenfu, aermu, aentu commands should remove any ,D
X	file if it exists.
X
X	This change is exempt from testing.  This change is exempt from
X	testing against the baseline.
X
XCAUSE
X	This change was caused by internal_enhancement.
X
XFILES
X	Type	Action	Edit	File Name
X	------- ------- ------- -----------
X	source	modify	4	aegis/copyfile.c
X	source	modify	4	aegis/new_file.c
X	source	modify	5	aegis/new_test.c
X	source	modify	5	aegis/os.c
X	source	modify	3	aegis/rem_file.c
X
XHISTORY
X	What		When		Who	Comment
X	------		------		-----	---------
X	new_change	Sun Nov	 1	pmiller Elapsed time: 1.169
X			22:52:07 1992		days.
X	develop_begin	Tue Nov	 3	pmiller Elapsed time: 0.121
X			16:38:00 1992		days.
X	develop_end	Wed Nov	 4	pmiller
X			10:02:23 1992
X	review_pass	Wed Nov	 4	pmiller
X			10:02:31 1992
X	integrate_begin Wed Nov	 4	pmiller Elapsed time: 0.054
X			10:03:13 1992		days.
X	integrate_pass	Wed Nov	 4	pmiller
X			10:27:35 1992
X
X
X
XProject "aegis.1.3", Change 14					  Page 1
XChange Details					Thu Jan	 7 14:32:07 1993
X
XNAME
X	Project "aegis.1.3", Delta 16, Change 14.
X
XSUMMARY
X	cope with /tmp_mnt/... in the current directory
X
XDESCRIPTION
X	There are many facets to coping with the auto-mounter.	The
X	current directory may actually be an auto-mounter directory,
X	and the auto-mounter part needs to be ignored.
X
X	This change is exempt from testing.  This change is exempt from
X	testing against the baseline.
X
XCAUSE
X	This change was caused by internal_enhancement.
X
XFILES
X	Type	Action	Edit	File Name
X	------- ------- ------- -----------
X	source	modify	6	aegis/os.c
X
XHISTORY
X	What		When		Who	Comment
X	------		------		-----	---------
X	new_change	Wed Nov	 4	pmiller
X			22:02:56 1992
X	develop_begin	Wed Nov	 4	pmiller Elapsed time: 0.124
X			22:03:12 1992		days.
X	develop_end	Wed Nov	 4	pmiller
X			22:58:48 1992
X	review_pass	Wed Nov	 4	pmiller
X			22:58:58 1992
X	integrate_begin Wed Nov	 4	pmiller Elapsed time: 0.025
X			22:59:41 1992		days.
X	integrate_pass	Wed Nov	 4	pmiller
X			23:10:46 1992
X
X
X
XProject "aegis.1.3", Change 15					  Page 1
XChange Details					Thu Jan	 7 14:32:08 1993
X
XNAME
X	Project "aegis.1.3", Delta 17, Change 15.
X
XSUMMARY
X	fix bug in -new_project
X
XDESCRIPTION
X	When creating a new project, and -DIRectory not specified, the
X	code in user.c to determine the default place dod not correctly
X	set the euid.
X
X	This change is exempt from testing.  This change is exempt from
X	testing against the baseline.
X
XCAUSE
X	This change was caused by internal_bug.
X
XFILES
X	Type	Action	Edit	File Name
X	------- ------- ------- -----------
X	source	modify	6	aegis/change.c
X	source	modify	4	aegis/change.h
X	source	modify	4	aegis/gonzo.c
X	source	modify	3	aegis/gonzo.h
X	source	modify	4	aegis/lock.c
X	source	modify	4	aegis/new_proj.c
X	source	modify	7	aegis/os.c
X	source	modify	5	aegis/project.c
X	source	modify	3	aegis/project.h
X	source	modify	3	aegis/user.c
X	source	modify	3	aegis/user.h
X
XHISTORY
X	What		When		Who	Comment
X	------		------		-----	---------
X	new_change	Mon Nov 16	pmiller
X			09:36:11 1992
X	develop_begin	Mon Nov 16	pmiller Elapsed time: 1.759
X			09:36:23 1992		days.
X	develop_end	Tue Nov 17	pmiller
X			15:18:03 1992
X	review_pass	Tue Nov 17	pmiller
X			15:26:25 1992
X	integrate_begin Tue Nov 17	pmiller Elapsed time: 0.042
X			15:27:10 1992		days.
X	integrate_pass	Tue Nov 17	pmiller
X			15:46:04 1992
X
X
X
XProject "aegis.1.3", Change 16					  Page 1
XChange Details					Thu Jan	 7 14:32:09 1993
X
XNAME
X	Project "aegis.1.3", Delta 18, Change 16.
X
XSUMMARY
X	log_open needs to know which user
X
XDESCRIPTION
X	log_open needs to know which user
X
X	This change is exempt from testing.  This change is exempt from
X	testing against the baseline.
X
XCAUSE
X	This change was caused by internal_bug.
X
XFILES
X	Type	Action	Edit	File Name
X	------- ------- ------- -----------
X	source	modify	5	aegis/build.c
X	source	modify	5	aegis/copyfile.c
X	source	modify	4	aegis/diff.c
X	source	modify	6	aegis/integra2.c
X	source	modify	4	aegis/log.c
X	source	modify	3	aegis/log.h
X	source	modify	5	aegis/new_file.c
X	source	modify	5	aegis/new_rele.c
X	source	modify	6	aegis/project.c
X	source	modify	4	aegis/project.h
X	source	modify	4	aegis/rem_file.c
X	source	modify	3	aegis/test.c
X	source	modify	4	aegis/user.c
X	source	modify	4	aegis/user.h
X
XHISTORY
X	What		When		Who	Comment
X	------		------		-----	---------
X	new_change	Tue Nov 17	pmiller
X			15:49:04 1992
X	develop_begin	Tue Nov 17	pmiller Elapsed time: 0.959
X			15:49:17 1992		days.
X	develop_end	Tue Nov 17	pmiller
X			23:00:58 1992
X	review_pass	Tue Nov 17	pmiller
X			23:01:09 1992
X	integrate_begin Tue Nov 17	pmiller Elapsed time: 0.000
X			23:01:52 1992		days.
X	integrate_pass	Wed Nov 18	pmiller
X			10:08:00 1992
X
X
X
XProject "aegis.1.3", Change 17					  Page 1
XChange Details					Thu Jan	 7 14:32:10 1993
X
XNAME
X	Project "aegis.1.3", Delta 19, Change 17.
X
XSUMMARY
X	Add the -Delta and -Output options to the -CoPy_file
X
XDESCRIPTION
X	1. Add the -Delta and -Output options to the -CoPy_file, so can
X	start generating patch files.
X	2. Start using the strict prototype warnings of gcc, and
X	correct the errors so revealed.	 (yaccpar sux)
X	3. Add a shell script to generate a patchfile in the
X	integration build.
X	4. move auxilliary files used by integration build out of the
X	main directory and into the 'aux' subdirectory.
X
X	This change is exempt from testing.  This change is exempt from
X	testing against the baseline.
X
XCAUSE
X	This change was caused by internal_enhancement.
X
XFILES
X	Type	Action	Edit	File Name
X	------- ------- ------- -----------
X	source	remove	3	CHANGES.sh
X	source	remove	6	Howto.cook
X	source	remove	1	Makefile.awk
X	source	remove	5	Makefile.sh
X	source	remove	1	aegis/archaeol.c
X	source	remove	2	aegis/archaeol.h
X	source	modify	3	aegis/arglex2.h
X	source	modify	7	aegis/change.c
X	source	modify	5	aegis/change.h
X	source	modify	6	aegis/copyfile.c
X	source	modify	5	aegis/diff.c
X	source	modify	3	aegis/file.c
X	source	modify	5	aegis/gonzo.c
X	source	modify	6	aegis/list.c
X	source	modify	5	aegis/main.c
X	source	modify	8	aegis/os.c
X	source	modify	7	aegis/project.c
X	source	modify	5	aegis/project.h
X	source	modify	4	aegis/review.c
X	source	modify	3	aegis/sub.h
X	source	modify	2	aegis/version.c
X	source	create	1	aux/CHANGES.sh
X	source	create	1	aux/Howto.cook
X	source	create	1	aux/MANIFEST.awk
X	source	create	1	aux/MANIFEST.sh
X	source	create	1	aux/Makefile.awk
X	source	create	1	aux/Makefile.sh
X	source	create	1	aux/patches.sh
X	source	modify	2	common/arglex.c
X	source	modify	3	common/error.h
X	source	modify	3	common/str.c
X	source	modify	3	common/trace.c
X
X
X
XProject "aegis.1.3", Change 17					  Page 2
XChange Details					Thu Jan	 7 14:32:10 1993
X
X	Type	Action	Edit	File Name
X	------- ------- ------- -----------
X	source	modify	3	common/trace.h
X	source	modify	3	config
X	source	modify	3	doc/README.man
X	source	modify	2	fmtgen/id.c
X	source	modify	4	fmtgen/lex.c
X	source	modify	3	fmtgen/main.c
X	source	modify	2	fmtgen/type_enum.c
X	source	modify	2	fmtgen/type_list.c
X	source	modify	4	fmtgen/type_struc.c
X	source	remove	1	man1/aea.1
X	source	modify	2	man1/aecp.1
X	source	modify	3	man1/aegis.1
X
XHISTORY
X	What		When		Who	Comment
X	------		------		-----	---------
X	new_change	Fri Nov 27	pmiller
X			21:38:43 1992
X	develop_begin	Fri Nov 27	pmiller Elapsed time: 6.093
X			21:38:54 1992		days.
X	develop_end	Mon Dec	 7	pmiller
X			22:20:56 1992
X	review_pass	Mon Dec	 7	pmiller
X			22:24:07 1992
X	integrate_begin Mon Dec	 7	pmiller Elapsed time: 0.080
X			22:25:37 1992		days.
X	integrate_pass	Mon Dec	 7	pmiller
X			23:01:27 1992
X
X
X
XProject "aegis.1.3", Change 18					  Page 1
XChange Details					Thu Jan	 7 14:32:12 1993
X
XNAME
X	Project "aegis.1.3", Delta 21, Change 18.
X
XSUMMARY
X	add more to the documentation
X
XDESCRIPTION
X	1. add more to the documentation
X	2. fix a bug with the test log file not bewing opened as the
X	correct user.
X	3. fix an infinite loop bug in gonzo.
X	4. move the top-level info files soauces to aux.
X	5. fixed test 2, faster processors trip on the build time.
X	6. externded test 11 to include addinitional documentation.
X	7. fixed a few typos in the notify scripts
X	8. created next rev conf file
X
X	This change is exempt from testing against the baseline.
X
XCAUSE
X	This change was caused by internal_enhancement.
X
XFILES
X	Type	Action	Edit	File Name
X	------- ------- ------- -----------
X	source	modify	6	aegis/gonzo.c
X	source	modify	9	aegis/os.c
X	source	modify	4	aegis/test.c
X	source	create	1	aux/ALPHA.man
X	source	create	1	aux/BUILDING.man
X	source	modify	2	aux/Howto.cook
X	source	create	1	aux/README.man
X	source	modify	2	aux/patches.sh
X	source	create	1	conf/SunOS-4.1.3
X	source	remove	2	doc/ALPHA.man
X	source	remove	4	doc/BUILDING.man
X	source	remove	3	doc/README.man
X	source	modify	2	doc/aegis.ms
X	source	modify	2	doc/c1.0.so
X	source	modify	2	doc/c1.1.so
X	source	modify	2	doc/c1.2.so
X	source	modify	2	doc/c1.3.so
X	source	modify	2	doc/c1.4.so
X	source	modify	2	doc/c2.0.so
X	source	modify	2	doc/c2.1.so
X	source	modify	2	doc/c2.2.so
X	source	modify	2	doc/c2.3.so
X	source	modify	2	doc/c2.4.so
X	source	modify	2	doc/c3.0.so
X	source	modify	2	doc/c3.1.so
X	source	modify	2	doc/c3.2.so
X	source	modify	2	doc/c3.3.so
X	source	modify	2	doc/c4.0.so
X	source	modify	2	doc/c5.0.so
X	source	modify	2	doc/c6.0.so
X	source	modify	2	doc/c7.0.so
X	source	modify	2	doc/c7.1.so
X
X
X
XProject "aegis.1.3", Change 18					  Page 2
XChange Details					Thu Jan	 7 14:32:12 1993
X
X	Type	Action	Edit	File Name
X	------- ------- ------- -----------
X	source	modify	2	doc/c7.2.so
X	source	create	1	doc/c7.4.so
X	source	modify	2	doc/cA.0.so
X	source	create	1	doc/cB.0.so
X	source	modify	2	notify/de.sh
X	source	modify	2	notify/deu.sh
X	source	modify	2	notify/if.sh
X	source	modify	2	notify/ip.sh
X	source	modify	2	notify/rf.sh
X	source	modify	2	notify/rp.sh
X	source	modify	2	notify/rpu.sh
X	test	modify	6	test/00/t0002a.sh
X	test	modify	4	test/00/t0011a.sh
X
XHISTORY
X	What		When		Who	Comment
X	------		------		-----	---------
X	new_change	Mon Dec	 7	pmiller Elapsed time: 0.030
X			22:51:18 1992		days.
X	develop_begin	Mon Dec	 7	pmiller Elapsed time: 4.907
X			23:04:59 1992		days.
X	develop_end	Mon Dec 14	pmiller Elapsed time: 0.036
X			22:23:09 1992		days.
X	review_pass	Mon Dec 14	pmiller
X			22:39:22 1992
X	integrate_begin Mon Dec 14	pmiller
X			22:41:04 1992
X	integrate_fail	Mon Dec 14	pmiller need conf/SunOS-4.1.3
X			22:45:19 1992
X	develop_end	Mon Dec 14	pmiller
X			22:53:46 1992
X	review_pass	Mon Dec 14	pmiller
X			22:53:57 1992
X	integrate_begin Mon Dec 14	pmiller Elapsed time: 0.000
X			22:54:56 1992		days.
X	integrate_pass	Tue Dec 15	pmiller
X			09:45:35 1992
X
X
X
XProject "aegis.1.3", Change 19					  Page 1
XChange Details					Thu Jan	 7 14:32:13 1993
X
XNAME
X	Project "aegis.1.3", Delta 22, Change 19.
X
XSUMMARY
X	more documentation
X
XDESCRIPTION
X	1. more documentation
X	2. fix aux/patches.sh to not bomb after the first file, and to
X	emit a Prereq line.
X	3. change interagte pass to use the correct user for log file,
X	and change integrate_begin to leave non-source files writable
X	by project owner.
X
X	This change is exempt from testing against the baseline.
X
XCAUSE
X	This change was caused by internal_enhancement.
X
XFILES
X	Type	Action	Edit	File Name
X	------- ------- ------- -----------
X	source	modify	7	aegis/integra2.c
X	source	modify	3	aux/patches.sh
X	source	modify	3	doc/aegis.ms
X	source	modify	3	doc/c1.0.so
X	source	modify	3	doc/c1.3.so
X	source	modify	3	doc/c2.1.so
X	source	modify	3	doc/c2.2.so
X	source	modify	3	doc/c2.3.so
X	source	modify	3	doc/c2.4.so
X	source	modify	3	doc/c3.0.so
X	source	modify	3	doc/c3.1.so
X	source	modify	3	doc/c3.2.so
X	source	modify	3	doc/c3.3.so
X	source	modify	3	doc/c4.0.so
X	source	modify	3	doc/c5.0.so
X	source	modify	3	doc/c6.0.so
X	source	modify	3	doc/c7.1.so
X	source	modify	3	doc/c7.2.so
X	source	modify	3	doc/cA.0.so
X	source	modify	2	doc/cB.0.so
X	test	modify	5	test/00/t0011a.sh
X
XHISTORY
X	What		When		Who	Comment
X	------		------		-----	---------
X	new_change	Tue Dec 15	pmiller
X			09:49:17 1992
X	develop_begin	Tue Dec 15	pmiller Elapsed time: 2.177
X			09:49:29 1992		days.
X	develop_end	Thu Dec 17	pmiller
X			11:09:02 1992
X	review_pass	Thu Dec 17	pmiller
X			11:09:30 1992
X	integrate_begin Thu Dec 17	pmiller Elapsed time: 0.136
X			11:10:34 1992		days.
X
X
X
XProject "aegis.1.3", Change 19					  Page 2
XChange Details					Thu Jan	 7 14:32:13 1993
X
X	What		When		Who	Comment
X	------		------		-----	---------
X	integrate_pass	Thu Dec 17	pmiller
X			12:11:45 1992
X
X
X
XProject "aegis.1.3", Change 20					  Page 1
XChange Details					Thu Jan	 7 14:32:14 1993
X
XNAME
X	Project "aegis.1.3", Delta 23, Change 20.
X
XSUMMARY
X	fix problems with distribution
X
XDESCRIPTION
X	1. change aux/Howto.cook to remove doc/aegis.txt target before
X	producing it.
X	2. aecp should allow -o to be used in any state, not just being_
X	developed state.
X	3. Set the Makefile to use H=nothing as the default.
X	4. fmtgen emitting prototypes without the _ macro.
X
X	This change is exempt from testing.  This change is exempt from
X	testing against the baseline.
X
XCAUSE
X	This change was caused by internal_bug.
X
XFILES
X	Type	Action	Edit	File Name
X	------- ------- ------- -----------
X	source	modify	7	aegis/copyfile.c
X	source	modify	3	aux/Howto.cook
X	source	modify	2	aux/Makefile.sh
X	source	modify	3	fmtgen/type_list.c
X	source	modify	5	fmtgen/type_struc.c
X
XHISTORY
X	What		When		Who	Comment
X	------		------		-----	---------
X	new_change	Thu Dec 17	pmiller
X			12:30:04 1992
X	develop_begin	Thu Dec 17	pmiller Elapsed time: 0.081
X			12:30:12 1992		days.
X	develop_end	Thu Dec 17	pmiller
X			13:06:33 1992
X	review_pass	Thu Dec 17	pmiller
X			13:06:47 1992
X	integrate_begin Thu Dec 17	pmiller Elapsed time: 0.478
X			13:08:03 1992		days.
X	integrate_pass	Thu Dec 17	pmiller
X			16:43:03 1992
X
X
X
XProject "aegis.1.3", Change 21					  Page 1
XChange Details					Thu Jan	 7 14:32:15 1993
X
XNAME
X	Project "aegis.1.3", Delta 25, Change 21.
X
XSUMMARY
X	more documentation
X
XDESCRIPTION
X	1. add a little more documentation, and fix a number of typos.
X	2. allow aecp -o to work in the being_inrtegrated state, for
X	patch file generation.
X	3. fix fmtgen for enumerated types
X
X	This change is exempt from testing.  This change is exempt from
X	testing against the baseline.
X
XCAUSE
X	This change was caused by internal_enhancement.
X
XFILES
X	Type	Action	Edit	File Name
X	------- ------- ------- -----------
X	source	modify	8	aegis/copyfile.c
X	source	modify	4	doc/c1.3.so
X	source	modify	3	doc/c2.0.so
X	source	modify	4	doc/c2.1.so
X	source	modify	4	doc/c2.2.so
X	source	modify	4	doc/c2.3.so
X	source	modify	4	doc/c2.4.so
X	source	modify	4	doc/c3.0.so
X	source	modify	4	doc/c3.1.so
X	source	modify	4	doc/c4.0.so
X	source	modify	4	doc/c5.0.so
X	source	modify	4	doc/c6.0.so
X	source	modify	3	doc/c7.0.so
X	source	modify	4	doc/c7.1.so
X	source	modify	4	doc/c7.2.so
X	source	modify	2	doc/c7.4.so
X	source	create	1	doc/c7.5.so
X	source	modify	4	doc/cA.0.so
X	source	modify	3	doc/cB.0.so
X	source	modify	3	fmtgen/type_enum.c
X
XHISTORY
X	What		When		Who	Comment
X	------		------		-----	---------
X	new_change	Thu Dec 17	pmiller
X			16:47:28 1992
X	develop_begin	Thu Dec 17	pmiller Elapsed time: 0.990
X			16:47:53 1992		days.
X	develop_end	Fri Dec 18	pmiller
X			00:13:34 1992
X	review_pass	Fri Dec 18	pmiller
X			00:14:09 1992
X	integrate_begin Fri Dec 18	pmiller Elapsed time: 0.000
X			00:15:34 1992		days.
X	integrate_fail	Fri Dec 18	pmiller the copyfile changes
X			08:47:57 1992		can't cope with the
X
X
X
XProject "aegis.1.3", Change 21					  Page 2
XChange Details					Thu Jan	 7 14:32:15 1993
X
X	What		When		Who	Comment
X	------		------		-----	---------
X						int.dir
X						Elapsed time: 0.000
X						days.
X	develop_end	Fri Dec 18	pmiller
X			16:56:27 1992
X	review_pass	Fri Dec 18	pmiller
X			16:56:57 1992
X	integrate_begin Fri Dec 18	pmiller Elapsed time: 0.793
X			16:57:55 1992		days.
X	integrate_pass	Fri Dec 18	pmiller
X			22:54:36 1992
X
X
X
XProject "aegis.1.3", Change 22					  Page 1
XChange Details					Thu Jan	 7 14:32:16 1993
X
XNAME
X	Project "aegis.1.3", Delta 26, Change 22.
X
XSUMMARY
X	make sure each file as a MANIFEST line
X
XDESCRIPTION
X	sundry cosmetic things
X	1. make sure each file has a MANIFEST line.
X	2. make sure the copyright dates are correct in each file.
X	3. correct typos in document and manual pages, correct3ed
X	mirrors of man pages in code.
X
X	This change is exempt from testing against the baseline.
X
XCAUSE
X	This change was caused by internal_enhancement.
X
XFILES
X	Type	Action	Edit	File Name
X	------- ------- ------- -----------
X	source	modify	2	aegis/administ.c
X	source	modify	3	aegis/administ.h
X	source	modify	6	aegis/build.c
X	source	modify	3	aegis/build.h
X	source	modify	2	aegis/cattr.def
X	source	modify	5	aegis/cattr_ed.c
X	source	modify	3	aegis/cattr_ed.h
X	source	modify	3	aegis/chdir.c
X	source	modify	3	aegis/chdir.h
X	source	modify	7	aegis/col.c
X	source	modify	5	aegis/col.h
X	source	modify	3	aegis/commit.c
X	source	modify	3	aegis/commit.h
X	source	modify	3	aegis/common.def
X	source	modify	3	aegis/copyfile.h
X	source	modify	4	aegis/cstate.def
X	source	modify	2	aegis/develop1.c
X	source	modify	3	aegis/develop1.h
X	source	modify	5	aegis/develop2.c
X	source	modify	3	aegis/develop2.h
X	source	modify	3	aegis/diff.h
X	source	modify	3	aegis/dir.c
X	source	modify	3	aegis/dir.h
X	source	modify	3	aegis/file.h
X	source	modify	4	aegis/gonzo.h
X	source	modify	2	aegis/gram.h
X	source	modify	4	aegis/gram.y
X	source	modify	2	aegis/gstate.def
X	source	modify	4	aegis/help.c
X	source	modify	3	aegis/help.h
X	source	modify	2	aegis/integra1.c
X	source	modify	3	aegis/integra1.h
X	source	modify	8	aegis/integra2.c
X	source	modify	3	aegis/integra2.h
X	source	modify	4	aegis/io.c
X	source	modify	3	aegis/io.h
X
X
X
XProject "aegis.1.3", Change 22					  Page 2
XChange Details					Thu Jan	 7 14:32:16 1993
X
X	Type	Action	Edit	File Name
X	------- ------- ------- -----------
X	source	modify	5	aegis/lex.c
X	source	modify	4	aegis/lex.h
X	source	modify	3	aegis/list.h
X	source	modify	5	aegis/lock.c
X	source	modify	3	aegis/lock.h
X	source	modify	5	aegis/log.c
X	source	modify	4	aegis/log.h
X	source	modify	4	aegis/new_chan.c
X	source	modify	3	aegis/new_chan.h
X	source	modify	6	aegis/new_file.c
X	source	modify	3	aegis/new_file.h
X	source	modify	5	aegis/new_proj.c
X	source	modify	3	aegis/new_proj.h
X	source	modify	6	aegis/new_rele.c
X	source	modify	3	aegis/new_rele.h
X	source	modify	6	aegis/new_test.c
X	source	modify	3	aegis/new_test.h
X	source	modify	4	aegis/os.h
X	source	modify	3	aegis/pager.c
X	source	modify	2	aegis/pager.h
X	source	modify	5	aegis/parse.c
X	source	modify	3	aegis/parse.h
X	source	modify	4	aegis/pattr.def
X	source	modify	4	aegis/pattr_ed.c
X	source	modify	3	aegis/pattr_ed.h
X	source	modify	2	aegis/pconf.def
X	source	modify	3	aegis/pstate.def
X	source	modify	5	aegis/rem_file.c
X	source	modify	3	aegis/rem_file.h
X	source	modify	5	aegis/review.c
X	source	modify	3	aegis/review.h
X	source	modify	2	aegis/reviewer.c
X	source	modify	3	aegis/reviewer.h
X	source	modify	4	aegis/sub.c
X	source	modify	3	aegis/test.h
X	source	modify	3	aegis/type.c
X	source	modify	4	aegis/type.h
X	source	modify	2	aegis/uconf.def
X	source	modify	3	aegis/undo.c
X	source	modify	3	aegis/undo.h
X	source	modify	5	aegis/user.c
X	source	modify	5	aegis/user.h
X	source	modify	2	aegis/ustate.def
X	source	modify	3	aegis/version.h
X	source	modify	4	aux/Howto.cook
X	source	remove	1	aux/MANIFEST.awk
X	source	modify	2	aux/MANIFEST.sh
X	source	modify	2	common/ansi.c
X	source	modify	3	common/arglex.h
X	source	modify	4	common/error.c
X	source	modify	3	common/indent.c
X	source	modify	3	common/indent.h
X	source	modify	6	common/main.h
X	source	modify	2	common/mem.c
X	source	modify	3	common/mem.h
X
X
X
XProject "aegis.1.3", Change 22					  Page 3
XChange Details					Thu Jan	 7 14:32:16 1993
X
X	Type	Action	Edit	File Name
X	------- ------- ------- -----------
X	source	modify	4	common/option.c
X	source	modify	4	common/option.h
X	source	modify	3	common/s-v-arg.h
X	source	modify	3	common/str.h
X	source	modify	2	common/word.c
X	source	modify	3	common/word.h
X	source	modify	3	conf/ConvexOS-10
X	source	modify	2	conf/SunOS-4.1.1
X	source	modify	3	conf/SunOS-4.1.2
X	source	modify	2	conf/SunOS-4.1.3
X	source	modify	3	conf/SysV-4.0
X	source	modify	2	conf/dgux-5.4.1
X	source	modify	4	config
X	source	modify	4	doc/aegis.ms
X	source	modify	4	doc/c1.0.so
X	source	modify	3	doc/c1.4.so
X	source	modify	4	doc/c7.0.so
X	source	modify	5	doc/c7.1.so
X	source	modify	2	dot.cshrc
X	source	modify	2	dot.profile
X	source	modify	3	fmtgen/id.h
X	source	modify	4	fmtgen/lex.h
X	source	modify	2	fmtgen/parse.h
X	source	modify	4	fmtgen/parse.y
X	source	modify	2	fmtgen/type.c
X	source	modify	3	fmtgen/type.h
X	source	modify	2	fmtgen/type_integ.c
X	source	modify	2	fmtgen/type_ref.c
X	source	modify	2	fmtgen/type_strin.c
X	source	modify	2	h/stdarg.h-min
X	source	modify	2	h/stddef.h
X	source	modify	2	h/stdlib.h
X	source	modify	2	man1/aeb.1
X	source	modify	2	man1/aeca.1
X	source	modify	2	man1/aecd.1
X	source	modify	2	man1/aecpu.1
X	source	modify	2	man1/aed.1
X	source	modify	2	man1/aedb.1
X	source	modify	2	man1/aedbu.1
X	source	modify	2	man1/aede.1
X	source	modify	2	man1/aedeu.1
X	source	modify	3	man1/aeib.1
X	source	modify	2	man1/aeibu.1
X	source	modify	2	man1/aeif.1
X	source	modify	2	man1/aeip.1
X	source	modify	2	man1/ael.1
X	source	modify	2	man1/aena.1
X	source	modify	2	man1/aenc.1
X	source	modify	2	man1/aencu.1
X	source	modify	2	man1/aend.1
X	source	modify	2	man1/aenf.1
X	source	modify	2	man1/aenfu.1
X	source	modify	2	man1/aeni.1
X	source	modify	2	man1/aenpr.1
X	source	modify	2	man1/aenrls.1
X
X
X
XProject "aegis.1.3", Change 22					  Page 4
XChange Details					Thu Jan	 7 14:32:16 1993
X
X	Type	Action	Edit	File Name
X	------- ------- ------- -----------
X	source	modify	2	man1/aenrv.1
X	source	modify	2	man1/aent.1
X	source	modify	2	man1/aentu.1
X	source	modify	2	man1/aepa.1
X	source	modify	2	man1/aera.1
X	source	modify	2	man1/aerd.1
X	source	modify	2	man1/aerf.1
X	source	modify	2	man1/aeri.1
X	source	modify	2	man1/aerm.1
X	source	modify	2	man1/aermu.1
X	source	modify	2	man1/aerp.1
X	source	modify	2	man1/aerpr.1
X	source	modify	2	man1/aerpu.1
X	source	modify	2	man1/aerrv.1
X	source	modify	2	man1/aet.1
X	source	modify	2	man1/aev.1
X	source	modify	2	man1/install.sh
X	source	modify	2	man1/o__rules.so
X	source	modify	2	man1/o_anticip.so
X	source	modify	2	man1/o_auto.so
X	source	modify	2	man1/o_baselin.so
X	source	modify	2	man1/o_change.so
X	source	modify	2	man1/o_devdir.so
X	source	modify	2	man1/o_dir.so
X	source	modify	2	man1/o_help.so
X	source	modify	2	man1/o_indep.so
X	source	modify	2	man1/o_keep.so
X	source	modify	2	man1/o_lib.so
X	source	modify	2	man1/o_list.so
X	source	modify	2	man1/o_major.so
X	source	modify	2	man1/o_manual.so
X	source	modify	2	man1/o_min.so
X	source	modify	2	man1/o_minor.so
X	source	modify	2	man1/o_nolog.so
X	source	modify	2	man1/o_overw.so
X	source	modify	3	man1/o_page.so
X	source	modify	2	man1/o_project.so
X	source	modify	2	man1/o_terse.so
X	source	modify	2	man1/o_verbose.so
X	source	modify	2	man1/z_cr.so
X	source	modify	2	man1/z_exit.so
X	source	modify	2	man1/z_intuit.so
X	source	modify	2	man1/z_name.so
X	source	modify	2	man5/aecattr.5
X	source	modify	4	man5/aecstate.5
X	source	modify	2	man5/aedir.5
X	source	modify	2	man5/aegis.5
X	source	modify	2	man5/aegstate.5
X	source	modify	3	man5/aepattr.5
X	source	modify	2	man5/aepconf.5
X	source	modify	4	man5/aepstate.5
X	source	modify	2	man5/aeuconf.5
X	source	modify	2	man5/aeustate.5
X	source	modify	2	man5/install.sh
X	source	modify	2	man5/z_cr.so
X
X
X
XProject "aegis.1.3", Change 22					  Page 5
XChange Details					Thu Jan	 7 14:32:16 1993
X
X	Type	Action	Edit	File Name
X	------- ------- ------- -----------
X	source	modify	2	man5/z_name.so
X	test	modify	2	test/00/t0001a.sh
X	test	modify	7	test/00/t0002a.sh
X	test	modify	2	test/00/t0003a.sh
X	test	modify	5	test/00/t0004a.sh
X	test	modify	5	test/00/t0005a.sh
X	test	modify	5	test/00/t0006a.sh
X	test	modify	5	test/00/t0007a.sh
X	test	modify	5	test/00/t0008a.sh
X	test	modify	5	test/00/t0009a.sh
X	test	modify	5	test/00/t0010a.sh
X
XHISTORY
X	What		When		Who	Comment
X	------		------		-----	---------
X	new_change	Tue Dec 29	pmiller
X			21:37:15 1992
X	develop_begin	Tue Dec 29	pmiller Elapsed time: 2.145
X			21:38:12 1992		days.
X	develop_end	Thu Dec 31	pmiller
X			22:43:23 1992
X	review_pass	Thu Dec 31	pmiller
X			22:43:41 1992
X	integrate_begin Thu Dec 31	pmiller Elapsed time: 0.073
X			22:44:40 1992		days.
X	integrate_pass	Thu Dec 31	pmiller
X			23:17:39 1992
X
X
X
XProject "aegis.1.3", Change 23					  Page 1
XChange Details					Thu Jan	 7 14:32:17 1993
X
XNAME
X	Project "aegis.1.3", Delta 29, Change 23.
X
XSUMMARY
X	make the patch file work
X
XDESCRIPTION
X	1. make the patch file work, don't take the lock is aecp -o is
X	used.
X	2. fix bug in generated Makefile
X
X	This change is exempt from testing.  This change is exempt from
X	testing against the baseline.
X
XCAUSE
X	This change was caused by internal_bug.
X
XFILES
X	Type	Action	Edit	File Name
X	------- ------- ------- -----------
X	source	modify	9	aegis/copyfile.c
X	source	modify	3	aux/Makefile.sh
X	source	modify	4	aux/patches.sh
X	source	modify	3	man1/aecp.1
X
XHISTORY
X	What		When		Who	Comment
X	------		------		-----	---------
X	new_change	Thu Dec 31	pmiller
X			23:31:35 1992
X	develop_begin	Thu Dec 31	pmiller Elapsed time: 0.117
X			23:31:45 1992		days.
X	develop_end	Fri Jan	 1	pmiller
X			00:24:15 1993
X	review_pass	Fri Jan	 1	pmiller
X			00:24:26 1993
X	integrate_begin Fri Jan	 1	pmiller Elapsed time: 0.059
X			00:25:20 1993		days.
X	integrate_fail	Fri Jan	 1	pmiller don't take lock for -
X			00:51:49 1993		output form of aecp
X						Elapsed time: 0.035
X						days.
X	develop_end	Fri Jan	 1	pmiller
X			01:07:30 1993
X	develop_end_	Fri Jan	 1	pmiller
X	undo		01:10:05 1993
X	develop_end	Fri Jan	 1	pmiller
X			01:16:43 1993
X	review_pass	Fri Jan	 1	pmiller
X			01:16:55 1993
X	integrate_begin Fri Jan	 1	pmiller Elapsed time: 0.088
X			01:17:49 1993		days.
X	integrate_fail	Fri Jan	 1	pmiller don't create
X			01:57:38 1993		directories for output
X						when use -Output
X						Elapsed time: 0.350
X						days.
X
X
X
XProject "aegis.1.3", Change 23					  Page 2
XChange Details					Thu Jan	 7 14:32:17 1993
X
X	What		When		Who	Comment
X	------		------		-----	---------
X	develop_end	Fri Jan	 1	pmiller
X			21:05:03 1993
X	review_pass	Fri Jan	 1	pmiller
X			21:05:15 1993
X	integrate_begin Fri Jan	 1	pmiller Elapsed time: 0.135
X			21:06:23 1993		days.
X	integrate_pass	Fri Jan	 1	pmiller
X			22:07:21 1993
X
X
X
XProject "aegis.1.3", Change 24					  Page 1
XChange Details					Thu Jan	 7 14:32:18 1993
X
XNAME
X	Project "aegis.1.3", Delta 30, Change 24.
X
XSUMMARY
X	fix year in copyright notices issued
X
XDESCRIPTION
X	1. fix year in copyright notices issued
X	2. add copyright notice to the document
X	3. fix minor inconsistency in code-shadow of aegis(1) manual
X	entry.
X	4. fix typo in deu notify script
X	5. fix year in new file templates
X
X	This change is exempt from testing.  This change is exempt from
X	testing against the baseline.
X
XCAUSE
X	This change was caused by internal_enhancement.
X
XFILES
X	Type	Action	Edit	File Name
X	------- ------- ------- -----------
X	source	modify	5	aegis/help.c
X	source	modify	6	aegis/main.c
X	source	modify	5	config
X	source	modify	5	doc/c1.0.so
X	source	modify	3	man1/z_cr.so
X	source	modify	3	man5/z_cr.so
X	source	modify	3	notify/deu.sh
X
XHISTORY
X	What		When		Who	Comment
X	------		------		-----	---------
X	new_change	Fri Jan	 1	pmiller
X			22:11:32 1993
X	develop_begin	Fri Jan	 1	pmiller Elapsed time: 0.066
X			22:11:41 1993		days.
X	develop_end	Fri Jan	 1	pmiller
X			22:41:34 1993
X	develop_end_	Fri Jan	 1	pmiller Elapsed time: 0.076
X	undo		22:44:29 1993		days.
X	develop_end	Fri Jan	 1	pmiller
X			23:18:35 1993
X	review_pass	Fri Jan	 1	pmiller
X			23:19:06 1993
X	integrate_begin Fri Jan	 1	pmiller Elapsed time: 0.048
X			23:20:03 1993		days.
X	integrate_pass	Fri Jan	 1	pmiller
X			23:41:41 1993
X
X
X
XProject "aegis.1.3", Change 25					  Page 1
XChange Details					Thu Jan	 7 14:32:19 1993
X
XNAME
X	Project "aegis.1.3", Delta 31, Change 25.
X
XSUMMARY
X	fix year in more copyright notices
X
XDESCRIPTION
X	fix year in more copyright notices
X
X	This change is exempt from testing.  This change is exempt from
X	testing against the baseline.
X
XCAUSE
X	This change was caused by chain.
X
XFILES
X	Type	Action	Edit	File Name
X	------- ------- ------- -----------
X	source	modify	2	aux/ALPHA.man
X	source	modify	2	aux/BUILDING.man
X	source	modify	2	aux/README.man
X
XHISTORY
X	What		When		Who	Comment
X	------		------		-----	---------
X	new_change	Fri Jan	 1	pmiller
X			23:44:10 1993
X	develop_begin	Fri Jan	 1	pmiller Elapsed time: 0.050
X			23:44:18 1993		days.
X	develop_end	Sat Jan	 2	pmiller
X			00:06:40 1993
X	review_pass	Sat Jan	 2	pmiller
X			00:09:29 1993
X	integrate_begin Sat Jan	 2	pmiller Elapsed time: 0.667
X			00:10:26 1993		days.
X	integrate_pass	Sat Jan	 2	pmiller
X			21:40:39 1993
X
X
X
XProject "aegis.1.3", Change 26					  Page 1
XChange Details					Thu Jan	 7 14:32:20 1993
X
XNAME
X	Project "aegis.1.3", Delta 32, Change 26.
X
XSUMMARY
X	fix the generated patch file
X
XDESCRIPTION
X	fix the generated patch file
X	1. to remove the file names generated by 'diff -c' to force the
X	Index line to be used,
X	2. to put quotes around the version in the Prereq line,
X	3. to get rid of the verbose output from the history_get_command
X
X	This change is exempt from testing.  This change is exempt from
X	testing against the baseline.
X
XCAUSE
X	This change was caused by chain.
X
XFILES
X	Type	Action	Edit	File Name
X	------- ------- ------- -----------
X	source	modify	5	aux/patches.sh
X	source	modify	6	config
X
XHISTORY
X	What		When		Who	Comment
X	------		------		-----	---------
X	new_change	Sat Jan	 2	pmiller
X			22:20:32 1993
X	develop_begin	Sat Jan	 2	pmiller Elapsed time: 0.035
X			22:20:39 1993		days.
X	develop_end	Sat Jan	 2	pmiller
X			22:36:18 1993
X	review_pass	Sat Jan	 2	pmiller
X			22:37:12 1993
X	integrate_begin Sat Jan	 2	pmiller Elapsed time: 0.064
X			22:38:07 1993		days.
X	integrate_pass	Sat Jan	 2	pmiller
X			23:06:51 1993
X
X
X
XProject "aegis.1.3", Change 27					  Page 1
XChange Details					Thu Jan	 7 14:32:26 1993
X
XNAME
X	Project "aegis.1.3", Delta 33, Change 27.
X
XSUMMARY
X	user cook search list to simplify the cookbook
X
XDESCRIPTION
X	user cook search list to simplify the cookbook
X
X	This change is exempt from testing.  This change is exempt from
X	testing against the baseline.
X
XCAUSE
X	This change was caused by internal_enhancement.
X
XFILES
X	Type	Action	Edit	File Name
X	------- ------- ------- -----------
X	source	modify	5	aux/Howto.cook
X
XHISTORY
X	What		When		Who	Comment
X	------		------		-----	---------
X	new_change	Tue Jan	 5	pmiller
X			16:19:26 1993
X	develop_begin	Tue Jan	 5	pmiller Elapsed time: 0.307
X			16:19:42 1993		days.
X	develop_end	Wed Jan	 6	pmiller
X			11:07:42 1993
X	review_pass	Wed Jan	 6	pmiller
X			11:07:55 1993
X	integrate_begin Wed Jan	 6	pmiller Elapsed time: 0.168
X			11:08:52 1993		days.
X	integrate_pass	Wed Jan	 6	pmiller
X			12:24:28 1993
X
X
X
XProject "aegis.1.3", Change 28					  Page 1
XChange Details					Thu Jan	 7 14:32:27 1993
X
XNAME
X	Project "aegis.1.3", Delta 34, Change 28.
X
XSUMMARY
X	patch file not generated correctly for new files
X
XDESCRIPTION
X	patch file not generated correctly for new files
X
X	This change is exempt from testing.  This change is exempt from
X	testing against the baseline.
X
XCAUSE
X	This change was caused by chain.
X
XFILES
X	Type	Action	Edit	File Name
X	------- ------- ------- -----------
X	source	modify	10	aegis/copyfile.c
X
XHISTORY
X	What		When		Who	Comment
X	------		------		-----	---------
X	new_change	Wed Jan	 6	pmiller
X			13:43:17 1993
X	develop_begin	Wed Jan	 6	pmiller Elapsed time: 0.356
X			13:43:27 1993		days.
X	develop_end	Wed Jan	 6	pmiller
X			16:23:30 1993
X	review_pass	Wed Jan	 6	pmiller
X			16:25:14 1993
X	integrate_begin Wed Jan	 6	pmiller Elapsed time: 0.677
X			16:26:18 1993		days.
X	integrate_pass	Wed Jan	 6	pmiller
X			21:30:52 1993
X
X
X
XProject "aegis.1.3", Change 29					  Page 1
XChange Details					Thu Jan	 7 14:32:29 1993
X
XNAME
X	Project "aegis.1.3", Delta 35, Change 29.
X
XSUMMARY
X	document cook usage
X
XDESCRIPTION
X	document cook usage
X
X	This change is exempt from testing against the baseline.
X
XCAUSE
X	This change was caused by internal_enhancement.
X
XSTATE
X	This change is in 'being_integrated' state.
X
XFILES
X	Type	Action	Edit	File Name
X	------- ------- ------- -----------
X	source	modify	4	doc/aegis.ms
X	source	modify	5	doc/c1.0.so
X	source	modify	4	doc/c2.1.so
X	source	modify	4	doc/c2.2.so
X	source	modify	4	doc/c4.0.so
X	source	create		doc/c4.1.so
X	source	create		doc/c4.2.so
X	source	create		doc/c4.3.so
X	source	modify	4	doc/c6.0.so
X	source	modify	5	doc/c7.1.so
X	source	modify	4	doc/cA.0.so
X	source	modify	3	doc/cB.0.so
X	source	modify	2	dot.cshrc
X	source	modify	2	dot.profile
X	test	modify	5	test/00/t0011a.sh
X
XHISTORY
X	What		When		Who	Comment
X	------		------		-----	---------
X	new_change	Wed Jan	 6	pmiller
X			21:33:23 1993
X	develop_begin	Wed Jan	 6	pmiller Elapsed time: 0.041
X			21:36:57 1993		days.
X	develop_end	Thu Jan	 7	pmiller
X			14:25:13 1993
X	review_pass	Thu Jan	 7	pmiller
X			14:26:41 1993
X	integrate_begin Thu Jan	 7	pmiller
X			14:27:43 1993
END_OF_FILE
if test 66004 -ne `wc -c <'aux/CHANGES.1.3'`; then
    echo shar: \"'aux/CHANGES.1.3'\" unpacked with wrong size!
fi
# end of 'aux/CHANGES.1.3'
fi
echo shar: End of archive 17 \(of 19\).
cp /dev/null ark17isdone
MISSING=""
for I in 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 ; do
    if test ! -f ark${I}isdone ; then
	MISSING="${MISSING} ${I}"
    fi
done
if test "${MISSING}" = "" ; then
    echo You have unpacked all 19 archives.
    rm -f ark[1-9]isdone ark[1-9][0-9]isdone
else
    echo You still need to unpack the following archives:
    echo "        " ${MISSING}
fi
##  End of shell archive.
exit 0
