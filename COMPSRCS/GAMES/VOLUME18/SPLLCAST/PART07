Path: uunet!news.tek.com!saab!billr
From: billr@saab.CNA.TEK.COM (Bill Randle)
Newsgroups: comp.sources.games
Subject: v18i033:  spellcast - strategy game for X11, Part07/07
Date: 14 Jul 1993 19:40:41 GMT
Organization: Tektronix, Inc, Redmond, OR, USA
Lines: 1363
Approved: billr@saab.CNA.TEK.COM
Message-ID: <221nfp$rpm@ying.cna.tek.com>
NNTP-Posting-Host: saab.cna.tek.com
Xref: uunet comp.sources.games:1833

Submitted-by: Andrew Plotkin <ap1i+@andrew.cmu.edu>
Posting-number: Volume 18, Issue 33
Archive-name: spellcast/part07
Environment: X11, Xlib



#! /bin/sh
# This is a shell archive.  Remove anything before this line, then unpack
# it by saving it into a file and typing "sh file".  To overwrite existing
# files, type "sh file -c".  You can also feed this as standard input via
# unshar, or by typing "sh <file", e.g..  If this archive is complete, you
# will see the following message at the end:
#		"End of archive 7 (of 7)."
# Contents:  bitmaps/ba.bm bitmaps/bc.bm bitmaps/bd.bm bitmaps/bf.bm
#   bitmaps/bk.bm bitmaps/bn.bm bitmaps/bp.bm bitmaps/bs.bm
#   bitmaps/bu.bm bitmaps/bva.bm bitmaps/bvc.bm bitmaps/bvd.bm
#   bitmaps/bvf.bm bitmaps/bvk.bm bitmaps/bvs.bm bitmaps/bvw.bm
#   bitmaps/bw.bm bitmaps/sc.bm bitmaps/sd.bm bitmaps/sf.bm
#   bitmaps/sf2.bm bitmaps/sp.bm bitmaps/sp2.bm bitmaps/ss.bm
#   bitmaps/ss2.bm bitmaps/sw.bm etran.c makelist.c spelllist.h
#   xspell.h
# Wrapped by billr@saab on Wed Jul 14 12:32:52 1993
PATH=/bin:/usr/bin:/usr/ucb ; export PATH
if test -f 'bitmaps/ba.bm' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'bitmaps/ba.bm'\"
else
echo shar: Extracting \"'bitmaps/ba.bm'\" \(1908 characters\)
sed "s/^X//" >'bitmaps/ba.bm' <<'END_OF_FILE'
X#define ba_width 48
X#define ba_height 48
X#define ba_x_hot -1
X#define ba_y_hot -1
Xstatic char ba_bits[] = {
X   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x0f, 0x00, 0x00, 0x00, 0x00, 0xf0,
X   0x03, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x03, 0x00, 0x00, 0x00, 0x00, 0xc0,
X   0x01, 0x00, 0x00, 0x00, 0x00, 0x80, 0x01, 0x00, 0x00, 0x00, 0x00, 0x80,
X   0x01, 0x00, 0x00, 0x00, 0x00, 0x80, 0x01, 0x00, 0x00, 0x00, 0x00, 0x80,
X   0x01, 0x00, 0x00, 0x00, 0x00, 0x80, 0x01, 0x00, 0x00, 0x18, 0x00, 0x81,
X   0x01, 0x00, 0x00, 0x0c, 0xe0, 0x80, 0x81, 0x01, 0x00, 0x07, 0x1e, 0x80,
X   0xf1, 0x00, 0xe0, 0xcf, 0x03, 0x80, 0x4d, 0x00, 0x3c, 0xfe, 0x00, 0x80,
X   0x21, 0x00, 0x0f, 0x1f, 0x00, 0x9e, 0x11, 0xe0, 0x81, 0x03, 0xe0, 0x81,
X   0x11, 0x38, 0x00, 0x20, 0x1c, 0x80, 0xc9, 0x00, 0x00, 0x30, 0x00, 0x80,
X   0x3d, 0x00, 0x00, 0x1c, 0x00, 0x80, 0x05, 0x00, 0x00, 0x1e, 0x00, 0x80,
X   0x01, 0x00, 0x80, 0x0f, 0xe0, 0x8f, 0x01, 0x00, 0xe0, 0x07, 0xff, 0x81,
X   0x01, 0x00, 0xf8, 0xe7, 0x3f, 0x80, 0x01, 0x00, 0xff, 0xfb, 0x03, 0x80,
X   0x01, 0xe0, 0xff, 0x7f, 0x00, 0x80, 0x01, 0xfc, 0xff, 0x1f, 0x00, 0x80,
X   0x01, 0xff, 0xfc, 0x03, 0x00, 0x80, 0xe1, 0x1f, 0x7e, 0x00, 0x00, 0x80,
X   0xfd, 0x00, 0x1f, 0x00, 0x00, 0xa0, 0x01, 0x80, 0x07, 0x00, 0x00, 0x9f,
X   0x01, 0xc0, 0x01, 0x00, 0xf0, 0x87, 0x01, 0x64, 0x00, 0x00, 0x3f, 0x80,
X   0x01, 0x27, 0xc0, 0x01, 0x00, 0x80, 0x81, 0x07, 0x38, 0x00, 0x00, 0x80,
X   0x61, 0x02, 0x06, 0x00, 0x00, 0x80, 0x31, 0x82, 0x01, 0x00, 0x00, 0x80,
X   0x09, 0x42, 0x00, 0x00, 0x00, 0x80, 0x01, 0x33, 0x00, 0x00, 0x00, 0x80,
X   0x01, 0x09, 0x00, 0x00, 0x00, 0x80, 0x01, 0x05, 0x00, 0x00, 0x00, 0x80,
X   0x01, 0x03, 0x00, 0x00, 0x00, 0x80, 0x81, 0x01, 0x00, 0x00, 0x00, 0x80,
X   0x81, 0x00, 0x00, 0x00, 0x00, 0x80, 0x01, 0x00, 0x00, 0x00, 0x00, 0x80,
X   0x03, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x03, 0x00, 0x00, 0x00, 0x00, 0xc0,
X   0x0f, 0x00, 0x00, 0x00, 0x00, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff};
END_OF_FILE
if test 1908 -ne `wc -c <'bitmaps/ba.bm'`; then
    echo shar: \"'bitmaps/ba.bm'\" unpacked with wrong size!
fi
# end of 'bitmaps/ba.bm'
fi
if test -f 'bitmaps/bc.bm' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'bitmaps/bc.bm'\"
else
echo shar: Extracting \"'bitmaps/bc.bm'\" \(1572 characters\)
sed "s/^X//" >'bitmaps/bc.bm' <<'END_OF_FILE'
X#define bc_width 48
X#define bc_height 48
X#define bc_x_hot -1
X#define bc_y_hot -1
Xstatic char bc_bits[] = {
X0xff,0xff,0xff,0xff,0xff,0xff,0x0f,0x00,0x00,0x00,0x00,0xf0,
X0x03,0x00,0x00,0x00,0x00,0xc0,0x03,0x00,0x00,0x00,0x03,0xc0,
X0x01,0x00,0x00,0x00,0x07,0x80,0x01,0x00,0x00,0x80,0x07,0x80,
X0x01,0x00,0x00,0x80,0x07,0x80,0x01,0x00,0x00,0x80,0x07,0x80,
X0x01,0x00,0x00,0xc0,0x03,0x80,0x01,0x00,0x00,0xe0,0x03,0x80,
X0x01,0x00,0x00,0xe0,0x03,0x80,0x01,0x00,0x00,0xe0,0x01,0x80,
X0x01,0x00,0x00,0xf0,0x01,0x80,0x01,0x00,0x00,0xf0,0x01,0x80,
X0x01,0x00,0x00,0xf8,0x01,0x80,0x01,0x00,0x00,0xf8,0x00,0x80,
X0x01,0x00,0x00,0xf8,0x00,0x80,0x01,0x00,0x00,0xfc,0x00,0x80,
X0x01,0x00,0x00,0xfc,0x00,0x80,0x01,0x00,0x00,0xfc,0x00,0x80,
X0x01,0x00,0x00,0xfc,0x00,0x80,0x01,0x00,0x00,0xfc,0x00,0x80,
X0x01,0x00,0x00,0xfc,0x00,0x80,0x01,0x00,0x00,0xfe,0x00,0x80,
X0x01,0x00,0x00,0xfe,0x00,0x80,0x01,0x00,0x00,0xfe,0x00,0x80,
X0x01,0x00,0x00,0xfe,0x00,0x80,0x01,0x00,0x00,0xfc,0x01,0x80,
X0x01,0x00,0x00,0xfc,0x01,0x80,0x01,0x00,0x00,0xfc,0x01,0x80,
X0x01,0x00,0x00,0xfc,0x01,0x80,0x01,0x00,0x00,0xfc,0x01,0x80,
X0x01,0x00,0x00,0xfc,0x03,0x80,0x01,0x00,0x00,0xfc,0x03,0x80,
X0x01,0x00,0x00,0xfc,0x07,0x80,0x01,0x00,0x00,0xfc,0x07,0x80,
X0x01,0x00,0x00,0xfc,0x07,0x80,0x01,0x00,0x00,0xfc,0x0f,0x80,
X0x01,0x00,0x00,0xfe,0x0f,0x80,0x01,0x00,0x00,0xfe,0x0f,0x80,
X0x01,0x00,0x00,0xfe,0x07,0x80,0x01,0x00,0x00,0xff,0x07,0x80,
X0x01,0x00,0x80,0xff,0x07,0x80,0x01,0x00,0x80,0xff,0x03,0x80,
X0x03,0x00,0xc0,0xff,0x03,0xc0,0x03,0x00,0xf0,0xff,0x01,0xc0,
X0x0f,0x00,0xf8,0xff,0x00,0xf0,0xff,0xff,0xff,0xff,0xff,0xff};
END_OF_FILE
if test 1572 -ne `wc -c <'bitmaps/bc.bm'`; then
    echo shar: \"'bitmaps/bc.bm'\" unpacked with wrong size!
fi
# end of 'bitmaps/bc.bm'
fi
if test -f 'bitmaps/bd.bm' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'bitmaps/bd.bm'\"
else
echo shar: Extracting \"'bitmaps/bd.bm'\" \(1572 characters\)
sed "s/^X//" >'bitmaps/bd.bm' <<'END_OF_FILE'
X#define bd_width 48
X#define bd_height 48
X#define bd_x_hot -1
X#define bd_y_hot -1
Xstatic char bd_bits[] = {
X0xff,0xff,0xff,0xff,0xff,0xff,0x0f,0x00,0x00,0x00,0x00,0xf0,
X0x03,0x00,0x00,0x00,0x00,0xc0,0x03,0x00,0x00,0xc0,0x00,0xc0,
X0x01,0x00,0x00,0xc0,0x01,0x80,0x01,0x00,0x00,0xe0,0x01,0x80,
X0x01,0x00,0x00,0xe0,0x01,0x80,0x01,0x00,0x00,0xf0,0x01,0x80,
X0x01,0x00,0x00,0xf0,0x01,0x80,0x01,0x00,0x00,0xf8,0x00,0x80,
X0x01,0x00,0x00,0xf8,0x00,0x80,0x01,0x00,0x00,0xf8,0x00,0x80,
X0x01,0x00,0x00,0x7c,0x00,0x80,0x01,0x00,0x00,0x7c,0x00,0x80,
X0x01,0x00,0x00,0x7e,0x00,0x80,0x01,0x00,0x00,0x7e,0x00,0x80,
X0x01,0x00,0x00,0x3f,0x00,0x80,0x01,0x00,0x00,0x3f,0x00,0x80,
X0x01,0x00,0x80,0x3f,0x00,0x80,0x01,0x00,0xc0,0x3f,0x00,0x80,
X0x01,0x00,0xfc,0x3f,0x00,0x80,0x01,0x00,0xfc,0x3f,0x00,0x80,
X0x01,0x80,0xff,0x3f,0x00,0x80,0x01,0xc0,0xff,0xbf,0x07,0x80,
X0x01,0xc0,0xff,0xff,0x07,0x80,0x01,0xf8,0xff,0xff,0x03,0x80,
X0x01,0xf8,0xff,0xff,0x03,0x80,0x01,0xfc,0xff,0xff,0x03,0x80,
X0x01,0xfe,0xff,0xff,0x01,0x80,0x01,0xfe,0xff,0xff,0x01,0x80,
X0x01,0xfe,0xff,0xff,0x01,0x80,0x01,0xfe,0xff,0xff,0x01,0x80,
X0x01,0xfe,0xff,0xff,0x01,0x80,0x01,0xfe,0xff,0xff,0x01,0x80,
X0x01,0xfe,0xff,0xff,0x00,0x80,0x01,0xfe,0xff,0xff,0x00,0x80,
X0x01,0xfe,0xff,0x7f,0x00,0x80,0x01,0xfe,0xff,0x7f,0x00,0x80,
X0x01,0xfe,0xff,0x3f,0x00,0x80,0x01,0xfc,0xff,0x3f,0x00,0x80,
X0x01,0xfc,0xff,0x1f,0x00,0x80,0x01,0xf8,0xff,0x0f,0x00,0x80,
X0x01,0xf0,0xff,0x07,0x00,0x80,0x01,0xf0,0xff,0x07,0x00,0x80,
X0x03,0xf0,0xff,0x01,0x00,0xc0,0x03,0xf8,0xff,0x00,0x00,0xc0,
X0x0f,0xfc,0xff,0x00,0x00,0xf0,0xff,0xff,0xff,0xff,0xff,0xff};
END_OF_FILE
if test 1572 -ne `wc -c <'bitmaps/bd.bm'`; then
    echo shar: \"'bitmaps/bd.bm'\" unpacked with wrong size!
fi
# end of 'bitmaps/bd.bm'
fi
if test -f 'bitmaps/bf.bm' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'bitmaps/bf.bm'\"
else
echo shar: Extracting \"'bitmaps/bf.bm'\" \(1572 characters\)
sed "s/^X//" >'bitmaps/bf.bm' <<'END_OF_FILE'
X#define bf_width 48
X#define bf_height 48
X#define bf_x_hot -1
X#define bf_y_hot -1
Xstatic char bf_bits[] = {
X0xff,0xff,0xff,0xff,0xff,0xff,0x0f,0x00,0x00,0x00,0x00,0xf0,
X0x03,0x00,0x00,0x00,0x00,0xc0,0x03,0x00,0x00,0x00,0x00,0xc0,
X0x01,0x00,0x00,0x00,0x00,0x80,0x01,0x00,0x00,0x00,0x00,0x80,
X0x01,0x00,0x00,0x00,0x00,0x80,0x01,0x00,0x00,0x00,0x00,0x80,
X0x01,0x00,0x00,0x00,0x00,0x80,0x01,0x00,0xc0,0xe0,0x01,0x80,
X0x01,0x00,0xe0,0xf1,0x01,0x80,0x01,0x00,0xf0,0xf8,0x00,0x80,
X0x01,0x00,0x7c,0x7c,0xc0,0x83,0x01,0x00,0x3e,0x3e,0xf0,0x83,
X0x01,0x00,0x1f,0x1f,0xf8,0x81,0x01,0x18,0x8f,0x0f,0xfc,0x80,
X0x01,0x9c,0xcf,0x07,0x3e,0x80,0x01,0x9e,0xc7,0x07,0x3f,0x80,
X0x01,0xcf,0xe7,0x83,0x1f,0x80,0x01,0xe7,0xe7,0x83,0x0f,0x80,
X0x81,0xe7,0xe3,0xc3,0x0f,0x80,0x81,0xf3,0xf3,0xc3,0x07,0x80,
X0xc1,0xf3,0xf3,0xe3,0x07,0x80,0xc1,0xfb,0xf9,0xf7,0x03,0x80,
X0xc1,0xfb,0xff,0xff,0x03,0x80,0xc1,0xff,0xff,0xff,0x03,0x80,
X0xc1,0xff,0xff,0xff,0x03,0x80,0xc1,0xff,0xff,0xff,0x81,0x83,
X0xc1,0xff,0xff,0xff,0x81,0x83,0xc1,0xff,0xff,0xff,0xc1,0x83,
X0xc1,0xff,0xff,0xff,0xe1,0x83,0xc1,0xff,0xff,0xff,0xf1,0x83,
X0xc1,0xff,0xff,0xff,0xf9,0x81,0x81,0xff,0xff,0xff,0xff,0x81,
X0x81,0xff,0xff,0xff,0xff,0x80,0x81,0xff,0xff,0xff,0x7f,0x80,
X0x81,0xff,0xff,0xff,0x3f,0x80,0x81,0xff,0xff,0xff,0x1f,0x80,
X0x01,0xff,0xff,0xff,0x0f,0x80,0x01,0xfe,0xff,0xff,0x03,0x80,
X0x01,0xfe,0xff,0xff,0x01,0x80,0x01,0xff,0xff,0xff,0x00,0x80,
X0x81,0xff,0xff,0x3f,0x00,0x80,0xc1,0xff,0xff,0x0f,0x00,0x80,
X0xe3,0xff,0xff,0x07,0x00,0xc0,0xf3,0xff,0xff,0x01,0x00,0xc0,
X0xff,0xff,0xff,0x01,0x00,0xf0,0xff,0xff,0xff,0xff,0xff,0xff};
END_OF_FILE
if test 1572 -ne `wc -c <'bitmaps/bf.bm'`; then
    echo shar: \"'bitmaps/bf.bm'\" unpacked with wrong size!
fi
# end of 'bitmaps/bf.bm'
fi
if test -f 'bitmaps/bk.bm' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'bitmaps/bk.bm'\"
else
echo shar: Extracting \"'bitmaps/bk.bm'\" \(1908 characters\)
sed "s/^X//" >'bitmaps/bk.bm' <<'END_OF_FILE'
X#define bk_width 48
X#define bk_height 48
X#define bk_x_hot -1
X#define bk_y_hot -1
Xstatic char bk_bits[] = {
X   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x0f, 0x20, 0x01, 0x00, 0x00, 0xf0,
X   0x03, 0x20, 0x03, 0x00, 0x00, 0xc0, 0x03, 0x20, 0x02, 0x00, 0x00, 0xc0,
X   0x01, 0x40, 0x06, 0x00, 0x00, 0x80, 0x01, 0x40, 0x04, 0x00, 0x00, 0x80,
X   0x01, 0x40, 0x04, 0x00, 0x00, 0x80, 0x01, 0x40, 0x0c, 0x00, 0x00, 0x80,
X   0x01, 0x40, 0x08, 0x00, 0x00, 0x80, 0x01, 0x80, 0x18, 0x00, 0x00, 0x80,
X   0x01, 0x80, 0x10, 0x00, 0x00, 0x80, 0x01, 0x80, 0x30, 0x00, 0x00, 0x80,
X   0x01, 0x80, 0x20, 0x00, 0x00, 0x80, 0x01, 0x00, 0x61, 0x00, 0x00, 0x80,
X   0x01, 0x00, 0xc1, 0x00, 0x00, 0x80, 0x01, 0x00, 0x81, 0x00, 0x00, 0x80,
X   0x01, 0x00, 0x81, 0x01, 0x00, 0x80, 0x01, 0x00, 0xe2, 0x0f, 0x00, 0x80,
X   0x01, 0x00, 0xf2, 0x1f, 0x00, 0x80, 0x01, 0x00, 0xfa, 0x3f, 0x00, 0x80,
X   0x01, 0x00, 0xfe, 0x3f, 0x00, 0x80, 0x01, 0x00, 0xfe, 0x3f, 0x00, 0x80,
X   0x01, 0x00, 0xff, 0x3f, 0x00, 0x80, 0x01, 0x00, 0xff, 0xff, 0x00, 0x80,
X   0x01, 0x00, 0xff, 0xff, 0x01, 0x80, 0x01, 0x00, 0xff, 0xff, 0x03, 0x80,
X   0x01, 0x00, 0xff, 0xff, 0x03, 0x80, 0x01, 0x80, 0xff, 0xff, 0x03, 0x80,
X   0x01, 0x80, 0xff, 0xff, 0x01, 0x80, 0x01, 0x80, 0xff, 0xff, 0x03, 0x80,
X   0x01, 0x80, 0xff, 0xff, 0x07, 0x80, 0x01, 0x80, 0xff, 0xff, 0x07, 0x80,
X   0x01, 0x80, 0xff, 0xff, 0x07, 0x80, 0x01, 0x80, 0xff, 0xff, 0x07, 0x80,
X   0x01, 0x80, 0xff, 0xff, 0x03, 0x80, 0x01, 0xc0, 0xff, 0xff, 0x07, 0x80,
X   0x01, 0xc0, 0xff, 0xff, 0x0f, 0x80, 0x01, 0xc0, 0xff, 0xff, 0x0f, 0x80,
X   0x01, 0xc0, 0xff, 0xff, 0x0f, 0x80, 0x01, 0xc0, 0xff, 0xff, 0x0f, 0x80,
X   0x01, 0xe0, 0xff, 0xff, 0x07, 0x80, 0x01, 0xe0, 0xff, 0xff, 0x07, 0x80,
X   0x01, 0xf0, 0xff, 0xff, 0x03, 0x80, 0x01, 0xf0, 0xff, 0xff, 0x03, 0x80,
X   0x03, 0xf8, 0xff, 0xff, 0x01, 0xc0, 0x03, 0xf8, 0xff, 0xff, 0x00, 0xc0,
X   0x0f, 0xfc, 0xff, 0x7f, 0x00, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff};
END_OF_FILE
if test 1908 -ne `wc -c <'bitmaps/bk.bm'`; then
    echo shar: \"'bitmaps/bk.bm'\" unpacked with wrong size!
fi
# end of 'bitmaps/bk.bm'
fi
if test -f 'bitmaps/bn.bm' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'bitmaps/bn.bm'\"
else
echo shar: Extracting \"'bitmaps/bn.bm'\" \(1532 characters\)
sed "s/^X//" >'bitmaps/bn.bm' <<'END_OF_FILE'
X#define bn_width 48
X#define bn_height 48
Xstatic char bn_bits[] = {
X0xff,0xff,0xff,0xff,0xff,0xff,0x0f,0x00,0x00,0x00,0x00,0xf0,
X0x03,0x00,0x00,0x00,0x00,0xc0,0x03,0x00,0x00,0x00,0x00,0xc0,
X0x01,0x00,0x00,0x00,0x00,0x80,0x01,0x00,0x00,0x00,0x00,0x80,
X0x01,0x00,0x00,0x00,0x00,0x80,0x01,0x00,0x00,0x00,0x00,0x80,
X0x01,0x00,0x00,0x00,0x00,0x80,0x01,0x00,0x00,0x00,0x00,0x80,
X0x01,0x00,0x00,0x00,0x00,0x80,0x01,0x00,0x00,0x00,0x00,0x80,
X0x01,0x00,0x00,0x00,0x00,0x80,0x01,0x00,0x00,0x00,0x00,0x80,
X0x01,0x00,0x00,0x00,0x00,0x80,0x01,0x00,0x00,0x00,0x00,0x80,
X0x01,0x00,0x00,0x00,0x00,0x80,0x01,0x00,0x00,0x00,0x00,0x80,
X0x01,0x00,0x00,0x00,0x00,0x80,0x01,0x00,0x00,0x00,0x00,0x80,
X0x01,0x00,0x00,0x00,0x00,0x80,0x01,0x00,0x00,0x00,0x00,0x80,
X0x01,0x00,0x00,0x00,0x00,0x80,0x01,0x00,0x00,0x00,0x00,0x80,
X0x01,0x00,0x00,0x00,0x00,0x80,0x01,0x00,0x00,0x00,0x00,0x80,
X0x01,0x00,0x00,0x00,0x00,0x80,0x01,0x00,0x00,0x00,0x00,0x80,
X0x01,0x00,0x00,0x00,0x00,0x80,0x01,0x00,0x00,0x00,0x00,0x80,
X0x01,0x00,0x00,0x00,0x00,0x80,0x01,0x00,0x00,0x00,0x00,0x80,
X0x01,0x00,0x00,0x00,0x00,0x80,0x01,0x00,0x00,0x00,0x00,0x80,
X0x01,0x00,0x00,0x00,0x00,0x80,0x01,0x00,0x00,0x00,0x00,0x80,
X0x01,0x00,0x00,0x00,0x00,0x80,0x01,0x00,0x00,0x00,0x00,0x80,
X0x01,0x00,0x00,0x00,0x00,0x80,0x01,0x00,0x00,0x00,0x00,0x80,
X0x01,0x00,0x00,0x00,0x00,0x80,0x01,0x00,0x00,0x00,0x00,0x80,
X0x01,0x00,0x00,0x00,0x00,0x80,0x01,0x00,0x00,0x00,0x00,0x80,
X0x03,0x00,0x00,0x00,0x00,0xc0,0x03,0x00,0x00,0x00,0x00,0xc0,
X0x0f,0x00,0x00,0x00,0x00,0xf0,0xff,0xff,0xff,0xff,0xff,0xff};
END_OF_FILE
if test 1532 -ne `wc -c <'bitmaps/bn.bm'`; then
    echo shar: \"'bitmaps/bn.bm'\" unpacked with wrong size!
fi
# end of 'bitmaps/bn.bm'
fi
if test -f 'bitmaps/bp.bm' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'bitmaps/bp.bm'\"
else
echo shar: Extracting \"'bitmaps/bp.bm'\" \(1572 characters\)
sed "s/^X//" >'bitmaps/bp.bm' <<'END_OF_FILE'
X#define bp_width 48
X#define bp_height 48
X#define bp_x_hot -1
X#define bp_y_hot -1
Xstatic char bp_bits[] = {
X0xff,0xff,0xff,0xff,0xff,0xff,0x0f,0x00,0x00,0x00,0x00,0xf0,
X0x03,0x00,0x80,0x01,0x00,0xc0,0x03,0x00,0x80,0x03,0x00,0xc0,
X0x01,0x00,0xc0,0x63,0x00,0x80,0x01,0x00,0xc0,0xe3,0x00,0x80,
X0x01,0x00,0xc0,0xf3,0x00,0x80,0x01,0x00,0xc6,0xf3,0x00,0x80,
X0x01,0x00,0xc7,0xf3,0x00,0x80,0x01,0x00,0xcf,0xf3,0x00,0x80,
X0x01,0x00,0xcf,0xf3,0x00,0x80,0x01,0x00,0xcf,0xf3,0x00,0x80,
X0x01,0x00,0xcf,0xf3,0x00,0x80,0x01,0x00,0xcf,0xf3,0x00,0x80,
X0x01,0x00,0xcf,0xf3,0x00,0x80,0x01,0x00,0xcf,0xf3,0x00,0x80,
X0x01,0x10,0xcf,0xf3,0x00,0x80,0x01,0x38,0xcf,0xf3,0x00,0x80,
X0x01,0x38,0xcf,0xf3,0x00,0x80,0x01,0x38,0xcf,0xf3,0x00,0x80,
X0x01,0x38,0xcf,0xf3,0x00,0x80,0x01,0x3c,0xcf,0xf7,0x00,0x83,
X0x01,0xbc,0xef,0xff,0x80,0x83,0x01,0xbc,0xff,0xff,0x80,0x83,
X0x01,0xbc,0xff,0xff,0xc0,0x83,0x01,0xbc,0xff,0xff,0xc0,0x83,
X0x01,0xfc,0xff,0xff,0xe1,0x83,0x01,0xfc,0xff,0xff,0xe1,0x83,
X0x01,0xfc,0xff,0xff,0xf1,0x81,0x01,0xfc,0xff,0xff,0xf9,0x81,
X0x01,0xfc,0xff,0xff,0xfd,0x81,0x01,0xfc,0xff,0xff,0xff,0x81,
X0x01,0xfc,0xff,0xff,0xff,0x80,0x01,0xfc,0xff,0xff,0xff,0x80,
X0x01,0xfc,0xff,0xff,0x7f,0x80,0x01,0xfc,0xff,0xff,0x3f,0x80,
X0x01,0xf8,0xff,0xff,0x3f,0x80,0x01,0xf8,0xff,0xff,0x1f,0x80,
X0x01,0xf8,0xff,0xff,0x0f,0x80,0x01,0xf8,0xff,0xff,0x0f,0x80,
X0x01,0xf0,0xff,0xff,0x07,0x80,0x01,0xf0,0xff,0xff,0x07,0x80,
X0x01,0xf0,0xff,0xff,0x03,0x80,0x01,0xe0,0xff,0xff,0x01,0x80,
X0x03,0xe0,0xff,0xff,0x01,0xc0,0x03,0xc0,0xff,0x7f,0x00,0xc0,
X0x0f,0x80,0xff,0x7f,0x00,0xf0,0xff,0xff,0xff,0xff,0xff,0xff};
END_OF_FILE
if test 1572 -ne `wc -c <'bitmaps/bp.bm'`; then
    echo shar: \"'bitmaps/bp.bm'\" unpacked with wrong size!
fi
# end of 'bitmaps/bp.bm'
fi
if test -f 'bitmaps/bs.bm' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'bitmaps/bs.bm'\"
else
echo shar: Extracting \"'bitmaps/bs.bm'\" \(1572 characters\)
sed "s/^X//" >'bitmaps/bs.bm' <<'END_OF_FILE'
X#define bs_width 48
X#define bs_height 48
X#define bs_x_hot -1
X#define bs_y_hot -1
Xstatic char bs_bits[] = {
X0xff,0xff,0xff,0xff,0xff,0xff,0x0f,0x00,0x00,0x00,0x00,0xf0,
X0x03,0x00,0x10,0x00,0x02,0xc0,0x03,0x00,0x20,0x00,0x02,0xc0,
X0x01,0x00,0x40,0x00,0x02,0x80,0x01,0x00,0x40,0x00,0x01,0x80,
X0x01,0x00,0x80,0x00,0x01,0x80,0x01,0x00,0x00,0x00,0x00,0x80,
X0x01,0x00,0x00,0x00,0x00,0x83,0x01,0x00,0x00,0x00,0xe0,0x80,
X0x01,0x00,0x00,0x1c,0x10,0x80,0x01,0x00,0x00,0x3f,0x00,0x80,
X0x01,0x00,0xe0,0x3f,0x00,0x80,0x01,0x00,0xf0,0xff,0x00,0x80,
X0x01,0x00,0xfc,0xff,0x01,0x80,0x01,0x00,0xff,0xff,0x01,0x80,
X0x01,0x80,0xff,0xff,0x81,0xbf,0x01,0xc0,0xff,0xff,0x01,0x80,
X0x01,0xe0,0xff,0xf9,0x01,0x80,0x01,0xf0,0xff,0xf8,0x01,0x80,
X0x01,0xf8,0x7f,0xf8,0x00,0x80,0x01,0xfc,0x3f,0xfc,0x00,0x80,
X0x01,0xfe,0x1f,0xfc,0x20,0x80,0x01,0xff,0x0f,0xfe,0x40,0x80,
X0x01,0xff,0x07,0x7f,0x80,0x80,0x81,0xff,0x87,0x7f,0x00,0x81,
X0x81,0xff,0xc3,0x7f,0x00,0x80,0xc1,0xff,0xfb,0x7f,0x00,0x80,
X0xc1,0xff,0xff,0xff,0x00,0x80,0xc1,0xff,0xff,0xff,0x01,0x80,
X0xc1,0xff,0xff,0xff,0x03,0x80,0xc1,0xff,0xff,0xff,0x07,0x80,
X0x81,0xff,0xff,0xff,0x07,0x80,0x01,0xff,0xff,0xff,0x07,0x80,
X0x01,0xff,0xff,0xff,0x0f,0x80,0x01,0xfc,0xff,0xff,0x0f,0x80,
X0x01,0xf8,0xff,0xff,0x0f,0x80,0x01,0xf0,0xff,0xff,0x0f,0x80,
X0x01,0xe0,0xff,0xff,0x0f,0x80,0x01,0x80,0xff,0xff,0x0f,0x80,
X0x01,0x00,0xff,0xff,0x0f,0x80,0x01,0x00,0xfe,0xff,0x0f,0x80,
X0x01,0x00,0xfc,0xff,0x07,0x80,0x01,0x00,0xf8,0xff,0x07,0x80,
X0x03,0x00,0xf8,0xff,0x03,0xc0,0x03,0x00,0xe0,0xff,0x03,0xc0,
X0x0f,0x00,0xe0,0xff,0x01,0xf0,0xff,0xff,0xff,0xff,0xff,0xff};
END_OF_FILE
if test 1572 -ne `wc -c <'bitmaps/bs.bm'`; then
    echo shar: \"'bitmaps/bs.bm'\" unpacked with wrong size!
fi
# end of 'bitmaps/bs.bm'
fi
if test -f 'bitmaps/bu.bm' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'bitmaps/bu.bm'\"
else
echo shar: Extracting \"'bitmaps/bu.bm'\" \(1908 characters\)
sed "s/^X//" >'bitmaps/bu.bm' <<'END_OF_FILE'
X#define bu_width 48
X#define bu_height 48
X#define bu_x_hot -1
X#define bu_y_hot -1
Xstatic char bu_bits[] = {
X   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x0f, 0x00, 0x00, 0x00, 0x00, 0xf0,
X   0x03, 0x00, 0x08, 0x00, 0x00, 0xc0, 0x03, 0x0a, 0x00, 0x00, 0x00, 0xc0,
X   0x09, 0x00, 0x41, 0x80, 0x20, 0x80, 0xa5, 0x00, 0x00, 0x00, 0x00, 0x80,
X   0x21, 0x10, 0x00, 0x04, 0x00, 0x88, 0x55, 0x08, 0x44, 0x00, 0x02, 0x82,
X   0x01, 0x01, 0x00, 0x00, 0x00, 0xa0, 0x51, 0x08, 0x41, 0x04, 0x40, 0x80,
X   0x85, 0x08, 0x04, 0x20, 0x02, 0x84, 0x61, 0x26, 0x20, 0x00, 0x00, 0x80,
X   0x89, 0x10, 0x01, 0x01, 0x10, 0x90, 0x01, 0x44, 0x08, 0x00, 0x80, 0x80,
X   0x21, 0x20, 0x41, 0x04, 0x04, 0x88, 0x11, 0x49, 0x08, 0x40, 0x20, 0x80,
X   0x01, 0x80, 0x82, 0x00, 0x02, 0x82, 0x45, 0x50, 0x28, 0x15, 0x40, 0x80,
X   0x11, 0x04, 0x12, 0x80, 0x28, 0xa8, 0x01, 0xa1, 0xa4, 0x24, 0x82, 0x82,
X   0x23, 0x00, 0x01, 0x82, 0x28, 0x88, 0x91, 0x52, 0xaa, 0x10, 0x40, 0xa2,
X   0x21, 0x08, 0x05, 0x25, 0x09, 0x90, 0x09, 0x42, 0x90, 0x90, 0x42, 0xad,
X   0x85, 0x10, 0x02, 0x2a, 0x08, 0x80, 0x01, 0xa4, 0x88, 0x40, 0x42, 0xa0,
X   0x49, 0x00, 0x22, 0x24, 0x10, 0x84, 0x01, 0x88, 0x00, 0x51, 0x09, 0x81,
X   0x41, 0x02, 0x48, 0x84, 0x44, 0x90, 0x11, 0x20, 0x02, 0x00, 0x12, 0x84,
X   0x01, 0x00, 0x80, 0x90, 0x24, 0xa1, 0x05, 0x08, 0x01, 0x04, 0x10, 0x88,
X   0x81, 0x00, 0x48, 0x00, 0x42, 0x82, 0x01, 0x00, 0x00, 0x81, 0x28, 0xc5,
X   0x01, 0x00, 0x00, 0x10, 0x40, 0x88, 0x01, 0x08, 0x00, 0x00, 0x22, 0x91,
X   0x01, 0x00, 0x01, 0x00, 0x08, 0xca, 0x11, 0x00, 0x20, 0x82, 0x40, 0x80,
X   0x01, 0x00, 0x00, 0x00, 0x08, 0xa9, 0x01, 0x00, 0x00, 0x10, 0x00, 0xd4,
X   0x01, 0x10, 0x00, 0x80, 0x14, 0x80, 0x01, 0x00, 0x20, 0x00, 0x00, 0x91,
X   0x01, 0x00, 0x00, 0x08, 0x00, 0x80, 0x01, 0x00, 0x00, 0x40, 0x08, 0x80,
X   0x03, 0x00, 0x00, 0x00, 0x80, 0xd0, 0x03, 0x02, 0x08, 0x00, 0x01, 0xc0,
X   0x0f, 0x00, 0x00, 0x00, 0x00, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff};
END_OF_FILE
if test 1908 -ne `wc -c <'bitmaps/bu.bm'`; then
    echo shar: \"'bitmaps/bu.bm'\" unpacked with wrong size!
fi
# end of 'bitmaps/bu.bm'
fi
if test -f 'bitmaps/bva.bm' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'bitmaps/bva.bm'\"
else
echo shar: Extracting \"'bitmaps/bva.bm'\" \(1913 characters\)
sed "s/^X//" >'bitmaps/bva.bm' <<'END_OF_FILE'
X#define bva_width 48
X#define bva_height 48
X#define bva_x_hot -1
X#define bva_y_hot -1
Xstatic char bva_bits[] = {
X   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x0f, 0x00, 0x00, 0x00, 0x00, 0xf0,
X   0x03, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x03, 0x00, 0x00, 0x00, 0x00, 0xc0,
X   0x01, 0x00, 0x00, 0x00, 0x00, 0x80, 0x01, 0x00, 0x00, 0x00, 0x00, 0x80,
X   0x01, 0x00, 0x00, 0x00, 0x00, 0x80, 0x01, 0x00, 0x00, 0x00, 0x00, 0x80,
X   0x01, 0x00, 0x00, 0x00, 0x00, 0x80, 0x01, 0x00, 0x00, 0x18, 0x00, 0x81,
X   0x01, 0x00, 0x00, 0x0c, 0xe0, 0x80, 0x81, 0x01, 0x00, 0x07, 0x1e, 0x80,
X   0xf1, 0x00, 0xe0, 0xcf, 0x03, 0x80, 0x4d, 0x00, 0x3c, 0xfe, 0x00, 0x80,
X   0x21, 0x00, 0x0f, 0x1f, 0x00, 0x9e, 0x11, 0xe0, 0x81, 0x03, 0xe0, 0x81,
X   0x11, 0x38, 0x00, 0x20, 0x1c, 0x80, 0xc9, 0x00, 0x00, 0x30, 0x00, 0x80,
X   0x3d, 0x00, 0x00, 0x1c, 0x00, 0x80, 0x05, 0x00, 0x00, 0x1e, 0x00, 0x80,
X   0x01, 0x00, 0x80, 0x0f, 0xe0, 0x8f, 0x01, 0x00, 0xe0, 0x07, 0xff, 0x81,
X   0x01, 0x00, 0xf8, 0xe7, 0x3f, 0x80, 0x01, 0x00, 0xff, 0xfb, 0x03, 0x80,
X   0x01, 0xe0, 0xff, 0x7f, 0x00, 0x80, 0x01, 0xfc, 0xff, 0x1f, 0x00, 0x80,
X   0x01, 0xff, 0xfc, 0x03, 0x00, 0x80, 0xe1, 0x1f, 0x7e, 0x00, 0x00, 0x80,
X   0xfd, 0x00, 0x1f, 0x00, 0x00, 0xa0, 0x01, 0x80, 0x07, 0x00, 0x00, 0x9f,
X   0x01, 0xc0, 0x01, 0x00, 0xf0, 0x87, 0x01, 0x64, 0x00, 0x00, 0x3f, 0x80,
X   0x01, 0x27, 0xc0, 0x01, 0x00, 0x80, 0x81, 0x07, 0x38, 0x00, 0x00, 0x80,
X   0x61, 0x02, 0x06, 0x00, 0x00, 0x80, 0x31, 0x82, 0x01, 0x00, 0x00, 0x80,
X   0x09, 0x42, 0x00, 0x00, 0x00, 0x80, 0x01, 0x33, 0x00, 0x00, 0x00, 0x80,
X   0x01, 0x09, 0x00, 0x00, 0x00, 0x80, 0x01, 0x05, 0x00, 0x00, 0x00, 0x80,
X   0x01, 0x03, 0x00, 0x00, 0x00, 0x80, 0x81, 0x01, 0x00, 0x00, 0x00, 0x80,
X   0x81, 0x00, 0x00, 0x00, 0x00, 0x80, 0x01, 0x00, 0x00, 0x00, 0x00, 0x80,
X   0x03, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x03, 0x00, 0x00, 0x00, 0x00, 0xc0,
X   0x0f, 0x00, 0x00, 0x00, 0x00, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff};
END_OF_FILE
if test 1913 -ne `wc -c <'bitmaps/bva.bm'`; then
    echo shar: \"'bitmaps/bva.bm'\" unpacked with wrong size!
fi
# end of 'bitmaps/bva.bm'
fi
if test -f 'bitmaps/bvc.bm' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'bitmaps/bvc.bm'\"
else
echo shar: Extracting \"'bitmaps/bvc.bm'\" \(1577 characters\)
sed "s/^X//" >'bitmaps/bvc.bm' <<'END_OF_FILE'
X#define bvc_width 48
X#define bvc_height 48
X#define bvc_x_hot -1
X#define bvc_y_hot -1
Xstatic char bvc_bits[] = {
X0xff,0xff,0xff,0xff,0xff,0xff,0x0f,0x00,0x00,0x00,0x00,0xf0,
X0x03,0x00,0x00,0x00,0x00,0xc0,0x03,0xc0,0x00,0x00,0x00,0xc0,
X0x01,0xe0,0x00,0x00,0x00,0x80,0x01,0xe0,0x01,0x00,0x00,0x80,
X0x01,0xe0,0x01,0x00,0x00,0x80,0x01,0xe0,0x01,0x00,0x00,0x80,
X0x01,0xc0,0x03,0x00,0x00,0x80,0x01,0xc0,0x07,0x00,0x00,0x80,
X0x01,0xc0,0x07,0x00,0x00,0x80,0x01,0x80,0x07,0x00,0x00,0x80,
X0x01,0x80,0x0f,0x00,0x00,0x80,0x01,0x80,0x0f,0x00,0x00,0x80,
X0x01,0x80,0x1f,0x00,0x00,0x80,0x01,0x00,0x1f,0x00,0x00,0x80,
X0x01,0x00,0x1f,0x00,0x00,0x80,0x01,0x00,0x3f,0x00,0x00,0x80,
X0x01,0x00,0x3f,0x00,0x00,0x80,0x01,0x00,0x3f,0x00,0x00,0x80,
X0x01,0x00,0x3f,0x00,0x00,0x80,0x01,0x00,0x3f,0x00,0x00,0x80,
X0x01,0x00,0x3f,0x00,0x00,0x80,0x01,0x00,0x7f,0x00,0x00,0x80,
X0x01,0x00,0x7f,0x00,0x00,0x80,0x01,0x00,0x7f,0x00,0x00,0x80,
X0x01,0x00,0x7f,0x00,0x00,0x80,0x01,0x80,0x3f,0x00,0x00,0x80,
X0x01,0x80,0x3f,0x00,0x00,0x80,0x01,0x80,0x3f,0x00,0x00,0x80,
X0x01,0x80,0x3f,0x00,0x00,0x80,0x01,0x80,0x3f,0x00,0x00,0x80,
X0x01,0xc0,0x3f,0x00,0x00,0x80,0x01,0xc0,0x3f,0x00,0x00,0x80,
X0x01,0xe0,0x3f,0x00,0x00,0x80,0x01,0xe0,0x3f,0x00,0x00,0x80,
X0x01,0xe0,0x3f,0x00,0x00,0x80,0x01,0xf0,0x3f,0x00,0x00,0x80,
X0x01,0xf0,0x7f,0x00,0x00,0x80,0x01,0xf0,0x7f,0x00,0x00,0x80,
X0x01,0xe0,0x7f,0x00,0x00,0x80,0x01,0xe0,0xff,0x00,0x00,0x80,
X0x01,0xe0,0xff,0x01,0x00,0x80,0x01,0xc0,0xff,0x01,0x00,0x80,
X0x03,0xc0,0xff,0x03,0x00,0xc0,0x03,0x80,0xff,0x0f,0x00,0xc0,
X0x0f,0x00,0xff,0x1f,0x00,0xf0,0xff,0xff,0xff,0xff,0xff,0xff};
END_OF_FILE
if test 1577 -ne `wc -c <'bitmaps/bvc.bm'`; then
    echo shar: \"'bitmaps/bvc.bm'\" unpacked with wrong size!
fi
# end of 'bitmaps/bvc.bm'
fi
if test -f 'bitmaps/bvd.bm' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'bitmaps/bvd.bm'\"
else
echo shar: Extracting \"'bitmaps/bvd.bm'\" \(1577 characters\)
sed "s/^X//" >'bitmaps/bvd.bm' <<'END_OF_FILE'
X#define bvd_width 48
X#define bvd_height 48
X#define bvd_x_hot -1
X#define bvd_y_hot -1
Xstatic char bvd_bits[] = {
X0xff,0xff,0xff,0xff,0xff,0xff,0x0f,0x00,0x00,0x00,0x00,0xf0,
X0x03,0x00,0x00,0x00,0x00,0xc0,0x03,0x00,0x03,0x00,0x00,0xc0,
X0x01,0x80,0x03,0x00,0x00,0x80,0x01,0x80,0x07,0x00,0x00,0x80,
X0x01,0x80,0x07,0x00,0x00,0x80,0x01,0x80,0x0f,0x00,0x00,0x80,
X0x01,0x80,0x0f,0x00,0x00,0x80,0x01,0x00,0x1f,0x00,0x00,0x80,
X0x01,0x00,0x1f,0x00,0x00,0x80,0x01,0x00,0x1f,0x00,0x00,0x80,
X0x01,0x00,0x3e,0x00,0x00,0x80,0x01,0x00,0x3e,0x00,0x00,0x80,
X0x01,0x00,0x7e,0x00,0x00,0x80,0x01,0x00,0x7e,0x00,0x00,0x80,
X0x01,0x00,0xfc,0x00,0x00,0x80,0x01,0x00,0xfc,0x00,0x00,0x80,
X0x01,0x00,0xfc,0x01,0x00,0x80,0x01,0x00,0xfc,0x03,0x00,0x80,
X0x01,0x00,0xfc,0x3f,0x00,0x80,0x01,0x00,0xfc,0x3f,0x00,0x80,
X0x01,0x00,0xfc,0xff,0x01,0x80,0x01,0xe0,0xfd,0xff,0x03,0x80,
X0x01,0xe0,0xff,0xff,0x03,0x80,0x01,0xc0,0xff,0xff,0x1f,0x80,
X0x01,0xc0,0xff,0xff,0x1f,0x80,0x01,0xc0,0xff,0xff,0x3f,0x80,
X0x01,0x80,0xff,0xff,0x7f,0x80,0x01,0x80,0xff,0xff,0x7f,0x80,
X0x01,0x80,0xff,0xff,0x7f,0x80,0x01,0x80,0xff,0xff,0x7f,0x80,
X0x01,0x80,0xff,0xff,0x7f,0x80,0x01,0x80,0xff,0xff,0x7f,0x80,
X0x01,0x00,0xff,0xff,0x7f,0x80,0x01,0x00,0xff,0xff,0x7f,0x80,
X0x01,0x00,0xfe,0xff,0x7f,0x80,0x01,0x00,0xfe,0xff,0x7f,0x80,
X0x01,0x00,0xfc,0xff,0x7f,0x80,0x01,0x00,0xfc,0xff,0x3f,0x80,
X0x01,0x00,0xf8,0xff,0x3f,0x80,0x01,0x00,0xf0,0xff,0x1f,0x80,
X0x01,0x00,0xe0,0xff,0x0f,0x80,0x01,0x00,0xe0,0xff,0x0f,0x80,
X0x03,0x00,0x80,0xff,0x0f,0xc0,0x03,0x00,0x00,0xff,0x1f,0xc0,
X0x0f,0x00,0x00,0xff,0x3f,0xf0,0xff,0xff,0xff,0xff,0xff,0xff};
END_OF_FILE
if test 1577 -ne `wc -c <'bitmaps/bvd.bm'`; then
    echo shar: \"'bitmaps/bvd.bm'\" unpacked with wrong size!
fi
# end of 'bitmaps/bvd.bm'
fi
if test -f 'bitmaps/bvf.bm' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'bitmaps/bvf.bm'\"
else
echo shar: Extracting \"'bitmaps/bvf.bm'\" \(1577 characters\)
sed "s/^X//" >'bitmaps/bvf.bm' <<'END_OF_FILE'
X#define bvf_width 48
X#define bvf_height 48
X#define bvf_x_hot -1
X#define bvf_y_hot -1
Xstatic char bvf_bits[] = {
X0xff,0xff,0xff,0xff,0xff,0xff,0x0f,0x00,0x00,0x00,0x00,0xf0,
X0x03,0x00,0x00,0x00,0x00,0xc0,0x03,0x00,0x00,0x00,0x00,0xc0,
X0x01,0x00,0x00,0x00,0x00,0x80,0x01,0x00,0x00,0x00,0x00,0x80,
X0x01,0x00,0x00,0x00,0x00,0x80,0x01,0x00,0x00,0x00,0x00,0x80,
X0x01,0x00,0x00,0x00,0x00,0x80,0x01,0x80,0x07,0x03,0x00,0x80,
X0x01,0x80,0x8f,0x07,0x00,0x80,0x01,0x00,0x1f,0x0f,0x00,0x80,
X0xc1,0x03,0x3e,0x3e,0x00,0x80,0xc1,0x0f,0x7c,0x7c,0x00,0x80,
X0x81,0x1f,0xf8,0xf8,0x00,0x80,0x01,0x3f,0xf0,0xf1,0x18,0x80,
X0x01,0x7c,0xe0,0xf3,0x39,0x80,0x01,0xfc,0xe0,0xe3,0x79,0x80,
X0x01,0xf8,0xc1,0xe7,0xf3,0x80,0x01,0xf0,0xc1,0xe7,0xe7,0x80,
X0x01,0xf0,0xc3,0xc7,0xe7,0x81,0x01,0xe0,0xc3,0xcf,0xcf,0x81,
X0x01,0xe0,0xc7,0xcf,0xcf,0x83,0x01,0xc0,0xef,0x9f,0xdf,0x83,
X0x01,0xc0,0xff,0xff,0xdf,0x83,0x01,0xc0,0xff,0xff,0xff,0x83,
X0x01,0xc0,0xff,0xff,0xff,0x83,0xc1,0x81,0xff,0xff,0xff,0x83,
X0xc1,0x81,0xff,0xff,0xff,0x83,0xc1,0x83,0xff,0xff,0xff,0x83,
X0xc1,0x87,0xff,0xff,0xff,0x83,0xc1,0x8f,0xff,0xff,0xff,0x83,
X0x81,0x9f,0xff,0xff,0xff,0x83,0x81,0xff,0xff,0xff,0xff,0x81,
X0x01,0xff,0xff,0xff,0xff,0x81,0x01,0xfe,0xff,0xff,0xff,0x81,
X0x01,0xfc,0xff,0xff,0xff,0x81,0x01,0xf8,0xff,0xff,0xff,0x81,
X0x01,0xf0,0xff,0xff,0xff,0x80,0x01,0xc0,0xff,0xff,0x7f,0x80,
X0x01,0x80,0xff,0xff,0x7f,0x80,0x01,0x00,0xff,0xff,0xff,0x80,
X0x01,0x00,0xfc,0xff,0xff,0x81,0x01,0x00,0xf0,0xff,0xff,0x83,
X0x03,0x00,0xe0,0xff,0xff,0xc7,0x03,0x00,0x80,0xff,0xff,0xcf,
X0x0f,0x00,0x80,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff};
END_OF_FILE
if test 1577 -ne `wc -c <'bitmaps/bvf.bm'`; then
    echo shar: \"'bitmaps/bvf.bm'\" unpacked with wrong size!
fi
# end of 'bitmaps/bvf.bm'
fi
if test -f 'bitmaps/bvk.bm' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'bitmaps/bvk.bm'\"
else
echo shar: Extracting \"'bitmaps/bvk.bm'\" \(1577 characters\)
sed "s/^X//" >'bitmaps/bvk.bm' <<'END_OF_FILE'
X#define bvk_width 48
X#define bvk_height 48
X#define bvk_x_hot -1
X#define bvk_y_hot -1
Xstatic char bvk_bits[] = {
X0xff,0xff,0xff,0xff,0xff,0xff,0x0f,0x00,0x00,0x80,0x04,0xf0,
X0x03,0x00,0x00,0xc0,0x04,0xc0,0x03,0x00,0x00,0x40,0x04,0xc0,
X0x01,0x00,0x00,0x60,0x02,0x80,0x01,0x00,0x00,0x20,0x02,0x80,
X0x01,0x00,0x00,0x20,0x02,0x80,0x01,0x00,0x00,0x30,0x02,0x80,
X0x01,0x00,0x00,0x10,0x02,0x80,0x01,0x00,0x00,0x18,0x01,0x80,
X0x01,0x00,0x00,0x08,0x01,0x80,0x01,0x00,0x00,0x0c,0x01,0x80,
X0x01,0x00,0x00,0x04,0x01,0x80,0x01,0x00,0x00,0x86,0x00,0x80,
X0x01,0x00,0x00,0x83,0x00,0x80,0x01,0x00,0x00,0x81,0x00,0x80,
X0x01,0x00,0x80,0x81,0x00,0x80,0x01,0x00,0xf0,0x47,0x00,0x80,
X0x01,0x00,0xf8,0x4f,0x00,0x80,0x01,0x00,0xfc,0x5f,0x00,0x80,
X0x01,0x00,0xfc,0x7f,0x00,0x80,0x01,0x00,0xfc,0x7f,0x00,0x80,
X0x01,0x00,0xfc,0xff,0x00,0x80,0x01,0x00,0xff,0xff,0x00,0x80,
X0x01,0x80,0xff,0xff,0x00,0x80,0x01,0xc0,0xff,0xff,0x00,0x80,
X0x01,0xc0,0xff,0xff,0x00,0x80,0x01,0xc0,0xff,0xff,0x01,0x80,
X0x01,0x80,0xff,0xff,0x01,0x80,0x01,0xc0,0xff,0xff,0x01,0x80,
X0x01,0xe0,0xff,0xff,0x01,0x80,0x01,0xe0,0xff,0xff,0x01,0x80,
X0x01,0xe0,0xff,0xff,0x01,0x80,0x01,0xe0,0xff,0xff,0x01,0x80,
X0x01,0xc0,0xff,0xff,0x01,0x80,0x01,0xe0,0xff,0xff,0x03,0x80,
X0x01,0xf0,0xff,0xff,0x03,0x80,0x01,0xf0,0xff,0xff,0x03,0x80,
X0x01,0xf0,0xff,0xff,0x03,0x80,0x01,0xf0,0xff,0xff,0x03,0x80,
X0x01,0xe0,0xff,0xff,0x07,0x80,0x01,0xe0,0xff,0xff,0x07,0x80,
X0x01,0xc0,0xff,0xff,0x0f,0x80,0x01,0xc0,0xff,0xff,0x0f,0x80,
X0x03,0x80,0xff,0xff,0x1f,0xc0,0x03,0x00,0xff,0xff,0x1f,0xc0,
X0x0f,0x00,0xfe,0xff,0x3f,0xf0,0xff,0xff,0xff,0xff,0xff,0xff};
END_OF_FILE
if test 1577 -ne `wc -c <'bitmaps/bvk.bm'`; then
    echo shar: \"'bitmaps/bvk.bm'\" unpacked with wrong size!
fi
# end of 'bitmaps/bvk.bm'
fi
if test -f 'bitmaps/bvs.bm' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'bitmaps/bvs.bm'\"
else
echo shar: Extracting \"'bitmaps/bvs.bm'\" \(1577 characters\)
sed "s/^X//" >'bitmaps/bvs.bm' <<'END_OF_FILE'
X#define bvs_width 48
X#define bvs_height 48
X#define bvs_x_hot -1
X#define bvs_y_hot -1
Xstatic char bvs_bits[] = {
X0xff,0xff,0xff,0xff,0xff,0xff,0x0f,0x00,0x00,0x00,0x00,0xf0,
X0x03,0x40,0x00,0x08,0x00,0xc0,0x03,0x40,0x00,0x04,0x00,0xc0,
X0x01,0x40,0x00,0x02,0x00,0x80,0x01,0x80,0x00,0x02,0x00,0x80,
X0x01,0x80,0x00,0x01,0x00,0x80,0x01,0x00,0x00,0x00,0x00,0x80,
X0xc1,0x00,0x00,0x00,0x00,0x80,0x01,0x07,0x00,0x00,0x00,0x80,
X0x01,0x08,0x38,0x00,0x00,0x80,0x01,0x00,0xfc,0x00,0x00,0x80,
X0x01,0x00,0xfc,0x07,0x00,0x80,0x01,0x00,0xff,0x0f,0x00,0x80,
X0x01,0x80,0xff,0x3f,0x00,0x80,0x01,0x80,0xff,0xff,0x00,0x80,
X0xfd,0x81,0xff,0xff,0x01,0x80,0x01,0x80,0xff,0xff,0x03,0x80,
X0x01,0x80,0x9f,0xff,0x07,0x80,0x01,0x80,0x1f,0xff,0x0f,0x80,
X0x01,0x00,0x1f,0xfe,0x1f,0x80,0x01,0x00,0x3f,0xfc,0x3f,0x80,
X0x01,0x04,0x3f,0xf8,0x7f,0x80,0x01,0x02,0x7f,0xf0,0xff,0x80,
X0x01,0x01,0xfe,0xe0,0xff,0x80,0x81,0x00,0xfe,0xe1,0xff,0x81,
X0x01,0x00,0xfe,0xc3,0xff,0x81,0x01,0x00,0xfe,0xdf,0xff,0x83,
X0x01,0x00,0xff,0xff,0xff,0x83,0x01,0x80,0xff,0xff,0xff,0x83,
X0x01,0xc0,0xff,0xff,0xff,0x83,0x01,0xe0,0xff,0xff,0xff,0x83,
X0x01,0xe0,0xff,0xff,0xff,0x81,0x01,0xe0,0xff,0xff,0xff,0x80,
X0x01,0xf0,0xff,0xff,0xff,0x80,0x01,0xf0,0xff,0xff,0x3f,0x80,
X0x01,0xf0,0xff,0xff,0x1f,0x80,0x01,0xf0,0xff,0xff,0x0f,0x80,
X0x01,0xf0,0xff,0xff,0x07,0x80,0x01,0xf0,0xff,0xff,0x01,0x80,
X0x01,0xf0,0xff,0xff,0x00,0x80,0x01,0xf0,0xff,0x7f,0x00,0x80,
X0x01,0xe0,0xff,0x3f,0x00,0x80,0x01,0xe0,0xff,0x1f,0x00,0x80,
X0x03,0xc0,0xff,0x1f,0x00,0xc0,0x03,0xc0,0xff,0x07,0x00,0xc0,
X0x0f,0x80,0xff,0x07,0x00,0xf0,0xff,0xff,0xff,0xff,0xff,0xff};
END_OF_FILE
if test 1577 -ne `wc -c <'bitmaps/bvs.bm'`; then
    echo shar: \"'bitmaps/bvs.bm'\" unpacked with wrong size!
fi
# end of 'bitmaps/bvs.bm'
fi
if test -f 'bitmaps/bvw.bm' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'bitmaps/bvw.bm'\"
else
echo shar: Extracting \"'bitmaps/bvw.bm'\" \(1577 characters\)
sed "s/^X//" >'bitmaps/bvw.bm' <<'END_OF_FILE'
X#define bvw_width 48
X#define bvw_height 48
X#define bvw_x_hot -1
X#define bvw_y_hot -1
Xstatic char bvw_bits[] = {
X0xff,0xff,0xff,0xff,0xff,0xff,0x0f,0x00,0x00,0x00,0x00,0xf0,
X0x03,0x00,0x00,0x00,0x00,0xc0,0x03,0x00,0x00,0x00,0x00,0xc0,
X0x01,0x00,0x00,0x00,0x00,0x80,0x01,0x00,0x00,0x00,0x00,0x80,
X0x01,0x00,0x00,0x00,0x00,0x80,0x01,0x00,0x00,0x00,0x00,0x80,
X0x01,0x00,0x00,0x00,0x00,0x80,0x01,0x00,0x0f,0x00,0x00,0x80,
X0x01,0x80,0x1f,0x00,0x00,0x80,0x01,0x80,0x7f,0x00,0x00,0x80,
X0x01,0x00,0xfe,0x00,0x00,0x80,0x01,0x00,0xfc,0x03,0x00,0x80,
X0x01,0x00,0xf8,0x0f,0x00,0x80,0x01,0x00,0xe0,0x3f,0x00,0x80,
X0x01,0x00,0xc0,0x7f,0x00,0x80,0x01,0x00,0x80,0xff,0x00,0x80,
X0x01,0x00,0x00,0xff,0x00,0x80,0x01,0x00,0x00,0xfe,0x01,0x80,
X0x01,0x00,0x00,0xfc,0x03,0x80,0x01,0x00,0x00,0xfc,0x07,0x80,
X0x01,0x00,0x00,0xf8,0x0f,0x80,0x01,0x00,0x00,0xf8,0x1f,0x80,
X0x01,0x00,0x00,0xf0,0x3f,0x80,0x01,0x00,0x00,0xf0,0x3f,0x80,
X0x01,0x00,0x00,0xf8,0x7f,0x80,0x01,0x00,0x00,0xf8,0x7f,0x80,
X0x01,0x00,0x00,0xfc,0x7f,0x80,0x01,0x00,0x00,0xfe,0x3f,0x80,
X0x01,0x00,0x00,0xff,0x1f,0x80,0x01,0x00,0xc0,0xff,0x0f,0x80,
X0x01,0x00,0xe0,0xff,0x07,0x80,0x01,0x00,0xf0,0xff,0x03,0x80,
X0x01,0x00,0xf8,0xff,0x01,0x80,0x01,0x00,0xfc,0xff,0x00,0x80,
X0x01,0x00,0xff,0x7f,0x00,0x80,0x01,0x80,0xff,0x3f,0x00,0x80,
X0x01,0xc0,0xff,0x1f,0x00,0x80,0x01,0xe0,0xff,0x0f,0x00,0x80,
X0x01,0xe0,0xff,0x0f,0x00,0x80,0x01,0xf0,0xff,0x0f,0x00,0x80,
X0x01,0xf0,0xff,0x0f,0x00,0x80,0x01,0xf0,0xff,0x0f,0x00,0x80,
X0x03,0xf0,0xff,0x1f,0x00,0xc0,0x03,0xe0,0xff,0x3f,0x00,0xc0,
X0x0f,0xc0,0xff,0x3f,0x00,0xf0,0xff,0xff,0xff,0xff,0xff,0xff};
END_OF_FILE
if test 1577 -ne `wc -c <'bitmaps/bvw.bm'`; then
    echo shar: \"'bitmaps/bvw.bm'\" unpacked with wrong size!
fi
# end of 'bitmaps/bvw.bm'
fi
if test -f 'bitmaps/bw.bm' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'bitmaps/bw.bm'\"
else
echo shar: Extracting \"'bitmaps/bw.bm'\" \(1572 characters\)
sed "s/^X//" >'bitmaps/bw.bm' <<'END_OF_FILE'
X#define bw_width 48
X#define bw_height 48
X#define bw_x_hot -1
X#define bw_y_hot -1
Xstatic char bw_bits[] = {
X0xff,0xff,0xff,0xff,0xff,0xff,0x0f,0x00,0x00,0x00,0x00,0xf0,
X0x03,0x00,0x00,0x00,0x00,0xc0,0x03,0x00,0x00,0x00,0x00,0xc0,
X0x01,0x00,0x00,0x00,0x00,0x80,0x01,0x00,0x00,0x00,0x00,0x80,
X0x01,0x00,0x00,0x00,0x00,0x80,0x01,0x00,0x00,0x00,0x00,0x80,
X0x01,0x00,0x00,0x00,0x00,0x80,0x01,0x00,0x00,0xf0,0x00,0x80,
X0x01,0x00,0x00,0xf8,0x01,0x80,0x01,0x00,0x00,0xfe,0x01,0x80,
X0x01,0x00,0x00,0x7f,0x00,0x80,0x01,0x00,0xc0,0x3f,0x00,0x80,
X0x01,0x00,0xf0,0x1f,0x00,0x80,0x01,0x00,0xfc,0x07,0x00,0x80,
X0x01,0x00,0xfe,0x03,0x00,0x80,0x01,0x00,0xff,0x01,0x00,0x80,
X0x01,0x00,0xff,0x00,0x00,0x80,0x01,0x80,0x7f,0x00,0x00,0x80,
X0x01,0xc0,0x3f,0x00,0x00,0x80,0x01,0xe0,0x3f,0x00,0x00,0x80,
X0x01,0xf0,0x1f,0x00,0x00,0x80,0x01,0xf8,0x1f,0x00,0x00,0x80,
X0x01,0xfc,0x0f,0x00,0x00,0x80,0x01,0xfc,0x0f,0x00,0x00,0x80,
X0x01,0xfe,0x1f,0x00,0x00,0x80,0x01,0xfe,0x1f,0x00,0x00,0x80,
X0x01,0xfe,0x3f,0x00,0x00,0x80,0x01,0xfc,0x7f,0x00,0x00,0x80,
X0x01,0xf8,0xff,0x00,0x00,0x80,0x01,0xf0,0xff,0x03,0x00,0x80,
X0x01,0xe0,0xff,0x07,0x00,0x80,0x01,0xc0,0xff,0x0f,0x00,0x80,
X0x01,0x80,0xff,0x1f,0x00,0x80,0x01,0x00,0xff,0x3f,0x00,0x80,
X0x01,0x00,0xfe,0xff,0x00,0x80,0x01,0x00,0xfc,0xff,0x01,0x80,
X0x01,0x00,0xf8,0xff,0x03,0x80,0x01,0x00,0xf0,0xff,0x07,0x80,
X0x01,0x00,0xf0,0xff,0x07,0x80,0x01,0x00,0xf0,0xff,0x0f,0x80,
X0x01,0x00,0xf0,0xff,0x0f,0x80,0x01,0x00,0xf0,0xff,0x0f,0x80,
X0x03,0x00,0xf8,0xff,0x0f,0xc0,0x03,0x00,0xfc,0xff,0x07,0xc0,
X0x0f,0x00,0xfc,0xff,0x03,0xf0,0xff,0xff,0xff,0xff,0xff,0xff};
END_OF_FILE
if test 1572 -ne `wc -c <'bitmaps/bw.bm'`; then
    echo shar: \"'bitmaps/bw.bm'\" unpacked with wrong size!
fi
# end of 'bitmaps/bw.bm'
fi
if test -f 'bitmaps/sc.bm' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'bitmaps/sc.bm'\"
else
echo shar: Extracting \"'bitmaps/sc.bm'\" \(231 characters\)
sed "s/^X//" >'bitmaps/sc.bm' <<'END_OF_FILE'
X#define sc_width 16
X#define sc_height 16
Xstatic char sc_bits[] = {
X0x00,0x00,0x40,0x02,0x40,0x02,0x20,0x04,0x20,0x04,0x30,0x0c,
X0x30,0x0c,0x30,0x0c,0x30,0x0c,0x30,0x0c,0x30,0x0c,0x70,0x0e,
X0x70,0x0e,0x70,0x0e,0x78,0x1e,0x3c,0x3c};
END_OF_FILE
if test 231 -ne `wc -c <'bitmaps/sc.bm'`; then
    echo shar: \"'bitmaps/sc.bm'\" unpacked with wrong size!
fi
# end of 'bitmaps/sc.bm'
fi
if test -f 'bitmaps/sd.bm' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'bitmaps/sd.bm'\"
else
echo shar: Extracting \"'bitmaps/sd.bm'\" \(231 characters\)
sed "s/^X//" >'bitmaps/sd.bm' <<'END_OF_FILE'
X#define sd_width 16
X#define sd_height 16
Xstatic char sd_bits[] = {
X0x00,0x00,0x00,0x04,0x00,0x06,0x00,0x06,0x00,0x03,0x00,0x03,
X0x80,0x03,0xe0,0x03,0xf0,0x07,0xf8,0x07,0xf8,0x07,0xf8,0x07,
X0xf8,0x03,0xf8,0x03,0xf0,0x01,0xf8,0x00};
END_OF_FILE
if test 231 -ne `wc -c <'bitmaps/sd.bm'`; then
    echo shar: \"'bitmaps/sd.bm'\" unpacked with wrong size!
fi
# end of 'bitmaps/sd.bm'
fi
if test -f 'bitmaps/sf.bm' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'bitmaps/sf.bm'\"
else
echo shar: Extracting \"'bitmaps/sf.bm'\" \(231 characters\)
sed "s/^X//" >'bitmaps/sf.bm' <<'END_OF_FILE'
X#define sf_width 16
X#define sf_height 16
Xstatic char sf_bits[] = {
X0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x06,0x40,0x33,0xa8,0x19,
X0xb8,0x0d,0xb4,0x0d,0xfc,0x07,0xfc,0x27,0xfc,0x37,0xfc,0x1f,
X0xfc,0x0f,0xf8,0x07,0xfc,0x01,0xfe,0x00};
END_OF_FILE
if test 231 -ne `wc -c <'bitmaps/sf.bm'`; then
    echo shar: \"'bitmaps/sf.bm'\" unpacked with wrong size!
fi
# end of 'bitmaps/sf.bm'
fi
if test -f 'bitmaps/sf2.bm' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'bitmaps/sf2.bm'\"
else
echo shar: Extracting \"'bitmaps/sf2.bm'\" \(276 characters\)
sed "s/^X//" >'bitmaps/sf2.bm' <<'END_OF_FILE'
X#define sf2_width 16
X#define sf2_height 16
X#define sf2_x_hot -1
X#define sf2_y_hot -1
Xstatic char sf2_bits[] = {
X0x00,0x00,0x00,0x00,0x00,0x00,0x1a,0x58,0xcd,0xb3,0x67,0xe6,
X0x37,0xec,0x37,0xec,0x1f,0xf8,0x9f,0xf9,0xdf,0xfb,0x7f,0xfe,
X0x3f,0xfc,0x1f,0xf8,0x07,0xe0,0x03,0xc0};
END_OF_FILE
if test 276 -ne `wc -c <'bitmaps/sf2.bm'`; then
    echo shar: \"'bitmaps/sf2.bm'\" unpacked with wrong size!
fi
# end of 'bitmaps/sf2.bm'
fi
if test -f 'bitmaps/sp.bm' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'bitmaps/sp.bm'\"
else
echo shar: Extracting \"'bitmaps/sp.bm'\" \(231 characters\)
sed "s/^X//" >'bitmaps/sp.bm' <<'END_OF_FILE'
X#define sp_width 16
X#define sp_height 16
Xstatic char sp_bits[] = {
X0x80,0x01,0x80,0x05,0xa0,0x07,0xe0,0x07,0xe0,0x07,0xe8,0x07,
X0xf8,0x07,0xf8,0x27,0xf8,0x37,0xf8,0x3f,0xf8,0x3f,0xf8,0x1f,
X0xf0,0x0f,0xf0,0x0f,0xf0,0x07,0xe0,0x03};
END_OF_FILE
if test 231 -ne `wc -c <'bitmaps/sp.bm'`; then
    echo shar: \"'bitmaps/sp.bm'\" unpacked with wrong size!
fi
# end of 'bitmaps/sp.bm'
fi
if test -f 'bitmaps/sp2.bm' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'bitmaps/sp2.bm'\"
else
echo shar: Extracting \"'bitmaps/sp2.bm'\" \(276 characters\)
sed "s/^X//" >'bitmaps/sp2.bm' <<'END_OF_FILE'
X#define sp2_width 16
X#define sp2_height 16
X#define sp2_x_hot -1
X#define sp2_y_hot -1
Xstatic char sp2_bits[] = {
X0x00,0x00,0x18,0x18,0x58,0x1a,0x7c,0x3e,0x7e,0x7e,0x7e,0x7e,
X0x7f,0xfe,0x7f,0xfe,0x7f,0xfe,0xff,0xff,0xff,0xff,0xff,0xff,
X0xff,0xff,0xff,0xff,0x7e,0x7e,0x3e,0x7c};
END_OF_FILE
if test 276 -ne `wc -c <'bitmaps/sp2.bm'`; then
    echo shar: \"'bitmaps/sp2.bm'\" unpacked with wrong size!
fi
# end of 'bitmaps/sp2.bm'
fi
if test -f 'bitmaps/ss.bm' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'bitmaps/ss.bm'\"
else
echo shar: Extracting \"'bitmaps/ss.bm'\" \(231 characters\)
sed "s/^X//" >'bitmaps/ss.bm' <<'END_OF_FILE'
X#define ss_width 16
X#define ss_height 16
Xstatic char ss_bits[] = {
X0x20,0x08,0x40,0x04,0x00,0x00,0x80,0x01,0xe0,0x03,0xf0,0x33,
X0x78,0x03,0x3c,0x01,0x9e,0x01,0xfe,0x03,0xfe,0x07,0xfc,0x07,
X0xf8,0x07,0xf0,0x07,0xe0,0x03,0xc0,0x03};
END_OF_FILE
if test 231 -ne `wc -c <'bitmaps/ss.bm'`; then
    echo shar: \"'bitmaps/ss.bm'\" unpacked with wrong size!
fi
# end of 'bitmaps/ss.bm'
fi
if test -f 'bitmaps/ss2.bm' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'bitmaps/ss2.bm'\"
else
echo shar: Extracting \"'bitmaps/ss2.bm'\" \(276 characters\)
sed "s/^X//" >'bitmaps/ss2.bm' <<'END_OF_FILE'
X#define ss2_width 16
X#define ss2_height 16
X#define ss2_x_hot -1
X#define ss2_y_hot -1
Xstatic char ss2_bits[] = {
X0x22,0x89,0x24,0x49,0x00,0x00,0x30,0x0c,0x7c,0x3e,0x7e,0x7e,
X0x6f,0xf6,0x27,0xe4,0x33,0xcc,0x7f,0xfe,0xff,0xff,0xff,0xff,
X0xff,0xff,0xfe,0x7f,0x7c,0x3e,0x78,0x1e};
END_OF_FILE
if test 276 -ne `wc -c <'bitmaps/ss2.bm'`; then
    echo shar: \"'bitmaps/ss2.bm'\" unpacked with wrong size!
fi
# end of 'bitmaps/ss2.bm'
fi
if test -f 'bitmaps/sw.bm' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'bitmaps/sw.bm'\"
else
echo shar: Extracting \"'bitmaps/sw.bm'\" \(231 characters\)
sed "s/^X//" >'bitmaps/sw.bm' <<'END_OF_FILE'
X#define sw_width 16
X#define sw_height 16
Xstatic char sw_bits[] = {
X0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x06,0x00,0x03,0xc0,0x03,
X0xe0,0x01,0xf0,0x00,0x78,0x00,0x78,0x00,0xf0,0x01,0xe0,0x03,
X0xc0,0x07,0x80,0x0f,0x80,0x0f,0xc0,0x0f};
END_OF_FILE
if test 231 -ne `wc -c <'bitmaps/sw.bm'`; then
    echo shar: \"'bitmaps/sw.bm'\" unpacked with wrong size!
fi
# end of 'bitmaps/sw.bm'
fi
if test -f 'etran.c' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'etran.c'\"
else
echo shar: Extracting \"'etran.c'\" \(2613 characters\)
sed "s/^X//" >'etran.c' <<'END_OF_FILE'
X#include <stdio.h>
X#include <strings.h>
X
X#include "handwave.h"
X#include "internal.h"
X
Xstatic char bigbuf[512];
X
Xvoid log_text();
X
Xvoid init_transcript(self)
Xstruct realgame *self;
X{
X    self->gamelog_size = 4096;
X    self->gamelog = (char *)malloc(sizeof(char) * self->gamelog_size);
X    strcpy(self->gamelog, "");
X    self->gamelog_pos = 0;
X
X    log_text(self, "Spellcast Game Transcript\n\n");
X}
X
Xvoid log_text(self, str)
Xstruct realgame *self;
Xchar *str;
X{
X    int len;
X
X    if (!str)
X	return;
X    len = strlen(str);
X    if (len+self->gamelog_pos >= self->gamelog_size) {
X	while (len+self->gamelog_pos >= self->gamelog_size) {
X	    self->gamelog_size *= 2;
X	}
X	self->gamelog = (char *)realloc(self->gamelog, sizeof(char) * self->gamelog_size);
X    }
X
X    strcpy(self->gamelog+self->gamelog_pos, str);
X    self->gamelog_pos += len;
X}
X
Xvoid LogInTranscript(pgame, str)
Xgame *pgame;
Xchar *str;
X{
X    log_text((struct realgame *)pgame, str);
X}
X
Xstatic char cheap_untranslate(val)
Xint val;
X{
X    switch (val) {
X	case Gesture_PALM:
X	    return 'P';
X	case Gesture_DIGIT:
X	    return 'D';
X	case Gesture_FINGERS:
X	    return 'F';
X	case Gesture_WAVE:
X	    return 'W';
X	case Gesture_SNAP:
X	    return 'S';
X	case Gesture_CLAPHALF:
X	    return 'C';
X	case Gesture_KNIFE:
X	    return 'K';
X	case Gesture_NOTHING:
X	    return '.';
X	case Gesture_ANTISPELL:
X	    return '=';
X	default:
X	    return '?';
X    }
X}
X
Xvoid log_round_header(self)
Xstruct realgame *self;
X{
X    char *cx;
X    int ix, gnum;
X
X    switch (self->turntype) {
X	case Turn_TIMESTOP:
X	    cx = " (Time Stop)";
X	    break;
X	case Turn_HASTE:
X	    cx = " (Haste)";
X	    break;
X	default:
X	    cx = "";
X	    break;
X    }
X
X    sprintf(bigbuf, "\n\tTurn %d%s:\n", self->turn, cx);
X    log_text(self, bigbuf);
X
X    for (ix=0; ix<self->numplayers; ix++) {
X	struct wizard *wiz = self->wiz[ix];
X	if (wiz->alive) {
X	    if (self->turnactive[ix]) {
X		gnum = wiz->numgests-1;
X		sprintf(bigbuf, "%s (%d): %c %c\n", wiz->name, wiz->hitpoints,
X				cheap_untranslate(wiz->gests[gnum].did[0]),
X				cheap_untranslate(wiz->gests[gnum].did[1]));
X	    }
X	    else {
X		sprintf(bigbuf, "%s (%d): [no gestures]\n", wiz->name,
X				wiz->hitpoints);
X	    }
X	    log_text(self, bigbuf);
X	}
X    }
X    for (ix=0; ix<self->numcres; ix++) {
X	struct creature *thud = &(self->cre[ix]);
X	if (thud->alive) {
X	    sprintf(bigbuf, "%s (%d)\n", thud->name, thud->hitpoints);
X	    log_text(self, bigbuf);
X	}
X    }
X    log_text(self, "\n");
X}
X
X#define ABBREVLEN (8)
X
Xvoid WriteTranscript(pgame, f)
Xgame *pgame;
XFILE *f;
X{
X    struct realgame *self = (struct realgame *)pgame;
X
X    fputs(self->gamelog, f);
X}
END_OF_FILE
if test 2613 -ne `wc -c <'etran.c'`; then
    echo shar: \"'etran.c'\" unpacked with wrong size!
fi
# end of 'etran.c'
fi
if test -f 'makelist.c' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'makelist.c'\"
else
echo shar: Extracting \"'makelist.c'\" \(2489 characters\)
sed "s/^X//" >'makelist.c' <<'END_OF_FILE'
X#include <stdio.h>
X#include "handwave.h"
X#include "internal.h"
X
X#define MARGIN_SIDE 72
X#define MARGIN_TOP 72
X#define LINEHEIGHT 16
X#define GEST_SPACE 12
X#define TEXT_MARGIN 108
X
Xchar *psroutine(val, size)
Xint val;
Xint *size;
X{
X    int tmp;
X    if (!size)
X	size = (&tmp);
X
X    switch (val) {
X	case Gesture_PALM:
X	    *size = GEST_SPACE;
X	    return "showpalm";
X	case Gesture_DIGIT:
X	    *size = GEST_SPACE;
X	    return "showdigit";
X	case Gesture_FINGERS:
X	    *size = GEST_SPACE;
X	    return "showfinger";
X	case Gesture_WAVE:
X	    *size = GEST_SPACE;
X	    return "showwave";
X	case Gesture_SNAP:
X	    *size = GEST_SPACE;
X	    return "showsnap";
X	case Gesture_CLAPHALF:
X	    *size = GEST_SPACE;
X	    return "showclap";
X	case Gesture_PALM | Gesture_DOUBLE:
X	    *size = 17;
X	    return "showpalm2";
X	case Gesture_DIGIT | Gesture_DOUBLE:
X	    *size = 17;
X	    return "showdigit2";
X	case Gesture_FINGERS | Gesture_DOUBLE:
X	    *size = GEST_SPACE;
X	    return "showfinger2";
X	case Gesture_WAVE | Gesture_DOUBLE:
X	    *size = 17;
X	    return "showwave2";
X	case Gesture_SNAP | Gesture_DOUBLE:
X	    *size = 17;
X	    return "showsnap2";
X	case Gesture_CLAPHALF | Gesture_DOUBLE:
X	    *size = GEST_SPACE;
X	    return "showclap2";
X	default:
X	    *size = GEST_SPACE;
X	    return "nullact";
X    }
X}
X
Xvoid dump_list(topedge, leftedge, filter)
Xint topedge, leftedge;
Xint (*filter)();
X{
X    int ix, gx;
X    int xpos, ypos, xval;
X    int val, hop;
X    char *cx;
X    struct spelldef *spel;
X
X    for (ix=0; ix<NUMSPELLS-1; ix++) {
X	xpos = leftedge + MARGIN_SIDE;
X	ypos = topedge - (ix*LINEHEIGHT);
X
X	xval = xpos;
X	if (filter)
X	    spel = &(spelllist[(*filter)(ix)]);
X	else
X	    spel = &(spelllist[ix]);
X	for (gx=0; gx<spel->length; gx++) {
X	    val = spel->gests[gx];
X	    cx = psroutine(val, &hop);
X	    printf("%d %d %s\n", xval, ypos-1, cx);
X	    xval += hop;
X	}
X	printf("%d %d moveto  %d %d lineto stroke\n", xval+3, ypos+4,
X			xpos+TEXT_MARGIN-4, ypos+4);
X	printf("%d %d moveto (%s) show\n", xpos+TEXT_MARGIN, ypos, spel->name);
X    }
X}
X
Xint alphasort(val)
Xint val;
X{
X    return alphabet_sort_list[val];
X}
X
Xmain()
X{
X    printf("/Times-Roman findfont 12 scalefont setfont\n");
X    printf("0.5 setlinewidth\n");
X
X    dump_list(772 - MARGIN_TOP, 0, NULL);
X    dump_list(772 - MARGIN_TOP, 264, alphasort);
X
X    printf("/Times-Bold findfont 14 scalefont setfont\n");
X    printf("306 752 moveto\n");
X    printf("(SpellCast spell lists -- sorted by gesture and name) centershow\n");
X    printf("\nshowpage\n");
X}
END_OF_FILE
if test 2489 -ne `wc -c <'makelist.c'`; then
    echo shar: \"'makelist.c'\" unpacked with wrong size!
fi
# end of 'makelist.c'
fi
if test -f 'spelllist.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'spelllist.h'\"
else
echo shar: Extracting \"'spelllist.h'\" \(1704 characters\)
sed "s/^X//" >'spelllist.h' <<'END_OF_FILE'
X#define NUMSPELLS (43)		/* number of spells in the book */
X#define MAXSPELLLENGTH 8
X
Xstruct spelldef {
X    int length;
X    int gests[MAXSPELLLENGTH];
X    int extendable; /* with permanency */
X    int selfcast; /* generally cast it on yourself? */
X    char *name;
X};
X
Xextern struct spelldef spelllist[NUMSPELLS];
Xextern int reverse_sort_list[NUMSPELLS];
Xextern int alphabet_sort_list[NUMSPELLS];
X
X#define SP__DISPEL_MAGIC	(0)
X#define SP__SUMMON_ELEMENTAL	(1)
X#define SP__MAGIC_MIRROR	(2)
X#define SP__LIGHTNING_BOLT	(3)
X#define SP__CURE_HEAVY_WOUNDS	(4)
X#define SP__CURE_LIGHT_WOUNDS	(5)
X#define SP__AMNESIA		(6)
X#define SP__CONFUSION		(7)
X#define SP__DISEASE		(8)
X#define SP__BLINDNESS		(9)
X#define SP__DELAYED_EFFECT	(10)
X#define SP__RAISE_DEAD		(11)
X#define SP__POISON		(12)
X#define SP__PARALYSIS		(13)
X#define SP__SUMMON_TROLL	(14)
X#define SP__FIREBALL		(15)
X#define SP__SHIELD		(16)
X#define SP__SURRENDER		(17)
X#define SP__REMOVE_ENCHANTMENT	(18)
X#define SP__INVISIBILITY	(19)
X#define SP__CHARM_MONSTER	(20)
X#define SP__CHARM_PERSON	(21)
X#define SP__SUMMON_OGRE		(22)
X#define SP__FINGER_OF_DEATH	(23)
X#define SP__HASTE		(24)
X#define SP__MISSILE		(25)
X#define SP__SUMMON_GOBLIN	(26)
X#define SP__ANTI_SPELL		(27)
X#define SP__PERMANENCY		(28)
X#define SP__TIME_STOP		(29)
X#define SP__RESIST_COLD		(30)
X#define SP__FEAR		(31)
X#define SP__FIRE_STORM		(32)
X#define SP__LIGHTNING_BOLT2	(33)
X#define SP__CAUSE_LIGHT_WOUNDS	(34)
X#define SP__SUMMON_GIANT	(35)
X#define SP__CAUSE_HEAVY_WOUNDS	(36)
X#define SP__COUNTER_SPELL	(37)
X#define SP__ICE_STORM		(38)
X#define SP__RESIST_HEAT		(39)
X#define SP__PROTECTION_FROM_EVIL (40)
X#define SP__COUNTER_SPELL2	(41)
X#define	SP__STAB		(42) /* ok, it's not really a spell */
END_OF_FILE
if test 1704 -ne `wc -c <'spelllist.h'`; then
    echo shar: \"'spelllist.h'\" unpacked with wrong size!
fi
# end of 'spelllist.h'
fi
if test -f 'xspell.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'xspell.h'\"
else
echo shar: Extracting \"'xspell.h'\" \(3019 characters\)
sed "s/^X//" >'xspell.h' <<'END_OF_FILE'
Xstruct maingame {
X    int ignorestuff;
X};
X
Xstruct line {
X    int start;
X    int len;
X    int width;
X};
X
Xstruct rect {
X    int x, y, w, h;
X};
X
Xstruct scroll_interface {
X    struct player *py;
X    int x, y, h;
X    int top;
X    int visible;
X    int nlines;
X    int lineheight;
X    int grip;
X    int moved;
X    void (*redraw)();
X};
X
X#define MAXQUESTIONLENGTH (256)
X#define MAXANSWERLENGTH (64)
X
Xstruct target_list {
X    int num;
X    char **tnames;
X    int *tnums;
X    int size;
X};
X
Xstruct answer {
X    struct query *query; /* NULL for just a message */
X    int answer;
X    int done;
X    char qu_str[MAXQUESTIONLENGTH];
X    char ans_str[MAXANSWERLENGTH];
X    long rock;
X};
X
Xstruct statthing {
X    int index, type;
X    int hp;
X    long stuff;
X};
X
Xstruct player {
X    Display *dpy;
X    int scn;
X    Window win;
X    Pixmap backpm;
X    GC blackgc, whitegc;
X    XFontStruct *font;
X    Pixmap gesturebm[2][10];
X    Pixmap spelllistbm[2][7];
X
X    int backstore;
X    struct rect backrec;
X    int gotexpose; /* matters during backing store periods */
X    int cursx; /* pixels, lines */
X    int textx, texty;
X    int lineheight;
X    struct scroll_interface sitext, siquery, sistats;
X    struct scroll_interface *scroll_active;
X
X    int ascent, totalheight;
X
X    struct line *lineindex;
X    int lineindex_size;
X    int linesnum;  /* number of complete lines actually in buffer */
X    char *linebuf; /* null-terminated lines. The last one (pointed to by
X		      lineindex[linesnum].start) is incomplete (or empty),
X		      but still null-term. */
X    int linebuf_size;
X    int addpoint; /* points to '\0' at end of incomplete line */
X
X    int mousestate, mousebutton;
X    int button_lit;
X    int turn_active, turn_done;
X    int turn_blinklimit, turn_blinked;
X    int gesture_chosen[2];
X
X    struct rect gesture_rect;
X    int gesture_hand, gesture_sel;
X    struct rect spelllist_rect;
X    int spelllist_way;
X    int query_hgt;
X    int query_hit;
X    int query_sel;
X    struct target_list *query_tl;
X    struct rect query_rect;
X    struct target_list TLRightHand, TLLeftHand;
X    struct answer *answers;
X    int answers_size;
X    struct statthing *statlist;
X    int statlist_size;
X    char *talk_buf;
X    int talk_size;
X    int talk_pt, talk_xlast, talk_x, talk_toobig;
X};
X
Xextern int win_wid, win_hgt;
X
X#define SCROLL_W (16)
X#define GEST_SIZE (48)
X#define GEST_SMALL (16)
X#define FRAME_SHADOW (3)
X
X/* values for py->mousestate */
X#define ms_None (0)
X#define ms_Gesture (1)
X#define ms_DoneBtn (2)
X#define ms_SpellBtn (3)
X#define ms_Scroll (4)
X#define ms_Query (5)
X#define ms_Talk (6)
X
X#define EVENTMASK (ButtonPressMask | ButtonReleaseMask | ButtonMotionMask | \
X		KeyPressMask | ExposureMask)
X
Xextern int numplayers;
Xextern struct player *players;
Xextern game *gameval;
X
X#define State_Init (0)
X#define State_Top (1)
X#define State_EQueries (2) /* Queries before gestures are revealed */
X#define State_Queries (3)
X#define State_End (4)
X
X#define Qu_SaveTranscript		(-50)
X
Xextern int turnstate;
Xextern int movelist[];
Xextern int blinklevel;
END_OF_FILE
if test 3019 -ne `wc -c <'xspell.h'`; then
    echo shar: \"'xspell.h'\" unpacked with wrong size!
fi
# end of 'xspell.h'
fi
echo shar: End of archive 7 \(of 7\).
cp /dev/null ark7isdone
MISSING=""
for I in 1 2 3 4 5 6 7 ; do
    if test ! -f ark${I}isdone ; then
	MISSING="${MISSING} ${I}"
    fi
done
if test "${MISSING}" = "" ; then
    echo You have unpacked all 7 archives.
    rm -f ark[1-9]isdone
else
    echo You still need to unpack the following archives:
    echo "        " ${MISSING}
fi
##  End of shell archive.
exit 0
