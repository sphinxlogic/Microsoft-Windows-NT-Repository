Path: uunet!zephyr.ens.tek.com!master!saab!billr
From: billr@saab.CNA.TEK.COM (Bill Randle)
Newsgroups: comp.sources.games
Subject: v13i081:  ishido - Unix/X11 solitare game, Part03/02
Message-ID: <2722@master.CNA.TEK.COM>
Date: 8 Apr 92 00:42:52 GMT
Sender: news@master.CNA.TEK.COM
Lines: 621
Approved: billr@saab.CNA.TEK.COM

Submitted-by: jjs40@cd.amdahl.COM (John Sullivan)
Posting-number: Volume 13, Issue 81
Archive-name: ishido/Part03
Environment: Unix, X11

	[Boy, did I screw up big time! The bitmap files didn't get posted
	 with the source. Here they are as Part03.  -br]

#! /bin/sh
# This is a shell archive.  Remove anything before this line, then unpack
# it by saving it into a file and typing "sh file".  To overwrite existing
# files, type "sh file -c".  You can also feed this as standard input via
# unshar, or by typing "sh <file", e.g..  If this archive is complete, you
# will see the following message at the end:
#		"End of archive 3 (of 2)."
# Contents:  bitmap/atom.bm bitmap/dollar.bm bitmap/hammer.bm
#   bitmap/hwood.bm bitmap/maple.bm bitmap/smile.bm bitmap/star.bm
#   bitmap/vwood.bm
# Wrapped by billr@saab on Tue Apr  7 17:38:22 1992
PATH=/bin:/usr/bin:/usr/ucb ; export PATH
if test -f 'bitmap/atom.bm' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'bitmap/atom.bm'\"
else
echo shar: Extracting \"'bitmap/atom.bm'\" \(2264 characters\)
sed "s/^X//" >'bitmap/atom.bm' <<'END_OF_FILE'
X#define atom_width 50
X#define atom_height 50
Xstatic char atom_bits[] = {
X   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x03, 0x01, 0x00, 0x00, 0x00,
X0x00,
X   0x00, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x01, 0x00,
X0x00,
X   0x00, 0x00, 0x00, 0x02, 0x01, 0x00, 0x00, 0x07, 0x00, 0x00, 0x02,
X0x01,
X   0x00, 0x80, 0x0f, 0x00, 0x00, 0x02, 0x01, 0x00, 0xc0, 0x1f, 0x00,
X0x00,
X   0x02, 0x01, 0x00, 0xc0, 0x1f, 0x00, 0x00, 0x02, 0x01, 0x00, 0xfc,
X0xff,
X   0x01, 0x00, 0x02, 0x01, 0x00, 0x8f, 0x8f, 0x07, 0x00, 0x02, 0x01,
X0xc0,
X   0x01, 0x07, 0x1c, 0x00, 0x02, 0x01, 0x60, 0x00, 0x00, 0x30, 0x00,
X0x02,
X   0x01, 0x30, 0x00, 0x00, 0x60, 0x00, 0x02, 0x01, 0x18, 0x00, 0x00,
X0xc0,
X   0x00, 0x02, 0x01, 0x0c, 0x00, 0x00, 0x80, 0x01, 0x02, 0x01, 0x06,
X0x00,
X   0x00, 0x00, 0x03, 0x02, 0x01, 0x02, 0x00, 0x00, 0x00, 0x02, 0x02,
X0x01,
X   0x03, 0x00, 0x00, 0x00, 0x06, 0x02, 0x01, 0x01, 0x00, 0x00, 0x00,
X0x04,
X   0x02, 0x81, 0x01, 0x00, 0x00, 0x00, 0x0c, 0x02, 0x81, 0x01, 0x00,
X0x00,
X   0x00, 0x0c, 0x02, 0x81, 0x00, 0x00, 0x00, 0x00, 0x08, 0x02, 0xc1,
X0x00,
X   0x00, 0x00, 0x00, 0x18, 0x02, 0xc1, 0x00, 0x00, 0x07, 0x00, 0x18,
X0x02,
X   0xc1, 0x00, 0x80, 0x0f, 0x00, 0x18, 0x02, 0xc1, 0x00, 0xc0, 0x1f,
X0x00,
X   0x18, 0x02, 0xc1, 0x00, 0xc0, 0x1f, 0x00, 0x18, 0x02, 0xc1, 0x00,
X0xc0,
X   0x1f, 0x00, 0x18, 0x02, 0xc1, 0x00, 0x80, 0x0f, 0x00, 0x18, 0x02,
X0xc1,
X   0x00, 0x00, 0x07, 0x00, 0x18, 0x02, 0xc1, 0x00, 0x00, 0x00, 0x00,
X0x18,
X   0x02, 0x81, 0x00, 0x00, 0x00, 0x00, 0x08, 0x02, 0x81, 0x01, 0x00,
X0x00,
X   0x00, 0x0c, 0x02, 0x81, 0x01, 0x00, 0x00, 0x00, 0x0c, 0x02, 0x01,
X0x01,
X   0x00, 0x00, 0x00, 0x04, 0x02, 0x01, 0x03, 0x00, 0x00, 0x00, 0x06,
X0x02,
X   0x01, 0x02, 0x00, 0x00, 0x00, 0x02, 0x02, 0x01, 0x06, 0x00, 0x00,
X0x00,
X   0x03, 0x02, 0x01, 0x0c, 0x00, 0x00, 0x80, 0x01, 0x02, 0x01, 0x18,
X0x00,
X   0x00, 0xc0, 0x00, 0x02, 0x01, 0x30, 0x00, 0x00, 0x60, 0x00, 0x02,
X0x01,
X   0x60, 0x00, 0x00, 0x30, 0x00, 0x02, 0x01, 0xc0, 0x01, 0x00, 0x1c,
X0x00,
X   0x02, 0x01, 0x00, 0x0f, 0x80, 0x07, 0x00, 0x02, 0x01, 0x00, 0xfc,
X0xff,
X   0x01, 0x00, 0x02, 0x01, 0x00, 0xe0, 0x3f, 0x00, 0x00, 0x02, 0x01,
X0x00,
X   0x00, 0x00, 0x00, 0x00, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
X0x02,
X   0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xff, 0xff, 0xff,
X0xff,
X   0xff, 0x03};
END_OF_FILE
if test 2264 -ne `wc -c <'bitmap/atom.bm'`; then
    echo shar: \"'bitmap/atom.bm'\" unpacked with wrong size!
fi
# end of 'bitmap/atom.bm'
fi
if test -f 'bitmap/dollar.bm' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'bitmap/dollar.bm'\"
else
echo shar: Extracting \"'bitmap/dollar.bm'\" \(2270 characters\)
sed "s/^X//" >'bitmap/dollar.bm' <<'END_OF_FILE'
X#define dollar_width 50
X#define dollar_height 50
Xstatic char dollar_bits[] = {
X   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x03, 0x01, 0x00, 0x00, 0x00,
X0x00,
X   0x00, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x01, 0x00,
X0x00,
X   0x00, 0x00, 0x00, 0x02, 0x01, 0x00, 0x00, 0x06, 0x00, 0x00, 0x02,
X0x01,
X   0x00, 0x00, 0x06, 0x00, 0x00, 0x02, 0x01, 0x00, 0x00, 0x06, 0x00,
X0x00,
X   0x02, 0x01, 0x00, 0xfe, 0xff, 0x3f, 0x00, 0x02, 0x01, 0x80, 0xff,
X0xff,
X   0x3f, 0x00, 0x02, 0x01, 0xe0, 0x01, 0x06, 0x00, 0x00, 0x02, 0x01,
X0x60,
X   0x00, 0x06, 0x00, 0x00, 0x02, 0x01, 0x30, 0x00, 0x06, 0x00, 0x00,
X0x02,
X   0x01, 0x18, 0x00, 0x06, 0x00, 0x00, 0x02, 0x01, 0x18, 0x00, 0x06,
X0x00,
X   0x00, 0x02, 0x01, 0x0c, 0x00, 0x06, 0x00, 0x00, 0x02, 0x01, 0x0c,
X0x00,
X   0x06, 0x00, 0x00, 0x02, 0x01, 0x0c, 0x00, 0x06, 0x00, 0x00, 0x02,
X0x01,
X   0x0c, 0x00, 0x06, 0x00, 0x00, 0x02, 0x01, 0x0c, 0x00, 0x06, 0x00,
X0x00,
X   0x02, 0x01, 0x18, 0x00, 0x06, 0x00, 0x00, 0x02, 0x01, 0x18, 0x00,
X0x06,
X   0x00, 0x00, 0x02, 0x01, 0x30, 0x00, 0x06, 0x00, 0x00, 0x02, 0x01,
X0x60,
X   0x00, 0x06, 0x00, 0x00, 0x02, 0x01, 0xe0, 0x01, 0x06, 0x00, 0x00,
X0x02,
X   0x01, 0x80, 0xff, 0xff, 0x07, 0x00, 0x02, 0x01, 0x00, 0xfe, 0xff,
X0x1f,
X   0x00, 0x02, 0x01, 0x00, 0x00, 0x06, 0x78, 0x00, 0x02, 0x01, 0x00,
X0x00,
X   0x06, 0x60, 0x00, 0x02, 0x01, 0x00, 0x00, 0x06, 0xc0, 0x00, 0x02,
X0x01,
X   0x00, 0x00, 0x06, 0x80, 0x01, 0x02, 0x01, 0x00, 0x00, 0x06, 0x80,
X0x01,
X   0x02, 0x01, 0x00, 0x00, 0x06, 0x00, 0x03, 0x02, 0x01, 0x00, 0x00,
X0x06,
X   0x00, 0x03, 0x02, 0x01, 0x00, 0x00, 0x06, 0x00, 0x03, 0x02, 0x01,
X0x00,
X   0x00, 0x06, 0x00, 0x03, 0x02, 0x01, 0x00, 0x00, 0x06, 0x00, 0x03,
X0x02,
X   0x01, 0x00, 0x00, 0x06, 0x80, 0x01, 0x02, 0x01, 0x00, 0x00, 0x06,
X0x80,
X   0x01, 0x02, 0x01, 0x00, 0x00, 0x06, 0xc0, 0x00, 0x02, 0x01, 0x00,
X0x00,
X   0x06, 0x60, 0x00, 0x02, 0x01, 0x00, 0x00, 0x06, 0x78, 0x00, 0x02,
X0x01,
X   0xc0, 0xff, 0xff, 0x1f, 0x00, 0x02, 0x01, 0xc0, 0xff, 0xff, 0x07,
X0x00,
X   0x02, 0x01, 0x00, 0x00, 0x06, 0x00, 0x00, 0x02, 0x01, 0x00, 0x00,
X0x06,
X   0x00, 0x00, 0x02, 0x01, 0x00, 0x00, 0x06, 0x00, 0x00, 0x02, 0x01,
X0x00,
X   0x00, 0x00, 0x00, 0x00, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
X0x02,
X   0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xff, 0xff, 0xff,
X0xff,
X   0xff, 0x03};
END_OF_FILE
if test 2270 -ne `wc -c <'bitmap/dollar.bm'`; then
    echo shar: \"'bitmap/dollar.bm'\" unpacked with wrong size!
fi
# end of 'bitmap/dollar.bm'
fi
if test -f 'bitmap/hammer.bm' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'bitmap/hammer.bm'\"
else
echo shar: Extracting \"'bitmap/hammer.bm'\" \(2270 characters\)
sed "s/^X//" >'bitmap/hammer.bm' <<'END_OF_FILE'
X#define hammer_width 50
X#define hammer_height 50
Xstatic char hammer_bits[] = {
X   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x03, 0x01, 0x00, 0x00, 0x00,
X0x00,
X   0x00, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x01, 0x00,
X0x00,
X   0x00, 0x00, 0x00, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02,
X0x01,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x01, 0x00, 0x80, 0x1f, 0x00,
X0x00,
X   0x02, 0x01, 0x00, 0x00, 0xf8, 0x00, 0x00, 0x02, 0x01, 0x00, 0x00,
X0xc0,
X   0x01, 0x00, 0x02, 0x01, 0x00, 0x00, 0x00, 0x03, 0x00, 0x02, 0x01,
X0x00,
X   0x0f, 0x00, 0x06, 0x00, 0x02, 0x01, 0x80, 0x0f, 0x00, 0x0c, 0x00,
X0x02,
X   0x01, 0xc0, 0x0f, 0x00, 0x18, 0x00, 0x02, 0x01, 0xe0, 0x0f, 0x00,
X0x38,
X   0x00, 0x02, 0x01, 0xf0, 0x07, 0x00, 0x70, 0x00, 0x02, 0x01, 0xf8,
X0x03,
X   0x00, 0x70, 0x00, 0x02, 0x01, 0xfc, 0x03, 0x00, 0x60, 0x00, 0x02,
X0x01,
X   0xfe, 0x07, 0x00, 0xe0, 0x00, 0x02, 0x01, 0x7e, 0x0e, 0x00, 0xe0,
X0x00,
X   0x02, 0x01, 0x3c, 0x1c, 0x00, 0xe0, 0x00, 0x02, 0x01, 0x18, 0x38,
X0x00,
X   0xe0, 0x00, 0x02, 0x01, 0x00, 0x70, 0x00, 0xe0, 0x00, 0x02, 0x01,
X0x00,
X   0xe0, 0x00, 0xe0, 0x00, 0x02, 0x01, 0x00, 0xc0, 0x01, 0xe0, 0x00,
X0x02,
X   0x01, 0x00, 0x80, 0x03, 0x70, 0x00, 0x02, 0x01, 0x00, 0x00, 0x07,
X0x70,
X   0x00, 0x02, 0x01, 0x00, 0x00, 0x0e, 0x70, 0x00, 0x02, 0x01, 0x00,
X0x00,
X   0x1c, 0x38, 0x00, 0x02, 0x01, 0x00, 0x00, 0x38, 0x38, 0x00, 0x02,
X0x01,
X   0x00, 0x00, 0x70, 0x1c, 0x00, 0x02, 0x01, 0x00, 0x00, 0xe0, 0x0e,
X0x00,
X   0x02, 0x01, 0x60, 0x00, 0xc0, 0x0f, 0x00, 0x02, 0x01, 0xf0, 0x01,
X0xc0,
X   0x07, 0x00, 0x02, 0x01, 0xb8, 0x0f, 0xf8, 0x07, 0x00, 0x02, 0x01,
X0x1c,
X   0xfe, 0xff, 0x0e, 0x00, 0x02, 0x01, 0x0e, 0xf0, 0x07, 0x1c, 0x00,
X0x02,
X   0x01, 0x07, 0x00, 0x00, 0x38, 0x00, 0x02, 0x81, 0x03, 0x00, 0x00,
X0x70,
X   0x00, 0x02, 0x81, 0x01, 0x00, 0x00, 0xe0, 0x00, 0x02, 0x01, 0x00,
X0x00,
X   0x00, 0xc0, 0x01, 0x02, 0x01, 0x00, 0x00, 0x00, 0x80, 0x03, 0x02,
X0x01,
X   0x00, 0x00, 0x00, 0x00, 0x01, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00,
X0x00,
X   0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x01, 0x00, 0x00,
X0x00,
X   0x00, 0x00, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x01,
X0x00,
X   0x00, 0x00, 0x00, 0x00, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
X0x02,
X   0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xff, 0xff, 0xff,
X0xff,
X   0xff, 0x03};
END_OF_FILE
if test 2270 -ne `wc -c <'bitmap/hammer.bm'`; then
    echo shar: \"'bitmap/hammer.bm'\" unpacked with wrong size!
fi
# end of 'bitmap/hammer.bm'
fi
if test -f 'bitmap/hwood.bm' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'bitmap/hwood.bm'\"
else
echo shar: Extracting \"'bitmap/hwood.bm'\" \(2267 characters\)
sed "s/^X//" >'bitmap/hwood.bm' <<'END_OF_FILE'
X#define hwood_width 50
X#define hwood_height 50
Xstatic char hwood_bits[] = {
X   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x03, 0x01, 0x00, 0x00, 0x00,
X0x00,
X   0x00, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x01, 0x00,
X0x00,
X   0x00, 0x00, 0x00, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02,
X0xff,
X   0xff, 0xff, 0xff, 0xff, 0xff, 0x03, 0x01, 0x00, 0x00, 0x00, 0x00,
X0x00,
X   0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x01, 0x00, 0x00,
X0x00,
X   0x00, 0x00, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff,
X0xff,
X   0xff, 0xff, 0xff, 0xff, 0x03, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
X0x02,
X   0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x01, 0x00, 0x00, 0x00,
X0x00,
X   0x00, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xff,
X0xff,
X   0xff, 0xff, 0xff, 0x03, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02,
X0x01,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00,
X0x00,
X   0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xff, 0xff,
X0xff,
X   0xff, 0xff, 0x03, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x01,
X0x00,
X   0x00, 0x00, 0x00, 0x00, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
X0x02,
X   0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xff, 0xff, 0xff,
X0xff,
X   0xff, 0x03, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x01, 0x00,
X0x00,
X   0x00, 0x00, 0x00, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02,
X0x01,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xff, 0xff, 0xff, 0xff,
X0xff,
X   0x03, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x01, 0x00, 0x00,
X0x00,
X   0x00, 0x00, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x01,
X0x00,
X   0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
X0x03,
X   0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x01, 0x00, 0x00, 0x00,
X0x00,
X   0x00, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x01, 0x00,
X0x00,
X   0x00, 0x00, 0x00, 0x02, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x03,
X0x01,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00,
X0x00,
X   0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x01, 0x00, 0x00,
X0x00,
X   0x00, 0x00, 0x02, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x03, 0x01,
X0x00,
X   0x00, 0x00, 0x00, 0x00, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
X0x02,
X   0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xff, 0xff, 0xff,
X0xff,
X   0xff, 0x03};
END_OF_FILE
if test 2267 -ne `wc -c <'bitmap/hwood.bm'`; then
    echo shar: \"'bitmap/hwood.bm'\" unpacked with wrong size!
fi
# end of 'bitmap/hwood.bm'
fi
if test -f 'bitmap/maple.bm' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'bitmap/maple.bm'\"
else
echo shar: Extracting \"'bitmap/maple.bm'\" \(2267 characters\)
sed "s/^X//" >'bitmap/maple.bm' <<'END_OF_FILE'
X#define maple_width 50
X#define maple_height 50
Xstatic char maple_bits[] = {
X   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x03, 0x01, 0x00, 0x00, 0x00,
X0x00,
X   0x00, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x01, 0x00,
X0x00,
X   0x03, 0x00, 0x00, 0x02, 0x01, 0x00, 0x80, 0x07, 0x00, 0x00, 0x02,
X0x01,
X   0x00, 0xc0, 0x0f, 0x00, 0x00, 0x02, 0x01, 0x00, 0xc0, 0x0f, 0x00,
X0x00,
X   0x02, 0x01, 0x00, 0xe0, 0x1f, 0x00, 0x00, 0x02, 0x01, 0x80, 0xe3,
X0x1f,
X   0x07, 0x00, 0x02, 0x01, 0x80, 0xff, 0xff, 0x07, 0x00, 0x02, 0x01,
X0x80,
X   0xff, 0xff, 0x07, 0x00, 0x02, 0x01, 0x80, 0xff, 0xff, 0x07, 0x00,
X0x02,
X   0x01, 0x80, 0xff, 0xff, 0x07, 0x00, 0x02, 0x01, 0x80, 0xff, 0xff,
X0x07,
X   0x00, 0x02, 0x01, 0x00, 0xff, 0xff, 0x03, 0x00, 0x02, 0x01, 0x03,
X0xff,
X   0xff, 0x03, 0x03, 0x02, 0x01, 0x0f, 0xff, 0xff, 0xc3, 0x03, 0x02,
X0x01,
X   0x3f, 0xff, 0xff, 0xf3, 0x03, 0x02, 0x01, 0xff, 0xff, 0xff, 0xff,
X0x03,
X   0x02, 0x01, 0xff, 0xff, 0xff, 0xff, 0x03, 0x02, 0xf9, 0xff, 0xff,
X0xff,
X   0xff, 0x7f, 0x02, 0xf9, 0xff, 0xff, 0xff, 0xff, 0x7f, 0x02, 0xf1,
X0xff,
X   0xff, 0xff, 0xff, 0x3f, 0x02, 0xf1, 0xff, 0xff, 0xff, 0xff, 0x3f,
X0x02,
X   0xe1, 0xff, 0xff, 0xff, 0xff, 0x1f, 0x02, 0xe1, 0xff, 0xff, 0xff,
X0xff,
X   0x1f, 0x02, 0xf9, 0xff, 0xff, 0xff, 0xff, 0x7f, 0x02, 0xfd, 0xff,
X0xff,
X   0xff, 0xff, 0xff, 0x02, 0xf9, 0xff, 0xff, 0xff, 0xff, 0x7f, 0x02,
X0xf1,
X   0xff, 0xff, 0xff, 0xff, 0x3f, 0x02, 0xe1, 0xff, 0xff, 0xff, 0xff,
X0x1f,
X   0x02, 0xc1, 0xff, 0xff, 0xff, 0xff, 0x0f, 0x02, 0x81, 0xff, 0xff,
X0xff,
X   0xff, 0x07, 0x02, 0x01, 0xff, 0xff, 0xff, 0xff, 0x03, 0x02, 0x01,
X0xfe,
X   0xff, 0xff, 0xff, 0x01, 0x02, 0x01, 0xfc, 0xff, 0xff, 0xff, 0x00,
X0x02,
X   0x01, 0xf8, 0xff, 0xff, 0x7f, 0x00, 0x02, 0x01, 0xf8, 0xff, 0xff,
X0x7f,
X   0x00, 0x02, 0x01, 0xfc, 0xff, 0xff, 0xff, 0x00, 0x02, 0x01, 0xfe,
X0xff,
X   0xff, 0xff, 0x01, 0x02, 0x01, 0xff, 0xff, 0xff, 0xff, 0x03, 0x02,
X0x01,
X   0x00, 0x00, 0x03, 0x00, 0x00, 0x02, 0x01, 0x00, 0x00, 0x03, 0x00,
X0x00,
X   0x02, 0x01, 0x00, 0x00, 0x03, 0x00, 0x00, 0x02, 0x01, 0x00, 0x00,
X0x03,
X   0x00, 0x00, 0x02, 0x01, 0x00, 0x00, 0x03, 0x00, 0x00, 0x02, 0x01,
X0x00,
X   0x00, 0x00, 0x00, 0x00, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
X0x02,
X   0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xff, 0xff, 0xff,
X0xff,
X   0xff, 0x03};
END_OF_FILE
if test 2267 -ne `wc -c <'bitmap/maple.bm'`; then
    echo shar: \"'bitmap/maple.bm'\" unpacked with wrong size!
fi
# end of 'bitmap/maple.bm'
fi
if test -f 'bitmap/smile.bm' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'bitmap/smile.bm'\"
else
echo shar: Extracting \"'bitmap/smile.bm'\" \(2267 characters\)
sed "s/^X//" >'bitmap/smile.bm' <<'END_OF_FILE'
X#define smile_width 50
X#define smile_height 50
Xstatic char smile_bits[] = {
X   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x03, 0x01, 0x00, 0x00, 0x00,
X0x00,
X   0x00, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x01, 0x00,
X0x00,
X   0x00, 0x00, 0x00, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02,
X0x01,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x01, 0x70, 0x00, 0x00, 0x1c,
X0x00,
X   0x02, 0x01, 0xf8, 0x00, 0x00, 0x3e, 0x00, 0x02, 0x01, 0xfc, 0x01,
X0x00,
X   0x7f, 0x00, 0x02, 0x01, 0xfc, 0x01, 0x00, 0x7f, 0x00, 0x02, 0x01,
X0xfe,
X   0x03, 0x80, 0xff, 0x00, 0x02, 0x01, 0xfe, 0x03, 0x80, 0xff, 0x00,
X0x02,
X   0x01, 0xfe, 0x03, 0x80, 0xff, 0x00, 0x02, 0x01, 0xfe, 0x03, 0x80,
X0xff,
X   0x00, 0x02, 0x01, 0xfe, 0x03, 0x80, 0xff, 0x00, 0x02, 0x01, 0xfe,
X0x03,
X   0x80, 0xff, 0x00, 0x02, 0x01, 0xfe, 0x03, 0x80, 0xff, 0x00, 0x02,
X0x01,
X   0xfc, 0x01, 0x00, 0x7f, 0x00, 0x02, 0x01, 0xfc, 0x01, 0x00, 0x7f,
X0x00,
X   0x02, 0x01, 0xf8, 0x00, 0x00, 0x3e, 0x00, 0x02, 0x01, 0x70, 0x00,
X0x00,
X   0x1c, 0x00, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x01,
X0x00,
X   0x00, 0x00, 0x00, 0x00, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
X0x02,
X   0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x01, 0x00, 0x00, 0x00,
X0x00,
X   0x00, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x01, 0x00,
X0x00,
X   0x00, 0x00, 0x00, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02,
X0x01,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00,
X0x00,
X   0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x01, 0x00, 0x00,
X0x00,
X   0x00, 0x00, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x11,
X0x00,
X   0x00, 0x00, 0x00, 0x10, 0x02, 0x39, 0x00, 0x00, 0x00, 0x00, 0x38,
X0x02,
X   0x39, 0x00, 0x00, 0x00, 0x00, 0x38, 0x02, 0x39, 0x00, 0x00, 0x00,
X0x00,
X   0x38, 0x02, 0xf9, 0x00, 0x00, 0x00, 0x00, 0x3e, 0x02, 0xf9, 0x03,
X0x00,
X   0x00, 0x80, 0x3f, 0x02, 0x99, 0x3f, 0x00, 0x00, 0xf8, 0x33, 0x02,
X0x11,
X   0xfc, 0x07, 0xc0, 0x7f, 0x10, 0x02, 0x01, 0xf8, 0xff, 0xff, 0x3f,
X0x00,
X   0x02, 0x01, 0xc0, 0xff, 0xff, 0x07, 0x00, 0x02, 0x01, 0x00, 0xe0,
X0x0f,
X   0x00, 0x00, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x01,
X0x00,
X   0x00, 0x00, 0x00, 0x00, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
X0x02,
X   0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xff, 0xff, 0xff,
X0xff,
X   0xff, 0x03};
END_OF_FILE
if test 2267 -ne `wc -c <'bitmap/smile.bm'`; then
    echo shar: \"'bitmap/smile.bm'\" unpacked with wrong size!
fi
# end of 'bitmap/smile.bm'
fi
if test -f 'bitmap/star.bm' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'bitmap/star.bm'\"
else
echo shar: Extracting \"'bitmap/star.bm'\" \(2264 characters\)
sed "s/^X//" >'bitmap/star.bm' <<'END_OF_FILE'
X#define star_width 50
X#define star_height 50
Xstatic char star_bits[] = {
X   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x03, 0x01, 0x00, 0x00, 0x00,
X0x00,
X   0x00, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x01, 0x00,
X0x00,
X   0x02, 0x00, 0x00, 0x02, 0x01, 0x00, 0x00, 0x02, 0x00, 0x00, 0x02,
X0x01,
X   0x00, 0x00, 0x07, 0x00, 0x00, 0x02, 0x01, 0x00, 0x00, 0x07, 0x00,
X0x00,
X   0x02, 0x01, 0x00, 0x00, 0x07, 0x00, 0x00, 0x02, 0x01, 0x00, 0x80,
X0x0f,
X   0x00, 0x00, 0x02, 0x01, 0x00, 0x80, 0x0f, 0x00, 0x00, 0x02, 0x01,
X0x00,
X   0x80, 0x0f, 0x00, 0x00, 0x02, 0x01, 0x00, 0x80, 0x1f, 0x00, 0x00,
X0x02,
X   0x01, 0x00, 0xc0, 0x1f, 0x00, 0x00, 0x02, 0x01, 0x00, 0xc0, 0x1f,
X0x00,
X   0x00, 0x02, 0x01, 0x00, 0xc0, 0x1f, 0x00, 0x00, 0x02, 0x01, 0x00,
X0xe0,
X   0x3f, 0x00, 0x00, 0x02, 0x01, 0x00, 0xe0, 0x3f, 0x00, 0x00, 0x02,
X0x01,
X   0x00, 0xe0, 0x3f, 0x00, 0x00, 0x02, 0x01, 0x00, 0xf0, 0x3f, 0x00,
X0x00,
X   0x02, 0xf9, 0xff, 0xff, 0xff, 0xff, 0x7f, 0x02, 0xf1, 0xff, 0xff,
X0xff,
X   0xff, 0x3f, 0x02, 0xe1, 0xff, 0xff, 0xff, 0xff, 0x1f, 0x02, 0x81,
X0xff,
X   0xff, 0xff, 0xff, 0x07, 0x02, 0x01, 0xff, 0xff, 0xff, 0xff, 0x03,
X0x02,
X   0x01, 0xfe, 0xff, 0xff, 0xff, 0x01, 0x02, 0x01, 0xf8, 0xff, 0xff,
X0x7f,
X   0x00, 0x02, 0x01, 0xf0, 0xff, 0xff, 0x3f, 0x00, 0x02, 0x01, 0xe0,
X0xff,
X   0xff, 0x1f, 0x00, 0x02, 0x01, 0x80, 0xff, 0xff, 0x07, 0x00, 0x02,
X0x01,
X   0x00, 0xff, 0xff, 0x03, 0x00, 0x02, 0x01, 0x00, 0xfe, 0xff, 0x03,
X0x00,
X   0x02, 0x01, 0x00, 0xff, 0xff, 0x03, 0x00, 0x02, 0x01, 0x00, 0xff,
X0xff,
X   0x03, 0x00, 0x02, 0x01, 0x00, 0xff, 0xff, 0x07, 0x00, 0x02, 0x01,
X0x80,
X   0xff, 0xff, 0x07, 0x00, 0x02, 0x01, 0x80, 0xff, 0xff, 0x07, 0x00,
X0x02,
X   0x01, 0x80, 0xff, 0xff, 0x07, 0x00, 0x02, 0x01, 0xc0, 0xff, 0xfc,
X0x0f,
X   0x00, 0x02, 0x01, 0xc0, 0x3f, 0xf0, 0x0f, 0x00, 0x02, 0x01, 0xc0,
X0x1f,
X   0xe0, 0x0f, 0x00, 0x02, 0x01, 0xc0, 0x0f, 0xc0, 0x1f, 0x00, 0x02,
X0x01,
X   0xe0, 0x03, 0x00, 0x1f, 0x00, 0x02, 0x01, 0xe0, 0x01, 0x00, 0x1e,
X0x00,
X   0x02, 0x01, 0xe0, 0x00, 0x00, 0x1c, 0x00, 0x02, 0x01, 0x30, 0x00,
X0x00,
X   0x30, 0x00, 0x02, 0x01, 0x10, 0x00, 0x00, 0x20, 0x00, 0x02, 0x01,
X0x00,
X   0x00, 0x00, 0x00, 0x00, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
X0x02,
X   0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xff, 0xff, 0xff,
X0xff,
X   0xff, 0x03};
END_OF_FILE
if test 2264 -ne `wc -c <'bitmap/star.bm'`; then
    echo shar: \"'bitmap/star.bm'\" unpacked with wrong size!
fi
# end of 'bitmap/star.bm'
fi
if test -f 'bitmap/vwood.bm' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'bitmap/vwood.bm'\"
else
echo shar: Extracting \"'bitmap/vwood.bm'\" \(2267 characters\)
sed "s/^X//" >'bitmap/vwood.bm' <<'END_OF_FILE'
X#define vwood_width 50
X#define vwood_height 50
Xstatic char vwood_bits[] = {
X   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x03, 0x21, 0x84, 0x10, 0x42,
X0x08,
X   0x21, 0x02, 0x21, 0x84, 0x10, 0x42, 0x08, 0x21, 0x02, 0x21, 0x84,
X0x10,
X   0x42, 0x08, 0x21, 0x02, 0x21, 0x84, 0x10, 0x42, 0x08, 0x21, 0x02,
X0x21,
X   0x84, 0x10, 0x42, 0x08, 0x21, 0x02, 0x21, 0x84, 0x10, 0x42, 0x08,
X0x21,
X   0x02, 0x21, 0x84, 0x10, 0x42, 0x08, 0x21, 0x02, 0x21, 0x84, 0x10,
X0x42,
X   0x08, 0x21, 0x02, 0x21, 0x84, 0x10, 0x42, 0x08, 0x21, 0x02, 0x21,
X0x84,
X   0x10, 0x42, 0x08, 0x21, 0x02, 0x21, 0x84, 0x10, 0x42, 0x08, 0x21,
X0x02,
X   0x21, 0x84, 0x10, 0x42, 0x08, 0x21, 0x02, 0x21, 0x84, 0x10, 0x42,
X0x08,
X   0x21, 0x02, 0x21, 0x84, 0x10, 0x42, 0x08, 0x21, 0x02, 0x21, 0x84,
X0x10,
X   0x42, 0x08, 0x21, 0x02, 0x21, 0x84, 0x10, 0x42, 0x08, 0x21, 0x02,
X0x21,
X   0x84, 0x10, 0x42, 0x08, 0x21, 0x02, 0x21, 0x84, 0x10, 0x42, 0x08,
X0x21,
X   0x02, 0x21, 0x84, 0x10, 0x42, 0x08, 0x21, 0x02, 0x21, 0x84, 0x10,
X0x42,
X   0x08, 0x21, 0x02, 0x21, 0x84, 0x10, 0x42, 0x08, 0x21, 0x02, 0x21,
X0x84,
X   0x10, 0x42, 0x08, 0x21, 0x02, 0x21, 0x84, 0x10, 0x42, 0x08, 0x21,
X0x02,
X   0x21, 0x84, 0x10, 0x42, 0x08, 0x21, 0x02, 0x21, 0x84, 0x10, 0x42,
X0x08,
X   0x21, 0x02, 0x21, 0x84, 0x10, 0x42, 0x08, 0x21, 0x02, 0x21, 0x84,
X0x10,
X   0x42, 0x08, 0x21, 0x02, 0x21, 0x84, 0x10, 0x42, 0x08, 0x21, 0x02,
X0x21,
X   0x84, 0x10, 0x42, 0x08, 0x21, 0x02, 0x21, 0x84, 0x10, 0x42, 0x08,
X0x21,
X   0x02, 0x21, 0x84, 0x10, 0x42, 0x08, 0x21, 0x02, 0x21, 0x84, 0x10,
X0x42,
X   0x08, 0x21, 0x02, 0x21, 0x84, 0x10, 0x42, 0x08, 0x21, 0x02, 0x21,
X0x84,
X   0x10, 0x42, 0x08, 0x21, 0x02, 0x21, 0x84, 0x10, 0x42, 0x08, 0x21,
X0x02,
X   0x21, 0x84, 0x10, 0x42, 0x08, 0x21, 0x02, 0x21, 0x84, 0x10, 0x42,
X0x08,
X   0x21, 0x02, 0x21, 0x84, 0x10, 0x42, 0x08, 0x21, 0x02, 0x21, 0x84,
X0x10,
X   0x42, 0x08, 0x21, 0x02, 0x21, 0x84, 0x10, 0x42, 0x08, 0x21, 0x02,
X0x21,
X   0x84, 0x10, 0x42, 0x08, 0x21, 0x02, 0x21, 0x84, 0x10, 0x42, 0x08,
X0x21,
X   0x02, 0x21, 0x84, 0x10, 0x42, 0x08, 0x21, 0x02, 0x21, 0x84, 0x10,
X0x42,
X   0x08, 0x21, 0x02, 0x21, 0x84, 0x10, 0x42, 0x08, 0x21, 0x02, 0x21,
X0x84,
X   0x10, 0x42, 0x08, 0x21, 0x02, 0x21, 0x84, 0x10, 0x42, 0x08, 0x21,
X0x02,
X   0x21, 0x84, 0x10, 0x42, 0x08, 0x21, 0x02, 0xff, 0xff, 0xff, 0xff,
X0xff,
X   0xff, 0x03};
END_OF_FILE
if test 2267 -ne `wc -c <'bitmap/vwood.bm'`; then
    echo shar: \"'bitmap/vwood.bm'\" unpacked with wrong size!
fi
# end of 'bitmap/vwood.bm'
fi
echo shar: End of archive 3 \(of 2\).
cp /dev/null ark3isdone
MISSING=""
for I in 1 2 ; do
    if test ! -f ark${I}isdone ; then
	MISSING="${MISSING} ${I}"
    fi
done
if test "${MISSING}" = "" ; then
    echo You have unpacked both archives.
    rm -f ark[1-9]isdone
else
    echo You still need to unpack the following archives:
    echo "        " ${MISSING}
fi
##  End of shell archive.
exit 0
