Path: uunet!zephyr.ens.tek.com!master!saab!billr
From: billr@saab.CNA.TEK.COM (Bill Randle)
Newsgroups: comp.sources.games
Subject: v13i085:  x4war2 - An X11 version of Chinese four-state war game (Ver. 1.1), Part04/04
Message-ID: <2796@master.CNA.TEK.COM>
Date: 25 Apr 92 00:50:39 GMT
Sender: news@master.CNA.TEK.COM
Lines: 393
Approved: billr@saab.CNA.TEK.COM

Submitted-by: Xiaobing Chen <xiaobing@cs.sfu.ca>
Posting-number: Volume 13, Issue 85
Archive-name: x4war2/Part04
Supersedes: x4war: Volume 13, Issue 77-79
Environment: X11, Xlib, Xt



#! /bin/sh
# This is a shell archive.  Remove anything before this line, then unpack
# it by saving it into a file and typing "sh file".  To overwrite existing
# files, type "sh file -c".  You can also feed this as standard input via
# unshar, or by typing "sh <file", e.g..  If this archive is complete, you
# will see the following message at the end:
#		"End of archive 4 (of 4)."
# Contents:  Imakefile Makefile.simple Patchlevel bitmaps/back0.xbm
#   bitmaps/back1.xbm bitmaps/back2.xbm bitmaps/back3.xbm
#   bitmaps/cursor.xbm bitmaps/image_piece/mine.xbm bitmaps/pillar.xbm
# Wrapped by billr@saab on Fri Apr 24 17:36:56 1992
PATH=/bin:/usr/bin:/usr/ucb ; export PATH
if test -f 'Imakefile' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'Imakefile'\"
else
echo shar: Extracting \"'Imakefile'\" \(281 characters\)
sed "s/^X//" >'Imakefile' <<'END_OF_FILE'
X# Imakefile for x4war
X#
X#
X
XDEFINES= -DCHINESE
X
XLOCAL_LIBRARIES = $(XTOOLLIB) $(XLIB)
X
X
XSRCS = x4war.c war.c
XOBJS = x4war.o war.o
X
XSRCBG = bgbitmap.c
XOBJSBG = bgbitmap.o
X
XNormalProgramTarget(x4war,$(OBJS),,$(LOCAL_LIBRARIES),)
X
XNormalProgramTarget(bgbitmap,$(OBJSBG),,$(XLIB),)
X
X
X
X
END_OF_FILE
if test 281 -ne `wc -c <'Imakefile'`; then
    echo shar: \"'Imakefile'\" unpacked with wrong size!
fi
# end of 'Imakefile'
fi
if test -f 'Makefile.simple' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'Makefile.simple'\"
else
echo shar: Extracting \"'Makefile.simple'\" \(379 characters\)
sed "s/^X//" >'Makefile.simple' <<'END_OF_FILE'
X#Makefile for x4war, under SunOS 4.1.1
X#
X# x4war
X#
X
XDEFS= -DCHINESE
X#DEFS=
X
XLDLIBS= -lXt -lX11
XCC= cc
X
X#CFLAGS= -g
XCFLAGS= -O
X
XOBJS= x4war.o war.o
X
Xx4war: $(OBJS)
X	$(CC) $(CFLAGS) -o $@ $(OBJS) $(LDLIBS)
X
Xx4war.o: x4war.c war.h
X	$(CC) $(CFLAGS) $(DEFS) -c x4war.c
X
Xwar.o: war.c war.h
X	$(CC) $(CFLAGS) -c war.c
X
X
Xbgbitmap: bgbitmap.c war.h
X	$(CC) -o bgbitmap bgbitmap.c -lX11
X
X
X
X
END_OF_FILE
if test 379 -ne `wc -c <'Makefile.simple'`; then
    echo shar: \"'Makefile.simple'\" unpacked with wrong size!
fi
# end of 'Makefile.simple'
fi
if test -f 'Patchlevel' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'Patchlevel'\"
else
echo shar: Extracting \"'Patchlevel'\" \(1035 characters\)
sed "s/^X//" >'Patchlevel' <<'END_OF_FILE'
XPatchleve 1.1
X(April 12, 1992)
X(Note: for those got x4war1.0, that one is not publically released to
X       'comp.sources.games'. It should be substituted by this 1.1 version )
X
XIn this version of x4war, some minor changes are made to the original one.
X
X1). another set of bitmaps is provided as an alternative bitmap set for the
X    faces of pieces. Now two set of bitmaps for the faces of pieces are
X    available. One is in Chinese characters, under
X	./bitmaps/chinese_piece
X
X    the other is a set of drawings to represent pieces with images, under
X	./bitmaps/image_piece
X
X2). A real two players version is implemented.
X
X3). Makefile.simple changed to provide compilation selections of bitmap set.
X
X4). x4war.c, war.c, and war.h modified.
X
X5). bgbitmap.c changed for some modification to the background of the board.
X
X6). README changed to explain how to modify Makefile.simple or x4war.c for
X    selecting a bitmap set.
X
X7). x4war.man changed, rule of the game is explained in more detail.
X
X8). this file (Patchlevel) is added.
X
X
END_OF_FILE
if test 1035 -ne `wc -c <'Patchlevel'`; then
    echo shar: \"'Patchlevel'\" unpacked with wrong size!
fi
# end of 'Patchlevel'
fi
if test -f 'bitmaps/back0.xbm' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'bitmaps/back0.xbm'\"
else
echo shar: Extracting \"'bitmaps/back0.xbm'\" \(1378 characters\)
sed "s/^X//" >'bitmaps/back0.xbm' <<'END_OF_FILE'
X#define back0_width 40
X#define back0_height 40
X#define back0_x_hot 20
X#define back0_y_hot 20
Xstatic char back0_bits[] = {
X   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x1f, 0x00,
X   0x00, 0x00, 0xf8, 0xdf, 0xff, 0xff, 0xff, 0xfb, 0xdf, 0xfb, 0x88, 0xdf,
X   0xfb, 0xdf, 0x7b, 0x77, 0xdf, 0xfb, 0xdf, 0x60, 0x77, 0x07, 0xfb, 0xdf,
X   0x7b, 0x77, 0xdf, 0xfb, 0xdf, 0x7b, 0x00, 0xdf, 0xfb, 0xdf, 0x7b, 0x77,
X   0xdf, 0xfb, 0xdf, 0xff, 0xff, 0xff, 0xfb, 0xdf, 0x01, 0x00, 0x80, 0xfb,
X   0xdf, 0xfd, 0xf7, 0xbf, 0xfb, 0xdf, 0xed, 0x56, 0xab, 0xfb, 0xdf, 0x45,
X   0x14, 0xa3, 0xfb, 0xdf, 0x55, 0x15, 0xa3, 0xfb, 0xdf, 0xfd, 0xf7, 0xba,
X   0xfb, 0xdf, 0xbd, 0xf7, 0xb8, 0xfb, 0xdf, 0x1d, 0xf7, 0xb8, 0xfb, 0xdf,
X   0x5d, 0xf7, 0xbf, 0xfb, 0xdf, 0x01, 0x00, 0x80, 0xfb, 0xdf, 0xfd, 0xf7,
X   0xbf, 0xfb, 0xdf, 0x55, 0xb5, 0xbb, 0xfb, 0xdf, 0x45, 0x54, 0xb5, 0xfb,
X   0xdf, 0x45, 0x54, 0xb5, 0xfb, 0xbf, 0xf9, 0xf7, 0x8f, 0xfd, 0x3f, 0x73,
X   0xb5, 0xe7, 0xfc, 0x7f, 0x66, 0x54, 0x73, 0xfe, 0xff, 0x4c, 0x54, 0x39,
X   0xff, 0xff, 0x99, 0xf7, 0x9c, 0xff, 0xff, 0x33, 0x77, 0xce, 0xff, 0xff,
X   0x67, 0x36, 0xe7, 0xff, 0xff, 0xcf, 0x94, 0xf3, 0xff, 0xff, 0x9f, 0xe3,
X   0xf9, 0xff, 0xff, 0x3f, 0xff, 0xfc, 0xff, 0xff, 0x7f, 0x7e, 0xfe, 0xff,
X   0xff, 0xff, 0x3c, 0xff, 0xff, 0xff, 0xff, 0x81, 0xff, 0xff, 0xff, 0xff,
X   0xc3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff};
X
X
X
X
END_OF_FILE
if test 1378 -ne `wc -c <'bitmaps/back0.xbm'`; then
    echo shar: \"'bitmaps/back0.xbm'\" unpacked with wrong size!
fi
# end of 'bitmaps/back0.xbm'
fi
if test -f 'bitmaps/back1.xbm' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'bitmaps/back1.xbm'\"
else
echo shar: Extracting \"'bitmaps/back1.xbm'\" \(1378 characters\)
sed "s/^X//" >'bitmaps/back1.xbm' <<'END_OF_FILE'
X#define back1_width 40
X#define back1_height 40
X#define back1_x_hot 20
X#define back1_y_hot 20
Xstatic char back1_bits[] = {
X   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
X   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
X   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
X   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
X   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x07, 0x00, 0x00, 0x00, 0xe0,
X   0x07, 0x00, 0x00, 0x00, 0xe0, 0x07, 0x00, 0x00, 0x00, 0xe0, 0x07, 0x00,
X   0x00, 0x00, 0xe0, 0x07, 0x00, 0x00, 0x00, 0xe0, 0x07, 0x00, 0x00, 0x00,
X   0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
X   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
X   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x07, 0x00, 0x00, 0x00, 0xe0,
X   0x07, 0x00, 0x00, 0x00, 0xe0, 0x07, 0x00, 0x00, 0x00, 0xe0, 0x07, 0x00,
X   0x00, 0x00, 0xe0, 0x07, 0x00, 0x00, 0x00, 0xe0, 0x07, 0x00, 0x00, 0x00,
X   0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
X   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
X   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
X   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
X   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff};
X
X
X
X
END_OF_FILE
if test 1378 -ne `wc -c <'bitmaps/back1.xbm'`; then
    echo shar: \"'bitmaps/back1.xbm'\" unpacked with wrong size!
fi
# end of 'bitmaps/back1.xbm'
fi
if test -f 'bitmaps/back2.xbm' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'bitmaps/back2.xbm'\"
else
echo shar: Extracting \"'bitmaps/back2.xbm'\" \(1378 characters\)
sed "s/^X//" >'bitmaps/back2.xbm' <<'END_OF_FILE'
X#define back2_width 40
X#define back2_height 40
X#define back2_x_hot 20
X#define back2_y_hot 20
Xstatic char back2_bits[] = {
X   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x7f, 0x00, 0xf0, 0xff, 0xff, 0xbf,
X   0xff, 0x8f, 0xff, 0xff, 0xdf, 0xff, 0x3f, 0xff, 0xff, 0xef, 0xff, 0x7f,
X   0xfe, 0xff, 0xe7, 0xff, 0xff, 0xfe, 0xff, 0xf7, 0xff, 0xff, 0xfe, 0xff,
X   0xf9, 0xff, 0xff, 0xfc, 0xff, 0xfc, 0xff, 0xff, 0xf9, 0x7f, 0xe6, 0xff,
X   0x0f, 0xf8, 0x07, 0x00, 0x3c, 0x80, 0xfb, 0x77, 0x02, 0x00, 0xe0, 0x81,
X   0xf7, 0x03, 0x00, 0x8e, 0xb9, 0x97, 0x03, 0xf0, 0x00, 0xb7, 0x97, 0x03,
X   0x30, 0xd0, 0xb2, 0xd7, 0x03, 0x10, 0x46, 0xae, 0xd7, 0x03, 0x68, 0x00,
X   0xaf, 0x97, 0x03, 0xc8, 0xef, 0xb7, 0xf7, 0x0f, 0xec, 0xff, 0xb3, 0xe7,
X   0x1f, 0xcf, 0xfe, 0xcf, 0xcf, 0xff, 0xcf, 0xff, 0xe7, 0x1f, 0xff, 0x7f,
X   0xff, 0xf9, 0xff, 0xfc, 0x39, 0xfe, 0xfd, 0xff, 0xfd, 0x05, 0xfe, 0xfd,
X   0xff, 0xfd, 0x01, 0xfe, 0xfd, 0xff, 0xf9, 0x33, 0xff, 0xfe, 0xff, 0x1b,
X   0x30, 0xf0, 0xfe, 0xff, 0x00, 0x00, 0x02, 0xfe, 0xff, 0xf3, 0x03, 0x7e,
X   0xfc, 0xff, 0xf7, 0x00, 0x38, 0xff, 0xff, 0xf7, 0x07, 0xbf, 0xff, 0xff,
X   0xe7, 0xff, 0x9f, 0xff, 0xff, 0x8f, 0xff, 0xe7, 0xff, 0xff, 0x3f, 0xfe,
X   0xfb, 0xff, 0xff, 0xff, 0xfc, 0xfc, 0xff, 0xff, 0xff, 0x71, 0xfe, 0xff,
X   0xff, 0xff, 0x13, 0xff, 0xff, 0xff, 0xff, 0xe7, 0xff, 0xff, 0xff, 0xff,
X   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff};
X
X
X
X
END_OF_FILE
if test 1378 -ne `wc -c <'bitmaps/back2.xbm'`; then
    echo shar: \"'bitmaps/back2.xbm'\" unpacked with wrong size!
fi
# end of 'bitmaps/back2.xbm'
fi
if test -f 'bitmaps/back3.xbm' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'bitmaps/back3.xbm'\"
else
echo shar: Extracting \"'bitmaps/back3.xbm'\" \(1378 characters\)
sed "s/^X//" >'bitmaps/back3.xbm' <<'END_OF_FILE'
X#define back3_width 40
X#define back3_height 40
X#define back3_x_hot 20
X#define back3_y_hot 20
Xstatic char back3_bits[] = {
X   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
X   0xef, 0xff, 0xff, 0xff, 0xff, 0xef, 0xff, 0xff, 0xff, 0xff, 0xc7, 0xff,
X   0xff, 0xff, 0xff, 0xc7, 0xff, 0xff, 0xff, 0xff, 0xc7, 0xff, 0xff, 0xff,
X   0xff, 0x83, 0xff, 0xff, 0xff, 0xff, 0x83, 0xff, 0xff, 0xff, 0xff, 0x81,
X   0xff, 0xff, 0xff, 0xff, 0x01, 0xff, 0xff, 0xff, 0xff, 0x01, 0xff, 0xff,
X   0xff, 0xff, 0x00, 0xfe, 0xff, 0xff, 0xff, 0x00, 0xfe, 0xff, 0x03, 0x00,
X   0x00, 0x00, 0xc0, 0x07, 0x00, 0x00, 0x00, 0xe0, 0x0f, 0x00, 0x00, 0x00,
X   0xf0, 0x3f, 0x00, 0x00, 0x00, 0xfc, 0x7f, 0x00, 0x00, 0x00, 0xfe, 0xff,
X   0x00, 0x00, 0x00, 0xff, 0xff, 0x03, 0x00, 0xc0, 0xff, 0xff, 0x07, 0x00,
X   0xe0, 0xff, 0xff, 0x0f, 0x00, 0xf0, 0xff, 0xff, 0x0f, 0x00, 0xf0, 0xff,
X   0xff, 0x0f, 0x00, 0xe0, 0xff, 0xff, 0x07, 0x00, 0xe0, 0xff, 0xff, 0x07,
X   0x00, 0xe0, 0xff, 0xff, 0x07, 0x00, 0xc0, 0xff, 0xff, 0x03, 0x00, 0xc0,
X   0xff, 0xff, 0x03, 0x18, 0xc0, 0xff, 0xff, 0x03, 0x7e, 0x80, 0xff, 0xff,
X   0x01, 0xff, 0x80, 0xff, 0xff, 0x81, 0xff, 0x81, 0xff, 0xff, 0xe0, 0xff,
X   0x07, 0xff, 0xff, 0xf0, 0xff, 0x0f, 0xff, 0xff, 0xf8, 0xff, 0x1f, 0xff,
X   0x7f, 0xfe, 0xff, 0x7f, 0xfe, 0x7f, 0xff, 0xff, 0xff, 0xfe, 0xff, 0xff,
X   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff};
X
X
X
X
END_OF_FILE
if test 1378 -ne `wc -c <'bitmaps/back3.xbm'`; then
    echo shar: \"'bitmaps/back3.xbm'\" unpacked with wrong size!
fi
# end of 'bitmaps/back3.xbm'
fi
if test -f 'bitmaps/cursor.xbm' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'bitmaps/cursor.xbm'\"
else
echo shar: Extracting \"'bitmaps/cursor.xbm'\" \(505 characters\)
sed "s/^X//" >'bitmaps/cursor.xbm' <<'END_OF_FILE'
X#define cursor_width 20
X#define cursor_height 20
X#define cursor_x_hot 9
X#define cursor_y_hot 9
Xstatic char cursor_bits[] = {
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x0f, 0x00,
X   0xe0, 0x3f, 0x00, 0xf0, 0x7f, 0x00, 0xf0, 0x7f, 0x00, 0xf8, 0xf8, 0x00,
X   0x78, 0xf2, 0x00, 0x78, 0xf7, 0x00, 0x78, 0xf2, 0x00, 0xf8, 0xf8, 0x00,
X   0xf0, 0x7f, 0x00, 0xf0, 0x7f, 0x00, 0xe0, 0x3f, 0x00, 0x80, 0x0f, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
X
X
X
X
END_OF_FILE
if test 505 -ne `wc -c <'bitmaps/cursor.xbm'`; then
    echo shar: \"'bitmaps/cursor.xbm'\" unpacked with wrong size!
fi
# end of 'bitmaps/cursor.xbm'
fi
if test -f 'bitmaps/image_piece/mine.xbm' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'bitmaps/image_piece/mine.xbm'\"
else
echo shar: Extracting \"'bitmaps/image_piece/mine.xbm'\" \(1327 characters\)
sed "s/^X//" >'bitmaps/image_piece/mine.xbm' <<'END_OF_FILE'
X#define mine_width 40
X#define mine_height 40
Xstatic char mine_bits[] = {
X   0xff, 0xff, 0xff, 0xff, 0x07, 0xff, 0xff, 0xff, 0xff, 0x0f, 0xff, 0xff,
X   0xff, 0xff, 0x17, 0xff, 0xff, 0xff, 0xff, 0x2f, 0xff, 0x07, 0xc0, 0xff,
X   0x57, 0xff, 0x03, 0x80, 0xff, 0xaf, 0xff, 0x03, 0x80, 0xff, 0x57, 0xff,
X   0x01, 0x00, 0xff, 0xaf, 0xff, 0x05, 0x40, 0xff, 0x57, 0xff, 0x69, 0x2c,
X   0xff, 0xaf, 0xff, 0x69, 0x2c, 0xff, 0x57, 0xff, 0x05, 0x40, 0xff, 0xaf,
X   0xff, 0x03, 0x81, 0xff, 0x57, 0xff, 0x07, 0xc1, 0xff, 0xaf, 0xff, 0x0f,
X   0xe1, 0xff, 0x57, 0xff, 0x07, 0xc0, 0xff, 0xaf, 0x1f, 0x07, 0xc0, 0xf1,
X   0x57, 0x1f, 0xa7, 0xca, 0xf1, 0xaf, 0x0f, 0x06, 0xc0, 0xe0, 0x57, 0x0f,
X   0x0c, 0x60, 0xe0, 0xaf, 0x7f, 0x10, 0x10, 0xfc, 0x57, 0xff, 0xe3, 0x8f,
X   0xff, 0xaf, 0xff, 0x8f, 0xe3, 0xff, 0x57, 0xff, 0x3f, 0xf8, 0xff, 0xaf,
X   0xff, 0x3f, 0xf8, 0xff, 0x57, 0xff, 0x8f, 0xe3, 0xff, 0xaf, 0xff, 0xe3,
X   0x8f, 0xff, 0x57, 0x7f, 0xf0, 0x1f, 0xfc, 0xaf, 0x0f, 0xfc, 0x7f, 0xe0,
X   0x57, 0x0f, 0xfe, 0xff, 0xe0, 0xaf, 0x1f, 0xff, 0xff, 0xf1, 0x57, 0x1f,
X   0xff, 0xff, 0xf1, 0xaf, 0xff, 0xff, 0xff, 0xff, 0x57, 0xaa, 0xaa, 0xaa,
X   0xaa, 0xaa, 0x54, 0x55, 0x55, 0x55, 0x55, 0xa8, 0xaa, 0xaa, 0xaa, 0xaa,
X   0x50, 0x55, 0x55, 0x55, 0x55, 0xa0, 0xaa, 0xaa, 0xaa, 0xaa, 0x40, 0x55,
X   0x55, 0x55, 0x55, 0x80, 0xaa, 0xaa, 0xaa, 0xaa};
X
X
END_OF_FILE
if test 1327 -ne `wc -c <'bitmaps/image_piece/mine.xbm'`; then
    echo shar: \"'bitmaps/image_piece/mine.xbm'\" unpacked with wrong size!
fi
# end of 'bitmaps/image_piece/mine.xbm'
fi
if test -f 'bitmaps/pillar.xbm' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'bitmaps/pillar.xbm'\"
else
echo shar: Extracting \"'bitmaps/pillar.xbm'\" \(1332 characters\)
sed "s/^X//" >'bitmaps/pillar.xbm' <<'END_OF_FILE'
X#define pillar_width 40
X#define pillar_height 40
Xstatic char pillar_bits[] = {
X   0xff, 0xff, 0xff, 0xff, 0xff, 0x0f, 0xe0, 0x81, 0x07, 0xf0, 0xcf, 0xdf,
X   0xbd, 0xfb, 0xf3, 0x9f, 0xdf, 0xbd, 0xfb, 0xf9, 0x9f, 0x3f, 0x3c, 0xfc,
X   0xf9, 0x9f, 0xff, 0xff, 0xff, 0xf9, 0x3f, 0xff, 0xff, 0xff, 0xfc, 0x3f,
X   0x00, 0x00, 0x00, 0xfc, 0x3f, 0x00, 0x00, 0x00, 0xfc, 0xff, 0xfc, 0xff,
X   0x3f, 0xff, 0xff, 0xfc, 0xff, 0x3f, 0xff, 0xff, 0x00, 0x00, 0x00, 0xff,
X   0xff, 0xcc, 0xe7, 0x33, 0xff, 0xff, 0xcc, 0xe7, 0x33, 0xff, 0xff, 0xcc,
X   0xe7, 0x33, 0xff, 0xff, 0xcc, 0xe7, 0x33, 0xff, 0xff, 0xcc, 0xe7, 0x33,
X   0xff, 0xff, 0xcc, 0xe7, 0x33, 0xff, 0xff, 0xcc, 0xe7, 0x33, 0xff, 0xff,
X   0xcc, 0xe7, 0x33, 0xff, 0xff, 0xcc, 0xe7, 0x33, 0xff, 0xff, 0xcc, 0xe7,
X   0x33, 0xff, 0xff, 0xcc, 0xe7, 0x33, 0xff, 0xff, 0xcc, 0xe7, 0x33, 0xff,
X   0xff, 0xcc, 0xe7, 0x33, 0xff, 0xff, 0xcc, 0xe7, 0x33, 0xff, 0xff, 0xcc,
X   0xe7, 0x33, 0xff, 0xff, 0xcc, 0xe7, 0x33, 0xff, 0xff, 0xcc, 0xe7, 0x33,
X   0xff, 0xff, 0xcc, 0xe7, 0x33, 0xff, 0xff, 0xcc, 0xe7, 0x33, 0xff, 0x7f,
X   0x00, 0x00, 0x00, 0xfe, 0x7f, 0xfe, 0xff, 0x7f, 0xfe, 0x1f, 0x00, 0x00,
X   0x00, 0xf8, 0x9f, 0xff, 0xff, 0xff, 0xf9, 0x07, 0x00, 0x00, 0x00, 0xe0,
X   0xf3, 0xff, 0xff, 0xff, 0xcf, 0xf9, 0xff, 0xff, 0xff, 0x9f, 0x01, 0x00,
X   0x00, 0x00, 0x80, 0xff, 0xff, 0xff, 0xff, 0xff};
X
END_OF_FILE
if test 1332 -ne `wc -c <'bitmaps/pillar.xbm'`; then
    echo shar: \"'bitmaps/pillar.xbm'\" unpacked with wrong size!
fi
# end of 'bitmaps/pillar.xbm'
fi
echo shar: End of archive 4 \(of 4\).
cp /dev/null ark4isdone
MISSING=""
for I in 1 2 3 4 ; do
    if test ! -f ark${I}isdone ; then
	MISSING="${MISSING} ${I}"
    fi
done
if test "${MISSING}" = "" ; then
    echo You have unpacked all 4 archives.
    rm -f ark[1-9]isdone
else
    echo You still need to unpack the following archives:
    echo "        " ${MISSING}
fi
##  End of shell archive.
exit 0
