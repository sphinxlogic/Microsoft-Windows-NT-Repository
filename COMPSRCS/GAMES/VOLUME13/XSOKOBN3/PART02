Path: uunet!zephyr.ens.tek.com!master!saab!billr
From: billr@saab.CNA.TEK.COM (Bill Randle)
Newsgroups: comp.sources.games
Subject: v13i034:  xsokoban3 - another X11 based, get the money game (V2), Part02/03
Message-ID: <2433@masterCNA.TEK.COM>
Date: 10 Feb 92 23:55:28 GMT
Sender: news@masterCNA.TEK.COM
Lines: 1608
Approved: billr@saab.CNA.TEK.COM

Submitted-by: "Joseph L. Traub" <jt1o+@andrew.cmu.edu>
Posting-number: Volume 13, Issue 34
Archive-name: xsokoban3/Part02
Supersedes: xsokoban2: Volume 13, Issue 13-15
Environment: X11, Xlib



#! /bin/sh
# This is a shell archive.  Remove anything before this line, then unpack
# it by saving it into a file and typing "sh file".  To overwrite existing
# files, type "sh file -c".  You can also feed this as standard input via
# unshar, or by typing "sh <file", e.g..  If this archive is complete, you
# will see the following message at the end:
#		"End of archive 2 (of 3)."
# Contents:  Makefile bitmaps/defaults/centerwall.xbm
#   bitmaps/defaults/east_twall.xbm bitmaps/defaults/eastwall.xbm
#   bitmaps/defaults/floor.xbm bitmaps/defaults/goal.xbm
#   bitmaps/defaults/horizwall.xbm bitmaps/defaults/llcornerwall.xbm
#   bitmaps/defaults/lonewall.xbm bitmaps/defaults/lrcornerwall.xbm
#   bitmaps/defaults/man.xbm bitmaps/defaults/north_twall.xbm
#   bitmaps/defaults/northwall.xbm bitmaps/defaults/object.xbm
#   bitmaps/defaults/saveman.xbm bitmaps/defaults/south_twall.xbm
#   bitmaps/defaults/southwall.xbm bitmaps/defaults/treasure.xbm
#   bitmaps/defaults/ulcornerwall.xbm
#   bitmaps/defaults/urcornerwall.xbm bitmaps/defaults/vertiwall.xbm
#   bitmaps/defaults/wall.xbm bitmaps/defaults/west_twall.xbm
#   bitmaps/defaults/westwall.xbm config.h defaults.h externs.h
#   globals.h help.h options.h resources.c save.c screen.c
#   screens/screen.10 screens/screen.51 screens/screen.85 xsokoban.man
# Wrapped by billr@saab on Mon Feb 10 15:46:04 1992
PATH=/bin:/usr/bin:/usr/ucb ; export PATH
if test -f 'Makefile' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'Makefile'\"
else
echo shar: Extracting \"'Makefile'\" \(1108 characters\)
sed "s/^X//" >'Makefile' <<'END_OF_FILE'
X# Uncomment the first one of this pair only if you are building under an AFS
X# environment, and then only if you know exactly what this does.
X#CFLAGS = -O -DVICE -I/usr/local/include -I/usr/local/include/res
XCFLAGS = -g -I/usr/local/include
X
X# Uncomment the first one of this pair only if you are building under an AFS
X# environment, and then only if you know exactly what this does.
X#LIBS = -L/usr/local/lib -lX11 $(AUTHLIBS) -L/usr/local/lib/res -lresolv
XLIBS = -L/usr/local/lib  -lX11 
X
XCC = gcc
X
XOBJECTS = display.o main.o resources.o play.o score.o screen.o save.o
X
XDEST = /usr/tmp
X
Xxsokoban: $(OBJECTS)
X	$(CC) $(CFLAGS) -o xsokoban $(OBJECTS) $(LIBS)
X
Xinstall: xsokoban
X	install -s xsokoban $(DEST)/xsokoban
X
Xclean :
X	rm xsokoban $(OBJECTS)
X# DO NOT DELETE THIS LINE -- make depend depends on it.
X
Xdisplay.o: display.c globals.h defaults.h help.h externs.h
Xmain.o: main.c globals.h options.h errors.h externs.h
Xplay.o: play.c globals.h externs.h
Xresources.o: resources.c globals.h externs.h
Xscreen.o: screen.c globals.h externs.h
Xscore.o: score.c globals.h externs.h
Xsave.o: save.c globals.h externs.h
END_OF_FILE
if test 1108 -ne `wc -c <'Makefile'`; then
    echo shar: \"'Makefile'\" unpacked with wrong size!
fi
# end of 'Makefile'
fi
if test -f 'bitmaps/defaults/centerwall.xbm' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'bitmaps/defaults/centerwall.xbm'\"
else
echo shar: Extracting \"'bitmaps/defaults/centerwall.xbm'\" \(842 characters\)
sed "s/^X//" >'bitmaps/defaults/centerwall.xbm' <<'END_OF_FILE'
X#define centerwall_width 30
X#define centerwall_height 30
Xstatic char centerwall_bits[] = {
X   0xbc, 0xff, 0x7f, 0x05, 0xbc, 0xff, 0x7f, 0x0a, 0xbb, 0xff, 0x7f, 0x35,
X   0xb7, 0xff, 0x7f, 0x3a, 0xaf, 0xff, 0x7f, 0x3d, 0x9f, 0xff, 0x7f, 0x3e,
X   0x80, 0xff, 0x7f, 0x00, 0xff, 0xff, 0xff, 0x3f, 0xff, 0xff, 0xff, 0x3f,
X   0xff, 0xff, 0xff, 0x3f, 0xff, 0xff, 0xff, 0x3f, 0xff, 0xff, 0xff, 0x3f,
X   0xff, 0xff, 0xff, 0x3f, 0xff, 0xff, 0xff, 0x3f, 0xff, 0xff, 0xff, 0x3f,
X   0xff, 0xff, 0xff, 0x3f, 0xff, 0xff, 0xff, 0x3f, 0xff, 0xff, 0xff, 0x3f,
X   0xff, 0xff, 0xff, 0x3f, 0xff, 0xff, 0xff, 0x3f, 0xff, 0xff, 0xff, 0x3f,
X   0xff, 0xff, 0xff, 0x3f, 0xff, 0xff, 0xff, 0x3f, 0x80, 0xff, 0x7f, 0x00,
X   0x95, 0xff, 0x7f, 0x15, 0xaa, 0xff, 0x7f, 0x28, 0xb5, 0xff, 0x7f, 0x11,
X   0xba, 0xff, 0x7f, 0x22, 0xbc, 0xff, 0x7f, 0x05, 0xbc, 0xff, 0x7f, 0x0a};
END_OF_FILE
if test 842 -ne `wc -c <'bitmaps/defaults/centerwall.xbm'`; then
    echo shar: \"'bitmaps/defaults/centerwall.xbm'\" unpacked with wrong size!
fi
# end of 'bitmaps/defaults/centerwall.xbm'
fi
if test -f 'bitmaps/defaults/east_twall.xbm' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'bitmaps/defaults/east_twall.xbm'\"
else
echo shar: Extracting \"'bitmaps/defaults/east_twall.xbm'\" \(842 characters\)
sed "s/^X//" >'bitmaps/defaults/east_twall.xbm' <<'END_OF_FILE'
X#define east_twall_width 30
X#define east_twall_height 30
Xstatic char east_twall_bits[] = {
X   0xbc, 0xff, 0x7f, 0x05, 0xbc, 0xff, 0x7f, 0x0a, 0xbb, 0xff, 0x7f, 0x05,
X   0xb7, 0xff, 0x7f, 0x0a, 0xaf, 0xff, 0x7f, 0x05, 0x9f, 0xff, 0x7f, 0x0a,
X   0x80, 0xff, 0x7f, 0x05, 0xff, 0xff, 0x7f, 0x0a, 0xff, 0xff, 0x7f, 0x05,
X   0xff, 0xff, 0x7f, 0x0a, 0xff, 0xff, 0x7f, 0x05, 0xff, 0xff, 0x7f, 0x0a,
X   0xff, 0xff, 0x7f, 0x05, 0xff, 0xff, 0x7f, 0x0a, 0xff, 0xff, 0x7f, 0x05,
X   0xff, 0xff, 0x7f, 0x0a, 0xff, 0xff, 0x7f, 0x05, 0xff, 0xff, 0x7f, 0x0a,
X   0xff, 0xff, 0x7f, 0x05, 0xff, 0xff, 0x7f, 0x0a, 0xff, 0xff, 0x7f, 0x05,
X   0xff, 0xff, 0x7f, 0x0a, 0xff, 0xff, 0x7f, 0x05, 0x80, 0xff, 0x7f, 0x0a,
X   0x95, 0xff, 0x7f, 0x05, 0xaa, 0xff, 0x7f, 0x0a, 0xb5, 0xff, 0x7f, 0x05,
X   0xba, 0xff, 0x7f, 0x0a, 0xbc, 0xff, 0x7f, 0x05, 0xbc, 0xff, 0x7f, 0x0a};
END_OF_FILE
if test 842 -ne `wc -c <'bitmaps/defaults/east_twall.xbm'`; then
    echo shar: \"'bitmaps/defaults/east_twall.xbm'\" unpacked with wrong size!
fi
# end of 'bitmaps/defaults/east_twall.xbm'
fi
if test -f 'bitmaps/defaults/eastwall.xbm' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'bitmaps/defaults/eastwall.xbm'\"
else
echo shar: Extracting \"'bitmaps/defaults/eastwall.xbm'\" \(836 characters\)
sed "s/^X//" >'bitmaps/defaults/eastwall.xbm' <<'END_OF_FILE'
X#define eastwall_width 30
X#define eastwall_height 30
Xstatic char eastwall_bits[] = {
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0x07,
X   0xff, 0xff, 0xff, 0x0b, 0xff, 0xff, 0xff, 0x05, 0xff, 0xff, 0xff, 0x0a,
X   0x00, 0x00, 0x00, 0x05, 0xff, 0xff, 0x7f, 0x0a, 0xff, 0xff, 0x7f, 0x05,
X   0xff, 0xff, 0x7f, 0x0a, 0xff, 0xff, 0x7f, 0x05, 0xff, 0xff, 0x7f, 0x0a,
X   0xff, 0xff, 0x7f, 0x05, 0xff, 0xff, 0x7f, 0x0a, 0xff, 0xff, 0x7f, 0x05,
X   0xff, 0xff, 0x7f, 0x0a, 0xff, 0xff, 0x7f, 0x05, 0xff, 0xff, 0x7f, 0x0a,
X   0xff, 0xff, 0x7f, 0x05, 0xff, 0xff, 0x7f, 0x0a, 0xff, 0xff, 0x7f, 0x05,
X   0xff, 0xff, 0x7f, 0x0a, 0xff, 0xff, 0x7f, 0x05, 0x00, 0x00, 0x00, 0x0a,
X   0x55, 0x55, 0x55, 0x04, 0xaa, 0xaa, 0xaa, 0x08, 0x55, 0x55, 0x55, 0x01,
X   0xaa, 0xaa, 0xaa, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
END_OF_FILE
if test 836 -ne `wc -c <'bitmaps/defaults/eastwall.xbm'`; then
    echo shar: \"'bitmaps/defaults/eastwall.xbm'\" unpacked with wrong size!
fi
# end of 'bitmaps/defaults/eastwall.xbm'
fi
if test -f 'bitmaps/defaults/floor.xbm' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'bitmaps/defaults/floor.xbm'\"
else
echo shar: Extracting \"'bitmaps/defaults/floor.xbm'\" \(827 characters\)
sed "s/^X//" >'bitmaps/defaults/floor.xbm' <<'END_OF_FILE'
X#define floor_width 30
X#define floor_height 30
Xstatic char floor_bits[] = {
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
END_OF_FILE
if test 827 -ne `wc -c <'bitmaps/defaults/floor.xbm'`; then
    echo shar: \"'bitmaps/defaults/floor.xbm'\" unpacked with wrong size!
fi
# end of 'bitmaps/defaults/floor.xbm'
fi
if test -f 'bitmaps/defaults/goal.xbm' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'bitmaps/defaults/goal.xbm'\"
else
echo shar: Extracting \"'bitmaps/defaults/goal.xbm'\" \(824 characters\)
sed "s/^X//" >'bitmaps/defaults/goal.xbm' <<'END_OF_FILE'
X#define goal_width 30
X#define goal_height 30
Xstatic char goal_bits[] = {
X   0x41, 0x10, 0x04, 0x01, 0xa2, 0x28, 0x8a, 0x22, 0x14, 0x45, 0x51, 0x14,
X   0x08, 0x82, 0x20, 0x08, 0x14, 0x45, 0x51, 0x14, 0xa2, 0x28, 0x8a, 0x22,
X   0x41, 0x10, 0x04, 0x01, 0xa2, 0x28, 0x8a, 0x22, 0x14, 0x45, 0x51, 0x14,
X   0x08, 0x82, 0x20, 0x08, 0x14, 0x45, 0x51, 0x14, 0xa2, 0x28, 0x8a, 0x22,
X   0x41, 0x10, 0x04, 0x01, 0xa2, 0x28, 0x8a, 0x22, 0x14, 0x45, 0x51, 0x14,
X   0x08, 0x82, 0x20, 0x08, 0x14, 0x45, 0x51, 0x14, 0xa2, 0x28, 0x8a, 0x22,
X   0x41, 0x10, 0x04, 0x01, 0xa2, 0x28, 0x8a, 0x22, 0x14, 0x45, 0x51, 0x14,
X   0x08, 0x82, 0x20, 0x08, 0x14, 0x45, 0x51, 0x14, 0xa2, 0x28, 0x8a, 0x22,
X   0x41, 0x10, 0x04, 0x01, 0xa2, 0x28, 0x8a, 0x22, 0x14, 0x45, 0x51, 0x14,
X   0x08, 0x82, 0x20, 0x08, 0x14, 0x45, 0x51, 0x14, 0xa2, 0x28, 0x8a, 0x22};
END_OF_FILE
if test 824 -ne `wc -c <'bitmaps/defaults/goal.xbm'`; then
    echo shar: \"'bitmaps/defaults/goal.xbm'\" unpacked with wrong size!
fi
# end of 'bitmaps/defaults/goal.xbm'
fi
if test -f 'bitmaps/defaults/horizwall.xbm' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'bitmaps/defaults/horizwall.xbm'\"
else
echo shar: Extracting \"'bitmaps/defaults/horizwall.xbm'\" \(839 characters\)
sed "s/^X//" >'bitmaps/defaults/horizwall.xbm' <<'END_OF_FILE'
X#define horizwall_width 30
X#define horizwall_height 30
Xstatic char horizwall_bits[] = {
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0x3f,
X   0xff, 0xff, 0xff, 0x3f, 0xff, 0xff, 0xff, 0x3f, 0xff, 0xff, 0xff, 0x3f,
X   0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0x3f, 0xff, 0xff, 0xff, 0x3f,
X   0xff, 0xff, 0xff, 0x3f, 0xff, 0xff, 0xff, 0x3f, 0xff, 0xff, 0xff, 0x3f,
X   0xff, 0xff, 0xff, 0x3f, 0xff, 0xff, 0xff, 0x3f, 0xff, 0xff, 0xff, 0x3f,
X   0xff, 0xff, 0xff, 0x3f, 0xff, 0xff, 0xff, 0x3f, 0xff, 0xff, 0xff, 0x3f,
X   0xff, 0xff, 0xff, 0x3f, 0xff, 0xff, 0xff, 0x3f, 0xff, 0xff, 0xff, 0x3f,
X   0xff, 0xff, 0xff, 0x3f, 0xff, 0xff, 0xff, 0x3f, 0x00, 0x00, 0x00, 0x00,
X   0x55, 0x55, 0x55, 0x15, 0xaa, 0xaa, 0xaa, 0x2a, 0x55, 0x55, 0x55, 0x15,
X   0xaa, 0xaa, 0xaa, 0x2a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
END_OF_FILE
if test 839 -ne `wc -c <'bitmaps/defaults/horizwall.xbm'`; then
    echo shar: \"'bitmaps/defaults/horizwall.xbm'\" unpacked with wrong size!
fi
# end of 'bitmaps/defaults/horizwall.xbm'
fi
if test -f 'bitmaps/defaults/llcornerwall.xbm' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'bitmaps/defaults/llcornerwall.xbm'\"
else
echo shar: Extracting \"'bitmaps/defaults/llcornerwall.xbm'\" \(848 characters\)
sed "s/^X//" >'bitmaps/defaults/llcornerwall.xbm' <<'END_OF_FILE'
X#define llcornerwall_width 30
X#define llcornerwall_height 30
Xstatic char llcornerwall_bits[] = {
X   0xbc, 0xff, 0x7f, 0x05, 0xbc, 0xff, 0x7f, 0x0a, 0xbc, 0xff, 0x7f, 0x35,
X   0xbc, 0xff, 0x7f, 0x3a, 0xbc, 0xff, 0x7f, 0x3d, 0xbc, 0xff, 0x7f, 0x3e,
X   0xbc, 0xff, 0x7f, 0x00, 0xbc, 0xff, 0xff, 0x3f, 0xbc, 0xff, 0xff, 0x3f,
X   0xbc, 0xff, 0xff, 0x3f, 0xbc, 0xff, 0xff, 0x3f, 0xbc, 0xff, 0xff, 0x3f,
X   0xbc, 0xff, 0xff, 0x3f, 0xbc, 0xff, 0xff, 0x3f, 0xbc, 0xff, 0xff, 0x3f,
X   0xbc, 0xff, 0xff, 0x3f, 0xbc, 0xff, 0xff, 0x3f, 0xbc, 0xff, 0xff, 0x3f,
X   0xbc, 0xff, 0xff, 0x3f, 0xbc, 0xff, 0xff, 0x3f, 0xbc, 0xff, 0xff, 0x3f,
X   0xbc, 0xff, 0xff, 0x3f, 0xbc, 0xff, 0xff, 0x3f, 0x3c, 0x00, 0x00, 0x00,
X   0x5c, 0x55, 0x55, 0x15, 0xac, 0xaa, 0xaa, 0x2a, 0x54, 0x55, 0x55, 0x15,
X   0xa8, 0xaa, 0xaa, 0x2a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
END_OF_FILE
if test 848 -ne `wc -c <'bitmaps/defaults/llcornerwall.xbm'`; then
    echo shar: \"'bitmaps/defaults/llcornerwall.xbm'\" unpacked with wrong size!
fi
# end of 'bitmaps/defaults/llcornerwall.xbm'
fi
if test -f 'bitmaps/defaults/lonewall.xbm' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'bitmaps/defaults/lonewall.xbm'\"
else
echo shar: Extracting \"'bitmaps/defaults/lonewall.xbm'\" \(836 characters\)
sed "s/^X//" >'bitmaps/defaults/lonewall.xbm' <<'END_OF_FILE'
X#define lonewall_width 30
X#define lonewall_height 30
Xstatic char lonewall_bits[] = {
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0xff, 0xff, 0x0f,
X   0xf4, 0xff, 0xff, 0x07, 0xec, 0xff, 0xff, 0x0b, 0xdc, 0xff, 0xff, 0x05,
X   0x3c, 0x00, 0x00, 0x0a, 0xbc, 0xff, 0x7f, 0x05, 0xbc, 0xff, 0x7f, 0x0a,
X   0xbc, 0xff, 0x7f, 0x05, 0xbc, 0xff, 0x7f, 0x0a, 0xbc, 0xff, 0x7f, 0x05,
X   0xbc, 0xff, 0x7f, 0x0a, 0xbc, 0xff, 0x7f, 0x05, 0xbc, 0xff, 0x7f, 0x0a,
X   0xbc, 0xff, 0x7f, 0x05, 0xbc, 0xff, 0x7f, 0x0a, 0xbc, 0xff, 0x7f, 0x05,
X   0xbc, 0xff, 0x7f, 0x0a, 0xbc, 0xff, 0x7f, 0x05, 0xbc, 0xff, 0x7f, 0x0a,
X   0xbc, 0xff, 0x7f, 0x05, 0xbc, 0xff, 0x7f, 0x0a, 0x3c, 0x00, 0x00, 0x04,
X   0xbc, 0xaa, 0xaa, 0x08, 0x5c, 0x55, 0x55, 0x01, 0xac, 0xaa, 0xaa, 0x02,
X   0x54, 0x55, 0x55, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
END_OF_FILE
if test 836 -ne `wc -c <'bitmaps/defaults/lonewall.xbm'`; then
    echo shar: \"'bitmaps/defaults/lonewall.xbm'\" unpacked with wrong size!
fi
# end of 'bitmaps/defaults/lonewall.xbm'
fi
if test -f 'bitmaps/defaults/lrcornerwall.xbm' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'bitmaps/defaults/lrcornerwall.xbm'\"
else
echo shar: Extracting \"'bitmaps/defaults/lrcornerwall.xbm'\" \(848 characters\)
sed "s/^X//" >'bitmaps/defaults/lrcornerwall.xbm' <<'END_OF_FILE'
X#define lrcornerwall_width 30
X#define lrcornerwall_height 30
Xstatic char lrcornerwall_bits[] = {
X   0xbc, 0xff, 0x7f, 0x05, 0xbc, 0xff, 0x7f, 0x0a, 0xbb, 0xff, 0x7f, 0x05,
X   0xb7, 0xff, 0x7f, 0x0a, 0xaf, 0xff, 0x7f, 0x05, 0x9f, 0xff, 0x7f, 0x0a,
X   0x80, 0xff, 0x7f, 0x05, 0xff, 0xff, 0x7f, 0x0a, 0xff, 0xff, 0x7f, 0x05,
X   0xff, 0xff, 0x7f, 0x0a, 0xff, 0xff, 0x7f, 0x05, 0xff, 0xff, 0x7f, 0x0a,
X   0xff, 0xff, 0x7f, 0x05, 0xff, 0xff, 0x7f, 0x0a, 0xff, 0xff, 0x7f, 0x05,
X   0xff, 0xff, 0x7f, 0x0a, 0xff, 0xff, 0x7f, 0x05, 0xff, 0xff, 0x7f, 0x0a,
X   0xff, 0xff, 0x7f, 0x05, 0xff, 0xff, 0x7f, 0x0a, 0xff, 0xff, 0x7f, 0x05,
X   0xff, 0xff, 0x7f, 0x0a, 0xff, 0xff, 0x7f, 0x05, 0x00, 0x00, 0x00, 0x0a,
X   0x55, 0x55, 0x55, 0x04, 0xaa, 0xaa, 0xaa, 0x08, 0x55, 0x55, 0x55, 0x01,
X   0xaa, 0xaa, 0xaa, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
END_OF_FILE
if test 848 -ne `wc -c <'bitmaps/defaults/lrcornerwall.xbm'`; then
    echo shar: \"'bitmaps/defaults/lrcornerwall.xbm'\" unpacked with wrong size!
fi
# end of 'bitmaps/defaults/lrcornerwall.xbm'
fi
if test -f 'bitmaps/defaults/man.xbm' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'bitmaps/defaults/man.xbm'\"
else
echo shar: Extracting \"'bitmaps/defaults/man.xbm'\" \(821 characters\)
sed "s/^X//" >'bitmaps/defaults/man.xbm' <<'END_OF_FILE'
X#define man_width 30
X#define man_height 30
Xstatic char man_bits[] = {
X   0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x03, 0x00, 0x00, 0x08, 0x04, 0x00,
X   0x00, 0x08, 0x04, 0x00, 0x00, 0x04, 0x08, 0x00, 0x00, 0x34, 0x0b, 0x00,
X   0x00, 0x04, 0x08, 0x00, 0x00, 0xe8, 0x05, 0x00, 0x00, 0xcc, 0x0c, 0x00,
X   0x00, 0xde, 0x1e, 0x00, 0x00, 0xda, 0x16, 0x00, 0x00, 0x3a, 0x17, 0x00,
X   0x00, 0xf9, 0x27, 0x00, 0x00, 0xf9, 0x27, 0x00, 0x80, 0xf8, 0x47, 0x00,
X   0x80, 0xf8, 0x47, 0x00, 0x80, 0xf8, 0x47, 0x00, 0x00, 0xf9, 0x27, 0x00,
X   0x00, 0xf9, 0x27, 0x00, 0x00, 0xfd, 0x2f, 0x00, 0x00, 0xfe, 0x1f, 0x00,
X   0x00, 0xfc, 0x0f, 0x00, 0x00, 0xf8, 0x07, 0x00, 0x00, 0x14, 0x0a, 0x00,
X   0x00, 0x3e, 0x1f, 0x00, 0x00, 0x3f, 0x3f, 0x00, 0x80, 0x3f, 0x7f, 0x00,
X   0xc0, 0x36, 0xdb, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
END_OF_FILE
if test 821 -ne `wc -c <'bitmaps/defaults/man.xbm'`; then
    echo shar: \"'bitmaps/defaults/man.xbm'\" unpacked with wrong size!
fi
# end of 'bitmaps/defaults/man.xbm'
fi
if test -f 'bitmaps/defaults/north_twall.xbm' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'bitmaps/defaults/north_twall.xbm'\"
else
echo shar: Extracting \"'bitmaps/defaults/north_twall.xbm'\" \(845 characters\)
sed "s/^X//" >'bitmaps/defaults/north_twall.xbm' <<'END_OF_FILE'
X#define north_twall_width 30
X#define north_twall_height 30
Xstatic char north_twall_bits[] = {
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0x3f,
X   0xff, 0xff, 0xff, 0x3f, 0xff, 0xff, 0xff, 0x3f, 0xff, 0xff, 0xff, 0x3f,
X   0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0x3f, 0xff, 0xff, 0xff, 0x3f,
X   0xff, 0xff, 0xff, 0x3f, 0xff, 0xff, 0xff, 0x3f, 0xff, 0xff, 0xff, 0x3f,
X   0xff, 0xff, 0xff, 0x3f, 0xff, 0xff, 0xff, 0x3f, 0xff, 0xff, 0xff, 0x3f,
X   0xff, 0xff, 0xff, 0x3f, 0xff, 0xff, 0xff, 0x3f, 0xff, 0xff, 0xff, 0x3f,
X   0xff, 0xff, 0xff, 0x3f, 0xff, 0xff, 0xff, 0x3f, 0xff, 0xff, 0xff, 0x3f,
X   0xff, 0xff, 0xff, 0x3f, 0xff, 0xff, 0xff, 0x3f, 0x80, 0xff, 0x7f, 0x00,
X   0x95, 0xff, 0x7f, 0x15, 0xaa, 0xff, 0x7f, 0x28, 0xb5, 0xff, 0x7f, 0x11,
X   0xba, 0xff, 0x7f, 0x22, 0xbc, 0xff, 0x7f, 0x05, 0xbc, 0xff, 0x7f, 0x0a};
END_OF_FILE
if test 845 -ne `wc -c <'bitmaps/defaults/north_twall.xbm'`; then
    echo shar: \"'bitmaps/defaults/north_twall.xbm'\" unpacked with wrong size!
fi
# end of 'bitmaps/defaults/north_twall.xbm'
fi
if test -f 'bitmaps/defaults/northwall.xbm' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'bitmaps/defaults/northwall.xbm'\"
else
echo shar: Extracting \"'bitmaps/defaults/northwall.xbm'\" \(839 characters\)
sed "s/^X//" >'bitmaps/defaults/northwall.xbm' <<'END_OF_FILE'
X#define northwall_width 30
X#define northwall_height 30
Xstatic char northwall_bits[] = {
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0xff, 0xff, 0x07,
X   0xf4, 0xff, 0xff, 0x0b, 0xec, 0xff, 0xff, 0x05, 0xdc, 0xff, 0xff, 0x0a,
X   0x3c, 0x00, 0x00, 0x05, 0xbc, 0xff, 0x7f, 0x0a, 0xbc, 0xff, 0x7f, 0x05,
X   0xbc, 0xff, 0x7f, 0x0a, 0xbc, 0xff, 0x7f, 0x05, 0xbc, 0xff, 0x7f, 0x0a,
X   0xbc, 0xff, 0x7f, 0x05, 0xbc, 0xff, 0x7f, 0x0a, 0xbc, 0xff, 0x7f, 0x05,
X   0xbc, 0xff, 0x7f, 0x0a, 0xbc, 0xff, 0x7f, 0x05, 0xbc, 0xff, 0x7f, 0x0a,
X   0xbc, 0xff, 0x7f, 0x05, 0xbc, 0xff, 0x7f, 0x0a, 0xbc, 0xff, 0x7f, 0x05,
X   0xbc, 0xff, 0x7f, 0x0a, 0xbc, 0xff, 0x7f, 0x05, 0xbc, 0xff, 0x7f, 0x0a,
X   0xbc, 0xff, 0x7f, 0x05, 0xbc, 0xff, 0x7f, 0x0a, 0xbc, 0xff, 0x7f, 0x05,
X   0xbc, 0xff, 0x7f, 0x0a, 0xbc, 0xff, 0x7f, 0x05, 0xbc, 0xff, 0x7f, 0x0a};
END_OF_FILE
if test 839 -ne `wc -c <'bitmaps/defaults/northwall.xbm'`; then
    echo shar: \"'bitmaps/defaults/northwall.xbm'\" unpacked with wrong size!
fi
# end of 'bitmaps/defaults/northwall.xbm'
fi
if test -f 'bitmaps/defaults/object.xbm' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'bitmaps/defaults/object.xbm'\"
else
echo shar: Extracting \"'bitmaps/defaults/object.xbm'\" \(830 characters\)
sed "s/^X//" >'bitmaps/defaults/object.xbm' <<'END_OF_FILE'
X#define object_width 30
X#define object_height 30
Xstatic char object_bits[] = {
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x07, 0x00,
X   0x00, 0xfc, 0x1f, 0x00, 0x00, 0x0f, 0x78, 0x00, 0x80, 0x03, 0xe0, 0x00,
X   0xc0, 0x00, 0x80, 0x01, 0x60, 0xf0, 0x01, 0x03, 0x60, 0xfc, 0x00, 0x03,
X   0x30, 0x0e, 0x00, 0x06, 0x30, 0x07, 0x00, 0x06, 0x18, 0x01, 0x00, 0x0c,
X   0x18, 0x00, 0x00, 0x0c, 0x18, 0x00, 0x00, 0x0c, 0x18, 0x00, 0x00, 0x0c,
X   0x18, 0x01, 0x00, 0x0c, 0x18, 0x01, 0x00, 0x0c, 0x18, 0x03, 0x00, 0x0c,
X   0x30, 0x07, 0x00, 0x06, 0x30, 0x0e, 0x00, 0x06, 0x60, 0x1c, 0x00, 0x03,
X   0x60, 0x78, 0x00, 0x03, 0xc0, 0xe0, 0x81, 0x01, 0x80, 0x03, 0xe0, 0x00,
X   0x00, 0x0f, 0x78, 0x00, 0x00, 0xfc, 0x1f, 0x00, 0x00, 0xf0, 0x07, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
END_OF_FILE
if test 830 -ne `wc -c <'bitmaps/defaults/object.xbm'`; then
    echo shar: \"'bitmaps/defaults/object.xbm'\" unpacked with wrong size!
fi
# end of 'bitmaps/defaults/object.xbm'
fi
if test -f 'bitmaps/defaults/saveman.xbm' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'bitmaps/defaults/saveman.xbm'\"
else
echo shar: Extracting \"'bitmaps/defaults/saveman.xbm'\" \(833 characters\)
sed "s/^X//" >'bitmaps/defaults/saveman.xbm' <<'END_OF_FILE'
X#define saveman_width 30
X#define saveman_height 30
Xstatic char saveman_bits[] = {
X   0x41, 0x10, 0x04, 0x01, 0xa2, 0xf8, 0x8b, 0x22, 0x14, 0x0d, 0x54, 0x14,
X   0x08, 0x0a, 0x24, 0x08, 0x14, 0x05, 0x58, 0x14, 0xa2, 0x34, 0x8b, 0x22,
X   0x41, 0x04, 0x08, 0x01, 0xa2, 0xe8, 0x85, 0x22, 0x14, 0xcd, 0x4c, 0x14,
X   0x08, 0xde, 0x3e, 0x08, 0x14, 0xdb, 0x56, 0x14, 0xa2, 0x3a, 0x97, 0x22,
X   0x41, 0xf9, 0x27, 0x01, 0xa2, 0xf9, 0xe7, 0x22, 0x94, 0xf8, 0x47, 0x14,
X   0x88, 0xf8, 0x47, 0x08, 0x94, 0xf8, 0x47, 0x14, 0xa2, 0xf9, 0xe7, 0x22,
X   0x41, 0xf9, 0x27, 0x01, 0xa2, 0xfd, 0xaf, 0x22, 0x14, 0xfe, 0x5f, 0x14,
X   0x08, 0xfe, 0x2f, 0x08, 0x14, 0xf9, 0x57, 0x14, 0xa2, 0x14, 0x8a, 0x22,
X   0x41, 0x3e, 0x1f, 0x01, 0xa2, 0x3f, 0xbf, 0x22, 0x94, 0x7f, 0x7f, 0x14,
X   0xc8, 0xb6, 0xdb, 0x08, 0x14, 0x45, 0x41, 0x14, 0xa2, 0x28, 0x8a, 0x22};
END_OF_FILE
if test 833 -ne `wc -c <'bitmaps/defaults/saveman.xbm'`; then
    echo shar: \"'bitmaps/defaults/saveman.xbm'\" unpacked with wrong size!
fi
# end of 'bitmaps/defaults/saveman.xbm'
fi
if test -f 'bitmaps/defaults/south_twall.xbm' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'bitmaps/defaults/south_twall.xbm'\"
else
echo shar: Extracting \"'bitmaps/defaults/south_twall.xbm'\" \(845 characters\)
sed "s/^X//" >'bitmaps/defaults/south_twall.xbm' <<'END_OF_FILE'
X#define south_twall_width 30
X#define south_twall_height 30
Xstatic char south_twall_bits[] = {
X   0xbc, 0xff, 0x7f, 0x05, 0xbc, 0xff, 0x7f, 0x0a, 0xbb, 0xff, 0x7f, 0x35,
X   0xb7, 0xff, 0x7f, 0x3a, 0xaf, 0xff, 0x7f, 0x3d, 0x9f, 0xff, 0x7f, 0x3e,
X   0x80, 0xff, 0x7f, 0x00, 0xff, 0xff, 0xff, 0x3f, 0xff, 0xff, 0xff, 0x3f,
X   0xff, 0xff, 0xff, 0x3f, 0xff, 0xff, 0xff, 0x3f, 0xff, 0xff, 0xff, 0x3f,
X   0xff, 0xff, 0xff, 0x3f, 0xff, 0xff, 0xff, 0x3f, 0xff, 0xff, 0xff, 0x3f,
X   0xff, 0xff, 0xff, 0x3f, 0xff, 0xff, 0xff, 0x3f, 0xff, 0xff, 0xff, 0x3f,
X   0xff, 0xff, 0xff, 0x3f, 0xff, 0xff, 0xff, 0x3f, 0xff, 0xff, 0xff, 0x3f,
X   0xff, 0xff, 0xff, 0x3f, 0xff, 0xff, 0xff, 0x3f, 0x00, 0x00, 0x00, 0x00,
X   0x55, 0x55, 0x55, 0x15, 0xaa, 0xaa, 0xaa, 0x2a, 0x55, 0x55, 0x55, 0x15,
X   0xaa, 0xaa, 0xaa, 0x2a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
END_OF_FILE
if test 845 -ne `wc -c <'bitmaps/defaults/south_twall.xbm'`; then
    echo shar: \"'bitmaps/defaults/south_twall.xbm'\" unpacked with wrong size!
fi
# end of 'bitmaps/defaults/south_twall.xbm'
fi
if test -f 'bitmaps/defaults/southwall.xbm' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'bitmaps/defaults/southwall.xbm'\"
else
echo shar: Extracting \"'bitmaps/defaults/southwall.xbm'\" \(839 characters\)
sed "s/^X//" >'bitmaps/defaults/southwall.xbm' <<'END_OF_FILE'
X#define southwall_width 30
X#define southwall_height 30
Xstatic char southwall_bits[] = {
X   0xbc, 0xff, 0x7f, 0x05, 0xbc, 0xff, 0x7f, 0x0a, 0xbc, 0xff, 0x7f, 0x05,
X   0xbc, 0xff, 0x7f, 0x0a, 0xbc, 0xff, 0x7f, 0x05, 0xbc, 0xff, 0x7f, 0x0a,
X   0xbc, 0xff, 0x7f, 0x05, 0xbc, 0xff, 0x7f, 0x0a, 0xbc, 0xff, 0x7f, 0x05,
X   0xbc, 0xff, 0x7f, 0x0a, 0xbc, 0xff, 0x7f, 0x05, 0xbc, 0xff, 0x7f, 0x0a,
X   0xbc, 0xff, 0x7f, 0x05, 0xbc, 0xff, 0x7f, 0x0a, 0xbc, 0xff, 0x7f, 0x05,
X   0xbc, 0xff, 0x7f, 0x0a, 0xbc, 0xff, 0x7f, 0x05, 0xbc, 0xff, 0x7f, 0x0a,
X   0xbc, 0xff, 0x7f, 0x05, 0xbc, 0xff, 0x7f, 0x0a, 0xbc, 0xff, 0x7f, 0x05,
X   0xbc, 0xff, 0x7f, 0x0a, 0xbc, 0xff, 0x7f, 0x05, 0x3c, 0x00, 0x00, 0x0a,
X   0x5c, 0x55, 0x55, 0x04, 0xac, 0xaa, 0xaa, 0x08, 0x54, 0x55, 0x55, 0x01,
X   0xa8, 0xaa, 0xaa, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
END_OF_FILE
if test 839 -ne `wc -c <'bitmaps/defaults/southwall.xbm'`; then
    echo shar: \"'bitmaps/defaults/southwall.xbm'\" unpacked with wrong size!
fi
# end of 'bitmaps/defaults/southwall.xbm'
fi
if test -f 'bitmaps/defaults/treasure.xbm' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'bitmaps/defaults/treasure.xbm'\"
else
echo shar: Extracting \"'bitmaps/defaults/treasure.xbm'\" \(836 characters\)
sed "s/^X//" >'bitmaps/defaults/treasure.xbm' <<'END_OF_FILE'
X#define treasure_width 30
X#define treasure_height 30
Xstatic char treasure_bits[] = {
X   0x41, 0x10, 0x04, 0x01, 0xa2, 0x28, 0x8a, 0x22, 0x14, 0xf5, 0x57, 0x14,
X   0x08, 0xfe, 0x3f, 0x08, 0x14, 0x8f, 0x7a, 0x14, 0xa2, 0x03, 0xc5, 0x22,
X   0xc1, 0x82, 0x8a, 0x01, 0x62, 0xf5, 0x15, 0x23, 0x74, 0xfe, 0xa8, 0x17,
X   0x38, 0x5e, 0x50, 0x0f, 0x34, 0x2f, 0xa0, 0x16, 0x1a, 0x55, 0x50, 0x2d,
X   0x39, 0xaa, 0xa8, 0x0e, 0x5a, 0x45, 0x15, 0x2d, 0xbc, 0x82, 0x0a, 0x1e,
X   0x58, 0x01, 0x05, 0x0c, 0xbc, 0x83, 0x0a, 0x1e, 0x5a, 0x47, 0x15, 0x2d,
X   0x31, 0xaf, 0xa8, 0x06, 0x32, 0x5e, 0x50, 0x27, 0x74, 0x3c, 0xa0, 0x17,
X   0x68, 0x7c, 0x50, 0x0b, 0xd4, 0xea, 0xa9, 0x15, 0xa2, 0x47, 0xf5, 0x22,
X   0x41, 0x8f, 0x7a, 0x01, 0xa2, 0xfc, 0x9f, 0x22, 0x14, 0xf5, 0x57, 0x14,
X   0x08, 0x82, 0x20, 0x08, 0x14, 0x45, 0x51, 0x14, 0xa2, 0x28, 0x8a, 0x22};
END_OF_FILE
if test 836 -ne `wc -c <'bitmaps/defaults/treasure.xbm'`; then
    echo shar: \"'bitmaps/defaults/treasure.xbm'\" unpacked with wrong size!
fi
# end of 'bitmaps/defaults/treasure.xbm'
fi
if test -f 'bitmaps/defaults/ulcornerwall.xbm' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'bitmaps/defaults/ulcornerwall.xbm'\"
else
echo shar: Extracting \"'bitmaps/defaults/ulcornerwall.xbm'\" \(848 characters\)
sed "s/^X//" >'bitmaps/defaults/ulcornerwall.xbm' <<'END_OF_FILE'
X#define ulcornerwall_width 30
X#define ulcornerwall_height 30
Xstatic char ulcornerwall_bits[] = {
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0xff, 0xff, 0x3f,
X   0xf4, 0xff, 0xff, 0x3f, 0xec, 0xff, 0xff, 0x3f, 0xdc, 0xff, 0xff, 0x3f,
X   0x3c, 0x00, 0x00, 0x00, 0xbc, 0xff, 0xff, 0x3f, 0xbc, 0xff, 0xff, 0x3f,
X   0xbc, 0xff, 0xff, 0x3f, 0xbc, 0xff, 0xff, 0x3f, 0xbc, 0xff, 0xff, 0x3f,
X   0xbc, 0xff, 0xff, 0x3f, 0xbc, 0xff, 0xff, 0x3f, 0xbc, 0xff, 0xff, 0x3f,
X   0xbc, 0xff, 0xff, 0x3f, 0xbc, 0xff, 0xff, 0x3f, 0xbc, 0xff, 0xff, 0x3f,
X   0xbc, 0xff, 0xff, 0x3f, 0xbc, 0xff, 0xff, 0x3f, 0xbc, 0xff, 0xff, 0x3f,
X   0xbc, 0xff, 0xff, 0x3f, 0xbc, 0xff, 0xff, 0x3f, 0xbc, 0xff, 0x7f, 0x00,
X   0xbc, 0xff, 0x7f, 0x15, 0xbc, 0xff, 0x7f, 0x28, 0xbc, 0xff, 0x7f, 0x11,
X   0xbc, 0xff, 0x7f, 0x22, 0xbc, 0xff, 0x7f, 0x05, 0xbc, 0xff, 0x7f, 0x0a};
END_OF_FILE
if test 848 -ne `wc -c <'bitmaps/defaults/ulcornerwall.xbm'`; then
    echo shar: \"'bitmaps/defaults/ulcornerwall.xbm'\" unpacked with wrong size!
fi
# end of 'bitmaps/defaults/ulcornerwall.xbm'
fi
if test -f 'bitmaps/defaults/urcornerwall.xbm' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'bitmaps/defaults/urcornerwall.xbm'\"
else
echo shar: Extracting \"'bitmaps/defaults/urcornerwall.xbm'\" \(848 characters\)
sed "s/^X//" >'bitmaps/defaults/urcornerwall.xbm' <<'END_OF_FILE'
X#define urcornerwall_width 30
X#define urcornerwall_height 30
Xstatic char urcornerwall_bits[] = {
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0x07,
X   0xff, 0xff, 0xff, 0x0b, 0xff, 0xff, 0xff, 0x05, 0xff, 0xff, 0xff, 0x0a,
X   0x00, 0x00, 0x00, 0x05, 0xff, 0xff, 0x7f, 0x0a, 0xff, 0xff, 0x7f, 0x05,
X   0xff, 0xff, 0x7f, 0x0a, 0xff, 0xff, 0x7f, 0x05, 0xff, 0xff, 0x7f, 0x0a,
X   0xff, 0xff, 0x7f, 0x05, 0xff, 0xff, 0x7f, 0x0a, 0xff, 0xff, 0x7f, 0x05,
X   0xff, 0xff, 0x7f, 0x0a, 0xff, 0xff, 0x7f, 0x05, 0xff, 0xff, 0x7f, 0x0a,
X   0xff, 0xff, 0x7f, 0x05, 0xff, 0xff, 0x7f, 0x0a, 0xff, 0xff, 0x7f, 0x05,
X   0xff, 0xff, 0x7f, 0x0a, 0xff, 0xff, 0x7f, 0x05, 0x80, 0xff, 0x7f, 0x0a,
X   0x95, 0xff, 0x7f, 0x05, 0xaa, 0xff, 0x7f, 0x0a, 0xb5, 0xff, 0x7f, 0x05,
X   0xba, 0xff, 0x7f, 0x0a, 0xbc, 0xff, 0x7f, 0x05, 0xbc, 0xff, 0x7f, 0x0a};
END_OF_FILE
if test 848 -ne `wc -c <'bitmaps/defaults/urcornerwall.xbm'`; then
    echo shar: \"'bitmaps/defaults/urcornerwall.xbm'\" unpacked with wrong size!
fi
# end of 'bitmaps/defaults/urcornerwall.xbm'
fi
if test -f 'bitmaps/defaults/vertiwall.xbm' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'bitmaps/defaults/vertiwall.xbm'\"
else
echo shar: Extracting \"'bitmaps/defaults/vertiwall.xbm'\" \(839 characters\)
sed "s/^X//" >'bitmaps/defaults/vertiwall.xbm' <<'END_OF_FILE'
X#define vertiwall_width 30
X#define vertiwall_height 30
Xstatic char vertiwall_bits[] = {
X   0xbc, 0xff, 0x7f, 0x05, 0xbc, 0xff, 0x7f, 0x0a, 0xbc, 0xff, 0x7f, 0x05,
X   0xbc, 0xff, 0x7f, 0x0a, 0xbc, 0xff, 0x7f, 0x05, 0xbc, 0xff, 0x7f, 0x0a,
X   0xbc, 0xff, 0x7f, 0x05, 0xbc, 0xff, 0x7f, 0x0a, 0xbc, 0xff, 0x7f, 0x05,
X   0xbc, 0xff, 0x7f, 0x0a, 0xbc, 0xff, 0x7f, 0x05, 0xbc, 0xff, 0x7f, 0x0a,
X   0xbc, 0xff, 0x7f, 0x05, 0xbc, 0xff, 0x7f, 0x0a, 0xbc, 0xff, 0x7f, 0x05,
X   0xbc, 0xff, 0x7f, 0x0a, 0xbc, 0xff, 0x7f, 0x05, 0xbc, 0xff, 0x7f, 0x0a,
X   0xbc, 0xff, 0x7f, 0x05, 0xbc, 0xff, 0x7f, 0x0a, 0xbc, 0xff, 0x7f, 0x05,
X   0xbc, 0xff, 0x7f, 0x0a, 0xbc, 0xff, 0x7f, 0x05, 0xbc, 0xff, 0x7f, 0x0a,
X   0xbc, 0xff, 0x7f, 0x05, 0xbc, 0xff, 0x7f, 0x0a, 0xbc, 0xff, 0x7f, 0x05,
X   0xbc, 0xff, 0x7f, 0x0a, 0xbc, 0xff, 0x7f, 0x05, 0xbc, 0xff, 0x7f, 0x0a};
END_OF_FILE
if test 839 -ne `wc -c <'bitmaps/defaults/vertiwall.xbm'`; then
    echo shar: \"'bitmaps/defaults/vertiwall.xbm'\" unpacked with wrong size!
fi
# end of 'bitmaps/defaults/vertiwall.xbm'
fi
if test -f 'bitmaps/defaults/wall.xbm' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'bitmaps/defaults/wall.xbm'\"
else
echo shar: Extracting \"'bitmaps/defaults/wall.xbm'\" \(824 characters\)
sed "s/^X//" >'bitmaps/defaults/wall.xbm' <<'END_OF_FILE'
X#define wall_width 30
X#define wall_height 30
Xstatic char wall_bits[] = {
X   0x00, 0x00, 0x00, 0x00, 0xfc, 0xff, 0xff, 0x0f, 0xfa, 0xff, 0xff, 0x17,
X   0xf6, 0xff, 0xff, 0x1b, 0xee, 0xff, 0xff, 0x1d, 0xde, 0xff, 0xff, 0x16,
X   0xbe, 0x00, 0x40, 0x1b, 0x7e, 0xff, 0xbf, 0x1d, 0xbe, 0xb6, 0x6d, 0x1f,
X   0xbe, 0xdb, 0x76, 0x1b, 0xbe, 0x6d, 0x5b, 0x1d, 0xbe, 0xf6, 0x6f, 0x1f,
X   0xbe, 0xfb, 0x7f, 0x1f, 0xbe, 0xfd, 0x5f, 0x1f, 0xbe, 0xfe, 0x7f, 0x1f,
X   0xbe, 0xfb, 0x7f, 0x1f, 0xbe, 0xfd, 0x7f, 0x1f, 0xbe, 0xfe, 0x7f, 0x1f,
X   0xbe, 0xfb, 0x7f, 0x1f, 0xbe, 0xfd, 0x7f, 0x1f, 0xbe, 0xf6, 0x7f, 0x1f,
X   0xbe, 0xdb, 0x7f, 0x1f, 0x7e, 0xff, 0xbf, 0x1f, 0xbe, 0x00, 0x40, 0x1f,
X   0xde, 0xff, 0xff, 0x1e, 0x6e, 0xfb, 0xff, 0x1d, 0xb6, 0xfd, 0xff, 0x1b,
X   0xda, 0xff, 0xff, 0x17, 0xfc, 0xff, 0xff, 0x0f, 0x00, 0x00, 0x00, 0x00};
END_OF_FILE
if test 824 -ne `wc -c <'bitmaps/defaults/wall.xbm'`; then
    echo shar: \"'bitmaps/defaults/wall.xbm'\" unpacked with wrong size!
fi
# end of 'bitmaps/defaults/wall.xbm'
fi
if test -f 'bitmaps/defaults/west_twall.xbm' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'bitmaps/defaults/west_twall.xbm'\"
else
echo shar: Extracting \"'bitmaps/defaults/west_twall.xbm'\" \(842 characters\)
sed "s/^X//" >'bitmaps/defaults/west_twall.xbm' <<'END_OF_FILE'
X#define west_twall_width 30
X#define west_twall_height 30
Xstatic char west_twall_bits[] = {
X   0xbc, 0xff, 0x7f, 0x05, 0xbc, 0xff, 0x7f, 0x0a, 0xbc, 0xff, 0x7f, 0x35,
X   0xbc, 0xff, 0x7f, 0x3a, 0xbc, 0xff, 0x7f, 0x3d, 0xbc, 0xff, 0x7f, 0x3e,
X   0xbc, 0xff, 0x7f, 0x00, 0xbc, 0xff, 0xff, 0x3f, 0xbc, 0xff, 0xff, 0x3f,
X   0xbc, 0xff, 0xff, 0x3f, 0xbc, 0xff, 0xff, 0x3f, 0xbc, 0xff, 0xff, 0x3f,
X   0xbc, 0xff, 0xff, 0x3f, 0xbc, 0xff, 0xff, 0x3f, 0xbc, 0xff, 0xff, 0x3f,
X   0xbc, 0xff, 0xff, 0x3f, 0xbc, 0xff, 0xff, 0x3f, 0xbc, 0xff, 0xff, 0x3f,
X   0xbc, 0xff, 0xff, 0x3f, 0xbc, 0xff, 0xff, 0x3f, 0xbc, 0xff, 0xff, 0x3f,
X   0xbc, 0xff, 0xff, 0x3f, 0xbc, 0xff, 0xff, 0x3f, 0xbc, 0xff, 0x7f, 0x00,
X   0xbc, 0xff, 0x7f, 0x15, 0xbc, 0xff, 0x7f, 0x28, 0xbc, 0xff, 0x7f, 0x11,
X   0xbc, 0xff, 0x7f, 0x22, 0xbc, 0xff, 0x7f, 0x05, 0xbc, 0xff, 0x7f, 0x0a};
END_OF_FILE
if test 842 -ne `wc -c <'bitmaps/defaults/west_twall.xbm'`; then
    echo shar: \"'bitmaps/defaults/west_twall.xbm'\" unpacked with wrong size!
fi
# end of 'bitmaps/defaults/west_twall.xbm'
fi
if test -f 'bitmaps/defaults/westwall.xbm' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'bitmaps/defaults/westwall.xbm'\"
else
echo shar: Extracting \"'bitmaps/defaults/westwall.xbm'\" \(836 characters\)
sed "s/^X//" >'bitmaps/defaults/westwall.xbm' <<'END_OF_FILE'
X#define westwall_width 30
X#define westwall_height 30
Xstatic char westwall_bits[] = {
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0xff, 0xff, 0x3f,
X   0xf4, 0xff, 0xff, 0x3f, 0xec, 0xff, 0xff, 0x3f, 0xdc, 0xff, 0xff, 0x3f,
X   0x3c, 0x00, 0x00, 0x00, 0xbc, 0xff, 0xff, 0x3f, 0xbc, 0xff, 0xff, 0x3f,
X   0xbc, 0xff, 0xff, 0x3f, 0xbc, 0xff, 0xff, 0x3f, 0xbc, 0xff, 0xff, 0x3f,
X   0xbc, 0xff, 0xff, 0x3f, 0xbc, 0xff, 0xff, 0x3f, 0xbc, 0xff, 0xff, 0x3f,
X   0xbc, 0xff, 0xff, 0x3f, 0xbc, 0xff, 0xff, 0x3f, 0xbc, 0xff, 0xff, 0x3f,
X   0xbc, 0xff, 0xff, 0x3f, 0xbc, 0xff, 0xff, 0x3f, 0xbc, 0xff, 0xff, 0x3f,
X   0xbc, 0xff, 0xff, 0x3f, 0xbc, 0xff, 0xff, 0x3f, 0x3c, 0x00, 0x00, 0x00,
X   0x5c, 0x55, 0x55, 0x15, 0xac, 0xaa, 0xaa, 0x2a, 0x54, 0x55, 0x55, 0x15,
X   0xa8, 0xaa, 0xaa, 0x2a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
END_OF_FILE
if test 836 -ne `wc -c <'bitmaps/defaults/westwall.xbm'`; then
    echo shar: \"'bitmaps/defaults/westwall.xbm'\" unpacked with wrong size!
fi
# end of 'bitmaps/defaults/westwall.xbm'
fi
if test -f 'config.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'config.h'\"
else
echo shar: Extracting \"'config.h'\" \(1463 characters\)
sed "s/^X//" >'config.h' <<'END_OF_FILE'
X/***********************************************************************
X   You may wish to alter the following directory paths
X***********************************************************************/
X/**/
X/* SCREENPATH: the name of the directioy where the screen file are held */
X/**/
X#define SCREENPATH "/usr/tmp/xsokoban.v2/screens"
X
X/**/
X/* SAVEPATH: the name of the path where save files are held */
X/*           Attention: Be sure that there are no other files with */
X/*                      the name <username>.sav                    */
X/**/
X#define SAVEPATH "/usr/tmp/xsokoban.v2/saves"
X
X/* BITPATH: the full pathname to the bitmap file defaults. */
X#define BITPATH "/usr/tmp/xsokoban.v2/bitmaps/defaults"
X
X/**/
X/* LOCKPATH: temporary file which is created to ensure that no users */
X/*           work with the scorefile at the same time                */
X/**/
X#define LOCKFILE "/tmp/score.slock"
X
X/**/
X/* SCOREFILE: the full pathname of the score file */
X/**/
X#define SCOREFILE "/usr/tmp/xsokoban.v2/sokoban.slock"
X
X/**/
X/* MAXUSERNAME: defines the maximum length of a system's user name */
X/**/
X#define MAXUSERNAME     32
X
X/**/
X/* MAXSCOREENTRIES: defines the maximum numner of entries in the scoretable */
X/**/
X#define MAXSCOREENTRIES 10000
X
X/**/
X/* SUPERUSER: defines the name of the game superuser */
X/**/
X#define SUPERUSER "jt1o"
X
X/**/
X/* PASSWORD: defines the password necessary for creating a new score file */
X/**/
X#define PASSWORD "Greezooble"
END_OF_FILE
if test 1463 -ne `wc -c <'config.h'`; then
    echo shar: \"'config.h'\" unpacked with wrong size!
fi
# end of 'config.h'
fi
if test -f 'defaults.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'defaults.h'\"
else
echo shar: Extracting \"'defaults.h'\" \(386 characters\)
sed "s/^X//" >'defaults.h' <<'END_OF_FILE'
X#define DEF_FONT "9x15"
X#define DEF_BITH 30
X#define DEF_BITW 30
X#define DEF_CURSOR 102
X
X#define WALLS "fancyWalls"
X#define FONT "fontName"
X#define REVERSE "reverseVideo"
X#define FOREG "foreground"
X#define BACKG "background"
X#define BORDER "borderColor"
X#define CURSOR "pointerColor"
X#define BITDIR "bitmapDir"
X#define BITH "bitmapHeight"
X#define BITW "bitmapWidth"
X#define NUM_WALLS 16
END_OF_FILE
if test 386 -ne `wc -c <'defaults.h'`; then
    echo shar: \"'defaults.h'\" unpacked with wrong size!
fi
# end of 'defaults.h'
fi
if test -f 'externs.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'externs.h'\"
else
echo shar: Extracting \"'externs.h'\" \(2258 characters\)
sed "s/^X//" >'externs.h' <<'END_OF_FILE'
X#include <X11/Xlib.h>
X#include <X11/Xutil.h>
X#include <X11/keysym.h>
X#include <X11/Xresource.h>
X
X/* The boolean typedef */
Xtypedef enum { _false_ = 0, _true_ = 1 } Boolean;
X
X/* local system calls that need externs */
Xextern char *strrchr(char *, char);
Xextern char *getenv(char *);
X
X/* stuff from display.c */
Xextern short LoadBitmaps(void);
Xextern void MakeHelpWindows(void);
Xextern void ClearScreen(void);
Xextern void RedisplayScreen(void);
Xextern void ShowScreen(void);
Xextern void MapChar(char, int, int);
Xextern Pixmap GetObjectPixmap(int, int, char);
Xextern int PickWall(int, int);
Xextern void DrawString(int, int, char *);
Xextern void ClearString(int, int, int);
Xextern void DisplayLevel(void);
Xextern void DisplayPackets(void);
Xextern void DisplaySave(void);
Xextern void DisplayMoves(void);
Xextern void DisplayPushes(void);
Xextern void DisplayHelp(void);
Xextern void ShowHelp(void);
Xextern void HelpMessage(void);
Xextern void DestroyDisplay(void);
Xextern short InitX(void);
X
X/* stuff from main.c */
Xextern short CheckCommandLine(int *, char **);
Xextern void main(int, char **);
Xextern short GameLoop(void);
Xextern short GetGamePassword(void);
Xextern void Error(short);
Xextern void Usage(void);
X
X/* stuff from resources.c */
Xextern char *GetDatabaseResource(XrmDatabase, char *);
Xextern char *GetResource(char *);
Xextern Boolean StringToBoolean(char *);
Xextern Boolean GetColorResource(char *, unsigned long *);
X
X/* stuff from play.c */
Xextern short Play(void);
Xextern void MakeMove(KeySym);
Xextern short TestMove(KeySym);
Xextern void DoMove(short);
Xextern void UndoMove(void);
Xextern void TempSave(void);
Xextern void TempReset(void);
Xextern Boolean WaitForEnter(void);
Xextern void MoveMan(int, int);
Xextern void FindTarget(int, int, int);
X
X/* stuff from score.c */
Xextern short OutputScore(void);
Xextern short MakeNewScore(void);
Xextern short GetUserLevel(short *);
Xextern short Score(void);
Xextern short ReadScore(void);
Xextern short MakeScore(void);
Xextern short FindUser(void);
Xextern short FindPos(void);
Xextern short WriteScore(void);
Xextern void ShowScore(void);
Xextern void CopyEntry(short, short);
X
X/* stuff from screen.c */
Xextern short ReadScreen(void);
X
X/* stuff from save.c */
Xextern short SaveGame(void);
Xextern short RestoreGame(void);
END_OF_FILE
if test 2258 -ne `wc -c <'externs.h'`; then
    echo shar: \"'externs.h'\" unpacked with wrong size!
fi
# end of 'externs.h'
fi
if test -f 'globals.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'globals.h'\"
else
echo shar: Extracting \"'globals.h'\" \(1767 characters\)
sed "s/^X//" >'globals.h' <<'END_OF_FILE'
X#include "config.h"
X/*****************************************************************************\
X *  Stuff in this file shouldn't ever need to be changed.                    *
X\*****************************************************************************/
X
X#ifdef VICE
Xextern int PlayerUID;
X#define getuid() PlayerUID
X#define geteuid() PlayerUID
X#endif
X
X#define BUFSIZE 256
X
X/* internal object representation */
X#define   player	'@'
X#define   playerstore	'+'
X#define   store		'.'
X#define   packet	'$'
X#define   save		'*'
X#define   ground	' '
X#define   wall		'#'
X
X/* maximum possible size of a board */
X#define MAXROW		20
X#define MAXCOL		20
X
X/* player position for movement */
Xtypedef struct {
X   short x, y;
X} POS;
X
X/* list of possible errors */
X#define E_FOPENSCREEN	1
X#define E_PLAYPOS1	2
X#define E_ILLCHAR	3
X#define E_PLAYPOS2	4
X#define E_TOMUCHROWS	5
X#define E_TOMUCHCOLS	6
X#define E_ENDGAME	7
X#define E_NOUSER	8
X#define E_FOPENSAVE	9
X#define E_WRITESAVE	10
X#define E_STATSAVE	11
X#define E_READSAVE	12
X#define E_ALTERSAVE	13
X#define E_SAVED		14
X#define E_TOMUCHSE	15
X#define E_FOPENSCORE	16
X#define E_READSCORE	17
X#define E_WRITESCORE	18
X#define E_USAGE		19
X#define E_ILLPASSWORD	20
X#define E_LEVELTOOHIGH	21
X#define E_NOSUPER	22
X#define E_NOSAVEFILE	23
X#define E_NOBITMAP	24
X#define E_NODISPLAY	25
X#define E_NOFONT	26
X#define E_NOMEM		27
X#define E_NOCOLOR	28
X
X/* classname for silly X stuff */
X#define CLASSNAME "XSokoban"
X
X/* macros translating game coords to window coords */
X#define cX(x) (bit_width * (((MAXCOL - cols) / 2) + (x)))
X#define cY(x) (bit_height * (((MAXROW - rows) / 2) + (x)))
X
X/* macros translating window coords to game coords */
X#define wX(x) (((x)/bit_width) - ((MAXCOL - cols)/2))
X#define wY(x) (((x)/bit_height) - ((MAXROW - rows)/2))
END_OF_FILE
if test 1767 -ne `wc -c <'globals.h'`; then
    echo shar: \"'globals.h'\" unpacked with wrong size!
fi
# end of 'globals.h'
fi
if test -f 'help.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'help.h'\"
else
echo shar: Extracting \"'help.h'\" \(1333 characters\)
sed "s/^X//" >'help.h' <<'END_OF_FILE'
X/* help pages */
Xtypedef struct helpline {
X   int xpos, ypos, page;
X   char *textline;
X} h_line;
X
Xh_line help_pages[] = {
X  { 0, 35, 0, "Objective:  Push all the objects from their starting positions"},
X  { 12, 50, 0, "into their goal positions.  Be warned that you can"},
X  { 12, 65, 0, "push only one object at a time; watch out for corners!"},
X  { 0, 100, 0, "Movement:   Use the vi-keys hjkl or the keyboard arrow keys"},
X  { 25, 130, 0, "left right up down"},
X  { 13, 145, 0, "Move/Push     h    l    k   j"},
X  { 13, 160, 0, "Run/Push      H    L    K   J"},
X  { 13, 175, 0, "Run Only     ^H   ^L   ^K  ^J"},
X  { 0, 210, 0, "Commands:"},
X  { 12, 210, 0, "^r: refresh screen            ?: get this help screen"},
X  { 12, 225, 0, "^u: restore to temp save      c: make a temp save"}, 
X  { 12, 240, 0, " u: undo last move/push       U: restart this level"},
X  { 12, 255, 0, " s: save game and quit        q: quit game"},
X  { 0, 285, 0, "Misc:       If you set a temp save, you need not undo all"},
X  { 12, 300, 0, "when you get stuck.  Just reset to this save."},
X  { 12, 330, 0, "A temporary save is automatically made at the start."},
X  { 0, 380, 0, "Bitmaps:"},
X  { 12, 380, 0, "Player:     Goal:      Wall:     Object:"},
X  { 12, 420, 0, "Object on a goal:      Player on a goal:"},
X  {0, 0, 0, NULL}
X};
X
X#define HELP_PAGES 1
END_OF_FILE
if test 1333 -ne `wc -c <'help.h'`; then
    echo shar: \"'help.h'\" unpacked with wrong size!
fi
# end of 'help.h'
fi
if test -f 'options.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'options.h'\"
else
echo shar: Extracting \"'options.h'\" \(1595 characters\)
sed "s/^X//" >'options.h' <<'END_OF_FILE'
X/* the list of the options used to build the command line XrmDB.
X * if an option has no seperate arg, and appears on the command line, the 
X * last value in the table is what will be entered into the db.
X */
Xstatic XrmOptionDescRec options[] = {
X  { "-w",          "*fancyWalls",    XrmoptionNoArg,    (caddr_t)  "on" },
X  { "-walls",      "*fancyWalls",    XrmoptionNoArg,    (caddr_t)  "on" },
X  { "-f",          "*fontName",      XrmoptionSepArg,   (caddr_t)     0 },
X  { "-font",       "*fontName",      XrmoptionSepArg,   (caddr_t)     0 },
X  { "-rv",         "*reverseVideo",  XrmoptionNoArg,    (caddr_t)  "on" },
X  { "-reverse",    "*reverseVideo",  XrmoptionNoArg,    (caddr_t)  "on" },
X  { "-fg",         "*foreground",    XrmoptionSepArg,   (caddr_t)     0 },
X  { "-foreground", "*foreground",    XrmoptionSepArg,   (caddr_t)     0 },
X  { "-bg",         "*background",    XrmoptionSepArg,   (caddr_t)     0 },
X  { "-background", "*background",    XrmoptionSepArg,   (caddr_t)     0 },
X  { "-bd",         "*borderColor",   XrmoptionSepArg,   (caddr_t)     0 },
X  { "-border",     "*borderColor",   XrmoptionSepArg,   (caddr_t)     0 },
X  { "-pr",         "*pointerColor",  XrmoptionSepArg,   (caddr_t)     0 },
X  { "-pointer",    "*pointerColor",  XrmoptionSepArg,   (caddr_t)     0 },
X  { "-b",          "*bitmapDir",     XrmoptionSepArg,   (caddr_t)     0 },
X  { "-bitdir",     "*bitmapDir",     XrmoptionSepArg,   (caddr_t)     0 },
X  { "-display",    ".display",	     XrmoptionSepArg,	(caddr_t)     0 },
X  { "-xrm",        (char *) 0,       XrmoptionResArg,   (caddr_t)     0 }
X};
END_OF_FILE
if test 1595 -ne `wc -c <'options.h'`; then
    echo shar: \"'options.h'\" unpacked with wrong size!
fi
# end of 'options.h'
fi
if test -f 'resources.c' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'resources.c'\"
else
echo shar: Extracting \"'resources.c'\" \(1683 characters\)
sed "s/^X//" >'resources.c' <<'END_OF_FILE'
X#include "externs.h"
X#include "globals.h"
X
Xextern char *progname;
Xextern XrmDatabase rdb;
Xextern Display *dpy;
Xextern Colormap cmap;
X
X/* rewritten slightly from the xantfarm code by Jef Poskanzer */
X
X/* get a resource from the specified db.  This helps support the -display
X * code, but could be used to get a resource that should only be specified
X * in a given place (ie either only command line, or only Xresource db)
X */
Xchar *GetDatabaseResource(XrmDatabase db, char *res)
X{
X  char name[500];
X  char class[500];
X  char *type;
X  XrmValue value;
X
X  (void)sprintf(name, "%s.%s", progname, res);
X  (void)sprintf(class, "%s.%s", CLASSNAME, res);
X
X  if(XrmGetResource(db, name, class, &type, &value) == True)
X    if(strcmp(type, "String") == 0)
X      return (char *)value.addr;
X  return (char *)0;
X}
X
X/* just calls the above routine with the general combined db */
Xchar *GetResource(char *res)
X{
X  return GetDatabaseResource(rdb, res);
X}
X
X/* returns the color pixel for the given resource */
XBoolean GetColorResource(char *res, unsigned long *cP)
X{
X  XColor color;
X  char *rval = GetResource(res);
X
X  if(rval == (char *)0)
X    return _false_;
X  if(XParseColor(dpy, cmap, rval, &color) != True)
X    return _false_;
X  if(XAllocColor(dpy, cmap, &color) != True)
X    return _false_;
X  *cP = color.pixel;
X  return _true_;
X}
X
Xchar *boolopts[] = {
X  "true",
X  "True",
X  "on",
X  "On",
X  "yes",
X  "Yes",
X  "1"
X};
X
X/* convert a string to the 'boolean' type (I defined my own, thanks) */
XBoolean StringToBoolean(char *str)
X{
X  int nboolopts = sizeof(boolopts)/sizeof(*boolopts), i;
X
X  for(i = 0; i < nboolopts; i++)
X    if(strcmp(str, boolopts[i]) == 0)
X      return _true_;
X  return _false_;
X}
END_OF_FILE
if test 1683 -ne `wc -c <'resources.c'`; then
    echo shar: \"'resources.c'\" unpacked with wrong size!
fi
# end of 'resources.c'
fi
if test -f 'save.c' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'save.c'\"
else
echo shar: Extracting \"'save.c'\" \(4005 characters\)
sed "s/^X//" >'save.c' <<'END_OF_FILE'
X#include <stdio.h>
X#include <sys/types.h>
X#include <sys/stat.h>
X#include <signal.h>
X#if ! defined(vax)
X#include <netinet/in.h>
X#endif
X#include "externs.h"
X#include "globals.h"
X
Xextern char *malloc();
Xextern FILE *fopen();
X
Xextern char *username;
Xextern char map[MAXROW + 1][MAXCOL + 1];
Xextern short level, moves, pushes, packets, savepack, rows, cols;
Xextern POS ppos;
X
Xstatic long savedbn;
Xstatic char *sfname;
Xstatic FILE *savefile;
Xstatic struct stat sfstat;
X
X/* save out a game in a standard format.  Uses the ntoh functions and hton
X * functions so that the same save file will work on an MSB or LSB system
X * other than that, it is a standard sokoban score file.
X */
Xshort SaveGame(void)
X{
X  short ret = 0;
X
X  signal(SIGINT, SIG_IGN);
X  sfname = malloc(strlen(SAVEPATH) + strlen(username) + 6);
X  sprintf(sfname, "%s/%s.sav", SAVEPATH, username);
X
X  packets = htons(packets);
X  pushes = htons(pushes);
X  moves = htons(moves);
X  level = htons(level);
X  cols = htons(cols);
X  savepack = htons(savepack);
X  rows = htons(rows);
X  ppos.x = htons(ppos.x);
X  ppos.y = htons(ppos.y);
X
X  if ((savefile = fopen(sfname, "w")) == NULL)
X    ret = E_FOPENSAVE;
X  else {
X    savedbn = fileno(savefile);
X    if (write(savedbn, &(map[0][0]), MAXROW * MAXCOL) != MAXROW * MAXCOL)
X      ret = E_WRITESAVE;
X    else if (write(savedbn, &ppos, sizeof(POS)) != sizeof(POS))
X      ret = E_WRITESAVE;
X    else if (write(savedbn, &level, 2) != 2)
X      ret = E_WRITESAVE;
X    else if (write(savedbn, &moves, 2) != 2)
X      ret = E_WRITESAVE;
X    else if (write(savedbn, &pushes, 2) != 2)
X      ret = E_WRITESAVE;
X    else if (write(savedbn, &packets, 2) != 2)
X      ret = E_WRITESAVE;
X    else if (write(savedbn, &savepack, 2) != 2)
X      ret = E_WRITESAVE;
X    else if (write(savedbn, &rows, 2) != 2)
X      ret = E_WRITESAVE;
X    else if (write(savedbn, &cols, 2) != 2)
X      ret = E_WRITESAVE;
X    else
X      fclose(savefile);
X    if (stat(sfname, &sfstat) != 0)
X      ret = E_STATSAVE;
X    else if ((savefile = fopen(sfname, "a")) == NULL)
X      ret = E_FOPENSAVE;
X    else if (write(savedbn, &sfstat, sizeof(sfstat)) != sizeof(sfstat))
X      ret = E_WRITESAVE;
X    fclose(savefile);
X  }
X
X  ppos.x = ntohs(ppos.x);
X  ppos.y = ntohs(ppos.y);
X  pushes = ntohs(pushes);
X  moves = ntohs(moves);
X  level = ntohs(level);
X  packets = ntohs(packets);
X  cols = ntohs(cols);
X  rows = ntohs(rows);
X  savepack = ntohs(savepack);
X
X  if ((ret == E_WRITESAVE) || (ret == E_STATSAVE))
X    unlink(sfname);
X  signal(SIGINT, SIG_DFL);
X
X  return ret;
X}
X
X/* loads in a previously saved game */
Xshort RestoreGame(void)
X{
X  short ret = 0;
X  struct stat oldsfstat;
X
X  signal(SIGINT, SIG_IGN);
X  sfname = malloc(strlen(SAVEPATH) + strlen(username) + 6);
X  sprintf(sfname, "%s/%s.sav", SAVEPATH, username);
X
X  if (stat(sfname, &oldsfstat) < -1)
X    ret = E_NOSAVEFILE;
X  else {
X    if ((savefile = fopen(sfname, "r")) == NULL)
X      ret = E_FOPENSAVE;
X    else {
X      savedbn = fileno(savefile);
X      if (read(savedbn, &(map[0][0]), MAXROW * MAXCOL) != MAXROW * MAXCOL)
X	ret = E_READSAVE;
X      else if (read(savedbn, &ppos, sizeof(POS)) != sizeof(POS))
X	ret = E_READSAVE;
X      else if (read(savedbn, &level, 2) != 2)
X	ret = E_READSAVE;
X      else if (read(savedbn, &moves, 2) != 2)
X	ret = E_READSAVE;
X      else if (read(savedbn, &pushes, 2) != 2)
X	ret = E_READSAVE;
X      else if (read(savedbn, &packets, 2) != 2)
X	ret = E_READSAVE;
X      else if (read(savedbn, &savepack, 2) != 2)
X	ret = E_READSAVE;
X      else if (read(savedbn, &rows, 2) != 2)
X	ret = E_READSAVE;
X      else if (read(savedbn, &cols, 2) != 2)
X	ret = E_READSAVE;
X      else if (read(savedbn, &sfstat, sizeof(sfstat)) != sizeof(sfstat))
X	ret = E_READSAVE;
X    }
X
X    ppos.x = ntohs(ppos.x);
X    ppos.y = ntohs(ppos.y);
X    level = ntohs(level);
X    moves = ntohs(moves);
X    pushes = ntohs(pushes);
X    packets = ntohs(packets);
X    savepack = ntohs(savepack);
X    rows = ntohs(rows);
X    cols = ntohs(cols);
X
X    unlink(sfname);
X  }
X  signal(SIGINT, SIG_DFL);
X  return ret;
X}
END_OF_FILE
if test 4005 -ne `wc -c <'save.c'`; then
    echo shar: \"'save.c'\" unpacked with wrong size!
fi
# end of 'save.c'
fi
if test -f 'screen.c' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'screen.c'\"
else
echo shar: Extracting \"'screen.c'\" \(1509 characters\)
sed "s/^X//" >'screen.c' <<'END_OF_FILE'
X#include <stdio.h>
X#include "externs.h"
X#include "globals.h"
X
Xextern char *malloc();
Xextern FILE *fopen();
X
Xextern short level, packets, savepack, rows, cols;
Xextern char map[MAXROW + 1][MAXCOL + 1];
Xextern POS ppos;
X
X/* reads in the current screen level (wheee, exciting. NOT) */
Xshort ReadScreen(void)
X{
X  FILE *screen;
X  char *fnam;
X  int y, x;
X  short j, c, ret = 0;
X
X  for (y = 0; y < MAXROW; y++)
X    for (x = 0; x < MAXCOL; x++)
X      map[y][x] = ground;
X
X  fnam = malloc(strlen(SCREENPATH) + 12);
X  sprintf(fnam, "%s/screen.%d", SCREENPATH, level);
X
X  if ((screen = fopen(fnam, "r")) == NULL)
X    ret = E_FOPENSCREEN;
X  else {
X    packets = savepack = rows = j = cols = 0;
X    ppos.x = -1;
X    ppos.y = -1;
X
X    while ((ret == 0) && ((c = getc(screen)) != EOF)) {
X      if (c == '\n') {
X	map[rows++][j] = '\0';
X	if (rows > MAXROW)
X	  ret = E_TOMUCHROWS;
X	else {
X	  if (j > cols)
X	    cols = j;
X	  j = 0;
X	}
X      } else if ((c == player) || (c == playerstore)) {
X	if (ppos.x != -1)
X	  ret = E_PLAYPOS1;
X	else {
X	  ppos.x = rows;
X	  ppos.y = j;
X	  map[rows][j++] = c;
X	  if (j > MAXCOL)
X	    ret = E_TOMUCHCOLS;
X	}
X      } else if ((c == save) || (c == packet) ||
X		 (c == wall) || (c == store) ||
X		 (c == ground)) {
X	if (c == save) {
X	  savepack++;
X	  packets++;
X	}
X	if (c == packet)
X	  packets++;
X	map[rows][j++] = c;
X	if (j > MAXCOL)
X	  ret = E_TOMUCHCOLS;
X      } else
X	ret = E_ILLCHAR;
X    }
X    fclose(screen);
X    if ((ret == 0) && (ppos.x == -1))
X      ret = E_PLAYPOS2;
X  }
X  return (ret);
X}
END_OF_FILE
if test 1509 -ne `wc -c <'screen.c'`; then
    echo shar: \"'screen.c'\" unpacked with wrong size!
fi
# end of 'screen.c'
fi
if test -f 'screens/screen.10' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'screens/screen.10'\"
else
echo shar: Extracting \"'screens/screen.10'\" \(320 characters\)
sed "s/^X//" >'screens/screen.10' <<'END_OF_FILE'
X ###  #############
X##@####       #   #
X# $$   $$  $ $ ...#
X#  $$$#    $  #...#
X# $   # $$ $$ #...#
X###   #  $    #...#
X#     # $ $ $ #...#
X#    ###### ###...#
X## #  #  $ $  #...#
X#  ## # $$ $ $##..#
X# ..# #  $      #.#
X# ..# # $$$ $$$ #.#
X##### #       # #.#
X    # ######### #.#
X    #           #.#
X    ###############
END_OF_FILE
if test 320 -ne `wc -c <'screens/screen.10'`; then
    echo shar: \"'screens/screen.10'\" unpacked with wrong size!
fi
# end of 'screens/screen.10'
fi
if test -f 'screens/screen.51' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'screens/screen.51'\"
else
echo shar: Extracting \"'screens/screen.51'\" \(144 characters\)
sed "s/^X//" >'screens/screen.51' <<'END_OF_FILE'
X#########
X#       #
X#  $   $#
X####    #
X   # $  ##
X####   $ #
X#.. $ ## ####
X#..  $##    #
X#..    $    #
X#.###$### #@#
X#.# #     ###
X### #######
END_OF_FILE
if test 144 -ne `wc -c <'screens/screen.51'`; then
    echo shar: \"'screens/screen.51'\" unpacked with wrong size!
fi
# end of 'screens/screen.51'
fi
if test -f 'screens/screen.85' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'screens/screen.85'\"
else
echo shar: Extracting \"'screens/screen.85'\" \(312 characters\)
sed "s/^X//" >'screens/screen.85' <<'END_OF_FILE'
X############
X#      #   ##
X# $  $   #  ######
X####  #####      #
X #..  #     #### #
X #.####  ####    #
X #....    #  $ ####
X # ...#   # $$$#  ##
X###.#### ##  $@$   #
X#     ##### $ #    #
X# #.# $      $###$ #
X# #.########  #  $ #
X# #..        ##  $ #
X# # ####### $ # #  #
X#   #     #       ##
X#####     ##########
END_OF_FILE
if test 312 -ne `wc -c <'screens/screen.85'`; then
    echo shar: \"'screens/screen.85'\" unpacked with wrong size!
fi
# end of 'screens/screen.85'
fi
if test -f 'xsokoban.man' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'xsokoban.man'\"
else
echo shar: Extracting \"'xsokoban.man'\" \(4890 characters\)
sed "s/^X//" >'xsokoban.man' <<'END_OF_FILE'
X.TH XSOKOBAN 6 "27 January 1992" "Carnegie Mellon University"
X.SH NAME
Xxsokoban \- Pushing objects around...
X.SH SYNOPSIS
X.B xsokoban 
X[ 
X.B \-s
X.B \-r
X.B \-c
X.B \-nn
X.B \-display
X<disp>
X.B {\-w | \-walls}
X.B {\-rv | \-reverse}
X.B {\-f | \-font}
X<fn>
X.B {\-b | \-bitdir}
X<path>
X.B {\-fg | \-foregound}
X<color>
X.B {\-bg | \-backgound}
X<color>
X.B {\-bd | \-border}
X<color>
X.B {\-pr | \-pointer}
X<color>
X.B \-xrm
X<arg> ] 
X.SH DESCRIPTION
XThe target of 
X.I xsokoban
Xis to push all the objects into the score area of each level using the
Xmouse or the arrow keys. If the left mouse button is pressed on a
Xclear square, the man will move to that location via the optimal path
Xif such a path exists, otherwise the terminal will beep.  If the left
Xbutton is pressed on an object that is adjacent to the player, the
Xobject will be pushed.  The right button mouse provides a single level of
Xundo.  The middle mouse button will repeat the last move.
X.PP
XThe rest of the functions are bound to the keyboard:
X.TP 8
X.B q
XQuits the game.
X.TP 8
X.B s
XSaves and quits.
X.TP 8
X.B c
XCheckpoints a position.
X.TP 8
X.B u
XUndoes the last move.
X.TP 8
X.B U
XRestarts a level.
X.TP 8
X.B ^R
XRedraws the screen.
X.TP 8
X.B ^U
XRestores to last checkpoint. (a checkpoint is automatically done at the beginning of a level)
X.SH OPTIONS
X.TP 8
X.B \-s
XShow the scores
X.TP 8
X.B \-c 
XCreate a new score file (can be ran only by the owner of the game).
X.TP 8
X.B \-r
XRestore a saved game.
X.TP 8
X.B \-nn
XStart at level 
X.I nn, 
Xprovided that levels below it are completed. 
X.TP 8
X.B \-display <display>
XRun the game on named display.
X.TP 8
X.B {\-w | \-walls}
XUse fancy walls. (This is the default unless an option bitmap set is used)
X.TP 8
X.B {\-rv | \-reverse}
XUse reverse video.
X.TP 8
X.B {\-f | \-font} <fontname>
XUse the named font instead of the default 9x15 font.
X.TP 8
X.B {\-b | \-bitdir} <path>
XUse the bitmaps found in <path> instead of the defaults.
X.TP 8
X.B {\-fg | \-foreground} <color>
XUse the named color as the foreground color. (default is BlackPixel())
X.TP 8
X.B {\-bg | \-background} <color>
XUse the named color as the background color. (default is WhitePixel())
X.TP 8
X.B {\-bd | \-border} <color>
XUse the named color as the border color. (default is foreground color)
X.TP 8
X.B {\-pr | \-pointer} <color>
XUse the named color as the mouse pointer foreground. (default is foreground)
X.TP 8
X.B \-xrm <arg>
X<arg> is an X Resource specification.
X.SH AUTHORS
XJoseph L. Traub - X windows interface.
X.br
XKevin Solie - simultaneously developed X implementation (merged in).
X.br
XMark Linderman, Christos Zoulas - Mouse code (added to Solie's version).
X.br
XUnknown Hacker - Original curses(1) implementation.
X.SH RESOURCES
X.I Xsokoban
Xunderstands the following resources.
X.TP 8
X.B fancyWalls : boolean
XUse fancy walls.
X.TP 8
X.B fontName : font
XUse named font.
X.TP 8
X.B reverseVideo : boolean
XReverse foreground and background pixels.
X.TP 8
X.B foreground : color
XUse color as foreground color.
X.TP 8
X.B background : color
XUse color as background color.
X.TP 8
X.B borderColor : color
XUse color as border color.
X.TP 8
X.B pointerColor : color
XUse color as pointer color.
X.TP 8
X.B bitmapDir : string
XLook for bitmaps in path specified by string.
X.TP 8
X.SH SPECIAL BITMAPS
XIn order to define your own bitmaps for
X.I xsokoban
Xyou only need to know the names of which files it is looking for.
XThe standard bitmap files are:
X.TP 8
X.B man.xbm
X-- The player bitmap.
X.TP 8
X.B goal.xbm
X-- The goal area bitmap.
X.TP 8
X.B wall.xbm
X-- The standard wall bitmap.
X.TP 8
X.B object.xbm
X-- The object that gets pushed.
X.TP 8
X.B treasure.xbm
X-- The bitmap for the object when it is on the goal.
X.TP 8
X.B saveman.xbm
X-- The bitmap for the player when it is on the goal.
X.TP 8
XTo use the fancy walls option, you need the following additional files.
X.TP 8
X.B lonewall.xbm
X-- a wall with connections on no sides.
X.TP 8
X.B southwall.xbm
X-- a wall with only northern connections
X.TP 8
X.B northwall.xbm
X-- a wall with only southern connections
X.TP 8
X.B eastwall.xbm
X-- a wall with only western connections
X.TP 8
X.B westwall.xbm
X-- a wall with only eastern connections
X.TP 8
X.B llcornerwall.xbm
X-- a wall with northern and eastern connections
X.TP 8
X.B ulcornerwall.xbm
X-- a wall with southern and eastern connections
X.TP 8
X.B lrcornerwall.xbm
X-- a wall with northern and western connections
X.TP 8
X.B urcornerwall.xbm
X-- a wall with southern and western connections
X.TP 8
X.B north_twall.xbm
X-- a wall with connections on all BUT northern side
X.TP 8
X.B south_twall.xbm
X-- a wall with connections on all BUT southern side
X.TP 8
X.B east_twall.xbm
X-- a wall with connections on all BUT eastern side
X.TP 8
X.B west_twall.xbm
X-- a wall with connections on all BUT western side
X.TP 8
X.B centerwall.xbm
X-- A wall will connections on all four sides.
X.SH BUGS
XAuto bitmap resizing code doesn't take into account text displays.
X.br
XFeedback on user error is poor (only beeps).
END_OF_FILE
if test 4890 -ne `wc -c <'xsokoban.man'`; then
    echo shar: \"'xsokoban.man'\" unpacked with wrong size!
fi
# end of 'xsokoban.man'
fi
echo shar: End of archive 2 \(of 3\).
cp /dev/null ark2isdone
MISSING=""
for I in 1 2 3 ; do
    if test ! -f ark${I}isdone ; then
	MISSING="${MISSING} ${I}"
    fi
done
if test "${MISSING}" = "" ; then
    echo You have unpacked all 3 archives.
    rm -f ark[1-9]isdone
else
    echo You still need to unpack the following archives:
    echo "        " ${MISSING}
fi
##  End of shell archive.
exit 0
