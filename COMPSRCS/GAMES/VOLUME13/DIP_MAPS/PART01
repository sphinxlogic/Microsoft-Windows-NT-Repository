Path: uunet!zephyr.ens.tek.com!master!saab!billr
From: billr@saab.CNA.TEK.COM (Bill Randle)
Newsgroups: comp.sources.games
Subject: v13i088:  dip_maps - PostScript code to print A4 Diplomacy maps, Part01/01
Message-ID: <2894@master.CNA.TEK.COM>
Date: 14 May 92 01:15:40 GMT
Sender: news@master.CNA.TEK.COM
Lines: 2590
Approved: billr@saab.CNA.TEK.COM

Submitted-by: liam@dcs.qmw.ac.uk (William Roberts)
Posting-number: Volume 13, Issue 88
Archive-name: dip_maps/Part01
Environment: PostScript

[From the author...]
[[This posting codes PostScript code to print A4 sized Diplomacy maps,
complete with labels and pieces. The piece positions can be supplied
in a simple readable form, e.g.

   England   A Wal  F Liv  F Lon
   Russia    F StP.nc

The PostScript code is sufficiently simple that the map description could
easily be reimplemented in other graphics systems (to date I know it
has been done with HyperCard and on a WhiteChapel MG1).

I'm offering this to the Net as is: please feel free to improve it
further. I shall not be doing any more to it and I won't be available
to comment/advise further.]]

#! /bin/sh
# This is a shell archive.  Remove anything before this line, then unpack
# it by saving it into a file and typing "sh file".  To overwrite existing
# files, type "sh file -c".  You can also feed this as standard input via
# unshar, or by typing "sh <file", e.g..  If this archive is complete, you
# will see the following message at the end:
#		"End of archive 1 (of 1)."
# Contents:  README MANIFEST NOTES borders3.ps colours.ps
#   example.position header.ps names.ps parser.ps pieces.ps printmap
#   start.position
# Wrapped by billr@saab on Wed May 13 18:14:45 1992
PATH=/bin:/usr/bin:/usr/ucb ; export PATH
if test -f 'README' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'README'\"
else
echo shar: Extracting \"'README'\" \(1926 characters\)
sed "s/^X//" >'README' <<'END_OF_FILE'
XThe shell script "printmap" will concatenate the appropriate PostScript
Xfiles, and an optional Position description file, onto standard output.
X
XThe optional position file contains a list of the current piece positions.
XThe format is fairly traditional and should look as follows:
X
XEngland
X    F Lon
X    F Edi
X    A Lpl
X
XGermany
X    A Ber
X    A Mun
X    F Kie
X
XRussia
X    A Mos
X    A War
X    F StP.sc
X    F Sev
X
XNewlines are not significant, the piece type (F or A) persists for subsequent
Xplaces, and only the placenames actually cause something to be printed. The
Xabove position is therefore equivalent to
X
XEngland F Lon Edi A Lpl Germany Ber Mun F Kie Russia A Mos War F StP.sc Sev
X
XThis is horrible, so stick to somewhere between the two. Country names are
Xall obvious and start with a captial letter. The names of the places follow
Xthe recent versions of the Rules, with the exception that the three places
Xwhich have two coasts must be specified as StP.sc, StP.nc, Spa.sc, Spa.nc, 
XBul.sc or Bul.ec as appropriate (this is only necessary for Fleets).
X
XThe positions file should finish with a section of the form
X
X(line1 of message)
X(line2 of message)
X(... and as many lines as you like)
XTurn
X
Xwhich actually causes the page to be printed. 
XThe message lines in the parentheses are printed in the right hand margin
Xunderneath the word Diplomacy, so it is probably best used to indicate the
Xturn for which this is the starting position.
X
XFor people who have colour displays/printers, or who wish to emphasise their
Xown pieces, the printmap script looks for a file $HOME/diplomacy_colours.ps
Xwhich can be used to override the standard piece appearance.
X
X
XI'm leaving my present job and going elsewhere. I do not intend to do any
Xfurther work on this and there is no point mailing me about it. Do whatever
Xyou want with it, respecting whatever copyright laws apply to the Diplomacy
Xgame and its map.
X
XWilliam Roberts
X30/4/92
END_OF_FILE
if test 1926 -ne `wc -c <'README'`; then
    echo shar: \"'README'\" unpacked with wrong size!
fi
# end of 'README'
fi
if test -f 'MANIFEST' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'MANIFEST'\"
else
echo shar: Extracting \"'MANIFEST'\" \(486 characters\)
sed "s/^X//" >'MANIFEST' <<'END_OF_FILE'
X   File Name		Archive #	Description
X-----------------------------------------------------------
X MANIFEST                   1	This shipping list
X NOTES                      1	
X README                     1	
X borders3.ps                1	
X colours.ps                 1	
X example.position           1	
X header.ps                  1	
X names.ps                   1	
X parser.ps                  1	
X pieces.ps                  1	
X printmap                   1	
X start.position             1	
END_OF_FILE
if test 486 -ne `wc -c <'MANIFEST'`; then
    echo shar: \"'MANIFEST'\" unpacked with wrong size!
fi
# end of 'MANIFEST'
fi
if test -f 'NOTES' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'NOTES'\"
else
echo shar: Extracting \"'NOTES'\" \(813 characters\)
sed "s/^X//" >'NOTES' <<'END_OF_FILE'
XThe map data is actually very simple (just lines in an integer
Xcoordinate system) and most of the separate parts are identified.
X
XThe main "ocean" is handled by drawing its complete boundary,
Xdrawing the islands. and then using "even-odd filling". It could
Xbe done just as effectively with a seed fill.
X
XTO BE DONE
X
XMake sure that the internal boundaries end at a point on the
Xcountry boundary. An artifact of the (very tedious and unsatisfactory)
Xway the map was created means that some endpoints don't coincide with
Xactual boundary point - thus filling the counrties with the right
Xcolour is probably not going to work.
X
XAll of the current "junction points" are marked with "% xNNN" as end-of-line
XPostScript comments.
X
XBetter printing in the remaining space. Some sort of legend in the top-left
Xgap in Russia.
END_OF_FILE
if test 813 -ne `wc -c <'NOTES'`; then
    echo shar: \"'NOTES'\" unpacked with wrong size!
fi
# end of 'NOTES'
fi
if test -f 'borders3.ps' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'borders3.ps'\"
else
echo shar: Extracting \"'borders3.ps'\" \(20031 characters\)
sed "s/^X//" >'borders3.ps' <<'END_OF_FILE'
X% Turkey -> StP coastline
X549 12 gm
X549 31 lin
X555 43 lin
X555 52 lin
X550 60 lin
X551 68 lin
X555 75 lin
X550 75 lin
X545 71 lin
X536 71 lin
X523 60 lin
X516 58 lin
X508 60 lin
X501 64 lin
X490 65 lin
X486 57 lin
X475 55 lin
X466 58 lin
X459 63 lin
X454 60 lin
X444 59 lin
X448 65 lin
X447 73 lin
X435 82 lin
X435 89 lin
X440 94 lin % x55 2
X432 98 lin
X431 106 lin
X438 113 lin
X448 114 lin
X452 118 lin
X458 113 lin
X467 122 lin
X% black sea bit
X458 130 lin
X470 131 lin % x63 2
X478 129 lin
X486 130 lin
X488 135 lin
X499 145 lin
X512 148 lin
X519 152 lin
X534 148 lin
X541 142 lin
X552 142 lin
X558 139 lin
X576 143 lin
X580 146 lin
X586 146 lin % x57 2
X591 152 lin
X597 156 lin
X600 162 lin % x3 2
X590 177 lin
X577 177 lin
X560 188 lin
X551 190 lin
X540 197 lin
X532 199 lin
X525 194 lin
X514 191 lin
X511 182 lin
X503 181 lin
X497 184 lin
X504 186 lin
X502 195 lin
X490 195 lin
X489 199 lin
X500 204 lin
X505 207 lin
X511 206 lin
X515 200 lin
X526 201 lin
X538 206 lin
X547 217 lin
X539 222 lin
X551 235 lin
X539 228 lin
X531 226 lin
X521 218 lin
X511 211 lin
X502 209 lin
X495 206 lin
X485 205 lin
X487 211 lin
X475 211 lin
X468 201 lin
X466 195 lin
X462 192 lin
X464 182 lin % x9 2
X458 181 lin
X455 176 lin
X453 171 lin
X454 163 lin
X449 158 lin
X446 149 lin
X446 142 lin % x4 2
X% end of black sea
X454 136 lin % x64 2
X455 126 lin
X450 122 lin
X445 122 lin
X440 117 lin
X432 117 lin
X427 121 lin
X420 120 lin
X416 119 lin
X407 117 lin
X402 107 lin
X394 109 lin
X390 113 lin
X390 108 lin
X399 97 lin
X406 92 lin
X409 88 lin
X413 78 lin
X411 77 lin
X407 81 lin
X408 74 lin
X406 73 lin
X403 76 lin % start of Peloponnese
X397 75 lin
X401 72 lin
X403 65 lin
X401 64 lin
X396 68 lin
X395 66 lin %
X400 60 lin
X404 50 lin
X402 49 lin % x54 2
X396 56 lin
X396 49 lin
X393 50 lin
X390 58 lin
X389 58 lin
X387 53 lin
X381 60 lin
X383 63 lin
X379 70 lin %
X380 75 lin
X385 78 lin
X394 77 lin
X396 79 lin
X385 80 lin
X377 76 lin % end of Peloponnese
X374 80 lin
X370 92 lin
X363 97 lin
X359 102 lin
X354 111 lin
X351 136 lin % x6 2
X339 146 lin
X330 150 lin
X314 167 lin
X310 167 lin
X306 172 lin
X308 179 lin
X302 180 lin
X298 184 lin
X297 195 lin
X286 189 lin
X285 180 lin
X282 176 lin
X294 164 lin
X298 152 lin
X303 148 lin
X305 143 lin
X313 136 lin
X320 134 lin
X322 127 lin
X331 125 lin
X342 114 lin
X347 106 lin
X342 100 lin
X332 108 lin
X327 107 lin
X325 101 lin
X330 96 lin
X325 85 lin
X321 77 lin
X312 73 lin
X308 79 lin
X315 87 lin
X318 96 lin
X313 104 lin
X303 111 lin
X290 125 lin
X279 132 lin
X272 141 lin
X263 151 lin
X261 169 lin % x51 2
X252 179 lin
X245 181 lin
X237 173 lin
X223 168 lin
X212 168 lin
X197 179 lin
X183 175 lin
X183 160 lin
X176 155 lin
X159 151 lin
X142 142 lin
X134 136 lin
X134 127 lin
X138 124 lin
X136 118 lin
X126 118 lin
X121 109 lin
X117 114 lin
X109 108 lin
X104 103 lin
X95 103 lin
X86 109 lin
X74 110 lin
X67 107 lin
X57 109 lin
X52 119 lin
X48 127 lin
X44 131 lin % x20 2
X34 131 lin
X29 139 lin
X32 145 lin
X36 152 lin
X35 156 lin
X29 154 lin
X31 165 lin
X38 172 lin
X47 177 lin
X52 187 lin
X57 203 lin
X55 214 lin
X60 221 lin
X70 218 lin
X72 225 lin
X92 215 lin
X118 201 lin
X138 195 lin
X156 230 lin % x46 2
X149 243 lin
X149 254 lin
X139 262 lin
X128 265 lin
X132 276 lin % x40 2
X148 279 lin
X156 270 lin
X164 270 lin
X164 286 lin
X171 283 lin
X171 276 lin
X181 273 lin % x47 2
X182 279 lin
X192 278 lin
X197 284 lin
X200 290 lin
X210 291 lin
X219 298 lin
X225 300 lin
X227 307 lin
X240 319 lin % x32 2
X256 318 lin % x16 2
X258 323 lin
X268 320 lin
X272 322 lin
X273 333 lin
X269 336 lin
X275 342 lin
X271 348 lin
X274 356 lin
X270 362 lin
X278 369 lin
X279 361 lin
X290 374 lin
X294 372 lin
X296 366 lin
X290 364 lin
X290 358 lin
X294 354 lin % x34 2
X287 349 lin
X290 343 lin
X294 341 lin
X288 336 lin
X283 337 lin
X280 331 lin % x21 2
X284 327 lin
X291 326 lin
X292 321 lin
X297 321 lin
X307 325 lin
X315 327 lin
X312 319 lin
X320 316 lin
X324 323 lin
X327 319 lin
X338 325 lin
X350 329 lin
X356 327 lin
X358 319 lin
X366 322 lin
X365 328 lin
X376 330 lin
X373 337 lin
X375 343 lin
X371 351 lin
X377 362 lin
X381 371 lin
X389 370 lin
X391 363 lin
X397 363 lin
X400 373 lin
X395 381 lin
X388 387 lin
X393 396 lin % x22 2
X407 400 lin
X418 399 lin
X423 399 lin
X431 407 lin
X437 408 lin
X431 413 lin
X422 413 lin
X409 412 lin
X401 408 lin
X390 407 lin
X385 402 lin
X376 414 lin
X375 425 lin
X375 438 lin
X371 444 lin
X384 460 lin
X393 472 lin
X401 481 lin
X397 489 lin
X390 489 lin
X379 484 lin
X376 472 lin
X371 464 lin
X363 453 lin
X355 444 lin
X351 434 lin
X349 426 lin
X349 418 lin
X355 411 lin
X361 406 lin
X361 400 lin
X355 398 lin
X358 391 lin
X348 388 lin
X342 380 lin
X343 365 lin
X339 353 lin
X320 346 lin
X321 337 lin
X309 336 lin % x25 2
X307 342 lin
X311 348 lin
X305 350 lin
X309 357 lin % x33 2
X303 370 lin
X300 381 lin
X301 394 lin
X293 396 lin
X283 390 lin
X272 385 lin
X266 387 lin
X264 395 lin
X257 395 lin
X257 401 lin
X263 401 lin
X266 408 lin
X258 407 lin
X259 424 lin
X263 439 lin
X271 449 lin
X283 457 lin
X295 461 lin
X307 470 lin
X319 482 lin
X325 494 lin
X330 505 lin
X337 512 lin
X341 519 lin
X342 525 lin
X331 523 lin
X340 532 lin
X341 538 lin
X350 543 lin
X349 530 lin
X354 542 lin
X362 550 lin
X372 558 lin
X386 564 lin
X400 565 lin
X413 561 lin
X418 566 lin
X427 560 lin
X421 556 lin
X428 549 lin
X432 557 lin
X443 549 lin
X453 549 lin
X467 542 lin
X477 540 lin
X486 533 lin
X492 523 lin
X489 516 lin
X481 510 lin
X472 506 lin
X460 506 lin
X453 508 lin
X439 516 lin
X450 505 lin
X460 495 lin
X461 484 lin
X473 472 lin
X483 473 lin
X483 479 lin
X474 483 lin
X471 492 lin
X488 491 lin
X495 487 lin
X496 495 lin
X488 498 lin
X490 504 lin
X500 517 lin
X505 521 lin
X511 520 lin
X511 527 lin
X505 533 lin
X504 544 lin
X497 550 lin
X506 553 lin
X515 552 lin
X519 544 lin
X513 539 lin
X514 534 lin
X519 538 lin
X524 533 lin
X530 541 lin
X531 553 lin
X538 562 lin
X543 565 lin
X547 572 lin
X547 576 lin
X% delta = (2,-564)
X% 361 lines
X%% BORDER
X
X% connect across top of map
X22 576 lin
X
X% NAf+Tunis coast
X% 698 496 gm
X22 80 lin
X32 86 lin
X40 93 lin
X45 101 lin
X55 107 lin
X63 101 lin
X63 94 lin
X78 88 lin
X84 87 lin
X92 81 lin
X108 81 lin
X124 85 lin
X136 88 lin
X146 84 lin
X164 86 lin
X193 80 lin
X212 80 lin
X223 74 lin
X229 73 lin
X235 76 lin
X245 76 lin
X246 68 lin
X256 71 lin % x53 2
X257 66 lin
X249 59 lin
X254 49 lin
X253 42 lin
X246 36 lin
X240 27 lin
X239 19 lin
X243 12 lin
X% delta = (-221,68)
X% 31 lines
X%% BORDER - but it joins neatly to the previous one!
XSEA
X
X% Britain
X130 300 gm
X134 297 lin
X140 300 lin
X146 301 lin
X149 298 lin
X154 298 lin
X155 304 lin
X161 304 lin
X165 298 lin
X174 298 lin
X182 295 lin
X186 292 lin
X191 293 lin
X201 300 lin
X193 301 lin
X198 305 lin
X205 308 lin
X207 314 lin
X208 322 lin
X201 325 lin
X194 322 lin
X191 326 lin
X199 330 lin
X200 342 lin
X198 350 lin
X195 353 lin
X195 364 lin
X192 371 lin
X188 375 lin
X181 372 lin
X188 379 lin
X183 379 lin
X190 382 lin
X199 389 lin
X205 397 lin
X193 402 lin
X183 402 lin
X191 407 lin
X197 413 lin
X201 419 lin
X203 425 lin
X193 422 lin
X189 417 lin
X180 421 lin
X173 410 lin % x37 2
X164 411 lin
X160 407 lin % x43 2
X164 402 lin
X156 385 lin
X157 377 lin
X166 374 lin
X161 371 lin
X161 365 lin
X175 365 lin
X169 359 lin % x35 2
X170 354 lin
X174 349 lin
X168 342 lin
X160 348 lin
X155 345 lin
X155 339 lin
X159 335 lin
X154 329 lin
X144 327 lin
X142 324 lin
X147 321 lin
X152 323 lin
X153 315 lin
X159 313 lin
X164 316 lin
X160 311 lin
X150 314 lin
X146 311 lin
X145 308 lin
X136 306 lin
X135 302 lin
X% 76 lines
XISLAND
X
X% Ireland
X109 335 gm
X115 335 lin
X118 337 lin
X124 333 lin
X128 333 lin
X131 338 lin
X137 334 lin
X145 346 lin
X147 358 lin
X153 359 lin % x36 2
X157 363 lin
X157 370 lin
X155 378 lin
X149 379 lin
X147 383 lin
X135 383 lin
X132 376 lin
X134 373 lin
X129 373 lin
X121 378 lin
X118 372 lin
X118 367 lin
X112 365 lin
X117 361 lin
X122 358 lin
X114 355 lin
X111 348 lin
X106 351 lin
X103 347 lin
X103 339 lin
X% 14 lines
XISLAND
X
X
X% Sea in StP south
X448 412 gm
X451 418 lin
X457 420 lin
X452 427 lin
X443 430 lin
X439 434 lin
X434 428 lin
X438 423 lin
X444 423 lin
X446 417 lin
XSEA
X
X% Sea in StP north
X477 431 gm
X481 432 lin
X480 438 lin
X472 442 lin
X472 448 lin
X466 445 lin
X468 439 lin
X475 436 lin
XSEA
X
X% Caspian Sea
X712 212 gm
X706 211 lin
X707 217 lin
X703 220 lin
X697 220 lin
X691 217 lin
X687 222 lin
X680 230 lin
X671 232 lin
X672 237 lin
X681 240 lin
X675 245 lin
X675 251 lin
X693 257 lin
X688 265 lin
X687 276 lin
X677 278 lin
X666 274 lin
X659 274 lin
X654 262 lin
X647 258 lin
X638 259 lin
X646 250 lin
X638 241 lin
X634 230 lin
X637 218 lin
X649 213 lin
X652 203 lin
X670 190 lin
X676 191 lin
X682 181 lin
X694 181 lin
X698 177 lin
X688 171 lin
X690 164 lin
X692 156 lin
X688 147 lin
X694 139 lin
X702 134 lin
X708 136 lin
X712 141 lin
XSEA
X
X% Cyprus
X537 56 gm
X527 50 lin
X518 49 lin
X511 44 lin
X512 37 lin
X522 37 lin
X531 43 lin
X532 49 lin
XISLAND
X
X% Crete
X437 37 gm
X435 36 lin
X426 37 lin
X422 40 lin
X414 39 lin
X412 37 lin
X409 40 lin
X403 39 lin
X401 36 lin
X401 30 lin
X408 33 lin
X419 28 lin
X422 28 lin
X426 32 lin
X435 30 lin
X438 34 lin
XISLAND
X
X% Sicily
X306 80 gm
X300 83 lin
X298 79 lin
X289 79 lin
X284 84 lin
X276 84 lin
X272 79 lin
X278 72 lin
X288 66 lin
X295 60 lin
X301 56 lin
X305 60 lin
X305 72 lin
XISLAND
X
X% Sardinia
X243 104 gm
X235 102 lin
X231 100 lin
X229 107 lin
X232 117 lin
X230 125 lin
X228 130 lin
X233 134 lin
X236 130 lin
X240 130 lin % x52 2
X243 135 lin
X248 130 lin
X249 123 lin
XISLAND
X
X% Corsica
X250 160 gm
X242 154 lin
X237 152 lin
X237 145 lin
X241 139 lin
X246 137 lin
X249 147 lin
X252 152 lin
XISLAND
X
X% Majorca
X173 129 gm
X168 129 lin
X165 126 lin
X166 120 lin
X173 120 lin
X178 125 lin
XISLAND
X
X% Shetland
X224 443 gm
X219 443 lin
X214 436 lin
X219 432 lin
X224 439 lin % x45 2
XISLAND
X
X% Faroes
X185 461 gm % x42 2
X192 470 lin
X196 476 lin
X193 481 lin
X185 479 lin % x44 2
X182 474 lin
X188 471 lin
X184 465 lin
XISLAND
X
X% Gotland
X363 373 gm
X360 366 lin
X359 361 lin
X353 360 lin
X350 364 lin
X350 369 lin
X355 373 lin % x24 2
XISLAND
X
X% Demark's little island
X302 348 gm
X305 344 lin
X304 336 lin
X297 333 lin
X295 337 lin
X298 341 lin
X294 346 lin
X298 350 lin
XISLAND
X
X% Tun|NAf
X224 74 gm
X224 60 lin
X213 52 lin
X217 39 lin
X217 12 lin
X% delta = (7,62)
X% 4 lines
XBORDER
X
X% Arm|Sev
X688 148 gm
X679 143 lin
X679 154 lin
X674 159 lin
X671 148 lin
X656 137 lin
X627 148 lin
X626 160 lin
X614 165 lin
X607 160 lin
X600 162 lin % x3 2
X% delta = (88,-14)
X% 10 lines
XBORDER
X
X% Con|Bul
X446 142 gm % x4 2
X436 141 lin
X433 143 lin
X429 134 lin
X433 128 lin
X427 120 lin
X% delta = (19,22)
X% 5 lines
XBORDER
X
X% Gre|Bul
X418 120 gm
X417 130 lin
X410 136 lin
X401 126 lin
X394 129 lin % x12 2
X385 124 lin
X374 120 lin % x5 2
X372 107 lin
X362 98 lin
X% delta = (56,22)
X% 8 lines
XBORDER
X
X% Alb|Ser
X374 120 gm % x5 2
X370 135 lin
X362 145 lin % x7 2
XBORDER
X
X% Austria|Alb+Ser+Rum+Rus+Ger
X351 136 gm % x6 2
X362 145 lin % x7 2
X359 152 lin
X359 161 lin
X353 162 lin
X355 177 lin % x62 2
X367 175 lin
X383 171 lin % x10 2
X390 185 lin
X402 185 lin
X410 190 lin
X421 187 lin
X427 194 lin
X428 202 lin
X422 209 lin
X415 211 lin
X415 217 lin
X% Rum.Rus
X426 225 lin % x8 2
X426 239 lin
X418 246 lin
X414 255 lin
X402 264 lin
X396 254 lin
X389 252 lin
X382 263 lin
X376 264 lin
X370 254 lin
X359 258 lin % x18 2
X352 251 lin
X341 261 lin
X332 258 lin
X325 266 lin
X317 272 lin
X311 272 lin % x27 2
X307 265 lin
X303 266 lin
X298 271 lin
X289 264 lin
X290 257 lin
X297 253 lin
X301 245 lin
X307 237 lin % x58 2
X300 231 lin
X291 227 lin
X278 226 lin
X273 233 lin
X266 225 lin % x14 2
XBORDER
X
X
X% Rum|Sev
X426 225 gm % x8 2
X434 224 lin
X440 215 lin
X439 205 lin
X445 198 lin
X447 190 lin
X456 187 lin
X464 182 lin % x9 2
XBORDER
X
X% Rum|Ser
X453 172 gm
X443 166 lin
X439 162 lin
X432 166 lin
X424 163 lin
X413 168 lin
X402 162 lin
X396 164 lin
X393 170 lin
X386 165 lin % x11 2
X383 171 lin % x10 2
X% delta = (70,1)
X% 10 lines
XBORDER
X
X%
X386 165 gm % x11 2
X387 158 lin
X392 154 lin
X387 148 lin
X394 129 lin % x12 2
X% delta = (-8,36)
X% 4 lines
XBORDER
X
X% Italy|Austria
X271 212 gm % x13 2
X289 218 lin
X289 208 lin
X300 209 lin
X303 201 lin
X297 194 lin
XBORDER
X
X% Switzerland
X271 212 gm % x13 2
X266 206 lin
X260 212 lin
X256 202 lin
X251 202 lin
X251 211 lin
X241 207 lin
X237 211 lin % x15 2
X240 216 lin
X227 210 lin
X226 217 lin
X242 228 lin
X249 225 lin
X260 229 lin
X266 225 lin % x14 2
X267 217 lin
XSWITZERLAND
X
X% Fra|Ital
X237 211 gm % x15 2
X235 198 lin
X228 195 lin
X229 189 lin
X235 184 lin
X234 173 lin
X% delta = (3,38)
X% 5 lines
XBORDER
X
X% Fra|Ger
X243 228 gm
X243 241 lin
X253 245 lin
X253 251 lin % x31 2
X238 256 lin
X244 264 lin
X240 269 lin
X241 283 lin
X241 290 lin % x17 2
X248 294 lin % x29 2
X256 295 lin
X252 307 lin
X258 310 lin
X258 314 lin
X256 318 lin % x16 2
X% delta = (-13,-90)
X% 14 lines
XBORDER
X
X% Bel|Hol
X241 290 gm % x17 2
X224 299 lin
X% delta = (17,-9)
X% 1 lines
XBORDER
X
X% Bel|Fra
X238 258 gm
X232 257 lin
X234 263 lin
X227 264 lin % x48 2
X228 273 lin
X224 277 lin
X219 271 lin
X218 280 lin
X213 280 lin
X211 286 lin
X205 290 lin
X% delta = (33,-32)
X% 10 lines
XBORDER
X
X% Germany|Russia
X359 258 gm % x18 2
X354 267 lin
X349 270 lin
X349 279 lin
X344 285 lin
X344 291 lin
X352 298 lin
X368 302 lin
X378 308 lin
X388 310 lin
X382 322 lin
X376 331 lin
X% delta = (-15,-73)
X% 11 lines
XBORDER
X
X% Norway|Sweden
X302 394 gm
X308 398 lin
X316 417 lin
X312 426 lin
X320 432 lin
X320 438 lin
X315 444 lin
X318 457 lin
X323 469 lin
X331 467 lin
X339 487 lin
X339 495 lin
X349 504 lin
X349 513 lin
X356 522 lin
X361 517 lin
X361 531 lin
X369 524 lin
X372 526 lin
X371 532 lin % x19 2
X372 540 lin
X379 545 lin
X382 541 lin
X381 534 lin
X401 535 lin
X405 539 lin
X401 542 lin
X402 548 lin
X407 552 lin
X417 549 lin
X421 546 lin
X421 536 lin
X424 530 lin
X429 536 lin
X428 550 lin
X% delta = (-126,-156)
X% 34 lines
XBORDER
X
X% Sweden|Finland
X371 532 gm % x19 2
X376 531 lin
X383 525 lin
X388 522 lin
X390 509 lin
X390 488 lin
X% delta = (-19,44)
X% 5 lines
XBORDER
X
X% Hebrides
X174 421 gm
X170 423 lin
X164 418 lin
X159 416 lin
X158 411 lin
X165 414 lin
X170 414 lin
X173 417 lin
XISLAND
X
X% Portugal|Spain
X57 202 gm
X64 203 lin
X65 198 lin
X67 193 lin
X73 195 lin
X74 192 lin
X84 195 lin
X82 188 lin
X79 188 lin
X70 179 lin
X66 168 lin
X63 162 lin
X58 162 lin
X57 148 lin
X44 131 lin % x20 2
X% delta = (13,71)
X% 14 lines
XBORDER
X
X% France|Spain
X183 169 gm
X177 168 lin
X172 171 lin
X167 171 lin
X167 178 lin % x50 2
X161 183 lin
X154 179 lin
X137 195 lin
X% delta = (46,-26)
X% 7 lines
XBORDER
X
X% Den|Kie
X272 333 gm
X280 331 lin % x21 2
XBORDER
X
X370 162 supply % Ser
X311 117 supply % Nap
X280 141 supply % Rom
X402  85 supply % Gre
X400 149 supply % Bul
X452  77 supply % Smy
X530 124 supply % Ank
X425 176 supply % Rum
X351 207 supply
X329 220 supply
X314 191 supply
X281 195 supply
X284 241 supply
X204 180 supply % Mar
X100 161 supply
X238  62 supply
X 43 164 supply
X142 270 supply
X204 249 supply
X223 281 supply % Bel
X236 302 supply % Hol
X279 316 supply % Kie
X303 305 supply % Ber
X185 305 supply % Lon
X168 337 supply % Lpl
X185 388 supply % Edi
X300 415 supply % Nwy
X301 342 supply % Den
X346 405 supply
X368 286 supply
X446 403 supply
X526 345 supply
X491 229 supply
X446 131 supply % Con
X639 259 gm
X632 285 lin
X622 304 lin
X609 315 lin
X592 318 lin
X575 311 lin
X556 301 lin
X547 301 lin
X532 303 lin
X509 290 lin
X499 288 lin
X492 277 lin
X486 261 lin
X463 243 lin
X451 231 lin
X440 214 lin
X% delta = (-40,-141)
X% 19 lines
Xinternal
X
X%
X498 288 gm
X466 288 lin
X443 286 lin
X421 282 lin
X402 277 lin
X% delta = (96,11)
X% 4 lines
Xinternal
X
X%
X401 265 gm
X401 278 lin
X399 297 lin
X387 310 lin
X% delta = (14,-45)
X% 3 lines
Xinternal
X
X%
X398 297 gm
X417 304 lin
X424 315 lin
X423 323 lin
X430 335 lin
X430 347 lin % x23 2
X427 364 lin
X425 378 lin
X422 389 lin
X413 387 lin
X403 388 lin
X393 396 lin % x22 2
X% delta = (5,-99)
X% 11 lines
Xinternal
X
X%
X430 347 gm % x23 2
X440 347 lin
X454 358 lin
X467 366 lin
X482 364 lin
X491 372 lin
X505 392 lin
X520 403 lin
X546 406 lin
X577 412 lin
X% delta = (-147,-65)
X% 9 lines
Xinternal
X
X%
X415 413 gm
X420 427 lin
X422 455 lin
X424 531 lin
X% delta = (-9,-118)
X% 3 lines
Xinternal
X
X%
X378 365 gm
X361 367 lin
X% delta = (17,-2)
X% 1 lines
Xinternal
X
X%
X355 373 gm % x24 2
X342 381 lin
X% delta = (13,-8)
X% 1 lines
Xinternal
X
X%
X309 336 gm % x25 2
X300 329 lin
X294 329 lin
X288 337 lin
X% delta = (21,-1)
X% 3 lines
Xinternal
X
X%
X294 330 gm
X293 320 lin
X298 286 lin % x28 2
X307 292 lin
X324 297 lin % x26 2
X326 319 lin
X% delta = (-32,11)
X% 5 lines
Xinternal
X
X%
X324 297 gm % x26 2
X345 290 lin
X% delta = (-21,7)
X% 1 lines
Xinternal
X
X%
X308 293 gm
X311 272 lin % x27 2
X% delta = (-3,21)
X% 1 lines
Xinternal
X
X%
X298 286 gm % x28 2
X266 271 lin % x30 2
X248 294 lin % x29 2
X% delta = (50,-8)
X% 2 lines
Xinternal
X
X%
X266 271 gm % x30 2
X253 251 lin % x31 2
X% delta = (13,20)
X% 1 lines
Xinternal
X
X%
X271 349 gm
X265 354 lin
X252 355 lin
X241 341 lin
X236 328 lin
X240 319 lin % x32 2
X% delta = (31,30)
X% 5 lines
Xinternal
X
X%
X271 362 gm
X264 369 lin
X261 381 lin
X266 389 lin
X% delta = (5,-27)
X% 3 lines
Xinternal
X
X%
X309 357 gm % x33 2
X294 354 lin % x34 2
X% delta = (15,3)
X% 1 lines
Xinternal
X
X%
X169 359 gm % x35 2
X153 359 lin % x36 2
X% delta = (16,0)
X% 1 lines
Xinternal
X
X%
X173 410 gm % x37 2
X176 380 lin % x38 2
X165 375 lin
X% delta = (8,35)
X% 2 lines
Xinternal
X
X%
X176 380 gm % x38 2
X180 362 lin
X187 346 lin
X186 332 lin % x39 2
X180 322 lin
X176 307 lin
X181 296 lin
X% delta = (-5,84)
X% 6 lines
Xinternal
X
X%
X192 323 gm
X179 321 lin
X% delta = (13,2)
X% 1 lines
Xinternal
X
X%
X186 332 gm % x39 2
X174 330 lin
X158 335 lin
X% delta = (28,-3)
X% 2 lines
Xinternal
X
X%
X193 367 gm
X180 363 lin
X% delta = (13,4)
X% 1 lines
Xinternal
X
X%
X129 300 gm
X103 284 lin
X% delta = (26,16)
X% 1 lines
Xinternal
X
X%
X132 276 gm % x40 2
X103 283 lin
X71 295 lin % x41 2
X22 316 lin
X% delta = (110,-40)
X% 3 lines
Xinternal
X
X%
X71 295 gm % x41 2
X108 335 lin
X% delta = (-37,-40)
X% 1 lines
Xinternal
X
X% NWG|MAO lower
X170 422 gm
X185 461 lin % x42 2
X% delta = (-5,-40)
X% 1 lines
Xinternal
X
X% NWG|MAO to Cly
X158 410 gm
X160 407 lin % x43 2
Xinternal
X
X% NWG|NAO top
X185 479 gm % x44 2
X141 576 lin
X% delta = (44,-97)
X% 1 lines
Xinternal
X
X%
X215 435 gm
X202 425 lin
X% delta = (13,10)
X% 1 lines
Xinternal
X
X%
X224 439 gm % x45 2
X269 447 lin
X% delta = (-45,-8)
X% 1 lines
Xinternal
X
X%
X156 230 gm % x46 2
X169 234 lin
X181 254 lin
X181 273 lin % x47 2
X% delta = (-25,-43)
X% 3 lines
Xinternal
X
X%
X168 234 gm
X175 220 lin
X184 218 lin
X196 223 lin
X205 234 lin
X217 243 lin
X222 255 lin
X227 264 lin % x48 2
X% delta = (-59,-30)
X% 7 lines
Xinternal
X
X%
X223 256 gm
X211 260 lin
X197 255 lin
X181 255 lin
X% delta = (42,1)
X% 3 lines
Xinternal
X
X%
X197 223 gm
X199 203 lin % x49 2
X213 214 lin
X227 217 lin
X% delta = (-30,6)
X% 3 lines
Xinternal
X
X%
X199 203 gm % x49 2
X179 191 lin
X167 178 lin % x50 2
X% delta = (32,25)
X% 2 lines
Xinternal
X
X%
X137 122 gm
X165 123 lin
X% delta = (-28,-1)
X% 1 lines
Xinternal
X
X%
X178 126 gm
X230 124 lin
X% delta = (-52,2)
X% 1 lines
Xinternal
X
X%
X261 169 gm % x51 2
X249 160 lin
X% delta = (12,9)
X% 1 lines
Xinternal
X
X%
X232 100 gm
X236 76 lin
X% delta = (-4,24)
X% 1 lines
Xinternal
X
X%
X240 140 gm
X240 130 lin % x52 2
X% delta = (0,10)
X% 1 lines
Xinternal
X
X%
X272 78 gm
X256 71 lin % x53 2
X% delta = (16,7)
X% 1 lines
Xinternal
X
X%
X354 110 gm
X346 106 lin
X% delta = (8,4)
X% 1 lines
Xinternal
X
X%
X402 49 gm % x54 2
X408 40 lin
X% delta = (-6,9)
X% 1 lines
Xinternal
X
X%
X410 32 gm
X407 12 lin
X% delta = (3,20)
X% 1 lines
Xinternal
X
X%
X467 58 gm
X456 55 lin
X447 43 lin
X438 35 lin
X% delta = (29,23)
X% 3 lines
Xinternal
X
X%
X432 107 gm
X431 117 lin
X% delta = (1,-10)
X% 1 lines
Xinternal
X
X%
X484 129 gm
X491 93 lin % x56 2
X% delta = (-7,36)
X% 1 lines
Xinternal
X
X%
X440 94 gm % x55 2
X452 88 lin
X471 93 lin
X491 93 lin % x56 2
X512 100 lin
X531 105 lin
X549 100 lin
X565 103 lin
X578 110 lin
X592 121 lin
X% delta = (-152,-27)
X% 9 lines
Xinternal
X
X%
X586 146 gm % x57 2
X592 120 lin
X601 94 lin
X619 89 lin
X661 94 lin
X698 100 lin
X712 108 lin
X% delta = (-126,38)
X% 6 lines
Xinternal
X
X%
X600 95 gm
X549 59 lin
X% delta = (51,36)
X% 1 lines
Xinternal
X
X%
X281 215 gm
X281 206 lin
X267 197 lin
X259 188 lin
X251 180 lin
X% delta = (30,35)
X% 4 lines
Xinternal
X
X%
X258 188 gm
X267 176 lin
X279 164 lin
X288 152 lin
X300 141 lin
X309 125 lin
X323 114 lin
X327 104 lin
X% delta = (-69,84)
X% 7 lines
Xinternal
X
X%
X308 126 gm
X294 121 lin
X% delta = (14,5)
X% 1 lines
Xinternal
X
X%
X304 143 gm
X299 141 lin
X% delta = (5,2)
X% 1 lines
Xinternal
X
X%
X285 155 gm
X269 144 lin
X% delta = (16,11)
X% 1 lines
Xinternal
X
X%
X343 260 gm
X344 245 lin
X% delta = (-1,15)
X% 1 lines
Xinternal
X
X%
X319 235 gm % x59 2
X315 219 lin % x60 2
X% delta = (4,16)
X% 1 lines
Xinternal
X
X%
X340 203 gm % x61 2
X342 215 lin
X350 226 lin
X357 231 lin
X361 240 lin
X% delta = (-21,-37)
X% 4 lines
Xinternal
X
X%
X307 237 gm % x58 2
X319 235 lin % x59 2
X330 242 lin
X345 245 lin
X353 241 lin
X361 241 lin
X375 238 lin
X389 233 lin
X401 227 lin
X410 221 lin
X415 216 lin
X% delta = (-108,21)
X% 10 lines
Xinternal
X
X%
X299 209 gm
X303 216 lin
X315 219 lin % x60 2
X319 211 lin
X325 204 lin
X340 203 lin % x61 2
X337 195 lin
X341 185 lin
X351 183 lin
X355 177 lin % x62 2
Xinternal
X
X% Con/Bul
X470 131 gm % x63 2
X454 136 lin % x64 2
Xinternal
X
X% BAR|NWG
X394 565 gm
X394 576 lin
Xinternal
X
X% ENC|NTH
X200 300 gm
X214 294 lin
Xinternal
X
X% WMS|MAO
X63 100 gm
X66 107 lin
Xinternal
X
X% 22,12 -> 712,576
Xlastborder
END_OF_FILE
if test 20031 -ne `wc -c <'borders3.ps'`; then
    echo shar: \"'borders3.ps'\" unpacked with wrong size!
fi
# end of 'borders3.ps'
fi
if test -f 'colours.ps' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'colours.ps'\"
else
echo shar: Extracting \"'colours.ps'\" \(866 characters\)
sed "s/^X//" >'colours.ps' <<'END_OF_FILE'
X%!
X% Piece colour definitions
X
X/Black { 0 setgray } bind def
X/White { 1 setgray } bind def
X
X/Pink {White} def
X/Blue {White} def
X/Mauve {White} def
X/Yellow {White} def
X/Orange {White} def
X/Green {White} def
X/Schwartz {Black} def 	% for Germany
X
X% Piece colourname, Contrast colourname
X%
X/EnglandColours	{ /Pink  /Black } def
X/FranceColours	{ /Blue  /Black } def
X/GermanyColours	{ /Schwartz /White } def
X/RussiaColours	{ /Mauve /Black } def
X/TurkeyColours	{ /Yellow /Black } def
X/AustriaColours	{ /Orange /Black } def
X/ItalyColours	{ /Green /Black } def
X
X% Other details
X
X/Seacolour { 0.9 setgray } def
X/Coastcolour { 1 setlinewidth 0 setgray } def
X/Swisscolour { 0.5 setgray } def
X
X% /Internalborder { 1 setlinewidth [3] 1.5 setdash 0 setgray } def
X/Internalborder { 0.5 setlinewidth [3 1] 1.5 setdash 0 setgray } def
X/Nationalborder { 2 setlinewidth 0 setgray } def
END_OF_FILE
if test 866 -ne `wc -c <'colours.ps'`; then
    echo shar: \"'colours.ps'\" unpacked with wrong size!
fi
# end of 'colours.ps'
fi
if test -f 'example.position' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'example.position'\"
else
echo shar: Extracting \"'example.position'\" \(2431 characters\)
sed "s/^X//" >'example.position' <<'END_OF_FILE'
X%% Result of Autumn 1908
X
X% England
X%      F NAf - MAO
X%     <A Lon - Nwy>                 no convoy order
X%     <F NWG s A Lon - Nwy>         no convoy order
X% Russia
X%     <F StP S A Lon - Nwy>         no convoy order
X%     <F BAL - Den>                 not vacant
X%     <A War holds>                 dislodged  Liv,Sil?
X% Turkey
X%      A Ser s A Bud
X%      A Bud s A Vie -> Gal
X%      A Vie -> Gal
X%      A Ukr -> War
X%      A Mos s A Ukr -> War
X%      F BLA holds
X%      A Rum -> Ukr
X%      F AEG -> Gre
X%      F EMS hold
X% Italy
X%      A Sil - Mun
X%      A Tyr sup A Sil - Mun
X%      A Boh - Vie
X%      A Tri sup A Boh - Vie
X%      A Ven - Pie
X%      F ADS - ION
X%      F Tun sup F ADS - ION
X%      F WMS - GoL
X%      F Por - Spa.sc
X% France
X%      F NTH - Edi
X%     <F HEL - Den>                equal force
X%      F Kie s F HEL - Den
X%      A Bre - Gas
X%     <A Ber s A Mun>              cut
X%     <A Mun s A Ber>              cut, dislodged  Ruh,Bur,Boh?
X% Germany
X%     <F Pru - Ber>                not vacant
X%     <A Den s A Swe>              cut
X%      A Swe s A Den
X%      F Nwy s A Swe
X
X%% Retreats
X%
X% Russian Army in War retreats to Liv.
X% French army in Mun retreats to Ruh.
X
X%% Supply Centres
X%
X% Austria:  0
X% England:  2  Lon  Lpl                                    -Edi       -1 
X% France:   8  Bre  Mar  Par  Bel  Hol  Kie                +Edi +Ber  +2
X% Italy:    9  Ven  Rom  Nap  Tun  Tri  Por  Vie  Spa  Mun
X% Germany:  3  Swe  Den  Nwy                                    -Ber  -1
X% Russia:   1  StP                                         -War -Mos  -2
X% Turkey:  11  Con  Ank  Smy  Bul  Ser  Rum  Gre  Sev  Bud +War +Mos  +2
X
X%% Builds/Disbands
X%
X% England disbands the fleet in MAO.
X% Germany disbands the army in Swe
X% Russia disbands the fleets in StP and BAL.
X% France builds an Army in Mar and a Fleet in Bre.
X% Turkey builds a Fleet in Smy and an Army in Con.
X%--------
X
XEngland
X% F MAO     disbanded
X  A Lon
X  F NWG
XRussia
X% F StP.nc  disbanded
X% F BAL     disbanded
X  A Lvn     % retreated from War
XTurkey
X  A Ser
X  A Bud
X  A Gal
X  A War
X  A Mos
X  F BLA
X  A Ukr
X  F Gre
X  F EMS
X  F Smy  % build
X  A Con  % build
XItaly
X  A Mun
X  A Tyr
X  A Vie
X  A Tri
X  A Pie
X  F ION
X  F Tun
X  F GoL
X  F Spa.sc
XFrance
X  F Edi
X  F HEL
X  F Kie
X  A Gas
X  A Ber
X  A Ruh  % dislodged from Mun
X  A Mar  % build
X  F Bre  % build
XGermany
X  F Pru
X  A Den
X  F Nwy
X
X(noon, Friday 23rd August) (Deadline)
X() (Spring 1909) Turn
END_OF_FILE
if test 2431 -ne `wc -c <'example.position'`; then
    echo shar: \"'example.position'\" unpacked with wrong size!
fi
# end of 'example.position'
fi
if test -f 'header.ps' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'header.ps'\"
else
echo shar: Extracting \"'header.ps'\" \(2689 characters\)
sed "s/^X//" >'header.ps' <<'END_OF_FILE'
X%!
X%% Diplomacy Map
X
X/minx 22 def /maxx 712 def
X/miny 12 def /maxy 576 def
X
X/gm /moveto load def
X/lin /lineto load def
X
X/supplyno 0 def
X/supply { % x y => -
X  supplyno 3 1 roll Supply % Do_Fleet % Do_Army
X  /supplyno supplyno 1 add 8 mod def	% increment number
X} def
X
X/Name { % x y str => -
X  gsave
X    3 1 roll translate          % x y is centre of string
X    dup stringwidth pop         % width
X    -2 div 0 moveto show        % show string at (-width/2,0)
X  grestore
X} def
X
X/internal { gsave Internalborder stroke grestore newpath } def
X/BORDER { gsave Nationalborder stroke grestore newpath} def
X
X/lastborder { 
X  gsave
X    % frame 
X    minx miny moveto
X    minx maxy lineto
X    maxx maxy lineto
X    maxx miny lineto
X    closepath
X    [] 0 setdash 0 setgray
X    gsave 4 setlinewidth stroke grestore
X    clip 2 setlinewidth 1 setgray stroke
X  grestore
X} def
X
X/buffer 255 string def
X
X/Turn { % [(str) ....] => -
X  gsave
X    maxx 20 add maxy 20 sub translate
X    /Times-Roman findfont 20 scalefont setfont
X    0 0 moveto (DIPLOMACY) show
X    0 -22 moveto
X    count {                     % foreach remaining item on the stack
X      buffer cvs                % turn it into a string	
X      gsave
X        dup stringwidth pop % (str) width
X        dup 120 ge {
X          dup 120 exch div 1 scale % scale x coord only
X        } if
X        pop
X        show
X      grestore
X      0 -22 rmoveto
X    } repeat
X  grestore
X  showpage
X} def
X
X/SEA {
X    closepath
X    gsave Seacolour fill grestore
X    gsave Coastcolour stroke grestore
X    newpath
X} def
X/ISLAND {
X    closepath
X    gsave 1 setgray fill grestore
X    gsave Coastcolour stroke grestore
X    newpath
X} def
X/SWITZERLAND {
X    closepath
X    gsave Swisscolour fill grestore
X    BORDER
X} def
X
X/Fleets 75 dict def
X/Armies 75 dict def
X
X% Create a procedure called str in the current dictionary
X% which when executed puts x y on the stack and invokes "x"
X%
X/create_posfn { % x y (str) => -
X    cvn 3 1 roll /x cvx 3 array astore cvx def
X} def
X
X/fleetpos { % x y (str) => -
X  Fleets begin
X    create_posfn
X  end
X} def
X/armypos { % x y (str) => -
X  Armies begin
X    create_posfn
X  end
X} def
X
X/fleetname { % x y (str) => -
X   3 copy exch 4 add exch fleetpos
X   exch LetterSize sub exch Name
X} def
X/armyname { % x y (str) => -
X   3 copy exch 4 add exch armypos
X   exch LetterSize sub exch Name
X} def
X/bothname { % x y (str) => -
X   3 copy exch 4 add exch 3 copy fleetpos armypos
X   exch LetterSize sub exch Name
X} def
X
X% Generic adjustments
X
X576 0 translate
X[ 0 1 -1 0 0 0] concat	% alias 90 rotate
X
X% Fine tuning for LW+ clipping region
X18 18 translate		% move NE a quarter of an inch
X0.9 dup scale		% reduce the size by 10%
X
X1 setlinewidth
X0 setgray
END_OF_FILE
if test 2689 -ne `wc -c <'header.ps'`; then
    echo shar: \"'header.ps'\" unpacked with wrong size!
fi
# end of 'header.ps'
fi
if test -f 'names.ps' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'names.ps'\"
else
echo shar: Extracting \"'names.ps'\" \(1890 characters\)
sed "s/^X//" >'names.ps' <<'END_OF_FILE'
X363 120 (Alb) bothname
X511 124 (Ank) bothname
X328 121 (Apu) bothname
X626 121 (Arm) bothname
X231 284 (Bel) bothname
X312 308 (Ber) bothname
X318 252 (Boh) armyname
X162 257 (Bre) bothname
X376 205 (Bud) armyname
X415 148 (Bul) armyname
X226 230 (Bur) armyname
X166 387 (Cly) bothname
X471 106 (Con) bothname
X281 351 (Den) bothname
X189 401 (Edi) bothname
X398 437 (Fin) bothname
X396 242 (Gal) armyname
X164 203 (Gas) bothname
X384 92 (Gre) bothname
X245 305 (Hol) bothname
X274 295 (Kie) bothname
X177 344 (Lpl) bothname
X403 341 (Lvn) bothname
X195 314 (Lon) bothname
X214 185 (Mar) bothname
X527 360 (Mos) armyname
X274 250 (Mun) armyname
X318 104 (Nap) bothname
X138 71 (NAf) bothname
X284 429 (Nwy) bothname
X191 238 (Par) armyname
X201 269 (Pic) bothname
X247 192 (Pie) bothname
X57 176 (Por) bothname
X347 309 (Pru) bothname
X252 271 (Ruh) armyname
X296 131 (Rom) bothname
X440 178 (Rum) bothname
X465 403 (StP) armyname
X375 145 (Ser) armyname
X513 234 (Sev) bothname
X329 281 (Sil) armyname
X473 74 (Smy) bothname
X122 165 (Spa) armyname
X326 384 (Swe) bothname
X603 50 (Syr) bothname
X324 172 (Tri) bothname
X234 45 (Tun) bothname
X271 158 (Tus) bothname
X295 218 (Tyr) armyname
X444 260 (Ukr) armyname
X275 184 (Ven) bothname
X339 231 (Vie) armyname
X168 313 (Wal) bothname
X384 283 (War) armyname
X194 343 (Yor) bothname
X311 155 (ADS) fleetname
X425 59 (AEG) fleetname
X353 343 (BAL) fleetname
X477 561 (BAR) fleetname
X204 147 (GoL) fleetname
X256 335 (HEL) fleetname
X333 44 (ION) fleetname
X115 310 (IRI) fleetname
X68 252 (MAO) fleetname
X91 430 (NAO) fleetname
X482 164 (BLA) fleetname
X482 33 (EMS) fleetname
X145 288 (ENG) fleetname
X374 387 (GoB) fleetname
X227 374 (NTH) fleetname
X246 504 (NWG) fleetname
X288 381 (SKA) fleetname
X268 103 (TYS) fleetname
X200 100 (WMS) fleetname
X476 474 (StP.nc) fleetpos
X430 402 (StP.sc) fleetpos
X77 211 (Spa.nc) fleetpos
X101 109 (Spa.sc) fleetpos
X424 121 (Bul.sc) fleetpos
X448 151 (Bul.ec) fleetpos
X
X
END_OF_FILE
if test 1890 -ne `wc -c <'names.ps'`; then
    echo shar: \"'names.ps'\" unpacked with wrong size!
fi
# end of 'names.ps'
fi
if test -f 'parser.ps' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'parser.ps'\"
else
echo shar: Extracting \"'parser.ps'\" \(966 characters\)
sed "s/^X//" >'parser.ps' <<'END_OF_FILE'
X% parse the position description
X
X/set_country { % N /piececolour /contrast => -
X    load /Contrast exch store
X    load /PieceColour exch store
X    /country exch store
X} bind def
X   
X/England { 1 EnglandColours set_country } def
X/France  { 2 FranceColours  set_country } def
X/Germany { 3 GermanyColours set_country } def
X/Russia  { 4 RussiaColours  set_country } def
X/Turkey  { 5 TurkeyColours  set_country } def
X/Austria { 6 AustriaColours set_country } def
X/Italy   { 7 ItalyColours   set_country } def
X
X/F {
X    piecefn /Do_Army eq { end Fleets begin } if
X    /piecefn /Do_Fleet store
X} def
X
X/A {
X    piecefn /Do_Fleet eq { end Armies begin } if
X    /piecefn /Do_Army store
X} def
X
X% part of every placename definition
X/x { % x y => -
X  country 3 1 roll	% N x y
X  piecefn load exec
X} def
X
X% Place names are executable and cause the current piecetype to
X% be printed after pushing the coordinates onto the stack.
X
X/country 0 def
X/piecefn /Do_Army def
X
XArmies begin
END_OF_FILE
if test 966 -ne `wc -c <'parser.ps'`; then
    echo shar: \"'parser.ps'\" unpacked with wrong size!
fi
# end of 'parser.ps'
fi
if test -f 'pieces.ps' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'pieces.ps'\"
else
echo shar: Extracting \"'pieces.ps'\" \(3917 characters\)
sed "s/^X//" >'pieces.ps' <<'END_OF_FILE'
X% Letters for the different countries
X%
X% 0 means "nobody", then 1-7 going clockwise from England
X
X/Countries [
X  (?) (E) (F) (G) (R) (T) (A) (I)
X] def
X/Offsets 8 array def
X
X/max { % p q => max(p,q)
X  2 copy lt { exch} if pop
X} bind def
X
X/InitLetters {
X  0 0				% maxdx maxdy
X  0 1 7 {
X    /N exch def
X    Countries N get	% maxdx maxdy (N)
X    newpath 0 0 moveto
X    true charpath pathbbox     % ... llx lly urx ury
X    %
X    % Compute the offset in to centre the letter at 0,0
X       4 copy		% llx lly urx ury
X       3 -1 roll add -2 div	% llx urx dy
X       3 1 roll add -2 div	% dy dx
X       exch 2 array astore	% [dx,dy]
X       Offsets N 3 -1 roll put  % - ([dx,dy] stored in offsets)
X    %
X    % Update maximum xwidth, ywidth
X    3 -1 roll sub		% llx urx leny
X    3 1 roll exch sub exch	% lenx leny
X    				% maxdx maxdy lenx leny
X    3 -1 roll max		% maxdx lenx newmaxdy
X    3 1 roll max		% newmaxdy newmaxdx
X    exch
X  } for
X
X  newpath
X  % maxdx maxdy = biggest bounding rectangle of the letters
X  max 1.5 mul /LetterSize exch def
XLetterSize ==
X} def
X
X% /Supply { % N x y => -
X%   gsave translate
X%     LetterSize 1.7 div 0 moveto
X%     0 0 LetterSize 1.7 div 0 360 arc
X%     PieceColour 1 setlinewidth stroke
X%     dup Offsets exch get aload pop	% N dx dy
X%     moveto
X%     Countries exch get show	% then a black letter
X%   grestore
X% } bind def
X
X/Supply { % N x y => -
X  gsave translate
X    0 0 2 0 360 arc
X    PieceColour fill
X  grestore
X  pop	% let'em work out the country themselves!
X} def
X
X% Ground work for coloured pieces on colour displays
X% redefine these for different countries
X%
X/PieceColour { 0 setgray } bind def
X/Contrast { 1 setgray } bind def
X
X% Army is a little hut...
X/Do_Army { % N x y => -
X  gsave translate
X    gsave 
X      newpath
X      LetterSize 14 div dup scale
X      -20 7 moveto 30 0 rlineto 0 -4 rlineto 4 0 rlineto
X       0 -2 rlineto -30 0 rlineto 0  2 rlineto -4 0 rlineto
X       0 4 rlineto		% barrel
X       4 2 moveto 20 -10 rlineto 2 0 rlineto -8 0 rlineto
X      -20  10 rlineto		% carriage
X      Contrast 2 setlinewidth stroke
X      0 0 9 0 360 arc	% wheel
X      closepath
X      Contrast 2 setlinewidth stroke
X      newpath
X      -20 7 moveto 30 0 rlineto 0 -4 rlineto 4 0 rlineto
X       0 -2 rlineto -30 0 rlineto 0  2 rlineto -4 0 rlineto
X       0 4 rlineto		% barrel
X       4 2 moveto 20 -10 rlineto 2 0 rlineto -8 0 rlineto
X      -20  10 rlineto		% carriage
X      PieceColour fill
X      0 0 9 0 360 arc	% wheel
X      closepath
X      PieceColour fill
X    grestore
X    dup Offsets exch get aload pop	% N dx dy
X    moveto
X    Countries exch get Contrast show % then a white letter
X  grestore
X} bind def
X
X% Fleet is a little boat...
X/Do_Fleet { % N x y => -
X  gsave translate
X    gsave 
X      newpath
X      LetterSize 14 div dup scale
X      -26 -7 moveto 0 5 rlineto 7 0 rlineto 0 1 rlineto		% to bow
X      -3 0 rlineto 0 1 rlineto 7 0 rlineto 0 1 rlineto		% A turret
X      -3 0 rlineto 0 1 rlineto 8 0 rlineto 0 -2 rlineto		% B turret
X      1 0 rlineto 0 4 rlineto 1 0 rlineto 0 2 rlineto		% conn tower
X      2 0 rlineto 0 -1 rlineto 1 0 rlineto 0 4 rlineto		% Infra struct
X      2 0 rlineto 0 5 rlineto 1 0 rlineto 0 -5 rlineto		% funnel 1
X      2 0 rlineto 0 -4 rlineto 1 0 rlineto 0 3 rlineto		% funnel 2
X      2 0 rlineto 0 5 rlineto 1 0 rlineto 0 -5 rlineto		% mast 2
X      2 0 rlineto 0 -8 rlineto 2 0 rlineto 0 2 rlineto		% funnel 2
X      8 0 rlineto 0 -1 rlineto -3 0 rlineto 0 -1 rlineto	% C turret
X      7 0 rlineto 0 -1 rlineto -3 0 rlineto 0 -1 rlineto	% D turret
X      6 0 rlineto 0 -1 rlineto 2 0 rlineto 0 -2 rlineto		% stern
X      -1 0 rlineto 0 -2 rlineto
X      closepath
X      gsave Contrast 2 setlinewidth stroke grestore
X      PieceColour fill
X    grestore
X    dup Offsets exch get aload pop	% N dx dy
X    moveto
X    Countries exch get Contrast show	% then a white letter
X  grestore
X} bind def
X
X/Helvetica-Bold findfont 6 scalefont setfont
XInitLetters
END_OF_FILE
if test 3917 -ne `wc -c <'pieces.ps'`; then
    echo shar: \"'pieces.ps'\" unpacked with wrong size!
fi
# end of 'pieces.ps'
fi
if test -f 'printmap' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'printmap'\"
else
echo shar: Extracting \"'printmap'\" \(337 characters\)
sed "s/^X//" >'printmap' <<'END_OF_FILE'
X#!/bin/sh
X
XLIB=/users/system/liam/diplomacy/NewDipmap
X
Xif test -f $HOME/diplomacy_colours.ps
Xthen
X   COLOURFILE=$HOME/diplomacy_colours.ps
Xelse
X   COLOURFILE=
Xfi
X
Xcat $LIB/header.ps $LIB/colours.ps $COLOURFILE $LIB/pieces.ps \
X    $LIB/borders3.ps $LIB/names.ps $LIB/parser.ps
X
Xif test $# != 0
Xthen
X    cat $1
Xelse
X    echo "() Turn"
Xfi
END_OF_FILE
if test 337 -ne `wc -c <'printmap'`; then
    echo shar: \"'printmap'\" unpacked with wrong size!
fi
# end of 'printmap'
fi
if test -f 'start.position' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'start.position'\"
else
echo shar: Extracting \"'start.position'\" \(300 characters\)
sed "s/^X//" >'start.position' <<'END_OF_FILE'
XEngland
X    F Lon
X    F Edi
X    A Lpl
X
XGermany
X    A Ber
X    A Mun
X    F Kie
X
XRussia
X    A Mos
X    A War
X    F StP.sc
X    F Sev
X
XTurkey
X    A Con
X    A Smy
X    F Ank
X
XAustria
X    A Vie
X    A Bud
X    F Tri
X
XItaly
X    A Rom
X    A Ven
X    F Nap
X
XFrance
X    A Par
X    A Mar
X    F Bre
X
X(Spring 1901) Turn
END_OF_FILE
if test 300 -ne `wc -c <'start.position'`; then
    echo shar: \"'start.position'\" unpacked with wrong size!
fi
# end of 'start.position'
fi
echo shar: End of archive 1 \(of 1\).
cp /dev/null ark1isdone
MISSING=""
for I in 1 ; do
    if test ! -f ark${I}isdone ; then
	MISSING="${MISSING} ${I}"
    fi
done
if test "${MISSING}" = "" ; then
    echo You have the archive.
    rm -f ark[1-9]isdone
else
    echo You still need to unpack the following archives:
    echo "        " ${MISSING}
fi
##  End of shell archive.
exit 0
