Path: uunet!zephyr.ens.tek.com!master!saab!billr
From: billr@saab.CNA.TEK.COM (Bill Randle)
Newsgroups: comp.sources.games
Subject: v13i073:  jetpack - an arcade action game for X, Part01/04
Message-ID: <2645@master.CNA.TEK.COM>
Date: 23 Mar 92 22:31:38 GMT
Sender: news@master.CNA.TEK.COM
Lines: 1093
Approved: billr@saab.CNA.TEK.COM

Submitted-by: meb2@cec2.wustl.edu (Mark Edward Bradley)
Posting-number: Volume 13, Issue 73
Archive-name: jetpack/Part01
Environment: X11, Xlib



#! /bin/sh
# This is a shell archive.  Remove anything before this line, then unpack
# it by saving it into a file and typing "sh file".  To overwrite existing
# files, type "sh file -c".  You can also feed this as standard input via
# unshar, or by typing "sh <file", e.g..  If this archive is complete, you
# will see the following message at the end:
#		"End of archive 1 (of 4)."
# Contents:  README MANIFEST bitmap.h levels windowx.c
# Wrapped by billr@saab on Mon Mar 23 14:29:26 1992
PATH=/bin:/usr/bin:/usr/ucb ; export PATH
if test -f 'README' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'README'\"
else
echo shar: Extracting \"'README'\" \(4252 characters\)
sed "s/^X//" >'README' <<'END_OF_FILE'
XAll the files in this distribution have tab stops = 4
X
XThere are a couple things you may have to play with to get jetpack
Xrunning:
X
X1) Fonts:	Jetpack uses two fonts, a small one and a large one. In
X			initx.c, the font names are defined using the X Logical Font
X			Description (XLFD). The definitions are near the top of the
X			file, and there is a large block of comments above them giving
X			the full names of the fonts and how you might go about
X			selecting alternates. The font names are partial names that
X			work on my system, but may not on yours (say, if you have
X			thousands of fonts.) If jetpack complains about being unable
X			to load a font, you may have to paste a more specific or
X			different fontname in the variables fontname and bigfontname.
X
X2) Blitting:	I originally wrote and tested jetpack on some color X
X				terminals. The game is designed so that all the drawing in
X				each frame is drawn into a window-sized off-screen pixmap,
X				which is then blitted to the window. This way there is no
X				flicker. However, the X terminals use hardware for
X				blitting, and can therefore keep up with the program,
X				while some sparcstations I know do all the blitting in
X				software, causing horrible delays. So I changed the code
X				to allow the user to compile it "non-blitting". This way
X				there is flicker, since objects have to be erased and
X				redrawn in the window, but a machine doing all of it's X
X				in software can handle it better. It uses an algorithm
X				that figures out which objects intersect each other, so it
X				can erase a group, then draw the group, then go to the
X				next group, thus minimizing the time between erase and
X				draw for each object. The worst flicker tends to be on the
X				maze walls, since at any particular time most of the maze
X				walls on screen will be touching each other. If it bothers
X				you too much, you can tone down the white by putting a
X				different color name in the ctable structure in initx.c
X				rather than "white". Ok, now in the Imakefile there is a
X				line for DEFINES, and on this line is a flag -DBLIT. If
X				you leave this flag in, the program will compile the
X				flicker-free blitting version, and if you delete it, it
X				will compile the flickering less X-intensive version. If
X				this sounds confusing, I apologise. Just compile the game
X				as-is, and if it seems to be really slow (it's supposed to
X				be pretty quick) remove the -DBLIT flag from the Imakefile
X				and recompile.
X
XStandard things:
X
Xxmkmf : set up a Makefile tailored to your system. Check Imakefile first
Xto make sure everything is how you want it.
X
Xmake depend : check dependencies
X
Xmake jetpack : compile the program
X
Xmake install : install jetpack and all its files
X
XNotes:
XI tried to write the Imakefile so it would be easy to understand and
Xmodify. The important bits are the DESTDIR variable, which you can set to
Xwherever you want jetpack to reside, the DEFINES variable which has to
Xhave the -DSCOREPATH  and -DLEVELPATH flags as-is, and the SCOREFILE and
XLEVELFILE variables, which you can set to just about any filename prefixes
Xyou like. A word of caution -- the line:
X
XInstallNonExec(levels/000,$(LEVELFILE)000)
X
XCopies the file in levels/ called 000, to the file you named in LEVELFILE
Xas the prefix, and 000 as the end. so if you set LEVELFILE = j.lev ,
Xthen the installed level file will be named j.lev000 . Currently level 0
Xis the only predifined level supplied, being the demo level. If I feel
Xlike it, or if anyone wants to, a level editor would be a "good thing".
XHowever, I'm not too sure I like the idea since jetpack is supposed to be
Xan arcade action game, and not a "solve each level puzzle" game. But I was
Xthe fool who allowed levels to be read in from files, so I guess I'll have
Xto live with the consequences. If you want me to write one (or want to do
Xit yourself) let me know.
X
XThere is also a sample Makefile that was created from the Imakefile for
Xthose of you who don't have Imake, and a very simple bare-bones Makefile
Xfor people who get confused by the huge amount of garbage in an
XImake-created Makefile.
X
XThere is a man page -- "make install.man" will install it in the specified
Xman directory. Don't forget to run catman after installing it.
END_OF_FILE
if test 4252 -ne `wc -c <'README'`; then
    echo shar: \"'README'\" unpacked with wrong size!
fi
# end of 'README'
fi
if test -f 'MANIFEST' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'MANIFEST'\"
else
echo shar: Extracting \"'MANIFEST'\" \(1199 characters\)
sed "s/^X//" >'MANIFEST' <<'END_OF_FILE'
X   File Name		Archive #	Description
X-----------------------------------------------------------
X ADVERTISEMENT              4	
X Imakefile                  4	
X MANIFEST                   1	This shipping list
X Makefile.sample            2	
X Makefile.simple            3	
X README                     1	
X bitmap.c                   2	
X bitmap.h                   1	
X bonus.c                    4	
X collision.c                4	
X copyright.h                2	
X defs.h                     3	
X demo.c                     3	
X draw.c                     2	
X erase.c                    3	
X events.c                   4	
X gameover.c                 4	
X initx.c                    3	
X jetpack.man                4	
X levels                     1	
X levels/000                 4	
X main.c                     4	
X maze.c                     3	
X message.c                  2	
X message.h                  4	
X normal.c                   3	
X p2.hdr                     4	
X quitx.c                    4	
X scores.c                   2	
X setinmaze.c                4	
X setup.c                    3	
X special.c                  4	
X time.c                     4	
X update.c                   3	
X windowx.c                  1	
END_OF_FILE
if test 1199 -ne `wc -c <'MANIFEST'`; then
    echo shar: \"'MANIFEST'\" unpacked with wrong size!
fi
# end of 'MANIFEST'
fi
if test -f 'bitmap.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'bitmap.h'\"
else
echo shar: Extracting \"'bitmap.h'\" \(42782 characters\)
sed "s/^X//" >'bitmap.h' <<'END_OF_FILE'
X/*	bitmap.h : bitmaps for jetpack
X*/
X
X#include "copyright.h"
X
Xstatic char fire_bits[FIREPHASES][FIREPARTS][60] = {
X{
X{
X   0x80, 0x3f, 0x06, 0xe0, 0xff, 0x01, 0x72, 0xff, 0x07, 0x7e, 0x0f, 0x0e,
X   0x5d, 0xfb, 0x06, 0x2e, 0x7f, 0x06, 0x6e, 0xfc, 0x0e, 0xde, 0x6f, 0x0f,
X   0xe3, 0xdf, 0x0f, 0xee, 0x77, 0x0f, 0x1f, 0x7c, 0x0c, 0xf8, 0xbd, 0x07,
X   0x9c, 0x1b, 0x0f, 0x7e, 0x3f, 0x07, 0xfa, 0xdf, 0x0f, 0xea, 0x75, 0x07,
X   0xf1, 0xff, 0x0f, 0xe0, 0x7f, 0x08, 0x8a, 0x3f, 0x00, 0x2f, 0x49, 0x00},
X{
X   0x00, 0x00, 0xf0, 0x00, 0x00, 0xf0, 0x80, 0x00, 0xf0, 0x80, 0xf0, 0xf1,
X   0xa0, 0x04, 0xf1, 0xd0, 0x80, 0xf1, 0x90, 0x03, 0xf1, 0x20, 0x90, 0xf0,
X   0x1c, 0x20, 0xf0, 0x10, 0x88, 0xf0, 0xe0, 0x83, 0xf3, 0x00, 0x42, 0xf0,
X   0x60, 0xe4, 0xf0, 0x80, 0xc0, 0xf0, 0x00, 0x20, 0xf0, 0x10, 0x8a, 0xf0,
X   0x00, 0x00, 0xf0, 0x00, 0x00, 0xf0, 0x00, 0x00, 0xf0, 0x00, 0x00, 0xf0},
X},
X{
X{
X   0x81, 0x17, 0x00, 0xe7, 0xff, 0x08, 0xf1, 0xfd, 0x0f, 0x7b, 0x6e, 0x0b,
X   0xde, 0xc2, 0x0a, 0xbc, 0xbf, 0x04, 0xfe, 0x97, 0x03, 0xf4, 0xef, 0x0f,
X   0xe4, 0xd6, 0x0f, 0xf0, 0xf0, 0x0d, 0xbf, 0x2d, 0x0f, 0xd7, 0x7f, 0x0e,
X   0xfb, 0xf7, 0x0f, 0xeb, 0xbf, 0x06, 0x7e, 0x63, 0x06, 0x78, 0xa3, 0x03,
X   0xb4, 0xdf, 0x04, 0xe0, 0xff, 0x0e, 0x4b, 0xa7, 0x00, 0x80, 0x20, 0x00},
X{
X   0x00, 0x00, 0xf0, 0x00, 0x00, 0xf0, 0x00, 0x02, 0xf0, 0x80, 0x91, 0xf0,
X   0x20, 0x3d, 0xf1, 0x40, 0x40, 0xf3, 0x00, 0x68, 0xf0, 0x08, 0x10, 0xf0,
X   0x18, 0x29, 0xf0, 0x08, 0x0f, 0xf2, 0x40, 0xd2, 0xf0, 0x28, 0x80, 0xf1,
X   0x04, 0x08, 0xf0, 0x14, 0x40, 0xf1, 0x80, 0x9c, 0xf1, 0x80, 0x5c, 0xf0,
X   0x40, 0x20, 0xf0, 0x00, 0x00, 0xf0, 0x00, 0x00, 0xf0, 0x00, 0x00, 0xf0},
X},
X{
X{
X   0x80, 0x9f, 0x00, 0xee, 0xff, 0x09, 0xf7, 0xaf, 0x05, 0xb9, 0xff, 0x03,
X   0xf8, 0xab, 0x07, 0xdc, 0xe7, 0x07, 0x62, 0x49, 0x0d, 0x9e, 0xff, 0x0e,
X   0xfb, 0x3f, 0x0d, 0x1e, 0x3f, 0x0d, 0x7c, 0xea, 0x0f, 0x9c, 0xee, 0x0d,
X   0xae, 0xbb, 0x0f, 0x9d, 0xb3, 0x06, 0x96, 0xfb, 0x07, 0xfa, 0xe7, 0x07,
X   0xef, 0xee, 0x04, 0xee, 0x7f, 0x0d, 0x84, 0x75, 0x0a, 0xa0, 0xe7, 0x08},
X{
X   0x00, 0x00, 0xf0, 0x00, 0x00, 0xf0, 0x00, 0x50, 0xf0, 0x40, 0x00, 0xf0,
X   0x00, 0x54, 0xf0, 0x20, 0x18, 0xf0, 0x9c, 0xb6, 0xf2, 0x60, 0x00, 0xf1,
X   0x04, 0xc0, 0xf2, 0xe0, 0xc0, 0xf2, 0x80, 0x15, 0xf0, 0x60, 0x11, 0xf2,
X   0x50, 0x44, 0xf0, 0x62, 0x4c, 0xf1, 0x68, 0x04, 0xf0, 0x04, 0x18, 0xf0,
X   0x00, 0x11, 0xf0, 0x00, 0x00, 0xf0, 0x00, 0x02, 0xf0, 0x00, 0x00, 0xf0},
X},
X{
X{
X   0xb2, 0x3a, 0x0c, 0xe9, 0xfd, 0x00, 0x28, 0xfd, 0x07, 0x72, 0xe4, 0x06,
X   0xf2, 0x1f, 0x04, 0x37, 0xde, 0x02, 0x7f, 0x3f, 0x0f, 0xfe, 0x2f, 0x0f,
X   0x3a, 0x86, 0x0d, 0xa2, 0xff, 0x0d, 0xce, 0xda, 0x0d, 0xfe, 0xeb, 0x0f,
X   0x47, 0xfc, 0x0f, 0xab, 0xf2, 0x05, 0xbe, 0x66, 0x01, 0xd9, 0x4b, 0x03,
X   0x72, 0xdf, 0x07, 0xd4, 0xed, 0x04, 0x92, 0x7f, 0x0b, 0x14, 0x18, 0x00},
X{
X   0x00, 0x00, 0xf0, 0x10, 0x02, 0xf0, 0xd0, 0x02, 0xf0, 0x8c, 0x1b, 0xf1,
X   0x0c, 0xe0, 0xf3, 0xc8, 0x21, 0xf1, 0x80, 0xc0, 0xf0, 0x01, 0xd0, 0xf0,
X   0xc5, 0x79, 0xf2, 0x5d, 0x00, 0xf2, 0x31, 0x25, 0xf2, 0x01, 0x14, 0xf0,
X   0xb8, 0x03, 0xf0, 0x54, 0x0d, 0xf0, 0x40, 0x99, 0xf0, 0x20, 0xb4, 0xf0,
X   0x80, 0x20, 0xf0, 0x00, 0x12, 0xf3, 0x00, 0x00, 0xf0, 0x00, 0x00, 0xf0},
X},
X{
X{
X   0xb0, 0x7b, 0x04, 0xea, 0xc9, 0x0d, 0xff, 0xf8, 0x05, 0x7e, 0xf7, 0x07,
X   0xfc, 0x7f, 0x05, 0xfc, 0x33, 0x02, 0xbc, 0x63, 0x0e, 0xf6, 0xdf, 0x07,
X   0xef, 0xad, 0x0f, 0xf6, 0xfd, 0x0f, 0x7f, 0xf2, 0x0e, 0xd7, 0x75, 0x0f,
X   0xae, 0xbe, 0x0b, 0x7e, 0xff, 0x07, 0x97, 0xff, 0x0b, 0xf4, 0x6b, 0x01,
X   0x60, 0x77, 0x01, 0x98, 0xff, 0x00, 0x74, 0xac, 0x06, 0x06, 0x00, 0x08},
X{
X   0x00, 0x00, 0xf0, 0x10, 0x30, 0xf0, 0x00, 0x00, 0xf0, 0x80, 0x08, 0xf0,
X   0x10, 0x80, 0xf0, 0x00, 0xcc, 0xf1, 0x40, 0x9c, 0xf1, 0x08, 0x20, 0xf0,
X   0x10, 0x52, 0xf0, 0x08, 0x02, 0xf0, 0x80, 0x0d, 0xf1, 0x28, 0x8a, 0xf0,
X   0x50, 0x41, 0xf0, 0x80, 0x00, 0xf0, 0x60, 0x00, 0xf0, 0x00, 0x94, 0xf0,
X   0x80, 0x88, 0xf0, 0x60, 0x00, 0xf0, 0x00, 0x00, 0xf0, 0x00, 0x00, 0xf0},
X},
X};
X
Xstatic char key_bits[KEYPARTS][20] = { {
X   0x0e, 0x00, 0x1b, 0x00, 0x11, 0x00, 0x3b, 0x00, 0x7e, 0x00, 0xc0, 0x00,
X   0xe0, 0x01, 0x20, 0x03, 0x80, 0x03, 0x80, 0x00}
X};
X
Xstatic char burn_bits[BURNDIRECTIONS][BURNPARTS][60] = {
X{
X{
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x03,
X   0x00, 0x00, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
X{
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x80, 0x02, 0x00, 0x80, 0x02, 0x00, 0x80, 0x03, 0x00, 0x00, 0x01,
X   0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}
X},
X{
X{
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x0e,
X   0x02, 0x00, 0x04, 0x02, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
X{
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x05, 0x00, 0x0a, 0x05, 0x00, 0x0a, 0x07, 0x00, 0x0e, 0x02, 0x00, 0x04,
X   0x02, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}
X},
X{
X{
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x00,
X   0x08, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
X{
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x14, 0x00, 0x00, 0x14, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x08, 0x00, 0x00,
X   0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}
X},
X
X};
X
Xstatic char player_bits[PLAYERPHASES][PLAYERPARTS][60] = {
X{
X{
X   0xc0, 0x00, 0x00, 0xe0, 0x01, 0x00, 0xe0, 0x01, 0x00, 0xc0, 0x00, 0x00,
X   0x20, 0x01, 0x00, 0xd0, 0x00, 0x00, 0xd0, 0x00, 0x00, 0xd0, 0x00, 0x00,
X   0xe0, 0x00, 0x00, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0xe0, 0x01, 0x00, 0xe0, 0x00, 0x00, 0xe0, 0x00, 0x00, 0xc0, 0x00, 0x00,
X   0xc0, 0x01, 0x00, 0x80, 0x01, 0x00, 0x80, 0x03, 0x00, 0xc0, 0x03, 0x00},
X{
X   0x00, 0x00, 0x00, 0x00, 0x80, 0x01, 0x00, 0xc0, 0x03, 0x00, 0xe0, 0x03,
X   0xc0, 0xf6, 0x03, 0x20, 0xbf, 0x03, 0x20, 0x9f, 0x03, 0x20, 0x0f, 0x00,
X   0x00, 0x07, 0x00, 0x80, 0x07, 0x00, 0xfc, 0x07, 0x00, 0xfc, 0x07, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
X},
X
X{
X{
X   0xc0, 0x00, 0x00, 0xe0, 0x01, 0x00, 0xe0, 0x01, 0x00, 0xc0, 0x00, 0x00,
X  0x20, 0x01, 0x00, 0xd0, 0x00, 0x00, 0xd0, 0x00, 0x00, 0xd0, 0x00, 0x00,
X   0xe0, 0x00, 0x00, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X  0xe0, 0x01, 0x00, 0xe0, 0x01, 0x00, 0xe0, 0x00, 0x00, 0xf0, 0x00, 0x00,
X   0xe0, 0x01, 0x00, 0xe0, 0x03, 0x00, 0x60, 0x03, 0x00, 0xf0, 0x01, 0x00},
X{
X   0x00, 0x00, 0x00, 0x00, 0x80, 0x01, 0x00, 0xc0, 0x03, 0x00, 0xe0, 0x03,
X   0xc0, 0xf6, 0x03, 0x20, 0xbf, 0x03, 0x20, 0x9f, 0x03, 0x20, 0x0f, 0x00,
X   0x00, 0x07, 0x00, 0x80, 0x07, 0x00, 0xfc, 0x07, 0x00, 0xfc, 0x07, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
X},
X
X{
X{
X   0xc0, 0x00, 0x00, 0xe0, 0x01, 0x00, 0xe0, 0x01, 0x00, 0xc0, 0x00, 0x00,
X  0x20, 0x01, 0x00, 0xd0, 0x00, 0x00, 0xd0, 0x00, 0x00, 0xd0, 0x00, 0x00,
X   0xe0, 0x00, 0x00, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X  0xe0, 0x01, 0x00, 0xf0, 0x01, 0x00, 0xb0, 0x01, 0x00, 0x30, 0x03, 0x00,
X   0x30, 0x06, 0x00, 0x30, 0x0c, 0x00, 0x30, 0x06, 0x00, 0x38, 0x00, 0x00},
X{
X   0x00, 0x00, 0x00, 0x00, 0x80, 0x01, 0x00, 0xc0, 0x03, 0x00, 0xe0, 0x03,
X   0xc0, 0xf6, 0x03, 0x20, 0xbf, 0x03, 0x20, 0x9f, 0x03, 0x20, 0x0f, 0x00,
X   0x00, 0x07, 0x00, 0x80, 0x07, 0x00, 0xfc, 0x07, 0x00, 0xfc, 0x07, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
X},
X
X{
X{
X   0xc0, 0x00, 0x00, 0xe0, 0x01, 0x00, 0xe0, 0x01, 0x00, 0xc0, 0x00, 0x00,
X  0x20, 0x01, 0x00, 0xd0, 0x00, 0x00, 0xd0, 0x00, 0x00, 0xd0, 0x00, 0x00,
X   0xe0, 0x00, 0x00, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X  0xe0, 0x01, 0x00, 0xf0, 0x01, 0x00, 0xb0, 0x01, 0x00, 0xb0, 0x01, 0x00,
X   0x18, 0x03, 0x00, 0x18, 0x03, 0x00, 0x18, 0x06, 0x00, 0x1c, 0x07, 0x00},
X{
X   0x00, 0x00, 0x00, 0x00, 0x80, 0x01, 0x00, 0xc0, 0x03, 0x00, 0xe0, 0x03,
X   0xc0, 0xf6, 0x03, 0x20, 0xbf, 0x03, 0x20, 0x9f, 0x03, 0x20, 0x0f, 0x00,
X   0x00, 0x07, 0x00, 0x80, 0x07, 0x00, 0xfc, 0x07, 0x00, 0xfc, 0x07, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
X},
X
X{
X{
X   0xc0, 0x00, 0x00, 0xe0, 0x01, 0x00, 0xe0, 0x01, 0x00, 0xc0, 0x00, 0x00,
X  0x20, 0x01, 0x00, 0xd0, 0x00, 0x00, 0xd0, 0x00, 0x00, 0xd0, 0x00, 0x00,
X   0xe0, 0x00, 0x00, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X  0xe0, 0x01, 0x00, 0xb0, 0x01, 0x00, 0xb0, 0x01, 0x00, 0xb8, 0x01, 0x00,
X   0x18, 0x03, 0x00, 0x18, 0x03, 0x00, 0x1c, 0x03, 0x00, 0x80, 0x03, 0x00},
X{
X   0x00, 0x00, 0x00, 0x00, 0x80, 0x01, 0x00, 0xc0, 0x03, 0x00, 0xe0, 0x03,
X   0xc0, 0xf6, 0x03, 0x20, 0xbf, 0x03, 0x20, 0x9f, 0x03, 0x20, 0x0f, 0x00,
X   0x00, 0x07, 0x00, 0x80, 0x07, 0x00, 0xfc, 0x07, 0x00, 0xfc, 0x07, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
X},
X
X{
X{
X   0xc0, 0x00, 0x00, 0xe0, 0x01, 0x00, 0xe0, 0x01, 0x00, 0xc0, 0x00, 0x00,
X  0x20, 0x01, 0x00, 0xd0, 0x00, 0x00, 0xd0, 0x00, 0x00, 0xd0, 0x00, 0x00,
X   0xe0, 0x00, 0x00, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X  0xe0, 0x01, 0x00, 0xe0, 0x00, 0x00, 0xf0, 0x00, 0x00, 0xf0, 0x00, 0x00,
X   0xb0, 0x01, 0x00, 0xb0, 0x01, 0x00, 0xb8, 0x01, 0x00, 0xc0, 0x01, 0x00},
X{
X   0x00, 0x00, 0x00, 0x00, 0x80, 0x01, 0x00, 0xc0, 0x03, 0x00, 0xe0, 0x03,
X   0xc0, 0xf6, 0x03, 0x20, 0xbf, 0x03, 0x20, 0x9f, 0x03, 0x20, 0x0f, 0x00,
X   0x00, 0x07, 0x00, 0x80, 0x07, 0x00, 0xfc, 0x07, 0x00, 0xfc, 0x07, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
X},
X
X{
X{
X   0xc0, 0x00, 0x00, 0xe0, 0x01, 0x00, 0xe0, 0x01, 0x00, 0xc0, 0x00, 0x00,
X  0x20, 0x01, 0x00, 0xd0, 0x00, 0x00, 0xd0, 0x00, 0x00, 0xd0, 0x00, 0x00,
X   0xe0, 0x00, 0x00, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X  0xe0, 0x01, 0x00, 0xe0, 0x00, 0x00, 0xc0, 0x00, 0x00, 0xc0, 0x00, 0x00,
X   0xc0, 0x00, 0x00, 0xc0, 0x00, 0x00, 0xc0, 0x00, 0x00, 0xe0, 0x00, 0x00},
X{
X   0x00, 0x00, 0x00, 0x00, 0x80, 0x01, 0x00, 0xc0, 0x03, 0x00, 0xe0, 0x03,
X   0xc0, 0xf6, 0x03, 0x20, 0xbf, 0x03, 0x20, 0x9f, 0x03, 0x20, 0x0f, 0x00,
X   0x00, 0x07, 0x00, 0x80, 0x07, 0x00, 0xfc, 0x07, 0x00, 0xfc, 0x07, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
X},
X
X
X{
X{
X   0x00, 0x06, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x06, 0x00,
X   0x00, 0x0f, 0x00, 0xc0, 0x36, 0x00, 0xe0, 0x76, 0x00, 0xb0, 0xd6, 0x00,
X   0x30, 0xc9, 0x00, 0x30, 0xc9, 0x00, 0x20, 0x40, 0x00, 0x20, 0x40, 0x00,
X   0x00, 0x00, 0x00, 0x80, 0x19, 0x00, 0x80, 0x19, 0x00, 0x80, 0x19, 0x00,
X   0x80, 0x10, 0x00, 0x80, 0x19, 0x00, 0x80, 0x19, 0x00, 0xc0, 0x39, 0x00},
X{
X   0x00, 0x00, 0x00, 0x06, 0x00, 0x06, 0x0f, 0x00, 0x0f, 0x1f, 0x80, 0x0f,
X   0xbf, 0xd0, 0x0f, 0x37, 0xc9, 0x0e, 0x07, 0x09, 0x0e, 0x40, 0x29, 0x00,
X   0x80, 0x16, 0x00, 0x00, 0x06, 0x00, 0xc0, 0x3f, 0x00, 0xc0, 0x3f, 0x00,
X   0x00, 0x0f, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
X},
X
X{
X{
X   0x00, 0x30, 0x00, 0x00, 0x78, 0x00, 0x00, 0x78, 0x00, 0x00, 0x30, 0x00,
X  0x00, 0x48, 0x00, 0x00, 0xb0, 0x00, 0x00, 0xb0, 0x00, 0x00, 0xb0, 0x00,
X   0x00, 0x70, 0x00, 0x00, 0xe0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X  0x00, 0x78, 0x00, 0x00, 0x70, 0x00, 0x00, 0x30, 0x00, 0x00, 0x30, 0x00,
X   0x00, 0x30, 0x00, 0x00, 0x30, 0x00, 0x00, 0x30, 0x00, 0x00, 0x70, 0x00},
X{
X   0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x7c, 0x00, 0x00,
X   0xfc, 0x36, 0x00, 0xdc, 0x4f, 0x00, 0x9c, 0x4f, 0x00, 0x00, 0x4f, 0x00,
X   0x00, 0x0e, 0x00, 0x00, 0x1e, 0x00, 0x00, 0xfe, 0x03, 0x00, 0xfe, 0x03,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
X},
X
X{
X{
X   0x00, 0x30, 0x00, 0x00, 0x78, 0x00, 0x00, 0x78, 0x00, 0x00, 0x30, 0x00,
X  0x00, 0x48, 0x00, 0x00, 0xb0, 0x00, 0x00, 0xb0, 0x00, 0x00, 0xb0, 0x00,
X   0x00, 0x70, 0x00, 0x00, 0xe0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X  0x00, 0x78, 0x00, 0x00, 0x70, 0x00, 0x00, 0xf0, 0x00, 0x00, 0xf0, 0x00,
X   0x00, 0xd8, 0x00, 0x00, 0xd8, 0x00, 0x00, 0xd8, 0x01, 0x00, 0x38, 0x00},
X{
X   0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x7c, 0x00, 0x00,
X   0xfc, 0x36, 0x00, 0xdc, 0x4f, 0x00, 0x9c, 0x4f, 0x00, 0x00, 0x4f, 0x00,
X   0x00, 0x0e, 0x00, 0x00, 0x1e, 0x00, 0x00, 0xfe, 0x03, 0x00, 0xfe, 0x03,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
X},
X
X{
X{
X   0x00, 0x30, 0x00, 0x00, 0x78, 0x00, 0x00, 0x78, 0x00, 0x00, 0x30, 0x00,
X  0x00, 0x48, 0x00, 0x00, 0xb0, 0x00, 0x00, 0xb0, 0x00, 0x00, 0xb0, 0x00,
X   0x00, 0x70, 0x00, 0x00, 0xe0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X  0x00, 0x78, 0x00, 0x00, 0xd8, 0x00, 0x00, 0xd8, 0x00, 0x00, 0xd8, 0x01,
X   0x00, 0x8c, 0x01, 0x00, 0x8c, 0x01, 0x00, 0x8c, 0x03, 0x00, 0x1c, 0x00},
X{
X   0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x7c, 0x00, 0x00,
X   0xfc, 0x36, 0x00, 0xdc, 0x4f, 0x00, 0x9c, 0x4f, 0x00, 0x00, 0x4f, 0x00,
X   0x00, 0x0e, 0x00, 0x00, 0x1e, 0x00, 0x00, 0xfe, 0x03, 0x00, 0xfe, 0x03,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
X},
X
X{
X{
X   0x00, 0x30, 0x00, 0x00, 0x78, 0x00, 0x00, 0x78, 0x00, 0x00, 0x30, 0x00,
X  0x00, 0x48, 0x00, 0x00, 0xb0, 0x00, 0x00, 0xb0, 0x00, 0x00, 0xb0, 0x00,
X   0x00, 0x70, 0x00, 0x00, 0xe0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X  0x00, 0x78, 0x00, 0x00, 0xf8, 0x00, 0x00, 0xd8, 0x00, 0x00, 0xd8, 0x00,
X   0x00, 0x8c, 0x01, 0x00, 0x8c, 0x01, 0x00, 0x86, 0x01, 0x00, 0x8e, 0x03},
X{
X   0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x7c, 0x00, 0x00,
X   0xfc, 0x36, 0x00, 0xdc, 0x4f, 0x00, 0x9c, 0x4f, 0x00, 0x00, 0x4f, 0x00,
X   0x00, 0x0e, 0x00, 0x00, 0x1e, 0x00, 0x00, 0xfe, 0x03, 0x00, 0xfe, 0x03,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
X},
X
X{
X{
X   0x00, 0x30, 0x00, 0x00, 0x78, 0x00, 0x00, 0x78, 0x00, 0x00, 0x30, 0x00,
X  0x00, 0x48, 0x00, 0x00, 0xb0, 0x00, 0x00, 0xb0, 0x00, 0x00, 0xb0, 0x00,
X   0x00, 0x70, 0x00, 0x00, 0xe0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X  0x00, 0x78, 0x00, 0x00, 0xf8, 0x00, 0x00, 0xd8, 0x00, 0x00, 0xcc, 0x00,
X   0x00, 0xc6, 0x00, 0x00, 0xc3, 0x00, 0x00, 0xc6, 0x00, 0x00, 0xc0, 0x01},
X{
X   0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x7c, 0x00, 0x00,
X   0xfc, 0x36, 0x00, 0xdc, 0x4f, 0x00, 0x9c, 0x4f, 0x00, 0x00, 0x4f, 0x00,
X   0x00, 0x0e, 0x00, 0x00, 0x1e, 0x00, 0x00, 0xfe, 0x03, 0x00, 0xfe, 0x03,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
X},
X
X{
X{
X   0x00, 0x30, 0x00, 0x00, 0x78, 0x00, 0x00, 0x78, 0x00, 0x00, 0x30, 0x00,
X  0x00, 0x48, 0x00, 0x00, 0xb0, 0x00, 0x00, 0xb0, 0x00, 0x00, 0xb0, 0x00,
X   0x00, 0x70, 0x00, 0x00, 0xe0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X  0x00, 0x78, 0x00, 0x00, 0x78, 0x00, 0x00, 0x70, 0x00, 0x00, 0xf0, 0x00,
X   0x00, 0x78, 0x00, 0x00, 0x7c, 0x00, 0x00, 0x6c, 0x00, 0x00, 0xf8, 0x00},
X{
X   0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x7c, 0x00, 0x00,
X   0xfc, 0x36, 0x00, 0xdc, 0x4f, 0x00, 0x9c, 0x4f, 0x00, 0x00, 0x4f, 0x00,
X   0x00, 0x0e, 0x00, 0x00, 0x1e, 0x00, 0x00, 0xfe, 0x03, 0x00, 0xfe, 0x03,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
X},
X
X
X{
X{
X   0x00, 0x30, 0x00, 0x00, 0x78, 0x00, 0x00, 0x78, 0x00, 0x00, 0x30, 0x00,
X   0x00, 0x48, 0x00, 0x00, 0xb0, 0x00, 0x00, 0xb0, 0x00, 0x00, 0xb0, 0x00,
X   0x00, 0x70, 0x00, 0x00, 0xe0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x78, 0x00, 0x00, 0x70, 0x00, 0x00, 0x70, 0x00, 0x00, 0x30, 0x00,
X   0x00, 0x38, 0x00, 0x00, 0x18, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x3c, 0x00},
X{
X   0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x7c, 0x00, 0x00,
X   0xfc, 0x36, 0x00, 0xdc, 0x4f, 0x00, 0x9c, 0x4f, 0x00, 0x00, 0x4f, 0x00,
X   0x00, 0x0e, 0x00, 0x00, 0x1e, 0x00, 0x00, 0xfe, 0x03, 0x00, 0xfe, 0x03,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
X}
X};
X
Xstatic char sweeper_bits[SWEEPERPHASES][SWEEPERPARTS][60] = {
X{
X{
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x06, 0x00, 0x00, 0x06, 0x00,
X   0x20, 0x4f, 0x00, 0xe0, 0x7d, 0x00, 0xe0, 0x7f, 0x00, 0x20, 0x4f, 0x00,
X   0x00, 0x06, 0x00, 0x00, 0x06, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
X{
X   0x21, 0x22, 0x02, 0x22, 0x22, 0x02, 0xfc, 0xff, 0x03, 0x0c, 0x00, 0x03,
X   0x04, 0x00, 0x0e, 0x07, 0x00, 0x02, 0x04, 0x00, 0x02, 0x04, 0x00, 0x02,
X   0x04, 0x00, 0x0e, 0x07, 0x00, 0x02, 0x04, 0x00, 0x02, 0x04, 0x00, 0x02,
X   0x04, 0x00, 0x0e, 0x07, 0x00, 0x02, 0x04, 0x00, 0x02, 0x04, 0x00, 0x02,
X   0x0c, 0x00, 0x0f, 0xff, 0xff, 0x03, 0x10, 0x11, 0x01, 0x10, 0x11, 0x01},
X{
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0xe0, 0x00,
X   0xc8, 0x10, 0x01, 0xa8, 0xf0, 0x01, 0x98, 0x10, 0x01, 0x70, 0xe0, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x70, 0xe0, 0x00, 0xa8, 0x30, 0x01, 0xa8, 0x50, 0x01, 0xa8, 0x90, 0x01,
X   0x70, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
X},
X{
X{
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x06, 0x00, 0x00, 0x06, 0x00,
X   0x20, 0x4f, 0x00, 0xe0, 0x7b, 0x00, 0xe0, 0x7f, 0x00, 0x20, 0x4f, 0x00,
X   0x00, 0x06, 0x00, 0x00, 0x06, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
X{
X   0x44, 0x44, 0x08, 0x44, 0x44, 0x04, 0xfc, 0xff, 0x03, 0x0c, 0x00, 0x03,
X   0x07, 0x00, 0x02, 0x04, 0x00, 0x0e, 0x04, 0x00, 0x02, 0x04, 0x00, 0x02,
X   0x07, 0x00, 0x02, 0x04, 0x00, 0x0e, 0x04, 0x00, 0x02, 0x04, 0x00, 0x02,
X   0x07, 0x00, 0x02, 0x04, 0x00, 0x0e, 0x04, 0x00, 0x02, 0x04, 0x00, 0x02,
X   0x0f, 0x00, 0x03, 0xfc, 0xff, 0x0f, 0x88, 0x88, 0x00, 0x88, 0x88, 0x00},
X{
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0xe0, 0x00,
X   0x88, 0x30, 0x01, 0xf8, 0x50, 0x01, 0x88, 0x90, 0x01, 0x70, 0xe0, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x70, 0xe0, 0x00, 0xc8, 0x50, 0x01, 0xa8, 0x50, 0x01, 0x98, 0x50, 0x01,
X   0x70, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
X},
X{
X{
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x06, 0x00, 0x00, 0x06, 0x00,
X   0x20, 0x4f, 0x00, 0xe0, 0x7f, 0x00, 0xe0, 0x7b, 0x00, 0x20, 0x4f, 0x00,
X   0x00, 0x06, 0x00, 0x00, 0x06, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
X{
X   0x88, 0x88, 0x00, 0x88, 0x88, 0x00, 0xfc, 0xff, 0x0f, 0x0f, 0x00, 0x03,
X   0x04, 0x00, 0x02, 0x04, 0x00, 0x02, 0x04, 0x00, 0x0e, 0x07, 0x00, 0x02,
X   0x04, 0x00, 0x02, 0x04, 0x00, 0x02, 0x04, 0x00, 0x0e, 0x07, 0x00, 0x02,
X   0x04, 0x00, 0x02, 0x04, 0x00, 0x02, 0x04, 0x00, 0x0e, 0x07, 0x00, 0x02,
X   0x0c, 0x00, 0x03, 0xfc, 0xff, 0x03, 0x44, 0x44, 0x04, 0x44, 0x44, 0x08},
X{
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0xe0, 0x00,
X   0x98, 0x50, 0x01, 0xa8, 0x50, 0x01, 0xc8, 0x50, 0x01, 0x70, 0xe0, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x70, 0xe0, 0x00, 0x88, 0x90, 0x01, 0xf8, 0x50, 0x01, 0x88, 0x30, 0x01,
X   0x70, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
X},
X{
X{
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x06, 0x00, 0x00, 0x06, 0x00,
X   0x20, 0x4f, 0x00, 0xe0, 0x7f, 0x00, 0xe0, 0x7d, 0x00, 0x20, 0x4f, 0x00,
X   0x00, 0x06, 0x00, 0x00, 0x06, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
X{
X   0x10, 0x11, 0x01, 0x10, 0x11, 0x01, 0xff, 0xff, 0x03, 0x0c, 0x00, 0x0f,
X   0x04, 0x00, 0x02, 0x04, 0x00, 0x02, 0x07, 0x00, 0x02, 0x04, 0x00, 0x0e,
X   0x04, 0x00, 0x02, 0x04, 0x00, 0x02, 0x07, 0x00, 0x02, 0x04, 0x00, 0x0e,
X   0x04, 0x00, 0x02, 0x04, 0x00, 0x02, 0x07, 0x00, 0x02, 0x04, 0x00, 0x0e,
X   0x0c, 0x00, 0x03, 0xfc, 0xff, 0x03, 0x22, 0x22, 0x02, 0x21, 0x22, 0x02},
X{
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0xe0, 0x00,
X   0xa8, 0x90, 0x01, 0xa8, 0x50, 0x01, 0xa8, 0x30, 0x01, 0x70, 0xe0, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x70, 0xe0, 0x00, 0x98, 0x10, 0x01, 0xa8, 0xf0, 0x01, 0xc8, 0x10, 0x01,
X   0x70, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
X}
X};
X
Xstatic char door_bits[DOORFRAMES][DOORPARTS][120] =  {
X{
X{
X   0xff, 0xff, 0xff, 0x1f, 0x00, 0x00, 0x00, 0x00, 0xfe, 0xff, 0xff, 0x0f,
X   0xfc, 0x01, 0xf0, 0x07, 0xa8, 0x00, 0xa0, 0x02, 0xa8, 0xff, 0xbf, 0x02,
X   0xa8, 0x40, 0xa0, 0x02, 0xa8, 0x40, 0xa0, 0x02, 0xa8, 0x40, 0xa0, 0x02,
X   0xa8, 0x40, 0xa0, 0x02, 0xa8, 0x40, 0xa0, 0x02, 0xa8, 0x40, 0xa0, 0x02,
X   0xa8, 0x40, 0xa0, 0x02, 0xa8, 0x40, 0xa0, 0x02, 0xa8, 0x40, 0xa0, 0x02,
X   0xa8, 0xe0, 0xa0, 0x02, 0xa8, 0xf0, 0xa1, 0x02, 0xa8, 0xb0, 0xa1, 0x02,
X   0xa8, 0xb0, 0xa1, 0x02, 0xa8, 0xf0, 0xa1, 0x02, 0xa8, 0xe0, 0xa0, 0x02,
X   0xa8, 0x40, 0xa0, 0x02, 0xa8, 0x40, 0xa0, 0x02, 0xa8, 0x40, 0xa0, 0x02,
X   0xa8, 0x40, 0xa0, 0x02, 0xa8, 0x40, 0xa0, 0x02, 0xa8, 0x40, 0xa0, 0x02,
X   0xa8, 0x40, 0xa0, 0x02, 0xfc, 0x41, 0xf0, 0x07, 0xfe, 0xff, 0xff, 0x0f},
X},
X{
X{
X   0xff, 0xff, 0xff, 0x1f, 0x00, 0x00, 0x00, 0x00, 0xfe, 0xff, 0xff, 0x0f,
X   0xfc, 0x01, 0xf0, 0x07, 0xa8, 0x00, 0xa0, 0x02, 0xa8, 0xff, 0xbf, 0x02,
X   0xa8, 0x40, 0xa0, 0x02, 0xa8, 0x40, 0xa0, 0x02, 0xa8, 0x40, 0xa0, 0x02,
X   0xa8, 0x40, 0xa0, 0x02, 0xa8, 0x40, 0xa0, 0x02, 0xa8, 0x40, 0xa0, 0x02,
X   0xa8, 0x40, 0xa0, 0x02, 0xa8, 0x40, 0xa0, 0x02, 0xa8, 0x40, 0xa0, 0x02,
X   0xa8, 0xe0, 0xa0, 0x02, 0xa8, 0xf0, 0xa1, 0x02, 0xa8, 0xb0, 0xa1, 0x02,
X   0xa8, 0xb0, 0xa1, 0x02, 0xa8, 0xf0, 0xa1, 0x02, 0xa8, 0xe0, 0xa0, 0x02,
X   0xa8, 0x40, 0xa0, 0x02, 0xa8, 0x40, 0xa0, 0x02, 0xa8, 0x40, 0xa0, 0x02,
X   0xa8, 0x40, 0xa0, 0x02, 0xa8, 0x40, 0xa0, 0x02, 0xa8, 0x40, 0xa0, 0x02,
X   0xa8, 0x40, 0xa0, 0x02, 0xfc, 0x41, 0xf0, 0x07, 0xfe, 0xff, 0xff, 0x0f},
X},
X};
X
Xstatic char extraman_bits[] = {
X   0x60, 0x00, 0xf0, 0x00, 0xf0, 0x00, 0x60, 0x00, 0xf0, 0x00, 0xfc, 0x03,
X   0xfe, 0x07, 0xff, 0x0f, 0xfb, 0x0d, 0xf3, 0x0c, 0xf3, 0x0c, 0xf2, 0x04,
X   0xf8, 0x01, 0x98, 0x01, 0x98, 0x01, 0x98, 0x01, 0x08, 0x01, 0x98, 0x01,
X   0x98, 0x01, 0x9c, 0x03};
X
Xstatic char fuel_bits[FUELPARTS][60] = {
X{
X   0xfc, 0xff, 0x03, 0xfe, 0xff, 0x07, 0x47, 0x45, 0x0f, 0x77, 0x75, 0x0f,
X   0x67, 0x65, 0x0f, 0x77, 0x75, 0x0f, 0x77, 0x44, 0x0c, 0xfe, 0xff, 0x07,
X   0xfc, 0xff, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
X{
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb8, 0xba, 0x00, 0x88, 0x8a, 0x00,
X   0x98, 0x9a, 0x00, 0x88, 0x8a, 0x00, 0x88, 0xbb, 0x03, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
X{
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x01, 0x00, 0x80, 0x03,
X   0x00, 0x00, 0x06, 0x00, 0x10, 0x04, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00},
X{
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0xe0, 0x81, 0x00, 0x18, 0x46, 0x00,
X   0x04, 0x38, 0x00, 0x04, 0x00, 0x00, 0x04, 0x68, 0x00, 0x04, 0x76, 0x00,
X   0x08, 0x71, 0x00, 0x88, 0x48, 0x00, 0x90, 0x48, 0x00, 0x60, 0x38, 0x00},
X};
X
X#define	SKELWIDTH	20
X#define	SKELHEIGHT	20
Xstatic char skel_bits[EXPLODEFRAMES][60] = {
X{
X   0x00, 0x06, 0x00, 0x00, 0x09, 0x00, 0x00, 0x06, 0x00, 0x00, 0x06, 0x00,
X   0x80, 0x19, 0x00, 0x40, 0x26, 0x00, 0x20, 0x49, 0x00, 0xa0, 0x56, 0x00,
X   0x20, 0x46, 0x00, 0xa0, 0x59, 0x00, 0xa0, 0x56, 0x00, 0x00, 0x09, 0x00,
X   0x80, 0x16, 0x00, 0x80, 0x10, 0x00, 0x80, 0x10, 0x00, 0x40, 0x29, 0x00,
X   0x80, 0x10, 0x00, 0x80, 0x10, 0x00, 0x80, 0x10, 0x00, 0x40, 0x29, 0x00},
X{
X   0x00, 0x06, 0x00, 0x00, 0x09, 0x00, 0x00, 0x06, 0x00, 0x00, 0x0e, 0x00,
X   0x00, 0x51, 0x00, 0x40, 0x86, 0x00, 0x00, 0x89, 0x00, 0xa0, 0x96, 0x00,
X   0x20, 0x86, 0x00, 0x90, 0x99, 0x00, 0x90, 0x16, 0x00, 0x10, 0x09, 0x00,
X   0x80, 0x16, 0x00, 0x80, 0x10, 0x00, 0x60, 0x10, 0x00, 0x40, 0x1d, 0x00,
X   0x80, 0x18, 0x00, 0x80, 0x20, 0x00, 0x80, 0xc0, 0x00, 0x40, 0x42, 0x00},
X{
X   0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x09, 0x00, 0x00, 0x96, 0x00,
X   0x10, 0x26, 0x01, 0x80, 0x00, 0x01, 0x00, 0x13, 0x00, 0x80, 0x2c, 0x01,
X   0x40, 0x0c, 0x02, 0x90, 0x01, 0x04, 0x88, 0x1a, 0x00, 0x08, 0x15, 0x00,
X   0x48, 0x0a, 0x00, 0x20, 0x14, 0x00, 0x10, 0x10, 0x00, 0x80, 0x12, 0x00,
X   0x00, 0x19, 0x00, 0x80, 0x20, 0x00, 0x80, 0xe0, 0x01, 0x40, 0x84, 0x00},
X{
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x01, 0x08, 0x29, 0x02,
X   0x00, 0x46, 0x02, 0x80, 0x06, 0x00, 0x00, 0x58, 0x00, 0x80, 0x59, 0x00,
X   0x40, 0x00, 0x00, 0x20, 0x00, 0x0e, 0xc8, 0x00, 0x00, 0x44, 0x19, 0x00,
X   0x84, 0x14, 0x00, 0x04, 0x09, 0x00, 0x38, 0x14, 0x00, 0x00, 0x10, 0x00,
X   0x00, 0x11, 0x00, 0x00, 0x1b, 0x00, 0x80, 0x00, 0x02, 0x60, 0xc0, 0x01},
X{
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x04, 0x08, 0x06, 0x00,
X   0x00, 0x89, 0x00, 0x00, 0x04, 0x01, 0x80, 0x36, 0x00, 0x00, 0x30, 0x01,
X   0xc0, 0x80, 0x00, 0x20, 0x00, 0x08, 0x00, 0x00, 0x04, 0xc4, 0x00, 0x00,
X   0x42, 0x19, 0x00, 0x82, 0x14, 0x00, 0x00, 0x09, 0x00, 0x08, 0x10, 0x00,
X   0x10, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x1b, 0x00, 0x20, 0x00, 0x01},
X{
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x04, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x05, 0x02, 0x00, 0x0c, 0x00,
X   0x00, 0x64, 0x00, 0x20, 0x00, 0x01, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00,
X   0x42, 0x00, 0x00, 0xa1, 0x08, 0x00, 0x40, 0x10, 0x00, 0x00, 0x00, 0x00,
X   0x08, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00},
X{
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x0d, 0x00,
X   0x00, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x08, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa0, 0x00, 0x00, 0x00, 0x10, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
X{
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x18, 0x00, 0x00, 0x01, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
X{
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
X{
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
X};
X
Xstatic char explode_bits[EXPLODEFRAMES][120] = {
X{
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x60, 0x03, 0x00, 0x00, 0x98, 0x05, 0x00, 0x00, 0xf8, 0x0f, 0x00,
X   0x00, 0xf0, 0x1f, 0x00, 0x00, 0xfc, 0x17, 0x00, 0x00, 0xfe, 0x1f, 0x00,
X   0x00, 0xfc, 0x1f, 0x00, 0x00, 0xf8, 0x1f, 0x00, 0x00, 0xf4, 0x07, 0x00,
X   0x00, 0xf0, 0x1f, 0x00, 0x00, 0xf0, 0x07, 0x00, 0x00, 0x80, 0x01, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
X{
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00,
X   0x00, 0xe4, 0x1f, 0x00, 0x00, 0xc0, 0x43, 0x00, 0x80, 0xec, 0x3f, 0x00,
X   0x80, 0x66, 0x2f, 0x00, 0x40, 0x9b, 0x2f, 0x00, 0x40, 0xf3, 0xce, 0x00,
X   0x40, 0x33, 0x9c, 0x00, 0x40, 0xff, 0x37, 0x00, 0x00, 0x6f, 0x9c, 0x00,
X   0x00, 0xfb, 0x3f, 0x00, 0x00, 0xbf, 0x7a, 0x00, 0x00, 0xf5, 0x37, 0x00,
X   0x00, 0xf1, 0x7f, 0x00, 0x80, 0xd6, 0x54, 0x00, 0x00, 0x4c, 0x65, 0x00,
X   0x00, 0xf8, 0x1f, 0x00, 0x00, 0xe0, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
X{
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x01, 0x00, 0x00, 0xd8, 0x0f, 0x00, 0x00, 0x0f, 0x18, 0x00,
X   0x80, 0xe5, 0x3f, 0x00, 0x60, 0xc0, 0x43, 0x00, 0x80, 0xec, 0x3f, 0x00,
X   0xa0, 0x06, 0x2f, 0x05, 0x60, 0x03, 0xaa, 0x01, 0x60, 0x13, 0xc0, 0x01,
X   0x60, 0xc3, 0x94, 0x01, 0x40, 0xcb, 0x34, 0x01, 0x10, 0xc3, 0x90, 0x01,
X   0x00, 0x13, 0x3a, 0x00, 0x20, 0x8f, 0x78, 0x00, 0x20, 0x01, 0x34, 0x02,
X   0xc0, 0x01, 0x7f, 0x02, 0x80, 0x16, 0x54, 0x00, 0x00, 0x4d, 0x65, 0x01,
X   0x00, 0xf9, 0x1f, 0x01, 0x40, 0xe1, 0x11, 0x00, 0x80, 0x01, 0x80, 0x00,
X   0x00, 0x8b, 0x80, 0x00, 0x00, 0x40, 0x64, 0x00, 0x00, 0x00, 0x0c, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
X{
X   0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x01, 0x00, 0x00, 0x40, 0x0c, 0x00,
X   0xc0, 0x34, 0xc1, 0x00, 0xf0, 0xda, 0x0f, 0x00, 0x10, 0x00, 0x18, 0x00,
X   0x90, 0x84, 0x33, 0x01, 0x74, 0x78, 0x42, 0x01, 0x84, 0x8c, 0x1f, 0x02,
X   0xa0, 0x01, 0x2c, 0x06, 0x64, 0x01, 0xac, 0x00, 0x60, 0x98, 0x4c, 0x08,
X   0x64, 0xf8, 0x11, 0x08, 0x40, 0xfa, 0x25, 0x09, 0x10, 0xf2, 0xd1, 0x08,
X   0x42, 0xb2, 0x93, 0x00, 0xa2, 0xe9, 0x80, 0x00, 0xa4, 0x61, 0x24, 0x02,
X   0xc0, 0x00, 0x67, 0x0a, 0x98, 0x16, 0x40, 0x08, 0x90, 0x0d, 0x60, 0x09,
X   0x00, 0xb9, 0x15, 0x08, 0x40, 0xa0, 0x49, 0x0b, 0xa0, 0x03, 0x03, 0x00,
X   0x20, 0x87, 0x80, 0x10, 0x20, 0x50, 0x64, 0x0f, 0x80, 0x00, 0xec, 0x04,
X   0x00, 0x0d, 0x0c, 0x00, 0x00, 0xf8, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00},
X{
X   0x20, 0x0b, 0x2b, 0x00, 0x10, 0xf0, 0x01, 0x05, 0x04, 0x40, 0x0c, 0x04,
X   0xc4, 0x20, 0xc1, 0x00, 0x83, 0x10, 0x00, 0x10, 0x10, 0x00, 0x1e, 0x10,
X   0x00, 0xbe, 0x23, 0x21, 0xc4, 0x01, 0x22, 0x00, 0x81, 0x00, 0xdc, 0x00,
X   0xb1, 0x09, 0xa1, 0x25, 0x66, 0x20, 0x25, 0x01, 0x20, 0xfc, 0x44, 0x00,
X   0x21, 0xfe, 0x07, 0x09, 0x40, 0xfe, 0x06, 0x21, 0x10, 0x0e, 0xd3, 0x01,
X   0x42, 0x3e, 0x97, 0x09, 0xa3, 0xfe, 0x82, 0x21, 0xb1, 0xf4, 0x23, 0x29,
X   0xe1, 0xb4, 0xa7, 0x08, 0xc0, 0x88, 0x03, 0x08, 0x80, 0xc0, 0x80, 0x00,
X   0x01, 0x0b, 0x80, 0x00, 0x41, 0x20, 0x70, 0x23, 0x01, 0x03, 0x6f, 0x00,
X   0x21, 0xfe, 0x39, 0x00, 0x22, 0x58, 0x05, 0x0e, 0x80, 0x00, 0xc0, 0x14,
X   0x10, 0x0d, 0x0c, 0x1c, 0x60, 0xf8, 0x01, 0x03, 0x00, 0x1c, 0x71, 0x01},
X{
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x01, 0x20, 0x8a, 0x18, 0x00,
X   0xb0, 0x21, 0xc1, 0x01, 0x90, 0x10, 0x00, 0x04, 0x10, 0x00, 0x18, 0x08,
X   0x00, 0xb8, 0x23, 0x11, 0x0c, 0x3b, 0x22, 0x08, 0x84, 0x61, 0x1f, 0x08,
X   0x30, 0x08, 0x39, 0x0d, 0x64, 0x20, 0x24, 0x04, 0x20, 0x8b, 0x40, 0x08,
X   0x20, 0xf5, 0x00, 0x01, 0x02, 0x61, 0x40, 0x09, 0x12, 0xf9, 0xf1, 0x00,
X   0x04, 0xe8, 0x31, 0x08, 0x20, 0x01, 0x24, 0x00, 0xb2, 0x1d, 0x37, 0x08,
X   0xe4, 0x9e, 0x33, 0x08, 0xc4, 0xe0, 0x03, 0x08, 0x82, 0xc0, 0x80, 0x00,
X   0x04, 0x0a, 0x80, 0x00, 0x44, 0x00, 0x70, 0x1b, 0x00, 0x00, 0x6f, 0x00,
X   0x29, 0xfe, 0x39, 0x00, 0x20, 0x58, 0x05, 0x0e, 0x80, 0x00, 0xc0, 0x06,
X   0x90, 0x0d, 0x2c, 0x04, 0xc0, 0x6f, 0x39, 0x00, 0x00, 0x00, 0x00, 0x00},
X{
X   0x70, 0x36, 0x02, 0x00, 0x08, 0x40, 0x70, 0x01, 0x0c, 0x08, 0x10, 0x00,
X   0x10, 0x36, 0x00, 0x00, 0x81, 0x63, 0x19, 0x04, 0xe0, 0x00, 0x58, 0x18,
X   0x30, 0x10, 0x00, 0x11, 0x01, 0x20, 0x00, 0x00, 0x00, 0x90, 0x80, 0x01,
X   0x00, 0x06, 0x08, 0x01, 0x08, 0xe0, 0x06, 0x1a, 0x29, 0xe9, 0x01, 0x02,
X   0x20, 0xf8, 0x0a, 0x03, 0x01, 0xfb, 0x17, 0x05, 0x15, 0xff, 0xba, 0x00,
X   0x08, 0xf8, 0x03, 0x36, 0x00, 0x68, 0x0e, 0x00, 0xa1, 0x6c, 0x24, 0x00,
X   0x35, 0xd0, 0x00, 0x02, 0x02, 0x88, 0x23, 0x22, 0xc0, 0x00, 0x00, 0x22,
X   0x04, 0x62, 0x87, 0x22, 0xc0, 0x00, 0x30, 0x00, 0x83, 0x01, 0x30, 0x10,
X   0x04, 0x7a, 0x18, 0x10, 0x00, 0x00, 0x00, 0x1c, 0x90, 0x00, 0x00, 0x0c,
X   0x20, 0x00, 0x02, 0x07, 0x80, 0x68, 0x24, 0x00, 0x00, 0x01, 0x00, 0x00},
X{
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xa8, 0x71, 0x00,
X   0x10, 0x00, 0x40, 0x00, 0x08, 0x00, 0x00, 0x02, 0x04, 0x04, 0x00, 0x06,
X   0x04, 0xd8, 0x02, 0x01, 0x00, 0x02, 0x16, 0x04, 0x00, 0x03, 0x00, 0x00,
X   0x40, 0xea, 0x20, 0x08, 0xc0, 0x0c, 0x00, 0x00, 0x86, 0x04, 0x44, 0x00,
X   0x04, 0x70, 0x04, 0x10, 0x40, 0xf8, 0x85, 0x10, 0x42, 0x70, 0xa1, 0x00,
X   0x04, 0xf2, 0x91, 0x00, 0x40, 0x52, 0x00, 0x18, 0x40, 0x00, 0x83, 0x00,
X   0x08, 0x30, 0x60, 0x00, 0x04, 0x80, 0x63, 0x10, 0x88, 0x00, 0x00, 0x00,
X   0x80, 0x62, 0x07, 0x08, 0x00, 0x87, 0x03, 0x00, 0x10, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x03, 0x60, 0x00, 0x40, 0x00, 0x40, 0x0c, 0x64, 0x00,
X   0x00, 0x61, 0x0d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
X{
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00,
X   0x80, 0x44, 0x02, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x30, 0x40, 0x80, 0x01, 0x00, 0x01, 0x80, 0x00, 0x04, 0x01, 0x08, 0x00,
X   0x04, 0x00, 0x00, 0x02, 0x00, 0x14, 0x20, 0x00, 0x00, 0x84, 0x00, 0x00,
X   0x00, 0x00, 0x04, 0x04, 0x20, 0x00, 0x00, 0x00, 0x02, 0x02, 0x44, 0x04,
X   0x02, 0x00, 0x40, 0x08, 0x00, 0x18, 0x00, 0x00, 0xc0, 0x00, 0x01, 0x00,
X   0x00, 0x10, 0x01, 0x04, 0x02, 0x00, 0x10, 0x00, 0x04, 0x02, 0x10, 0x00,
X   0x00, 0x00, 0x00, 0x06, 0x00, 0x40, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x63, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
X{
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x08, 0x00, 0x00, 0x20, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x04, 0x00, 0x00,
X   0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
X};
X
Xstatic char guard_bits[GUARDPARTS][63] = {
X{
X   0x00, 0x00, 0x00, 0x82, 0x20, 0x08, 0xe4, 0xf1, 0x04, 0xf8, 0xff, 0x03,
X   0xe8, 0xff, 0x02, 0xfc, 0xe0, 0x07, 0xfc, 0xf1, 0x07, 0xfe, 0xff, 0x0f,
X   0xdc, 0x7f, 0x07, 0x98, 0x35, 0x03, 0x98, 0x3f, 0x03, 0x98, 0x35, 0x03,
X   0xdc, 0x7f, 0x07, 0xfe, 0xff, 0x0f, 0xfc, 0xf1, 0x07, 0xfc, 0xe0, 0x07,
X   0xe8, 0xff, 0x02, 0xf8, 0xff, 0x03, 0xe4, 0xf1, 0x04, 0x82, 0x20, 0x08,
X   0x00, 0x00, 0x00},
X{
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x1f, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x00,
X   0x20, 0x80, 0x00, 0x60, 0xc0, 0x00, 0x60, 0xc0, 0x00, 0x60, 0xc0, 0x00,
X   0x20, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x1f, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00},
X};
X
Xstatic char guard_flame_bits[GUARDDIRECTIONS][GUARDFLAMEPARTS][63] = {
X{
X{
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00},
X{
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x0e, 0x00,
X   0x00, 0x04, 0x00},
X},
X{
X{
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00},
X{
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x03, 0x00, 0x00, 0x06, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00},
X},
X{
X{
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00},
X{
X   0x00, 0x04, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00},
X},
X{
X{
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00},
X{
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x18, 0x00, 0x00, 0x0c,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00},
X},
X};
X
Xstatic char guard_light_bits[GUARDLIGHTS][63] = {
X{
X   0x01, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x01, 0x00, 0x10},
X{
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00},
X{
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00},
X};
END_OF_FILE
if test 42782 -ne `wc -c <'bitmap.h'`; then
    echo shar: \"'bitmap.h'\" unpacked with wrong size!
fi
# end of 'bitmap.h'
fi
if test ! -d 'levels' ; then
    echo shar: Creating directory \"'levels'\"
    mkdir 'levels'
fi
if test -f 'windowx.c' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'windowx.c'\"
else
echo shar: Extracting \"'windowx.c'\" \(3327 characters\)
sed "s/^X//" >'windowx.c' <<'END_OF_FILE'
X/*	windowx.c : routines that set up the windows and pixmaps in the game.
X*/
X
X#include "copyright.h"
X#include "defs.h"
X
Xstatic XWMHints wm_hint = {
X	InputHint, 1,
X};
X
X/*	open_window is a primitive general function to open a window inside
X	another window
X*/
X
XWindow open_window(x, y, width, height, parent)
Xint		x, y;
Xint		width, height;
XWindow	parent;
X{
X    XSetWindowAttributes	windowattr;
X    XSizeHints				sizehints;
X	XClassHint				classhint;
X	XWMHints				wmhints;
X    unsigned long			windowmask;
X    Window					newwindow;
X
X    windowattr.background_pixel = ctable[CBLACK].pixelvalue;
X    windowattr.border_pixel = ctable[CWHITE].pixelvalue;
X	windowattr.event_mask =	KeyPressMask | ButtonPressMask |
X							ButtonReleaseMask | ExposureMask;
X	windowattr.do_not_propagate_mask =	KeyPressMask |
X										ButtonPressMask |
X										ButtonReleaseMask |
X										ExposureMask;
X	windowattr.override_redirect = False;
X    windowmask =	CWBorderPixel | CWBackPixel | CWEventMask |
X					CWOverrideRedirect;
X    newwindow = XCreateWindow(display, parent, x, y, width, height,
X									1, depth, InputOutput, CopyFromParent,
X									windowmask, &windowattr);
X	classhint.res_name = "jetpack";
X	classhint.res_class = "game";
X	XSetClassHint(display, newwindow, &classhint);
X    XSetWMHints(display, newwindow, &wm_hint);
X	XStoreName(display,newwindow,"Jetpack");
X    sizehints.flags = PPosition | PSize | PMaxSize | PMinSize;
X    sizehints.x = x;
X    sizehints.y = y;
X    sizehints.width = width;
X    sizehints.height = height;
X	sizehints.min_width = width;
X	sizehints.max_width = width;
X	sizehints.min_height = height;
X	sizehints.max_height = height;
X    XSetNormalHints(display, newwindow, &sizehints);
X    return(newwindow);
X}
X
X/*	set_up_windows sets up the major windows and pixmaps used in the game.
X*/
X
Xset_up_windows()
X{
X	gamewindow = open_window(0, 0, WINDOWWIDTH, WINDOWHEIGHT+INFOHEIGHT,
X								rootwindow);
X	infowindow = open_window(0, WINDOWHEIGHT, WINDOWWIDTH-1, INFOHEIGHT-1,
X								gamewindow);
X	dialogwidth = XTextWidth(bigfontinfo,"MMMMMMMMMMMMMMMMMMMMMMMMM",25) +
X								20;
X    dialogheight = 4 * (bigfontinfo->ascent + bigfontinfo->descent) + 45;
X    dialogwindow = open_window(WINDOWWIDTH / 2 - dialogwidth / 2,
X                                WINDOWHEIGHT / 2 - dialogheight - 2,
X                                dialogwidth, dialogheight, gamewindow);
X    dialogstringwindow = open_window(10, 2 * (bigfontinfo->ascent +
X										bigfontinfo->descent) + 15,
X										dialogwidth - 20,
X										(bigfontinfo->ascent +
X										bigfontinfo->descent) + 10,
X										dialogwindow);
X    dialogbuttonwindow = open_window(10, 3 * (bigfontinfo->ascent +
X										bigfontinfo->descent) + 30,
X										dialogwidth / 5,
X										(bigfontinfo->ascent +
X										bigfontinfo->descent) + 10,
X										dialogwindow);
X
X#ifdef	BLIT
X	drawpixmap = XCreatePixmap(display, gamewindow, WINDOWWIDTH,
X							 	WINDOWHEIGHT, depth);
X	XFillRectangle(display, drawpixmap, ctable[CBLACK].smallgc, 0, 0,
X					WINDOWWIDTH, WINDOWHEIGHT);
X#endif
X
X	scorepixmap = XCreatePixmap(display, gamewindow, SCOREWIDTH,
X								SCOREHEIGHT, depth);
X	XFillRectangle(display, scorepixmap, ctable[CBLACK].smallgc, 0, 0,
X					SCOREWIDTH, SCOREHEIGHT);
X    XMapWindow(display, gamewindow);
X    XMapWindow(display, infowindow);
X    XFlush(display);
X}
END_OF_FILE
if test 3327 -ne `wc -c <'windowx.c'`; then
    echo shar: \"'windowx.c'\" unpacked with wrong size!
fi
# end of 'windowx.c'
fi
echo shar: End of archive 1 \(of 4\).
cp /dev/null ark1isdone
MISSING=""
for I in 1 2 3 4 ; do
    if test ! -f ark${I}isdone ; then
	MISSING="${MISSING} ${I}"
    fi
done
if test "${MISSING}" = "" ; then
    echo You have unpacked all 4 archives.
    rm -f ark[1-9]isdone
else
    echo You still need to unpack the following archives:
    echo "        " ${MISSING}
fi
##  End of shell archive.
exit 0
