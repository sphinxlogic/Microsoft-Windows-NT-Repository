Subject:  v17i037:  gtetris3 -  Generic Tetris for X11, V2.0.1, Patch4
Newsgroups: comp.sources.games
Approved: billr@saab.CNA.TEK.COM

Submitted-by: "Qiang Alex Zhao" <azhao@cs.arizona.edu>
Posting-number: Volume 17, Issue 37
Archive-name: gtetris3/Patch4
Patch-To: gtetris3: Volume 15, Issue 44-45
Environment: X11R4/5, Xlib

	[This fixes an HP time structure bug and includes a new set of
	 bitmaps with rounded corners.  -br]

#! /bin/sh
# This is a shell archive.  Remove anything before this line, then unpack
# it by saving it into a file and typing "sh file".  To overwrite existing
# files, type "sh file -c".  You can also feed this as standard input via
# unshar, or by typing "sh <file", e.g..  If this archive is complete, you
# will see the following message at the end:
#		"End of archive 1 (of 1)."
# Contents:  bitmaps/rot00.xbm bitmaps/rot01.xbm bitmaps/rot02.xbm
#   bitmaps/rot03.xbm bitmaps/rot04.xbm bitmaps/rot05.xbm
#   bitmaps/rot06.xbm bitmaps/rot07.xbm bitmaps/rot08.xbm
#   bitmaps/rot09.xbm bitmaps/rot10.xbm bitmaps/rot11.xbm
#   bitmaps/rot12.xbm bitmaps/rot13.xbm bitmaps/rot14.xbm
#   bitmaps/ticon.xbm patches04
# Wrapped by billr@saab on Tue Mar  2 08:34:53 1993
PATH=/bin:/usr/bin:/usr/ucb ; export PATH
if test -f 'bitmaps/rot00.xbm' -a "${1}" != "-c" ; then 
  echo shar: Renaming existing file \"'bitmaps/rot00.xbm'\" to \"'bitmaps/rot00.xbm.orig'\"
  mv -f 'bitmaps/rot00.xbm' 'bitmaps/rot00.xbm.orig'
fi
echo shar: Extracting \"'bitmaps/rot00.xbm'\" \(827 characters\)
sed "s/^X//" >'bitmaps/rot00.xbm' <<'END_OF_FILE'
X#define rot00_width 30
X#define rot00_height 30
Xstatic char rot00_bits[] = {
X   0x00, 0x00, 0x00, 0x00, 0xf0, 0xff, 0xff, 0x03, 0xf8, 0xff, 0xff, 0x07,
X   0x5c, 0x55, 0x55, 0x0f, 0xae, 0xaa, 0xaa, 0x1e, 0x56, 0x55, 0x55, 0x1f,
X   0xae, 0xaa, 0xaa, 0x1f, 0xd6, 0xff, 0xff, 0x1f, 0xae, 0xff, 0xbf, 0x1f,
X   0xd6, 0xff, 0xdf, 0x1f, 0xae, 0xff, 0xaf, 0x1f, 0xd6, 0xff, 0xd7, 0x1f,
X   0xae, 0xff, 0xab, 0x1f, 0xd6, 0xff, 0xd5, 0x1f, 0xae, 0xff, 0xaa, 0x1f,
X   0xd6, 0x7f, 0xd5, 0x1f, 0xae, 0xbf, 0xaa, 0x1f, 0xd6, 0x5f, 0xd5, 0x1f,
X   0xae, 0xaf, 0xaa, 0x1f, 0xd6, 0x57, 0xd5, 0x1f, 0xae, 0xab, 0xaa, 0x1f,
X   0xd6, 0x55, 0xd5, 0x1f, 0xae, 0xaa, 0xaa, 0x1f, 0xd6, 0xff, 0xff, 0x1f,
X   0xee, 0xff, 0xff, 0x1f, 0xfe, 0xff, 0xff, 0x1f, 0xfc, 0xff, 0xff, 0x0f,
X   0xf8, 0xff, 0xff, 0x07, 0xf0, 0xff, 0xff, 0x03, 0x00, 0x00, 0x00, 0x00};
END_OF_FILE
if test 827 -ne `wc -c <'bitmaps/rot00.xbm'`; then
    echo shar: \"'bitmaps/rot00.xbm'\" unpacked with wrong size!
fi
# end of 'bitmaps/rot00.xbm'
if test -f 'bitmaps/rot01.xbm' -a "${1}" != "-c" ; then 
  echo shar: Renaming existing file \"'bitmaps/rot01.xbm'\" to \"'bitmaps/rot01.xbm.orig'\"
  mv -f 'bitmaps/rot01.xbm' 'bitmaps/rot01.xbm.orig'
fi
echo shar: Extracting \"'bitmaps/rot01.xbm'\" \(827 characters\)
sed "s/^X//" >'bitmaps/rot01.xbm' <<'END_OF_FILE'
X#define rot01_width 30
X#define rot01_height 30
Xstatic char rot01_bits[] = {
X   0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0x03, 0xff, 0xff, 0xff, 0x07,
X   0x55, 0x55, 0x55, 0x0f, 0xaa, 0xaa, 0xaa, 0x1e, 0x55, 0x55, 0x55, 0x1f,
X   0xaa, 0xaa, 0xaa, 0x1f, 0x55, 0x55, 0xd5, 0x1f, 0xaa, 0xaa, 0xea, 0x1f,
X   0x55, 0x55, 0xf5, 0x1f, 0xaa, 0xaa, 0xfa, 0x1f, 0x55, 0x55, 0xfd, 0x1f,
X   0xaa, 0xaa, 0xfe, 0x1f, 0x55, 0x55, 0xff, 0x1f, 0xaa, 0xaa, 0xff, 0x1f,
X   0xff, 0xff, 0xff, 0x1f, 0xff, 0xff, 0xff, 0x1f, 0xff, 0xff, 0xff, 0x1f,
X   0xff, 0xff, 0xff, 0x1f, 0xff, 0xff, 0xff, 0x1f, 0xff, 0xff, 0xff, 0x1f,
X   0xff, 0xff, 0xff, 0x1f, 0xff, 0xff, 0xff, 0x1f, 0xff, 0xff, 0xff, 0x1f,
X   0xff, 0xff, 0xff, 0x1f, 0xff, 0xff, 0xff, 0x1f, 0xff, 0xff, 0xff, 0x0f,
X   0xff, 0xff, 0xff, 0x07, 0xff, 0xff, 0xff, 0x03, 0x00, 0x00, 0x00, 0x00};
END_OF_FILE
if test 827 -ne `wc -c <'bitmaps/rot01.xbm'`; then
    echo shar: \"'bitmaps/rot01.xbm'\" unpacked with wrong size!
fi
# end of 'bitmaps/rot01.xbm'
if test -f 'bitmaps/rot02.xbm' -a "${1}" != "-c" ; then 
  echo shar: Renaming existing file \"'bitmaps/rot02.xbm'\" to \"'bitmaps/rot02.xbm.orig'\"
  mv -f 'bitmaps/rot02.xbm' 'bitmaps/rot02.xbm.orig'
fi
echo shar: Extracting \"'bitmaps/rot02.xbm'\" \(827 characters\)
sed "s/^X//" >'bitmaps/rot02.xbm' <<'END_OF_FILE'
X#define rot02_width 30
X#define rot02_height 30
Xstatic char rot02_bits[] = {
X   0x00, 0x00, 0x00, 0x00, 0xf0, 0xff, 0xff, 0x03, 0xf8, 0xff, 0xff, 0x07,
X   0x5c, 0x55, 0x55, 0x0f, 0xae, 0xaa, 0xaa, 0x1e, 0x56, 0x55, 0x55, 0x1f,
X   0xae, 0xaa, 0xaa, 0x1f, 0x56, 0x55, 0xd5, 0x1f, 0xae, 0xaa, 0xea, 0x1f,
X   0x56, 0x55, 0xf5, 0x1f, 0xae, 0xaa, 0xfa, 0x1f, 0x56, 0x55, 0xfd, 0x1f,
X   0xae, 0xaa, 0xfe, 0x1f, 0x56, 0x55, 0xff, 0x1f, 0xae, 0xaa, 0xff, 0x1f,
X   0x56, 0xd5, 0xff, 0x1f, 0xae, 0xaa, 0xff, 0x1f, 0x56, 0xd5, 0xff, 0x1f,
X   0xae, 0xaa, 0xff, 0x1f, 0x56, 0xd5, 0xff, 0x1f, 0xae, 0xaa, 0xff, 0x1f,
X   0x56, 0xd5, 0xff, 0x1f, 0xae, 0xaa, 0xff, 0x1f, 0x56, 0xd5, 0xff, 0x1f,
X   0xae, 0xaa, 0xff, 0x1f, 0x56, 0xd5, 0xff, 0x1f, 0xae, 0xaa, 0xff, 0x1f,
X   0x56, 0xd5, 0xff, 0x1f, 0xae, 0xaa, 0xff, 0x1f, 0x56, 0xd5, 0xff, 0x1f};
END_OF_FILE
if test 827 -ne `wc -c <'bitmaps/rot02.xbm'`; then
    echo shar: \"'bitmaps/rot02.xbm'\" unpacked with wrong size!
fi
# end of 'bitmaps/rot02.xbm'
if test -f 'bitmaps/rot03.xbm' -a "${1}" != "-c" ; then 
  echo shar: Renaming existing file \"'bitmaps/rot03.xbm'\" to \"'bitmaps/rot03.xbm.orig'\"
  mv -f 'bitmaps/rot03.xbm' 'bitmaps/rot03.xbm.orig'
fi
echo shar: Extracting \"'bitmaps/rot03.xbm'\" \(827 characters\)
sed "s/^X//" >'bitmaps/rot03.xbm' <<'END_OF_FILE'
X#define rot03_width 30
X#define rot03_height 30
Xstatic char rot03_bits[] = {
X   0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0x03, 0xff, 0xff, 0xff, 0x07,
X   0x55, 0x55, 0x55, 0x0f, 0xaa, 0xaa, 0xaa, 0x1e, 0x55, 0x55, 0x55, 0x1f,
X   0xaa, 0xaa, 0xaa, 0x1f, 0x55, 0x55, 0xd5, 0x1f, 0xaa, 0xaa, 0xea, 0x1f,
X   0x55, 0x55, 0xf5, 0x1f, 0xaa, 0xaa, 0xfa, 0x1f, 0x55, 0x55, 0xfd, 0x1f,
X   0xaa, 0xaa, 0xfe, 0x1f, 0x55, 0x55, 0xff, 0x1f, 0xaa, 0xaa, 0xff, 0x1f,
X   0xff, 0xff, 0xff, 0x1f, 0xff, 0xbf, 0xff, 0x1f, 0xff, 0xdf, 0xff, 0x1f,
X   0xff, 0xaf, 0xff, 0x1f, 0xff, 0xd7, 0xff, 0x1f, 0xff, 0xab, 0xff, 0x1f,
X   0xff, 0xd5, 0xff, 0x1f, 0xff, 0xaa, 0xff, 0x1f, 0x7f, 0xd5, 0xff, 0x1f,
X   0xbf, 0xaa, 0xff, 0x1f, 0x5f, 0xd5, 0xff, 0x1f, 0xaf, 0xaa, 0xff, 0x1f,
X   0x57, 0xd5, 0xff, 0x1f, 0xab, 0xaa, 0xff, 0x1f, 0x55, 0xd5, 0xff, 0x1f};
END_OF_FILE
if test 827 -ne `wc -c <'bitmaps/rot03.xbm'`; then
    echo shar: \"'bitmaps/rot03.xbm'\" unpacked with wrong size!
fi
# end of 'bitmaps/rot03.xbm'
if test -f 'bitmaps/rot04.xbm' -a "${1}" != "-c" ; then 
  echo shar: Renaming existing file \"'bitmaps/rot04.xbm'\" to \"'bitmaps/rot04.xbm.orig'\"
  mv -f 'bitmaps/rot04.xbm' 'bitmaps/rot04.xbm.orig'
fi
echo shar: Extracting \"'bitmaps/rot04.xbm'\" \(827 characters\)
sed "s/^X//" >'bitmaps/rot04.xbm' <<'END_OF_FILE'
X#define rot04_width 30
X#define rot04_height 30
Xstatic char rot04_bits[] = {
X   0x00, 0x00, 0x00, 0x00, 0xf0, 0xff, 0xff, 0x3f, 0xf8, 0xff, 0xff, 0x3f,
X   0x5c, 0x55, 0x55, 0x15, 0xae, 0xaa, 0xaa, 0x2a, 0x56, 0x55, 0x55, 0x15,
X   0xae, 0xaa, 0xaa, 0x2a, 0x56, 0x55, 0x55, 0x15, 0xae, 0xaa, 0xaa, 0x2a,
X   0x56, 0x55, 0x55, 0x15, 0xae, 0xaa, 0xaa, 0x2a, 0x56, 0x55, 0x55, 0x15,
X   0xae, 0xaa, 0xaa, 0x2a, 0x56, 0x55, 0x55, 0x15, 0xae, 0xaa, 0xaa, 0x2a,
X   0x56, 0xd5, 0xff, 0x3f, 0xae, 0xea, 0xff, 0x3f, 0x56, 0xf5, 0xff, 0x3f,
X   0xae, 0xfa, 0xff, 0x3f, 0x56, 0xfd, 0xff, 0x3f, 0xae, 0xfe, 0xff, 0x3f,
X   0x56, 0xff, 0xff, 0x3f, 0xae, 0xff, 0xff, 0x3f, 0xd6, 0xff, 0xff, 0x3f,
X   0xee, 0xff, 0xff, 0x3f, 0xfe, 0xff, 0xff, 0x3f, 0xfc, 0xff, 0xff, 0x3f,
X   0xf8, 0xff, 0xff, 0x3f, 0xf0, 0xff, 0xff, 0x3f, 0x00, 0x00, 0x00, 0x00};
END_OF_FILE
if test 827 -ne `wc -c <'bitmaps/rot04.xbm'`; then
    echo shar: \"'bitmaps/rot04.xbm'\" unpacked with wrong size!
fi
# end of 'bitmaps/rot04.xbm'
if test -f 'bitmaps/rot05.xbm' -a "${1}" != "-c" ; then 
  echo shar: Renaming existing file \"'bitmaps/rot05.xbm'\" to \"'bitmaps/rot05.xbm.orig'\"
  mv -f 'bitmaps/rot05.xbm' 'bitmaps/rot05.xbm.orig'
fi
echo shar: Extracting \"'bitmaps/rot05.xbm'\" \(827 characters\)
sed "s/^X//" >'bitmaps/rot05.xbm' <<'END_OF_FILE'
X#define rot05_width 30
X#define rot05_height 30
Xstatic char rot05_bits[] = {
X   0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0x3f, 0xff, 0xff, 0xff, 0x3f,
X   0x55, 0x55, 0x55, 0x15, 0xaa, 0xaa, 0xaa, 0x2a, 0x55, 0x55, 0x55, 0x15,
X   0xaa, 0xaa, 0xaa, 0x2a, 0x55, 0x55, 0x55, 0x15, 0xaa, 0xaa, 0xaa, 0x2a,
X   0x55, 0x55, 0x55, 0x15, 0xaa, 0xaa, 0xaa, 0x2a, 0x55, 0x55, 0x55, 0x15,
X   0xaa, 0xaa, 0xaa, 0x2a, 0x55, 0x55, 0x55, 0x15, 0xaa, 0xaa, 0xaa, 0x2a,
X   0xff, 0xff, 0xff, 0x3f, 0xff, 0xff, 0xff, 0x3f, 0xff, 0xff, 0xff, 0x3f,
X   0xff, 0xff, 0xff, 0x3f, 0xff, 0xff, 0xff, 0x3f, 0xff, 0xff, 0xff, 0x3f,
X   0xff, 0xff, 0xff, 0x3f, 0xff, 0xff, 0xff, 0x3f, 0xff, 0xff, 0xff, 0x3f,
X   0xff, 0xff, 0xff, 0x3f, 0xff, 0xff, 0xff, 0x3f, 0xff, 0xff, 0xff, 0x3f,
X   0xff, 0xff, 0xff, 0x3f, 0xff, 0xff, 0xff, 0x3f, 0x00, 0x00, 0x00, 0x00};
END_OF_FILE
if test 827 -ne `wc -c <'bitmaps/rot05.xbm'`; then
    echo shar: \"'bitmaps/rot05.xbm'\" unpacked with wrong size!
fi
# end of 'bitmaps/rot05.xbm'
if test -f 'bitmaps/rot06.xbm' -a "${1}" != "-c" ; then 
  echo shar: Renaming existing file \"'bitmaps/rot06.xbm'\" to \"'bitmaps/rot06.xbm.orig'\"
  mv -f 'bitmaps/rot06.xbm' 'bitmaps/rot06.xbm.orig'
fi
echo shar: Extracting \"'bitmaps/rot06.xbm'\" \(827 characters\)
sed "s/^X//" >'bitmaps/rot06.xbm' <<'END_OF_FILE'
X#define rot06_width 30
X#define rot06_height 30
Xstatic char rot06_bits[] = {
X   0x00, 0x00, 0x00, 0x00, 0xf0, 0xff, 0xff, 0x3f, 0xf8, 0xff, 0xff, 0x3f,
X   0x5c, 0x55, 0x55, 0x15, 0xae, 0xaa, 0xaa, 0x2a, 0x56, 0x55, 0x55, 0x15,
X   0xae, 0xaa, 0xaa, 0x2a, 0x56, 0x55, 0x55, 0x15, 0xae, 0xaa, 0xaa, 0x2a,
X   0x56, 0x55, 0x55, 0x15, 0xae, 0xaa, 0xaa, 0x2a, 0x56, 0x55, 0x55, 0x15,
X   0xae, 0xaa, 0xaa, 0x2a, 0x56, 0x55, 0x55, 0x15, 0xae, 0xaa, 0xaa, 0x2a,
X   0x56, 0xd5, 0xff, 0x3f, 0xae, 0xaa, 0xff, 0x3f, 0x56, 0xd5, 0xff, 0x3f,
X   0xae, 0xaa, 0xff, 0x3f, 0x56, 0xd5, 0xff, 0x3f, 0xae, 0xaa, 0xff, 0x3f,
X   0x56, 0xd5, 0xff, 0x3f, 0xae, 0xaa, 0xff, 0x3f, 0x56, 0xd5, 0xff, 0x3f,
X   0xae, 0xaa, 0xff, 0x3f, 0x56, 0xd5, 0xff, 0x3f, 0xae, 0xaa, 0xff, 0x3f,
X   0x56, 0xd5, 0xff, 0x3f, 0xae, 0xaa, 0xff, 0x3f, 0x56, 0xd5, 0xff, 0x3f};
END_OF_FILE
if test 827 -ne `wc -c <'bitmaps/rot06.xbm'`; then
    echo shar: \"'bitmaps/rot06.xbm'\" unpacked with wrong size!
fi
# end of 'bitmaps/rot06.xbm'
if test -f 'bitmaps/rot07.xbm' -a "${1}" != "-c" ; then 
  echo shar: Renaming existing file \"'bitmaps/rot07.xbm'\" to \"'bitmaps/rot07.xbm.orig'\"
  mv -f 'bitmaps/rot07.xbm' 'bitmaps/rot07.xbm.orig'
fi
echo shar: Extracting \"'bitmaps/rot07.xbm'\" \(827 characters\)
sed "s/^X//" >'bitmaps/rot07.xbm' <<'END_OF_FILE'
X#define rot07_width 30
X#define rot07_height 30
Xstatic char rot07_bits[] = {
X   0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0x3f, 0xff, 0xff, 0xff, 0x3f,
X   0x55, 0x55, 0x55, 0x15, 0xaa, 0xaa, 0xaa, 0x2a, 0x55, 0x55, 0x55, 0x15,
X   0xaa, 0xaa, 0xaa, 0x2a, 0x55, 0x55, 0x55, 0x15, 0xaa, 0xaa, 0xaa, 0x2a,
X   0x55, 0x55, 0x55, 0x15, 0xaa, 0xaa, 0xaa, 0x2a, 0x55, 0x55, 0x55, 0x15,
X   0xaa, 0xaa, 0xaa, 0x2a, 0x55, 0x55, 0x55, 0x15, 0xaa, 0xaa, 0xaa, 0x2a,
X   0xff, 0xff, 0xff, 0x3f, 0xff, 0xbf, 0xff, 0x3f, 0xff, 0xdf, 0xff, 0x3f,
X   0xff, 0xaf, 0xff, 0x3f, 0xff, 0xd7, 0xff, 0x3f, 0xff, 0xab, 0xff, 0x3f,
X   0xff, 0xd5, 0xff, 0x3f, 0xff, 0xaa, 0xff, 0x3f, 0x7f, 0xd5, 0xff, 0x3f,
X   0xbf, 0xaa, 0xff, 0x3f, 0x5f, 0xd5, 0xff, 0x3f, 0xaf, 0xaa, 0xff, 0x3f,
X   0x57, 0xd5, 0xff, 0x3f, 0xab, 0xaa, 0xff, 0x3f, 0x55, 0xd5, 0xff, 0x3f};
END_OF_FILE
if test 827 -ne `wc -c <'bitmaps/rot07.xbm'`; then
    echo shar: \"'bitmaps/rot07.xbm'\" unpacked with wrong size!
fi
# end of 'bitmaps/rot07.xbm'
if test -f 'bitmaps/rot08.xbm' -a "${1}" != "-c" ; then 
  echo shar: Renaming existing file \"'bitmaps/rot08.xbm'\" to \"'bitmaps/rot08.xbm.orig'\"
  mv -f 'bitmaps/rot08.xbm' 'bitmaps/rot08.xbm.orig'
fi
echo shar: Extracting \"'bitmaps/rot08.xbm'\" \(827 characters\)
sed "s/^X//" >'bitmaps/rot08.xbm' <<'END_OF_FILE'
X#define rot08_width 30
X#define rot08_height 30
Xstatic char rot08_bits[] = {
X   0xae, 0xaa, 0xff, 0x1f, 0x56, 0xd5, 0xff, 0x1f, 0xae, 0xaa, 0xff, 0x1f,
X   0x56, 0xd5, 0xff, 0x1f, 0xae, 0xaa, 0xff, 0x1f, 0x56, 0xd5, 0xff, 0x1f,
X   0xae, 0xaa, 0xff, 0x1f, 0x56, 0xd5, 0xff, 0x1f, 0xae, 0xaa, 0xff, 0x1f,
X   0x56, 0xd5, 0xff, 0x1f, 0xae, 0xaa, 0xff, 0x1f, 0x56, 0xd5, 0xff, 0x1f,
X   0xae, 0xaa, 0xff, 0x1f, 0x56, 0xd5, 0xff, 0x1f, 0xae, 0xaa, 0xff, 0x1f,
X   0x56, 0xd5, 0xff, 0x1f, 0xae, 0xea, 0xff, 0x1f, 0x56, 0xf5, 0xff, 0x1f,
X   0xae, 0xfa, 0xff, 0x1f, 0x56, 0xfd, 0xff, 0x1f, 0xae, 0xfe, 0xff, 0x1f,
X   0x56, 0xff, 0xff, 0x1f, 0xae, 0xff, 0xff, 0x1f, 0xd6, 0xff, 0xff, 0x1f,
X   0xee, 0xff, 0xff, 0x1f, 0xfe, 0xff, 0xff, 0x1f, 0xfc, 0xff, 0xff, 0x0f,
X   0xf8, 0xff, 0xff, 0x07, 0xf0, 0xff, 0xff, 0x03, 0x00, 0x00, 0x00, 0x00};
END_OF_FILE
if test 827 -ne `wc -c <'bitmaps/rot08.xbm'`; then
    echo shar: \"'bitmaps/rot08.xbm'\" unpacked with wrong size!
fi
# end of 'bitmaps/rot08.xbm'
if test -f 'bitmaps/rot09.xbm' -a "${1}" != "-c" ; then 
  echo shar: Renaming existing file \"'bitmaps/rot09.xbm'\" to \"'bitmaps/rot09.xbm.orig'\"
  mv -f 'bitmaps/rot09.xbm' 'bitmaps/rot09.xbm.orig'
fi
echo shar: Extracting \"'bitmaps/rot09.xbm'\" \(827 characters\)
sed "s/^X//" >'bitmaps/rot09.xbm' <<'END_OF_FILE'
X#define rot09_width 30
X#define rot09_height 30
Xstatic char rot09_bits[] = {
X   0xaa, 0xaa, 0xff, 0x1f, 0x55, 0xd5, 0xff, 0x1f, 0xaa, 0xaa, 0xff, 0x1f,
X   0x55, 0xd5, 0xff, 0x1f, 0xaa, 0xaa, 0xff, 0x1f, 0x55, 0xd5, 0xff, 0x1f,
X   0xaa, 0xaa, 0xff, 0x1f, 0x55, 0xd5, 0xff, 0x1f, 0xaa, 0xaa, 0xff, 0x1f,
X   0x55, 0xd5, 0xff, 0x1f, 0xaa, 0xaa, 0xff, 0x1f, 0x55, 0xd5, 0xff, 0x1f,
X   0xaa, 0xaa, 0xff, 0x1f, 0x55, 0xd5, 0xff, 0x1f, 0xaa, 0xaa, 0xff, 0x1f,
X   0xff, 0xff, 0xff, 0x1f, 0xff, 0xff, 0xff, 0x1f, 0xff, 0xff, 0xff, 0x1f,
X   0xff, 0xff, 0xff, 0x1f, 0xff, 0xff, 0xff, 0x1f, 0xff, 0xff, 0xff, 0x1f,
X   0xff, 0xff, 0xff, 0x1f, 0xff, 0xff, 0xff, 0x1f, 0xff, 0xff, 0xff, 0x1f,
X   0xff, 0xff, 0xff, 0x1f, 0xff, 0xff, 0xff, 0x1f, 0xff, 0xff, 0xff, 0x0f,
X   0xff, 0xff, 0xff, 0x07, 0xff, 0xff, 0xff, 0x03, 0x00, 0x00, 0x00, 0x00};
END_OF_FILE
if test 827 -ne `wc -c <'bitmaps/rot09.xbm'`; then
    echo shar: \"'bitmaps/rot09.xbm'\" unpacked with wrong size!
fi
# end of 'bitmaps/rot09.xbm'
if test -f 'bitmaps/rot10.xbm' -a "${1}" != "-c" ; then 
  echo shar: Renaming existing file \"'bitmaps/rot10.xbm'\" to \"'bitmaps/rot10.xbm.orig'\"
  mv -f 'bitmaps/rot10.xbm' 'bitmaps/rot10.xbm.orig'
fi
echo shar: Extracting \"'bitmaps/rot10.xbm'\" \(827 characters\)
sed "s/^X//" >'bitmaps/rot10.xbm' <<'END_OF_FILE'
X#define rot10_width 30
X#define rot10_height 30
Xstatic char rot10_bits[] = {
X   0xae, 0xaa, 0xff, 0x1f, 0x56, 0xd5, 0xff, 0x1f, 0xae, 0xaa, 0xff, 0x1f,
X   0x56, 0xd5, 0xff, 0x1f, 0xae, 0xaa, 0xff, 0x1f, 0x56, 0xd5, 0xff, 0x1f,
X   0xae, 0xaa, 0xff, 0x1f, 0x56, 0xd5, 0xff, 0x1f, 0xae, 0xaa, 0xff, 0x1f,
X   0x56, 0xd5, 0xff, 0x1f, 0xae, 0xaa, 0xff, 0x1f, 0x56, 0xd5, 0xff, 0x1f,
X   0xae, 0xaa, 0xff, 0x1f, 0x56, 0xd5, 0xff, 0x1f, 0xae, 0xaa, 0xff, 0x1f,
X   0x56, 0xd5, 0xff, 0x1f, 0xae, 0xaa, 0xff, 0x1f, 0x56, 0xd5, 0xff, 0x1f,
X   0xae, 0xaa, 0xff, 0x1f, 0x56, 0xd5, 0xff, 0x1f, 0xae, 0xaa, 0xff, 0x1f,
X   0x56, 0xd5, 0xff, 0x1f, 0xae, 0xaa, 0xff, 0x1f, 0x56, 0xd5, 0xff, 0x1f,
X   0xae, 0xaa, 0xff, 0x1f, 0x56, 0xd5, 0xff, 0x1f, 0xae, 0xaa, 0xff, 0x1f,
X   0x56, 0xd5, 0xff, 0x1f, 0xae, 0xaa, 0xff, 0x1f, 0x56, 0xd5, 0xff, 0x1f};
END_OF_FILE
if test 827 -ne `wc -c <'bitmaps/rot10.xbm'`; then
    echo shar: \"'bitmaps/rot10.xbm'\" unpacked with wrong size!
fi
# end of 'bitmaps/rot10.xbm'
if test -f 'bitmaps/rot11.xbm' -a "${1}" != "-c" ; then 
  echo shar: Renaming existing file \"'bitmaps/rot11.xbm'\" to \"'bitmaps/rot11.xbm.orig'\"
  mv -f 'bitmaps/rot11.xbm' 'bitmaps/rot11.xbm.orig'
fi
echo shar: Extracting \"'bitmaps/rot11.xbm'\" \(827 characters\)
sed "s/^X//" >'bitmaps/rot11.xbm' <<'END_OF_FILE'
X#define rot11_width 30
X#define rot11_height 30
Xstatic char rot11_bits[] = {
X   0xaa, 0xaa, 0xff, 0x1f, 0x55, 0xd5, 0xff, 0x1f, 0xaa, 0xaa, 0xff, 0x1f,
X   0x55, 0xd5, 0xff, 0x1f, 0xaa, 0xaa, 0xff, 0x1f, 0x55, 0xd5, 0xff, 0x1f,
X   0xaa, 0xaa, 0xff, 0x1f, 0x55, 0xd5, 0xff, 0x1f, 0xaa, 0xaa, 0xff, 0x1f,
X   0x55, 0xd5, 0xff, 0x1f, 0xaa, 0xaa, 0xff, 0x1f, 0x55, 0xd5, 0xff, 0x1f,
X   0xaa, 0xaa, 0xff, 0x1f, 0x55, 0xd5, 0xff, 0x1f, 0xaa, 0xaa, 0xff, 0x1f,
X   0xff, 0xff, 0xff, 0x1f, 0xff, 0xbf, 0xff, 0x1f, 0xff, 0xdf, 0xff, 0x1f,
X   0xff, 0xaf, 0xff, 0x1f, 0xff, 0xd7, 0xff, 0x1f, 0xff, 0xab, 0xff, 0x1f,
X   0xff, 0xd5, 0xff, 0x1f, 0xff, 0xaa, 0xff, 0x1f, 0x7f, 0xd5, 0xff, 0x1f,
X   0xbf, 0xaa, 0xff, 0x1f, 0x5f, 0xd5, 0xff, 0x1f, 0xaf, 0xaa, 0xff, 0x1f,
X   0x57, 0xd5, 0xff, 0x1f, 0xab, 0xaa, 0xff, 0x1f, 0x55, 0xd5, 0xff, 0x1f};
END_OF_FILE
if test 827 -ne `wc -c <'bitmaps/rot11.xbm'`; then
    echo shar: \"'bitmaps/rot11.xbm'\" unpacked with wrong size!
fi
# end of 'bitmaps/rot11.xbm'
if test -f 'bitmaps/rot12.xbm' -a "${1}" != "-c" ; then 
  echo shar: Renaming existing file \"'bitmaps/rot12.xbm'\" to \"'bitmaps/rot12.xbm.orig'\"
  mv -f 'bitmaps/rot12.xbm' 'bitmaps/rot12.xbm.orig'
fi
echo shar: Extracting \"'bitmaps/rot12.xbm'\" \(827 characters\)
sed "s/^X//" >'bitmaps/rot12.xbm' <<'END_OF_FILE'
X#define rot12_width 30
X#define rot12_height 30
Xstatic char rot12_bits[] = {
X   0xae, 0xaa, 0xff, 0x3f, 0x56, 0xd5, 0xff, 0x1f, 0xae, 0xaa, 0xff, 0x2f,
X   0x56, 0xd5, 0xff, 0x17, 0xae, 0xaa, 0xff, 0x2b, 0x56, 0xd5, 0xff, 0x15,
X   0xae, 0xaa, 0xff, 0x2a, 0x56, 0xd5, 0x7f, 0x15, 0xae, 0xaa, 0xbf, 0x2a,
X   0x56, 0xd5, 0x5f, 0x15, 0xae, 0xaa, 0xaf, 0x2a, 0x56, 0xd5, 0x57, 0x15,
X   0xae, 0xaa, 0xab, 0x2a, 0x56, 0xd5, 0x55, 0x15, 0xae, 0xaa, 0xaa, 0x2a,
X   0x56, 0xd5, 0xff, 0x3f, 0xae, 0xea, 0xff, 0x3f, 0x56, 0xf5, 0xff, 0x3f,
X   0xae, 0xfa, 0xff, 0x3f, 0x56, 0xfd, 0xff, 0x3f, 0xae, 0xfe, 0xff, 0x3f,
X   0x56, 0xff, 0xff, 0x3f, 0xae, 0xff, 0xff, 0x3f, 0xd6, 0xff, 0xff, 0x3f,
X   0xee, 0xff, 0xff, 0x3f, 0xfe, 0xff, 0xff, 0x3f, 0xfc, 0xff, 0xff, 0x3f,
X   0xf8, 0xff, 0xff, 0x3f, 0xf0, 0xff, 0xff, 0x3f, 0x00, 0x00, 0x00, 0x00};
END_OF_FILE
if test 827 -ne `wc -c <'bitmaps/rot12.xbm'`; then
    echo shar: \"'bitmaps/rot12.xbm'\" unpacked with wrong size!
fi
# end of 'bitmaps/rot12.xbm'
if test -f 'bitmaps/rot13.xbm' -a "${1}" != "-c" ; then 
  echo shar: Renaming existing file \"'bitmaps/rot13.xbm'\" to \"'bitmaps/rot13.xbm.orig'\"
  mv -f 'bitmaps/rot13.xbm' 'bitmaps/rot13.xbm.orig'
fi
echo shar: Extracting \"'bitmaps/rot13.xbm'\" \(827 characters\)
sed "s/^X//" >'bitmaps/rot13.xbm' <<'END_OF_FILE'
X#define rot13_width 30
X#define rot13_height 30
Xstatic char rot13_bits[] = {
X   0xaa, 0xaa, 0xff, 0x3f, 0x55, 0xd5, 0xff, 0x1f, 0xaa, 0xaa, 0xff, 0x2f,
X   0x55, 0xd5, 0xff, 0x17, 0xaa, 0xaa, 0xff, 0x2b, 0x55, 0xd5, 0xff, 0x15,
X   0xaa, 0xaa, 0xff, 0x2a, 0x55, 0xd5, 0x7f, 0x15, 0xaa, 0xaa, 0xbf, 0x2a,
X   0x55, 0xd5, 0x5f, 0x15, 0xaa, 0xaa, 0xaf, 0x2a, 0x55, 0xd5, 0x57, 0x15,
X   0xaa, 0xaa, 0xab, 0x2a, 0x55, 0xd5, 0x55, 0x15, 0xaa, 0xaa, 0xaa, 0x2a,
X   0xff, 0xff, 0xff, 0x3f, 0xff, 0xff, 0xff, 0x3f, 0xff, 0xff, 0xff, 0x3f,
X   0xff, 0xff, 0xff, 0x3f, 0xff, 0xff, 0xff, 0x3f, 0xff, 0xff, 0xff, 0x3f,
X   0xff, 0xff, 0xff, 0x3f, 0xff, 0xff, 0xff, 0x3f, 0xff, 0xff, 0xff, 0x3f,
X   0xff, 0xff, 0xff, 0x3f, 0xff, 0xff, 0xff, 0x3f, 0xff, 0xff, 0xff, 0x3f,
X   0xff, 0xff, 0xff, 0x3f, 0xff, 0xff, 0xff, 0x3f, 0x00, 0x00, 0x00, 0x00};
END_OF_FILE
if test 827 -ne `wc -c <'bitmaps/rot13.xbm'`; then
    echo shar: \"'bitmaps/rot13.xbm'\" unpacked with wrong size!
fi
# end of 'bitmaps/rot13.xbm'
if test -f 'bitmaps/rot14.xbm' -a "${1}" != "-c" ; then 
  echo shar: Renaming existing file \"'bitmaps/rot14.xbm'\" to \"'bitmaps/rot14.xbm.orig'\"
  mv -f 'bitmaps/rot14.xbm' 'bitmaps/rot14.xbm.orig'
fi
echo shar: Extracting \"'bitmaps/rot14.xbm'\" \(827 characters\)
sed "s/^X//" >'bitmaps/rot14.xbm' <<'END_OF_FILE'
X#define rot14_width 30
X#define rot14_height 30
Xstatic char rot14_bits[] = {
X   0xae, 0xaa, 0xff, 0x3f, 0x56, 0xd5, 0xff, 0x1f, 0xae, 0xaa, 0xff, 0x2f,
X   0x56, 0xd5, 0xff, 0x17, 0xae, 0xaa, 0xff, 0x2b, 0x56, 0xd5, 0xff, 0x15,
X   0xae, 0xaa, 0xff, 0x2a, 0x56, 0xd5, 0x7f, 0x15, 0xae, 0xaa, 0xbf, 0x2a,
X   0x56, 0xd5, 0x5f, 0x15, 0xae, 0xaa, 0xaf, 0x2a, 0x56, 0xd5, 0x57, 0x15,
X   0xae, 0xaa, 0xab, 0x2a, 0x56, 0xd5, 0x55, 0x15, 0xae, 0xaa, 0xaa, 0x2a,
X   0x56, 0xd5, 0xff, 0x3f, 0xae, 0xaa, 0xff, 0x3f, 0x56, 0xd5, 0xff, 0x3f,
X   0xae, 0xaa, 0xff, 0x3f, 0x56, 0xd5, 0xff, 0x3f, 0xae, 0xaa, 0xff, 0x3f,
X   0x56, 0xd5, 0xff, 0x3f, 0xae, 0xaa, 0xff, 0x3f, 0x56, 0xd5, 0xff, 0x3f,
X   0xae, 0xaa, 0xff, 0x3f, 0x56, 0xd5, 0xff, 0x3f, 0xae, 0xaa, 0xff, 0x3f,
X   0x56, 0xd5, 0xff, 0x3f, 0xae, 0xaa, 0xff, 0x3f, 0x56, 0xd5, 0xff, 0x3f};
END_OF_FILE
if test 827 -ne `wc -c <'bitmaps/rot14.xbm'`; then
    echo shar: \"'bitmaps/rot14.xbm'\" unpacked with wrong size!
fi
# end of 'bitmaps/rot14.xbm'
if test -f 'bitmaps/ticon.xbm' -a "${1}" != "-c" ; then 
  echo shar: Renaming existing file \"'bitmaps/ticon.xbm'\" to \"'bitmaps/ticon.xbm.orig'\"
  mv -f 'bitmaps/ticon.xbm' 'bitmaps/ticon.xbm.orig'
fi
echo shar: Extracting \"'bitmaps/ticon.xbm'\" \(3278 characters\)
sed "s/^X//" >'bitmaps/ticon.xbm' <<'END_OF_FILE'
X#define ticon_width 64
X#define ticon_height 64
Xstatic char ticon_bits[] = {
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x90,
X   0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x3c, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0xf0, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30,
X   0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0xc0, 0x01, 0x00,
X   0x00, 0x00, 0x00, 0x38, 0x00, 0x40, 0x0e, 0x00, 0x00, 0x00, 0x00, 0x7c,
X   0x00, 0xc0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x83, 0x01, 0x40, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x01, 0x01, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00,
X   0x02, 0x10, 0x01, 0x00, 0x00, 0x00, 0x80, 0x10, 0x02, 0x10, 0x01, 0x00,
X   0x00, 0x00, 0x80, 0x10, 0x02, 0x10, 0x01, 0x00, 0x00, 0x00, 0x80, 0x10,
X   0x02, 0x10, 0x01, 0x00, 0x00, 0x00, 0x80, 0x00, 0x02, 0x08, 0x02, 0x00,
X   0x00, 0x00, 0x00, 0x01, 0x01, 0x48, 0x02, 0x00, 0x00, 0x00, 0x00, 0x83,
X   0x01, 0x08, 0x02, 0x00, 0x00, 0x00, 0x00, 0x7c, 0x00, 0x08, 0x02, 0x00,
X   0x00, 0x00, 0xe0, 0xff, 0xff, 0xff, 0x1f, 0x00, 0x00, 0x00, 0x3c, 0x44,
X   0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 0x07, 0x44, 0x00, 0x00, 0xc0, 0x00,
X   0x00, 0xc0, 0x01, 0x44, 0x00, 0x00, 0x80, 0x00, 0x00, 0x70, 0x00, 0x44,
X   0x00, 0x00, 0x80, 0x00, 0x00, 0x18, 0x00, 0x44, 0x00, 0x00, 0x80, 0x00,
X   0x00, 0x0c, 0x00, 0x44, 0x7c, 0x3e, 0x9f, 0x00, 0x00, 0x06, 0x00, 0x44,
X   0x44, 0x22, 0x91, 0x00, 0x00, 0x03, 0x00, 0x44, 0x44, 0x22, 0x91, 0x00,
X   0x00, 0x81, 0x0f, 0x44, 0x44, 0x22, 0x91, 0x00, 0x00, 0xe1, 0x3f, 0x44,
X   0x44, 0x22, 0x91, 0x00, 0x00, 0x31, 0x60, 0x44, 0x44, 0x22, 0x91, 0x00,
X   0x00, 0x19, 0xc0, 0x44, 0x44, 0x22, 0x91, 0x00, 0x00, 0x09, 0x80, 0x44,
X   0x44, 0x22, 0x91, 0x00, 0x00, 0x89, 0x88, 0x44, 0x44, 0x22, 0x91, 0x00,
X   0x00, 0xc9, 0x98, 0x44, 0x44, 0x22, 0x91, 0x00, 0x00, 0x09, 0x80, 0x44,
X   0x44, 0x22, 0x91, 0x00, 0x00, 0x09, 0x80, 0x44, 0x44, 0x22, 0x91, 0x00,
X   0x00, 0xc9, 0x98, 0x44, 0x44, 0x22, 0x91, 0x00, 0x00, 0x09, 0x80, 0x44,
X   0x7c, 0x3e, 0x9f, 0x00, 0x00, 0x09, 0x80, 0x44, 0x7c, 0x3e, 0x9f, 0x00,
X   0x00, 0xc9, 0x98, 0x44, 0x00, 0x00, 0x80, 0x00, 0x00, 0x89, 0x88, 0x44,
X   0x00, 0x00, 0x80, 0x00, 0x00, 0x09, 0x80, 0x44, 0x00, 0x00, 0x80, 0x00,
X   0x00, 0x09, 0x80, 0x44, 0x00, 0x00, 0x80, 0x00, 0x00, 0xf9, 0xff, 0x44,
X   0x00, 0x00, 0x80, 0x00, 0x00, 0x01, 0x00, 0x44, 0x00, 0x00, 0x80, 0x00,
X   0x00, 0x01, 0x00, 0x44, 0x00, 0x00, 0x80, 0x00, 0x00, 0xff, 0xff, 0xff,
X   0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
END_OF_FILE
if test 3278 -ne `wc -c <'bitmaps/ticon.xbm'`; then
    echo shar: \"'bitmaps/ticon.xbm'\" unpacked with wrong size!
fi
# end of 'bitmaps/ticon.xbm'
if test -f 'patches04' -a "${1}" != "-c" ; then 
  echo shar: Renaming existing file \"'patches04'\" to \"'patches04.orig'\"
  mv -f 'patches04' 'patches04.orig'
fi
echo shar: Extracting \"'patches04'\" \(4846 characters\)
sed "s/^X//" >'patches04' <<'END_OF_FILE'
XAnother patch for "Generic Tetris":
X	An HP time structure fix
X	New set of bitmaps
X
Xdiff -r -c tetris.2.1.orig/README tetris.2.1/README
X*** README.orig	Thu Jan 21 12:17:33 1993
X--- README	Sat Feb 27 23:30:25 1993
X***************
X*** 1,33 ****
X  	GENERIC TETRIS
X! 	==============	Yet Another Tetris Game on X, V2.1.3
X  
X  
X  WHY ANOTHER?
X  
X      Because this one is simple, easy to build, and portable -- actually
X!     the blocks are bigger, more comfortable for your eyes. It only uses
X!     Xlib -- no "toolkit" kind of thing. People have tested it on the
X!     following platforms:
X  
X  	Bull DPX/2		System V	?
X  	DEC 5000		Ultrix 4.2A	X11R4
X  	DEC Alpha AXP		DEC OSF/1 V1.2	?
X! 	HP 700			HP-UX 8.07	X11R5
X  	Iris 4D			IRIX 4.0.1	Motif
X  	Sun4, SPARC		SunOS 4.1.x	X11R4, X11R5
X  	Sun SPARC		Solaris 2.1
X  		add to link: -L/usr/ucblib -lucb -lelf -R/usr/ucblib
X  	Sequent S81		DYNIX 3.2.0	X11R5
X  
X      If your's is not in this list, please let me know -- thanks. The
X      most updated source could be found on export.lcs.mit.edu under
X      /contrib.
X  
X!     A System V port (Sequent Dynix/ptx) for earlier versions has been
X!     added by "Hans-Wolfgang Loidl" (hwloidl@risc.uni-linz.ac.at). The
X!     source can be retrieved by anonymous FTP to:
X  	Host:	melmac.risc.uni-linz.ac.at
X! 	File:	/pub/misc/gtetris.tar.Z
X  
X  
X  HOW TO BUILD?
X--- 1,40 ----
X  	GENERIC TETRIS
X! 	==============	Yet Another Tetris Game on X, V2.1.4
X  
X  
X  WHY ANOTHER?
X  
X      Because this one is simple, easy to build, and portable -- actually
X!     the blocks are round-cornered and bigger, more comfortable for your
X!     eyes. It only uses Xlib -- no "toolkit" kind of thing. People have
X!     tested it on the following platforms:
X  
X  	Bull DPX/2		System V	?
X+ 	DEC 3100		Ultrix 4.3	X11R3
X  	DEC 5000		Ultrix 4.2A	X11R4
X  	DEC Alpha AXP		DEC OSF/1 V1.2	?
X! 	HP 700			HP-UX 8.0x	X11R5
X! 				Mt. Xinu 4.3	X11R5
X! 	IBM RS6000		AIX V3.2	X11R3
X! 	Intel 486DX		Esix 4.0.4	?
X! 				Linux		?
X  	Iris 4D			IRIX 4.0.1	Motif
X  	Sun4, SPARC		SunOS 4.1.x	X11R4, X11R5
X  	Sun SPARC		Solaris 2.1
X  		add to link: -L/usr/ucblib -lucb -lelf -R/usr/ucblib
X  	Sequent S81		DYNIX 3.2.0	X11R5
X+ 				Dynix/ptx	?
X  
X      If your's is not in this list, please let me know -- thanks. The
X      most updated source could be found on export.lcs.mit.edu under
X      /contrib.
X  
X!     A System V port (Sequent Dynix/ptx) has been added by
X!     "Hans-Wolfgang Loidl" <hwloidl@risc.uni-linz.ac.at>. The source can
X!     be retrieved by anonymous FTP to:
X! 
X  	Host:	melmac.risc.uni-linz.ac.at
X! 	File:	/pub/linux/upload/misc/gtetris3.taz
X  
X  
X  HOW TO BUILD?
X***************
X*** 85,90 ****
X--- 92,102 ----
X  
X  HISTORY -- Oh no, not again: I failed my history course!
X  Well ... ACKNOWLEDGEMENTS
X+ 
X+   [Feb 27, 93]  V2.1.4: HP time structure problem resulting "hanging
X+ 		blocks". By Marcus Leech <mleech@bnr.ca>. New set of
X+ 		bitmaps contributed by Atsuhiko Yamanaka
X+ 		<yamanaka@ecip.tohoku.ac.jp>.
X  
X    [Jan 21, 93]  V2.1.3: Two bugs in finding user environment:
X  		"endpwent()" by Jari Tavi <jpt@rixrax.enet.dec.com>;
XCommon subdirectories: tetris.2.1.orig/X11 and tetris.2.1/X11
XCommon subdirectories: tetris.2.1.orig/bitmaps and tetris.2.1/bitmaps
Xdiff -r -c tetris.2.1.orig/playing.c tetris.2.1/playing.c
X*** playing.c.orig	Tue Jan 19 11:44:22 1993
X--- playing.c	Sat Feb 20 11:52:57 1993
X***************
X*** 60,67 ****
X  	    delay.tv_sec = nextFall.tv_sec - now.tv_sec;
X  	    delay.tv_usec = nextFall.tv_usec - now.tv_usec;
X  	    realTime(&delay);
X! 	    if ((delay.tv_sec > 0) ||
X! 		    ((delay.tv_sec == 0) && (delay.tv_usec > 0))) {
X  		/* sleep */
X  		(void) select(conNum + 1, (fd_set *) & readfd,
X  		       (fd_set *) & writefd, (fd_set *) & exceptfd, &delay);
X--- 60,68 ----
X  	    delay.tv_sec = nextFall.tv_sec - now.tv_sec;
X  	    delay.tv_usec = nextFall.tv_usec - now.tv_usec;
X  	    realTime(&delay);
X! 	    if (((long) delay.tv_sec > 0) ||
X! 		    (((long) delay.tv_sec == 0) &&
X! 		    ((long) delay.tv_usec > 0))) {
X  		/* sleep */
X  		(void) select(conNum + 1, (fd_set *) & readfd,
X  		       (fd_set *) & writefd, (fd_set *) & exceptfd, &delay);
Xdiff -r -c tetris.2.1.orig/tetris.c tetris.2.1/tetris.c
X*** tetris.2.1.orig/tetris.c	Thu Jan 21 12:17:46 1993
X--- tetris.2.1/tetris.c	Sat Feb 20 11:55:19 1993
X***************
X*** 105,111 ****
X      char           *argv[];
X  {
X      (void) fprintf(stderr,
X! 		   "                 GENERIC TETRIS V2.1.3\n");
X      (void) fprintf(stderr,
X  	 "Copyright (C) 1992-93      Q. Alex Zhao, azhao@cs.arizona.edu\n");
X      (void) fprintf(stderr,
X--- 105,111 ----
X      char           *argv[];
X  {
X      (void) fprintf(stderr,
X! 		   "                 GENERIC TETRIS V2.1.4\n");
X      (void) fprintf(stderr,
X  	 "Copyright (C) 1992-93      Q. Alex Zhao, azhao@cs.arizona.edu\n");
X      (void) fprintf(stderr,
END_OF_FILE
if test 4846 -ne `wc -c <'patches04'`; then
    echo shar: \"'patches04'\" unpacked with wrong size!
fi
# end of 'patches04'
echo shar: End of archive 1 \(of 1\).
cp /dev/null ark1isdone
MISSING=""
for I in 1 ; do
    if test ! -f ark${I}isdone ; then
	MISSING="${MISSING} ${I}"
    fi
done
if test "${MISSING}" = "" ; then
    echo You have the archive.
    rm -f ark[1-9]isdone
else
    echo You still need to unpack the following archives:
    echo "        " ${MISSING}
fi
##  End of shell archive.
exit 0
