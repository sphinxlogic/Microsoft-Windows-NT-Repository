Path: uunet!news.tek.com!master!saab!billr
From: billr@saab.CNA.TEK.COM (Bill Randle)
Newsgroups: comp.sources.games
Subject: v15i051:  xbomb - minesweeper game with extra features, Part04/04
Message-ID: <4226@master.CNA.TEK.COM>
Date: 18 Jan 93 20:09:48 GMT
Sender: news@master.CNA.TEK.COM
Lines: 342
Approved: billr@saab.CNA.TEK.COM
Xref: uunet comp.sources.games:1550

Submitted-by: johnh@FICUS.CS.UCLA.EDU (John Heidemann)
Posting-number: Volume 15, Issue 51
Archive-name: xbomb/Part04
Environment: X11, Xlib

#! /bin/sh
# This is a shell archive.  Remove anything before this line, then unpack
# it by saving it into a file and typing "sh file".  To overwrite existing
# files, type "sh file -c".  You can also feed this as standard input via
# unshar, or by typing "sh <file", e.g..  If this archive is complete, you
# will see the following message at the end:
#		"End of archive 4 (of 4)."
# Contents:  TODO bitmaps/old/bomb.bit bitmaps/old/ebomb.bit
#   bitmaps/old/empty.bit bitmaps/old/flag.bit bitmaps/old/icon.bit
#   bitmaps/old/known0.bit bitmaps/old/known2.bit
#   bitmaps/old/known3.bit bitmaps/old/known9.bit icon.bit solver_io.h
# Wrapped by billr@saab on Mon Jan 18 12:03:07 1993
PATH=/bin:/usr/bin:/usr/ucb ; export PATH
if test -f 'TODO' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'TODO'\"
else
echo shar: Extracting \"'TODO'\" \(172 characters\)
sed "s/^X//" >'TODO' <<'END_OF_FILE'
Xarguments to solvers
Xrecord of number of times personally played at # of bombs
X
XNew bitmaps: chinese, hebrew, roman (numerals), braile, dominoe
X
XFix roman numeral scoring.
END_OF_FILE
if test 172 -ne `wc -c <'TODO'`; then
    echo shar: \"'TODO'\" unpacked with wrong size!
fi
# end of 'TODO'
fi
if test -f 'bitmaps/old/bomb.bit' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'bitmaps/old/bomb.bit'\"
else
echo shar: Extracting \"'bitmaps/old/bomb.bit'\" \(875 characters\)
sed "s/^X//" >'bitmaps/old/bomb.bit' <<'END_OF_FILE'
X#define bomb_width 32
X#define bomb_height 32
Xstatic char bomb_bits[] = {
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x00, 0x50, 0x00,
X   0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0xfe, 0x01, 0x00, 0x80, 0x51, 0x00,
X   0x00, 0x80, 0x50, 0x00, 0x00, 0x80, 0x08, 0x00, 0x00, 0x80, 0x00, 0x00,
X   0x00, 0x80, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0xf0, 0x07, 0x00,
X   0x00, 0xfc, 0x1f, 0x00, 0x00, 0xfe, 0x3f, 0x00, 0x00, 0xff, 0x7f, 0x00,
X   0x80, 0xff, 0xff, 0x00, 0x80, 0xff, 0xff, 0x00, 0xc0, 0xff, 0xff, 0x01,
X   0xc0, 0xff, 0xff, 0x01, 0xc0, 0xff, 0xff, 0x01, 0xc0, 0xff, 0xff, 0x01,
X   0xc0, 0xff, 0xff, 0x01, 0xc0, 0xff, 0xff, 0x01, 0xc0, 0xff, 0xff, 0x01,
X   0x80, 0xff, 0xff, 0x00, 0x80, 0xff, 0xff, 0x00, 0x00, 0xff, 0x7f, 0x00,
X   0x00, 0xfe, 0x3f, 0x00, 0x00, 0xfc, 0x1f, 0x00, 0x00, 0xf0, 0x07, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
END_OF_FILE
if test 875 -ne `wc -c <'bitmaps/old/bomb.bit'`; then
    echo shar: \"'bitmaps/old/bomb.bit'\" unpacked with wrong size!
fi
# end of 'bitmaps/old/bomb.bit'
fi
if test -f 'bitmaps/old/ebomb.bit' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'bitmaps/old/ebomb.bit'\"
else
echo shar: Extracting \"'bitmaps/old/ebomb.bit'\" \(878 characters\)
sed "s/^X//" >'bitmaps/old/ebomb.bit' <<'END_OF_FILE'
X#define ebomb_width 32
X#define ebomb_height 32
Xstatic char ebomb_bits[] = {
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x00, 0x50, 0x00,
X   0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0xfe, 0x01, 0x00, 0x80, 0x51, 0x00,
X   0x00, 0x80, 0x50, 0x00, 0x00, 0x80, 0x08, 0x00, 0x00, 0x80, 0x00, 0x00,
X   0x00, 0x80, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0xf0, 0x07, 0x00,
X   0x00, 0xfc, 0x1f, 0x00, 0x00, 0x0e, 0x38, 0x00, 0x00, 0x07, 0x70, 0x00,
X   0x80, 0x03, 0xe0, 0x00, 0x80, 0x01, 0xc0, 0x00, 0xc0, 0x00, 0x80, 0x01,
X   0xc0, 0x00, 0x80, 0x01, 0xc0, 0x00, 0x80, 0x01, 0xc0, 0x00, 0x80, 0x01,
X   0xc0, 0x00, 0x80, 0x01, 0xc0, 0x00, 0x80, 0x01, 0xc0, 0x00, 0x80, 0x01,
X   0x80, 0x01, 0x80, 0x00, 0x80, 0x01, 0xc0, 0x00, 0x00, 0x03, 0x60, 0x00,
X   0x00, 0x0e, 0x38, 0x00, 0x00, 0xfc, 0x1f, 0x00, 0x00, 0xf0, 0x07, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
END_OF_FILE
if test 878 -ne `wc -c <'bitmaps/old/ebomb.bit'`; then
    echo shar: \"'bitmaps/old/ebomb.bit'\" unpacked with wrong size!
fi
# end of 'bitmaps/old/ebomb.bit'
fi
if test -f 'bitmaps/old/empty.bit' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'bitmaps/old/empty.bit'\"
else
echo shar: Extracting \"'bitmaps/old/empty.bit'\" \(878 characters\)
sed "s/^X//" >'bitmaps/old/empty.bit' <<'END_OF_FILE'
X#define empty_width 32
X#define empty_height 32
Xstatic char empty_bits[] = {
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x02, 0x00,
X   0x00, 0x00, 0x01, 0x00, 0x00, 0x80, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
END_OF_FILE
if test 878 -ne `wc -c <'bitmaps/old/empty.bit'`; then
    echo shar: \"'bitmaps/old/empty.bit'\" unpacked with wrong size!
fi
# end of 'bitmaps/old/empty.bit'
fi
if test -f 'bitmaps/old/flag.bit' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'bitmaps/old/flag.bit'\"
else
echo shar: Extracting \"'bitmaps/old/flag.bit'\" \(875 characters\)
sed "s/^X//" >'bitmaps/old/flag.bit' <<'END_OF_FILE'
X#define flag_width 32
X#define flag_height 32
Xstatic char flag_bits[] = {
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x01, 0x00, 0x00, 0x80, 0x07, 0x00,
X   0x00, 0x80, 0x1f, 0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x80, 0xff, 0x00,
X   0x00, 0x80, 0xff, 0x03, 0x00, 0x80, 0xff, 0x07, 0x00, 0x80, 0xff, 0x01,
X   0x00, 0x80, 0x3f, 0x00, 0x00, 0x80, 0x03, 0x00, 0x00, 0x80, 0x00, 0x00,
X   0x00, 0x80, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00,
X   0x00, 0x80, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00,
X   0x00, 0x80, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00,
X   0x00, 0x80, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00,
X   0x00, 0x80, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
END_OF_FILE
if test 875 -ne `wc -c <'bitmaps/old/flag.bit'`; then
    echo shar: \"'bitmaps/old/flag.bit'\" unpacked with wrong size!
fi
# end of 'bitmaps/old/flag.bit'
fi
if test -f 'bitmaps/old/icon.bit' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'bitmaps/old/icon.bit'\"
else
echo shar: Extracting \"'bitmaps/old/icon.bit'\" \(875 characters\)
sed "s/^X//" >'bitmaps/old/icon.bit' <<'END_OF_FILE'
X#define icon_width 32
X#define icon_height 32
Xstatic char icon_bits[] = {
X   0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x00, 0x28, 0x00,
X   0x00, 0x00, 0x90, 0x00, 0x00, 0x00, 0x6c, 0x00, 0x00, 0x00, 0x17, 0x00,
X   0x00, 0x00, 0x61, 0x00, 0x00, 0x00, 0x81, 0x00, 0x00, 0x00, 0x01, 0x00,
X   0x00, 0x80, 0x01, 0x00, 0x00, 0xe0, 0x0f, 0x00, 0x00, 0x18, 0x30, 0x00,
X   0x00, 0x04, 0x40, 0x00, 0x00, 0x02, 0x80, 0x00, 0x00, 0x01, 0x00, 0x01,
X   0x00, 0x01, 0x00, 0x01, 0x80, 0x00, 0x00, 0x02, 0x80, 0x00, 0x00, 0x02,
X   0x80, 0x00, 0x00, 0x02, 0x80, 0x00, 0x00, 0x02, 0x80, 0x00, 0x00, 0x02,
X   0x80, 0x00, 0x00, 0x02, 0x80, 0x00, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01,
X   0x00, 0x01, 0x00, 0x01, 0x00, 0x02, 0x80, 0x00, 0x00, 0x04, 0x40, 0x00,
X   0x00, 0x18, 0x30, 0x00, 0x00, 0xe0, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
END_OF_FILE
if test 875 -ne `wc -c <'bitmaps/old/icon.bit'`; then
    echo shar: \"'bitmaps/old/icon.bit'\" unpacked with wrong size!
fi
# end of 'bitmaps/old/icon.bit'
fi
if test -f 'bitmaps/old/known0.bit' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'bitmaps/old/known0.bit'\"
else
echo shar: Extracting \"'bitmaps/old/known0.bit'\" \(881 characters\)
sed "s/^X//" >'bitmaps/old/known0.bit' <<'END_OF_FILE'
X#define known0_width 32
X#define known0_height 32
Xstatic char known0_bits[] = {
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0xc0, 0x07, 0x00, 0x00, 0x38, 0x38, 0x00, 0x00, 0x04, 0x40, 0x00,
X   0x00, 0x02, 0x80, 0x00, 0x00, 0x01, 0x00, 0x01, 0x80, 0x00, 0x00, 0x02,
X   0x80, 0x00, 0x00, 0x02, 0x80, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x04,
X   0x40, 0x00, 0x00, 0x04, 0x40, 0x00, 0x00, 0x04, 0x40, 0x00, 0x00, 0x04,
X   0x40, 0x00, 0x00, 0x04, 0x80, 0x00, 0x00, 0x02, 0x80, 0x00, 0x00, 0x02,
X   0x80, 0x00, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x02, 0x80, 0x00,
X   0x00, 0x04, 0x40, 0x00, 0x00, 0x38, 0x38, 0x00, 0x00, 0xc0, 0x07, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
END_OF_FILE
if test 881 -ne `wc -c <'bitmaps/old/known0.bit'`; then
    echo shar: \"'bitmaps/old/known0.bit'\" unpacked with wrong size!
fi
# end of 'bitmaps/old/known0.bit'
fi
if test -f 'bitmaps/old/known2.bit' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'bitmaps/old/known2.bit'\"
else
echo shar: Extracting \"'bitmaps/old/known2.bit'\" \(881 characters\)
sed "s/^X//" >'bitmaps/old/known2.bit' <<'END_OF_FILE'
X#define known2_width 32
X#define known2_height 32
Xstatic char known2_bits[] = {
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x07, 0x00, 0x00, 0x0c, 0x04, 0x00,
X   0x00, 0x02, 0x08, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x10, 0x00,
X   0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x20, 0x00,
X   0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x20, 0x00,
X   0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x10, 0x00,
X   0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0xfc, 0x0c, 0x00,
X   0x00, 0x04, 0x03, 0x00, 0x00, 0x04, 0x0e, 0x00, 0x00, 0x04, 0x32, 0x00,
X   0x00, 0xfc, 0x41, 0x00, 0x00, 0x00, 0x80, 0x0e, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
END_OF_FILE
if test 881 -ne `wc -c <'bitmaps/old/known2.bit'`; then
    echo shar: \"'bitmaps/old/known2.bit'\" unpacked with wrong size!
fi
# end of 'bitmaps/old/known2.bit'
fi
if test -f 'bitmaps/old/known3.bit' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'bitmaps/old/known3.bit'\"
else
echo shar: Extracting \"'bitmaps/old/known3.bit'\" \(881 characters\)
sed "s/^X//" >'bitmaps/old/known3.bit' <<'END_OF_FILE'
X#define known3_width 32
X#define known3_height 32
Xstatic char known3_bits[] = {
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0xff, 0x1f, 0x00, 0x00, 0xff, 0x0f, 0x00, 0x00, 0x00, 0x0c, 0x00,
X   0x00, 0x00, 0x07, 0x00, 0x00, 0x80, 0x01, 0x00, 0x00, 0xc0, 0x00, 0x00,
X   0x00, 0x60, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00,
X   0x00, 0x0c, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0xfe, 0x0f, 0x00,
X   0x00, 0xf8, 0x0f, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x00, 0x30, 0x00,
X   0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x30, 0x00,
X   0x00, 0x00, 0x10, 0x00, 0x00, 0x04, 0x18, 0x00, 0x00, 0x04, 0x0e, 0x00,
X   0x00, 0xbc, 0x07, 0x00, 0x00, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
END_OF_FILE
if test 881 -ne `wc -c <'bitmaps/old/known3.bit'`; then
    echo shar: \"'bitmaps/old/known3.bit'\" unpacked with wrong size!
fi
# end of 'bitmaps/old/known3.bit'
fi
if test -f 'bitmaps/old/known9.bit' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'bitmaps/old/known9.bit'\"
else
echo shar: Extracting \"'bitmaps/old/known9.bit'\" \(881 characters\)
sed "s/^X//" >'bitmaps/old/known9.bit' <<'END_OF_FILE'
X#define known9_width 32
X#define known9_height 32
Xstatic char known9_bits[] = {
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0xf0, 0x07, 0x00, 0x00, 0x0c, 0x0c, 0x00, 0x00, 0x04, 0x08, 0x00,
X   0x00, 0x02, 0x08, 0x00, 0x00, 0x02, 0x08, 0x00, 0x00, 0x02, 0x08, 0x00,
X   0x00, 0x06, 0x08, 0x00, 0x00, 0x3c, 0x0e, 0x00, 0x00, 0xc0, 0x09, 0x00,
X   0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x08, 0x00,
X   0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0x00,
X   0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x02, 0x00,
X   0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0xc0, 0x00, 0x00,
X   0x00, 0x70, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
END_OF_FILE
if test 881 -ne `wc -c <'bitmaps/old/known9.bit'`; then
    echo shar: \"'bitmaps/old/known9.bit'\" unpacked with wrong size!
fi
# end of 'bitmaps/old/known9.bit'
fi
if test -f 'icon.bit' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'icon.bit'\"
else
echo shar: Extracting \"'icon.bit'\" \(875 characters\)
sed "s/^X//" >'icon.bit' <<'END_OF_FILE'
X#define icon_width 32
X#define icon_height 32
Xstatic char icon_bits[] = {
X   0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x00, 0x28, 0x00,
X   0x00, 0x00, 0x90, 0x00, 0x00, 0x00, 0x6c, 0x00, 0x00, 0x00, 0x17, 0x00,
X   0x00, 0x00, 0x61, 0x00, 0x00, 0x00, 0x81, 0x00, 0x00, 0x00, 0x01, 0x00,
X   0x00, 0x80, 0x01, 0x00, 0x00, 0xe0, 0x0f, 0x00, 0x00, 0x18, 0x30, 0x00,
X   0x00, 0x04, 0x40, 0x00, 0x00, 0x02, 0x80, 0x00, 0x00, 0x01, 0x00, 0x01,
X   0x00, 0xc1, 0x07, 0x01, 0x80, 0x40, 0x08, 0x02, 0x80, 0x40, 0x08, 0x02,
X   0x80, 0x40, 0x0c, 0x02, 0x80, 0xc0, 0x07, 0x02, 0x80, 0x40, 0x0c, 0x02,
X   0x80, 0x40, 0x10, 0x02, 0x80, 0x40, 0x10, 0x02, 0x00, 0x41, 0x10, 0x01,
X   0x00, 0xc1, 0x0f, 0x01, 0x00, 0x02, 0x80, 0x00, 0x00, 0x04, 0x40, 0x00,
X   0x00, 0x18, 0x30, 0x00, 0x00, 0xe0, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
END_OF_FILE
if test 875 -ne `wc -c <'icon.bit'`; then
    echo shar: \"'icon.bit'\" unpacked with wrong size!
fi
# end of 'icon.bit'
fi
if test -f 'solver_io.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'solver_io.h'\"
else
echo shar: Extracting \"'solver_io.h'\" \(432 characters\)
sed "s/^X//" >'solver_io.h' <<'END_OF_FILE'
X
X/*
X * solver_io.h
X */
X
X#define  MAXWIDTH	100
X#define  MAXHEIGHT	100
X
Xenum status_t {
X	empty, bomb, bomb_flag, empty_flag, edge, unknown, last_status
X};
X
Xstruct generic_cell {
X	enum status_t status;
X	int neighbors;
X	int neighbor_bombs;
X	int neighbor_unknowns;
X	int ted;
X};
X
Xextern struct generic_cell map[MAXWIDTH+2][MAXHEIGHT+2];
X
Xextern int numbombs;
Xextern int width, height;
X
Xextern int mouse_x, mouse_y;
X
Xextern int counts[];
X
END_OF_FILE
if test 432 -ne `wc -c <'solver_io.h'`; then
    echo shar: \"'solver_io.h'\" unpacked with wrong size!
fi
# end of 'solver_io.h'
fi
echo shar: End of archive 4 \(of 4\).
cp /dev/null ark4isdone
MISSING=""
for I in 1 2 3 4 ; do
    if test ! -f ark${I}isdone ; then
	MISSING="${MISSING} ${I}"
    fi
done
if test "${MISSING}" = "" ; then
    echo You have unpacked all 4 archives.
    rm -f ark[1-9]isdone
else
    echo You still need to unpack the following archives:
    echo "        " ${MISSING}
fi
##  End of shell archive.
exit 0
