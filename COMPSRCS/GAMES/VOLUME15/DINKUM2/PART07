Path: uunet!news.tek.com!master!saab!billr
From: billr@saab.CNA.TEK.COM (Bill Randle)
Newsgroups: comp.sources.games
Subject: v15i043:  dinkum2 - australian text adventure game, Part07/07
Message-ID: <4204@master.CNA.TEK.COM>
Date: 15 Jan 93 00:54:59 GMT
Sender: news@master.CNA.TEK.COM
Lines: 619
Approved: billr@saab.CNA.TEK.COM
Xref: uunet comp.sources.games:1542

Submitted-by: Gary Allen <gary@sun.mech.uq.oz.au>
Posting-number: Volume 15, Issue 43
Archive-name: dinkum2/Part07
Supersedes: dinkum: Volume 15, Issue 21-26
Environment: Unix, DOS

	[Due to moderator screwup, this didn't get posted with the original
	 batch. A thousand apologies....  -br]

#! /bin/sh
# This is a shell archive.  Remove anything before this line, then unpack
# it by saving it into a file and typing "sh file".  To overwrite existing
# files, type "sh file -c".  You can also feed this as standard input via
# unshar, or by typing "sh <file", e.g..  If this archive is complete, you
# will see the following message at the end:
#		"End of archive 7 (of 7)."
# Contents:  dink_sym.h
# Wrapped by billr@saab on Wed Jan 13 19:20:19 1993
PATH=/bin:/usr/bin:/usr/ucb ; export PATH
if test -f 'dink_sym.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'dink_sym.h'\"
else
echo shar: Extracting \"'dink_sym.h'\" \(12227 characters\)
sed "s/^X//" >'dink_sym.h' <<'END_OF_FILE'
X/***********************************************************/
X/*                                                         */
X/*          --- Dinkum Symbol Definition File ---          */
X/*                                                         */
X/*            Version:  Mk 1.12,   21 December 1992        */
X/*                                                         */
X/***********************************************************/
X
X#include <stdio.h> 
X
X/* Deal with K&R C */
X#if sun
X#define void	int
X#define PROTOTYPE	0
X#else
X#define PROTOTYPE	1
X#endif
X 
X/* Room code numbers */
X/*  These code numbers 'n' point to the table entry in room[n][] */
X#define R_wall		-1
X#define R_meadow	0
X#define R_dike		3
X#define R_river_edge	4
X#define R_river		5
X#define R_stream	6
X#define R_slime		7
X#define R_bunyip	8
X#define R_river_exit	9
X#define R_forest	11
X#define R_billabong	14
X#define R_taipan	18
X#define R_mine_head	22
X#define R_lift_entr	27
X#define R_bitumen	29
X#define R_office_entr	36
X#define R_office_hall	37
X#define R_office_mang	38
X#define R_geo_w		39
X#define R_store_room	40
X#define R_geo_e		41
X#define R_lift_inside	43
X#define R_L49_entr      44
X#define R_L67_entr      45
X#define R_L82_entr      46
X#define R_hideout_entr	144
X#define R_hideout	146
X#define R_bend		147
X#define R_no_treasure	159
X#define R_manhole_1	166
X#define R_manhole_2	170
X#define R_foreman	177
X#define R_blast_point	185
X#define R_ufo_w		191
X#define R_ufo_nw	192
X#define R_ufo_n		193
X#define R_ufo_ne	194
X#define R_ufo_e		195
X#define R_ufo_se	196
X#define R_ufo_s		197
X#define R_ufo_sw	198
X#define R_air_lock	199
X#define R_ship_passage	200
X#define R_flight_deck	201
X#define R_panel		202
X#define R_transport	203
X#define R_gleep_tank	206
X#define R_warning	217
X#define R_gong		238
X#define R_closet	240 
X#define R_guard 	241
X#define R_prayer	242
X#define R_road_kill_s	245
X#define R_road_kill_n	248
X
X/* Room category indicator for room[n][i] where "i" is below */
X#define M_rm_type	10
X#define M_obj_cnt	11
X#define M_rm_status	12
X#define M_monster	13
X#define M_gleep		14
X#define M_descp		15
X
X/* Object category indicator for object[n][i] where "i" is below */
X#define J_loc		0
X#define J_value	 	1
X#define J_type		2
X#define J_parse_id	3
X#define J_weight	4
X#define J_property	5
X
X/* Room type, referred to by room[n][M_rm_type] */
X#define T_lethal	-1
X#define T_short_descp	0
X#define T_long_descp	1
X#define T_action_obj	2
X#define T_was_long	3
X#define T_unmovable_obj	4
X#define T_looping	5
X
X/* Room status, referred to by room[n][M_rm_status] */
X#define S_closed	0
X#define S_revealed	1
X#define S_flashing	1
X#define S_dialed	2
X#define S_unlocked	2
X#define S_open		3
X#define S_L0		4
X#define S_L49		5
X#define S_L67		6
X#define S_L82		7
X#define S_kicked	8
X#define S_off		0
X#define S_on		1
X
X/* Vocabulary code numbers */
X#define V_LINE_END	-1
X#define V_NULL		0
X#define V_MOVE		1
X#define V_PLURAL	2
X#define V_VERB_ONLY	3
X#define V_DIRECTION	4
X/* --- below are real word symbols --- */
X#define V_east		3
X#define V_west		4
X#define V_up		5
X#define V_down	 	6
X#define V_u		15
X#define V_quit		21
X#define V_unlock	22
X#define V_lock		23
X#define V_take		24
X#define V_leave		25
X#define V_drop		26
X#define V_can		27
X#define V_bottle	28
X#define V_mat		29  
X#define V_key		30
X#define V_butt		31
X#define V_look		32
X#define V_door		33
X#define V_open		34
X#define V_get		35
X#define V_throw		36
X#define V_turn		37
X#define V_on		38
X#define V_off		39
X#define V_push		40
X#define V_button	41
X#define V_enter		42
X#define V_switch	43
X#define V_zero		44
X#define V_forty_nine	45
X#define V_sixty_seven	46
X#define V_eighty_two	47
X#define V_0		48
X#define V_49		49
X#define V_67		50
X#define V_82		51
X#define V_beer		52
X#define V_lager		53
X#define V_doormat	54
X#define V_lift		55
X#define V_on_q		56
X#define V_off_q		57
X#define V_svc		58
X#define V_map		59
X#define V_picture	60
X#define V_safe		61
X#define V_dial		62
X#define V_paper		63
X#define V_put		64
X#define V_close		65
X#define V_read		66
X#define V_gold		67
X#define V_bar		68
X#define V_dynamite	69
X#define V_rifle		70
X#define V_M16		71
X#define V_m16		72
X#define V_cap		73
X#define V_matches	74
X#define V_diamond	75
X#define V_ring		76
X#define V_ruby		77
X#define V_silver	78
X#define V_coin		79
X#define V_bill		80
X#define V_money		81
X#define V_teapot	82
X#define V_clip		83
X#define V_ammo		84
X#define V_box		85
X#define V_stick		86
X#define V_pills		87
X#define V_orange	88
X#define V_glowing	89
X#define V_saphire	90
X#define V_emerald	91
X#define V_score		92
X#define V_inventory	93
X#define V_examine	94
X#define V_describe	95
X#define V_drink 	96
X#define V_fill		97
X#define V_water		98
X#define V_fourex	99
X#define V_invent	100
X#define V_l		101
X#define V_press		102
X#define V_exit		103
X#define V_all		104
X#define V_Fourex	105
X#define V_everything	106
X#define V_shoot		107
X#define V_kill		108
X#define V_ned		109
X#define V_Ned		110
X#define V_kelly		111
X#define V_Kelly		112
X#define V_pick		113
X#define V_grab		114
X#define V_combination	115
X#define V_select	116
X#define V_safety	117
X#define V_SAFE		118
X#define V_triple	119
X#define V_III		120
X#define V_single	121
X#define V_I		122
X#define V_auto		123
X#define V_AUTO		124
X#define V_automatic	125
X#define V_set		126
X#define V_insert	127
X#define V_attach	128
X#define V_plan		129
X#define V_gun		130
X#define V_magazine	131
X#define V_hoop		132
X#define V_snake		133
X#define V_bear		134
X#define V_wombat	135
X#define V_remove	136
X#define V_eject		137
X#define V_org_clip	138
X#define V_shut		139
X#define V_gleep		140
X#define V_gleeps	141
X#define V_letter	142
X#define V_envelope	143
X#define V_torch		144
X#define V_mail		145
X#define V_tank		146
X#define V_carefully	147
X#define V_gently	148
X#define V_softly	149
X#define V_slow_drop	150
X#define V_light		151
X#define V_ignite	152
X#define V_fuse		153
X#define V_slowly	154
X#define V_match		155
X#define V_cube		156
X#define V_blue		157
X#define V_blue_button	158
X#define V_gray		159
X#define V_gray_button	160
X#define V_clapper	161
X#define V_sound		162
X#define V_bang		163
X#define V_hit		164
X#define V_strike	165
X#define V_gong		166
X#define V_detector	167
X#define V_give		168
X#define V_stats		169
X#define V_jsys		170
X#define V_su		171
X#define V_yellow	172
X#define V_yellow_button	173
X#define V_poster	174
X#define V_eat		175
X#define V_swallow	176
X#define V_pill		177
X#define V_atropine	178
X#define V_packet	179
X#define V_wrapper	180
X#define V_tire		181
X#define V_shell		182
X#define V_brick		183
X#define V_rope		184
X#define V_package	185
X#define V_belt		186
X#define V_filter	187
X#define V_string	188
X#define V_cabinet	189
X#define V_calendar	190
X#define V_tackle	191
X#define V_bit		192
X#define V_jack		193
X#define V_pen		194
X#define V_pencil	195
X#define V_wire		196
X#define V_pipe		197
X#define V_panel		198
X#define V_opener	199
X#define V_cord		200
X#define V_photo		201
X#define V_chair		202
X#define V_bulb		203
X#define V_rag		204
X#define V_tube		205
X#define V_carpet	206
X#define V_branch	207
X#define V_cork		208
X#define V_trap		209
X#define V_lighter	210
X#define V_lace		211
X#define V_comb		212
X#define V_umbrella	213
X#define V_meadow	214
X#define V_billabong	215
X#define V_river		216
X#define V_road		217
X#define V_forest	218
X#define V_grass		219
X#define V_stream	220
X#define V_desert	221
X#define V_building	222
X#define V_office	223
X#define V_hideout	224
X#define V_dust		225
X#define V_mine		226
X#define V_tunnel	227
X#define V_tree		228
X#define V_spinifex	229
X#define V_hexagon	230
X#define V_spacecaft	231
X#define V_airlock	232
X#define V_wing		233
X#define V_hole		234
X#define V_tray		235
X#define V_liquid	236
X#define V_cockroach	237
X#define V_go		238
X#define V_scream	239
X#define V_yell		240
X#define V_bring		241
X#define V_help		242
X#define V_dump		243
X#define V_attack	244
X#define V_check		245
X#define V_inspect	246
X#define V_place		247
X#define V_touch		248
X#define V_pull		249
X#define V_extinguish	250
X#define V_ask		251
X#define V_talk		252
X#define V_tell		253
X#define V_find		254
X#define V_move		255
X#define V_break		256
X#define V_kick		257
X#define V_smash		258
X#define V_feed		259
X#define V_taste		260
X#define V_smell		261
X#define V_slam		262
X#define V_desk		263
X#define V_in		264
X#define V_into		265
X#define V_under		266
X#define V_out		267
X#define V_from		268
X#define V_by		269
X#define V_with		270
X#define V_fling		271
X#define V_what		272
X#define V_where		273
X#define V_are		274
X#define V_am		275
X#define V_have		276
X#define V_QUESTION	277
X#define V_how		278
X#define V_why		279
X#define V_who		280
X#define V_when		281
X#define V_bop		282
X#define V_walk		283
X#define V_run		284
X#define V_jump		285
X#define V_hop		286
X#define V_stroll	287
X#define V_saunter	288
X#define V_swagger	289
X#define V_swing		290
X#define V_dig		291
X#define V_swim		292
X#define V_depart	293
X#define V_info		294
X#define V_back		295
X#define V_hold		296
X#define V_fire		297
X#define V_stand		298
X#define V_painting	299
X#define V_doors		300
X#define V_treasure	301
X#define V_trigger	302
X#define V_load		303
X#define V_unload	304
X#define V_sand		305
X#define V_cockroaches	306
X#define V_kangaroo	307
X#define V_climb		308
X#define V_bulldust	309
X#define V_kangaroos	310
X#define V_spinifexes	311
X#define V_fuze		312
X#define V_message	313
X#define V_wall		314
X#define V_recorder	315
X#define V_red		316
X#define V_white		317
X#define V_green		318
X#define V_red_button	319
X#define V_white_button	320
X#define V_green_button	321
X#define V_grey		322
X#define V_matchbox	323
X 
X/* Object status as referred to in object[n][0] */
X#define B_have  	-1
X#define B_unmade	-2
X#define B_destroyed	-3
X#define B_in_safe	-5
X
X/* Object pointer code number "i" for object[i][j] and obj[i]  */
X/*  four digit numbers are ***not*** objects and not in object[n][j] */
X#define O_can		0
X#define O_butt		1
X#define O_bottle	2
X#define O_mat		3
X#define O_key		4
X#define O_umbrella	5
X#define O_tackle	6
X#define O_bit		7
X#define O_map		8
X#define O_map_frag	9
X#define O_paper		10
X#define O_gold		11
X#define O_jack		12
X#define O_dynamite	13
X#define O_clip		14
X#define O_pen		15
X#define O_org_clip	16
X#define O_pencil	17
X#define O_rifle		18
X#define O_wire		19
X#define O_pipe		20
X#define O_cap		21
X#define O_matches	22
X#define O_ring		23
X#define O_opener	24
X#define O_ruby		25
X#define O_teapot	26
X#define O_coin		27
X#define O_cord		28
X#define O_bill		29
X#define O_photo		30
X#define O_chair		31
X#define O_bulb		32
X#define O_pills		33
X#define O_saphire	34
X#define O_emerald	35
X#define O_rag		36
X#define O_tube		37
X#define O_carpet	38
X#define O_branch	39
X#define O_letter	40
X#define O_cork		41
X#define O_torch		42
X#define O_trap		43
X#define O_lighter	44
X#define O_cube		45
X#define O_clapper	46
X#define O_detector	47
X#define O_lace		48
X#define O_comb		49
X#define O_wrapper	50
X#define O_tire		51
X#define O_shell		52
X#define O_brick		53
X#define O_rope		54
X#define O_package	55
X#define O_belt		56
X#define O_filter	57
X#define O_string	58
X#define O_recorder	59
X#define O_safe		1000
X#define O_message	2000
X
X/* Miscellaneous flags */
X#define FALSE		0
X#define TRUE		1
X#define F_safe_drop	2
X#define F_normal_drop	3
X#define F_not_done	4
X#define F_done		5
X#define F_get_all	6
X#define F_no_have	7
X#define F_asleep	8
X#define F_stealing	9
X#define F_passive	10
X#define F_aggressive	11
X#define F_killing	12
X#define F_no_monster	13
X#define F_monster_active	14
X#define F_no_argument	15
X#define F_safety	16
X#define F_single	17
X#define F_triple	18
X#define F_auto		19
X#define F_no_clip	20
X#define F_normal_clip	21
X#define F_org_clip	22
X#define F_wounded	23
X#define F_replace	24
X#define F_ignore	25
X#define F_died		26
X#define F_quit		27
X
X/* enemy/monster symbols */
X#define N_ned		0
X#define N_wombat	1
X#define N_drop_bear	2
X/* 2-5 drop bear   */
X#define N_hoop_snake	6
X/* 6-13 hoop snake */
X#define N_guards	14
X#define N_mullah	15
X
X#define E_location	0
X#define E_status	1
X#define E_hits		2
X
X/* adjective pointer */
X#define Av_adv		0
X#define Av_verb_old 	1
X#define Av_verb_new	2
X
X/* adjective pointer */
X#define Aj_adj		0
X#define Aj_trig_noun	1
X#define Aj_act_noun	2
X#define Aj_adj_cmd	3
X
X/* Object external property as referred to in object[n][J_type] */
X#define Z_normal	0
X#define Z_transform	1
X#define Z_alias		2
X#define Z_unmovable	3
X
X/* Structure for monsters */
Xstruct monster_struct { 
X	int Type ;	/* Monster type			      */
X	int Location ;	/* Location of the monster            */
X	int Status ;	/* Status of the monster              */
X	int Hits ;	/* Number of bullet hits into monster */
X} ;
X
END_OF_FILE
if test 12227 -ne `wc -c <'dink_sym.h'`; then
    echo shar: \"'dink_sym.h'\" unpacked with wrong size!
fi
# end of 'dink_sym.h'
fi
echo shar: End of archive 7 \(of 7\).
cp /dev/null ark7isdone
MISSING=""
for I in 1 2 3 4 5 6 7 ; do
    if test ! -f ark${I}isdone ; then
	MISSING="${MISSING} ${I}"
    fi
done
if test "${MISSING}" = "" ; then
    echo You have unpacked all 7 archives.
    rm -f ark[1-9]isdone
else
    echo You still need to unpack the following archives:
    echo "        " ${MISSING}
fi
##  End of shell archive.
exit 0
