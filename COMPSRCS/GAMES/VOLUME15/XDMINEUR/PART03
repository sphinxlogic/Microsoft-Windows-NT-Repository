Path: uunet!news.tek.com!master!saab!billr
From: billr@saab.CNA.TEK.COM (Bill Randle)
Newsgroups: comp.sources.games
Subject: v15i054:  xdemineur - another minesweeper game, Part03/03
Message-ID: <4229@master.CNA.TEK.COM>
Date: 18 Jan 93 20:40:29 GMT
Sender: news@master.CNA.TEK.COM
Lines: 400
Approved: billr@saab.CNA.TEK.COM
Xref: uunet comp.sources.games:1553

Submitted-by: baudoin@bertrand.ensta.fr (Marc Baudoin)
Posting-number: Volume 15, Issue 54
Archive-name: xdemineur/Part03
Environment: X11, Xlib


#! /bin/sh
# This is a shell archive.  Remove anything before this line, then unpack
# it by saving it into a file and typing "sh file".  To overwrite existing
# files, type "sh file -c".  You can also feed this as standard input via
# unshar, or by typing "sh <file", e.g..  If this archive is complete, you
# will see the following message at the end:
#		"End of archive 3 (of 3)."
# Contents:  bitmaps/case.bm bitmaps/croix.bm bitmaps/drapeau.bm
#   bitmaps/interro.bm bitmaps/manquee.bm bitmaps/mine.bm
#   bitmaps/num_case_0.bm bitmaps/num_case_1.bm bitmaps/num_case_2.bm
#   bitmaps/num_case_3.bm bitmaps/num_case_4.bm bitmaps/num_case_5.bm
#   bitmaps/num_case_6.bm bitmaps/num_case_7.bm bitmaps/num_case_8.bm
#   bitmaps/pied.bm bitmaps/reflet.bm bitmaps/relief_blanc.bm
#   bitmaps/relief_gris.bm
# Wrapped by billr@saab on Mon Jan 18 12:34:58 1993
PATH=/bin:/usr/bin:/usr/ucb ; export PATH
if test -f 'bitmaps/case.bm' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'bitmaps/case.bm'\"
else
echo shar: Extracting \"'bitmaps/case.bm'\" \(449 characters\)
sed "s/^X//" >'bitmaps/case.bm' <<'END_OF_FILE'
X#define case_width 20
X#define case_height 20
Xstatic char case_bits[] = {
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0xff, 0x01,
X   0xf8, 0xff, 0x01, 0xf8, 0xff, 0x01, 0xf8, 0xff, 0x01, 0xf8, 0xff, 0x01,
X   0xf8, 0xff, 0x01, 0xf8, 0xff, 0x01, 0xf8, 0xff, 0x01, 0xf8, 0xff, 0x01,
X   0xf8, 0xff, 0x01, 0xf8, 0xff, 0x01, 0xf8, 0xff, 0x01, 0xf8, 0xff, 0x01,
X   0xf8, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
END_OF_FILE
if test 449 -ne `wc -c <'bitmaps/case.bm'`; then
    echo shar: \"'bitmaps/case.bm'\" unpacked with wrong size!
fi
# end of 'bitmaps/case.bm'
fi
if test -f 'bitmaps/croix.bm' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'bitmaps/croix.bm'\"
else
echo shar: Extracting \"'bitmaps/croix.bm'\" \(452 characters\)
sed "s/^X//" >'bitmaps/croix.bm' <<'END_OF_FILE'
X#define croix_width 20
X#define croix_height 20
Xstatic char croix_bits[] = {
X   0x00, 0x00, 0x00, 0x06, 0x00, 0x06, 0x0e, 0x00, 0x07, 0x1c, 0x80, 0x03,
X   0x38, 0xc0, 0x01, 0x70, 0xe0, 0x00, 0xe0, 0x70, 0x00, 0xc0, 0x39, 0x00,
X   0x80, 0x1f, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x0f, 0x00, 0x80, 0x1f, 0x00,
X   0xc0, 0x39, 0x00, 0xe0, 0x70, 0x00, 0x70, 0xe0, 0x00, 0x38, 0xc0, 0x01,
X   0x1c, 0x80, 0x03, 0x0e, 0x00, 0x07, 0x06, 0x00, 0x06, 0x00, 0x00, 0x00};
END_OF_FILE
if test 452 -ne `wc -c <'bitmaps/croix.bm'`; then
    echo shar: \"'bitmaps/croix.bm'\" unpacked with wrong size!
fi
# end of 'bitmaps/croix.bm'
fi
if test -f 'bitmaps/drapeau.bm' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'bitmaps/drapeau.bm'\"
else
echo shar: Extracting \"'bitmaps/drapeau.bm'\" \(458 characters\)
sed "s/^X//" >'bitmaps/drapeau.bm' <<'END_OF_FILE'
X#define drapeau_width 20
X#define drapeau_height 20
Xstatic char drapeau_bits[] = {
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x06, 0x00, 0x80, 0x07, 0x00, 0xe0, 0x07, 0x00, 0xf0, 0x07, 0x00,
X   0xe0, 0x07, 0x00, 0x80, 0x07, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
END_OF_FILE
if test 458 -ne `wc -c <'bitmaps/drapeau.bm'`; then
    echo shar: \"'bitmaps/drapeau.bm'\" unpacked with wrong size!
fi
# end of 'bitmaps/drapeau.bm'
fi
if test -f 'bitmaps/interro.bm' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'bitmaps/interro.bm'\"
else
echo shar: Extracting \"'bitmaps/interro.bm'\" \(458 characters\)
sed "s/^X//" >'bitmaps/interro.bm' <<'END_OF_FILE'
X#define interro_width 20
X#define interro_height 20
Xstatic char interro_bits[] = {
X   0x00, 0x00, 0xf0, 0x00, 0x00, 0xf0, 0x00, 0x00, 0xf0, 0xf8, 0xff, 0xf1,
X   0x78, 0xe0, 0xf1, 0x38, 0xc0, 0xf1, 0x18, 0x8f, 0xf1, 0x18, 0x8f, 0xf1,
X   0xf8, 0xc7, 0xf1, 0xf8, 0xe3, 0xf1, 0xf8, 0xe3, 0xf1, 0xf8, 0xf1, 0xf1,
X   0xf8, 0xff, 0xf1, 0xf8, 0xf1, 0xf1, 0xf8, 0xf1, 0xf1, 0xf8, 0xf1, 0xf1,
X   0xf8, 0xff, 0xf1, 0x00, 0x00, 0xf0, 0x00, 0x00, 0xf0, 0x00, 0x00, 0xf0};
END_OF_FILE
if test 458 -ne `wc -c <'bitmaps/interro.bm'`; then
    echo shar: \"'bitmaps/interro.bm'\" unpacked with wrong size!
fi
# end of 'bitmaps/interro.bm'
fi
if test -f 'bitmaps/manquee.bm' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'bitmaps/manquee.bm'\"
else
echo shar: Extracting \"'bitmaps/manquee.bm'\" \(458 characters\)
sed "s/^X//" >'bitmaps/manquee.bm' <<'END_OF_FILE'
X#define manquee_width 20
X#define manquee_height 20
Xstatic char manquee_bits[] = {
X   0xff, 0xff, 0xff, 0xff, 0xf9, 0xff, 0xff, 0xf9, 0xff, 0xff, 0xf0, 0xff,
X   0x3f, 0xc0, 0xff, 0x7f, 0xe0, 0xff, 0xef, 0x70, 0xff, 0xcf, 0x39, 0xff,
X   0x87, 0x1f, 0xfe, 0x01, 0x0f, 0xf8, 0x01, 0x0f, 0xf8, 0x87, 0x1f, 0xfe,
X   0xcf, 0x39, 0xff, 0xef, 0x70, 0xff, 0x7f, 0xe0, 0xff, 0x3f, 0xc0, 0xff,
X   0xff, 0xf0, 0xff, 0xff, 0xf9, 0xff, 0xff, 0xf9, 0xff, 0xff, 0xff, 0xff};
END_OF_FILE
if test 458 -ne `wc -c <'bitmaps/manquee.bm'`; then
    echo shar: \"'bitmaps/manquee.bm'\" unpacked with wrong size!
fi
# end of 'bitmaps/manquee.bm'
fi
if test -f 'bitmaps/mine.bm' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'bitmaps/mine.bm'\"
else
echo shar: Extracting \"'bitmaps/mine.bm'\" \(449 characters\)
sed "s/^X//" >'bitmaps/mine.bm' <<'END_OF_FILE'
X#define mine_width 20
X#define mine_height 20
Xstatic char mine_bits[] = {
X   0xff, 0xff, 0xff, 0xff, 0xf9, 0xff, 0xff, 0xf9, 0xff, 0xf7, 0xf0, 0xfe,
X   0x2f, 0x40, 0xff, 0x1f, 0x80, 0xff, 0x0f, 0x00, 0xff, 0x0f, 0x00, 0xff,
X   0x07, 0x00, 0xfe, 0x01, 0x00, 0xf8, 0x01, 0x00, 0xf8, 0x07, 0x00, 0xfe,
X   0x0f, 0x00, 0xff, 0x0f, 0x00, 0xff, 0x1f, 0x80, 0xff, 0x2f, 0x40, 0xff,
X   0xf7, 0xf0, 0xfe, 0xff, 0xf9, 0xff, 0xff, 0xf9, 0xff, 0xff, 0xff, 0xff};
END_OF_FILE
if test 449 -ne `wc -c <'bitmaps/mine.bm'`; then
    echo shar: \"'bitmaps/mine.bm'\" unpacked with wrong size!
fi
# end of 'bitmaps/mine.bm'
fi
if test -f 'bitmaps/num_case_0.bm' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'bitmaps/num_case_0.bm'\"
else
echo shar: Extracting \"'bitmaps/num_case_0.bm'\" \(467 characters\)
sed "s/^X//" >'bitmaps/num_case_0.bm' <<'END_OF_FILE'
X#define num_case_0_width 20
X#define num_case_0_height 20
Xstatic char num_case_0_bits[] = {
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
END_OF_FILE
if test 467 -ne `wc -c <'bitmaps/num_case_0.bm'`; then
    echo shar: \"'bitmaps/num_case_0.bm'\" unpacked with wrong size!
fi
# end of 'bitmaps/num_case_0.bm'
fi
if test -f 'bitmaps/num_case_1.bm' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'bitmaps/num_case_1.bm'\"
else
echo shar: Extracting \"'bitmaps/num_case_1.bm'\" \(467 characters\)
sed "s/^X//" >'bitmaps/num_case_1.bm' <<'END_OF_FILE'
X#define num_case_1_width 20
X#define num_case_1_height 20
Xstatic char num_case_1_bits[] = {
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x0e, 0x00,
X   0x00, 0x0f, 0x00, 0x80, 0x0f, 0x00, 0xc0, 0x0f, 0x00, 0xe0, 0x0f, 0x00,
X   0x00, 0x0f, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x0f, 0x00,
X   0x00, 0x0f, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x0f, 0x00, 0xe0, 0x7f, 0x00,
X   0xe0, 0x7f, 0x00, 0xe0, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
END_OF_FILE
if test 467 -ne `wc -c <'bitmaps/num_case_1.bm'`; then
    echo shar: \"'bitmaps/num_case_1.bm'\" unpacked with wrong size!
fi
# end of 'bitmaps/num_case_1.bm'
fi
if test -f 'bitmaps/num_case_2.bm' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'bitmaps/num_case_2.bm'\"
else
echo shar: Extracting \"'bitmaps/num_case_2.bm'\" \(467 characters\)
sed "s/^X//" >'bitmaps/num_case_2.bm' <<'END_OF_FILE'
X#define num_case_2_width 20
X#define num_case_2_height 20
Xstatic char num_case_2_bits[] = {
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x3f, 0x00, 0xe0, 0x7f, 0x00,
X   0xf0, 0xff, 0x00, 0x70, 0xe0, 0x00, 0x70, 0xf0, 0x00, 0x00, 0x78, 0x00,
X   0x00, 0x3c, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x0f, 0x00, 0x80, 0x07, 0x00,
X   0xc0, 0x03, 0x00, 0xe0, 0x01, 0x00, 0xf0, 0x00, 0x00, 0xf0, 0xff, 0x00,
X   0xf0, 0xff, 0x00, 0xf0, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
END_OF_FILE
if test 467 -ne `wc -c <'bitmaps/num_case_2.bm'`; then
    echo shar: \"'bitmaps/num_case_2.bm'\" unpacked with wrong size!
fi
# end of 'bitmaps/num_case_2.bm'
fi
if test -f 'bitmaps/num_case_3.bm' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'bitmaps/num_case_3.bm'\"
else
echo shar: Extracting \"'bitmaps/num_case_3.bm'\" \(467 characters\)
sed "s/^X//" >'bitmaps/num_case_3.bm' <<'END_OF_FILE'
X#define num_case_3_width 20
X#define num_case_3_height 20
Xstatic char num_case_3_bits[] = {
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x3f, 0x00, 0xf0, 0x7f, 0x00,
X   0xf0, 0xff, 0x00, 0x00, 0xf0, 0x00, 0x00, 0xf0, 0x00, 0x00, 0xf0, 0x00,
X   0x00, 0x7f, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x7f, 0x00, 0x00, 0xf0, 0x00,
X   0x00, 0xf0, 0x00, 0x00, 0xf0, 0x00, 0xf0, 0xff, 0x00, 0xf0, 0x7f, 0x00,
X   0xf0, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
END_OF_FILE
if test 467 -ne `wc -c <'bitmaps/num_case_3.bm'`; then
    echo shar: \"'bitmaps/num_case_3.bm'\" unpacked with wrong size!
fi
# end of 'bitmaps/num_case_3.bm'
fi
if test -f 'bitmaps/num_case_4.bm' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'bitmaps/num_case_4.bm'\"
else
echo shar: Extracting \"'bitmaps/num_case_4.bm'\" \(467 characters\)
sed "s/^X//" >'bitmaps/num_case_4.bm' <<'END_OF_FILE'
X#define num_case_4_width 20
X#define num_case_4_height 20
Xstatic char num_case_4_bits[] = {
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x7b, 0x00, 0xc0, 0x7b, 0x00,
X   0xc0, 0x7b, 0x00, 0xe0, 0x79, 0x00, 0xe0, 0x79, 0x00, 0xf0, 0x78, 0x00,
X   0xf0, 0x78, 0x00, 0xf0, 0xff, 0x00, 0xf0, 0xff, 0x00, 0xf0, 0xff, 0x00,
X   0x00, 0x78, 0x00, 0x00, 0x78, 0x00, 0x00, 0x78, 0x00, 0x00, 0x78, 0x00,
X   0x00, 0x78, 0x00, 0x00, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
END_OF_FILE
if test 467 -ne `wc -c <'bitmaps/num_case_4.bm'`; then
    echo shar: \"'bitmaps/num_case_4.bm'\" unpacked with wrong size!
fi
# end of 'bitmaps/num_case_4.bm'
fi
if test -f 'bitmaps/num_case_5.bm' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'bitmaps/num_case_5.bm'\"
else
echo shar: Extracting \"'bitmaps/num_case_5.bm'\" \(467 characters\)
sed "s/^X//" >'bitmaps/num_case_5.bm' <<'END_OF_FILE'
X#define num_case_5_width 20
X#define num_case_5_height 20
Xstatic char num_case_5_bits[] = {
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0xff, 0x00, 0xf0, 0xff, 0x00,
X   0xf0, 0xff, 0x00, 0x70, 0x00, 0x00, 0x70, 0x00, 0x00, 0x70, 0x00, 0x00,
X   0xf0, 0x3f, 0x00, 0xf0, 0x7f, 0x00, 0xf0, 0xff, 0x00, 0x00, 0xe0, 0x00,
X   0x00, 0xe0, 0x00, 0x70, 0xe0, 0x00, 0xf0, 0xff, 0x00, 0xe0, 0x7f, 0x00,
X   0xc0, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
END_OF_FILE
if test 467 -ne `wc -c <'bitmaps/num_case_5.bm'`; then
    echo shar: \"'bitmaps/num_case_5.bm'\" unpacked with wrong size!
fi
# end of 'bitmaps/num_case_5.bm'
fi
if test -f 'bitmaps/num_case_6.bm' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'bitmaps/num_case_6.bm'\"
else
echo shar: Extracting \"'bitmaps/num_case_6.bm'\" \(467 characters\)
sed "s/^X//" >'bitmaps/num_case_6.bm' <<'END_OF_FILE'
X#define num_case_6_width 20
X#define num_case_6_height 20
Xstatic char num_case_6_bits[] = {
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xff, 0x00, 0xe0, 0xff, 0x00,
X   0xf0, 0xff, 0x00, 0x70, 0x00, 0x00, 0x70, 0x00, 0x00, 0x70, 0x00, 0x00,
X   0xf0, 0x3f, 0x00, 0xf0, 0x7f, 0x00, 0xf0, 0xff, 0x00, 0x70, 0xe0, 0x00,
X   0x70, 0xe0, 0x00, 0x70, 0xe0, 0x00, 0xf0, 0xff, 0x00, 0xe0, 0x7f, 0x00,
X   0xc0, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
END_OF_FILE
if test 467 -ne `wc -c <'bitmaps/num_case_6.bm'`; then
    echo shar: \"'bitmaps/num_case_6.bm'\" unpacked with wrong size!
fi
# end of 'bitmaps/num_case_6.bm'
fi
if test -f 'bitmaps/num_case_7.bm' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'bitmaps/num_case_7.bm'\"
else
echo shar: Extracting \"'bitmaps/num_case_7.bm'\" \(467 characters\)
sed "s/^X//" >'bitmaps/num_case_7.bm' <<'END_OF_FILE'
X#define num_case_7_width 20
X#define num_case_7_height 20
Xstatic char num_case_7_bits[] = {
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0xff, 0x00, 0xf0, 0xff, 0x00,
X   0xf0, 0xff, 0x00, 0x00, 0x70, 0x00, 0x00, 0x70, 0x00, 0x00, 0x38, 0x00,
X   0x00, 0x38, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x0e, 0x00,
X   0x00, 0x0e, 0x00, 0x00, 0x07, 0x00, 0x00, 0x07, 0x00, 0x80, 0x03, 0x00,
X   0x80, 0x03, 0x00, 0x80, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
END_OF_FILE
if test 467 -ne `wc -c <'bitmaps/num_case_7.bm'`; then
    echo shar: \"'bitmaps/num_case_7.bm'\" unpacked with wrong size!
fi
# end of 'bitmaps/num_case_7.bm'
fi
if test -f 'bitmaps/num_case_8.bm' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'bitmaps/num_case_8.bm'\"
else
echo shar: Extracting \"'bitmaps/num_case_8.bm'\" \(467 characters\)
sed "s/^X//" >'bitmaps/num_case_8.bm' <<'END_OF_FILE'
X#define num_case_8_width 20
X#define num_case_8_height 20
Xstatic char num_case_8_bits[] = {
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x3f, 0x00, 0xe0, 0x7f, 0x00,
X   0xf0, 0xff, 0x00, 0xf0, 0xf9, 0x00, 0xf0, 0xf0, 0x00, 0xf0, 0xf9, 0x00,
X   0xe0, 0x7f, 0x00, 0xc0, 0x3f, 0x00, 0xe0, 0x7f, 0x00, 0xf0, 0xf9, 0x00,
X   0xf0, 0xf0, 0x00, 0xf0, 0xf9, 0x00, 0xf0, 0xff, 0x00, 0xe0, 0x7f, 0x00,
X   0xc0, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
END_OF_FILE
if test 467 -ne `wc -c <'bitmaps/num_case_8.bm'`; then
    echo shar: \"'bitmaps/num_case_8.bm'\" unpacked with wrong size!
fi
# end of 'bitmaps/num_case_8.bm'
fi
if test -f 'bitmaps/pied.bm' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'bitmaps/pied.bm'\"
else
echo shar: Extracting \"'bitmaps/pied.bm'\" \(449 characters\)
sed "s/^X//" >'bitmaps/pied.bm' <<'END_OF_FILE'
X#define pied_width 20
X#define pied_height 20
Xstatic char pied_bits[] = {
X   0x00, 0x00, 0xf0, 0x00, 0x00, 0xf0, 0x00, 0x00, 0xf0, 0xf8, 0xff, 0xf1,
X   0xf8, 0xf9, 0xf1, 0x78, 0xf8, 0xf1, 0x18, 0xf8, 0xf1, 0x08, 0xf8, 0xf1,
X   0x18, 0xf8, 0xf1, 0x78, 0xf8, 0xf1, 0xf8, 0xf9, 0xf1, 0xf8, 0xfb, 0xf1,
X   0xf8, 0xfb, 0xf1, 0xf8, 0xf0, 0xf1, 0x38, 0xc0, 0xf1, 0x18, 0x80, 0xf1,
X   0xf8, 0xff, 0xf1, 0x00, 0x00, 0xf0, 0x00, 0x00, 0xf0, 0x00, 0x00, 0xf0};
END_OF_FILE
if test 449 -ne `wc -c <'bitmaps/pied.bm'`; then
    echo shar: \"'bitmaps/pied.bm'\" unpacked with wrong size!
fi
# end of 'bitmaps/pied.bm'
fi
if test -f 'bitmaps/reflet.bm' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'bitmaps/reflet.bm'\"
else
echo shar: Extracting \"'bitmaps/reflet.bm'\" \(455 characters\)
sed "s/^X//" >'bitmaps/reflet.bm' <<'END_OF_FILE'
X#define reflet_width 20
X#define reflet_height 20
Xstatic char reflet_bits[] = {
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x03, 0x00,
X   0x80, 0x03, 0x00, 0x80, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
END_OF_FILE
if test 455 -ne `wc -c <'bitmaps/reflet.bm'`; then
    echo shar: \"'bitmaps/reflet.bm'\" unpacked with wrong size!
fi
# end of 'bitmaps/reflet.bm'
fi
if test -f 'bitmaps/relief_blanc.bm' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'bitmaps/relief_blanc.bm'\"
else
echo shar: Extracting \"'bitmaps/relief_blanc.bm'\" \(473 characters\)
sed "s/^X//" >'bitmaps/relief_blanc.bm' <<'END_OF_FILE'
X#define relief_blanc_width 20
X#define relief_blanc_height 20
Xstatic char relief_blanc_bits[] = {
X   0xff, 0xff, 0x07, 0xff, 0xff, 0x03, 0xff, 0xff, 0x01, 0x07, 0x00, 0x00,
X   0x07, 0x00, 0x00, 0x07, 0x00, 0x00, 0x07, 0x00, 0x00, 0x07, 0x00, 0x00,
X   0x07, 0x00, 0x00, 0x07, 0x00, 0x00, 0x07, 0x00, 0x00, 0x07, 0x00, 0x00,
X   0x07, 0x00, 0x00, 0x07, 0x00, 0x00, 0x07, 0x00, 0x00, 0x07, 0x00, 0x00,
X   0x07, 0x00, 0x00, 0x03, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00};
END_OF_FILE
if test 473 -ne `wc -c <'bitmaps/relief_blanc.bm'`; then
    echo shar: \"'bitmaps/relief_blanc.bm'\" unpacked with wrong size!
fi
# end of 'bitmaps/relief_blanc.bm'
fi
if test -f 'bitmaps/relief_gris.bm' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'bitmaps/relief_gris.bm'\"
else
echo shar: Extracting \"'bitmaps/relief_gris.bm'\" \(470 characters\)
sed "s/^X//" >'bitmaps/relief_gris.bm' <<'END_OF_FILE'
X#define relief_gris_width 20
X#define relief_gris_height 20
Xstatic char relief_gris_bits[] = {
X   0x00, 0x00, 0x08, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x0e,
X   0x00, 0x00, 0x0e, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x0e,
X   0x00, 0x00, 0x0e, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x0e,
X   0x00, 0x00, 0x0e, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x0e,
X   0x00, 0x00, 0x0e, 0xfc, 0xff, 0x0f, 0xfe, 0xff, 0x0f, 0xff, 0xff, 0x0f};
END_OF_FILE
if test 470 -ne `wc -c <'bitmaps/relief_gris.bm'`; then
    echo shar: \"'bitmaps/relief_gris.bm'\" unpacked with wrong size!
fi
# end of 'bitmaps/relief_gris.bm'
fi
echo shar: End of archive 3 \(of 3\).
cp /dev/null ark3isdone
MISSING=""
for I in 1 2 3 ; do
    if test ! -f ark${I}isdone ; then
	MISSING="${MISSING} ${I}"
    fi
done
if test "${MISSING}" = "" ; then
    echo You have unpacked all 3 archives.
    rm -f ark[1-9]isdone
else
    echo You still need to unpack the following archives:
    echo "        " ${MISSING}
fi
##  End of shell archive.
exit 0
