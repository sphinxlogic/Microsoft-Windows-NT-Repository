Path: uunet!news.tek.com!master!saab!billr
From: billr@saab.CNA.TEK.COM (Bill Randle)
Newsgroups: comp.sources.games
Subject: v15i053:  xdemineur - another minesweeper game, Part02/03
Message-ID: <4228@master.CNA.TEK.COM>
Date: 18 Jan 93 20:40:07 GMT
Sender: news@master.CNA.TEK.COM
Lines: 1292
Approved: billr@saab.CNA.TEK.COM
Xref: uunet comp.sources.games:1552

Submitted-by: baudoin@bertrand.ensta.fr (Marc Baudoin)
Posting-number: Volume 15, Issue 53
Archive-name: xdemineur/Part02
Environment: X11, Xlib


#! /bin/sh
# This is a shell archive.  Remove anything before this line, then unpack
# it by saving it into a file and typing "sh file".  To overwrite existing
# files, type "sh file -c".  You can also feed this as standard input via
# unshar, or by typing "sh <file", e.g..  If this archive is complete, you
# will see the following message at the end:
#		"End of archive 2 (of 3)."
# Contents:  Imakefile LISEZMOI Makefile.test bitmaps/bof.bm
#   bitmaps/heureux.bm bitmaps/icone.bm bitmaps/icone_blanc.bm
#   bitmaps/icone_gris.bm bitmaps/joue.bm bitmaps/numero_0.bm
#   bitmaps/numero_1.bm bitmaps/numero_2.bm bitmaps/numero_3.bm
#   bitmaps/numero_4.bm bitmaps/numero_5.bm bitmaps/numero_6.bm
#   bitmaps/numero_7.bm bitmaps/numero_8.bm bitmaps/numero_9.bm
#   bitmaps/reflet_manquee.bm bitmaps/select_blanc.bm
#   bitmaps/select_gris.bm bitmaps/triste.bm demineur.c demineur.h
#   xdemineur.h xdemineur.man
# Wrapped by billr@saab on Mon Jan 18 12:34:57 1993
PATH=/bin:/usr/bin:/usr/ucb ; export PATH
if test -f 'Imakefile' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'Imakefile'\"
else
echo shar: Extracting \"'Imakefile'\" \(2744 characters\)
sed "s/^X//" >'Imakefile' <<'END_OF_FILE'
X/**/# ********************************************************************** #
X/**/#                                                                        #
X/**/# xdemineur - Jeu de reflexion sous X, version 1.0                       #
X/**/#                                                                        #
X/**/# Copyright : Marc Baudoin (baudoin@ensta.fr)                            #
X/**/#                                                                        #
X/**/#            |\                                                          #
X/**/#          |\| \                                                         #
X/**/#          |//  )                                                        #
X/**/#        |\ /  /        /\/\_                                            #
X/**/#        |//  /        /. . /                                            #
X/**/#      |\ /  /     ___/    |_                                            #
X/**/#      |//  /     (____/    /_/\_                                        #
X/**/#       |__|      (_____/ __     >                                       #
X/**/#     /| ___  ________ _< \ \__  >                                       #
X/**/#     \|| __\| _|_   _/ \\ \___\/                                        #
X/**/#       | __\____ | |/ _ \\    >                                         #
X/**/#     /||___\_____|___/ \_\\  _>                                         #
X/**/#     \|____           ____ \|                                           #
X/**/#       \   \_________/   /                                              #
X/**/#        \   _    _      /                                               #
X/**/#         \_//   //_____/                                                #
X/**/#           (_   \ (_  _\                                                #
X/**/#             |/\|   \/                                                  #
X/**/#                                                                        #
X/**/# Ecole Nationale Superieure de Techniques Avancees (ENSTA)              #
X/**/# 32, boulevard Victor - 75015 Paris - France                            #
X/**/#                                                                        #
X/**/# Vous avez le droit d'utiliser et de distribuer xdemineur et sa         #
X/**/# documentation pourvu que cette notice de copyright apparaisse sur      #
X/**/# toutes les copies et que vous ne tiriez aucun profit de mon programme. #
X/**/#                                                                        #
X/**/# ********************************************************************** #
X
X
X
XLOCAL_LIBRARIES = $(XLIB)
X
XSRCS = demineur.c xdemineur.c main.c
XOBJS = demineur.o xdemineur.o main.o
X
XComplexProgramTarget(xdemineur)
END_OF_FILE
if test 2744 -ne `wc -c <'Imakefile'`; then
    echo shar: \"'Imakefile'\" unpacked with wrong size!
fi
# end of 'Imakefile'
fi
if test -f 'LISEZMOI' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'LISEZMOI'\"
else
echo shar: Extracting \"'LISEZMOI'\" \(1972 characters\)
sed "s/^X//" >'LISEZMOI' <<'END_OF_FILE'
X                                 xdemineur 1.0
X
X                  Copyright : Marc Baudoin (baudoin@ensta.fr)
X
X                                 |\
X                               |\| \
X                               |//  )
X                             |\ /  /        /\/\_
X                             |//  /        /. . /
X                           |\ /  /     ___/    |_
X                           |//  /     (____/    /_/\_
X                            |__|      (_____/ __     >
X                          /| ___  ________ _< \ \__  >
X                          \|| __\| _|_   _/ \\ \___\/
X                            | __\____ | |/ _ \\    >
X                          /||___\_____|___/ \_\\  _>
X                          \|____           ____ \|
X                            \   \_________/   /
X                             \   _    _      /
X                              \_//   //_____/
X                                (_   \ (_  _\
X                                  |/\|   \/
X
X           Ecole Nationale Superieure de Techniques Avancees (ENSTA)
X                  32, boulevard Victor - 75015 Paris - France
X
X
X
X         Vous avez le droit d'utiliser et de distribuer xdemineur et sa
X       documentation pourvu que cette notice de copyright apparaisse sur
X     toutes les copies et que vous ne tiriez aucun profit de mon programme.
X
X
X
Xxdemineur est un jeu sous X programme uniquement avec Xlib. Il fonctionne
Xsous X11R4 en couleur.
X
Xxdemineur est compose de 3 fichiers de code C et de deux fichiers en-tete, plus
Xtout un tas de bitmaps.
X
XPour le compiler sur votre systeme, il y a deux solutions :
X
X- si vous disposez du programme xmkmf, tapez
X  xmkmf ; make
X  et le programme devrait se compiler normalement.
X
X- sinon, tapez
X  make -f Makefile.test
X  si la compilation ne s'effectue pas normalement, il faut changer quelque
X  chose dans Makefile.test...
X
Xxdemineur fonctionnera parfaitement bien sur HP et Sun.
XJe ne sais pas ce qu'il peut faire sur d'autres systemes.
END_OF_FILE
if test 1972 -ne `wc -c <'LISEZMOI'`; then
    echo shar: \"'LISEZMOI'\" unpacked with wrong size!
fi
# end of 'LISEZMOI'
fi
if test -f 'Makefile.test' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'Makefile.test'\"
else
echo shar: Extracting \"'Makefile.test'\" \(2915 characters\)
sed "s/^X//" >'Makefile.test' <<'END_OF_FILE'
X# ********************************************************************** #
X#                                                                        #
X# xdemineur - Jeu de reflexion sous X, version 1.0                       #
X#                                                                        #
X# Copyright : Marc Baudoin (baudoin@ensta.fr)                            #
X#                                                                        #
X#            |\                                                          #
X#          |\| \                                                         #
X#          |//  )                                                        #
X#        |\ /  /        /\/\_                                            #
X#        |//  /        /. . /                                            #
X#      |\ /  /     ___/    |_                                            #
X#      |//  /     (____/    /_/\_                                        #
X#       |__|      (_____/ __     >                                       #
X#     /| ___  ________ _< \ \__  >                                       #
X#     \|| __\| _|_   _/ \\ \___\/                                        #
X#       | __\____ | |/ _ \\    >                                         #
X#     /||___\_____|___/ \_\\  _>                                         #
X#     \|____           ____ \|                                           #
X#       \   \_________/   /                                              #
X#        \   _    _      /                                               #
X#         \_//   //_____/                                                #
X#           (_   \ (_  _\                                                #
X#             |/\|   \/                                                  #
X#                                                                        #
X# Ecole Nationale Superieure de Techniques Avancees (ENSTA)              #
X# 32, boulevard Victor - 75015 Paris - France                            #
X#                                                                        #
X# Vous avez le droit d'utiliser et de distribuer xdemineur et sa         #
X# documentation pourvu que cette notice de copyright apparaisse sur      #
X# toutes les copies et que vous ne tiriez aucun profit de mon programme. #
X#                                                                        #
X# ********************************************************************** #
X
X
X
X       CC = cc
X COPTIONS = -O
XLDOPTIONS = -L/usr/lib/X11
X
Xxdemineur : demineur.o xdemineur.o main.o
X	$(CC) $(COPTIONS) $(LDOPTIONS) -o xdemineur demineur.o xdemineur.o main.o -lX11
X
Xdemineur.o : demineur.c demineur.h
X	$(CC) $(COPTIONS) -c demineur.c
X
Xxdemineur.o : xdemineur.c demineur.h xdemineur.h bitmaps/*.bm
X	$(CC) $(COPTIONS) -c xdemineur.c
X
Xmain.o : main.c demineur.h xdemineur.h bitmaps/xdemineur.bm
X	$(CC) $(COPTIONS) -c main.c
END_OF_FILE
if test 2915 -ne `wc -c <'Makefile.test'`; then
    echo shar: \"'Makefile.test'\" unpacked with wrong size!
fi
# end of 'Makefile.test'
fi
if test -f 'bitmaps/bof.bm' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'bitmaps/bof.bm'\"
else
echo shar: Extracting \"'bitmaps/bof.bm'\" \(1322 characters\)
sed "s/^X//" >'bitmaps/bof.bm' <<'END_OF_FILE'
X#define bof_width 40
X#define bof_height 40
Xstatic char bof_bits[] = {
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00,
X   0xe0, 0xff, 0x07, 0x00, 0x00, 0xf8, 0xff, 0x1f, 0x00, 0x00, 0xfc, 0xff,
X   0x3f, 0x00, 0x00, 0xfe, 0xff, 0x7f, 0x00, 0x00, 0xff, 0xff, 0xff, 0x00,
X   0x00, 0xff, 0xff, 0xff, 0x00, 0x80, 0x3f, 0xff, 0xfc, 0x01, 0x80, 0x1f,
X   0x7e, 0xf8, 0x01, 0x80, 0x1f, 0x7e, 0xf8, 0x01, 0xc0, 0x3f, 0xff, 0xfc,
X   0x03, 0xc0, 0xff, 0xff, 0xff, 0x03, 0xc0, 0xff, 0xff, 0xff, 0x03, 0xc0,
X   0xff, 0xff, 0xff, 0x03, 0xc0, 0xff, 0xff, 0xff, 0x03, 0xc0, 0xff, 0xff,
X   0xff, 0x03, 0xc0, 0xff, 0xff, 0xff, 0x03, 0xc0, 0xff, 0xff, 0xff, 0x03,
X   0x80, 0xdf, 0xff, 0xfb, 0x01, 0x80, 0xbf, 0xff, 0xfd, 0x01, 0x80, 0x7f,
X   0xff, 0xfe, 0x01, 0x00, 0xff, 0x00, 0xff, 0x00, 0x00, 0xff, 0xff, 0xff,
X   0x00, 0x00, 0xfe, 0xff, 0x7f, 0x00, 0x00, 0xfc, 0xff, 0x3f, 0x00, 0x00,
X   0xf8, 0xff, 0x1f, 0x00, 0x00, 0xe0, 0xff, 0x07, 0x00, 0x00, 0x00, 0xff,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
END_OF_FILE
if test 1322 -ne `wc -c <'bitmaps/bof.bm'`; then
    echo shar: \"'bitmaps/bof.bm'\" unpacked with wrong size!
fi
# end of 'bitmaps/bof.bm'
fi
if test -f 'bitmaps/heureux.bm' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'bitmaps/heureux.bm'\"
else
echo shar: Extracting \"'bitmaps/heureux.bm'\" \(1334 characters\)
sed "s/^X//" >'bitmaps/heureux.bm' <<'END_OF_FILE'
X#define heureux_width 40
X#define heureux_height 40
Xstatic char heureux_bits[] = {
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00,
X   0xe0, 0xff, 0x07, 0x00, 0x00, 0xf8, 0xff, 0x1f, 0x00, 0x00, 0xfc, 0xff,
X   0x3f, 0x00, 0x00, 0xfe, 0xff, 0x7f, 0x00, 0x00, 0xff, 0xff, 0xff, 0x00,
X   0x00, 0x0f, 0x00, 0xf0, 0x00, 0x80, 0x07, 0x00, 0xe0, 0x01, 0x80, 0x0b,
X   0x00, 0xd0, 0x01, 0x80, 0x0d, 0x18, 0xb0, 0x01, 0xc0, 0x0e, 0x3c, 0x70,
X   0x03, 0x40, 0x1f, 0x7e, 0xf8, 0x02, 0x80, 0x3f, 0xff, 0xfc, 0x01, 0xc0,
X   0xff, 0xff, 0xff, 0x03, 0xc0, 0xff, 0xff, 0xff, 0x03, 0xc0, 0xff, 0xff,
X   0xff, 0x03, 0xc0, 0xff, 0xff, 0xff, 0x03, 0xc0, 0xff, 0xff, 0xff, 0x03,
X   0x80, 0xff, 0xff, 0xff, 0x01, 0x80, 0xbf, 0xff, 0xfd, 0x01, 0x80, 0x7f,
X   0xff, 0xfe, 0x01, 0x00, 0xff, 0x00, 0xff, 0x00, 0x00, 0xff, 0xff, 0xff,
X   0x00, 0x00, 0xfe, 0xff, 0x7f, 0x00, 0x00, 0xfc, 0xff, 0x3f, 0x00, 0x00,
X   0xf8, 0xff, 0x1f, 0x00, 0x00, 0xe0, 0xff, 0x07, 0x00, 0x00, 0x00, 0xff,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
END_OF_FILE
if test 1334 -ne `wc -c <'bitmaps/heureux.bm'`; then
    echo shar: \"'bitmaps/heureux.bm'\" unpacked with wrong size!
fi
# end of 'bitmaps/heureux.bm'
fi
if test -f 'bitmaps/icone.bm' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'bitmaps/icone.bm'\"
else
echo shar: Extracting \"'bitmaps/icone.bm'\" \(1328 characters\)
sed "s/^X//" >'bitmaps/icone.bm' <<'END_OF_FILE'
X#define icone_width 40
X#define icone_height 40
Xstatic char icone_bits[] = {
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0xf8, 0xff, 0xff, 0xff, 0x1f, 0xf8, 0xff, 0xff, 0xff,
X   0x1f, 0xf8, 0xff, 0x00, 0xff, 0x1f, 0xf8, 0x1f, 0x00, 0xf8, 0x1f, 0xf8,
X   0x07, 0x00, 0xe0, 0x1f, 0xf8, 0x03, 0x00, 0xc0, 0x1f, 0xf8, 0x01, 0x00,
X   0x80, 0x1f, 0xf8, 0x00, 0x00, 0x00, 0x1f, 0x78, 0x00, 0x00, 0x00, 0x1e,
X   0x78, 0x00, 0x00, 0x00, 0x1e, 0x38, 0x00, 0x00, 0x00, 0x1c, 0x38, 0x00,
X   0x00, 0x00, 0x1c, 0x38, 0x00, 0x00, 0x00, 0x1c, 0x18, 0x00, 0x00, 0x00,
X   0x18, 0x18, 0x00, 0x00, 0x00, 0x18, 0x18, 0x00, 0x00, 0x00, 0x18, 0x18,
X   0x00, 0x00, 0x00, 0x18, 0x18, 0x00, 0x00, 0x00, 0x18, 0x18, 0x00, 0x00,
X   0x00, 0x18, 0x18, 0x00, 0x00, 0x00, 0x18, 0x18, 0x00, 0x00, 0x00, 0x18,
X   0x38, 0x00, 0x00, 0x00, 0x1c, 0x38, 0x00, 0x00, 0x00, 0x1c, 0x38, 0x00,
X   0x00, 0x00, 0x1c, 0x78, 0x00, 0x00, 0x00, 0x1e, 0x78, 0x00, 0x00, 0x00,
X   0x1e, 0xf8, 0x00, 0x00, 0x00, 0x1f, 0xf8, 0x01, 0x00, 0x80, 0x1f, 0xf8,
X   0x03, 0x00, 0xc0, 0x1f, 0xf8, 0x07, 0x00, 0xe0, 0x1f, 0xf8, 0x1f, 0x00,
X   0xf8, 0x1f, 0xf8, 0xff, 0x00, 0xff, 0x1f, 0xf8, 0xff, 0xff, 0xff, 0x1f,
X   0xf8, 0xff, 0xff, 0xff, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
END_OF_FILE
if test 1328 -ne `wc -c <'bitmaps/icone.bm'`; then
    echo shar: \"'bitmaps/icone.bm'\" unpacked with wrong size!
fi
# end of 'bitmaps/icone.bm'
fi
if test -f 'bitmaps/icone_blanc.bm' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'bitmaps/icone_blanc.bm'\"
else
echo shar: Extracting \"'bitmaps/icone_blanc.bm'\" \(1346 characters\)
sed "s/^X//" >'bitmaps/icone_blanc.bm' <<'END_OF_FILE'
X#define icone_blanc_width 40
X#define icone_blanc_height 40
Xstatic char icone_blanc_bits[] = {
X   0xff, 0xff, 0xff, 0xff, 0x7f, 0xff, 0xff, 0xff, 0xff, 0x3f, 0xff, 0xff,
X   0xff, 0xff, 0x1f, 0x07, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00,
X   0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x07,
X   0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00,
X   0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00,
X   0x07, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00,
X   0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00,
X   0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x07,
X   0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00,
X   0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00,
X   0x07, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00,
X   0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00,
X   0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x07,
X   0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00,
X   0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00,
X   0x07, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
END_OF_FILE
if test 1346 -ne `wc -c <'bitmaps/icone_blanc.bm'`; then
    echo shar: \"'bitmaps/icone_blanc.bm'\" unpacked with wrong size!
fi
# end of 'bitmaps/icone_blanc.bm'
fi
if test -f 'bitmaps/icone_gris.bm' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'bitmaps/icone_gris.bm'\"
else
echo shar: Extracting \"'bitmaps/icone_gris.bm'\" \(1343 characters\)
sed "s/^X//" >'bitmaps/icone_gris.bm' <<'END_OF_FILE'
X#define icone_gris_width 40
X#define icone_gris_height 40
Xstatic char icone_gris_bits[] = {
X   0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x00, 0x00,
X   0x00, 0x00, 0xe0, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x00, 0x00, 0x00, 0x00,
X   0xe0, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x00,
X   0x00, 0x00, 0x00, 0xe0, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x00, 0x00, 0x00,
X   0x00, 0xe0, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x00, 0x00, 0x00, 0x00, 0xe0,
X   0x00, 0x00, 0x00, 0x00, 0xe0, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x00, 0x00,
X   0x00, 0x00, 0xe0, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x00, 0x00, 0x00, 0x00,
X   0xe0, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x00,
X   0x00, 0x00, 0x00, 0xe0, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x00, 0x00, 0x00,
X   0x00, 0xe0, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x00, 0x00, 0x00, 0x00, 0xe0,
X   0x00, 0x00, 0x00, 0x00, 0xe0, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x00, 0x00,
X   0x00, 0x00, 0xe0, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x00, 0x00, 0x00, 0x00,
X   0xe0, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x00,
X   0x00, 0x00, 0x00, 0xe0, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x00, 0x00, 0x00,
X   0x00, 0xe0, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x00, 0x00, 0x00, 0x00, 0xe0,
X   0x00, 0x00, 0x00, 0x00, 0xe0, 0xfc, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xff,
X   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff};
END_OF_FILE
if test 1343 -ne `wc -c <'bitmaps/icone_gris.bm'`; then
    echo shar: \"'bitmaps/icone_gris.bm'\" unpacked with wrong size!
fi
# end of 'bitmaps/icone_gris.bm'
fi
if test -f 'bitmaps/joue.bm' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'bitmaps/joue.bm'\"
else
echo shar: Extracting \"'bitmaps/joue.bm'\" \(1325 characters\)
sed "s/^X//" >'bitmaps/joue.bm' <<'END_OF_FILE'
X#define joue_width 40
X#define joue_height 40
Xstatic char joue_bits[] = {
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00,
X   0xe0, 0xff, 0x07, 0x00, 0x00, 0xf8, 0xff, 0x1f, 0x00, 0x00, 0xfc, 0xff,
X   0x3f, 0x00, 0x00, 0xfe, 0xff, 0x7f, 0x00, 0x00, 0xff, 0xff, 0xff, 0x00,
X   0x00, 0x3f, 0xff, 0xfc, 0x00, 0x80, 0x1f, 0x7e, 0xf8, 0x01, 0x80, 0x0f,
X   0x3c, 0xf0, 0x01, 0x80, 0x0f, 0x3c, 0xf0, 0x01, 0xc0, 0x1f, 0x7e, 0xf8,
X   0x03, 0xc0, 0x3f, 0xff, 0xfc, 0x03, 0xc0, 0xff, 0xff, 0xff, 0x03, 0xc0,
X   0xff, 0xff, 0xff, 0x03, 0xc0, 0xff, 0xff, 0xff, 0x03, 0xc0, 0xff, 0xff,
X   0xff, 0x03, 0xc0, 0xff, 0xff, 0xff, 0x03, 0xc0, 0xff, 0xe7, 0xff, 0x03,
X   0x80, 0xff, 0xdb, 0xff, 0x01, 0x80, 0xff, 0xbd, 0xff, 0x01, 0x80, 0xff,
X   0xbd, 0xff, 0x01, 0x00, 0xff, 0xdb, 0xff, 0x00, 0x00, 0xff, 0xe7, 0xff,
X   0x00, 0x00, 0xfe, 0xff, 0x7f, 0x00, 0x00, 0xfc, 0xff, 0x3f, 0x00, 0x00,
X   0xf8, 0xff, 0x1f, 0x00, 0x00, 0xe0, 0xff, 0x07, 0x00, 0x00, 0x00, 0xff,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
END_OF_FILE
if test 1325 -ne `wc -c <'bitmaps/joue.bm'`; then
    echo shar: \"'bitmaps/joue.bm'\" unpacked with wrong size!
fi
# end of 'bitmaps/joue.bm'
fi
if test -f 'bitmaps/numero_0.bm' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'bitmaps/numero_0.bm'\"
else
echo shar: Extracting \"'bitmaps/numero_0.bm'\" \(650 characters\)
sed "s/^X//" >'bitmaps/numero_0.bm' <<'END_OF_FILE'
X#define numero_0_width 20
X#define numero_0_height 30
Xstatic char numero_0_bits[] = {
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0xff, 0x01, 0xf4, 0xff, 0x02,
X   0xec, 0x7f, 0x03, 0xdc, 0xbf, 0x03, 0x3c, 0xc0, 0x03, 0x3c, 0xc0, 0x03,
X   0x3c, 0xc0, 0x03, 0x3c, 0xc0, 0x03, 0x3c, 0xc0, 0x03, 0x1c, 0x80, 0x03,
X   0x0c, 0x00, 0x03, 0x04, 0x00, 0x02, 0x00, 0x00, 0x00, 0x04, 0x00, 0x02,
X   0x0c, 0x00, 0x03, 0x1c, 0x80, 0x03, 0x3c, 0xc0, 0x03, 0x3c, 0xc0, 0x03,
X   0x3c, 0xc0, 0x03, 0x3c, 0xc0, 0x03, 0x3c, 0xc0, 0x03, 0x3c, 0xc0, 0x03,
X   0xdc, 0xbf, 0x03, 0xec, 0x7f, 0x03, 0xf4, 0xff, 0x02, 0xf8, 0xff, 0x01,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
END_OF_FILE
if test 650 -ne `wc -c <'bitmaps/numero_0.bm'`; then
    echo shar: \"'bitmaps/numero_0.bm'\" unpacked with wrong size!
fi
# end of 'bitmaps/numero_0.bm'
fi
if test -f 'bitmaps/numero_1.bm' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'bitmaps/numero_1.bm'\"
else
echo shar: Extracting \"'bitmaps/numero_1.bm'\" \(650 characters\)
sed "s/^X//" >'bitmaps/numero_1.bm' <<'END_OF_FILE'
X#define numero_1_width 20
X#define numero_1_height 30
Xstatic char numero_1_bits[] = {
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02,
X   0x00, 0x00, 0x03, 0x00, 0x80, 0x03, 0x00, 0xc0, 0x03, 0x00, 0xc0, 0x03,
X   0x00, 0xc0, 0x03, 0x00, 0xc0, 0x03, 0x00, 0xc0, 0x03, 0x00, 0x80, 0x03,
X   0x00, 0x00, 0x03, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02,
X   0x00, 0x00, 0x03, 0x00, 0x80, 0x03, 0x00, 0xc0, 0x03, 0x00, 0xc0, 0x03,
X   0x00, 0xc0, 0x03, 0x00, 0xc0, 0x03, 0x00, 0xc0, 0x03, 0x00, 0xc0, 0x03,
X   0x00, 0x80, 0x03, 0x00, 0x00, 0x03, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
END_OF_FILE
if test 650 -ne `wc -c <'bitmaps/numero_1.bm'`; then
    echo shar: \"'bitmaps/numero_1.bm'\" unpacked with wrong size!
fi
# end of 'bitmaps/numero_1.bm'
fi
if test -f 'bitmaps/numero_2.bm' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'bitmaps/numero_2.bm'\"
else
echo shar: Extracting \"'bitmaps/numero_2.bm'\" \(650 characters\)
sed "s/^X//" >'bitmaps/numero_2.bm' <<'END_OF_FILE'
X#define numero_2_width 20
X#define numero_2_height 30
Xstatic char numero_2_bits[] = {
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0xff, 0x01, 0xf0, 0xff, 0x02,
X   0xe0, 0x7f, 0x03, 0xc0, 0xbf, 0x03, 0x00, 0xc0, 0x03, 0x00, 0xc0, 0x03,
X   0x00, 0xc0, 0x03, 0x00, 0xc0, 0x03, 0x00, 0xc0, 0x03, 0x00, 0x80, 0x03,
X   0xe0, 0x7f, 0x03, 0xf0, 0xff, 0x02, 0xf8, 0xff, 0x01, 0xf4, 0xff, 0x00,
X   0xec, 0x7f, 0x00, 0x1c, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x3c, 0x00, 0x00,
X   0x3c, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x3c, 0x00, 0x00,
X   0xdc, 0x3f, 0x00, 0xec, 0x7f, 0x00, 0xf4, 0xff, 0x00, 0xf8, 0xff, 0x01,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
END_OF_FILE
if test 650 -ne `wc -c <'bitmaps/numero_2.bm'`; then
    echo shar: \"'bitmaps/numero_2.bm'\" unpacked with wrong size!
fi
# end of 'bitmaps/numero_2.bm'
fi
if test -f 'bitmaps/numero_3.bm' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'bitmaps/numero_3.bm'\"
else
echo shar: Extracting \"'bitmaps/numero_3.bm'\" \(650 characters\)
sed "s/^X//" >'bitmaps/numero_3.bm' <<'END_OF_FILE'
X#define numero_3_width 20
X#define numero_3_height 30
Xstatic char numero_3_bits[] = {
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0xff, 0x01, 0xf0, 0xff, 0x02,
X   0xe0, 0x7f, 0x03, 0xc0, 0xbf, 0x03, 0x00, 0xc0, 0x03, 0x00, 0xc0, 0x03,
X   0x00, 0xc0, 0x03, 0x00, 0xc0, 0x03, 0x00, 0xc0, 0x03, 0x00, 0x80, 0x03,
X   0xe0, 0x7f, 0x03, 0xf0, 0xff, 0x02, 0xf8, 0xff, 0x01, 0xf0, 0xff, 0x02,
X   0xe0, 0x7f, 0x03, 0x00, 0x80, 0x03, 0x00, 0xc0, 0x03, 0x00, 0xc0, 0x03,
X   0x00, 0xc0, 0x03, 0x00, 0xc0, 0x03, 0x00, 0xc0, 0x03, 0x00, 0xc0, 0x03,
X   0xc0, 0xbf, 0x03, 0xe0, 0x7f, 0x03, 0xf0, 0xff, 0x02, 0xf8, 0xff, 0x01,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
END_OF_FILE
if test 650 -ne `wc -c <'bitmaps/numero_3.bm'`; then
    echo shar: \"'bitmaps/numero_3.bm'\" unpacked with wrong size!
fi
# end of 'bitmaps/numero_3.bm'
fi
if test -f 'bitmaps/numero_4.bm' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'bitmaps/numero_4.bm'\"
else
echo shar: Extracting \"'bitmaps/numero_4.bm'\" \(650 characters\)
sed "s/^X//" >'bitmaps/numero_4.bm' <<'END_OF_FILE'
X#define numero_4_width 20
X#define numero_4_height 30
Xstatic char numero_4_bits[] = {
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x02,
X   0x0c, 0x00, 0x03, 0x1c, 0x80, 0x03, 0x3c, 0xc0, 0x03, 0x3c, 0xc0, 0x03,
X   0x3c, 0xc0, 0x03, 0x3c, 0xc0, 0x03, 0x3c, 0xc0, 0x03, 0x1c, 0x80, 0x03,
X   0xec, 0x7f, 0x03, 0xf4, 0xff, 0x02, 0xf8, 0xff, 0x01, 0xf0, 0xff, 0x02,
X   0xe0, 0x7f, 0x03, 0x00, 0x80, 0x03, 0x00, 0xc0, 0x03, 0x00, 0xc0, 0x03,
X   0x00, 0xc0, 0x03, 0x00, 0xc0, 0x03, 0x00, 0xc0, 0x03, 0x00, 0xc0, 0x03,
X   0x00, 0x80, 0x03, 0x00, 0x00, 0x03, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
END_OF_FILE
if test 650 -ne `wc -c <'bitmaps/numero_4.bm'`; then
    echo shar: \"'bitmaps/numero_4.bm'\" unpacked with wrong size!
fi
# end of 'bitmaps/numero_4.bm'
fi
if test -f 'bitmaps/numero_5.bm' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'bitmaps/numero_5.bm'\"
else
echo shar: Extracting \"'bitmaps/numero_5.bm'\" \(650 characters\)
sed "s/^X//" >'bitmaps/numero_5.bm' <<'END_OF_FILE'
X#define numero_5_width 20
X#define numero_5_height 30
Xstatic char numero_5_bits[] = {
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0xff, 0x01, 0xf4, 0xff, 0x00,
X   0xec, 0x7f, 0x00, 0xdc, 0x3f, 0x00, 0x3c, 0x00, 0x00, 0x3c, 0x00, 0x00,
X   0x3c, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x1c, 0x00, 0x00,
X   0xec, 0x7f, 0x00, 0xf4, 0xff, 0x00, 0xf8, 0xff, 0x01, 0xf0, 0xff, 0x02,
X   0xe0, 0x7f, 0x03, 0x00, 0x80, 0x03, 0x00, 0xc0, 0x03, 0x00, 0xc0, 0x03,
X   0x00, 0xc0, 0x03, 0x00, 0xc0, 0x03, 0x00, 0xc0, 0x03, 0x00, 0xc0, 0x03,
X   0xc0, 0xbf, 0x03, 0xe0, 0x7f, 0x03, 0xf0, 0xff, 0x02, 0xf8, 0xff, 0x01,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
END_OF_FILE
if test 650 -ne `wc -c <'bitmaps/numero_5.bm'`; then
    echo shar: \"'bitmaps/numero_5.bm'\" unpacked with wrong size!
fi
# end of 'bitmaps/numero_5.bm'
fi
if test -f 'bitmaps/numero_6.bm' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'bitmaps/numero_6.bm'\"
else
echo shar: Extracting \"'bitmaps/numero_6.bm'\" \(650 characters\)
sed "s/^X//" >'bitmaps/numero_6.bm' <<'END_OF_FILE'
X#define numero_6_width 20
X#define numero_6_height 30
Xstatic char numero_6_bits[] = {
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0xff, 0x01, 0xf4, 0xff, 0x00,
X   0xec, 0x7f, 0x00, 0xdc, 0x3f, 0x00, 0x3c, 0x00, 0x00, 0x3c, 0x00, 0x00,
X   0x3c, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x1c, 0x00, 0x00,
X   0xec, 0x7f, 0x00, 0xf4, 0xff, 0x00, 0xf8, 0xff, 0x01, 0xf4, 0xff, 0x02,
X   0xec, 0x7f, 0x03, 0x1c, 0x80, 0x03, 0x3c, 0xc0, 0x03, 0x3c, 0xc0, 0x03,
X   0x3c, 0xc0, 0x03, 0x3c, 0xc0, 0x03, 0x3c, 0xc0, 0x03, 0x3c, 0xc0, 0x03,
X   0xdc, 0xbf, 0x03, 0xec, 0x7f, 0x03, 0xf4, 0xff, 0x02, 0xf8, 0xff, 0x01,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
END_OF_FILE
if test 650 -ne `wc -c <'bitmaps/numero_6.bm'`; then
    echo shar: \"'bitmaps/numero_6.bm'\" unpacked with wrong size!
fi
# end of 'bitmaps/numero_6.bm'
fi
if test -f 'bitmaps/numero_7.bm' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'bitmaps/numero_7.bm'\"
else
echo shar: Extracting \"'bitmaps/numero_7.bm'\" \(650 characters\)
sed "s/^X//" >'bitmaps/numero_7.bm' <<'END_OF_FILE'
X#define numero_7_width 20
X#define numero_7_height 30
Xstatic char numero_7_bits[] = {
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0xff, 0x01, 0xf0, 0xff, 0x02,
X   0xe0, 0x7f, 0x03, 0xc0, 0xbf, 0x03, 0x00, 0xc0, 0x03, 0x00, 0xc0, 0x03,
X   0x00, 0xc0, 0x03, 0x00, 0xc0, 0x03, 0x00, 0xc0, 0x03, 0x00, 0x80, 0x03,
X   0x00, 0x00, 0x03, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02,
X   0x00, 0x00, 0x03, 0x00, 0x80, 0x03, 0x00, 0xc0, 0x03, 0x00, 0xc0, 0x03,
X   0x00, 0xc0, 0x03, 0x00, 0xc0, 0x03, 0x00, 0xc0, 0x03, 0x00, 0xc0, 0x03,
X   0x00, 0x80, 0x03, 0x00, 0x00, 0x03, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
END_OF_FILE
if test 650 -ne `wc -c <'bitmaps/numero_7.bm'`; then
    echo shar: \"'bitmaps/numero_7.bm'\" unpacked with wrong size!
fi
# end of 'bitmaps/numero_7.bm'
fi
if test -f 'bitmaps/numero_8.bm' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'bitmaps/numero_8.bm'\"
else
echo shar: Extracting \"'bitmaps/numero_8.bm'\" \(650 characters\)
sed "s/^X//" >'bitmaps/numero_8.bm' <<'END_OF_FILE'
X#define numero_8_width 20
X#define numero_8_height 30
Xstatic char numero_8_bits[] = {
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0xff, 0x01, 0xf4, 0xff, 0x02,
X   0xec, 0x7f, 0x03, 0xdc, 0xbf, 0x03, 0x3c, 0xc0, 0x03, 0x3c, 0xc0, 0x03,
X   0x3c, 0xc0, 0x03, 0x3c, 0xc0, 0x03, 0x3c, 0xc0, 0x03, 0x1c, 0x80, 0x03,
X   0xec, 0x7f, 0x03, 0xf4, 0xff, 0x02, 0xf8, 0xff, 0x01, 0xf4, 0xff, 0x02,
X   0xec, 0x7f, 0x03, 0x1c, 0x80, 0x03, 0x3c, 0xc0, 0x03, 0x3c, 0xc0, 0x03,
X   0x3c, 0xc0, 0x03, 0x3c, 0xc0, 0x03, 0x3c, 0xc0, 0x03, 0x3c, 0xc0, 0x03,
X   0xdc, 0xbf, 0x03, 0xec, 0x7f, 0x03, 0xf4, 0xff, 0x02, 0xf8, 0xff, 0x01,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
END_OF_FILE
if test 650 -ne `wc -c <'bitmaps/numero_8.bm'`; then
    echo shar: \"'bitmaps/numero_8.bm'\" unpacked with wrong size!
fi
# end of 'bitmaps/numero_8.bm'
fi
if test -f 'bitmaps/numero_9.bm' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'bitmaps/numero_9.bm'\"
else
echo shar: Extracting \"'bitmaps/numero_9.bm'\" \(650 characters\)
sed "s/^X//" >'bitmaps/numero_9.bm' <<'END_OF_FILE'
X#define numero_9_width 20
X#define numero_9_height 30
Xstatic char numero_9_bits[] = {
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0xff, 0x01, 0xf4, 0xff, 0x02,
X   0xec, 0x7f, 0x03, 0xdc, 0xbf, 0x03, 0x3c, 0xc0, 0x03, 0x3c, 0xc0, 0x03,
X   0x3c, 0xc0, 0x03, 0x3c, 0xc0, 0x03, 0x3c, 0xc0, 0x03, 0x1c, 0x80, 0x03,
X   0xec, 0x7f, 0x03, 0xf4, 0xff, 0x02, 0xf8, 0xff, 0x01, 0xf0, 0xff, 0x02,
X   0xe0, 0x7f, 0x03, 0x00, 0x80, 0x03, 0x00, 0xc0, 0x03, 0x00, 0xc0, 0x03,
X   0x00, 0xc0, 0x03, 0x00, 0xc0, 0x03, 0x00, 0xc0, 0x03, 0x00, 0xc0, 0x03,
X   0xc0, 0xbf, 0x03, 0xe0, 0x7f, 0x03, 0xf0, 0xff, 0x02, 0xf8, 0xff, 0x01,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
END_OF_FILE
if test 650 -ne `wc -c <'bitmaps/numero_9.bm'`; then
    echo shar: \"'bitmaps/numero_9.bm'\" unpacked with wrong size!
fi
# end of 'bitmaps/numero_9.bm'
fi
if test -f 'bitmaps/reflet_manquee.bm' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'bitmaps/reflet_manquee.bm'\"
else
echo shar: Extracting \"'bitmaps/reflet_manquee.bm'\" \(479 characters\)
sed "s/^X//" >'bitmaps/reflet_manquee.bm' <<'END_OF_FILE'
X#define reflet_manquee_width 20
X#define reflet_manquee_height 20
Xstatic char reflet_manquee_bits[] = {
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00,
X   0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
END_OF_FILE
if test 479 -ne `wc -c <'bitmaps/reflet_manquee.bm'`; then
    echo shar: \"'bitmaps/reflet_manquee.bm'\" unpacked with wrong size!
fi
# end of 'bitmaps/reflet_manquee.bm'
fi
if test -f 'bitmaps/select_blanc.bm' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'bitmaps/select_blanc.bm'\"
else
echo shar: Extracting \"'bitmaps/select_blanc.bm'\" \(1349 characters\)
sed "s/^X//" >'bitmaps/select_blanc.bm' <<'END_OF_FILE'
X#define select_blanc_width 40
X#define select_blanc_height 40
Xstatic char select_blanc_bits[] = {
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00,
X   0x00, 0x00, 0xc0, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x00, 0x00, 0x00, 0x00,
X   0xe0, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x00,
X   0x00, 0x00, 0x00, 0xe0, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x00, 0x00, 0x00,
X   0x00, 0xe0, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x00, 0x00, 0x00, 0x00, 0xe0,
X   0x00, 0x00, 0x00, 0x00, 0xe0, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x00, 0x00,
X   0x00, 0x00, 0xe0, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x00, 0x00, 0x00, 0x00,
X   0xe0, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x00,
X   0x00, 0x00, 0x00, 0xe0, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x00, 0x00, 0x00,
X   0x00, 0xe0, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x00, 0x00, 0x00, 0x00, 0xe0,
X   0x00, 0x00, 0x00, 0x00, 0xe0, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x00, 0x00,
X   0x00, 0x00, 0xe0, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x00, 0x00, 0x00, 0x00,
X   0xe0, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x00,
X   0x00, 0x00, 0x00, 0xe0, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x00, 0x00, 0x00,
X   0x00, 0xe0, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x00, 0x00, 0x00, 0x00, 0xe0,
X   0x00, 0x00, 0x00, 0x00, 0xe0, 0xf8, 0xff, 0xff, 0xff, 0xff, 0xfc, 0xff,
X   0xff, 0xff, 0xff, 0xfe, 0xff, 0xff, 0xff, 0xff};
END_OF_FILE
if test 1349 -ne `wc -c <'bitmaps/select_blanc.bm'`; then
    echo shar: \"'bitmaps/select_blanc.bm'\" unpacked with wrong size!
fi
# end of 'bitmaps/select_blanc.bm'
fi
if test -f 'bitmaps/select_gris.bm' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'bitmaps/select_gris.bm'\"
else
echo shar: Extracting \"'bitmaps/select_gris.bm'\" \(1346 characters\)
sed "s/^X//" >'bitmaps/select_gris.bm' <<'END_OF_FILE'
X#define select_gris_width 40
X#define select_gris_height 40
Xstatic char select_gris_bits[] = {
X   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x7f, 0xff, 0xff,
X   0xff, 0xff, 0x3f, 0x07, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00,
X   0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x07,
X   0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00,
X   0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00,
X   0x07, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00,
X   0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00,
X   0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x07,
X   0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00,
X   0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00,
X   0x07, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00,
X   0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00,
X   0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x07,
X   0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00,
X   0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00,
X   0x07, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00,
X   0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00};
END_OF_FILE
if test 1346 -ne `wc -c <'bitmaps/select_gris.bm'`; then
    echo shar: \"'bitmaps/select_gris.bm'\" unpacked with wrong size!
fi
# end of 'bitmaps/select_gris.bm'
fi
if test -f 'bitmaps/triste.bm' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'bitmaps/triste.bm'\"
else
echo shar: Extracting \"'bitmaps/triste.bm'\" \(1331 characters\)
sed "s/^X//" >'bitmaps/triste.bm' <<'END_OF_FILE'
X#define triste_width 40
X#define triste_height 40
Xstatic char triste_bits[] = {
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00,
X   0xe0, 0xff, 0x07, 0x00, 0x00, 0xf8, 0xff, 0x1f, 0x00, 0x00, 0xfc, 0xff,
X   0x3f, 0x00, 0x00, 0xfe, 0xff, 0x7f, 0x00, 0x00, 0xff, 0xff, 0xff, 0x00,
X   0x00, 0xff, 0xff, 0xff, 0x00, 0x80, 0xdf, 0x7e, 0xfb, 0x01, 0x80, 0x3f,
X   0xff, 0xfc, 0x01, 0x80, 0x3f, 0xff, 0xfc, 0x01, 0xc0, 0xdf, 0x7e, 0xfb,
X   0x03, 0xc0, 0xff, 0xff, 0xff, 0x03, 0xc0, 0xff, 0xff, 0xff, 0x03, 0xc0,
X   0xff, 0xff, 0xff, 0x03, 0xc0, 0xff, 0xff, 0xff, 0x03, 0xc0, 0xff, 0xff,
X   0xff, 0x03, 0xc0, 0xff, 0xff, 0xff, 0x03, 0xc0, 0xff, 0xff, 0xff, 0x03,
X   0x80, 0xff, 0x00, 0xff, 0x01, 0x80, 0x7f, 0xff, 0xfe, 0x01, 0x80, 0xbf,
X   0xff, 0xfd, 0x01, 0x00, 0xdf, 0xff, 0xfb, 0x00, 0x00, 0xff, 0xff, 0xff,
X   0x00, 0x00, 0xfe, 0xff, 0x7f, 0x00, 0x00, 0xfc, 0xff, 0x3f, 0x00, 0x00,
X   0xf8, 0xff, 0x1f, 0x00, 0x00, 0xe0, 0xff, 0x07, 0x00, 0x00, 0x00, 0xff,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
END_OF_FILE
if test 1331 -ne `wc -c <'bitmaps/triste.bm'`; then
    echo shar: \"'bitmaps/triste.bm'\" unpacked with wrong size!
fi
# end of 'bitmaps/triste.bm'
fi
if test -f 'demineur.c' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'demineur.c'\"
else
echo shar: Extracting \"'demineur.c'\" \(7984 characters\)
sed "s/^X//" >'demineur.c' <<'END_OF_FILE'
X/* ********************************************************************** */
X/*                                                                        */
X/* xdemineur - Jeu de reflexion sous X, version 1.0                       */
X/*                                                                        */
X/* Copyright : Marc Baudoin (baudoin@ensta.fr)                            */
X/*                                                                        */
X/*            |\                                                          */
X/*          |\| \                                                         */
X/*          |//  )                                                        */
X/*        |\ /  /        /\/\_                                            */
X/*        |//  /        /. . /                                            */
X/*      |\ /  /     ___/    |_                                            */
X/*      |//  /     (____/    /_/\_                                        */
X/*       |__|      (_____/ __     >                                       */
X/*     /| ___  ________ _< \ \__  >                                       */
X/*     \|| __\| _|_   _/ \\ \___\/                                        */
X/*       | __\____ | |/ _ \\    >                                         */
X/*     /||___\_____|___/ \_\\  _>                                         */
X/*     \|____           ____ \|                                           */
X/*       \   \_________/   /                                              */
X/*        \   _    _      /                                               */
X/*         \_//   //_____/                                                */
X/*           (_   \ (_  _\                                                */
X/*             |/\|   \/                                                  */
X/*                                                                        */
X/* Ecole Nationale Superieure de Techniques Avancees (ENSTA)              */
X/* 32, boulevard Victor - 75015 Paris - France                            */
X/*                                                                        */
X/* Vous avez le droit d'utiliser et de distribuer xdemineur et sa         */
X/* documentation pourvu que cette notice de copyright apparaisse sur      */
X/* toutes les copies et que vous ne tiriez aucun profit de mon programme. */
X/*                                                                        */
X/* ********************************************************************** */
X
X
X
X#include <stdlib.h>
X#include <sys/time.h>
X#include "demineur.h"
X
Xstruct jeu **tableau ;   /* le tableau de jeu */
X
Xint nb_lig = NB_LIG ;    /* nombre de lignes   du tableau de jeu */
Xint nb_col = NB_COL ;    /* nombre de colonnes du tableau de jeu */
Xint nb_mines ;           /* nombre de mines    du tableau de jeu */
X
Xint mines ;              /* nombre de mines restant a trouver */
X
Xtime_t temps ;           /* nombre de secondes ecoulees depuis le debut du jeu */
X
XBOOLEAN perdu , gagne , jeu , ouvre = FALSE ;
X
X/* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Gestion du jeu ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */
X
Xremplis_et_compte ( )
X{
X   register int l , c , i ;
X
X   /* initialisation des variables */
X
X   mines = nb_mines ;
X   temps = 0L ;
X   perdu = gagne = jeu = FALSE ;
X
X   /* initialisation du tableau */
X
X   for ( l = 0 ; l < nb_lig + 2 ; l ++ )
X   {
X      for ( c = 0 ; c < nb_col + 2 ; c ++ )
X      {
X         tableau [ l ] [ c ] . mine   = FALSE ;
X         tableau [ l ] [ c ] . nombre = 0 ;
X         tableau [ l ] [ c ] . etat   = COUVERTE ;
X      }
X   }
X
X   /* pose des mines */
X
X   srand48 ( time ( 0 ) ) ;
X   i = nb_mines ;
X   while ( i > 0 )
X   {
X      l = 1 + ( int ) ( lrand48 ( ) % nb_lig ) ;
X      c = 1 + ( int ) ( lrand48 ( ) % nb_col ) ;
X      if ( ! tableau [ l ] [ c ] . mine )
X      {
X         tableau [ l ] [ c ] . mine = TRUE ;
X         i -- ;
X      }
X   }
X
X   /* comptage des mines */
X
X   for ( l = 1 ; l <= nb_lig ; l ++ )
X   {
X      for ( c = 1 ; c <= nb_col ; c ++ )
X      {
X         tableau [ l ] [ c ] . nombre = mine01 ( l - 1 , c - 1 ) +
X                                        mine01 ( l - 1 , c     ) +
X                                        mine01 ( l - 1 , c + 1 ) +
X                                        mine01 ( l     , c - 1 ) +
X                                        mine01 ( l     , c + 1 ) +
X                                        mine01 ( l + 1 , c - 1 ) +
X                                        mine01 ( l + 1 , c     ) +
X                                        mine01 ( l + 1 , c + 1 ) ;
X      }
X   }
X
X   /* ouverture automatique */
X
X   while ( ouvre )
X   {
X      l = 1 + ( int ) ( lrand48 ( ) % nb_lig ) ;
X      c = 1 + ( int ) ( lrand48 ( ) % nb_col ) ;
X      if ( tableau [ l ] [ c ] . nombre == 0 &&
X           ! tableau [ l ] [ c ] . mine )
X      {
X         decouvre ( l , c ) ;
X         break ;
X      }
X   }
X}
X
Xint mine01 ( lig , col )
Xint lig , col ;
X{
X   return ( tableau [ lig ] [ col ] . mine ? 1 : 0 ) ;
X}
X
Xjoue ( lig , col )
Xint lig , col ;
X{
X   if ( tableau [ lig ] [ col ] . mine )   /* perdu ! */
X   {
X      perdu = TRUE ;
X      jeu = FALSE ;
X      tableau [ lig ] [ col ] . etat = DECOUVERTE ;
X      affiche_jeu ( ) ;
X   }
X   else if ( tableau [ lig ] [ col ] . nombre == 0 )
X   {
X      decouvre ( lig , col ) ;
X   }
X   else
X   {
X      tableau [ lig ] [ col ] . etat = DECOUVERTE ;
X      affiche_case ( lig , col ) ;
X   }
X   if ( mines == 0 )   /* gagne ? */
X   {
X      gagne_perdu ( ) ;
X   }
X}
X
Xdecouvre ( lig , col )
Xint lig , col ;
X{
X   if ( lig >= 1 && lig <= nb_lig && col >= 1 && col <= nb_col )
X   {
X      if ( tableau [ lig ] [ col ] . etat != DECOUVERTE &&
X           tableau [ lig ] [ col ] . etat != MARQUEE )
X      {
X         tableau [ lig ] [ col ] . etat = DECOUVERTE ;
X         affiche_case ( lig , col ) ;
X         if ( tableau [ lig ] [ col ] . mine )
X         {
X            perdu = TRUE ;
X            jeu = FALSE ;
X            affiche_jeu ( ) ;
X         }
X         if ( tableau [ lig ] [ col ] . nombre == 0 )
X         {
X            decouvre ( lig - 1 , col - 1 ) ;
X            decouvre ( lig - 1 , col     ) ;
X            decouvre ( lig - 1 , col + 1 ) ;
X            decouvre ( lig     , col - 1 ) ;
X            decouvre ( lig     , col + 1 ) ;
X            decouvre ( lig + 1 , col - 1 ) ;
X            decouvre ( lig + 1 , col     ) ;
X            decouvre ( lig + 1 , col + 1 ) ;
X         }
X         if ( mines == 0 )   /* gagne ? */
X         {
X            gagne_perdu ( ) ;
X         }
X      }
X   }
X}
X
Xdouble_clic ( lig , col )
Xint lig , col ;
X{
X   decouvre ( lig - 1 , col - 1 ) ;
X   decouvre ( lig - 1 , col     ) ;
X   decouvre ( lig - 1 , col + 1 ) ;
X   decouvre ( lig     , col - 1 ) ;
X   decouvre ( lig     , col + 1 ) ;
X   decouvre ( lig + 1 , col - 1 ) ;
X   decouvre ( lig + 1 , col     ) ;
X   decouvre ( lig + 1 , col + 1 ) ;
X}
X
Xmarque ( lig , col )
Xint lig , col ;
X{
X   switch ( tableau [ lig ] [ col ] . etat )
X   {
X   case COUVERTE :
X      if ( mines > 0 )
X      {
X         tableau [ lig ] [ col ] . etat = MARQUEE ;
X         mines -- ;
X         nombre_de_mines ( ) ;
X         affiche_case ( lig , col ) ;
X         if ( mines == 0 )   /* gagne ? */
X         {
X               gagne_perdu ( ) ;
X         }
X      }
X      break ;
X   case MARQUEE :
X      tableau [ lig ] [ col ] . etat = INTERRO ;
X      mines ++ ;
X      nombre_de_mines ( ) ;
X      affiche_case ( lig , col ) ;
X      break ;
X   case INTERRO :
X      tableau [ lig ] [ col ] . etat = COUVERTE ;
X      affiche_case ( lig , col ) ;
X      break ;
X   }
X}
X
Xgagne_perdu ( )
X{
X   register int l , c ;
X   BOOLEAN ok = TRUE ;
X
X   for ( l = 1 ; l <= nb_lig ; l ++ )
X   {
X      for ( c = 1 ; c <= nb_col ; c ++ )
X      {
X         if ( tableau [ l ] [ c ] . etat != DECOUVERTE &&
X              tableau [ l ] [ c ] . etat != MARQUEE )
X         {
X            ok = FALSE ;
X         }
X      }
X   }
X   if ( ok )   /* gagne ! */
X   {
X      gagne = TRUE ;
X      jeu = FALSE ;
X      icone_perdu_gagne ( ) ;
X   }
X}
END_OF_FILE
if test 7984 -ne `wc -c <'demineur.c'`; then
    echo shar: \"'demineur.c'\" unpacked with wrong size!
fi
# end of 'demineur.c'
fi
if test -f 'demineur.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'demineur.h'\"
else
echo shar: Extracting \"'demineur.h'\" \(3240 characters\)
sed "s/^X//" >'demineur.h' <<'END_OF_FILE'
X/* ********************************************************************** */
X/*                                                                        */
X/* xdemineur - Jeu de reflexion sous X, version 1.0                       */
X/*                                                                        */
X/* Copyright : Marc Baudoin (baudoin@ensta.fr)                            */
X/*                                                                        */
X/*            |\                                                          */
X/*          |\| \                                                         */
X/*          |//  )                                                        */
X/*        |\ /  /        /\/\_                                            */
X/*        |//  /        /. . /                                            */
X/*      |\ /  /     ___/    |_                                            */
X/*      |//  /     (____/    /_/\_                                        */
X/*       |__|      (_____/ __     >                                       */
X/*     /| ___  ________ _< \ \__  >                                       */
X/*     \|| __\| _|_   _/ \\ \___\/                                        */
X/*       | __\____ | |/ _ \\    >                                         */
X/*     /||___\_____|___/ \_\\  _>                                         */
X/*     \|____           ____ \|                                           */
X/*       \   \_________/   /                                              */
X/*        \   _    _      /                                               */
X/*         \_//   //_____/                                                */
X/*           (_   \ (_  _\                                                */
X/*             |/\|   \/                                                  */
X/*                                                                        */
X/* Ecole Nationale Superieure de Techniques Avancees (ENSTA)              */
X/* 32, boulevard Victor - 75015 Paris - France                            */
X/*                                                                        */
X/* Vous avez le droit d'utiliser et de distribuer xdemineur et sa         */
X/* documentation pourvu que cette notice de copyright apparaisse sur      */
X/* toutes les copies et que vous ne tiriez aucun profit de mon programme. */
X/*                                                                        */
X/* ********************************************************************** */
X
X
X
X#define NB_LIG     16   /* nombre de lignes   du tableau de jeu (par defaut) */
X#define NB_COL     30   /* nombre de colonnes du tableau de jeu (par defaut) */
X#define NB_MINES   ( int ) ( ( double ) ( nb_lig * nb_col ) / 4.8 )
X
Xtypedef int BOOLEAN ;
X#define TRUE    1
X#define FALSE   0
X
Xstruct jeu
X{
X   BOOLEAN   mine ;     /* TRUE s'il y a une mine, FALSE sinon  */
X   int       nombre ;   /* nombre de mines autour de cette case */
X   enum
X   {
X      COUVERTE     /* on n'a pas regarde     */ ,
X      DECOUVERTE   /* on a decouvert la case */ ,
X      MARQUEE      /* il y a une mine        */ ,
X      INTERRO      /* on se demande          */
X   }
X   etat ;          /* etat de la case */
X} ;
END_OF_FILE
if test 3240 -ne `wc -c <'demineur.h'`; then
    echo shar: \"'demineur.h'\" unpacked with wrong size!
fi
# end of 'demineur.h'
fi
if test -f 'xdemineur.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'xdemineur.h'\"
else
echo shar: Extracting \"'xdemineur.h'\" \(3789 characters\)
sed "s/^X//" >'xdemineur.h' <<'END_OF_FILE'
X/* ********************************************************************** */
X/*                                                                        */
X/* xdemineur - Jeu de reflexion sous X, version 1.0                       */
X/*                                                                        */
X/* Copyright : Marc Baudoin (baudoin@ensta.fr)                            */
X/*                                                                        */
X/*            |\                                                          */
X/*          |\| \                                                         */
X/*          |//  )                                                        */
X/*        |\ /  /        /\/\_                                            */
X/*        |//  /        /. . /                                            */
X/*      |\ /  /     ___/    |_                                            */
X/*      |//  /     (____/    /_/\_                                        */
X/*       |__|      (_____/ __     >                                       */
X/*     /| ___  ________ _< \ \__  >                                       */
X/*     \|| __\| _|_   _/ \\ \___\/                                        */
X/*       | __\____ | |/ _ \\    >                                         */
X/*     /||___\_____|___/ \_\\  _>                                         */
X/*     \|____           ____ \|                                           */
X/*       \   \_________/   /                                              */
X/*        \   _    _      /                                               */
X/*         \_//   //_____/                                                */
X/*           (_   \ (_  _\                                                */
X/*             |/\|   \/                                                  */
X/*                                                                        */
X/* Ecole Nationale Superieure de Techniques Avancees (ENSTA)              */
X/* 32, boulevard Victor - 75015 Paris - France                            */
X/*                                                                        */
X/* Vous avez le droit d'utiliser et de distribuer xdemineur et sa         */
X/* documentation pourvu que cette notice de copyright apparaisse sur      */
X/* toutes les copies et que vous ne tiriez aucun profit de mon programme. */
X/*                                                                        */
X/* ********************************************************************** */
X
X
X
X#define BORD          15   /* bord entourant la fenetre et le tableau de jeu */
X#define LARG_BORD      3   /* largeur du bord (en pixels) */
X
X#define MARGE_HAUT    ( 2 * BORD + 50 )   /* marge superieure (icone, indicateurs) */
X
X#define LARG_CASE     20   /* largeur d'une case (en pixels) */
X#define HAUT_CASE     20   /* hauteur d'une case (en pixels) */
X
X#define X_JEU         BORD
X#define Y_JEU         MARGE_HAUT
X#define LARG_JEU      nb_col * LARG_CASE + nb_col + 1
X#define HAUT_JEU      nb_lig * HAUT_CASE + nb_lig + 1
X
X#define LARGEUR_FEN   LARG_JEU + 2 * BORD
X#define HAUTEUR_FEN   HAUT_JEU + MARGE_HAUT + BORD
X#define X_FEN         ( DisplayWidth  ( display , screen ) - LARGEUR_FEN ) / 2
X#define Y_FEN         ( DisplayHeight ( display , screen ) - HAUTEUR_FEN ) / 2
X
X#define HAUT_NUMERO   30
X#define LARG_NUMERO   20
X
X#define X_NB_MINES    ( MARGE_HAUT - HAUT_NUMERO ) / 2
X#define Y_NB_MINES    ( MARGE_HAUT - HAUT_NUMERO ) / 2
X
X#define LARG_ICONE    40
X#define HAUT_ICONE    40
X#define X_ICONE       ( LARGEUR_FEN - LARG_ICONE ) / 2
X#define Y_ICONE       ( MARGE_HAUT  - HAUT_ICONE ) / 2 
X
X#define X_CHRONO      LARGEUR_FEN - ( MARGE_HAUT - HAUT_NUMERO ) / 2 - 3 * LARG_NUMERO
X#define Y_CHRONO      ( MARGE_HAUT - HAUT_NUMERO ) / 2
END_OF_FILE
if test 3789 -ne `wc -c <'xdemineur.h'`; then
    echo shar: \"'xdemineur.h'\" unpacked with wrong size!
fi
# end of 'xdemineur.h'
fi
if test -f 'xdemineur.man' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'xdemineur.man'\"
else
echo shar: Extracting \"'xdemineur.man'\" \(3940 characters\)
sed "s/^X//" >'xdemineur.man' <<'END_OF_FILE'
X.\" Man page pour xdemineur, Copyright Marc Baudoin.
X.TH xdemineur 6 "05 janvier 1993"
X
X.SH NOM
X
Xxdemineur \- Eclatez-vous a trouver les mines.
X
X.SH SYNOPSIS
X
X.B xdemineur
X[\fB-display\fR \fIdisplay\fR] [\fB-l\fR \fIlignes\fR]
X[\fB-c\fR \fIcolonnes\fR] [\fB-m\fR \fImines\fR] [\fB-ouvre\fR]
X
X.SH DESCRIPTION
X
X.I xdemineur
Xest une version X du jeu du demineur.
X
XIl s'agit de decouvrir ou se trouvent les mines et de marquer leur emplacement
Xavec un petit drapeau. Vous disposez d'autant de drapeaux qu'il y a de mines,
Xpas un de plus. Le nombre de drapeaux qu'il vous reste a poser est affiche en
Xhaut a gauche. De plus, pour mettre un peu de piment dans ce jeu, il y a un
Xchronometre en haut a droite.
X
XTout le jeu se joue a la souris au moyen de deux boutons : les boutons de
Xgauche et de droite. Le bouton de gauche decouvre la case sur laquelle on
Xclique (esperons qu'elle ne cache pas une mine) et le bouton de droite pose
Xun drapeau. Si l'on reclique avec le bouton de droite sur une case marquee
Xd'un drapeau, celui-ci se transforme en point d'interrogation : c'est utile
Xlorsqu'on reflechit sur la position possible de certaines mines. Un nouveau
Xclic sur le bouton de droite et le point d'interrogation disparait. Cliquer
Xavec les deux boutons sur une case decouverte qui a tous ses drapeaux permet
Xde decouvrir les cases environnantes (cela fait gagner beaucoup de temps).
X
XPour commencer a jouer, il faut cliquer au hasard en decouvrant des cases pour
Xtrouver une "ouverture" (un certain nombre de cases qui se decouvrent toutes en
Xmeme temps), a moins que vous ayez specifie l'option
X.B -ouvre
X(elle permet une ouverture automatique).
X
XLes chiffres affiches dans les cases decouvertes indiquent le nombre de mines
Xqui se trouvent tout autour (par exemple, un 3 signifie qu'il y a trois mines
Xparmi les 8 cases adjacentes). Tout le jeu repose sur l'utilisation de ces
Xchiffres.
X
XEnfin, pour commencer une nouvelle partie, il suffit de cliquer sur le petit
Xbonhomme jaune au dessus du tableau de jeu.
X
X.SH OPTIONS
X
X.PP
X.TP 20
X.B -display \fIdisplay\fP
XAffiche le jeu sur l'ecran
X.I display
X(utile si le programme tourne sur une machine avec affichage sur une autre).
X.PP
X.TP 20
X.B -l \fIlignes\fP
XFixe a
X.I lignes
Xle nombre de lignes du tableau de jeu (16 par defaut).
X.PP
X.TP 20
X.B -c \fIcolonnes\fP
XFixe a
X.I colonnes
Xle nombre de colonnes du tableau de jeu (30 par defaut).
X.PP
X.TP 20
X.B -m \fImines\fP
XFixe a
X.I mines
Xle nombre de mines (par defaut nombre_de_lignes * nombre_de_colonnes / 4.8). Si
X.I mines
Xest plus grand que le nombre de cases du tableau de jeu, cette formule est
Xautomatiquement utilisee.
X.PP
X.TP 20
X.B -ouvre
Xtrouve automatiquement une ouverture au debut du jeu.
X
X.SH BUGS
X
XJ'ai concu
X.I xdemineur
Xde telle sorte qu'il fonctionne sur HP et sur Sun, mais je ne sais rien
Xde son comportement sur d'autres systemes.
X
XVeuillez me signaler tous les bugs de
X.I xdemineur
Xque vous pourrez trouver, ainsi que les adaptations que vous avez faites
X(nouvelles fonctions du jeu, modification pour execution sur certains
Xsystemes...) par
X.I mail baudoin@ensta.fr.
X
X.SH COPYRIGHT
X
XVous avez le droit d'utiliser et de distribuer
X.I xdemineur
Xet sa documentation pourvu que cette notice de copyright apparaisse sur
Xtoutes les copies et que vous ne tiriez aucun profit de mon programme.
X
X.SH AUTEUR
X 
XMarc Baudoin (baudoin@ensta.fr)
X
X        |\\
X      |\\| \\
X      |//  )
X    |\\ /  /        /\\/\\_
X    |//  /        /. . /
X  |\\ /  /     ___/    |_
X  |//  /     (____/    /_/\\_
X   |__|      (_____/ __     >
X /| ___  ________ _< \\ \\__  >
X \\|| __\\| _|_   _/ \\\\ \\___\\/      \" je sais, c'est pas beau
X   | __\\____ | |/ _ \\\\    >
X /||___\\_____|___/ \\_\\\\  _>
X \\|____           ____ \\|
X   \\   \\_________/   /
X    \\   _    _      /
X     \\_//   //_____/
X       (_   \\ (_  _\\
X         |/\\|   \\/
X
X
XEcole Nationale Superieure de Techniques Avancees (ENSTA)
X.br
X32, boulevard Victor - 75015 Paris - France
END_OF_FILE
if test 3940 -ne `wc -c <'xdemineur.man'`; then
    echo shar: \"'xdemineur.man'\" unpacked with wrong size!
fi
# end of 'xdemineur.man'
fi
echo shar: End of archive 2 \(of 3\).
cp /dev/null ark2isdone
MISSING=""
for I in 1 2 3 ; do
    if test ! -f ark${I}isdone ; then
	MISSING="${MISSING} ${I}"
    fi
done
if test "${MISSING}" = "" ; then
    echo You have unpacked all 3 archives.
    rm -f ark[1-9]isdone
else
    echo You still need to unpack the following archives:
    echo "        " ${MISSING}
fi
##  End of shell archive.
exit 0
