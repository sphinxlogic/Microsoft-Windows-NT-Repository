Path: uunet!zephyr.ens.tek.com!master!saab!billr
From: billr@saab.CNA.TEK.COM (Bill Randle)
Newsgroups: comp.sources.games
Subject: v14i019:  xpilot - Multiplayer gravity war game hand-shake program, Part17/24
Message-ID: <3314@master.CNA.TEK.COM>
Date: 4 Aug 92 19:30:34 GMT
Sender: news@master.CNA.TEK.COM
Lines: 1872
Approved: billr@saab.CNA.TEK.COM

Submitted-by: Bjoern Stabell <bjoerns@staff.cs.uit.no>
Posting-number: Volume 14, Issue 19
Archive-name: xpilot/Part17
Environment: X11, ANSI C



#! /bin/sh
# This is a shell archive.  Remove anything before this line, then unpack
# it by saving it into a file and typing "sh file".  To overwrite existing
# files, type "sh file -c".  You can also feed this as standard input via
# unshar, or by typing "sh <file", e.g..  If this archive is complete, you
# will see the following message at the end:
#		"End of archive 17 (of 24)."
# Contents:  src/Makefile src/icon.h src/map.c src/pack.h
# Wrapped by billr@saab on Tue Aug  4 10:38:58 1992
PATH=/bin:/usr/bin:/usr/ucb ; export PATH
if test -f 'src/Makefile' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'src/Makefile'\"
else
echo shar: Extracting \"'src/Makefile'\" \(36951 characters\)
sed "s/^X//" >'src/Makefile' <<'END_OF_FILE'
X# Makefile generated by imake - do not edit!
X# $XConsortium: imake.c,v 1.65 91/07/25 17:50:17 rws Exp $
X#
X# The cpp used on this machine replaces all newlines and multiple tabs and
X# spaces in a macro expansion with a single space.  Imake tries to compensate
X# for this, but is not always successful.
X#
X
X# -------------------------------------------------------------------------
X# Makefile generated from "Imake.tmpl" and </tmp/IIf.a05155>
X# $XConsortium: Imake.tmpl,v 1.139 91/09/16 08:52:48 rws Exp $
X#
X# Platform-specific parameters may be set in the appropriate <vendor>.cf
X# configuration files.  Site-specific parameters should be set in the file
X# site.def.  Full rebuilds are recommended if any parameters are changed.
X#
X# If your C preprocessor does not define any unique symbols, you will need
X# to set BOOTSTRAPCFLAGS when rebuilding imake (usually when doing
X# "make World" the first time).
X#
X
X# 57
X
X# 64
X
X# 71
X
X# 85
X
X# 92
X
X# 114
X
X# 121
X
X# 128
X
X# 136
X
X# 143
X
X# 152
X
X# 159
X
X# 184
X
X# 197
X
X# 208
X
X# 220
X
X# 230
X
X# 237
X
X# 246
X
X# 253
X
X# -------------------------------------------------------------------------
X# site-specific configuration parameters that need to come before
X# the platform-specific parameters - edit site.def to change
X
X# site:  $XConsortium: site.def,v 1.2 91/07/30 20:26:44 rws Exp $
X
X# 41
X
X# -------------------------------------------------------------------------
X# platform-specific configuration parameters - edit hp.cf to change
X
X# platform:  $XConsortium: hp.cf,v 1.48 91/12/18 09:43:08 rws Exp $
X
X# 27
X
X# $$
X
X# 27
X
X# 38
X
X# 283
X
X# 294
X
X# -------------------------------------------------------------------------
X# site-specific configuration parameters that go after
X# the platform-specific parameters - edit site.def to change
X
X# site:  $XConsortium: site.def,v 1.2 91/07/30 20:26:44 rws Exp $
X
X# 30
X
X# 37
X
X# 312
X
X# 315
X
X# 321
X
X# 324
X
X# 334
X
X# 344
X
X# 356
X
X# 362
X
X# 366
X
X# 378
X
X# 381
X
X# 390
X
X# 423
X
X# 428
X
X# 440
X
X# 445
X
X# 451
X
X# 463
X
X# 491
X
X# 504
X
X# 537
X
X# 540
X
X# 553
X
X# 560
X
X# 571
X
X# 577
X
X# 583
X
X# 606
X
X# 613
X
X# 619
X
X# 628
X
X# 638
X
X# 669
X
X            SHELL = /bin/sh
X
X              TOP = .
X      CURRENT_DIR = .
X
X               AR = ar clq
X  BOOTSTRAPCFLAGS =
X               CC = cc
X               AS = as
X
X               FC = f77
X      FDEBUGFLAGS =
X          FCFLAGS =  $(FDEBUGFLAGS)
X
X         COMPRESS = compress
X              CPP = /lib/cpp $(STD_CPP_DEFINES)
X    PREPROCESSCMD = cc -E $(STD_CPP_DEFINES)
X          INSTALL = $(BINDIR)/bsdinst
X               LD = ld
X             LINT = lint
X      LINTLIBFLAG = -o
X         LINTOPTS = -ax
X               LN = ln -s
X             MAKE = make
X               MV = mv -f
X               CP = cp
X# 712
X
X               RM = rm -f
X            TROFF = psroff
X         MSMACROS = -ms
X              TBL = tbl
X              EQN = eqn
X     STD_INCLUDES =
X  STD_CPP_DEFINES = -DSYSV
X      STD_DEFINES = -DSYSV
X EXTRA_LOAD_FLAGS =
X  EXTRA_LIBRARIES =
X             TAGS = ctags
X
X           MFLAGS = -$(MAKEFLAGS)
X
X    SHAREDCODEDEF = -DSHAREDCODE
X         SHLIBDEF =
X
X# 733
X
X# 739
X
X# 742
X
X# 745
X
X# 748
X
X# 751
X
X# 754
X
X# 757
X
X# 770
X
X    PROTO_DEFINES =
X
X# 777
X
X     INSTPGMFLAGS =
X
X     INSTBINFLAGS = -m 0755
X     INSTUIDFLAGS = -m 4755
X     INSTLIBFLAGS = -m 0755
X     INSTINCFLAGS = -m 0444
X     INSTMANFLAGS = -m 0444
X     INSTDATFLAGS = -m 0444
X    INSTKMEMFLAGS = -m 4755
X
X      PROJECTROOT = /usr/local
X
X     TOP_INCLUDES = -I$(INCROOT)
X
X# 797
X
X      CDEBUGFLAGS = +O2
X        CCOPTIONS = -Aa -D_HPUX_SOURCE
X
X      ALLINCLUDES = $(INCLUDES) $(EXTRA_INCLUDES) $(TOP_INCLUDES) $(STD_INCLUDES)
X       ALLDEFINES = $(ALLINCLUDES) $(STD_DEFINES) $(EXTRA_DEFINES) $(PROTO_DEFINES) $(DEFINES)
X           CFLAGS = $(CDEBUGFLAGS) $(CCOPTIONS) $(ALLDEFINES)
X        LINTFLAGS = $(LINTOPTS) -DLINT $(ALLDEFINES)
X# 813
X
X           LDLIBS = $(SYS_LIBRARIES) $(EXTRA_LIBRARIES)
X
X        LDOPTIONS = $(CDEBUGFLAGS) $(CCOPTIONS) $(LOCAL_LDFLAGS) -L$(USRLIBDIR)
X# 820
X
X   LDCOMBINEFLAGS = -X -r
X      DEPENDFLAGS =
X
X        MACROFILE = hp.cf
X           RM_CMD = $(RM) *.CKP *.ln *.BAK *.bak *.o core errs ,* *~ *.a .emacs_* tags TAGS make.log MakeOut
X
X    IMAKE_DEFINES =
X
X         IRULESRC = $(CONFIGDIR)
X        IMAKE_CMD = $(IMAKE) -DUseInstalled -I$(IRULESRC) $(IMAKE_DEFINES)
X# 834
X
X     ICONFIGFILES = $(IRULESRC)/Imake.tmpl $(IRULESRC)/Imake.rules \
X			$(IRULESRC)/Project.tmpl $(IRULESRC)/site.def \
X			$(IRULESRC)/$(MACROFILE) $(EXTRA_ICONFIGFILES)
X
X# -------------------------------------------------------------------------
X# X Window System Build Parameters
X# $XConsortium: Project.tmpl,v 1.138 91/09/10 09:02:12 rws Exp $
X
X# 21
X
X# 37
X
X# 62
X
X# 138
X
X# 169
X
X# 180
X
X# 197
X
X# 206
X
X# 211
X
X# 238
X
X# 241
X
X# 253
X
X# 261
X
X# 273
X
X# 332
X
X# 363
X
X# 375
X
X# 385
X
X# 388
X
X# 391
X
X# 394
X
X# 397
X
X# 400
X
X# 403
X
X# 406
X
X# 409
X
X# 412
X
X# 418
X
X# 424
X
X# 427
X
X# 430
X
X# 433
X
X# 436
X
X# 442
X
X# -------------------------------------------------------------------------
X# X Window System make variables; this need to be coordinated with rules
X
X          PATHSEP = /
X        USRLIBDIR = /usr/local/lib
X           BINDIR = /usr/local/bin
X          INCROOT = /usr/local/include
X     BUILDINCROOT = $(TOP)
X      BUILDINCDIR = $(BUILDINCROOT)/X11
X      BUILDINCTOP = ..
X           INCDIR = $(INCROOT)/X11
X           ADMDIR = /usr/adm
X           LIBDIR = $(USRLIBDIR)/X11
X        CONFIGDIR = $(LIBDIR)/config
X       LINTLIBDIR = $(USRLIBDIR)/lint
X
X          FONTDIR = $(LIBDIR)/fonts
X         XINITDIR = $(LIBDIR)/xinit
X           XDMDIR = $(LIBDIR)/xdm
X           TWMDIR = $(LIBDIR)/twm
X          MANPATH = /usr/local/man
X    MANSOURCEPATH = $(MANPATH)/man
X        MANSUFFIX = 1
X     LIBMANSUFFIX = 3
X           MANDIR = $(MANSOURCEPATH)$(MANSUFFIX)
X        LIBMANDIR = $(MANSOURCEPATH)$(LIBMANSUFFIX)
X           NLSDIR = $(LIBDIR)/nls
X        PEXAPIDIR = $(LIBDIR)/PEX
X      XAPPLOADDIR = $(LIBDIR)/app-defaults
X       FONTCFLAGS = -t
X
X     INSTAPPFLAGS = $(INSTDATFLAGS)
X
X            IMAKE = imake
X           DEPEND = makedepend
X              RGB = rgb
X# 492
X
X            FONTC = bdftopcf
X
X        MKFONTDIR = mkfontdir
X        MKDIRHIER = /bin/sh $(BINDIR)/mkdirhier
X# 508
X
X        CONFIGSRC = $(TOP)/config
X       DOCUTILSRC = $(TOP)/doc/util
X        CLIENTSRC = $(TOP)/clients
X          DEMOSRC = $(TOP)/demos
X           LIBSRC = $(TOP)/lib
X          FONTSRC = $(TOP)/fonts
X       INCLUDESRC = $(TOP)/X11
X        SERVERSRC = $(TOP)/server
X          UTILSRC = $(TOP)/util
X        SCRIPTSRC = $(UTILSRC)/scripts
X       EXAMPLESRC = $(TOP)/examples
X       CONTRIBSRC = $(TOP)/../contrib
X           DOCSRC = $(TOP)/doc
X           RGBSRC = $(TOP)/rgb
X        DEPENDSRC = $(UTILSRC)/makedepend
X         IMAKESRC = $(CONFIGSRC)
X         XAUTHSRC = $(LIBSRC)/Xau
X          XLIBSRC = $(LIBSRC)/X
X           XMUSRC = $(LIBSRC)/Xmu
X       TOOLKITSRC = $(LIBSRC)/Xt
X       AWIDGETSRC = $(LIBSRC)/Xaw
X       OLDXLIBSRC = $(LIBSRC)/oldX
X      XDMCPLIBSRC = $(LIBSRC)/Xdmcp
X      BDFTOSNFSRC = $(FONTSRC)/bdftosnf
X      BDFTOSNFSRC = $(FONTSRC)/clients/bdftosnf
X      BDFTOPCFSRC = $(FONTSRC)/clients/bdftopcf
X     MKFONTDIRSRC = $(FONTSRC)/clients/mkfontdir
X         FSLIBSRC = $(FONTSRC)/lib/fs
X    FONTSERVERSRC = $(FONTSRC)/server
X     EXTENSIONSRC = $(TOP)/extensions
X         XILIBSRC = $(EXTENSIONSRC)/lib/xinput
X      PHIGSLIBSRC = $(EXTENSIONSRC)/lib/PEX
X
X# 551
X
X# 565
X
X# 570
X
X# 577
X
X# $$
X
XSHLIBLDFLAGS = -b
XPICFLAGS = +Z
X
X  DEPEXTENSIONLIB =
X     EXTENSIONLIB = -lXext
X
X          DEPXLIB = $(DEPEXTENSIONLIB)
X             XLIB = $(EXTENSIONLIB) -lX11
X
X        DEPXMULIB = $(USRLIBDIR)/libXmu.sl
X           XMULIB = -lXmu
X
X       DEPOLDXLIB =
X          OLDXLIB = -loldX
X
X      DEPXTOOLLIB = $(USRLIBDIR)/libXt.sl
X         XTOOLLIB = -lXt
X
X        DEPXAWLIB = $(USRLIBDIR)/libXaw.sl
X           XAWLIB = -lXaw
X
X        DEPXILIB =
X           XILIB = -lXi
X
X        LDOPTIONS = $(CDEBUGFLAGS) $(CCOPTIONS) $(LOCAL_LDFLAGS) -L$(USRLIBDIR)
X# 47
X
X        SOXLIBREV = SharedXlibRev
X          SOXTREV = SharedXtRev
X         SOXAWREV = SharedXawRev
X        SOOLDXREV = SharedOldXRev
X         SOXMUREV = SharedXmuRev
X        SOXEXTREV = SharedXextRev
X      SOXINPUTREV = SharedXinputRev
X
X# 594
X
X# 598
X
X      DEPXAUTHLIB = $(USRLIBDIR)/libXau.a
X         XAUTHLIB =  -lXau
X      DEPXDMCPLIB = $(USRLIBDIR)/libXdmcp.a
X         XDMCPLIB =  -lXdmcp
X# 606
X
X# 610
X
X# 614
X
X# 618
X
X# 622
X
X        DEPPHIGSLIB = $(USRLIBDIR)/libphigs.a
X           PHIGSLIB =  -lphigs
X
X       DEPXBSDLIB = $(USRLIBDIR)/libXbsd.a
X          XBSDLIB =  -lXbsd
X
X LINTEXTENSIONLIB = $(LINTLIBDIR)/llib-lXext.ln
X         LINTXLIB = $(LINTLIBDIR)/llib-lX11.ln
X          LINTXMU = $(LINTLIBDIR)/llib-lXmu.ln
X        LINTXTOOL = $(LINTLIBDIR)/llib-lXt.ln
X          LINTXAW = $(LINTLIBDIR)/llib-lXaw.ln
X           LINTXI = $(LINTLIBDIR)/llib-lXi.ln
X        LINTPHIGS = $(LINTLIBDIR)/llib-lphigs.ln
X
X          DEPLIBS = $(DEPXAWLIB) $(DEPXMULIB) $(DEPXTOOLLIB) $(DEPXLIB)
X# 657
X
X         DEPLIBS1 = $(DEPLIBS)
X         DEPLIBS2 = $(DEPLIBS)
X         DEPLIBS3 = $(DEPLIBS)
X
X# -------------------------------------------------------------------------
X# Imake rules for building libraries, programs, scripts, and data files
X# rules:  $XConsortium: Imake.rules,v 1.123 91/09/16 20:12:16 rws Exp $
X
X# 162
X
X# 173
X
X# 353
X
X# 600
X
X# 615
X
X# 637
X
X# 708
X
X# 1341
X
X# 1442
X
X# 1465
X
X# 1484
X
X# 1499
X
X# -------------------------------------------------------------------------
X# start of Imakefile
X
X#
X# Imakefile - XPilot
X# /users/staff/bjoerns/src/cvs/xpilot/src/Makefile,v 1.17 1992/06/28 06:12:14 bjoerns Exp
X#
X
X############################################################################
X#
X# Miscellaneous flags.
X#
XMATHLIB = -lm
XSOCKLIB = lib/libsocklib.a
X
XCC = cc #-Aa -D_HPUX_SOURCE
X#CC = cc -Aa -D_HPUX_SOURCE		#HPUX
X#CC = cc -xansi -D__STDC__		#SGI Indigo?
X
XDEFINES = -DNO_LOG
X
XCDEBUGFLAGS = +O3 +OS +ESlit	#HPUX cc
X#CDEBUGFLAGS = -O		#gcc for instance?
X#HPUX: CDEBUGFLAGS = +O3 +OS +ESlit ... LDFLAGS: -Wl,-I first, then -Wl,-P
X
XUSLEEP_OBJ = usleep.o
X
X############################################################################
X#
X# Source and object files.
X#
X
XOBJS1 = server.o xinit.o dbuff.o draw.o event.o map.o math.o cmdline.o \
X        play.o player.o rules.o update.o collision.o default.o error.o \
X	robot.o $(STRCASECMP_OBJ)
XSRCS1 = server.c xinit.c dbuff.c draw.c event.c map.c math.c cmdline.c \
X        play.c player.c rules.c update.c collision.c default.c error.c \
X	robot.c
X
XOBJS2 = xpilot.o syslimit.o error.o $(USLEEP_OBJ)
XSRCS2 = xpilot.c syslimit.c error.c
X
X############################################################################
X#
X# Make subdirectories, socklib...
X#
XSUBDIRS = lib
X
Xall::
X	@case '${MFLAGS}' in *[ik]*) set +e;; esac; \
X	for i in $(SUBDIRS) ;\
X	do \
X	(cd $$i ; echo "making" all "in $(CURRENT_DIR)/$$i..."; \
X	$(MAKE) $(MFLAGS) 'CDEBUGFLAGS=$(CDEBUGFLAGS)' all); \
X	done
X
Xdepend::
X	@case '${MFLAGS}' in *[ik]*) set +e;; esac; \
X	for i in $(SUBDIRS) ;\
X	do \
X	(cd $$i ; echo "depending" "in $(CURRENT_DIR)/$$i..."; \
X	$(MAKE) $(MFLAGS)  depend); \
X	done
X
X############################################################################
X#
X# Make handshake and server program
X#
X
Xall:: xpilot xpilots
X
X OBJS = $(OBJS1) $(OBJS2) $(OBJS3)
X SRCS = $(SRCS1) $(SRCS2) $(SRCS3)
X
Xall:: $(PROGRAMS)
X
Xxpilots: $(OBJS1) $(DEPLIBS1)
X	if [ -f $@ ]; then $(RM) $@~; $(MV) $@ $@~; fi
X	$(CC) -o $@ $(LDOPTIONS) $(OBJS1) $(LDLIBS)  $(SOCKLIB)  $(MATHLIB) $(XLIB) $(EXTRA_LOAD_FLAGS)
X
Xinstall:: xpilots
X	@if [ -d $(DESTDIR)$(BINDIR) ]; then set +x; \
X	else (set -x; $(MKDIRHIER) $(DESTDIR)$(BINDIR)); fi
X	$(INSTALL) -c $(INSTPGMFLAGS)  xpilots $(DESTDIR)$(BINDIR)
X
Xinstall.man:: xpilots.man
X	@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
X	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
X	$(INSTALL) -c $(INSTMANFLAGS) xpilots.man $(DESTDIR)$(MANDIR)/xpilots.$(MANSUFFIX)
X
Xdepend::
X	$(DEPEND) $(DEPENDFLAGS) -s "# DO NOT DELETE" -- $(ALLDEFINES) -- $(SRCS)
X
Xlint:
X	$(LINT) $(LINTFLAGS) $(SRCS) $(LINTLIBS)
Xlint1:
X	$(LINT) $(LINTFLAGS) $(FILE) $(LINTLIBS)
X
Xclean::
X	$(RM) $(PROGRAMS)
X
Xxpilot: $(OBJS2) $(DEPLIBS2)
X	if [ -f $@ ]; then $(RM) $@~; $(MV) $@ $@~; fi
X	$(CC) -o $@ $(LDOPTIONS) $(OBJS2) $(LDLIBS)  $(SOCKLIB)   $(EXTRA_LOAD_FLAGS)
X
Xinstall:: xpilot
X	@if [ -d $(DESTDIR)$(BINDIR) ]; then set +x; \
X	else (set -x; $(MKDIRHIER) $(DESTDIR)$(BINDIR)); fi
X	$(INSTALL) -c $(INSTPGMFLAGS)  xpilot $(DESTDIR)$(BINDIR)
X
Xinstall.man:: xpilot.man
X	@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
X	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
X	$(INSTALL) -c $(INSTMANFLAGS) xpilot.man $(DESTDIR)$(MANDIR)/xpilot.$(MANSUFFIX)
X
X############################################################################
X#
X# Special rules
X#
Xlocked::
X	rlog -L -R RCS/?*,v
X
Xrcslog::
X	rlog RCS/?*,v >RCS.log
X
Xclean::
X	rm -f RCS.log
X
Xetags::
X	etags -t *.[chips]
X
X# -------------------------------------------------------------------------
X# common rules for all Makefiles - do not edit
X
Xemptyrule::
X
Xclean::
X	$(RM_CMD) "#"*
X
XMakefile::
X	-@if [ -f Makefile ]; then set -x; \
X	$(RM) Makefile.bak; $(MV) Makefile Makefile.bak; \
X	else exit 0; fi
X	$(IMAKE_CMD) -DTOPDIR=$(TOP) -DCURDIR=$(CURRENT_DIR)
X
Xtags::
X	$(TAGS) -w *.[ch]
X	$(TAGS) -xw *.[ch] > TAGS
X# 868
X
X# 876
X
X# -------------------------------------------------------------------------
X# rules for building in SUBDIRS - do not edit
X
Xinstall::
X	@case '${MFLAGS}' in *[ik]*) set +e;; esac; \
X	for i in $(SUBDIRS) ;\
X	do \
X	(cd $$i ; echo "installing" "in $(CURRENT_DIR)/$$i..."; \
X	$(MAKE) $(MFLAGS) DESTDIR='$(DESTDIR)' install); \
X	done
X
Xinstall.man::
X	@case '${MFLAGS}' in *[ik]*) set +e;; esac; \
X	for i in $(SUBDIRS) ;\
X	do \
X	(cd $$i ; echo "installing man pages" "in $(CURRENT_DIR)/$$i..."; \
X	$(MAKE) $(MFLAGS) DESTDIR='$(DESTDIR)' install.man); \
X	done
X
Xclean::
X	@case '${MFLAGS}' in *[ik]*) set +e;; esac; \
X	for i in $(SUBDIRS) ;\
X	do \
X	(cd $$i ; echo "cleaning" "in $(CURRENT_DIR)/$$i..."; \
X	$(MAKE) $(MFLAGS) RM_CMD='$(RM_CMD)' clean); \
X	done
X
Xtags::
X	@case '${MFLAGS}' in *[ik]*) set +e;; esac; \
X	for i in $(SUBDIRS) ;\
X	do \
X	(cd $$i ; echo "tagging" "in $(CURRENT_DIR)/$$i..."; \
X	$(MAKE) $(MFLAGS) TAGS='$(TAGS)' tags); \
X	done
X
XMakefiles::
X	@case '${MFLAGS}' in *[ik]*) set +e;; esac; \
X	for i in $(SUBDIRS) ;\
X	do \
X	echo "making Makefiles in $(CURRENT_DIR)/$$i..."; \
X	case "$$i" in \
X	./?*/?*/?*/?*) newtop=../../../../ sub=subsubsubsub;; \
X	./?*/?*/?*) newtop=../../../ sub=subsubsub;; \
X	./?*/?*) newtop=../../ sub=subsub;; \
X	./?*) newtop=../ sub=sub;; \
X	*/?*/?*/?*) newtop=../../../../ sub=subsubsubsub;; \
X	*/?*/?*) newtop=../../../ sub=subsubsub;; \
X	*/?*) newtop=../../ sub=subsub;; \
X	*) newtop=../ sub=sub;; \
X	esac; \
X	case "$(TOP)" in \
X	/?*) newtop= upprefix= ;; \
X	*) upprefix=../ ;; \
X	esac; \
X	$(MAKE) $${sub}dirMakefiles UPPREFIX=$$upprefix NEWTOP=$$newtop \
X	MAKEFILE_SUBDIR=$$i NEW_CURRENT_DIR=$(CURRENT_DIR)/$$i;\
X	done
X
XsubdirMakefiles:
X	$(RM) $(MAKEFILE_SUBDIR)/Makefile.bak
X	-@if [ -f $(MAKEFILE_SUBDIR)/Makefile ]; then set -x; \
X	$(MV) $(MAKEFILE_SUBDIR)/Makefile $(MAKEFILE_SUBDIR)/Makefile.bak; \
X	else exit 0; fi
X	cd $(MAKEFILE_SUBDIR); $(IMAKE_CMD) -DTOPDIR=$(UPPREFIX)$(TOP) -DCURDIR=$(NEW_CURRENT_DIR); \
X	$(MAKE) $(MFLAGS) Makefiles
X
XsubsubdirMakefiles:
X	$(RM) $(MAKEFILE_SUBDIR)/Makefile.bak
X	-@if [ -f $(MAKEFILE_SUBDIR)/Makefile ]; then set -x; \
X	$(MV) $(MAKEFILE_SUBDIR)/Makefile $(MAKEFILE_SUBDIR)/Makefile.bak; \
X	else exit 0; fi
X	cd $(MAKEFILE_SUBDIR); $(IMAKE_CMD) -DTOPDIR=$(UPPREFIX)$(UPPREFIX)$(TOP) -DCURDIR=$(NEW_CURRENT_DIR); \
X	$(MAKE) $(MFLAGS) Makefiles
X
XsubsubsubdirMakefiles:
X	$(RM) $(MAKEFILE_SUBDIR)/Makefile.bak
X	-@if [ -f $(MAKEFILE_SUBDIR)/Makefile ]; then set -x; \
X	$(MV) $(MAKEFILE_SUBDIR)/Makefile $(MAKEFILE_SUBDIR)/Makefile.bak; \
X	else exit 0; fi
X	cd $(MAKEFILE_SUBDIR); $(IMAKE_CMD) -DTOPDIR=$(UPPREFIX)$(UPPREFIX)$(UPPREFIX)$(TOP) -DCURDIR=$(NEW_CURRENT_DIR); \
X	$(MAKE) $(MFLAGS) Makefiles
X
XsubsubsubsubdirMakefiles:
X	$(RM) $(MAKEFILE_SUBDIR)/Makefile.bak
X	-@if [ -f $(MAKEFILE_SUBDIR)/Makefile ]; then set -x; \
X	$(MV) $(MAKEFILE_SUBDIR)/Makefile $(MAKEFILE_SUBDIR)/Makefile.bak; \
X	else exit 0; fi
X	cd $(MAKEFILE_SUBDIR); $(IMAKE_CMD) -DTOPDIR=$(UPPREFIX)$(UPPREFIX)$(UPPREFIX)$(UPPREFIX)$(TOP) -DCURDIR=$(NEW_CURRENT_DIR); \
X	$(MAKE) $(MFLAGS) Makefiles
X
Xincludes::
X	@case '${MFLAGS}' in *[ik]*) set +e;; esac; \
X	for i in $(SUBDIRS) ;\
X	do \
X	(cd $$i ; echo including "in $(CURRENT_DIR)/$$i..."; \
X	$(MAKE) $(MFLAGS)  includes); \
X	done
X
X# 904
X
X# -------------------------------------------------------------------------
X# dependencies generated by makedepend
X
X# DO NOT DELETE
X
Xserver.o: /usr/local/include/X11/Xproto.h /usr/local/include/X11/Xmd.h
Xserver.o: /usr/local/include/X11/Xprotostr.h /usr/local/include/X11/Xlib.h
Xserver.o: /usr/include/sys/types.h /usr/include/sys/stdsyms.h
Xserver.o: /usr/local/include/X11/X.h /usr/local/include/X11/Xfuncproto.h
Xserver.o: /usr/local/include/X11/Xosdefs.h /usr/include/stddef.h
Xserver.o: /usr/local/include/X11/Xos.h /usr/include/string.h
Xserver.o: /usr/include/fcntl.h /usr/include/sys/fcntl.h /usr/include/unistd.h
Xserver.o: /usr/include/sys/unistd.h /usr/include/sys/time.h
Xserver.o: /usr/include/time.h /usr/include/stdio.h /usr/include/signal.h
Xserver.o: /usr/include/sys/signal.h /usr/include/sys/syscall.h
Xserver.o: /usr/include/pwd.h /usr/include/sys/socket.h
Xserver.o: /usr/include/sys/ioctl.h /usr/include/netinet/in.h
Xserver.o: /usr/include/netdb.h /usr/include/setjmp.h global.h
Xserver.o: /usr/include/stdlib.h /usr/include/math.h
Xserver.o: /usr/local/include/X11/Intrinsic.h /usr/local/include/X11/Xutil.h
Xserver.o: /usr/local/include/X11/Xresource.h /usr/local/include/X11/Core.h
Xserver.o: /usr/local/include/X11/Composite.h
Xserver.o: /usr/local/include/X11/Constraint.h /usr/local/include/X11/Object.h
Xserver.o: /usr/local/include/X11/RectObj.h config.h types.h rules.h object.h
Xserver.o: limits.h /usr/include/values.h dbuff.h map.h draw.h bit.h version.h
Xserver.o: proto.h pack.h lib/socklib.h /usr/include/arpa/inet.h
Xserver.o: /usr/include/errno.h /usr/include/sys/errno.h error.h
Xserver.o: /usr/include/varargs.h robot.h
Xxinit.o: /usr/local/include/X11/Xproto.h /usr/local/include/X11/Xmd.h
Xxinit.o: /usr/local/include/X11/Xprotostr.h /usr/local/include/X11/Xlib.h
Xxinit.o: /usr/include/sys/types.h /usr/include/sys/stdsyms.h
Xxinit.o: /usr/local/include/X11/X.h /usr/local/include/X11/Xfuncproto.h
Xxinit.o: /usr/local/include/X11/Xosdefs.h /usr/include/stddef.h
Xxinit.o: /usr/local/include/X11/Xos.h /usr/include/string.h
Xxinit.o: /usr/include/fcntl.h /usr/include/sys/fcntl.h /usr/include/unistd.h
Xxinit.o: /usr/include/sys/unistd.h /usr/include/sys/time.h
Xxinit.o: /usr/include/time.h /usr/include/stdio.h /usr/include/setjmp.h
Xxinit.o: global.h /usr/include/stdlib.h /usr/include/math.h
Xxinit.o: /usr/local/include/X11/Intrinsic.h /usr/local/include/X11/Xutil.h
Xxinit.o: /usr/local/include/X11/Xresource.h /usr/local/include/X11/Core.h
Xxinit.o: /usr/local/include/X11/Composite.h
Xxinit.o: /usr/local/include/X11/Constraint.h /usr/local/include/X11/Object.h
Xxinit.o: /usr/local/include/X11/RectObj.h config.h types.h rules.h object.h
Xxinit.o: limits.h /usr/include/values.h dbuff.h map.h draw.h bit.h version.h
Xxinit.o: proto.h pack.h lib/socklib.h /usr/include/sys/socket.h
Xxinit.o: /usr/include/sys/ioctl.h /usr/include/netinet/in.h
Xxinit.o: /usr/include/arpa/inet.h /usr/include/netdb.h /usr/include/signal.h
Xxinit.o: /usr/include/sys/signal.h /usr/include/sys/syscall.h
Xxinit.o: /usr/include/errno.h /usr/include/sys/errno.h error.h
Xxinit.o: /usr/include/varargs.h icon.h
Xdbuff.o: /usr/include/stdio.h /usr/include/malloc.h
Xdbuff.o: /usr/include/sys/stdsyms.h /usr/include/sys/types.h
Xdbuff.o: /usr/local/include/X11/Xproto.h /usr/local/include/X11/Xmd.h
Xdbuff.o: /usr/local/include/X11/Xprotostr.h /usr/local/include/X11/Xlib.h
Xdbuff.o: /usr/local/include/X11/X.h /usr/local/include/X11/Xfuncproto.h
Xdbuff.o: /usr/local/include/X11/Xosdefs.h /usr/include/stddef.h
Xdbuff.o: /usr/local/include/X11/Xos.h /usr/include/string.h
Xdbuff.o: /usr/include/fcntl.h /usr/include/sys/fcntl.h /usr/include/unistd.h
Xdbuff.o: /usr/include/sys/unistd.h /usr/include/sys/time.h
Xdbuff.o: /usr/include/time.h global.h /usr/include/stdlib.h
Xdbuff.o: /usr/include/math.h /usr/local/include/X11/Intrinsic.h
Xdbuff.o: /usr/local/include/X11/Xutil.h /usr/local/include/X11/Xresource.h
Xdbuff.o: /usr/local/include/X11/Core.h /usr/local/include/X11/Composite.h
Xdbuff.o: /usr/local/include/X11/Constraint.h /usr/local/include/X11/Object.h
Xdbuff.o: /usr/local/include/X11/RectObj.h config.h types.h rules.h object.h
Xdbuff.o: limits.h /usr/include/values.h dbuff.h map.h draw.h bit.h version.h
Xdbuff.o: proto.h pack.h lib/socklib.h /usr/include/sys/socket.h
Xdbuff.o: /usr/include/sys/ioctl.h /usr/include/netinet/in.h
Xdbuff.o: /usr/include/arpa/inet.h /usr/include/netdb.h /usr/include/signal.h
Xdbuff.o: /usr/include/sys/signal.h /usr/include/sys/syscall.h
Xdbuff.o: /usr/include/setjmp.h /usr/include/errno.h /usr/include/sys/errno.h
Xdbuff.o: error.h /usr/include/varargs.h
Xdraw.o: /usr/local/include/X11/Xproto.h /usr/local/include/X11/Xmd.h
Xdraw.o: /usr/local/include/X11/Xprotostr.h /usr/local/include/X11/Xlib.h
Xdraw.o: /usr/include/sys/types.h /usr/include/sys/stdsyms.h
Xdraw.o: /usr/local/include/X11/X.h /usr/local/include/X11/Xfuncproto.h
Xdraw.o: /usr/local/include/X11/Xosdefs.h /usr/include/stddef.h
Xdraw.o: /usr/local/include/X11/Xos.h /usr/include/string.h
Xdraw.o: /usr/include/fcntl.h /usr/include/sys/fcntl.h /usr/include/unistd.h
Xdraw.o: /usr/include/sys/unistd.h /usr/include/sys/time.h /usr/include/time.h
Xdraw.o: /usr/include/stdio.h /usr/include/math.h global.h
Xdraw.o: /usr/include/stdlib.h /usr/local/include/X11/Intrinsic.h
Xdraw.o: /usr/local/include/X11/Xutil.h /usr/local/include/X11/Xresource.h
Xdraw.o: /usr/local/include/X11/Core.h /usr/local/include/X11/Composite.h
Xdraw.o: /usr/local/include/X11/Constraint.h /usr/local/include/X11/Object.h
Xdraw.o: /usr/local/include/X11/RectObj.h config.h types.h rules.h object.h
Xdraw.o: limits.h /usr/include/values.h dbuff.h map.h draw.h bit.h version.h
Xdraw.o: proto.h pack.h lib/socklib.h /usr/include/sys/socket.h
Xdraw.o: /usr/include/sys/ioctl.h /usr/include/netinet/in.h
Xdraw.o: /usr/include/arpa/inet.h /usr/include/netdb.h /usr/include/signal.h
Xdraw.o: /usr/include/sys/signal.h /usr/include/sys/syscall.h
Xdraw.o: /usr/include/setjmp.h /usr/include/errno.h /usr/include/sys/errno.h
Xdraw.o: error.h /usr/include/varargs.h
Xevent.o: /usr/local/include/X11/Xproto.h /usr/local/include/X11/Xmd.h
Xevent.o: /usr/local/include/X11/Xprotostr.h /usr/local/include/X11/Xlib.h
Xevent.o: /usr/include/sys/types.h /usr/include/sys/stdsyms.h
Xevent.o: /usr/local/include/X11/X.h /usr/local/include/X11/Xfuncproto.h
Xevent.o: /usr/local/include/X11/Xosdefs.h /usr/include/stddef.h
Xevent.o: /usr/local/include/X11/Xos.h /usr/include/string.h
Xevent.o: /usr/include/fcntl.h /usr/include/sys/fcntl.h /usr/include/unistd.h
Xevent.o: /usr/include/sys/unistd.h /usr/include/sys/time.h
Xevent.o: /usr/include/time.h /usr/local/include/X11/keysym.h
Xevent.o: /usr/local/include/X11/keysymdef.h global.h /usr/include/stdio.h
Xevent.o: /usr/include/stdlib.h /usr/include/math.h
Xevent.o: /usr/local/include/X11/Intrinsic.h /usr/local/include/X11/Xutil.h
Xevent.o: /usr/local/include/X11/Xresource.h /usr/local/include/X11/Core.h
Xevent.o: /usr/local/include/X11/Composite.h
Xevent.o: /usr/local/include/X11/Constraint.h /usr/local/include/X11/Object.h
Xevent.o: /usr/local/include/X11/RectObj.h config.h types.h rules.h object.h
Xevent.o: limits.h /usr/include/values.h dbuff.h map.h draw.h bit.h version.h
Xevent.o: proto.h pack.h lib/socklib.h /usr/include/sys/socket.h
Xevent.o: /usr/include/sys/ioctl.h /usr/include/netinet/in.h
Xevent.o: /usr/include/arpa/inet.h /usr/include/netdb.h /usr/include/signal.h
Xevent.o: /usr/include/sys/signal.h /usr/include/sys/syscall.h
Xevent.o: /usr/include/setjmp.h /usr/include/errno.h /usr/include/sys/errno.h
Xevent.o: error.h /usr/include/varargs.h score.h
Xmap.o: /usr/include/stdio.h /usr/include/stdlib.h /usr/include/sys/types.h
Xmap.o: /usr/include/sys/stdsyms.h /usr/include/sys/stat.h global.h
Xmap.o: /usr/include/math.h /usr/local/include/X11/Xlib.h
Xmap.o: /usr/local/include/X11/X.h /usr/local/include/X11/Xfuncproto.h
Xmap.o: /usr/local/include/X11/Xosdefs.h /usr/include/stddef.h
Xmap.o: /usr/local/include/X11/Intrinsic.h /usr/local/include/X11/Xutil.h
Xmap.o: /usr/local/include/X11/Xresource.h /usr/include/string.h
Xmap.o: /usr/local/include/X11/Core.h /usr/local/include/X11/Composite.h
Xmap.o: /usr/local/include/X11/Constraint.h /usr/local/include/X11/Object.h
Xmap.o: /usr/local/include/X11/RectObj.h config.h types.h rules.h object.h
Xmap.o: limits.h /usr/include/values.h dbuff.h map.h draw.h bit.h version.h
Xmap.o: proto.h pack.h lib/socklib.h /usr/include/sys/time.h
Xmap.o: /usr/include/sys/socket.h /usr/include/sys/ioctl.h
Xmap.o: /usr/include/netinet/in.h /usr/include/arpa/inet.h
Xmap.o: /usr/include/netdb.h /usr/include/signal.h /usr/include/sys/signal.h
Xmap.o: /usr/include/sys/syscall.h /usr/include/setjmp.h /usr/include/errno.h
Xmap.o: /usr/include/sys/errno.h error.h /usr/include/varargs.h
Xmath.o: global.h /usr/include/stdio.h /usr/include/stdlib.h
Xmath.o: /usr/include/math.h /usr/local/include/X11/Xlib.h
Xmath.o: /usr/include/sys/types.h /usr/include/sys/stdsyms.h
Xmath.o: /usr/local/include/X11/X.h /usr/local/include/X11/Xfuncproto.h
Xmath.o: /usr/local/include/X11/Xosdefs.h /usr/include/stddef.h
Xmath.o: /usr/local/include/X11/Intrinsic.h /usr/local/include/X11/Xutil.h
Xmath.o: /usr/local/include/X11/Xresource.h /usr/include/string.h
Xmath.o: /usr/local/include/X11/Core.h /usr/local/include/X11/Composite.h
Xmath.o: /usr/local/include/X11/Constraint.h /usr/local/include/X11/Object.h
Xmath.o: /usr/local/include/X11/RectObj.h config.h types.h rules.h object.h
Xmath.o: limits.h /usr/include/values.h dbuff.h map.h draw.h bit.h version.h
Xmath.o: proto.h pack.h lib/socklib.h /usr/include/sys/time.h
Xmath.o: /usr/include/sys/socket.h /usr/include/sys/ioctl.h
Xmath.o: /usr/include/netinet/in.h /usr/include/arpa/inet.h
Xmath.o: /usr/include/netdb.h /usr/include/signal.h /usr/include/sys/signal.h
Xmath.o: /usr/include/sys/syscall.h /usr/include/setjmp.h /usr/include/errno.h
Xmath.o: /usr/include/sys/errno.h error.h /usr/include/varargs.h
Xcmdline.o: /usr/include/stdlib.h global.h /usr/include/stdio.h
Xcmdline.o: /usr/include/math.h /usr/local/include/X11/Xlib.h
Xcmdline.o: /usr/include/sys/types.h /usr/include/sys/stdsyms.h
Xcmdline.o: /usr/local/include/X11/X.h /usr/local/include/X11/Xfuncproto.h
Xcmdline.o: /usr/local/include/X11/Xosdefs.h /usr/include/stddef.h
Xcmdline.o: /usr/local/include/X11/Intrinsic.h /usr/local/include/X11/Xutil.h
Xcmdline.o: /usr/local/include/X11/Xresource.h /usr/include/string.h
Xcmdline.o: /usr/local/include/X11/Core.h /usr/local/include/X11/Composite.h
Xcmdline.o: /usr/local/include/X11/Constraint.h
Xcmdline.o: /usr/local/include/X11/Object.h /usr/local/include/X11/RectObj.h
Xcmdline.o: config.h types.h rules.h object.h limits.h /usr/include/values.h
Xcmdline.o: dbuff.h map.h draw.h bit.h version.h proto.h pack.h lib/socklib.h
Xcmdline.o: /usr/include/sys/time.h /usr/include/sys/socket.h
Xcmdline.o: /usr/include/sys/ioctl.h /usr/include/netinet/in.h
Xcmdline.o: /usr/include/arpa/inet.h /usr/include/netdb.h
Xcmdline.o: /usr/include/signal.h /usr/include/sys/signal.h
Xcmdline.o: /usr/include/sys/syscall.h /usr/include/setjmp.h
Xcmdline.o: /usr/include/errno.h /usr/include/sys/errno.h error.h
Xcmdline.o: /usr/include/varargs.h robot.h
Xplay.o: /usr/include/stdio.h /usr/include/math.h global.h
Xplay.o: /usr/include/stdlib.h /usr/local/include/X11/Xlib.h
Xplay.o: /usr/include/sys/types.h /usr/include/sys/stdsyms.h
Xplay.o: /usr/local/include/X11/X.h /usr/local/include/X11/Xfuncproto.h
Xplay.o: /usr/local/include/X11/Xosdefs.h /usr/include/stddef.h
Xplay.o: /usr/local/include/X11/Intrinsic.h /usr/local/include/X11/Xutil.h
Xplay.o: /usr/local/include/X11/Xresource.h /usr/include/string.h
Xplay.o: /usr/local/include/X11/Core.h /usr/local/include/X11/Composite.h
Xplay.o: /usr/local/include/X11/Constraint.h /usr/local/include/X11/Object.h
Xplay.o: /usr/local/include/X11/RectObj.h config.h types.h rules.h object.h
Xplay.o: limits.h /usr/include/values.h dbuff.h map.h draw.h bit.h version.h
Xplay.o: proto.h pack.h lib/socklib.h /usr/include/sys/time.h
Xplay.o: /usr/include/sys/socket.h /usr/include/sys/ioctl.h
Xplay.o: /usr/include/netinet/in.h /usr/include/arpa/inet.h
Xplay.o: /usr/include/netdb.h /usr/include/signal.h /usr/include/sys/signal.h
Xplay.o: /usr/include/sys/syscall.h /usr/include/setjmp.h /usr/include/errno.h
Xplay.o: /usr/include/sys/errno.h error.h /usr/include/varargs.h score.h
Xplayer.o: /usr/include/stdio.h global.h /usr/include/stdlib.h
Xplayer.o: /usr/include/math.h /usr/local/include/X11/Xlib.h
Xplayer.o: /usr/include/sys/types.h /usr/include/sys/stdsyms.h
Xplayer.o: /usr/local/include/X11/X.h /usr/local/include/X11/Xfuncproto.h
Xplayer.o: /usr/local/include/X11/Xosdefs.h /usr/include/stddef.h
Xplayer.o: /usr/local/include/X11/Intrinsic.h /usr/local/include/X11/Xutil.h
Xplayer.o: /usr/local/include/X11/Xresource.h /usr/include/string.h
Xplayer.o: /usr/local/include/X11/Core.h /usr/local/include/X11/Composite.h
Xplayer.o: /usr/local/include/X11/Constraint.h /usr/local/include/X11/Object.h
Xplayer.o: /usr/local/include/X11/RectObj.h config.h types.h rules.h object.h
Xplayer.o: limits.h /usr/include/values.h dbuff.h map.h draw.h bit.h version.h
Xplayer.o: proto.h pack.h lib/socklib.h /usr/include/sys/time.h
Xplayer.o: /usr/include/sys/socket.h /usr/include/sys/ioctl.h
Xplayer.o: /usr/include/netinet/in.h /usr/include/arpa/inet.h
Xplayer.o: /usr/include/netdb.h /usr/include/signal.h
Xplayer.o: /usr/include/sys/signal.h /usr/include/sys/syscall.h
Xplayer.o: /usr/include/setjmp.h /usr/include/errno.h /usr/include/sys/errno.h
Xplayer.o: error.h /usr/include/varargs.h score.h robot.h
Xrules.o: global.h /usr/include/stdio.h /usr/include/stdlib.h
Xrules.o: /usr/include/math.h /usr/local/include/X11/Xlib.h
Xrules.o: /usr/include/sys/types.h /usr/include/sys/stdsyms.h
Xrules.o: /usr/local/include/X11/X.h /usr/local/include/X11/Xfuncproto.h
Xrules.o: /usr/local/include/X11/Xosdefs.h /usr/include/stddef.h
Xrules.o: /usr/local/include/X11/Intrinsic.h /usr/local/include/X11/Xutil.h
Xrules.o: /usr/local/include/X11/Xresource.h /usr/include/string.h
Xrules.o: /usr/local/include/X11/Core.h /usr/local/include/X11/Composite.h
Xrules.o: /usr/local/include/X11/Constraint.h /usr/local/include/X11/Object.h
Xrules.o: /usr/local/include/X11/RectObj.h config.h types.h rules.h object.h
Xrules.o: limits.h /usr/include/values.h dbuff.h map.h draw.h bit.h version.h
Xrules.o: proto.h pack.h lib/socklib.h /usr/include/sys/time.h
Xrules.o: /usr/include/sys/socket.h /usr/include/sys/ioctl.h
Xrules.o: /usr/include/netinet/in.h /usr/include/arpa/inet.h
Xrules.o: /usr/include/netdb.h /usr/include/signal.h /usr/include/sys/signal.h
Xrules.o: /usr/include/sys/syscall.h /usr/include/setjmp.h
Xrules.o: /usr/include/errno.h /usr/include/sys/errno.h error.h
Xrules.o: /usr/include/varargs.h
Xupdate.o: global.h /usr/include/stdio.h /usr/include/stdlib.h
Xupdate.o: /usr/include/math.h /usr/local/include/X11/Xlib.h
Xupdate.o: /usr/include/sys/types.h /usr/include/sys/stdsyms.h
Xupdate.o: /usr/local/include/X11/X.h /usr/local/include/X11/Xfuncproto.h
Xupdate.o: /usr/local/include/X11/Xosdefs.h /usr/include/stddef.h
Xupdate.o: /usr/local/include/X11/Intrinsic.h /usr/local/include/X11/Xutil.h
Xupdate.o: /usr/local/include/X11/Xresource.h /usr/include/string.h
Xupdate.o: /usr/local/include/X11/Core.h /usr/local/include/X11/Composite.h
Xupdate.o: /usr/local/include/X11/Constraint.h /usr/local/include/X11/Object.h
Xupdate.o: /usr/local/include/X11/RectObj.h config.h types.h rules.h object.h
Xupdate.o: limits.h /usr/include/values.h dbuff.h map.h draw.h bit.h version.h
Xupdate.o: proto.h pack.h lib/socklib.h /usr/include/sys/time.h
Xupdate.o: /usr/include/sys/socket.h /usr/include/sys/ioctl.h
Xupdate.o: /usr/include/netinet/in.h /usr/include/arpa/inet.h
Xupdate.o: /usr/include/netdb.h /usr/include/signal.h
Xupdate.o: /usr/include/sys/signal.h /usr/include/sys/syscall.h
Xupdate.o: /usr/include/setjmp.h /usr/include/errno.h /usr/include/sys/errno.h
Xupdate.o: error.h /usr/include/varargs.h score.h
Xcollision.o: global.h /usr/include/stdio.h /usr/include/stdlib.h
Xcollision.o: /usr/include/math.h /usr/local/include/X11/Xlib.h
Xcollision.o: /usr/include/sys/types.h /usr/include/sys/stdsyms.h
Xcollision.o: /usr/local/include/X11/X.h /usr/local/include/X11/Xfuncproto.h
Xcollision.o: /usr/local/include/X11/Xosdefs.h /usr/include/stddef.h
Xcollision.o: /usr/local/include/X11/Intrinsic.h
Xcollision.o: /usr/local/include/X11/Xutil.h
Xcollision.o: /usr/local/include/X11/Xresource.h /usr/include/string.h
Xcollision.o: /usr/local/include/X11/Core.h /usr/local/include/X11/Composite.h
Xcollision.o: /usr/local/include/X11/Constraint.h
Xcollision.o: /usr/local/include/X11/Object.h /usr/local/include/X11/RectObj.h
Xcollision.o: config.h types.h rules.h object.h limits.h /usr/include/values.h
Xcollision.o: dbuff.h map.h draw.h bit.h version.h proto.h pack.h
Xcollision.o: lib/socklib.h /usr/include/sys/time.h /usr/include/sys/socket.h
Xcollision.o: /usr/include/sys/ioctl.h /usr/include/netinet/in.h
Xcollision.o: /usr/include/arpa/inet.h /usr/include/netdb.h
Xcollision.o: /usr/include/signal.h /usr/include/sys/signal.h
Xcollision.o: /usr/include/sys/syscall.h /usr/include/setjmp.h
Xcollision.o: /usr/include/errno.h /usr/include/sys/errno.h error.h
Xcollision.o: /usr/include/varargs.h score.h robot.h
Xdefault.o: /usr/local/include/X11/keysym.h /usr/local/include/X11/keysymdef.h
Xdefault.o: global.h /usr/include/stdio.h /usr/include/stdlib.h
Xdefault.o: /usr/include/math.h /usr/local/include/X11/Xlib.h
Xdefault.o: /usr/include/sys/types.h /usr/include/sys/stdsyms.h
Xdefault.o: /usr/local/include/X11/X.h /usr/local/include/X11/Xfuncproto.h
Xdefault.o: /usr/local/include/X11/Xosdefs.h /usr/include/stddef.h
Xdefault.o: /usr/local/include/X11/Intrinsic.h /usr/local/include/X11/Xutil.h
Xdefault.o: /usr/local/include/X11/Xresource.h /usr/include/string.h
Xdefault.o: /usr/local/include/X11/Core.h /usr/local/include/X11/Composite.h
Xdefault.o: /usr/local/include/X11/Constraint.h
Xdefault.o: /usr/local/include/X11/Object.h /usr/local/include/X11/RectObj.h
Xdefault.o: config.h types.h rules.h object.h limits.h /usr/include/values.h
Xdefault.o: dbuff.h map.h draw.h bit.h version.h proto.h pack.h lib/socklib.h
Xdefault.o: /usr/include/sys/time.h /usr/include/sys/socket.h
Xdefault.o: /usr/include/sys/ioctl.h /usr/include/netinet/in.h
Xdefault.o: /usr/include/arpa/inet.h /usr/include/netdb.h
Xdefault.o: /usr/include/signal.h /usr/include/sys/signal.h
Xdefault.o: /usr/include/sys/syscall.h /usr/include/setjmp.h
Xdefault.o: /usr/include/errno.h /usr/include/sys/errno.h error.h
Xdefault.o: /usr/include/varargs.h
Xerror.o: error.h /usr/include/errno.h /usr/include/sys/errno.h
Xerror.o: /usr/include/sys/stdsyms.h /usr/include/stdio.h
Xerror.o: /usr/include/varargs.h
Xrobot.o: global.h /usr/include/stdio.h /usr/include/stdlib.h
Xrobot.o: /usr/include/math.h /usr/local/include/X11/Xlib.h
Xrobot.o: /usr/include/sys/types.h /usr/include/sys/stdsyms.h
Xrobot.o: /usr/local/include/X11/X.h /usr/local/include/X11/Xfuncproto.h
Xrobot.o: /usr/local/include/X11/Xosdefs.h /usr/include/stddef.h
Xrobot.o: /usr/local/include/X11/Intrinsic.h /usr/local/include/X11/Xutil.h
Xrobot.o: /usr/local/include/X11/Xresource.h /usr/include/string.h
Xrobot.o: /usr/local/include/X11/Core.h /usr/local/include/X11/Composite.h
Xrobot.o: /usr/local/include/X11/Constraint.h /usr/local/include/X11/Object.h
Xrobot.o: /usr/local/include/X11/RectObj.h config.h types.h rules.h object.h
Xrobot.o: limits.h /usr/include/values.h dbuff.h map.h draw.h bit.h version.h
Xrobot.o: proto.h pack.h lib/socklib.h /usr/include/sys/time.h
Xrobot.o: /usr/include/sys/socket.h /usr/include/sys/ioctl.h
Xrobot.o: /usr/include/netinet/in.h /usr/include/arpa/inet.h
Xrobot.o: /usr/include/netdb.h /usr/include/signal.h /usr/include/sys/signal.h
Xrobot.o: /usr/include/sys/syscall.h /usr/include/setjmp.h
Xrobot.o: /usr/include/errno.h /usr/include/sys/errno.h error.h
Xrobot.o: /usr/include/varargs.h score.h robot.h
Xxpilot.o: /usr/include/stdio.h /usr/include/stdlib.h /usr/include/pwd.h
Xxpilot.o: /usr/include/sys/socket.h /usr/include/sys/stdsyms.h
Xxpilot.o: /usr/include/sys/types.h /usr/include/sys/ioctl.h
Xxpilot.o: /usr/include/netinet/in.h /usr/include/netdb.h
Xxpilot.o: /usr/include/string.h /usr/include/unistd.h
Xxpilot.o: /usr/include/sys/unistd.h pack.h lib/socklib.h
Xxpilot.o: /usr/include/sys/time.h /usr/include/arpa/inet.h
Xxpilot.o: /usr/include/signal.h /usr/include/sys/signal.h
Xxpilot.o: /usr/include/sys/syscall.h /usr/include/setjmp.h
Xxpilot.o: /usr/include/errno.h /usr/include/sys/errno.h limits.h
Xxpilot.o: /usr/include/values.h types.h bit.h version.h config.h
Xsyslimit.o: /usr/include/stdio.h
Xerror.o: error.h /usr/include/errno.h /usr/include/sys/errno.h
Xerror.o: /usr/include/sys/stdsyms.h /usr/include/stdio.h
Xerror.o: /usr/include/varargs.h
END_OF_FILE
if test 36951 -ne `wc -c <'src/Makefile'`; then
    echo shar: \"'src/Makefile'\" unpacked with wrong size!
fi
# end of 'src/Makefile'
fi
if test -f 'src/icon.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'src/icon.h'\"
else
echo shar: Extracting \"'src/icon.h'\" \(3582 characters\)
sed "s/^X//" >'src/icon.h' <<'END_OF_FILE'
X/* icon.h,v 1.3 1992/05/11 15:31:17 bjoerns Exp
X *
X *	This file is part of the XPilot project, written by
X *
X *	    Bjxrn Stabell (bjoerns@stud.cs.uit.no)
X *	    Ken Ronny Schouten (kenrsc@stud.cs.uit.no)
X *
X *	Copylefts are explained in the LICENSE file.
X */
X
X/* Specifies the bitmap used for the icon. */
X#define icon_width 64
X#define icon_height 64
Xstatic char icon_bits[] = {
X   0x00, 0x40, 0x00, 0x80, 0x00, 0x00, 0x04, 0x00, 0x40, 0x40, 0x00, 0x80,
X   0x00, 0x00, 0x04, 0x00, 0xbf, 0x7f, 0x00, 0x80, 0x00, 0x00, 0x04, 0x00,
X   0xbf, 0x7f, 0x00, 0x80, 0x00, 0x00, 0x04, 0x00, 0xbf, 0x7f, 0x00, 0x80,
X   0x00, 0x00, 0x04, 0x00, 0x7f, 0x7f, 0x00, 0x80, 0x00, 0x00, 0x04, 0x00,
X   0x7f, 0x7f, 0x00, 0x80, 0x00, 0x00, 0x04, 0x00, 0x7f, 0x7f, 0x00, 0x80,
X   0x00, 0x00, 0x04, 0x00, 0xff, 0xfe, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
X   0x00, 0x01, 0x00, 0x00, 0x01, 0x00, 0x02, 0x00, 0x00, 0x01, 0x00, 0x00,
X   0x06, 0x80, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x18, 0x60, 0x00, 0x00,
X   0x00, 0x01, 0x00, 0x00, 0x60, 0x18, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00,
X   0x80, 0x07, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00,
X   0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00,
X   0x80, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x64, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x64, 0x00, 0x00,
X   0x00, 0x00, 0x18, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x08, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x10, 0x00, 0x00,
X   0x01, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x10, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x20, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x40, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0x01,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x99, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x41, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x60, 0x21, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x22, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x12, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x04, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x08, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x1d, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0xa0, 0x3a, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x55, 0x02, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0xa8, 0xfa, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x61, 0x15, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x8c, 0x08, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0xc0, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x02, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x40, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0xc0, 0x00, 0x00,
X   0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
END_OF_FILE
echo shar: 1 control character may be missing from \"'src/icon.h'\"
if test 3582 -ne `wc -c <'src/icon.h'`; then
    echo shar: \"'src/icon.h'\" unpacked with wrong size!
fi
# end of 'src/icon.h'
fi
if test -f 'src/map.c' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'src/map.c'\"
else
echo shar: Extracting \"'src/map.c'\" \(10152 characters\)
sed "s/^X//" >'src/map.c' <<'END_OF_FILE'
X/* map.c,v 1.12 1992/06/28 05:38:17 bjoerns Exp
X *
X *	This file is part of the XPilot project, written by
X *
X *	    Bjxrn Stabell (bjoerns@stud.cs.uit.no)
X *	    Ken Ronny Schouten (kenrsc@stud.cs.uit.no)
X *
X *	Copylefts are explained in the LICENSE file.
X */
X
X#include <stdio.h>
X#include <stdlib.h>
X#include <sys/types.h>
X#include <sys/stat.h>
X
X#include "global.h"
X#include "map.h"
X
X#ifndef	lint
Xstatic char sourceid[] =
X    "@(#)map.c,v 1.12 1992/06/28 05:38:17 bjoerns Exp";
X#endif
X
X
X/*
X * Globals.
X */
XWorld_map World;
X
X
X
X/*
X * Sets as many blocks as possible to FILLED_NO_DRAW.  You won't notice the
X * difference. :)
X */
Xvoid Optimize_map()
X{
X    int x, y, type;
X
X
X    for (x=1; x<(World.x-1); x++)
X	for (y=1; y<(World.y-1); y++)
X	    if (World.block[x][y] == FILLED) {
X		type = World.block[x][y-1];
X		if ((type != FILLED) && (type != REC_LU) && (type != REC_RU))
X		    continue;
X
X		type = World.block[x][y+1];
X		if ((type != FILLED) && (type != REC_LD) && (type != REC_RD))
X		    continue;
X
X		type = World.block[x-1][y];
X		if ((type != FILLED) && (type != REC_RD) && (type != REC_RU))
X		    continue;
X
X		type = World.block[x+1][y];
X		if ((type != FILLED) && (type != REC_LD) && (type != REC_LU))
X		    continue;
X
X		World.block[x][y] = FILLED_NO_DRAW;
X	    }
X}
X
X
X
Xvoid Print_map(void)			/* Debugging only. */
X{
X    int x, y;
X
X    for (y=World.y-1; y>=0; y--) {
X	for (x=0; x<World.x; x++)
X	    switch (World.block[x][y]) {
X	    case SPACE:
X		putchar(' ');
X		break;
X	    case BASE:
X		putchar('_');
X		break;
X	    default:
X		putchar('X');
X		break;
X	    }
X	putchar('\n');
X    }
X}
X
X
X
Xvoid Init_map(void)
X{
X    World.x		= 300;
X    World.y		= 300;
X    World.NumFuels	= 0;
X    World.NumBases	= 0;
X    World.NumGravs	= 0;
X    World.NumCannons	= 0;
X    World.NumWormholes	= 0;
X}
X
X
X
Xvoid Free_map(void)
X{
X    int x;
X
X
X    if (World.block) {
X	for (x=0; x<World.x; x++) {
X	    if (World.block[x])
X		free(World.block[x]);
X	    else
X		break;
X	}
X	free(World.block);
X    }
X    if (World.gravity) {
X	for (x=0; x<World.x; x++) {
X	    if (World.gravity[x])
X		free(World.gravity[x]);
X	    else
X		break;
X	}
X	free(World.gravity);
X    }
X}
X
X
X
Xvoid Alloc_map(void)
X{
X    int x;
X
X
X    if (World.block || World.gravity)
X	Free_map();
X
X    World.block = (unsigned char **) malloc(sizeof(unsigned char *)*World.x);
X    World.gravity = (vector **) malloc(sizeof(vector *)*World.x);
X
X    if (World.block == NULL || World.gravity == NULL) {
X    out_of_mem:
X	Free_map();
X	error("Couldn't allocate memory for map (%d bytes)",
X	      (sizeof(unsigned char)+sizeof(vector))*World.y*World.x +
X	      (sizeof(unsigned char *)+sizeof(vector *))*World.x);
X	exit(-1);
X    } else {
X	for (x=0; x<World.x; x++) {
X	    World.block[x] = (unsigned char *)
X				malloc(sizeof(unsigned char)*World.y);
X	    World.gravity[x] = (vector *) malloc(sizeof(vector)*World.y);
X
X	    if (World.block[x] == NULL || World.gravity[x] == NULL)
X		goto out_of_mem;
X	}
X    }
X}
X
X
X    
Xvoid Load_map(char *map)
X{
X    FILE *fd;
X    int x, y, c;
X    char file[256], str[256];
X    bool done_line = false;
X
X
X    /*
X     * Initialize map file, append .map suffix if neccessary.
X     */
X    Init_map();
X    strcpy(file, map);
X    if (strstr(file, ".map") == NULL)
X	strcat(file, ".map");
X
X    /*
X     * Check for presence of map file.	If not found, try in MAPDIR.
X     */
X    if ((fd=fopen(file, "r")) == NULL) {
X	strcpy(str, file);
X	sprintf(file, "%s%s", MAPDIR, str);
X	fd=fopen(file, "r");
X    }
X
X
X    /*
X     * Read data from file.
X     */
X    if (fd != NULL) {
X
X	fscanf(fd, "%dx%d\n", &(World.x), &(World.y));	/* Get dimensions, */
X
X	/*
X	 * Allocate memory for map.
X	 */
X	Alloc_map();
X
X	fgets(World.name, MAX_CHARS, fd);	    /* Temporary use of */
X	Set_world_rules(atoi(World.name));	    /* World.name */
X
X	fgets(World.name, MAX_CHARS, fd);	    /* Get name */
X	World.name[strlen(World.name)-1]='\0';	    /* Strip newline */
X	fgets(World.author, MAX_CHARS, fd);	    /* Get Author */
X	World.author[strlen(World.author)-1]='\0';  /* Strip newline */
X
X	x = -1;
X	y = World.y-1;
X
X	while (((c=getc(fd)) != EOF) && (y>=0)) {
X
X	    x++;
X	    done_line=false;
X
X	    if (x>=World.x || c=='\n') {
X		x=-1;
X		y--;
X		done_line=true;
X		if (c!='\n')			    /* Get rest of line */
X		    while (c!='\n' && c!=EOF)	    /* from file. */
X			putchar(c=getc(fd));
X	    }
X	    if (done_line)
X		continue;
X
X	    switch (c) {
X	    case 'x': 
X		World.block[x][y] = FILLED;
X		break;
X	    case ' ':
X		World.block[x][y] = SPACE;
X		break;
X	    case 's': 
X		World.block[x][y] = REC_LU;
X		break;
X	    case 'a': 
X		World.block[x][y] = REC_RU;
X		break;
X	    case 'w': 
X		World.block[x][y] = REC_LD;
X		break;
X	    case 'q': 
X		World.block[x][y] = REC_RD;
X		break;
X	    case 'r':
X		World.block[x][y] = CANNON;
X		World.cannon[World.NumCannons].dir = DIR_UP;
X		World.cannon[World.NumCannons].pos.x = x;
X		World.cannon[World.NumCannons].pos.y = y;
X		World.cannon[World.NumCannons].dead_time = 0;
X		World.NumCannons++;
X		break;
X	    case 'd':
X		World.block[x][y] = CANNON;
X		World.cannon[World.NumCannons].dir = DIR_LEFT;
X		World.cannon[World.NumCannons].pos.x = x;
X		World.cannon[World.NumCannons].pos.y = y;
X		World.cannon[World.NumCannons].dead_time = 0;
X		World.NumCannons++;
X		break;
X	    case 'f':
X		World.block[x][y] = CANNON;
X		World.cannon[World.NumCannons].dir = DIR_RIGHT;
X		World.cannon[World.NumCannons].pos.x = x;
X		World.cannon[World.NumCannons].pos.y = y;
X		World.cannon[World.NumCannons].dead_time = 0;
X		World.NumCannons++;
X		break;
X	    case 'c':
X		World.block[x][y] = CANNON;
X		World.cannon[World.NumCannons].dir = DIR_DOWN;
X		World.cannon[World.NumCannons].pos.x = x;
X		World.cannon[World.NumCannons].pos.y = y;
X		World.cannon[World.NumCannons].dead_time = 0;
X		World.NumCannons++;
X		break;
X	    case 'F': 
X		World.block[x][y] = FUEL;
X		World.fuel[World.NumFuels].pos.x = x*BLOCK_SZ+BLOCK_SZ/2;
X		World.fuel[World.NumFuels].pos.y = y*BLOCK_SZ+BLOCK_SZ/2;
X		World.fuel[World.NumFuels].left = 20.0;
X		World.NumFuels++;
X		break;
X	    case '*': 
X		World.block[x][y] = BASE;
X		World.base[World.NumBases].x = x;
X		World.base[World.NumBases].y = y;
X		World.NumBases++;
X		break;
X	    case '+':
X		World.block[x][y] = POS_GRAV;
X		World.grav[World.NumGravs].pos.x = x;
X		World.grav[World.NumGravs].pos.y = y;
X		World.grav[World.NumGravs].force = -GRAVS_POWER;
X		World.NumGravs++;
X		break;
X	    case '-':
X		World.block[x][y] = NEG_GRAV;
X		World.grav[World.NumGravs].pos.x = x;
X		World.grav[World.NumGravs].pos.y = y;
X		World.grav[World.NumGravs].force = GRAVS_POWER;
X		World.NumGravs++;
X		break;
X	    case '>':
X		World.block[x][y] = CWISE_GRAV;
X		World.grav[World.NumGravs].pos.x = x;
X		World.grav[World.NumGravs].pos.y = y;
X		World.grav[World.NumGravs].force = GRAVS_POWER;
X		World.NumGravs++;
X		break;
X	    case '<':
X		World.block[x][y] = ACWISE_GRAV;
X		World.grav[World.NumGravs].pos.x = x;
X		World.grav[World.NumGravs].pos.y = y;
X		World.grav[World.NumGravs].force = -GRAVS_POWER;
X		World.NumGravs++;
X		break;
X	    case 'W':
X		World.block[x][y] = WORMHOLE;
X		World.wormhole[World.NumWormholes].x = x;
X		World.wormhole[World.NumWormholes].y = y;
X		World.NumWormholes++;
X		break;
X	    case '0':
X	    case '1':
X	    case '2':
X	    case '3':
X	    case '4':
X	    case '5':
X	    case '6':
X	    case '7':
X	    case '8':
X	    case '9':
X		if (BIT(World.rules->mode, TIMING)) {
X		    World.check[c-'0'].x = x;
X		    World.check[c-'0'].y = y;
X		    World.NumChecks++;
X		    World.block[x][y] = CHECK;
X		} else World.block[x][y] = SPACE;
X		break;
X
X	    default:
X		World.block[x][y] = SPACE;
X		break;
X	    }
X	}
X
X#ifndef	SILENT
X	printf("World can take a maximum of %d players.\n",
X	       World.NumBases);
X#endif
X
X	fclose(fd);
X
X    } else {
X	error(file);
X	Generate_random_map();
X    }
X
X    if (World.NumWormholes == 1) {
X	error("You're not allowed to have only 1 wormhole, removing it");
X	World.NumWormholes = 0;
X	for (x=0; x<World.x; x++)
X	    for (y=0; y<World.y; y++)
X		if (World.block[x][y] == WORMHOLE)
X		    World.block[x][y] = SPACE;
X    }
X
X    Optimize_map();
X
X    if (WantedNumRobots == -1)
X	WantedNumRobots = (World.NumBases / 2);
X    if (BIT(World.rules->mode, TIMING))
X	WantedNumRobots = 0;
X
XD(  Print_map();    )
X}
X
X
X
X/*
X * Stupid routine that generates a random map if the game can't open any
X * map file.  This should be the last choice.
X */
Xvoid Generate_random_map(void)
X{
X    int x, y, i=0;
X    
X
X    Init_map();
X    Alloc_map();
X
X#ifndef	SILENT
X    puts("Creating random map.");
X#endif
X
X    Set_world_rules(0);
X    strcpy(World.name, "Random map");
X    strcpy(World.author, "The Computer");
X
X    for (y=World.y-1; y >= 0 ; y--)
X	for (x=0; x<World.x; x++) {
X	    if ((y==World.y-1) || (y==0) || (x==0) || (x==World.x-1)) 
X		World.block[x][y] = FILLED;
X	    else if (((rand()%20)==0) && ((x==1)||(x==World.x-2))) {
X		if (x==1)
X		    World.block[x][y] = REC_LU;
X		else
X		    World.block[x][y] = REC_RU;
X	    }
X	    else
X		switch (rand()%11137) {
X		case 0:
X		case 1:
X		    World.block[x][y] = FUEL;
X		    World.fuel[World.NumFuels].pos.x =
X			x*BLOCK_SZ+BLOCK_SZ/2;
X		    World.fuel[World.NumFuels].pos.y =
X			y*BLOCK_SZ+BLOCK_SZ/2;
X		    World.fuel[World.NumFuels].left = 20.0;
X		    World.NumFuels++;
X		    break;
X		case 10:
X		case 11:
X		    World.block[x][y] = FILLED;
X		    break;
X		case 20:
X		    World.block[x][y] = REC_LU;
X		    break;
X		case 30:
X		    World.block[x][y] = REC_RU;
X		    break;
X		case 40:
X		    if (rand()%2)
X			World.block[x][y] = REC_LD;
X		    else
X			World.block[x][y] = REC_RD;
X		    break;
X		case 50:
X		    World.grav[World.NumGravs].pos.x = x;
X		    World.grav[World.NumGravs].pos.y = y;
X		    World.NumGravs++;
X		    if (rand()%2) {
X			World.grav[World.NumGravs].force = -GRAVS_POWER;
X			World.block[x][y] = NEG_GRAV;
X		    } else {
X			World.grav[World.NumGravs].force = GRAVS_POWER;
X			World.block[x][y] = POS_GRAV;
X		    }
X		    break;
X		default:
X		    World.block[x][y] = SPACE;
X		    break;
X		}
X	}
X
X    for (x=1; x<World.x-1; x++)
X	for (y=World.y-1; y>1; y--) {
X	    i = World.block[x][y-1];
X	    if ((i == FILLED || i == REC_LU || i == REC_RU || i == FUEL)
X		&& (rand()%27) == 0) {
X
X		World.block[x][y] = BASE;
X		World.base[World.NumBases].x = x;
X		World.base[World.NumBases].y = y;
X		World.NumBases++;
X	    }
X	}
X}
END_OF_FILE
echo shar: 1 control character may be missing from \"'src/map.c'\"
if test 10152 -ne `wc -c <'src/map.c'`; then
    echo shar: \"'src/map.c'\" unpacked with wrong size!
fi
# end of 'src/map.c'
fi
if test -f 'src/pack.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'src/pack.h'\"
else
echo shar: Extracting \"'src/pack.h'\" \(3865 characters\)
sed "s/^X//" >'src/pack.h' <<'END_OF_FILE'
X/* pack.h,v 1.7 1992/06/28 05:38:22 bjoerns Exp
X *
X *	This file is part of the XPilot project, written by
X *
X *	    Bjxrn Stabell (bjoerns@stud.cs.uit.no)
X *	    Ken Ronny Schouten (kenrsc@stud.cs.uit.no)
X *
X *	Copylefts are explained in the LICENSE file.
X */
X
X#ifndef	PACK_H
X#define	PACK_H
X
X#include "lib/socklib.h"
X#include "limits.h"
X#include "types.h"
X
X#define CAP_LETTER(c)	(c = (c>='a' && c<='z') ? c-'a'+'A' : c)
X
X#define SERVER_PORT	15345		/* Port which server listens to. */
X#define	MAGIC		0xABCDEF0UL	/* - Unique magic number - */
X
X#define	MAX_STR_LEN	4096
X#define	MAX_ARG_LEN	256
X#define	MAX_DISP_LEN	80
X#define	MAX_NAME_LEN	16
X
X
X/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
X *
X * Following are the different PACK types which the server
X * and the hand-shake program understands.  If any modification
X * is made to these, remember to change the MAGIC field.
X *
X */
X
X
X/*
X * All common fields must be included in the following macro.
X */
X#define	CORE	\
X    					/* This is provided to prevent */    \
X    u_long	magic;			/* corrupt and outdated packets */   \
X    					/* from being interpreted. */	     \
X    									     \
X    u_byte	type;			/* Type of pack transmitted */	     \
X    char	realname[MAX_NAME_LEN];	/* Real name of sender */            \
X    u_long	port;			/* Port number to contact */         \
X    u_byte	status;			/* Status of operation */            \
X
X
X/*
X * REPLY pack, used to transfer large strings (info), or just as a general
X * reply pack.
X */
Xtypedef struct {
X
X    CORE
X
X    char	str[MAX_STR_LEN];	/* Just a string, too large :) */
X} reply_pack_t;
X#define	REPLY_pack		0x10
X
X
X/*
X * ENTER GAME pack, contains misc. info the server would like to know about.
X * Sent from the hand-shake program when a player wants to enter the game.
X */
Xtypedef struct {
X
X    CORE
X
X    char	display[MAX_DISP_LEN];	/* Display of player */
X    char	nick[MAX_NAME_LEN];	/* Nick name */
X    u_short	team;			/* Team of player */
X#define	TEAM_NOT_SET		0xff
X} enter_game_pack_t;
X#define	ENTER_GAME_pack		0x00
X
X
X/*
X * COMMAND pack, sent from the hand-shake program to the server.  Contains
X * a command and argument.
X */
Xtypedef	struct {
X
X    CORE
X
X    u_long	arg_int;
X    char	arg_str[MAX_ARG_LEN];
X} command_pack_t;
X#define	REPORT_STATUS_pack	0x21
X#define	LOCK_GAME_pack		0x22
X#define	MESSAGE_pack		0x23
X#define	SHUTDOWN_pack		0x24
X#define	KICK_PLAYER_pack	0x25
X
X#define	report_status_pack_t	command_pack_t
X#define	lock_game_pack_t	command_pack_t
X#define	message_pack_t		command_pack_t
X#define	shutdown_pack_t		command_pack_t
X#define	kick_player_pack_t	command_pack_t
X
X
X/*
X * CORE pack, no information except the status field needed.
X */
Xtypedef	struct {
X
X    CORE
X
X} core_pack_t;
X#define	CORE_pack		0x30
X#define	CONTACT_pack		0x31
X
X#define	contact_pack_t		core_pack_t
X
X
X/*
X *
X * Union which contains all the possible pack types.
X *
X */
Xtypedef union {
X
X    /*
X     * Just the core pack, enables us to access fields in the CORE part of
X     * all packs (without knowing what pack type it is).
X     */
X    core_pack_t		core;
X
X    /*
X     * Possible pack types sent by the hand-shake program.
X     */
X    enter_game_pack_t	enter;
X    command_pack_t	command;
X
X    /*
X     * Packs going 'the other way' - that is, from the server to the
X     * hand-shake program.
X     */
X    reply_pack_t	reply;
X
X} pack_t;
X
X
X
X/*
X * Possible error codes returned in the pack's status field.
X */
X#define	SUCCESS		0x00		/* Operation successful */
X#define	E_NOT_OWNER	0x01		/* Permission denied, not owner */
X#define	E_GAME_FULL	0x02		/* Game is full, entry denied */
X#define	E_GAME_LOCKED	0x03		/* Game is locked, entry denied */
X#define	E_DISPLAY	0x04		/* Couldn't open display */
X#define	E_DBUFF		0x05		/* Couldn't init. double buffering */
X#define	E_NOT_FOUND	0x06		/* Player was not found */
X#define	E_IN_USE	0x07		/* Name is already in use */
X
X#endif
END_OF_FILE
echo shar: 1 control character may be missing from \"'src/pack.h'\"
if test 3865 -ne `wc -c <'src/pack.h'`; then
    echo shar: \"'src/pack.h'\" unpacked with wrong size!
fi
# end of 'src/pack.h'
fi
echo shar: End of archive 17 \(of 24\).
cp /dev/null ark17isdone
MISSING=""
for I in 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 ; do
    if test ! -f ark${I}isdone ; then
	MISSING="${MISSING} ${I}"
    fi
done
if test "${MISSING}" = "" ; then
    echo You have unpacked all 24 archives.
    echo "\nNow run 'bldmaps.sh' to build the map files"
    rm -f ark[1-9]isdone ark[1-9][0-9]isdone
else
    echo You still need to unpack the following archives:
    echo "        " ${MISSING}
fi
##  End of shell archive.
exit 0
