Path: uunet!paladin.american.edu!howland.reston.ans.net!zaphod.mps.ohio-state.edu!uwm.edu!ogicse!news.tek.com!master!saab!billr
From: billr@saab.CNA.TEK.COM (Bill Randle)
Newsgroups: comp.sources.games
Subject: v17i006:  dinkum3 - australian text adventure game, V2.12, Part01/07
Message-ID: <4517@master.CNA.TEK.COM>
Date: 9 Feb 93 20:01:07 GMT
Article-I.D.: master.4517
Sender: news@master.CNA.TEK.COM
Lines: 1212
Approved: billr@saab.CNA.TEK.COM
Xref: uunet comp.sources.games:1685

Submitted-by: Gary Allen <gary@sun.mech.uq.oz.au>
Posting-number: Volume 17, Issue 6
Archive-name: dinkum3/Part01
Supersedes: dinkum2: Volume 15, Issue 36-43
Environment: Unix, DOS

	[This version fixes several bugs and includes other extensive
	 revisions.  -br]

#! /bin/sh
# This is a shell archive.  Remove anything before this line, then unpack
# it by saving it into a file and typing "sh file".  To overwrite existing
# files, type "sh file -c".  You can also feed this as standard input via
# unshar, or by typing "sh <file", e.g..  If this archive is complete, you
# will see the following message at the end:
#		"End of archive 1 (of 7)."
# Contents:  README MANIFEST dink_glb.h make.dos
# Wrapped by billr@saab on Mon Feb  8 13:40:50 1993
PATH=/bin:/usr/bin:/usr/ucb ; export PATH
if test -f 'README' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'README'\"
else
echo shar: Extracting \"'README'\" \(4938 characters\)
sed "s/^X//" >'README' <<'END_OF_FILE'
X                      Comments on Dinkum, Version 2.12                
X                              30 January 1993                            
X
XI'm releasing this version of Dinkum sooner than I should because of
Xthe appearance of six bugs coupled with extensive revisions which I
Xperformed on Dinkum during the Christmas holidays.  The bugs are:
X
X1) If the player was chased by a monster for a long distance in the game and
Xthe player survived after killing the monster then for certain random initial
Xconfigurations other monsters would have their memory locations changed. 
XThese changes sometimes resulted in the pointers for the other monsters being
Xpointed towards garbage causing an abnormal ending and core dump.  This bug
Xis fixed but was very difficult to locate.  This bug effected ALL earlier
Xpublic versions of Dinkum.
X
X2) If the player shot a movable object (non-monster) in Dinkum versions made
Xafter 1.27 then this would lead to an abnormal ending and core dump.  Version
X1.27 did not have this bug. This bug has been fixed with the logic supporting
Xthe shooting of movable objects significantly improved.
X
X3) If the player shot off an ammunition clip, ejected it and then reloaded
Xthe clip then all of the ammunition would be "magicly" restored.  This bug
Xdid not occur if the clip still had some ammo left in it.  Goofy bugs of
Xthis sort are easy to fix but hard to find.  Thanks to Byron Rakitzis for
Xdiscovering this bug and bug #2.  
X
X4) If the user put Dinkum into its privileged mode and used some of
Xthe privileged commands then a core dump could result for a special case.
XThanks to Per-Anders Eriksson for discovering this bug.  The privileged
Xmode is for maintenance and debugging use only and not recommended for
Xpeople playing Dinkum for entertainment.  I'll explain in private e-mail
Xthe use of this mode to anyone who has won Dinkum in ordinary user mode and
Xis interested in hacking on the game.
X
X5) There was a bad Ccp definition (I defined DINKUM.C instead of DINKUM)
Xwhich kept Dinkum from compiling in certain environments reducing
Xportability.  Thanks to Darryl O'Neill for discovering this bug.
X
X6) There is a bug in the C compiler used in Ultrix.  This bug caused
XDinkum not to compile because structure pointers were used explicitly
Xin function parameters.  The fix was suggested by Christopher M. Conway.
XThis fix simply involved converting all structured pointer declarations
Xover to typedefs.
X
X                     --------- Revisions -----------
X
XAn important revision to Dinkum can be seen in the Makefile.  By
Xde-commenting one line and deleting another, the user can have a prompt
Xfor Dinkum command inputs.  This improvement was suggested by Chris Herborth.
X
XMore than one person has complained about Dinkum's time out feature.  The
Xargument made was Dinkum is often played on a window running in background
Xwith the user doing constructive work in foreground. Consequently it can
Xbe many minutes between moves resulting in the game often timing out. This
Xleads to an interesting design problem because I want winners of Dinkum to
Xhave won on a uniform game (no advantages for people using special features
Xlike script files, etc.).  My solution is to go back to my trusty "data
Xrecorder".  If you start Dinkum with the "-s" switch then the game starts
Xwith a data recorder appearing as an object in the game.  If you take the data
Xrecorder and examine it then you'll find it now has an additional feature,
Xviz. an orange button.  If you press the orange button then Dinkum's internal
Xclock stops and no further play is possible.  The user is then presented
Xwith a yes/no question.  When the user says "yes" then the game resumes
Xwith the internal clock reset such that no time elapsed while the orange
Xbutton was engaged.  The orange button is derived from a suggestion made
Xby Christopher M. Conway.
X
X                     --------- A Short Sermon -----------
X
XI now have Dinkum revised into a form that is not overly embarrassing
X(unlike before).  Something I've discovered is that all of the stories they
Xtell about the virtues of structured programming are absolutely true.  Dinkum
Xthough written in C, previously had a FORTRAN coding style with the resultant
Xlogic being so convoluted that further maintenance and debugging was almost
Ximpossible. In the process of getting Dinkum into a proper C form, I found
Xmany low level bugs and brought about many improvements.  The lesson which I
Xhave learned is if I'm programming in FORTRAN, BASIC, COBOL or any of the
Xother old fashioned languages then I'm simply being stupid and punishing myself
Xneedlessly.  Six years ago I would have come up with all sorts of facile
Xarguments why FORTRAN should be maintained but I now know these arguments are
Xspurious.  If you're still fighting with FORTRAN then I urge you to learn from
Xmy experience and convert over to C.
X
X                            Gary A. Allen, Jr.                           
END_OF_FILE
if test 4938 -ne `wc -c <'README'`; then
    echo shar: \"'README'\" unpacked with wrong size!
fi
# end of 'README'
fi
if test -f 'MANIFEST' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'MANIFEST'\"
else
echo shar: Extracting \"'MANIFEST'\" \(641 characters\)
sed "s/^X//" >'MANIFEST' <<'END_OF_FILE'
X   File Name		Archive #	Description
X-----------------------------------------------------------
X MANIFEST                   1	This shipping list
X README                     1	
X actor.c                    5	
X describe.c                 6	
X dink_glb.h                 1	
X dink_sym.h                 2	
X dinkum.c                   2	
X longdsc.c                  7	
X make.dos                   1	
X make.unx                   2	
X makefile                   2	
X monster.c                  5	
X objlook.c                  7	
X opener.c                   4	
X parse.c                    6	
X pusher.c                   4	
X taker.c                    3	
END_OF_FILE
if test 641 -ne `wc -c <'MANIFEST'`; then
    echo shar: \"'MANIFEST'\" unpacked with wrong size!
fi
# end of 'MANIFEST'
fi
if test -f 'dink_glb.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'dink_glb.h'\"
else
echo shar: Extracting \"'dink_glb.h'\" \(44717 characters\)
sed "s/^X//" >'dink_glb.h' <<'END_OF_FILE'
X/***************************************************************/
X/*                                                             */
X/*             --- Global Variables Header File ---            */
X/*                                                             */
X/*        Software by Gary A. Allen, Jr.  16 January 1993      */
X/*           (c) Copyright 1993 by Gary A. Allen, Jr.          */
X/*                                                             */
X/***************************************************************/
X 
X/* repeated global variable quantites */
X/*  Do not move these into the body of the header file. */
X#define Vocab_cnt		343
X#define DM_tag			344	/* DM_tag    = Vocab_cnt + 1 */
X
X#define DM_room		 	249
X
X#define Enemy_cnt 		15 
X#define Objcnt			82
X#define Read_objcnt		15
X#define Quest_max		9
X#define Verb_max 		81 
X#define	Adj_max 		20 
X#define Adv_max 		30 
X#define Obj_init_max 		51 
X
X
X#ifndef DINKUM
Xextern struct object_struct *Rifle ;
Xextern struct object_struct *Teapot ;
Xextern struct object_struct *Can ;
Xextern struct object_struct *Clip ;
Xextern struct object_struct *Org_clip ;
Xextern struct object_struct *Recorder ;
Xextern struct object_struct *Cap ;
Xextern struct object_struct *Dynamite ;
Xextern struct object_struct *Letter ;
Xextern struct object_struct *Clapper ;
Xextern struct object_struct *Detector ;
Xextern struct object_struct *Key ;
Xextern struct object_struct *Umbrella ;
Xextern struct object_struct *Matches ;
Xextern struct object_struct *Pills ;
Xextern struct object_struct *Cube ;
Xextern struct object_struct *Torch ;
Xextern struct object_struct *Mat ;
Xextern struct object_struct *Map ;
Xextern struct object_struct *Map_frag ;
Xextern struct object_struct *Bottle ;
Xextern struct object_struct *Circuit_breaker ;
Xextern struct object_struct *Lift ;
Xextern struct object_struct *Door ;
Xextern struct object_struct *Safe ;
Xextern struct object_struct *Lift_door ;
Xextern struct object_struct *Picture ;
Xextern struct object_struct *Tank ;
Xextern struct object_struct *Gong ;
Xextern struct object_struct *Transporter ;
X#endif
X
X/***************************************************************/
X
X#ifdef DINKUM
Xstruct object_struct *Rifle ;
Xstruct object_struct *Teapot ;
Xstruct object_struct *Can ;
Xstruct object_struct *Clip ;
Xstruct object_struct *Org_clip ;
Xstruct object_struct *Recorder ;
Xstruct object_struct *Cap ;
Xstruct object_struct *Dynamite ;
Xstruct object_struct *Letter ;
Xstruct object_struct *Clapper ;
Xstruct object_struct *Detector ;
Xstruct object_struct *Key ;
Xstruct object_struct *Umbrella ;
Xstruct object_struct *Matches ;
Xstruct object_struct *Pills ;
Xstruct object_struct *Cube ;
Xstruct object_struct *Torch ;
Xstruct object_struct *Mat ;
Xstruct object_struct *Map ;
Xstruct object_struct *Map_frag ;
Xstruct object_struct *Bottle ;
Xstruct object_struct *Circuit_breaker ;
Xstruct object_struct *Lift ;
Xstruct object_struct *Door ;
Xstruct object_struct *Safe ;
Xstruct object_struct *Lift_door ;
Xstruct object_struct *Picture ;
Xstruct object_struct *Tank ;
Xstruct object_struct *Gong ;
Xstruct object_struct *Transporter ;
X
Xextern int room[DM_room][16] ;
Xextern struct object_struct object[Objcnt] ;
Xextern int tag[DM_tag] ;
Xint gleep_count = 0 ; /* gleeps being carried */
Xint verb, max_score = 1100 ;
Xint sw_wizard = FALSE ;
Xlong clock_explode ;
Xint sw_warned, flag_clock, sw_clock = FALSE, i_poison = 0 ;
X
X/* gleep initialization matrix */
Xint gleep_init[10][4] = {
X97,	98,	101,	102,
X98,	99,	102,	103,
X99,	100,	103,	96,
X100,	101,	96,	97,
X101,	102,	97,	98,
X102,	103,	98,	99,
X103,	96,	99,	100,
X134,	132,	136,	137,
X69,	66,	90,	89,
X74,	72,	68,	92 
X};
Xint gleep_spot[10] ; /* gleep reproduction room pointer array */
X
X/* monster matrix initialization matrix */
X/*  --- NEVER have a monster initialized next to the        */
X/*  Mutant Wombat.  This leads to an intractable bug        */
X/*  which need to be solved for eventually but is currently */
X/*  swept under the carpet.                                 */
X
Xint mon_init[Enemy_cnt][4] = {
X/* Mutant Wombat */
X139,	67,	86,	115,
X/* Drop Bears    */
X77,	75,	78,	79,
X103,	97,	98,	71,
X64,	60,	62,	93,
X67,	81,	66,	75,
X/* Hoop Snakes   */
X93,	95,	94,	64,
X75,	73,	76,	67,
X71,	128,	67,	77,
X52,	53,	51,	103,
X115,	114,	113,	129,
X131,	130,	129,	80,
X119,	120,	118,	84,
X109,	87,	83,	52,
X/* Revolutionary Guards */
X241,	241,	241,	241,
X/* Chief Mullah */
X242,	242,	242,	242
X} ;
X 
X/* object matrix initialization matrix */
X/* --- The orange ammo clip should not be set in a dead end, otherwise  */
X/*     that version of the game is almost unwinnable due to the wombat. */
Xint obj_init[Obj_init_max][5] = {
XV_can,		1,	1,	1,	1,
XV_butt,		165,	166,	161,	152,
XV_bottle,	2,	2, 	2,	2,
XV_gold,		54,	53,	55,	56,
XV_dynamite,	78,	91,	69,	117,
XV_clip,		48,	52,	52,	48,
XV_org_clip,	80,	68,	113,	99,
XV_rifle,	48,	56,	48,	52,
XV_cap,		183,	184,	183,	184,
XV_matches,	69,	85,	78,	121,
XV_ring,		87,	135,	127,	105,
XV_ruby,		99,	106,	114,	74,
XV_coin,		127,	127,	87,	87,
XV_bill,		135,	87,	135,	127,
XV_pills,	85,	83,	91,	78,
XV_saphire,	91,	78,	85,	69,
XV_emerald,	68,	74,	117,	66,
XV_letter,	177,	177,	177,	177,
XV_torch,	92,	114,	66,	53,
XV_cube,		202,	202,	202,	202,
XV_wrapper,	171,	216,	239,	101,
XV_tire,		47,	47,	47,	47,
XV_shell,	82,	107,	213,	175,
XV_brick,	33,	33,	33,	33,
XV_rope,		209,	179,	181,	155,
XV_package,	156,	137,	95,	113,
XV_belt,		21,	21,	21,	21,
XV_filter,	142,	142,	142,	142,
XV_string,	204,	88,	118,	167,
XV_umbrella,	37,	37,	37,	37,
XV_tackle,	9,	9,	9,	9,
XV_bit,		105,	117,	90,	184,
XV_jack,		81,	81,	81,	81,
XV_pen,		177,	177,	177,	177,
XV_pencil,	202,	202,	202,	202,
XV_wire,		214,	154,	159,	151,
XV_pipe,		206,	239,	166,	151,
XV_opener,	63,	62,	61,	60,
XV_cord,		80,	131,	119,	79,
XV_photo,	206,	160,	155,	180,
XV_chair,	177,	177,	177,	177,
XV_bulb,		154,	162,	164,	181,
XV_rag,		92,	89,	73,	132,
XV_tube,		139,	121,	129,	132,
XV_carpet,	41,	41,	41,	41,
XV_branch,	28,	28,	28,	28,
XV_cork,		130,	122,	115,	109,
XV_trap,		146,	146,	146,	146,
XV_lighter,	210,	213,	46,	79,
XV_lace,		126,	136,	67,	72,
XV_comb,		164,	157,	156,	172
X} ;
X
X/************************************************/
X/*           --- Monster Types ---		*/
X/*                                              */
X/*   Monster Type       			*/
X/*      = 0 = N_ned = Ned Kelly			*/
X/*      = 1 = N_wombat = Mutant Wombat		*/
X/*      = (2 - 5) = Drop Bears (four total)	*/
X/*      = (6 - 13) = Hoop Snakes (eight total)	*/
X/*      = 14 = Revolutionary Guards             */
X/*      = 15 = Chief Mullah                    	*/
X/*                                              */
X/************************************************/
Xstruct monster_struct *monster_start ;
Xstruct monster_struct *Ned ;
Xstruct monster_struct *Guards ;
Xstruct monster_struct *Wombat ;
Xstruct monster_struct *Mullah ;
X
Xint score = 0 ;
Xint monster_flag = F_no_monster ;
Xint carry_count, carry_weight ;
Xlong l_time, start_time ;
X#endif
X
X/***************************************************************/
X
X#ifdef OBJLKR
Xextern int tag[DM_tag] ;
Xextern int sw_warned, score, max_score, sw_wizard ;
Xextern struct monster_struct *Ned ;
X
X/* a switch used in the "kelly" subroutine */
Xint sw_valuable = FALSE ;
X
X/* layout matrix for game */
X/*   n = room number      */ 
X
X/*   The direction elements contain the adjoining room or a wall */
X/*   if the element value is negative.                           */
X/*     room[n][0] = north direction      */
X/*     room[n][1] = south direction      */
X/*     room[n][2] = east direction       */
X/*     room[n][3] = west direction       */
X/*     room[n][4] = up direction         */
X/*     room[n][5] = down direction       */
X/*     room[n][6] = north-east direction */
X/*     room[n][7] = north-west direction */
X/*     room[n][8] = south-east direction */
X/*     room[n][9] = south-west direction */
X
X/*  room[n][10] points to the room type                      */
X/*               = -1 == instantly lethal                    */
X/*               =  0 == short description                   */
X/*               =  1 == long description                    */
X/*               =  2 == contains an action device           */
X/*               =  3 == orignally had a long description    */
X/*               =  5 == room goes into itself (looping)     */
X/*  room[n][11] flag indicates number of objects in room.    */
X/*  room[n][12] is a switch which if TRUE indicates there    */
X/*              are unmovable objects present in the room.   */
X/*  room[n][13] is the monster indicater, 0 = no monsters    */
X/*  room[n][14] is the gleep count                           */
X/*  room[n][15] points to the description text file          */
X
Xint room [DM_room][16] = {
X  3,  2,  1, 15, -1, -1,  1, 15,  3,  2,  0,  0,  0,  0,  0,  0, 
X  6,  2, 20,  0, -1, -1,  0,  3,  0,  2,  0,  0,  0,  0,  0,  1,
X 28, 11, 29,148, -1, -1, 29, 11, 28,148,  0,  0,  0,  0,  0,  2, 
X  4,  0,  6,  4, -1, -1,  2,  1,  4,  2,  0,  0,  0,  0,  0,  3, 
X  5,  9,  4,  4, -1, -1,  5,  5,  9,  9,  5,  0,  0,  0,  0,  4,
X -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  0,  0,  0,  0,  5,
X  3, 14, 47,  3, -1, -1,  2,  3, 14,  3,  1,  0,  0,  0,  0,  6,
X 14,  8, 14,  8, -1, -1, 14, 14,  8,  8,  0,  0,  0,  0,  0,  7,
X -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  0,  0,  0,  0,  8,
X  4,  1,  6,  4, -1, -1,  0,  2,  0,  1,  0,  0,  0,  0,  0,  9, 
X 14,  6, 14,  3, -1, -1,  6, 14,  6, 14,  0,  0,  0,  0,  0, 10,
X 28, 12, 28, 12, -1, -1, 12, 28,  3,  6,  1,  0,  0,  0,  0, 11,
X 11, 13, 12, 13, -1, -1, 13, 12, 11, 13,  5,  0,  0,  0,  0, 12,
X 13, 13, 13, 13, -1, -1, 13, 13, 13, 12,  5,  0,  0,  0,  0, 13,
X  6,  7,  7, 10, -1, -1,  6, 10,  7,  7,  0,  0,  0,  0,  0, 14,
X147,148,  0, 16, -1, -1,  0,147,  0,148,  0,  0,  0,  0,  0, 15,
X 19, 19, 16, 17, -1, -1, 19, 19, 17, 17,  5,  0,  0,  0,  0, 16,
X 16, 16, 16, 18, -1, -1, 16, 16, 18, 16,  0,  0,  0,  0,  0, 17,
X -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  0,  0,  0,  0, 18,
X  3,  2,  0, 16, -1, -1,  0, 16,  2, 16,  0,  0,  0,  0,  0, 19,
X 21,142, 22,  1, -1, -1, 23,  2,141,  1,  0,  0,  0,  0,  0, 20,
X 42, 20,145, 47, -1, -1,145,  1,145,  6,  0,  0,  0,  0,  0, 21,
X 36, 27, -1, 20, -1, -1, -1, 20, -1, 20,  1,  0,  0,  0,  0, 22,
X 25, 24, 25,145, -1, -1, 25,145, 25, 34,  4,  0,  0,  0,  0, 23,
X 23, 26, 25, 33, -1, -1, 25, 33, 25, 32,  0,  0,  0,  0,  0, 24,
X 25, 25, 25, 25, -1, -1,143, 23, 25, 26,  5,  0,  0,  0,  0, 25,
X 24, 25, 25,141, -1, -1, 25, 31, 25,141,  4,  0,  0,  0,  0, 26,
X 22, 30, -1, 20, -1, -1, -1, 20, -1, 20,  2,  0,  0,  0,  0, 27,
X  0,  2, 29,148, -1, -1, 29, 11,  0,  2,  0,  0,  0,  0,  0, 28, 
X142,243,141,  2, -1, -1,141,  2,141,  2,  1,  0,  0,  0,  0, 29,
X 27,141, 31, 20, -1, -1, -1, 20,141,141,  0,  0,  0,  0,  0, 30,
X 32,141, 24, 30, -1, -1, 24, -1, 26,141,  0,  0,  0,  0,  0, 31,
X 33, 31, 24, -1, -1, -1, 24, -1, 24, -1,  0,  0,  0,  0,  0, 32,
X 34, 32, 24, -1, -1, -1, 24, -1, 24, -1,  0,  0,  0,  0,  0, 33,
X145, 33, 24, 35, -1, -1, 23,145, 24, -1,  0,  0,  0,  0,  0, 34,
X145, 36, 34, 20, -1, -1,145,145, -1, 20,  0,  0,  0,  0,  0, 35,
X 35, 22, -1, 20, -1, -1, 35, 20, -1, 20,  2,  0,  0,  0,  0, 36,
X 38, 39, -1, 36, -1, -1, 38, 36, 39, 36,  0,  0,  0,  0,  0, 37,
X -1, 37, -1, -1, -1, -1, -1, -1, -1, 37,  1,  0,  0,  0,  0, 38,
X 37, -1, 41, -1, -1, -1, -1, -1, -1, -1,  1,  0,  0,  0,  0, 39,
X -1, 41, -1, -1, -1, -1, -1, -1, -1, 41,  2,  0,  0,  0,  0, 40,
X 40, -1, -1, 39, -1, -1, 40, -1, -1, -1,  4,  0,  0,  0,  0, 41,
X246, 21,145,  6, -1, -1,145,  1,145,  6,  0,  0,  0,  0,  0, 42,
X -1, -1, -1, 27, -1, -1, -1, 27, -1, -1,  1,  0,  0,  0,  0, 43,
X -1, -1, 43, 48, -1, -1, -1, -1, 43, -1,  0,  0,  0,  0,  0, 44,
X -1,204, 43,149, -1, -1, -1, -1, 43, -1,  0,  0,  0,  0,  0, 45,
X239, -1, 43, -1, -1, -1, -1, -1, 43, -1,  0,  0,  0,  0,  0, 46,
X  3, 20, 21,  6, -1, -1, 21,  3, 20,  6,  0,  0,  0,  0,  0, 47, 
X 49, 50, 44, -1, -1, -1, -1, -1, -1, -1,  0,  0,  0,  0,  0, 48, /*48*/
X 51, 48, -1, -1, -1, -1, -1, -1, -1, -1,  0,  0,  0,  0,  0, 55, /*49*/
X 48, 56, -1, -1, -1, -1, -1, -1, -1, -1,  0,  0,  0,  0,  0, 55, /*50*/
X -1, 49, 52, 53, -1, -1, -1, -1, -1, -1,  0,  0,  0,  0,  0, 51, /*51*/
X -1, -1, 54, 51, -1, 88, -1, -1, -1, -1,  0,  0,  0,  0,  0, 59, /*52*/
X -1, -1, 51, 55, -1, -1, -1, -1, -1, -1,  0,  0,  0,  0,  0, 56, /*53*/
X -1, -1, -1, 52, -1, -1, -1, -1, -1, -1,  0,  0,  0,  0,  0, 91, /*54*/
X -1, -1, 53, -1, 57, -1, -1, -1, -1, -1,  0,  0,  0,  0,  0, 62, /*54*/
X 50, -1, -1, -1, -1, -1, -1, -1, 74, 72,  0,  0,  0,  0,  0, 64, /*56*/
X -1, -1, -1, -1, -1, 55, -1, 58, -1, 59,  0,  0,  0,  0,  0, 76, /*57*/
X -1, -1, -1, -1, -1, -1, -1, 60, 57, -1,  0,  0,  0,  0,  0, 57, /*58*/
X -1, -1, -1, -1, -1, -1, 57, -1, -1, 61,  0,  0,  0,  0,  0, 58, /*59*/
X -1, -1, -1, -1, -1, -1, -1, -1, 58, 62,  0,  0,  0,  0,  0, 84, /*60*/
X -1, -1, -1, -1, -1, -1, 59, 63, -1, -1,  0,  0,  0,  0,  0, 87, /*61*/
X -1, -1, -1, -1, -1, -1, 60, -1, -1, 64,  0,  0,  0,  0,  0, 58, /*62*/
X -1, -1, -1, -1, -1, -1, -1, 64, 61, -1,  0,  0,  0,  0,  0, 57, /*63*/
X -1, -1, -1, -1, -1, 65, 62, -1, 63, -1,  0,  0,  0,  0,  0, 77, /*64*/
X -1, 66, -1, -1, 64, -1, -1, -1, -1, -1,  0,  0,  0,  0,  0, 61, /*65*/
X 65, 67, -1, -1, -1, -1, -1, -1, -1, -1,  0,  0,  0,  0,  0, 55, /*66*/
X 66, 69, 68, 70, -1, -1, -1, -1, -1, -1,  0,  0,  0,  0,  0, 78, /*67*/
X -1, -1, 71, 67, -1, -1, -1, -1, -1, -1,  0,  0,  0,  0,  0, 56, /*68*/
X 67, -1, -1, -1, -1, -1, -1, -1, -1, -1,  0,  0,  0,  0,  0, 92, /*69*/
X121,128, 67, -1, -1, -1, -1, -1, -1, -1,  0,  0,  0,  0,  0, 48, /*70*/
X -1, -1, -1, 68, -1, -1, 72, -1, 73, -1,  0,  0,  0,  0,  0, 66, /*71*/
X -1, -1, -1, -1, -1, -1, 56, -1, -1, 71,  0,  0,  0,  0,  0, 58, /*72*/
X -1, -1, -1, -1, -1, -1, -1, 71, 75, -1,  0,  0,  0,  0,  0, 57, /*73*/
X -1, -1, -1, -1, -1, -1, -1, 56, 77, -1,  0,  0,  0,  0,  0, 57, /*74*/
X -1, -1, -1, -1, -1, -1, 76, 73, -1, 80,  0,  0,  0,  0,  0, 52, /*75*/
X -1, -1, -1, -1, -1, -1, 77, -1, -1, 75,  0,  0,  0,  0,  0, 58, /*76*/
X -1, -1, -1, -1, -1, -1, 79, 74, 78, 76,  0,  0,  0,  0,  0, 79, /*77*/
X -1, -1, -1, -1, -1, -1, -1, 77, -1, -1,  0,  0,  0,  0,  0, 90, /*78*/
X -1, -1, -1, -1, -1, -1,108, -1, -1, 77,  0,  0,  0,  0,  0, 58, /*79*/
X -1, -1, 81, 82, -1, -1, 75, -1, -1, -1,  0,  0,  0,  0,  0, 74, /*80*/
X -1, -1, -1, 80, -1, -1, -1, -1, -1, -1,  0,  0,  0,  0,  0, 93, /*81*/
X -1, -1, 80, 83, -1, -1, -1, -1, -1, -1,  0,  0,  0,  0,  0, 56, /*82*/
X -1, 84, 82, -1, -1, -1, -1, -1, -1, -1,  0,  0,  0,  0,  0, 81, /*83*/
X 83, -1, 85, 86, -1, -1, -1, -1, -1, -1,  0,  0,  0,  0,  0, 50, /*84*/
X -1, -1, -1, 84, -1, -1, -1, -1, -1, -1,  0,  0,  0,  0,  0, 90, /*85*/
X 87, -1, 84, -1, -1, -1, -1, -1, -1, -1,  0,  0,  0,  0,  0, 83, /*86*/
X -1, 86, -1,109, -1, -1, -1, -1, -1, -1,  0,  0,  0,  0,  0, 94, /*87*/
X -1, -1, -1, -1, 52, -1, 92, -1, -1, 89,  0,  0,  0,  0,  0, 96, /*88*/
X -1, -1, -1, -1, -1, -1, 88, -1, -1, 90,  0,  0,  0,  0,  0, 58, /*89*/
X -1, -1, -1, -1, -1, -1, 89, -1, -1, 91,  0,  0,  0,  0,  0, 58, /*90*/
X -1, -1, -1, -1, -1, -1, 90, -1, -1, -1,  0,  0,  0,  0,  0, 90, /*91*/
X -1, -1, -1, -1, -1, -1, 93, -1, -1, 88,  0,  0,  0,  0,  0, 58, /*92*/
X -1, -1, -1, -1, -1, -1, -1, 94, 95, 92,  0,  0,  0,  0,  0, 95, /*93*/
X -1, -1, -1, -1, 96, -1, -1, -1, 93, -1,  0,  0,  0,  0,  0, 60, /*94*/
X -1, -1, -1, -1, -1, -1, -1, 93,104, -1,  0,  0,  0,  0,  0, 57, /*95*/
X 97, -1,103, -1, -1, 94, -1, -1, -1, -1,  0,  0,  0,  0,  0, 97, /*96*/
X 98, 96, -1, -1, -1, -1, -1, -1, -1, -1,  0,  0,  0,  0,  0, 55, /*97*/
X -1, 97, 99, -1, -1, -1, -1, -1, -1, -1,  0,  0,  0,  0,  0, 81, /*98*/
X -1, -1,100, 98, -1, -1, -1, -1, -1, -1,  0,  0,  0,  0,  0, 56, /*99*/
X -1,101, -1, 99, -1, -1, -1, -1, -1, -1,  0,  0,  0,  0,  0, 80,/*100*/
X100,102, -1, -1, -1, -1, -1, -1, -1, -1,  0,  0,  0,  0,  0, 55,/*101*/
X101, -1, -1,103, -1, -1, -1, -1, -1, -1,  0,  0,  0,  0,  0, 82,/*102*/
X -1, -1,102, 96, -1, -1, -1, -1, -1, -1,  0,  0,  0,  0,  0, 56,/*103*/
X -1, -1, -1, -1, -1, -1, -1, 95,105, -1,  0,  0,  0,  0,  0, 57,/*104*/
X -1, -1, -1, -1, -1, -1, -1,104, -1,106,  0,  0,  0,  0,  0, 86,/*105*/
X -1, -1, -1, -1, -1, -1,105, -1, -1,107,  0,  0,  0,  0,  0, 58,/*106*/
X -1, -1, -1, -1, 79, -1,106, -1, -1, -1,  0,  0,  0,  0,  0, 89,/*107*/
X -1, -1, -1, -1, -1,106, -1, -1, -1, 79,  0,  0,  0,  0,  0, 88,/*108*/
X -1, -1, 87,110, -1, -1, -1, -1, -1, -1,  0,  0,  0,  0,  0, 56,/*109*/
X -1, -1,109, -1, -1,140, -1, -1, -1, -1,  0,  0,  0,  0,  0, 99,/*110*/
X -1, -1, -1,140,109, -1, -1, -1, -1, -1,  0,  0,  0,  0,  0, 98,/*111*/
X -1, -1,140, -1,113, -1, -1, -1, -1, -1,  0,  0,  0,  0,  0, 62,/*112*/
X114, -1, -1, -1, -1,112, -1, -1, -1, -1,  0,  0,  0,  0,  0,100,/*113*/
X115,113, -1, -1, -1, -1, -1, -1, -1, -1,  0,  0,  0,  0,  0, 55,/*114*/
X -1,114,118,116, -1, -1, -1, -1, -1, -1,  0,  0,  0,  0,  0, 51,/*115*/
X -1,117,115, -1, -1, -1, -1, -1, -1, -1,  0,  0,  0,  0,  0, 81,/*116*/
X116, -1, -1, -1, -1, -1, -1, -1, -1, -1,  0,  0,  0,  0,  0,101,/*117*/
X -1, -1,119,115, -1, -1, -1, -1, -1, -1,  0,  0,  0,  0,  0, 56,/*118*/
X -1,125,120,118, -1, -1, -1, -1, -1, -1,  0,  0,  0,  0,  0, 51,/*119*/
X -1,122, -1,119, -1, -1, -1, -1, -1, -1,  0,  0,  0,  0,  0, 80,/*120*/
X -1, 70, -1,122, -1, -1, -1, -1, -1, -1,  0,  0,  0,  0,  0, 80,/*121*/
X120,123,121, -1, -1, -1, -1, -1, -1, -1,  0,  0,  0,  0,  0, 48,/*122*/
X122, -1, -1,124, -1, -1, -1, -1, -1, -1,  0,  0,  0,  0,  0, 82,/*123*/
X -1, -1,123, -1, -1, -1, -1, -1, -1, -1,  0,  0,  0,  0,  0, 90,/*124*/
X119, -1, -1,126, -1, -1, -1, -1, -1, -1,  0,  0,  0,  0,  0, 82,/*125*/
X -1,127,125, -1, -1, -1, -1, -1, -1, -1,  0,  0,  0,  0,  0, 81,/*126*/
X126, -1, -1, -1, -1, -1, -1, -1, -1, -1,  0,  0,  0,  0,  0, 90,/*127*/
X 70, -1, -1,129, -1, -1, -1, -1, -1, -1,  0,  0,  0,  0,  0, 82,/*128*/
X130,136,128, -1, -1, -1, -1, -1, -1, -1,  0,  0,  0,  0,  0, 48,/*129*/
X -1,129, -1,131, -1, -1, -1, -1, -1, -1,  0,  0,  0,  0,  0, 80,/*130*/
X134,132,130, -1, -1, -1, -1, -1, -1, -1,  0,  0,  0,  0,  0, 48,/*131*/
X131, -1, -1,133, -1, -1, -1, -1, -1, -1,  0,  0,  0,  0,  0, 82,/*132*/
X -1, -1,132, -1, -1, -1, -1, -1, -1, -1,  0,  0,  0,  0,  0, 90,/*133*/
X -1,131, -1,135, -1, -1, -1, -1, -1, -1,  0,  0,  0,  0,  0, 80,/*134*/
X -1, -1,134, -1, -1, -1, -1, -1, -1, -1,  0,  0,  0,  0,  0, 90,/*135*/
X129, -1, -1,137, -1, -1, -1, -1, -1, -1,  0,  0,  0,  0,  0, 82,/*136*/
X -1, -1,136,138, -1, -1, -1, -1, -1, -1,  0,  0,  0,  0,  0, 56,/*137*/
X139, -1,137, -1, -1, -1, -1, -1, -1, -1,  0,  0,  0,  0,  0, 83,/*138*/
X -1,138, -1, -1, -1, -1, -1, -1, -1, -1,  0,  0,  0,  0,  0, 90,/*139*/
X -1, -1,111,112, -1, -1, -1, -1, -1, -1,  0,  0,  0,  0,  0, 56,/*140*/
X 30, 26, 26,142, -1, -1, 24, 20, 26,142,  0,  0,  0,  0,  0,102,/*141*/
X 20, 29,141,  2, -1, -1,141,  2,141,  2,  0,  0,  0,  0,  0,103,/*142*/
X 25, 25, 25, 25, -1, -1, 25, 25,144, 25,  0,  0,  0,  0,  0,104,/*143*/
X143,143,146,143, -1, -1,143,143,143,143,  1,  0,  0,  0,  0,105,/*144*/
X 23, 35, 23, 21, -1, -1, 23, 21, 35, 34,  0,  0,  0,  0,  0,106,/*145*/
X -1, -1, -1,144, -1, -1, -1, -1, -1, -1,  0,  0,  0,  0,  0,107,/*146*/
X  3, 15,  3,  3, -1, -1,  3,  3, 15, 15,  1,  0,  0,  0,  0,108,/*147*/
X 15,  2,  2, 15, -1, -1, 15, 15,  2,  2,  0,  0,  0,  0,  0,109,/*148*/
X -1, -1, 45, -1, -1,150, -1, -1, -1, -1,  0,  0,  0,  0,  0,110,/*149*/
X -1,151, -1, -1,149, -1, -1, -1, -1, -1,  0,  0,  0,  0,  0, 61,/*150*/
X150,152, -1, -1, -1, -1, -1, -1, -1, -1,  0,  0,  0,  0,  0, 55,/*151*/
X151,153, -1,159, -1, -1, -1, -1, -1, -1,  0,  0,  0,  0,  0, 49,/*152*/
X152,154, -1, -1, -1, -1, -1, -1, -1, -1,  0,  0,  0,  0,  0, 55,/*153*/
X153, -1, -1,155, -1, -1, -1, -1, -1, -1,  0,  0,  0,  0,  0, 82,/*154*/
X -1, -1,154,156, -1, -1, -1, -1, -1, -1,  0,  0,  0,  0,  0, 56,/*155*/
X157, -1,155, -1, -1, -1, -1, -1, -1, -1,  0,  0,  0,  0,  0, 83,/*156*/
X158,156, -1, -1, -1, -1, -1, -1, -1, -1,  0,  0,  0,  0,  0, 55,/*157*/
X -1,157,159,160, -1, -1, -1, -1, -1, -1,  0,  0,  0,  0,  0, 51,/*158*/
X -1, -1,152,158, -1, -1, -1, -1, -1, -1,  1,  0,  0,  0,  0,132,/*159*/
X -1, -1,158,161, -1, -1, -1, -1, -1, -1,  0,  0,  0,  0,  0, 56,/*160*/
X -1, -1,160,162, -1, -1, -1, -1, -1, -1,  0,  0,  0,  0,  0, 56,/*161*/
X -1, -1,161,163, -1, -1, -1, -1, -1, -1,  0,  0,  0,  0,  0, 56,/*162*/
X -1, -1,162,164, -1, -1, -1, -1, -1, -1,  0,  0,  0,  0,  0, 56,/*163*/
X -1, -1,163,165, -1, -1, -1, -1, -1, -1,  0,  0,  0,  0,  0, 56,/*164*/
X -1, -1,164, -1, -1,166, -1, -1, -1, -1,  0,  0,  0,  0,  0,110,/*165*/
X -1, -1,167,178,165, -1, -1, -1, -1, -1,  0,  0,  0,  0,  0,111,/*166*/
X168, -1, -1,166, -1, -1, -1, -1, -1, -1,  0,  0,  0,  0,  0, 82,/*167*/
X169,167, -1, -1, -1, -1, -1, -1, -1, -1,  0,  0,  0,  0,  0, 55,/*168*/
X170,168, -1, -1, -1, -1, -1, -1, -1, -1,  0,  0,  0,  0,  0, 55,/*169*/
X -1,169, -1, -1,171, -1, -1, -1, -1, -1,  0,  0,  0,  0,  0, 61,/*170*/
X -1, -1,172, -1, -1,170, -1, -1, -1, -1,  0,  0,  0,  0,  0,110,/*171*/
X -1, -1,173,171, -1, -1, -1, -1, -1, -1,  0,  0,  0,  0,  0, 56,/*172*/
X -1, -1,174,172, -1, -1, -1, -1, -1, -1,  0,  0,  0,  0,  0, 56,/*173*/
X -1, -1,175,173, -1, -1, -1, -1, -1, -1,  0,  0,  0,  0,  0, 56,/*174*/
X -1, -1,176,174, -1, -1, -1, -1, -1, -1,  0,  0,  0,  0,  0, 56,/*175*/
X -1, -1,177,175, -1, -1, -1, -1, -1, -1,  0,  0,  0,  0,  0, 56,/*176*/
X -1, -1, -1,176, -1, -1, -1, -1, -1, -1,  1,  0,  0,  0,  0,112,/*177*/
X -1, -1,166,179, -1, -1, -1, -1, -1, -1,  0,  0,  0,  0,  0, 56,/*178*/
X -1, -1,178,180, -1, -1, -1, -1, -1, -1,  0,  0,  0,  0,  0, 56,/*179*/
X -1,181,179, -1, -1, -1, -1, -1, -1, -1,  0,  0,  0,  0,  0, 81,/*180*/
X180,182, -1, -1, -1, -1, -1, -1, -1, -1,  0,  0,  0,  0,  0, 55,/*181*/
X181,185,184,183, -1, -1, -1, -1, -1, -1,  0,  0,  0,  0,  0, 78,/*182*/
X -1, -1,182, -1, -1, -1, -1, -1, -1, -1,  0,  0,  0,  0,  0, 90,/*183*/
X -1, -1, -1,182, -1, -1, -1, -1, -1, -1,  0,  0,  0,  0,  0, 90,/*184*/
X182, -1, -1, -1, -1, -1, -1, -1, -1, -1,  0,  0,  0,  0,  0, 90,/*185*/
X185,187, -1, -1, -1, -1, -1, -1, -1, -1,  0,  0,  0,  0,  0, 55,/*186*/
X186,189,190,188, -1, -1, -1, -1, -1, -1,  0,  0,  0,  0,  0, 78,/*187*/
X -1, -1,187, -1, -1, -1, -1, -1, -1, -1,  0,  0,  0,  0,  0, 90,/*188*/
X187, -1, -1, -1, -1, -1, -1, -1, -1, -1,  0,  0,  0,  0,  0, 90,/*189*/
X -1, -1,191,187, -1, -1, -1, -1, -1, -1,  0,  0,  0,  0,  0, 56,/*190*/
X192,198, -1,190, -1, -1, -1, -1, -1, -1,  1,  0,  0,  0,  0,113,/*191*/
X -1,191, -1, -1, -1, -1,193, -1, -1, -1,  1,  0,  0,  0,  0,114,/*192*/
X -1, -1, -1, -1, -1, -1, -1, -1,194,192,  1,  0,  0,  0,  0,115,/*193*/
X -1,195, -1, -1, -1, -1, -1,193, -1, -1,  1,  0,  0,  0,  0,116,/*194*/
X194,196, -1, -1, -1, -1, -1, -1, -1, -1,  1,  0,  0,  0,  0,117,/*195*/
X195, -1, -1, -1,199, -1, -1, -1, -1,197,  1,  0,  0,  0,  0,118,/*196*/
X -1, -1, -1, -1, -1, -1,196,198, -1, -1,  1,  0,  0,  0,  0,119,/*197*/
X191, -1, -1, -1, -1, -1, -1, -1,197, -1,  1,  0,  0,  0,  0,120,/*198*/
X200, -1, -1, -1, -1,196, -1, -1, -1, -1,  1,  0,  0,  0,  0,121,/*199*/
X -1,199,201,202, -1, -1, -1, -1, -1, -1,  1,  0,  0,  0,  0,122,/*200*/
X -1, -1, -1,200, -1, -1, -1, -1, -1, -1,  1,  0,  0,  0,  0,123,/*201*/
X -1, -1,200,203, -1, -1, -1, -1, -1, -1,  1,  0,  0,  0,  0,124,/*202*/
X -1, -1,202, -1, -1, -1, -1, -1, -1, -1,  1,  0,  0,  0,  0,125,/*203*/
X 45,205, -1, -1, -1, -1, -1, -1, -1, -1,  0,  0,  0,  0,  0, 55,/*204*/
X204, -1,206, -1, -1, -1, -1, -1, -1, -1,  0,  0,  0,  0,  0, 83,/*205*/
X -1, -1, -1,205, -1, -1, -1, -1, -1, -1,  1,  0,  0,  0,  0,126,/*206*/
X -1,208,227, -1, -1, -1, -1, -1, -1, -1,  0,  0,  0,  0,  0, 81,/*207*/
X207,209,226, -1, -1, -1, -1, -1, -1, -1,  0,  0,  0,  0,  0, 48,/*208*/
X208,210,225, -1, -1, -1, -1, -1, -1, -1,  0,  0,  0,  0,  0, 48,/*209*/
X209,211,224, -1, -1, -1, -1, -1, -1, -1,  0,  0,  0,  0,  0, 48,/*210*/
X210,217,223, -1, -1, -1, -1, -1, -1, -1,  0,  0,  0,  0,  0, 48,/*211*/
X217,213,222, -1, -1, -1, -1, -1, -1, -1,  0,  0,  0,  0,  0, 48,/*212*/
X212,214,221, -1, -1, -1, -1, -1, -1, -1,  0,  0,  0,  0,  0, 48,/*213*/
X213,215,220, -1, -1, -1, -1, -1, -1, -1,  0,  0,  0,  0,  0, 48,/*214*/
X214,216,219, -1, -1, -1, -1, -1, -1, -1,  0,  0,  0,  0,  0, 48,/*215*/
X215, -1,218, -1, -1, -1, -1, -1, -1, -1,  0,  0,  0,  0,  0, 83,/*216*/
X211,212, -1,239, -1, -1, -1, -1, -1, -1,  1,  0,  0,  0,  0,128,/*217*/
X -1, -1,237,216, -1, -1, -1, -1, -1, -1, -1,  0,  0,  0,  0, 56,/*218*/
X -1, -1,236,215, -1, -1, -1, -1, -1, -1, -1,  0,  0,  0,  0, 56,/*219*/
X -1, -1,235,214, -1, -1, -1, -1, -1, -1, -1,  0,  0,  0,  0, 56,/*220*/
X -1, -1,234,213, -1, -1, -1, -1, -1, -1, -1,  0,  0,  0,  0, 56,/*221*/
X -1, -1,233,212, -1, -1, -1, -1, -1, -1, -1,  0,  0,  0,  0, 56,/*222*/
X -1, -1,232,211, -1, -1, -1, -1, -1, -1, -1,  0,  0,  0,  0, 56,/*223*/
X -1, -1,231,210, -1, -1, -1, -1, -1, -1, -1,  0,  0,  0,  0, 56,/*224*/
X -1, -1,230,209, -1, -1, -1, -1, -1, -1, -1,  0,  0,  0,  0, 56,/*225*/
X -1, -1,229,208, -1, -1, -1, -1, -1, -1, -1,  0,  0,  0,  0, 56,/*226*/
X -1, -1,228,207, -1, -1, -1, -1, -1, -1, -1,  0,  0,  0,  0, 56,/*227*/
X -1,229, -1,227, -1, -1, -1, -1, -1, -1,  0,  0,  0,  0,  0, 80,/*228*/
X228,230, -1,226, -1, -1, -1, -1, -1, -1,  0,  0,  0,  0,  0, 49,/*229*/
X229,231, -1,225, -1, -1, -1, -1, -1, -1,  0,  0,  0,  0,  0, 49,/*230*/
X230,232, -1,224, -1, -1, -1, -1, -1, -1,  0,  0,  0,  0,  0, 49,/*231*/
X231,233, -1,223, -1, -1, -1, -1, -1, -1,  0,  0,  0,  0,  0, 49,/*232*/
X232,234, -1,222, -1, -1, -1, -1, -1, -1,  0,  0,  0,  0,  0, 49,/*233*/
X233,235, -1,221, -1, -1, -1, -1, -1, -1,  0,  0,  0,  0,  0, 49,/*234*/
X234,236, -1,220, -1, -1, -1, -1, -1, -1,  0,  0,  0,  0,  0, 49,/*235*/
X235,237, -1,219, -1, -1, -1, -1, -1, -1,  0,  0,  0,  0,  0, 49,/*236*/
X236,238, -1,218, -1, -1, -1, -1, -1, -1,  0,  0,  0,  0,  0, 49,/*237*/
X237, -1, -1, -1, -1, -1, -1, -1, -1, -1,  1,  0,  0,  0,  0,127,/*238*/
X -1, 46,217, -1, -1, -1, -1, -1, -1, -1,  0,  0,  0,  0,  0, 81,/*239*/
X241, -1, -1, -1, -1, -1, -1, -1, -1, -1,  1,  0,  0,  0,  0,129,/*240*/
X -1,240,242, -1, -1, -1, -1, -1, -1, -1,  1,  0,  0,  0,  0,130,/*241*/
X -1, -1, -1,241, -1, -1, -1, -1, -1, -1,  1,  0,  0,  0,  0,131,/*242*/
X 29,244,141,  2, -1, -1,141,  2,141,  2,  4,  0,  0,  0,  0,133,/*243*/
X243,245,141,  2, -1, -1,141,  2,141,  2,  0,  0,  0,  0,  0,134,/*244*/
X244, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  0,  0,  0,  0,135,/*245*/
X247, 42,145,  6, -1, -1,145,  1,145,  6,  4,  0,  0,  0,  0,136,/*246*/
X248,246,145,  6, -1, -1,145,  1,145,  6,  0,  0,  0,  0,  0,134,/*247*/
X -1,247, -1, -1, -1, -1, -1, -1, -1, -1, -1,  0,  0,  0,  0,135 /*248*/
X};
X 
X/*****************************************************************/
X/*                                                               */
X/*                   --- Object Matrix ---                       */
X/*                                                               */
X/*  Location  = room location if =>0, else =-1 is in possesion   */
X/*              of player, = -2 means unmade, = -3 means it is   */
X/*              destroyed, = -5 means the object is in the safe. */ 
X/*  Value     = object's value                                   */
X/*  Type      = external property of the object                  */
X/*                  = 1  indicates special action on taking      */
X/*                  = 2  alias				         */
X/*                  = 3  unmovable object which has no actions   */
X/*  ID        = object parse id name                             */
X/*  Weight    = object's weight                                  */
X/*  Status    = internal property of the object                  */
X/*  Text      = Character string describing object               */
X/*                                                               */
X/*****************************************************************/
X
Xstruct object_struct object[Objcnt] = {
X{ 0,        0,           0,  	V_can,		10,	0,		
X	"an empty can of Fourex beer"},
X{ 0,        0,           0,  	V_butt,		1, 	0,
X	"a cigarette butt"},
X{ 0,	    0,           0,  	V_bottle,	20, 	0,
X	"an empty bottle of Black Swan Lager"},
X{36,	    0, Z_transform,  	V_mat, 		300, 	0,
X	"an old doormat with \"ACME Gold Mines Ltd.\" written on it"},
X{B_unmade,  0,           0,  	V_key, 		5, 	0,
X	"a large brass key"},
X{ 0,        0,	         0,	V_umbrella,	100, 	0,
X	"a ripped and bent up umbrella"},
X{ 0,        0,	         0,	V_tackle, 	50, 	0,
X	"a two metre length of fishing tackle without a hook"},
X{ 0,        0,	         0,	V_bit, 		10, 	0,
X	"a broken drill bit"},
X{38,        0, Z_transform,  	V_map,		10, 	0,
X	"a very old but detailed map of the ACME Mine"},
X{B_unmade,  0,           0,  	V_map_frag,	10, 	0,
X	"a fragment of a map showing the ACME Mine"},
X{B_in_safe, 0,           0,  	V_paper,	10, 	0,
X	"a sheet of paper with some writing on it"},
X{ 0,      200,           0,	V_gold, 	500, 	0,
X	"a gold bar weighing ten kilograms"},
X{ 0,        0,	         0,	V_jack,		400, 	0,
X	"a hydraulic jack which is rusted solid"},
X{ 0,        0,	         0,	V_dynamite,	100, 	0,
X	"a large stick of dynamite"},
X{ 0,        0,           0,	V_clip, 	50, 	150,
X	"an M16 ammo clip designed to hold up to 200 rounds"},
X{ 0,        0,	         0,	V_pen, 		5, 	0,
X	"a fountain pen which is dried up and useless"},
X{ 0,        0,           0,	V_org_clip,	50, 	5,
X	"an orange M16 ammo clip which is glowing a faint pale blue"},
X{ 0,        0,	         0,	V_pencil, 	5, 	0,
X	"a mechanical pencil without any leads"},
X{ 0,        0,           0,	V_rifle, 	300, 	0,  /* don't modify */
X	"an unloaded, fully automatic M16 infantry rifle"},
X{ 0,        0,	         0,	V_wire, 	100, 	0,
X	"a piece of copper wire"},
X{ 0,        0,	         0,	V_pipe,		200, 	0,
X	"a short length of galvanized iron pipe"},
X{ 0,        0,           0,	V_cap,		5, 	0,
X	"a blasting cap with 20 cm. of fuse attached"},
X{ 0,        0,           0,  	V_matches,	2, 	0,
X	"a box of \"Red Head\" matches"},
X{ 0,      100,           0,  	V_ring, 	5, 	0,
X	"a diamond ring with a three carat flawless blue diamond"},
X{ 0,        0,	         0,	V_opener,	10, 	0,
X	"a can opener"},
X{ 0,      100,           0,  	V_ruby, 	30, 	0,
X	"a bright red ruby the size of an egg"},
X{B_unmade,200,           0,  	V_teapot,	50, 	0,
X	"an antique sterling silver teapot with \"N.K.\" engraved on it"},
X{ 0,      150,           0,  	V_coin, 	7, 	0,
X	"a silver Syracusian Dekadrachma coin"},
X{ 0,        0,	         0,	V_cord,		70, 	0,
X	"an electrical extension cord"},
X{ 0,      100,           0,	V_bill,		5, 	0,
X	"a $100 dollar bill"},
X{ 0,        0,	         0,	V_photo,	5, 	0,
X	"an autographed photo of Sir Joh"},
X{ 0,        0,           0,	V_chair,	500, 	0,
X	"an old folding chair"},
X{ 0,        0,           0,	V_bulb,		10, 	0,
X	"a burned out light bulb"},
X{ 0,        0,	         0,  	V_pills,	10, 	0,
X	"a packet containing atropine pills"},
X{ 0,      150,           0,  	V_saphire,	30, 	0,
X	"a high quality artificial saphire"},
X{ 0,      100,           0,	V_emerald,	30, 	0,
X	"a huge uncut emerald"},
X{ 0,        0,	         0,	V_rag, 	 	50, 	0,
X	"an oily rag"},
X{ 0,        0,	         0,	V_tube,		50, 	0,
X	"a burned out fluorescent tube"},
X{ 0,        0,	         0,	V_carpet,	400, 	0,
X	"a filthy worn out carpet"},
X{ 0,        0,	         0,	V_branch,	400, 	0,
X	"a branch from a gum tree"},
X{ 0,        0,	         0,  	V_letter,	10, 	0,
X	"a thick airmail letter, marked \"Postage Due\""},
X{ 0,        0,	         0,	V_cork, 	5, 	0,
X	"a cork from a wine bottle"},
X{ 0,        0,	         0,  	V_torch,	100, 	0,
X	"a high intensity battery powered torch"},
X{ 0,        0,	         0,	V_trap,		5, 	0,
X	"an old cockroach trap"},
X{ 0,        0,	         0,	V_lighter,	5, 	0,
X	"an empty butane cigarette lighter"},
X{ 0,        0,	         0,  	V_cube, 	50, 	0,
X	"a small black cube with a blue push button on one side"}, 
X{B_unmade,700,           0,  	V_clapper,	100, 	0,
X	"an ancient and priceless gong clapper made of ivory and gold"},
X{B_unmade,  0,           0,  	V_detector,	100, 	0,
X	"a Semtex explosive detector with a push button switch"},
X{ 0,        0,	         0,	V_lace,		2, 	0,
X	"a broken shoe lace"},
X{ 0,        0,	         0,	V_comb,		5, 	0,
X	"a dirty old comb"},
X{ 0,        0,	         0,	V_wrapper,	3, 	0,
X	"a Cornetto ice cream cone wrapper"},
X{ 0,        0,	         0,	V_tire,		400, 	0,
X	"a bald automobile tyre"},
X{ 0,        0,	         0,	V_shell,	3, 	0,
X	"an empty broken egg shell"},
X{ 0,        0,	         0,	V_brick,	100, 	0,
X	"a broken piece of brick"},
X{ 0,        0,	         0,	V_rope,		100, 	0,
X	"a one metre length of rope"},
X{ 0,        0,	         0,	V_package,	5, 	0,
X	"an empty package of Stradbroke cigarettes"},
X{ 0,        0,	         0,	V_belt,		10, 	0,
X	"a broken automobile fan belt"},
X{ 0,        0,	         0,	V_filter,	50, 	0,
X	"a used automobile oil filter"},
X{ 0,        0,	         0,	V_string,	5,	0,
X	"a short piece of string"},
X{B_unmade,  0,           0,  	V_recorder,	0, 	S_inactive,
X	"a data recorder having three coloured buttons"},
X{ 39,       0, Z_unmovable,	V_poster,	0,	0,
X	"Error"},
X{ 41,       0, Z_unmovable,	V_poster,	0,	0,
X	"Error"},
X{ 39,       0, Z_unmovable,	V_cockroach,	0,	0,
X	"Error"},
X{ 41,       0, Z_unmovable,	V_cockroach,	0,	0,
X	"Error"},
X{243,       0, Z_unmovable,	V_kangaroo,	0,	0,
X	"Error"},
X{246,       0, Z_unmovable,	V_kangaroo,	0,	0,
X	"Error"},
X{ 26,       0, Z_unmovable,	V_spinifex,	0,	0,
X	"Error"},
X{R_gong,    0, Z_unmovable,	V_gong, 	0,	S_fair_game,
X	"Error"},
X{ 23,       0, Z_unmovable,	V_bulldust,	0,	0,
X	"Error"},
X{159,       0, Z_unmovable,	V_message,	0,	0,
X	"Error"},
X{R_store_room,  0, Z_unmovable,	V_circuit,	0,	FALSE,
X	"Error"},
X{R_lift_inside, 0, Z_unmovable,	V_lift,		0,	L0,
X	"Error"},
X{R_office_entr, 0, Z_unmovable,	V_door,		0,	S_closed,
X	"Error"},
X{R_office_mang, 0, Z_unmovable,	V_safe,		0,	S_closed,
X	"Error"},
X{R_lift_entr,	0, Z_unmovable,	V_lift_door,	0,	S_closed,
X	"Error"},
X{R_office_mang, 0, Z_unmovable,	V_picture,	0,	S_closed,
X	"Error"},
X{R_gleep_tank,	0, Z_unmovable,	V_tank,		0,	0,
X	"Error"},
X{R_transporter,	0, Z_unmovable,	V_transporter,	0,	FALSE,
X	"Error"},
X{R_warning,     0, Z_unmovable,	V_warning,	0,	0,
X	"Error"},
X{R_office_mang, 0, Z_unmovable,	V_chart,	0,	0,
X	"Error"},
X{R_office_mang, 0, Z_unmovable,	V_desk,		0,	0,
X	"Error"},
X{R_foreman,	0, Z_unmovable,	V_desk,		0,	0,
X	"Error"}
X} ; 	
X
X#endif
X
X/***************************************************************/
X
X#ifdef DSCRB
Xint pill_count = 7 ;
Xextern int room[DM_room][16] ;
Xextern int sw_active ;
Xint rifle_flag = F_safety ;
Xextern int clip_flag ;
Xextern struct object_struct object[Objcnt] ;
Xextern struct monster_struct *Ned ;
X
X#endif
X
X/***************************************************************/
X
X#ifdef PUSHER
X/* subroutines: new_score, pusher, switcher */
Xextern int room[DM_room][16] ;
Xextern int tag[DM_tag] ;
Xextern struct object_struct object[Objcnt] ;
Xextern int monster_flag, rifle_flag ;
Xextern int verb, score;
Xextern long l_time, start_time ;
X
XFILE *fp ;
X#endif
X
X/***************************************************************/
X
X#ifdef LONG_DESCP
Xextern int room[DM_room][16] ;
Xextern struct object_struct object[Objcnt] ;
Xextern int monster_flag ;
X
X#endif
X
X/***************************************************************/
X
X#ifdef ACTOR
Xextern int room[DM_room][16], tag[DM_tag] ;
Xextern int gleep_safe, verb ;
Xextern struct object_struct object[Objcnt] ;
Xextern int clip_flag, rifle_flag, monster_flag ;
Xextern struct monster_struct *Ned ;
Xextern struct monster_struct *Wombat ;
Xextern struct monster_struct *monster_start ;
X
X#endif
X
X/***************************************************************/
X
X#ifdef MNSTR
Xextern int room[DM_room][16] ;
Xextern struct object_struct object[Objcnt] ;
Xextern int monster_flag ;
Xextern int carry_count, carry_weight ;
Xextern struct monster_struct *Ned ;
Xextern struct monster_struct *Wombat ;
Xextern struct monster_struct *Guards ;
Xextern struct monster_struct *Mullah ;
Xextern struct monster_struct *monster_start ;
X
X#endif
X
X/***************************************************************/
X
X#ifdef OPNR
Xint sw_active = FALSE ;
Xextern int room[DM_room][16] ;
Xextern struct object_struct object[Objcnt] ;
Xextern int sent[20];
Xextern int gleep_count, gleep_safe ;
Xextern int tag[DM_tag] ;
Xextern int sw_active ;
Xextern int pill_count ;
Xextern int gleep_spot[10] ;
Xextern int score, clip_flag ;
Xextern int carry_count, carry_weight ;
Xextern long clock_explode ;
Xextern int flag_clock, sw_clock, i_poison ;
X
Xstruct read_struct read_object[Read_objcnt] = {
X	{V_map_frag,	TRUE }, 
X	{V_can,		FALSE }, 
X	{V_recorder,	FALSE }, 
X	{V_pills,	FALSE }, 
X	{V_letter,	TRUE },
X	{V_paper,	TRUE }, 
X	{V_cube,	FALSE }, 
X	{V_clip,	FALSE }, 
X	{V_org_clip,	FALSE }, 
X	{V_rifle,	FALSE }, 
X	{V_detector,	FALSE }, 
X	{V_safe,	FALSE }, 
X	{V_gong,	FALSE },
X	{V_message,	TRUE },
X	{V_warning,	TRUE }
X} ; 
X
X#endif
X  
X/***************************************************************/
X
X#ifdef PARSE
Xint sent[20], number_word ;
Xextern int verb ;
Xextern int sw_wizard ; 
Xextern int room[DM_room][16] ;
Xextern struct object_struct object[Objcnt] ;
Xextern struct read_struct read_object[Read_objcnt] ;
Xint tag[DM_tag] ;
Xextern FILE *fp ;
X
X/* Game vocabulary */
Xchar *vocab[Vocab_cnt] = {
X"north","south","east","west","up",
X"down","northeast","northwest","southeast","southwest",
X"n","s","e","w","u",                            /* "u"          = 15 */
X"d","ne","nw","se","sw",                        /* "sw"         = 20 */
X"quit","unlock","lock","take","leave",          /* "leave"      = 25 */
X"drop","can","bottle","mat","key",              /* "key"        = 30 */
X"butt","look","door","open","get",              /* "get"        = 35 */
X"throw","turn","on","off","push",               /* "push"       = 40 */
X"button","enter","switch","zero","forty-nine",  /* "forty-nine" = 45 */
X"sixty-seven","eighty-two","0","49","67",       /* "67"         = 50 */
X"82","beer","lager","doormat","lift",           /* "lift"       = 55 */ 
X"'on'","'off'","SVC","map","picture",           /* "picture"    = 60 */
X"safe","dial","paper","put","close",            /* "close"      = 65 */
X"read","gold","bar","dynamite","rifle",         /* "rifle"      = 70 */
X"M16","m16","cap","matches","diamond",          /* "diamond"    = 75 */
X"ring","ruby","silver","coin","bill",           /* "bill"       = 80 */
X"money","teapot","clip","ammo","box",           /* "box"        = 85 */
X"stick","pills","orange","glowing","saphire",   /* "saphire"    = 90 */
X"emerald","score","inventory","examine","describe",
X"drink","fill","water","fourex","invent",	/* "invent"	= 100 */
X"view","press","exit","all","Fourex",		/* "Fourex"	= 105 */
X"everything","shoot","kill","ned","Ned",	/* "Ned"	= 110 */
X"kelly","Kelly","pick","grab","combination",	/* "combination"= 115 */
X"select","safety","SAFE","triple","III",	/* "III"	= 120 */
X"single","I","auto","AUTO","automatic",		/* "automatic"	= 125 */
X"set","insert","attach","plan","gun",           /* "gun"        = 130 */
X"magazine","hoop","snake","bear","wombat",	/* "wombat"     = 135 */
X"remove","eject","org_clip","shut","gleep",	/* "gleep"	= 140 */
X"gleeps","letter","envelope","torch","mail",	/* "mail"       = 145 */
X"tank","carefully","gently","softly","slow_drop",
X"light","ignite","fuse","slowly","match",	/* "match"	= 155 */
X"cube","blue","blue-button","gray","gray-button",
X"clapper","sound","bang","hit","strike",	/* "strike"	= 160 */
X"gong","detector","give","STATS","JSYS",
X"SU","yellow","yellow-button","poster","eat",
X"swallow","pill","atropine","packet","wrapper",
X"tyre","shell","brick","rope","package",
X"belt","filter","string","cabinet","calendar",
X"tackle","bit","jack","pen","pencil",
X"wire","pipe","panel","opener","cord",
X"photo","chair","bulb","rag","tube",		/* "tube"	= 200 */
X"carpet","branch","cork","trap","lighter",
X"lace","comb","umbrella","meadow","billabong",
X"river","road","forest","grass","stream",
X"desert","building","office","hideout","dust",
X"mine","tunnel","tree","spinifex","hexagon",
X"spacecaft","airlock","wing","hole","tray",
X"liquid","cockroach","go","scream","yell",
X"bring","help","dump","attack","check",
X"inspect","place","touch","pull","extinguish",
X"ask","talk","tell","find","move",		/* "move"	= 250 */
X"break","kick","smash","feed","taste",
X"smell","slam","desk","in","into",
X"under","out","from","by","with",
X"fling","what","where","are","am",		/* "am"		= 275 */
X"have","qUeStIoN","how","why","who",		/* "who"	= 280 */
X"when","leap","walk","run","jump",		/* "jump"       = 285 */
X"hop","stroll","saunter","swagger","swing",	/* "swing"    	= 290 */
X"dig","swim","depart","info","back",		/* "back"	= 295 */
X"hold","fire","stand","painting","doors",	/* "doors"	= 300 */
X"treasure","trigger","load","unload","sand",	/* "sand"	= 305 */
X"cockroaches","kangaroo","climb","bulldust","kangaroos",
X"spinifexes","fuze","message","wall","recorder",
X"red","white","green","red-button","white-button",
X"green-button","grey","matchbox","map","circuit",   /* "map" is "map_frag" */
X"lift-door","transporter","warning","explosive","self",
X"myself","yourself","one","two","three",
X"four","five","toss","chart","charts","schedule",
X"schedules","orange-button"
X};
X
X/* Question Table */
Xint quest[Quest_max] = {
XV_what, V_where, V_are, V_am, V_have,
XV_how, V_why, V_who, V_when
X} ;
X
X/* Adjective Table */
Xstruct adjective_struct adjective[Adj_max] = {
X{ V_drop, V_bear,F_ignore,F_ignore},		/* drop bear */
X{ V_gold, V_bar,F_ignore,F_ignore},		/* gold bar */
X{ V_orange,V_clip,V_org_clip,F_replace},	/* orange clip */
X{ V_glowing, V_clip, V_org_clip,F_replace},	/* glowing clip */
X{ V_blue,V_switch,V_blue_button,F_replace},	/* blue switch */
X{ V_blue,V_button,V_blue_button,F_replace},	/* blue button */
X{ V_gray,V_switch,V_gray_button,F_replace},	/* gray switch */
X{ V_gray,V_button,V_gray_button,F_replace},	/* gray button */
X{ V_yellow,V_switch,V_yellow_button,F_replace},	/* yellow switch */
X{ V_yellow,V_button,V_yellow_button,F_replace},	/* yellow button */
X{ V_red,V_switch,V_red_button,F_replace},	/* red switch */
X{ V_red,V_button,V_red_button,F_replace},	/* red button */
X{ V_white,V_switch,V_white_button,F_replace},	/* white switch */
X{ V_white,V_button,V_white_button,F_replace},	/* white button */
X{ V_green,V_switch,V_green_button,F_replace},	/* green switch */
X{ V_green,V_button,V_green_button,F_replace},	/* green button */
X{ V_grey,V_switch,V_gray_button,F_replace},	/* grey switch */
X{ V_grey,V_button,V_gray_button,F_replace},	/* grey button */
X{ V_orange,V_switch,V_orange_button,F_replace},	/* orange switch */
X{ V_orange,V_button,V_orange_button,F_replace}	/* orange button */
X} ;
X
X/* Adverb Table */
Xstruct adverb_struct adverb[Adv_max] = { 
X{ V_down, V_put, V_drop},			/* put down */
X{ V_down, V_set, V_drop},			/* set down */
X{ V_carefully, V_drop, V_slow_drop},		/* drop carefully */
X{ V_gently, V_drop, V_slow_drop},		/* drop slowly */
X{ V_softly, V_drop, V_slow_drop},		/* drop softly */
X{ V_slowly, V_drop, V_slow_drop},		/* drop slowly */
X{ V_carefully, V_put, V_slow_drop},		/* put carefully */
X{ V_gently, V_put, V_slow_drop},		/* put slowly */
X{ V_softly, V_put, V_slow_drop},		/* put softly */
X{ V_slowly, V_put, V_slow_drop},		/* put slowly */
X{ V_in, V_go, V_enter},				/* go in */
X{ V_in, V_move, V_enter},			/* move in */
X{ V_in, V_leap, V_enter},			/* leap in */
X{ V_in, V_walk, V_enter},			/* walk in */
X{ V_in, V_run, V_enter},			/* run in */
X{ V_in, V_jump, V_enter},			/* jump in */
X{ V_in, V_hop, V_enter},			/* hop in */
X{ V_in, V_stroll, V_enter},			/* stroll in */
X{ V_in, V_saunter, V_enter}, 			/* saunter in */
X{ V_in, V_swagger, V_enter},			/* swagger in */
X{ V_out, V_go, V_exit},				/* go out */
X{ V_out, V_move, V_exit},			/* move out */
X{ V_out, V_leap, V_exit},			/* leap out */
X{ V_out, V_walk, V_exit},			/* walk out */
X{ V_out, V_run, V_exit},			/* run out */
X{ V_out, V_jump, V_exit},			/* jump out */
X{ V_out, V_hop, V_exit},			/* hop out */
X{ V_out, V_stroll, V_exit},			/* stroll out */
X{ V_out, V_saunter, V_exit}, 			/* saunter out */
X{ V_out, V_swagger, V_exit}			/* swagger out */
X} ;
X
X/* Verb Table */
Xint verb_table[Verb_max] = {
XV_quit,V_unlock,V_lock,V_take,V_leave,
XV_drop,V_look,V_open,V_get,V_throw,
XV_turn,V_push,V_enter,V_switch,V_lift,
XV_svc,V_dial,V_put,V_close,V_read,
XV_score,V_inventory,V_examine,V_describe,V_drink,
XV_fill,V_invent,V_view,V_press,V_exit,
XV_shoot,V_kill,V_pick,V_grab,V_combination,
XV_select,V_set,V_insert,V_attach,V_remove,
XV_eject,V_shut,V_light,V_ignite,V_sound,
XV_bang,V_hit,V_strike,V_give,V_stats,
XV_jsys,V_su,V_eat,V_swallow,V_fling,
XV_help,V_leap,V_walk,V_run,V_jump,
XV_hop,V_stroll,V_saunter,V_swagger,V_go,
XV_move,V_swing,V_dig,V_swim,V_depart,
XV_info,V_back,V_hold,V_fire,V_pull,
XV_stand,V_load,V_unload,V_climb,V_toss,
XV_inspect
X};
X 
X#endif
X
X/***************************************************************/
X
X#ifdef TAKER
Xint clip_flag = F_no_clip ;
Xint gleep_safe = 0, gleep_drop = FALSE ;
Xextern char *vocab[Vocab_cnt] ;
Xextern int room[DM_room][16] ;
Xextern int rifle_flag, number_word ; 
Xextern struct object_struct object[Objcnt] ;
Xextern int carry_count, carry_weight ;
Xextern int gleep_count, verb, sent[20], tag[DM_tag] ;
Xextern int sw_valuable ;
X
X#endif
END_OF_FILE
if test 44717 -ne `wc -c <'dink_glb.h'`; then
    echo shar: \"'dink_glb.h'\" unpacked with wrong size!
fi
# end of 'dink_glb.h'
fi
if test -f 'make.dos' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'make.dos'\"
else
echo shar: Extracting \"'make.dos'\" \(1093 characters\)
sed "s/^X//" >'make.dos' <<'END_OF_FILE'
XCFLAGS =  -c -w -mh -O
XHEAD = dink_sym.h dink_glb.h
X
X# The Ver. 2 Borland Tlink will malfunction if more Obj files are added.
X
Xdinkum.exe: dinkum.obj describe.obj longdsc.obj objlook.obj actor.obj \
Xmonster.obj opener.obj pusher.obj parse.obj taker.obj
X   tlink /x c:\tc\lib\c0h dinkum describe longdsc objlook actor monster \
Xpusher opener parse taker, dinkum, dinkum, c:\tc\lib\ch
X
Xdinkum.obj: dinkum.c $(HEAD)
X	tcc $(CFLAGS) dinkum.c
Xdescribe.obj: describe.c $(HEAD)
X	tcc $(CFLAGS) describe.c
Xlongdsc.obj: longdsc.c $(HEAD)
X	tcc $(CFLAGS) longdsc.c
Xobjlook.obj: objlook.c $(HEAD)
X	tcc $(CFLAGS) objlook.c
Xactor.obj: actor.c $(HEAD)
X	tcc $(CFLAGS) actor.c
Xpusher.obj: pusher.c $(HEAD)
X	tcc $(CFLAGS) pusher.c
Xmonster.obj: monster.c $(HEAD)
X	tcc $(CFLAGS) monster.c
Xopener.obj: opener.c $(HEAD)
X	tcc $(CFLAGS) opener.c
Xtaker.obj: taker.c $(HEAD)
X	tcc $(CFLAGS) taker.c
X
Xparse.obj: parse.c $(HEAD)
X# Replace with PROMPT if you want a prompt with every command entry.
X# This modification was suggested by Chris Herborth.  Thanks, Chris!
X#	tcc $(CFLAGS) -DPROMPT parse.c
X	tcc $(CFLAGS) parse.c
X
END_OF_FILE
if test 1093 -ne `wc -c <'make.dos'`; then
    echo shar: \"'make.dos'\" unpacked with wrong size!
fi
# end of 'make.dos'
fi
echo shar: End of archive 1 \(of 7\).
cp /dev/null ark1isdone
MISSING=""
for I in 1 2 3 4 5 6 7 ; do
    if test ! -f ark${I}isdone ; then
	MISSING="${MISSING} ${I}"
    fi
done
if test "${MISSING}" = "" ; then
    echo You have unpacked all 7 archives.
    rm -f ark[1-9]isdone
else
    echo You still need to unpack the following archives:
    echo "        " ${MISSING}
fi
##  End of shell archive.
exit 0
