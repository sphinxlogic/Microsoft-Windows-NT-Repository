


AGREP(l)          MISC. REFERENCE MANUAL PAGES           AGREP(l)



NNNNAAAAMMMMEEEE
     agrep - search a file for a string  or  regular  expression,
     with approximate matching capabilities

SSSSYYYYNNNNOOOOPPPPSSSSIIIISSSS
     aaaaggggrrrreeeepppp [ ----####ccccddddeeeehhhhiiiikkkkllllnnnnppppssssttttvvvvwwwwxxxxBBBBDDDDGGGGIIIISSSS ] _p_a_t_t_e_r_n [ -f _p_a_t_t_e_r_n_f_i_l_e ] [
     _f_i_l_e_n_a_m_e... ]

DDDDEEEESSSSCCCCRRRRIIIIPPPPTTTTIIIIOOOONNNN
     aaaaggggrrrreeeepppp searches the input _f_i_l_e_n_a_m_e_s (standard  input  is  the
     default,  but  see  a warning under LIMITATIONS) for records
     containing strings which  either  _e_x_a_c_t_l_y  or  _a_p_p_r_o_x_i_m_a_t_e_l_y
     match  a  pattern. A record is by default a line, but it can
     be defined differently using  the  -d  option  (see  below).
     Normally,  each  record found is copied to the standard out-
     put.  Approximate matching allows finding records that  con-
     tain  the  pattern  with  several errors including substitu-
     tions, insertions, and deletions.  For example, Massechusets
     matches  Massachusetts with two errors (one substitution and
     one insertion).  Running aaaaggggrrrreeeepppp -2 Massechusets  foo  outputs
     all lines in foo containing any string with at most 2 errors
     from Massechusets.

     aaaaggggrrrreeeepppp supports many kinds  of  queries  including  arbitrary
     wild  cards,  sets  of  patterns,  and  in  general, regular
     expressions.  See PATTERNS below.  It supports most  of  the
     options  supported by the ggggrrrreeeepppp family plus several more (but
     it is not 100% compatible with grep).  For more  information
     on  the  algorithms  used  by agrep see Wu and Manber, "Fast
     Text  Searching  With  Errors,"  Technical  report   #91-11,
     Department  of Computer Science, University of Arizona, June
     1991 (available by  anonymous  ftp  from  cs.arizona.edu  in
     agrep/agrep.ps.1),  and  Wu  and  Manber,  "Agrep  -- A Fast
     Approximate Pattern Searching Tool",  To  appear  in  USENIX
     Conference  1992  January  (available  by anonymous ftp from
     cs.arizona.edu in agrep/agrep.ps.2).

     As with the rest of the ggggrrrreeeepppp  family,  the  characters  `$$$$',
     `^'''',,,,  `****',  `[[[[',,,,  `]]]]',,,,  `^^^^', `||||', `((((', `))))', `!!!!', and `\\\\' can
     cause unexpected results when included in  the  _p_a_t_t_e_r_n,  as
     these characters are also meaningful to the shell.  To avoid
     these problems, one should always enclose the entire pattern
     argument in single quotes, i.e., 'pattern'.  Do not use dou-
     ble quotes (").

     When aaaaggggrrrreeeepppp is applied to more than one input file, the  name
     of  the  file is displayed preceding each line which matches
     the pattern.  The filename is not displayed when  processing
     a  single  file,  so  if  you  actually want the filename to
     appear, use ////ddddeeeevvvv////nnnnuuuullllllll as a second file in the list.





AT&T Bell LaboratoriesLast change: Jan 17, 1992                   1






AGREP(l)          MISC. REFERENCE MANUAL PAGES           AGREP(l)



OOOOPPPPTTTTIIIIOOOONNNNSSSS
     ----#   # is a non-negative integer (at most 8) specifying  the
          maximum  number  of  errors  permitted  in  finding the
          approximate matches  (defaults  to  zero).   Generally,
          each insertion, deletion, or substitution counts as one
          error.  It is possible to adjust the relative  cost  of
          insertions,  deletions and substitutions (see -I -D and
          -S options).

     ----cccc   Display only the count of matching records.

     ----dddd ''''_d_e_l_i_m''''
          Define _d_e_l_i_m to be the separator between  two  records.
          The default value is '$', namely a record is by default
          a line.  _d_e_l_i_m can be a string of size at most 8  (with
          possible use of ^ and $), but not a regular expression.
          Text between two _d_e_l_i_m's, before the first  _d_e_l_i_m,  and
          after  the last _d_e_l_i_m is considered as one record.  For
          example, -d '$$' defines paragraphs as records  and  -d
          '^From '  defines  mail  messages  as  records.   aaaaggggrrrreeeepppp
          matches each record separately.  This option  does  not
          currently work with regular expressions.

     ----eeee _p_a_t_t_e_r_n
          Same as a simple _p_a_t_t_e_r_n argument, but useful when  the
          _p_a_t_t_e_r_n begins with a `----'.

     ----ffff _p_a_t_t_e_r_n_f_i_l_e
          _p_a_t_t_e_r_n_f_i_l_e contains a set of (simple)  patterns.   The
          output is all lines that match at least one of the pat-
          terns in _p_a_t_t_e_r_n_f_i_l_e. Currently, the  -f  option  works
          only  for exact match and for simple patterns (any meta
          symbol is interpreted as a regular  character);  it  is
          compatible only with -c, -h, -i, -l, -s, -v, -w, and -x
          options.  see LIMITATIONS for size bounds.

     ----hhhh   Do not display filenames.

     ----iiii   Case-insensitive search - e.g., "A" and  "a"  are  con-
          sidered equivalent.

     ----kkkk   No symbol in the pattern is treated as a  meta  charac-
          ter. For example, agrep -k 'a(b|c)*d' foo will find the
          occurrences of a(b|c)*d in foo whereas agrep 'a(b|c)*d'
          foo  will find substrings in foo that match the regular
          expression 'a(b|c)*d'.

     ----llll   List only the files that contain a match.  This  option
          is  useful  for  looking for files containing a certain
          pattern.  For example, " agrep -l 'wonderful'  * " will
          list the names of those files in current directory that
          contain the word 'wonderful'.



AT&T Bell LaboratoriesLast change: Jan 17, 1992                   2






AGREP(l)          MISC. REFERENCE MANUAL PAGES           AGREP(l)



     ----nnnn   Each line that is printed is  prefixed  by  its  record
          number in the file.

     ----pppp   Find records in the text that contain  a  supersequence
          of the pattern.  For example,
           aaaaggggrrrreeeepppp ----pppp DDDDCCCCSSSS ffffoooooooo wwwwiiiillllllll mmmmaaaattttcccchhhh  """"DDDDeeeeppppaaaarrrrttttmmmmeeeennnntttt  ooooffff  CCCCoooommmmppppuuuutttteeeerrrr
          SSSScccciiiieeeennnncccceeee....""""

     ----ssss   Work silently, that is, display  nothing  except  error
          messages.   This  is  useful  for  checking  the  error
          status.

     ----tttt   Output the record starting from the  end  of  _d_e_l_i_m  to
          (and  including)  the  next  _d_e_l_i_m.  This is useful for
          cases where _d_e_l_i_m should come at the end of the record.

     ----vvvv   Inverse mode - display only those records that  _d_o  _n_o_t
          contain the pattern.

     ----wwww   Search for the pattern as a word - i.e., surrounded  by
          non-alphanumeric characters.  The non-alphanumeric mmmmuuuusssstttt
          surround the match;  they cannot be counted as  errors.
          For  example,  aaaaggggrrrreeeepppp -w -1 car will match cars, but not
          characters.

     ----xxxx   The pattern must match the whole line.

     ----yyyy   Used with -B option. When -y is on, agrep  will  always
          output the best matches without giving a prompt.

     ----BBBB   Best match mode.  When -B is  specified  and  no  exact
          matches  are found, agrep will continue to search until
          the closest matches (i.e., the ones with minimum number
          of errors) are found, at which point the following mes-
          sage will be shown:  "the best match contains x errors,
          there are y matches, output them? (y/n)" The best match
          mode is not supported for standard input,  e.g.,  pipe-
          line  input.  When the -#, -c, or -l options are speci-
          fied, the -B option is ignored.  In general, -B may  be
          slower than -#, but not by very much.

     ----DDDD_k  Set the cost of a  deletion  to  _k  (_k  is  a  positive
          integer).   This  option  does  not currently work with
          regular expressions.

     ----GGGG   Output the files that contain a match.

     ----IIII_k  Set the cost of an insertion to  _k  (_k  is  a  positive
          integer).   This  option  does  not currently work with
          regular expressions.

     ----SSSS_k  Set the cost of a substitution to _k (_k  is  a  positive



AT&T Bell LaboratoriesLast change: Jan 17, 1992                   3






AGREP(l)          MISC. REFERENCE MANUAL PAGES           AGREP(l)



          integer).   This  option  does  not currently work with
          regular expressions.

PPPPAAAATTTTTTTTEEEERRRRNNNNSSSS
     _a_g_r_e_p supports a large variety of patterns, including simple
     strings,   strings  with  classes  of  characters,  sets  of
     strings, wild cards, and regular expressions.

     SSSSttttrrrriiiinnnnggggssss
          any sequence of characters, including the special  sym-
          bols `^' for beginning of line and `$' for end of line.
          The special characters listed above (  `$$$$',  `^'''',,,,  `****',
          `[[[[',,,,  `^^^^', `||||', `((((', `))))', `!!!!', and `\\\\' ) should be pre-
          ceded by `\' if they are to be matched as regular char-
          acters.  For example, \^abc\\ corresponds to the string
          ^abc\, whereas ^abc corresponds to the  string  abc  at
          the beginning of a line.

     CCCCllllaaaasssssssseeeessss ooooffff cccchhhhaaaarrrraaaacccctttteeeerrrrssss
          a list of characters inside [] (in  order)  corresponds
          to  any character from the list.  For example, [a-ho-z]
          is any character between a and h or between  o  and  z.
          The  symbol  `^'  inside  [] complements the list.  For
          example, [^i-n] denote any character in  the  character
          set  except  character 'i' to 'n'.  The symbol `^' thus
          has two meanings, but this is  consistent  with  egrep.
          The  symbol  `.'  (don't  care)  stands  for any symbol
          (except for the newline symbol).

     BBBBoooooooolllleeeeaaaannnn ooooppppeeeerrrraaaattttiiiioooonnnnssss
          aaaaggggrrrreeeepppp supports an  `and'  operation  `;'  and  an  `or'
          operation  `,',  but  not  a  combination of both.  For
          example, 'fast;network' searches for all  records  con-
          taining both words.

     WWWWiiiilllldddd ccccaaaarrrrddddssss
          The symbol '#' is  used  to  denote  a  wild  card.   #
          matches  zero  or  any  number of arbitrary characters.
          For example, ex#e matches example.   The  symbol  #  is
          equivalent  to .* in egrep.  In fact, .* will work too,
          because it is a valid regular expression  (see  below),
          but  unless  this  is part of an actual regular expres-
          sion, # will work faster.

     CCCCoooommmmbbbbiiiinnnnaaaattttiiiioooonnnn ooooffff eeeexxxxaaaacccctttt aaaannnndddd aaaapppppppprrrrooooxxxxiiiimmmmaaaatttteeee mmmmaaaattttcccchhhhiiiinnnngggg
          any pattern inside angle brackets  <>  must  match  the
          text  exactly  even  if  the match is with errors.  For
          example, <mathemat>ics matches  mathematical  with  one
          error   (replacing   the   last   s  with  an  a),  but
          mathe<matics> does not match mathematical no matter how
          many errors we allow.




AT&T Bell LaboratoriesLast change: Jan 17, 1992                   4






AGREP(l)          MISC. REFERENCE MANUAL PAGES           AGREP(l)



     RRRReeeegggguuuullllaaaarrrr eeeexxxxpppprrrreeeessssssssiiiioooonnnnssss
          The syntax of regular expressions in aaaaggggrrrreeeepppp is  in  gen-
          eral  the  same as that for eeeeggggrrrreeeepppp.  The union operation
          `|', Kleene closure `*', and  parentheses  ()  are  all
          supported.   Currently  '+'  is not supported.  Regular
          expressions are currently limited to  approximately  30
          characters (generally excluding meta characters).  Some
          options (-d, -w,  -f,  -t,  -x,  -D,  -I,  -S)  do  not
          currently  work  with regular expressions.  The maximal
          number of errors for regular expressions that  use  '*'
          or '|' is 4.

EEEEXXXXAAAAMMMMPPPPLLLLEEEESSSS
     agrep -2 -c ABCDEFG foo
          gives the number of lines  in  file  foo  that  contain
          ABCDEFG within two errors.

     agrep -1 -D2 -S2 'ABCD#YZ' foo
          outputs the  lines  containing  ABCD  followed,  within
          arbitrary  distance,  by  YZ, with up to one additional
          insertion (-D2 and -S2 make deletions and substitutions
          too "expensive").

     agrep -5 -p abcdefghij /usr/dict/words
          outputs the list of all words containing at least 5  of
          the  first  10  letters of the alphabet _i_n _o_r_d_e_r.  (Try
          it:  any list starting with academia  and  ending  with
          sacrilegious must mean something!)

     agrep -1 'abc[0-9](de|fg)*[x-z]' foo
          outputs the lines containing, within up to  one  error,
          the  string that starts with abc followed by one digit,
          followed by zero or more repetitions of  either  de  or
          fg, followed by either x, y, or z.

     agrep -d '^From ' 'breakdown;internet' mbox
          outputs  all  mail  messages  (the   pattern   '^From '
          separates  mail  messages  in a mail file) that contain
          keywords 'breakdown' and 'internet'.

     agrep -d '$$' -1 '<word1> <word2>' foo
          finds all paragraphs that  contain  word1  followed  by
          word2 with one error in place of the blank. In particu-
          lar, if word1 is the last word in a line and  word2  is
          the first word in the next line, then the space will be
          substituted by a newline  symbol  and  it  will  match.
          Thus,  this  is  a way to overcome separation by a new-
          line.  Note that -d '$$' (or another delim which  spans
          more  than  one  line)  is necessary, because otherwise
          agrep searches only one line at a time.

     agrep '^agrep' <this manual>



AT&T Bell LaboratoriesLast change: Jan 17, 1992                   5






AGREP(l)          MISC. REFERENCE MANUAL PAGES           AGREP(l)



          outputs all the examples of the use of  agrep  in  this
          man pages.

SSSSEEEEEEEE AAAALLLLSSSSOOOO
     eeeedddd(1), eeeexxxx(1), ggggrrrreeeepppp(1V), sssshhhh(1), ccccsssshhhh(1).

BBBBUUUUGGGGSSSS////LLLLIIIIMMMMIIIITTTTAAAATTTTIIIIOOOONNNNSSSS
     Any bug reports or comments will be appreciated! Please mail
     them to sw@cs.arizona.edu or udi@cs.arizona.edu

     Regular expressions do not support the '+' operator (match 1
     or  more  instances  of  the preceding token).  These can be
     searched for by using this syntax in the pattern:

          '_p_a_t_t_e_r_n((((_p_a_t_t_e_r_n))))****'

     (search for strings containing one instance of the  pattern,
     followed by 0 or more instances of the pattern).

     The following can cause an infinite loop:  aaaaggggrrrreeeepppp pattern * >
     output_file.   If the number of matches is high, they may be
     deposited in output_file before it is completely read  lead-
     ing  to  more matches of the pattern within output_file (the
     matches are against the whole directory).   It's  not  clear
     whether  this  is  a  "bug"  (grep will do the same), but be
     warned.

     The maximum size of the _p_a_t_t_e_r_n_f_i_l_e is limited to be  250Kb,
     and the maximum number of patterns is limited to be 30,000.

     Standard input is the default if no  input  file  is  given.
     However,  if standard input is keyed in directly (as opposed
     to through a pipe, for example) agrep may not work for  some
     non-simple patterns.

     There is no size limit for simple  patterns.   More  compli-
     cated  patterns  are  currently  limited to approximately 30
     characters.  Lines are limited to 1024 characters.   Records
     are  limited to 48K, and may be truncated if they are larger
     than that.  The limit of record length  can  be  changed  by
     modifying the parameter Max_record in agrep.h.

DDDDIIIIAAAAGGGGNNNNOOOOSSSSTTTTIIIICCCCSSSS
     Exit status is 0 if any matches are found, 1 if none, 2  for
     syntax errors or inaccessible files.

AAAAUUUUTTTTHHHHOOOORRRRSSSS
     Sun Wu and  Udi  Manber,  Department  of  Computer  Science,
     University     of     Arizona,     Tucson,     AZ     85721.
     {sw|udi}@cs.arizona.edu.





AT&T Bell LaboratoriesLast change: Jan 17, 1992                   6






AGREP(l)          MISC. REFERENCE MANUAL PAGES           AGREP(l)























































AT&T Bell LaboratoriesLast change: Jan 17, 1992                   7






