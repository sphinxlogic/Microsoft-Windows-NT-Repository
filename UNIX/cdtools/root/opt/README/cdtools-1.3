This directory contains source and objects for LEMIS cd-rom production
tools.

Version:	1.3
Author:		Greg Lehey, LEMIS

Prerequisites:	

Documentation:	This file only

These files are used by LEMIS for building CD-ROMs. Some of them may
be of use for other purposes as well, but we do not represent that
they are of any use whatsoever. If you want to recompile any of the
programs on this CD-ROM, they may be of use. They may not be used for
any commercial purpose without our express, written prior approval. In
this connection, creation of another CD-ROM is considered a commercial
purpose.

The following is a brief description of the tools. For further
details, look at the text.


breaklink:	Replace symbolic links with copies. Normally treats
		directories by creating a new directory containing
		symbolic links to the contents of the old directory.
		The -r option causes the complete hierarchy to be
		duplicated.

buildliblist:   This builds the liblist file used by findf, based on
		a list of library names in the file libs. You will
		probably want to check this file before running
		buildliblist.

chkequiv:	Compare two files and exit 0 if the files have the
		same size and are on the same file system (i.e. are
		candidates for being linked rather than duplicated).

cmpdir:		Compare two directories, report differences

dolink:		Used by linkdoc to create links to documentation.

expanddir:	Unzip a gzipped tar of a directory. Used in the SOURCE
		directory.

finddef:	Search system header files for a label. Not very
		clever.

findf:		This script is used to resolve undefined references on
		linking. It can either take the linker error output as
		an input file (but not stdin - sorry), or you can
		specify individual function names. It will search a
		list of function names (liblist) for the specified
		functions and print out a list of libraries which you
		can use to resolve the references.

		This script is rather primitive. In particular, you
		don't get an error message if one or more references
		aren't found at all. But it makes life a whole lot
		easier than nothing.

getl:		creates that subset of the files README.LEMIS,
		package.LEMIS/* and Makefile that don't exist in the
		current directory.


libs:		List of library files, used by buildliblist to create
		function name list. You should probably erase this and
		create a new one:

		       find /usr -name "lib*.a" -print >>libs
		       find /usr -name "lib*.so*" -print >>libs
		       find /opt -name "lib*.a" -print >>libs
		       find /opt -name "lib*.so*" -print >>libs


link-package:	Create symbolic links to CD-ROM in order to execute
		directly from CD-ROM. See README.LEMIS in the main
		directory for more details.

linkdoc:	Create a link to the documentation in
		DOCUMENTATION/<package name>.

make-package:	Make a package. If a file package.LEMIS/prototype
		exists, use it. Otherwise create it. This makes a
		number of assumptions about the environment:

		1. The name of the source tree is /source/cdrom/SOURCE.
		   This is what it is in our development environment.
		   If you have a different name, you will need to
		   modify a number of files.

		2. The package information is in a subdirectory called
		   package.LEMIS. Again, this could be changed.

		3. The resultant package will be placed in the
		   directory /source/cdrom.

		mkpackage will start the pkgmk utility with the
		appropriate parameters for all specified directories.
		The directory names are relative to the source tree,
		i.e. if you want to build a package from
		/source/cdrom/SOURCE/gcc-2.3.3, you would write

		  mkpackage gcc-2.3.3

		If mkpackage is called with no parameters, it will
		attempt to make packages from each directory in
		/source/cdrom/SOURCE.

makelinks:	Look through a directory hierarchy, supposedly a
		package root directory, and see what we can replace by
		a link to the /opt hierarchy. This is invoked from
		mkmkpk.

mkliblist:	Internal function called from buildliblist.

mklinktree:	Create a directory hierarchy pointing to a hierarchy
		on the CD-ROM.

mkmkpk:		Variant of make-package which always creates an new
		prototype file.

mkpackage:	Variant of make-package which never creates an new
		prototype file. If the prototype file does not exist,
		mkpackage will fail.

mkpk:		Internal script called from make-package, mkpackage
		and mkmkpk.

printman:	Display the documentation for a package on the screen
		or copy it to a printer. See README.LEMIS in the main
		directory for more information.

reportloss:	Helper script for cmpdir.

rmsymlinks:	Remove symbolic links to CD-ROM for specified
		packages.

selectdirs:	Decide which directories need to be included in the
		prototype file. This is invoked from mkmkpk.

stripdir:	Searches out all executable files in a directory
		hierarchy and strips them of symbols. This is used to
		remove all symbols from the /opt hierarchy. Note that,
		although `strip' won't stop if given a complete list
		(for example, 

		   find /opt -print|xargs strip

		), this is not a good idea: this will strip symbols
		from the libraries as well, which is probably not what
		you want.

   other files:	The rest of the files in this directory are helper
		scripts for the above scripts.


unlink-package: remove a package. This uses the information in
		<package>/root to remove the files relating to a
		package. It will work whether the package has been
		installed via pkgadd or just linked. If it has been
		installed via pkgadd, you should use pkgrm rather than
		this script, in order to keep the pkgadd housekeeping
		up to date.

unpackclean:	Unpack compressed directories and clean them. Removes
		the compressed version.

wh:		A shell script to emulate the `which' program. `which'
		is broken: it does not pay any attention to the PATH
		environment variable, and so you can't rely on the
		output. `wh' is slower, but gives you an ls -l list of
		the files it finds in the path. For example, if you
		want to know which `df' command you are using, you can
		enter:

		$ wh df
		-rwxr-xr-x   1 root     sys         20680 Feb  7 10:53 /opt/bin/df
		lrwxrwxrwx   1 root     root            8 Aug  2  1993 /usr/bin/df -> /sbin/df
		-r-xr-xr-x   1 bin      kmem         8672 Nov  2  1992 /usr/ucb/df
		lrwxrwxrwx   1 root     root            8 Aug  2  1993 /bin/df -> /sbin/df
		lrwxrwxrwx   1 root     root            8 Aug  2  1993 /usr/sbin/df -> /sbin/df
		-r-xr-xr-x   2 root     kmem        54568 Nov 16  1992 /sbin/df


xmkmf:		Standard X11 xmkmf script with modified paths.

zipsrc:		Script to tar and gzip a directory.

