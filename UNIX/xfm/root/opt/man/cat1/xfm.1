		XFM - The X File Manager (ver 1.1 alpha)
		----------------------------------------
			    Simon Marlow
			simonm@dcs.glasgow.ac.uk


------------------------------------------------------------------------------
1. Introduction

This is a small file manager/program manager package written using the
Xtoolkit. I originally wrote it for a University project, and did not
intend it to be particularly portable, but since it seems that there
is somewhat of a demand for this type of application from users new to
the UNIX/X Windows world, I hope that xfm will fill the gap to some
extent.

Consider this software an alpha release - this is partly so that you
can't blame me if anything goes wrong :-) and partly because I've just
done some quite major reorganisation and bug-fixing on the source, and
haven't had time to fully test all of it.  Comments are welcome -
please send me bug-fixes and any suggestions you have for improving the
program in any way (patches are also welcome).

Installation is relatively straight forward. Section 1a contains a
list of instructions to get you started right away, and sections 2-3
have a more detailed explanation.

-------------------------------------------------------------------------------
1a. QuickStart - for those of you who can't wait

type the following:

			xmkmf
			make
			cat DEFAULTS >>~/.Xdefaults
			xrdb ~/.Xdefaults
			./xfm

This will start xfm with no applications configured. To use the
configuration files and icons included in the package, read section 3.

------------------------------------------------------------------------------
2. Compilation

I have included a minimal Imakefile, so there should be no problem
with compilation on most machines. Take a look at the Imakefile, and
edit it if you like. Then, simply make the Makefile by typing 'xmkmf',
and do a 'make' to make the binary.

If there are any changes to be made to the source to compile on other
machines (these should be minor), please send me patches as I don't
have the resources here to test these things. Xfm currently compiles
cleanly on SunOS4.1 and Linux (both with gcc and X11R5). Xfm needs an
ANSI C compiler - *please* don't send me patches to compile it on an
older compiler, just get gcc.

I'm not sure if you need X11R5. The program was originally written for
R4, but I don't know whether I've introduced any R5 specific stuff
since then.

------------------------------------------------------------------------------
3. Installation

Install the executable wherever you like. If you have a .Xdefaults
file, you may want to concatenate the file DEFAULTS to it. This
contains some defaults for xfm, to specify fonts etc. These are the
xfm-specific resources.  Some of them may be removed in future
versions as I will make them settable from within xfm. All the
Xtoolkit resources are also available.

If you want to use your own icons (in the application manager) xfm
needs to know where to find them. Include a line like

*bitmapFilePath: /home/simon/bitmaps:/usr/include/X11/bitmaps

in your .Xdefaults. A number of icons come with the standard X
distribution (these are in /usr/include/X11/bitmaps). I've also
included a few of mine in the directory user-bitmaps.

Xfm uses its own data file (by default called ~/.xfmrc) to keep track
of the icons you have installed in the application manager.  You
shouldn't need to edit this file yourself, in fact xfm may get very
confused if you do. I have included a small .xfmrc file (STARTUP) that
you should rename and place in your home directory before starting xfm
- this will give you a few applications to get started. Note that you
will need the bitmap files in user-bitmaps available to use this
setup.


------------------------------------------------------------------------------
4. Operation of the File Manager

Most of it should be pretty obvious. Things that aren't obvious:

o Drag with the second mouse button to move files, third mouse button
  to copy them. Files can be dragged pretty much anywhere. When the
  destination is an icon, the icon will highlight itself when the
  cursor is over it.

o Clicking on the arrows in Tree mode moves in that direction.

o Pressing the Open button opens any selected directories as separate
  windows. You cannot close the last window.

o Double clicking on a directory in Icon mode moves into that
  directory. To move up a level, select 'Up' from the 'Move' menu.

o Double clicking on an executable runs the program. Dragging files
  onto an executable runs the program with the full pathnames of
  the dragged files as arguments. (You can test this with 'echo').

o To get detailed information on a file, use 'Info' on the
  'Operations' menu.

------------------------------------------------------------------------------
5. Operation of the Application Manager

o To install an application, either use the 'install' option on the
  menu or drag an executable file over from a file window.

o Double clicking on an application will start it by running the
  command '$SHELL -c <command>' - this is so you can use various shell
  thingies in the command line.

o Dragging files over from a file window onto an application will
  start it with the command '$SHELL -c <command> <file1> <file2> ...'
  Most shells will then place <file1>, <file2> etc. into the variables
  $0, $1 ... So for example if you wanted to load a file into emacs,
  the command for the emacs application would be 'emacs $0', and you
  could drag a file over from a file window onto the emacs icon to
  have emacs come up with the file loaded.

  Other useful applications to install this way are the printer (print
  files by dragging onto the printer icon), a waste-paper basket 'rm
  $*' (unfortunately this doesn't work too well, as xfm is not aware
  that the files have disappeared and will not update its windows).

o Icons that you specify must be in one of the directories specified
  by the bitmapFilePath resource, and must be in standard X bitmap
  format.

o To save the current set of applications to the resource file, use
  the 'Save setup' option. To restore the application set from the 
  resource file, use 'Load setup'
 

------------------------------------------------------------------------------
6. Bugs / Problems

o It's a bit slow - this is a combination of having to stat all the files in
  a directory, and then creating millions of widgets. A possible 
  solution to this problem is to create my own widget class for the
  icons. Maybe in a future version.

o Starting applications will start another copy of the shell. If you
  don't like this, then prefix all your application commands with
  'exec'. In a future version I might have xfm insert this for you.

o If you have any symbolic links that point to nothing (ie. the file
  they point to doesn't exist), then xfm will get terribly confused.

o There is no recursive copy routine currently - so copying
  directories is not allowed. Sorry!
  
o Some aspects of the interface could be changed - I'm open to
  suggestions here. One thing I will do is allow you to drag
  directories on to the root window to open them, and similarly
  drag executables onto root to start them (ala Open Look), as this
  should be trivial.

------------------------------------------------------------------------------
 
Simon Marlow
simonm@dcs.glasgow.ac.uk



 



 


