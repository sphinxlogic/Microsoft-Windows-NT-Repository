LEMIS ported software for UNIX System V.4.2 on Intel based machines
Third edition, February 1994

Introduction
============

This CD-ROM contains 153 software packages which have been ported to
the Intel 386 architecture and include full source. In addition, 47
packages are supplied in source-only form.

A complete list of the software is supplied in the file CATALOGUE,
also in this directory. This will give you a brief overview of what is
available and whether it has been ported or not. For further
information, refer to the files called README.LEMIS in the appropriate
directories.

Files in this directory
=======================

CATALOGUE	A list of the software products on the CD
COPYRIGHT	Information about software copyrights
FREE.SOFTWARE.FOUNDATION
		Information about the Free Software Foundation
LICENSE.GNU	GNU general public license
PROGRAMS	A list of all executables with the names of the
		packages to which they belong.
README.LEMIS	This file
SIZES		A list of storage requirements for installing the
		packages.
SUPPORT		Information about how to obtain support, maybe free

Subdirectories in this directory
================================

DOCUMENTATION	Various documentation, including printable
		documentation for many packages
ETC		Odds and ends
PICTURES	Various digitised images
SOURCE		Source trees for all ported packages
UNPORTED	Unported software

The other subdirectories in this directory are the installable
software packages.

Installing the programs
=======================

The programs may either be executed directly from the CD-ROM or
installed on hard disk. Executing directly has the advantage that you
do not require any additional hard disk space, but the disadvantages
that you cannot use the CD-ROM drive for anything else while you are
executing programs from it, and that access time to a CD-ROM is much
slower than to a hard disk.

Installing to hard disk
-----------------------

1. Insert the CD--ROM in the drive.
2. From the Desktop, select (double click on) System_Setup.
3. In System Setup, select (double click on) Appl-n_Setup.
4. In Application Setup, set cursor on View, drag to select
   ``Uninstalled Appl'ns'', follow right arrow to the submenu with
   devices, and select cdrom1. Release button.
5. After a delay - up to 5 minutes with a slow CD-ROM and early
   versions of Unix SVR4.2 - a list of installable packages will be
   displayed. Select a package with a double click, then select
   Application and drag down to produce a menu. Select Install, and
   the package will be installed.

To install from a terminal window, ensure that the CD--ROM is mounted,
e.g. 
  
  # mount -ro -f cdfs /dev/cd0 /cdrom

and then enter the pkgadd utility:

  # pkgadd -d /cdrom

The pkgadd utility will then prompt you for further actions.

If you know the name of the package that you want to install, you can
enter it on the command line. For example, to install xdiary you could enter

  # pkgadd -d /cdrom xdiary

This speeds up installation considerably, since the CD-ROM does not
need to be searched. Up to 10 names may be entered on a single command
line.

If the `mount' command fails with a message indicating that /dev/cd0
does not exist, you will need to find out what the CD-ROM is called on
your system. There may be a directory /dev/cdrom, in which case the
name of the device in this directory (normally there is only one) is
the name of the CD-ROM drive. Note that you will need to have
installed the CD-ROM file system (cdfs) in order to access the drive.

For further information on the software installation process, refer to
your system documentation. 

Some of the packages here have been taken from USL unchanged. These
may be missing documentation..

Executing from CD-ROM
---------------------

There are a number of restrictions in executing programs directly from
CD-ROM:

- Access is much slower

- Your CD-ROM drive is tied up as long as you use any program

- The programs MUST be in the directory /opt, since many programs have
  this path name compiled in.

- Many X11 programs need the application defaults and class database
  installed in /usr/X in order to work correctly, and thus will not
  work correctly if executed from the CD-ROM. You can work around this
  problem by unmounting the CD-ROM, installing the programs, and then
  removing all files in /opt and remounting the CD-ROM.

- The directory /opt cannot simply be a symlink to the CD-ROM:
  otherwise you would not be able to install some programs to disk and
  execute others from CD-ROM.

The solution that we have chosen requires a certain amount of
installation: for each package you want to run from CD-ROM, you must
run the script `link-package', which is part of the cdtools package. If
you have not already installed the cdtools, you can do so with

  # pkgadd -d /cdrom cdtools

  # mount -ro -f cdfs /dev/cd0 /cdrom
  # link-package /cdrom <packages>

The first parameter (/cdrom in this example) is the name of the mount
point where the CD-ROM is mounted.  <packages> are the names of the
packages you wish to install. If you don't specify any packages names,
ALL packages will be linked. For each package, symbolic links are
created to access the files from CD-ROM. For example, if you decide to
call the directory where you mount the CD-ROM /lemis, and you want to
install emacs and gdb, you would enter

  # mount -ro -f cdfs /dev/cd0 /lemis
  # link-package /lemis emacs gdb

This can be useful if you run products from a number of different
CD-ROMs.

To remove the links, you can use the script `unlink-package', also
part of cdtools. To remove emacs and gdb, you could enter

  # unlink-package emacs gdb

You do not need to do this if you decide to install the package
directly to hard disk; pkgadd will automatically remove the symbolic
links.  Note also that unlink-package will also remove a package
installed with pkgadd if you ask it to. This is not a good idea, since
it does not update pkgadd's internal installed software database.

Note that it is not possible to install gcc in this manner: gcc's
directory structure is so deep that it violates the ISO 9660 standard,
which is limited to 8 levels of directories. As a result, much of the
package is in a tar archive which is unpacked during installation.
Sorry about that.

In general, we recommend installing to hard disk. Running from CD-ROM
can be interesting to "try out" a program, but the disadvantages
outweigh the advantages for normal use.

Program documentation
=====================

The directory DOCUMENTATION contains hardcopy documentation for
packages which supply this, as well as various documentation packages
which are supplied separately from a software package. They may or may
not refer to software supplied on this CD-ROM.

Getting hardcopy documentation
==============================

Where packages are supplied with formatted hardcopy documentation, a
PostScript or DVI format version will be available in subdirectories
of this directory.  For example, the hardcopy for the GNU C compiler
is in DOCUMENTATION/gcc in dvi format. The documentation for indent is
in DOCUMENTATION/indent/indent.ps, in PostScript format.

Viewing hardcopy documentation
------------------------------

To view hardcopy documentation, you can use the printman utility,
described below under "Man pages", or you can do it manually:

To view PostScript files, you can use Ghostview. First, install the
packages ghostview, ghostscr and gsfonts. To view the documentation
for indent, you could enter

  $ ghostview DOCUMENTATION/indent/indent.ps

Ghostscript may require further configuration, in particular it may be
necessary to generate fonts. Read the documentation for Ghostview if
you run into any problems.

Viewing .dvi files is slightly more complicated:

- You can use texx, part of the SeeTeX package. This is not a very
  flexible program, and the screen display is not very pleasant.

- You can convert them to .ps files and view them with Ghostview.
  Space constraints prevented us from including the converted files on
  the CD-ROM, and .dvi files print much faster on many printers, and
  they also allow printing double-sided output on a sheet paper
  printer.

To convert a .dvi file to a .ps file, use dvips (included as a package
on the CD-ROM):

  $ dvips gcc/gcc.dvi

will create a PostScript file gcc/gcc.ps.

Printing hardcopy documentation
-------------------------------

To print a .ps file, use Ghostscript. Read the Ghostscript
documentation for full details - in general, however, you can
print with a command like

  $ gs -q -sDEVICE=laserjet -r300 -dNOPAUSE -- gslp.ps indent/indent.ps

which will print the documentation of indent to a LaserJet printer
assumed at the standard output.

To print a .dvi file, use the appropriate dviXXX program included in
the TeX distribution. This creates a file in the correct format, which
must then be printed. For example, to print the documentation for gcc
on a LaserJet, you could enter:

  $ dvijep gcc/gcc     # this creates a file gcc/gcc.dvi-jep
  $ lp gcc/gcc.dvi-jep # and this prints it

Man pages
---------

Almost all packages are supplied with some kind of on-line
documentation, though in some cases it is rather superficial. It is
automatically installed with the package, and traditionally called
`man pages' (an abbreviation for `manual').

In previous versions of this CD-ROM, we attempted to format the man
pages in a format which any Unix SVR4.2 system would understand. This
turned out to be a monstrous job: 

- Novell does not supply a man program at all, and the Fingertip
  Librarian does not appear to work as described: in particular, even
  with the aid of the vendor, we were not able to get it to look for
  man pages anywhere except in its own internal list of man pages.

- Other vendors (e.g. Consensys) supply a man program which will only
  understand uncompressed, formatted man pages. Most man pages are
  supplied unformatted, and some are compressed. Our attempts to
  modify the Makefiles to generate the correct formats were very
  time-consuming and not always successful.

As a result, we have taken a different attitude in this CD-ROM: we
have supplied a man program which will do the job. If you have
difficulty reading the man pages (pages not found, fly droppings on
the screen, etc.), then try installing our man package first, and all
should be well.

You can also look at the documentation without installing it. This can
be done with the printman utility which is part of the cdtools
package: it extracts the man pages from the individual packages and
copies it to stdout - in other words, it will normally display on the
terminal. You can use this in several ways:

1. Look at the documentation:

   If you want to look at the documentation of jewel, for example, you
   can enter

     $ printman jewel

2. Print the documentation:

   To print to a standard line printer, you could enter

     $ printman jewel | lp

   This will copy the text to your spooler, from which it will be
   printed.

3. Copy the documentation to a file:

   To copy the documentation for jewel and xtetris to a file called
   `gamesdoc', you could enter

     $ printman jewel tetris >> gamesdoc

   This will append the documentation to the file.

printman uses the value of the environment variable PAGER to page the
output of long documents. If you don't have this set, it will just
output each document in full length. 

To set your PAGER variable, you can enter something like

    $ PAGER=less EXPORT PAGER

or put it in your .profile file.

If you output to the terminal, printman will also check for printable
documentation in TeX .dvi and PostScript formats and offer to display
it for you. This requires that you are using X. This option is not
presented if you output the documentation to a file.

printman also assumes that you have mounted the CD-ROM in the
directory /cdrom. If this is not the case, you will have to tell it
where it is mounted. For example, if it is mounted in /cd0, you would
enter

     $ printman -d /cd0 jewel xtetris >> gamesdoc

for the last example.

GNU info
--------

GNU info is a menu-oriented documentation system which uses the same
documentation sources as the printed documentation. A number of
packages have info files. If you want to use them, you will have to
install info, also provided on the CD-ROM. Note that the info menu
includes all packages for which info exists, even if they have not
been installed - you will get an error message if you select a package
which has not been installed.

If you want to add your own info files to the info directory, you will
have to edit the file /opt/info/dir. A typical line looks like:

  * Gawk: (gawk).		   The GNU awk program.

Note particularly the colon (:) and the period after then name in
parentheses. "Gawk:" is the name by which the program is referred to,
"(gawk)." is the base name of the info files (which in this case are
called gawk.info through gawk.info-9). Info currently does not provide
an automated means of updating the directory, which is also why the
directory might refer to files which don't exist yet.

Porting notes
-------------

All ported packages include a file README.LEMIS in the main directory.
Since these directories are compressed, the are also available under
the package name in the directory opt/README. For example, the file
SOURCE/gcc-2.5.8/README.LEMIS is duplicated at opt/README/gcc-2.5.8.


Other documentation
-------------------

This CD-ROM contains a large quantity of other documentation, mainly
in source form. It also includes all tools to print it out, frequently
in typeset quality. Unfortunately, there are so many variables
(different ways of formatting the documentation from one package to
the next, different printing equipment) that we have not been able to
supply a simple way of printing it out. Look at the notes in the
SOURCE subdirectories in the file README.LEMIS for further
information. If you can't work it out, give us a call - see the
information in the file FREE.SUPPORT in this directory.

Copyrights and ownership
========================

For the most part, these programs are NOT public domain. They are the
property of a person or of an organisation. However, they have been
expressly supplied free of charge under certain constraints. Normally,
these constraints are that the code should not be used for commercial
purposes. There are different flavours of this constraint. For
example,

- the GNU C compiler (gcc) may not be sold commerically. You may not
  embed any of its code in a product which you sell commercially,
  unless you supply all such code in source form and free of
  restrictions on redistribution. You may, however, use gcc to compile
  programs which you sell commercially.

- the GNU C library (glibc) may not be used in products which are sold
  commercially.

- some other products may not be used commercially in any way.

To the best of our knowledge and belief, there are no programs or data
on this CD-ROM which may not be distributed in this form. If you know
of any, please let us know. We take no responsibility for the presence
of licensed or otherwise restricted programs on the CD.

Running the programs
====================

Most programs will run immediately as installed. However, there are a
couple of problems which could occur.  In case of doubt, read the file
/cdrom/source/<package>/README.LEMIS. This may contain more
information.

When running programs which use X11, you may run into dynamic linker
problems. This will normally not be the case if you start them from
the UNIX Desktop, but may occur if you start them under other
circumstances. The message printed is something like:

  $ xfishtank
  dynamic linker : ./xfishtank : error opening libXext.so.1
  Killed
  $

The usual reason for this is that the dynamic linker is not searching
the correct libraries. Type:

  $ LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/X/lib
  $ export LD_LIBRARY_PATH

and the problems should go away.  If you add these lines to your
.profile file, it should work automatically from the next login.

Building the programs
=====================

All the programs on this CD-ROM were built from the source trees
included on the CD-ROM. In almost every case, the latest version of
the GNU C compiler was used. We normally did not recompile packages
from older editions, so a number of different compiler releases were
used. We also did not use the GNU binary utilities (binutils) nor the
GNU C library (glibc). If you use these, there is a possibility that
you might run into compatibility problems.

In some cases, problems arose with the standard software: the programs
indicated as USL ports in SOURCE/PORT.STATUS did not compile cleanly
on a Consensys or Univel system. You may find that others will not
compile cleanly on your system. If you need help, see "Support" below
- we are interested in keeping this CD-ROM as useful as possible.

To rebuild any package, it should be sufficient to make a copy of the
source tree onto disk. You also have the option of leaving the sources
on the CD-ROM - that's why they're not compressed - and making a
symlink tree. To do this, first choose a directory and `cd' to it.
Then:

PATH=$PATH:/cdrom/ETC/tools	# These are various tools we use
mklinktree /cdrom/SOURCE/gcc-2.5.8 .  # Link in all files
make languages=C		# and perform the make

Note that the file /cdrom/SOURCE/Makefile contains targets for all
packages. This file shows the ravages of history; if you can
understand it, you may want to use it, or it may turn your stomach. If
you do use it, it will perform all stages of the build up to and
including building a package installable by `pkgadd'. If you want to
do this, be sure to be prepared to read the scripts used - they're not
very elegant.

Support
=======

These programs are supplied "as-is" with no guarantee and no free
support.  A typical legal position is described in the GNU general
public license, which is also included in this directory as
LICENSE.GNU.

LEMIS will, however, supply best-efforts support for any of these
products. This support may be free - see the conditions described in
SUPPORT for more details. Even if it isn't free, and you don't want to
pay for it, please let us know. We don't promise to fix it, but at
least we know of the problem, and we may be able to fix it. If you
have a fix, please also let us know. That way, our next issue will be
even better.

Why aren't the sources compressed?
==================================

On previous editions of this CD-ROM, the sources were compressed,
which meant that we were able to pack a lot more onto the CD-ROM. With
GNU zip, we could get about three times as much data onto the CD. In
this edition, we decided not to go this way. This is not being cheap:
we see the availability of the source trees as an improvement. We
discovered that a lot of people wanted to access the files directly
from the CD-ROM. It takes a lot of time and space to first extract,
say, X11R5 (102 Megabytes) onto hard disk just to look at a particular
file. If you want to rebuild a package, you don't need nearly as much
space, since you can leave the files on the CD and only copy the
things you want to change.  On the other hand, if you're not
interested in the sources, then having them in any format doesn't buy
you anything.

Use on other systems
====================

This CD-ROM has been specifically designed to run on Intel 386
architectures (including 486 and Pentium) running UNIX System V.4.2.
We believe that most, if not all, of these programs will also run
under UNIX System V.4.0 on this hardware. The object files will
probably *not* run on anything else.

However, the CD-ROM contains full source. If you have a C compiler on
your system, and if you are running some flavour of UNIX, you should
be able to compile them with little or no modification. If you do run
into trouble, you should try to first compile the GNU C compiler and
then try to build with that.

If you find that the file names seem to be corrupted - all upper case,
MS-DOS like names with possible ;1 at the end - then you are using a
CD-ROM file system which does not support the Rock Ridge extensions to
the ISO 9660 CD-ROM data format standard. In this case, you may still
be able to recover the correct names. Each directory contains a file
.MAP which is used by Rock Ridge to convert the file names. The
contents look like:

F PORT.STA;1                        	PORT.STATUS
D PSF                               	psf
D PSUTILS                           	psutils
D RCS                               	rcs
F README.LEM;1                      	README.LEMIS

The first column describes the type of file (F: File; D: directory).
The second is the ISO 9660 name, and the third is the UNIX name. You
should be able to rename the files with a simple shell script.
