


KIT(0)            MISC. REFERENCE MANUAL PAGES             KIT(0)



NNNNAAAAMMMMEEEE
     kit, mailkit, unkit - the ultimate mailing tools

SSSSYYYYNNNNOOOOPPPPSSSSIIIISSSS
     kkkkiiiitttt [ ----EEEEFFFFHHHHMMMMBBBBVVVVXXXXeeeeffffhhhhppppxxxx ] [ ----SSSS _s_i_z_e ] [ ----aaaa _a_d_d_r_e_s_s ] [ ----kkkk _k_e_y  ]
     [  ----dddd  _d_i_r ] [ ----mmmm _a_d_d_r_e_s_s ] [ ----nnnn _b_a_s_e_n_a_m_e ] [ ----llll _f_i_l_e ] [ ----ssss
     _n_a_m_e ] _d_i_r_e_c_t_o_r_i_e_s | _f_i_l_e_s

     mmmmaaaaiiiillllkkkkiiiitttt [ ----EEEEFFFFVVVVcccceeeeffffhhhhpppp ] [ ----llll _f_i_l_e ] [ ----nnnn _p_a_r_t_n_a_m_e  ]  _t_i_t_l_e  [
     _a_d_d_r_e_s_s(_e_s) ]

     uuuunnnnkkkkiiiitttt [ ----bbbbhhhhllllpppprrrrVVVV ] [ ----kkkk _k_e_y ] [ _f_i_l_e_s ]

DDDDEEEESSSSCCCCRRRRIIIIPPPPTTTTIIIIOOOONNNN
     _K_i_t is the ultimate mailing tool. It  enables  you  to  mail
     data  without any consideration of possible escape sequences
     or control characters.  Given a file name or a directory, it
     builds a single file using _t_a_r(1) and _c_o_m_p_r_e_s_s(1). Then this
     file  is  hex-encoded  (option  ----HHHH)  or  ASCII-encoded  with
     _b_t_o_a(1)  (option  ----BBBB, which is used by default) before being
     shell-archived.  _K_i_t produces files that match "Kit*"  regu-
     lar  expression.   This  default  base  name  can be changed
     thanks to the ----nnnn option.  With the ----mmmm option, it is possible
     to  give  one  mail  address, and _k_i_t will invoke _m_a_i_l_k_i_t to
     send the archive. There may be as many ----mmmm options as  needed
     (to send the same archive to more than a single person).  If
     there are a lot of recipients, you may want to store them in
     a file and use the ----llll option to tell _k_i_t where the recipient
     file is located.

     The ----EEEE, ----FFFF, ----eeee, ----ffff and ----pppp options are passed on to  _m_a_i_l_k_i_t,
     so if no ----mmmm option is used, they will be ignored. When send-
     ing files with ----mmmm, the subject of the message holds the name
     of  the first file given in the command line (supposed to be
     the name of the kit).  It  is  possible  to  overwrite  this
     default by using the ----ssss option.

     If you want to send sensible data, it is possible to encrypt
     them using a public-domain implementation of Data Encryption
     Standard (DES).  The ----xxxx option will  use  the  Cipher  Block
     Chaining  mode  (default),  while ----XXXX requests the Electronic
     Code Book mode. If you do not  specify  the  encryption  key
     with  ----kkkk,  _d_e_s(1) will prompt you for one. If you use the ----kkkk
     option, ----xxxx is assumed.

     It may happen that there are no  write  permissions  in  the
     directory where the root directory to be kitted lies. The ----dddd
     option enables you to specify another directory,  where  all
     the  temporary  files  will  be stored. If you use something
     like /_t_m_p, you must be careful to use ----nnnn to change the  base
     name  used  (in  case  someone else is doing the same thing,
     otherwise  files  may  get  mangled).  To   prevent   common



AT&T Bell Laboratories  Last change: ram                        1






KIT(0)            MISC. REFERENCE MANUAL PAGES             KIT(0)



     mistakes,  _k_i_t  will  stop  and give an error message if the
     argument of ----dddd is not a directory, if the directory  is  not
     writable  by  the  user,  or if a kit file is present in the
     temporary directory (same base name).

     When you send a kit to someone who may not have _k_i_t, the  ----MMMM
     option  may  be used to include a _m_i_n_i_k_i_t script, which is a
     minimal set of  commands  to  unkit  an  unencrypted  ASCII-
     encoded  kit.  The  overhead  is  small (around 4K) and some
     instructions are provided in the header of every  kit  part.
     The  minikit  is  usually  called  _m_i_n_i_k_i_t,  but  should you
     already have a file with that name in your distribution,  it
     will  be  renamed _M_I_N_I_K_I_T. If by chance (!) you named one of
     your files MINIKIT, then a unique name of the form _m_k_i_t_X_X_X_X_X
     will  be generated (XXXXX stands for the PID of the _k_i_t pro-
     cess).

     By using the ----aaaa option, you ask the remote _u_n_k_i_t program  to
     send  an  automatic  acknowledgment  to the specified e-mail
     address upon successful archive  extraction.  However,  this
     feature is only supported if the remote end has at least the
     2.0 PL15 release. You will receive a short  message  with  a
     _j_u_n_k  precedence,  telling you who extracted the archive and
     when.

     The default part size generated by kit  is  currently  50000
     bytes.  However,  this  can  be  changed  throughout  the ----SSSS
     option, which expects a part size as  argument.  It  can  be
     given  in  bytes (e.g. -_S _4_0_0_0_0 to set the maximum part size
     to 40000 bytes) or in kbytes by appending a  _k  at  the  end
     (i.e.  -_S  _6_0_k  would  produce parts with size ranging up to
     61440 bytes).

     _M_a_i_l_k_i_t takes "Kit*" files and  sends  them  to  a  list  of
     addresses.   The  ----nnnn  option can be used to change that base
     name, if necessary.  Each message sent  corresponds  to  one
     part and has its `Subject:'  field set to the number of this
     part with the _t_i_t_l_e given,  and  you  also  have  the  total
     number  of  parts,  so  that  missing  parts  can  easily be
     located.

     The options ----EEEE and ----eeee from _m_a_i_l_k_i_t enable you  to  give  the
     recipient  some  instructions.  They both call an editor. At
     the top of the file edited, there is a little message, which
     will  (of course) be stripped from the text you enter, so do
     not remove it or your own message will be cut instead.  With
     ----EEEE,  the  message  will be sent in an extra part (#0), while
     with ----eeee it will be included in  each  part.  Empty  messages
     will be ignored.

     Options ----FFFF and ----ffff are very similar,  but  take  their  input
     from  stdin  (standard  input) instead of calling an editor.



AT&T Bell Laboratories  Last change: ram                        2






KIT(0)            MISC. REFERENCE MANUAL PAGES             KIT(0)



     Option ----pppp asks _m_a_i_l_k_i_t for preserving mailed files. They are
     removed by default.

     When _m_a_i_l_k_i_t is given a ----llll option, it takes the file name as
     a  file  whith  recipients  addresses  in  it  and  adds the
     optional addresses that may be given on  the  command  line.
     Addresses  in  the recipient file are separated with spaces,
     commas or new lines. Shell-style comments  starting  with  a
     pound  sign (#) are allowed. More than one ----llll can be used to
     get addresses from multiple files (duplicates  will  not  be
     removed by _m_a_i_l_k_i_t but should be taken care of by the under-
     lying transport mechanism).

     If _m_a_i_l_k_i_t is invoked by _k_i_t via  ----mmmm  options,  it  will  be
     given  the  ----cccc flag to clean up parts when they are success-
     fully sent, unless  ----pppp  was  also  provided.  However,  when
     invoking  _m_a_i_l_k_i_t  directly from a shell, the default action
     is to not remove the parts when they have been sent (that is
     to  say,  ----pppp  is  the  default  action unless you add the ----cccc
     option yourself). If for some reason one part could  not  be
     sent  and  _m_a_i_l_k_i_t  was  directed to remove parts when sent,
     then the file is not removed immediately. If the  input  and
     output  are connected to a terminal, _m_a_i_l_k_i_t will ask you at
     the end whether you wish to keep the  unsent  parts,  on  an
     individual   basis.   Otherwise,   (e.g.   standard   output
     redirected to a file), the  unsent  parts  will  be  removed
     without asking.

     Another useful feature when invoking _m_a_i_l_k_i_t manually is the
     ability  to send only a subset of all the kit parts by using
     the ----rrrr option and supplying a range  list  of  parts  to  be
     sent.  A  _r_a_n_g_e  _l_i_s_t  is a set of ranges comma separated. A
     _r_a_n_g_e is a part number by itself or a  set  of  two  numbers
     separated  with  a minus sign, indicating the lowest and the
     largest bound, hence specifying an interval. If  the  lowest
     bound  is  missing,  1  is  assumed. If the largest bound is
     missing, the total number of parts is substituted.  Thus,  a
     range  of  _1- means all the parts, while _1,_4-_7,_1_0 would send
     parts 1, 4 trough 7 and 10. Finally, -_5,_8- would send  parts
     1  through 5 and 8 up to the end. If you introduce spaces in
     your range list specification, do not forget  to  quote  the
     whole list for the shell...

     _U_n_k_i_t is used to restore the original files. The argument is
     a  list of archive files (or mail files, as _u_n_s_h_a_r(1), which
     is called by _u_n_k_i_t, can  deal  with  mail  headers).   Input
     files are not removed unless option ----rrrr is given. By default,
     option ----pppp is used to preserve the input file(s).  If no file
     name  is  given  to  _u_n_k_i_t, the standard input is processed.
     This is useful to process messages directly from a mail user
     agent.




AT&T Bell Laboratories  Last change: ram                        3






KIT(0)            MISC. REFERENCE MANUAL PAGES             KIT(0)



     You may save more than one kit part into  a  file  and  give
     that  file as an argument to _u_n_k_i_t, which will then identify
     and extract the embeded parts to process them.  The  program
     lists  on the standard error the files as they are processed
     and tells you how many kit parts it found within each file.

     Sometimes, _t_a_r does not work well accross NFS and will  fail
     restoring  ownership  on  files, even with the -oooo option. If
     you chose to install _b_a_d_t_a_r at configuration time,  you  may
     use  -bbbb  to  instruct  _u_n_k_i_t using _b_a_d_t_a_r as a filter before
     running _t_a_r. This is the default action on some systems (the
     -hhhh option will tell you what was determined at configuration
     time).

     If you want to know what _u_n_k_i_t will create without  actually
     doing  it,  use  the  ----llll  option.  With  this  option, ----rrrr is
     ignored. You may also use _u_n_k_i_t in place of _u_n_s_h_a_r: it  will
     stop after having unpacked the shell archives if it does not
     detect any kit file.

     When unpacking crypted archives, the ----kkkk option may  be  used
     to  specify  the key to be used by DES. If you do not supply
     it, DES will prompt you on the terminal.

     For all of these commands,  option  ----VVVV  prints  the  version
     number  with  the  current  patch  level and exits, while ----hhhh
     gives a little help message with the syntax and the  meaning
     of the options.

FFFFIIIILLLLEEEESSSS
     {zag,zcb,zec}.hex.*
                    temporary files used by  _k_i_t  and  _u_n_k_i_t  for
                    datas which are hex-encoded.
     {zag,zcb,zec}.ba.*
                    temporary files used by  _k_i_t  and  _u_n_k_i_t  for
                    datas which are ASCII-encoded.
     Kit*           files generated by _k_i_t
     zag*           non encrypted temporary files.
     zcb*           data encrypted using CBC mode.
     zec*           data encrypted using ECB mode.
     zzz.minikit    file holding the name  of  the  extras  files
                    added by kit.
     zzz.ack        contains  the  address  where  acknowledgment
                    should be sent.
     zzz.subject    contains the name of  kit  archive  for  ack-
                    nowledgment purposes.
     /opt/lib/kit/minikit
                    the script which may be used to unkit a  dis-
                    tribution  when the kit package is not avail-
                    able.
     /opt/lib/kit/makeshar
                    the script  which  emulates  _c_s_h_a_r's  _m_a_k_e_k_i_t



AT&T Bell Laboratories  Last change: ram                        4






KIT(0)            MISC. REFERENCE MANUAL PAGES             KIT(0)



                    program.
     /opt/lib/kit/rshar
                    a simple shell archive maker.

EEEENNNNVVVVIIIIRRRROOOONNNNMMMMEEEENNNNTTTT
     The following environment variables are paid attention to by
     _m_a_i_l_k_i_t. If they are not set, a default determined at confi-
     guration time will be used:

     EDITOR         the name of the editor to call when -E option
                    and friends are used.

     MAILER         the name of the program  to  invoke  to  send
                    mail.  This  program  must be ready to take a
                    list of addresses as argument and  the  whole
                    message  (with some headers already computed)
                    from standard input.

NNNNOOOOTTTTEEEESSSS
     Kit may now be used as a standalone  package,  i.e.  without
     the  help  of  the  _c_s_h_a_r  distribution.   This was not true
     before version 2.0 PL10. Two simple shell scripts  now  emu-
     late  _c_s_h_a_r's  behaviour.  Those  scripts  are  held  in the
     private library directory because they are not  intended  to
     be used directly by any user.

     In order to use kit, _h_e_x_d_e_c_o_d_e,  _h_e_x_e_n_c_o_d_e,  _a_t_o_b  and  _b_t_o_a
     must be installed and _c_o_m_p_r_e_s_s must be available.  If any of
     these is missing, this mailing kit is useless.

     _U_n_k_i_t has its own _u_n_s_h_a_r built-in, but it will not  be  used
     if  _u_n_s_h_a_r  is installed, because it is really simple-minded
     and not smart at all in case of  errors.  However,  this  is
     useful  if  you  do  not  have  ccccsssshhhhaaaarrrr, but still want to use
     _u_n_k_i_t.

EEEEXXXXAAAAMMMMPPPPLLLLEEEESSSS
     To mail _r_a_m@_e_d_u_c._e_m_s_e._f_r a directory called  XLOCK  and  all
     what it may hold, do:

          kkkkiiiitttt XXXXLLLLOOOOCCCCKKKK
          mmmmaaaaiiiillllkkkkiiiitttt XXXXLLLLOOOOCCCCKKKK rrrraaaammmm@@@@eeeedddduuuucccc....eeeemmmmsssseeee....ffffrrrr

     _K_i_t will produce files Kit*, and  mailkit  will  send  them.
     Or, to do it all in one:

          kkkkiiiitttt ----mmmm rrrraaaammmm@@@@eeeedddduuuucccc....eeeemmmmsssseeee....ffffrrrr XXXXLLLLOOOOCCCCKKKK

     Assuming the XLOCK package has 5 kit parts, you  could  send
     only parts 3 and 5 by using:

          mmmmaaaaiiiillllkkkkiiiitttt ----rrrr 3333,,,,5555 XXXXLLLLOOOOCCCCKKKK rrrraaaammmm@@@@eeeeiiiiffffffffeeeellll....ccccoooommmm



AT&T Bell Laboratories  Last change: ram                        5






KIT(0)            MISC. REFERENCE MANUAL PAGES             KIT(0)



     If you have no write permissions in the  current  directory,
     you can specify an alternate directory for temporary files:

          kkkkiiiitttt ----mmmm rrrraaaammmm@@@@eeeeiiiiffffffffeeeellll....ccccoooommmm ----dddd ////ttttmmmmpppp ----nnnn mmmmyyyykkkkiiiitttt XXXXLLLLOOOOCCCCKKKK

     To unkit, save the  mail  messages  in  files  called,  e.g.
     xlock.01  (for  part  01), xlock.02 (for part 02) and so on.
     Then do:

          uuuunnnnkkkkiiiitttt xxxxlllloooocccckkkk****

     Even if it succeeds, files xlock* will not be removed.

BBBBUUUUGGGGSSSS
     Try "kit .": it is harmless (well, I hope !), and  you  will
     quickly  understand  the problem. The solution is to use the
     ----dddd option.

     If you use the ----rrrr option in _u_n_k_i_t and one or more kit  parts
     are  missing,  all  the  files will be lost.  So use it with
     care...

     Some systems cannot extract tar archives with overwriting of
     ownership informations (usually this is done with tar option
     -o).

     The ----MMMM option is unknown to versions of  _k_i_t  prior  to  2.0
     PL9,  which  means the remote _u_n_k_i_t program will not be able
     to clean-up the extras files. Similarly, the automatic  ack-
     nowledgment  feature was added at 2.0 PL15. Fortunately, _k_i_t
     programs newer than 2.0 PL9 will know how to deal  with  the
     extras  files,  although  the  acknowledgment feature itself
     will only be handled by 2.0 PL15 and later versions.

SSSSEEEEEEEE AAAALLLLSSSSOOOO
     atob(0), btoa(0), cshar(1), makekit(1).

AAAAUUUUTTTTHHHHOOOORRRR
     Raphael Manfredi <ram@eiffel.com>.

     _K_i_t was first developed  at  the  Ecole  des  Mines,  Saint-
     Etienne, France. Many improvements were added at Interactive
     Software Engineering Inc., Santa-Barbara CA, USA.












AT&T Bell Laboratories  Last change: ram                        6



