! $Header: /usr3/xinfo/RCS/XInfo.ad,v 1.3 91/01/07 14:02:33 jkh Exp $
!
! 
!                    Copyright 1989, 1990
!                     Jordan K. Hubbard
! 
!                 PCS Computer Systeme, GmbH.
!                    Munich, West Germany
! 
! 
!  This file is part of GNU Info widget.
! 
!  The GNU Info widget is free software; you can redistribute it and/or
!  modify it under the terms of the GNU General Public License as published
!  by the Free Software Foundation; either version 1, or (at your option)
!  any later version.
! 
!  This software is distributed in the hope that it will be useful,
!  but WITHOUT ANY WARRANTY; without even the implied warranty of
!  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!  GNU General Public License for more details.
! 
!  You should have received a copy of the GNU General Public License
!  along with this software; see the file COPYING.  If not, write to
!  the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.
!
!
! Here lie the general resource settings for the XInfo widget. Everything
! here should be customizable (within reason) without changing basic
! functionality too much, so feel free to adjust accelerator keys and/or
! appearances to suit your personal taste. Look in the README file for a
! description of what each action does before changing accelerators.
!
! $Log:	XInfo.ad,v $
# Revision 1.3  91/01/07  14:02:33  jkh
# # comment char changed to more proper !. Some redundant resource entries
# deleted.
# 
! Revision 1.2  90/11/11  21:20:12  jkh
! Release 1.01
! 
! Revision 1.1  90/11/06  15:43:18  jkh
! Initial revision
! 


!
! General xinfo client defaults:

XInfo*Accelerators: #override \n\
	<Key>1:		info_menusel(1)\n\
	<Key>2:		info_menusel(2)\n\
	<Key>3:		info_menusel(3)\n\
	<Key>4:		info_menusel(4)\n\
	<Key>5:		info_menusel(5)\n\
	<Key>6:		info_menusel(6)\n\
	<Key>7:		info_menusel(7)\n\
	<Key>8:		info_menusel(8)\n\
	<Key>9:		info_menusel(9)\n\
	<Key>Help:	info_popupHelp()\n\
	<Key>question:	info_popupHelp()\n\
	Meta<Key>P:	info_print()\n\
	None<Key>d:	info_dir()\n\
	None<Key>f:	info_xref()\n\
	None<Key>g:	info_goto()\n\
	None<Key>h:	info_tutorial()\n\
	None<Key>l:	info_last()\n\
	None<Key>m:	info_menusel(0)\n\
	None<Key>n:	info_next()\n\
	None<Key>p:	info_prev()\n\
	None<Key>q:	info_quit()\n\
	None<Key>s:	info_nodeSearch()\n\
	None<Key>t:	info_top()\n\
	None<Key>u:	info_up()\n

XInfo.geometry:					600x600
XInfo*IconPixmap:				xinfo.bm

! These look nice on color systems; enable if you want a flashier interface.
!
!XInfo*Background:				MidNightBlue
!XInfo*Foreground:				Azure
!XInfo*BorderColor:				LightCyan1
!XInfo*info.pane1*Command.Foreground:		Gold
!XInfo*info.pane1*Command.Background:		RoyalBlue3
!XInfo*info.pane1*Label.Foreground:		Yellow
!XInfo*info.pane1*Label.Background:		RoyalBlue4
!XInfo*info.help*Background:			DarkGoldenRod
!XInfo*info.need_argument*Background:		Brown

!
! More specific xinfo widget defaults:

XInfo*ShapeStyle:				Oval
XInfo*Font:					7x13
XInfo*info.pane1*Command.borderWidth:		2
XInfo*info.pane1.box1*Command.Font:		6x13
XInfo*info.pane1.*.vertical.Translations:	#override \n\
  <Key>space:  StartScroll(Forward)  NotifyScroll(FullLength) EndScroll() \n\
  <Key>Delete: StartScroll(Backward) NotifyScroll(FullLength) EndScroll() \n

XInfo*info.pane1.vport1.height:			60
XInfo*info.pane1.vport1.min:			60
XInfo*info.pane1.vport1.max:			9999

XInfo*info.pane1.vport1.menu.pasteBuffer:	True
XInfo*info.pane1.vport1.menu.height:		150
XInfo*info.pane1.vport1.menu.columnSpacing:	8

XInfo*info.pane1.nodeText.height:		500
XInfo*info.pane1.nodeText.wrap:			Word
XInfo*info.pane1.nodeText.autoFill:		True
XInfo*info.pane1.nodeText.scrollVertical:	WhenNeeded
XInfo*info.pane1.nodeText.Translations:	#override \n\
	None<Key>b:	beginning-of-file() \n\
	<Key>Home:	beginning-of-file() \n\
	<Key>Delete:	previous-page() \n\
	<Key>Prior:	previous-page() \n\
	<Key>Next:	next-page() \n\
	<Key>space:	next-page() \n\
	None<Btn1Down>: select-end() info_click() \n

XInfo*info.pane1.vport2.height:			30
XInfo*info.pane1.vport2.min:			20
XInfo*info.pane1.vport2.max:			9999

XInfo*info.pane1.vport2.xref.pasteBuffer:	True
XInfo*info.pane1.vport2.xref.defaultColumns:	6
XInfo*info.pane1.vport2.xref.columnSpacing:	8

XInfo*info.pane1.box2.height:			30
XInfo*info.pane1.box2.min:			30
XInfo*info.pane1.box1*Command.Justify:		JustifyCenter

XInfo*info.pane1.box2.arg.width:		200
XInfo*info.pane1.box2.arg.allowResize:		True
XInfo*info.pane1.box2.arg.resize:		True
XInfo*info.pane1.box2.arg.borderWidth:		2
XInfo*info.pane1.box2.arg.translations:		#override \n\
 	<Key>Return: confirm() \n\
 	Ctrl<Key>G:  abort() \n

XInfo*info.pane1.status.height:			20
XInfo*info.pane1.status.min:			20
XInfo*info.pane1.status.max:			20

XInfo*info.pane1.message.height:		20
XInfo*info.pane1.message.min:			20
XInfo*info.pane1.message.max:			20

!
! Help popup resources

XInfo*info.help.height:				300
XInfo*info.help.width:				400
XInfo*info.help.pane.text.scrollVertical:	WhenNeeded
XInfo*info.help.pane.text.wrap:			Word
XInfo*info.help.pane.text.translations:		#override \n\
None<Key>q:	MenuPopdown(help) \n\
None<Key>b:	beginning-of-file() \n\
<Key>Home:	beginning-of-file() \n\
<Key>Delete:	previous-page() \n\
<Key>Prior:	previous-page() \n\
<Key>Next:	next-page() \n\
<Key>space:	next-page() \n
XInfo*info.help.pane.text.textSource.string: \
The following keys are recognized by the Info Widget: \n\n\
Key		Action \n\
----		------ \n\
B		Beginning of Node \n\
Home		Same as above* \n\
D		Goto Directory \n\
F		Follow reference \n\
G		Goto node \n\
H		Info tutorial \n\
L		Last node selected \n\
M		Select menu by name \n\
N		Next node \n\
P		Previous node \n\
S		Search for node \n\
T		Top node \n\
U		Up node \n\
0-9		Select menu by number \n\
<DEL>		Back page \n\
Prev Page	Same as above* \n\
<SPACE>		Forward page \n\
Next Page	Same as above* \n\
Meta-P		Send current node to printer. \n\
?		Print this help \n\
Help		Same as above* \n\n\
* If supported on your keyboard.\n\n\
The info widget command set attempts to emulate that of Emacs Info as closely as possible, but there are a few notable exceptions. Like Emacs Info, the current file, node name and possible values for Up, Previous and Next are displayed in the first pane. You can, of course, also click on any of the Up, Prev or Next buttons to cause the corresponding node (if any) to be selected. Possible menu items are displayed in the second pane as a multiple-choice list. If more menu items exist than will fit in the space allotted, a scrollbar is added.\n\n\
The third pane contains the node text. It can be scrolled with the accompanying scrollbar or any of the previously mentioned paging keys.\n\n\
The fourth pane contains a multiple choice list of any cross references (if any) in this node. It is dealt with in the same manner as the menu list.\n\n\
The fifth pane contains buttons for more direct navigation within the info tree. All take their argument(s) from the text area to the right of the search button (as do the F, G, M and S keys) or, if none is specified, from a popup requestor that will automatically appear. Unlike Emacs Info, keyword completion is not provided. This remains the primary difference between this widget and Emacs Info and should be kept in mind when using the Emacs Info tutorial.\n\n\
The sixth and seventh panes are the status and message areas, respectively.\n

!
! Argument dialog popup resources

XInfo*info.need_argument.dialog.value.translations:	#override \n\
 	<Key>Return: confirm() \n\
 	Ctrl<Key>G:  abort() \n
XInfo*info.need_argument.dialog.confirm.horizDistance:	20
XInfo*info.need_argument.dialog.confirm.Label:		Confirm
XInfo*info.need_argument.dialog.abort.Label:		Abort
