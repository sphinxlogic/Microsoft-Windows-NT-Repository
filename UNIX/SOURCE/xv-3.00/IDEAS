CODE TO WRITE (maybe)
---------------------
Have a 'grab' mode (like, holding down shift) that unmaps all XV windows at
the start of the grab, and maps them again once to grab has completed.)

Make a '-update' option to do an 'Update' (generate icons) in the specified
	directory, without any user intervention.

If '-perfect' or '-owncmap', we should create a private colormap when in 
	stdcmap mode (and then we can pick a 3/3/2 on 8-bit displays, and
	have a better chance of getting 2/2/2 on 6-bit displays.)

Add '-1xlimit' option (to keep 'old style' behavior, for folks who liked it),
	and make '-2xlimits' the default.  Also change UnCrop behavior 
	(should uncrop at current expansion:  if that would be bigger than
	the screen, just go back to 'normal' size)

'Make Gray' button if we're looking at a 1-bit b/w image?

Add a '-convert {gif,tiff,jpeg,pm,etc...}' option that suppresses most of the
	X stuff.  Never needs to fall into HandleEvent(), ferinstance...

Make the 'uncrop' less likely to generate a HUGE image, and then relax the
window max-size limitations to see what happens...

Instead of alternating diversity and popularity, you could
multiply the distance by the popularity of a color (expressed,
for example, as a percentage of the total points).
	From: rjohnson@shell.com (Roy Johnson)


UNLIKELY, BUT GOOD IDEAS TO THINK ABOUT
---------------------------------------
Scroll bars for the image window.  Have a toggle to specify whether resizing
the window rescales the image, or just shows more or less of it.

An ability to pad the image into a larger image (so as to make standard-sized
images out of slightly too small images

> I would like to have *only* the image window with "nopos", i.e. let the other
> windows (main menu, edit and info) always be positioned in the corners of the
> screen.
>
> Most apps have a hierarcy e.g. xv.ctrl.geometry could mean the geometry of
> the ctrl window, while xv*geometry means any window. If I'm not mistaken
> xv.ctrl.geometry overrides xv*geometry. Comments?
> 
> And *please* remove this toggle thing between resources and cmdline options.
> What if two persons uses the same script which uses `xv -perfect', they may
> get opposite effects because they may have different resources set for xv.
> use +/- for cmdline options or `no' options like -noperfect.
>
> Peder Langlo    (respl@mi.uib.no)


Smooth rotate?

Continue to handle events ('exposes' and keypresses, at least) during certain
long computations?  (such as smooth, loading jpegs, etc.)

look into a more-diverse 'slow24' algorithm (n****.tif)
	From: mjm@as.arizona.edu (Mark McCaughrean)

Stick in a '-cecmap' checkbox in the color editor window, somewhere.

be able to select 'ncols' values with a dial (while the program is running).
	Useful for folks trying to generate reduced color images.

Keyboard accelerators for the RGB dials in the color editor.

> From: lowry@watson.ibm.com (Andy Lowry)
> Subject: xv slide-show mode
> 
> Hi.  First, thanks very much for creating xv and making it available.
> Here's a simple random idea that you might think about throwing into
> some later version of xv: let the user toggle slide-show mode while an
> image is being displayed.  This is probably most useful when I start
> in slide-show mode but I want to "freeze" the show on occasion, for
> longer than the normal wait interval.  I would imagine the following
> options:
> 
>   -wait n - like the current option, but there'd be a default for when
>     slide-show mode is entered after the fact.
>   -wrap - like wloop but affects Next & Previous as well as slide show
>      progression.
>   -slide - start up in slide show; default if -wait explicitly given.
>   -noslide - begin in normal mode; default if -wait is not explicitly
>     given.  (Defaults for -slide and -noslide are for backward
>     compatibility.)
>   -wloop - equivalent to a combination of -slide and -wrap (for
>     backward compatibility).




RIGHT BEFORE HELL FREEZES OVER
------------------------------

> Let you type 'xv <dirname>' it should do the 'right thing'  (including 
> 	recursing down subdirs...)
> Should probably have a '-only_use_recognized_suffixes' option to speed things
> up?  (ie, so it won't bother stat'ing (or including in the list, at least)
> things that don't end with '.gif', '.jpg', etc...)


> Deal with the virtual WM scene (tvtwm, at least)
>  
> '-root' modes in tvtwm core dump?
> 
> '-virtual' option:  geomspecs should normally be relative to the physical
> root window.  If '-virtual' is specified, they should be relative to the 
> virtual root window (if any)  (ALTERNATELY:  modify parsing of the geometry
> string slightly (look for a leading 'a' or 'r'???)
>
> Also, '-vmax' or something to let you generate a root image that's the size
> of the *virtual* root, not the physical root.


Faster compressed/color-on-grayscale-printers postscript output?

get 'Grab' on a multi-screen system to let you grab from *either* screen,
	if possible...

> The Hue remapping control is a wonder. Would it be possible to put xv in
> a mode so that saturation and value changes only apply for colors in the
> `From' dial? This would surely make xv more powerful in making the sky more
> blue and lipstick more red.  ('global' checkboxes next to the two controls)

Randomize function shouldn't be *so* random.  Maybe just randomly swap r,g,b
	colormap components, flip their signs, etc. ???

----
From: dan@mordor.webo.dg.com (Dan Zehme)

"Auto Crop Plus"  Many images have a border containing text or simple
bitmap images.  These images can be cropped by a simple algorithm:
crop in one line as long as the number of colors on the current line do not
exceed n and all colors on that line are a superset of previous lines.
Do this for the top, bottom, left, and right.  I usually calculate n
as a percentage of the used colors.

"Image Correction" Lets say that you have some text or an error
overlayed on an image.   Select a cropping rectangle.  Select "Image
Correction".  Up pops a grid of colors (like the upper left hand
corner of the color window).  Select the color that you would like to
eliminate.  Then eliminate the color in the cropping rectangle by
calculating a replacement color based on the pixels around it on a
percentage basis.
----

'real' colormap undo/redo controls.  (Hook into main coloreditor undo/redo
	controls.  Keep 'revert', though)

One question re usage:  can I place the "xv" window on one
"screen" (smaller, color) and the controls on another (large, grey-scale)?
I looked/read the docs, but couldn't figure out if this was possible.


Histograms (possibly toggle switches for all four graph windows?)  Possibly 
it's own window...  (See message from Jon Brinkmann describing ideas.)


> What I want is that if I Shift-rightbutton'ed on a pixel in the image, the 
> pixel got the yanked color. Should be very easy to implement if desired.



------
From: osyjm@miro.cs.montana.edu (Jaye Mathisen)

Move OK/CANCEL/RESCAN buttons in load/save window to bottom of screen 
somewhere, and make the listW wider...

Have a 'overwrite' checkbox in the Save dialog 



