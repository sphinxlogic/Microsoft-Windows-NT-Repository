%%PsfStart

$Id: language.PSF,v 3.5 1992/06/02 08:16:01 ajf Exp ajf $

	WARNING: This file must be edited to cause valid selection
	=======	 of postscript characters for non-English languages.
		 The sample "Scandinavian" translation table is
		 used for testing purposes only and will not generate
		 correct character selections.  Read the comments in
		 the "%%translate" section below to manually create
		 a valid translation table and language character
		 vector for the target language.

	This is an example language startup file that illustrates
	encoding of a font vector to use Scandinavian characters. This
	file must be appended to the end of "psfprint.def" with
	
		cat psfprint.old.def language.PSF > psfprint.def
	
	The comments may remain in the final file, or may be removed as
	desired - they are ignored by psf and friends.

	The first section of the code must start with "%%PsfStart" and
	terminate with %%PsfEnd. The information within this section
	contains new font defintion and character translation tables
	used by psf for internal processing.
	
	This section may be empty, however the "%%PsfStart" and
	"%%PsfEnd" lines must exist.

	Any postscript code following the "%%PsfEnd" marker is copied to
	the printer as part of the postscript prologue.  The actual
	font reencoding is performed in this section.

	The key words %%PsfStart, %%fontX %%translate %%copy %%PsfEnd
	must start in the first column of this file.

	--------------------------------------------------------------

	The steps to reencode a font are:
	
		1. Create a new set of font names which will become
		   the names of the reencoded fonts.  This is set up
		   in the "%%fonX" lines below.
		
		2. If any character translation form ascii to printer
		   characters is needed, the translation is provided
		   in "%%translate" lines below.
		
		3. The actual print characters to be selected are
		   set up in the "languagevec".
		
		4. The "ENCODE" postscript code must be set up to
		   perform the font reencoding.
	--------------------------------------------------------------

	Set up new language font names. Fonts in psf are numbered
	as 0..9, a..z. The "%%fontX" numbers (where 'X' represents the
	font number used by psf) reflect the font to be updated or
	added. If a font is not updated in the list below, the original
	font remains.

	The following are the standard fonts known to psf:

		 # name                  # name
		 - -------------------   - -------------------------
		 0 Courier		 1 Helvetica
		 2 Times-Roman		 3 AvantGarde-Book
		 4 Bookman-Light	 5 NewCenturySchlbk-Roman
		 6 Palatino-Roman	 7 Helvetical-Narrow
		 8 Garamond-Light	 9 Korinna-Regular
		 a Helvetica-Condensed	 b ZapfChancery-MediumItalic

	This example REPLACES standard Courier (%%font0) to become a
	Scandinavian equivalent for the default Courier font and add a
	NEW font (%%fontc) to be the Scandinavian encoded version of
	Times-Roman. New fonts should be numbered starting from "c". DO
	NOT leave gaps when adding new font numbers, add c, d, e, ... in
	sequence.  
	
	New font definitions will appear with "psf -".

	The format of the %%fontX lines must always follow the pattern
	below - the new names created must be for the base, italic,
	bold and bold-italic, in order. The new font names are
	arbitrary, however must match the names later in the ENCODE
	section.

    font new base font    new italic font      new bold font    new bold-italic
      #   --------------   -------------------  ---------------- ---------------------
%%font0  Courier-S        Courier-Oblique-S    Courier-Bold-S   Courier-BoldOblique-S
%%fontc  Times-S          Times-I-S            Times-B-S        Times-BI-S
	------------------------------------------------------------------

	The following translates the letters from 'a' .. 't' to a series
	of characters that could be used in a Scandinavian language.
	Printing a file containing:

		abcdefghijklmnopqrst
	
	causes each 'English' letter to be replaced by an arbitrary
	special 'Scandanavian' letter.

	The translation table format is:

                   <ascii text value> / <postscript value>
	e.g.:
		   141/300  translates "a" to "/Oacute"

                   where 141 = "a",    300 = "/Oacute"

	The <ascii text value> is the octal value of a text character
	that actually appears in the text file. The <postscript value>
	is the octal value to which it is to be translated. This new
	value is set up in the "languagevec" array below.

	On SysV unix, the <ascii text value>s are (may be?) determined
	from the ttymap(1) table for the target language.

	Of course, this table is not "real", it is an example only -
	used for testing! Replace this with real translation
	information.
	
	This translation table need not be needed if the desired
	characters can be simply re-encoded.

%%translate 141/300 142/311 143/321 144/322 145/323 146/324 147/325 150/330 
%%translate 151/331 152/332 153/333 154/334 155/340 156/342 157/344 160/347
%%translate 161/360 162/362 163/364 164/367
	----------------------------------------------------------------

	An external file may be copied to the printer with "%%copy file"
	This file is inserted into the "prologue" code. It must be
	postscript.

         %%copy /etc/some.file

	----------------------------------------------------------------
	From: Jan Fernquist fer@gorbie.n.tvt.se
	---------------------------------------
	I used a minimum vector for translations in sevenbit ASCII that
	just fixed the [\] and {|}, which is six of the letters that is
	very common in swedish lanaguage. To be conformant with 7bit
	ISO-standard nationalreplacement codes, ~^@` should be converted
	to but i prefer the american look of those letters. This is the
	vector i used. I removed the %%%translate feature, from the
	langauage.PSF file.

	I compiled psf on a sysV R3 machine. Since we for the moment is
	running it in sevenbit ascii and using swedish national
	replacement on the terminals and non-postscript printers, it's
	just common knowledge for us to reencode those special
	characters.

	There is two common formats to represent international charcters
	when using 8-bit wide tables, the IBM-PC 8-bit and the ISO-8 bit
	which i think is the same as HP-Roman 8 table and the DEC-8bit.

	Here are examples how the anoying swedish characters would be
	remapped. Im sitting at home right now and have no access to the
	standards. These language vectors do NOT need the "%%translat"
	table - however the re-encoding must be done with new font names
	(i.e. %%fonXX must be set and re-encoded in % ENCODE below)

	Two .def files could be constructed with appropriate language
	vectors (see below). The names of the files should be "ibm" and
	"iso" and placed in the directory containing the default
	psfprint.def file. The appropriate character encoding is
	selected with "-u ibm" or "-u iso". The default "psfprint.def"
	file should be a link to one to these files.
	
	/languagevec [ %% IBM encoding vector for file "ibm"
		8#216 /Adieresis
		8#231 /Odieresis
		8#217 /Aring
		8#204 /adieresis
		8#224 /odieresis
		8#206 /aring
	 ]def

	 /languagevec [ %% DEC-8 Bit which i think is ISO, for file "iso"
		8#196 /Adieresis
		8#214 /Odieresis
		8#197 /Aring
		8#228 /adieresis
		8#246 /odieresis
		8#229 /aring
	 ]def

%%PsfEnd


%  Psf and psbanner add the following code to the Prologue
%
%  The following postscript code is from:
%       Adobe Postscript Language Tutorial and Cookbook
%       Blue book program 18, page 211.
%       Making small changes to encoding vectors
%

/reencsmalldict 12 dict def
/ReEncodeSmall
   {reencsmalldict begin
      /newcodesandnames exch def
      /newfontname exch def
      /basefontname exch def
      /basefontdict basefontname findfont def
      /newfont basefontdict maxlength dict def
      basefontdict
      { exch dup /FID ne
         {dup /Encoding eq
            {   exch dup length array copy
                newfont 3 1 roll put }
            {   exch newfont 3 1 roll put }
            ifelse
         }
         {   pop pop   }
         ifelse
      } forall
      
      newfont /FontName newfontname put
      newcodesandnames aload pop
      
      newcodesandnames length 2 idiv
      {   newfont /Encoding get 3 1 roll put }
      repeat
         
      newfontname newfont definefont pop
      end
   } def

% Select the additional characters needed for the desired language.
% "languagevec" below is set up as a Scandinavian character set
% assignment. Other languages will need a different selection.

/languagevec [
   8#300 /Oacute
   8#311 /Adieresis
   8#321 /oacute
   8#322 /Ograve
   8#323 /Scaron
   8#324 /ograve
   8#325 /scaron
   8#330 /Edieresis
   8#331 /adieresis
   8#332 /edieresis
   8#333 /Odieresis
   8#334 /odieresis
   8#340 /Aacute
   8#342 /Aring
   8#344 /Zcaron
   8#347 /Eacute
   8#360 /aacute
   8#362 /aring
   8#364 /zcaron
   8#367 /eacute
   ] def

% ENCODE the new fonts for Scandinavian.  Then new font name must
% have been defined in the "%%fontX" lines above.
%
% base font          new font name          reencode the new font
% -----------------  ---------------------  -------------------------
/Courier             /Courier-S             languagevec ReEncodeSmall
/Courier-Oblique     /Courier-Oblique-S     languagevec ReEncodeSmall
/Courier-Bold        /Courier-Bold-S        languagevec ReEncodeSmall
/Courier-BoldOblique /Courier-BoldOblique-S languagevec ReEncodeSmall
/Times-Roman         /Times-S               languagevec ReEncodeSmall
/Times-Italic        /Times-I-S             languagevec ReEncodeSmall
/Times-Bold          /Times-B-S             languagevec ReEncodeSmall
/Times-BoldItalic    /Times-BI-S            languagevec ReEncodeSmall
