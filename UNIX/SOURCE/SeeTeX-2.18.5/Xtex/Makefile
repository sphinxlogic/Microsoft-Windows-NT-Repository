# Makefile generated by imake - do not edit!
# $XConsortium: imake.c,v 1.65 91/07/25 17:50:17 rws Exp $
#
# The cpp used on this machine replaces all newlines and multiple tabs and
# spaces in a macro expansion with a single space.  Imake tries to compensate
# for this, but is not always successful.
#

# -------------------------------------------------------------------------
# Makefile generated from "Imake.tmpl" and </tmp/IIf.a006lJ>
# $XConsortium: Imake.tmpl,v 1.139 91/09/16 08:52:48 rws Exp $
#
# Platform-specific parameters may be set in the appropriate <vendor>.cf
# configuration files.  Site-specific parameters should be set in the file
# site.def.  Full rebuilds are recommended if any parameters are changed.
#
# If your C preprocessor does not define any unique symbols, you will need
# to set BOOTSTRAPCFLAGS when rebuilding imake (usually when doing
# "make World" the first time).
#

# -------------------------------------------------------------------------
# site-specific configuration parameters that need to come before
# the platform-specific parameters - edit site.def to change

# site:  $XConsortium: site.def,v 1.2 91/07/30 20:26:44 rws Exp $

# -------------------------------------------------------------------------
# platform-specific configuration parameters - edit x386.cf to change

# $Header: /home/x_cvs/mit/config/x386.cf,v 1.22 1992/07/16 10:45:34 dawes Exp $
# platform:  $XConsortium: x386.cf,v 1.7 91/08/16 19:30:10 gildea Exp $

  EXTRA_INCLUDES =

# $XConsortium: sv4Lib.rules,v 1.8 91/07/19 15:38:53 rws Exp $

# operating system:  Unix System V/386 Release 4.2 Consensys

# -------------------------------------------------------------------------
# site-specific configuration parameters that go after
# the platform-specific parameters - edit site.def to change

# site:  $XConsortium: site.def,v 1.2 91/07/30 20:26:44 rws Exp $

#
# ProjectRoot is where you want to install the binaries, libs, fonts etc
#

      PROJECTROOT = /opt
         XWINHOME = /usr/X
       XWINLIBDIR = $(XWINHOME)/lib
       XWINBINDIR = $(XWINHOME)/bin

     USLCLIENTSRC = $(TOP)/uslclients
       DESKTOPDIR = $(PROJECTROOT)/desktop
         DTADMDIR = $(PROJECTROOT)/adm
        XDEFAULTS = $(PROJECTROOT)/defaults

       FONTINCSRC = $(FONTSRC)/include
    FONTLIBINCSRC = $(FONTSRC)/lib/include
      FOLIOLIBSRC = $(FONTSRC)/lib/folio
       FONTLIBSRC = $(FONTSRC)/lib/font
    BITMAPFONTSRC = $(FONTSRC)/lib/bitmap
      FONTSLIBSRC = $(FONTSRC)/lib/
           XOLSRC = $(LIBSRC)/Xol
        XOLLIBSRC = $(LIBSRC)/Xol
            NROFF = nroff
         MANFLAGS = 444
BITMAPLIBS_TO_BUILD = libbitmap.a libbitmap.so
FONTLIBS_TO_BUILD = libfont.a libfont.so
    SYS_LIBRARIES = -L/opt/lib -lgdbm -lsocket -lnsl

            SHELL = /bin/sh

              TOP = ../.
      CURRENT_DIR = ./Xtex

               AR = ar cq
  BOOTSTRAPCFLAGS =  -DSVR4 -DSYSV386 -DSYSV -DUSG
               CC = gcc
               AS = as

         COMPRESS = compress
              CPP = /lib/cpp $(STD_CPP_DEFINES)
    PREPROCESSCMD = gcc -E $(STD_CPP_DEFINES)
          INSTALL = /usr/ucb/install
               LD = ld
             LINT = lint
      LINTLIBFLAG = -o
         LINTOPTS = -ax
               LN = ln -s
             MAKE = make
               MV = mv
               CP = cp
              HCC = HccCmd
              SED = SedCmd

               RM = rm -f
            TROFF = psroff
         MSMACROS = -ms
              TBL = tbl
              EQN = eqn
     STD_INCLUDES = -I/usr/X/include -I$(TOOLS)/usr/include
  STD_CPP_DEFINES =  -DSVR4 -DSYSV386 -DSYSV -DUSG
      STD_DEFINES =  -DSVR4 -DSYSV386 -DSYSV -DUSG
 EXTRA_LOAD_FLAGS =
  EXTRA_LIBRARIES = -lsocket -lnsl
             TAGS = ctags

    SHAREDCODEDEF =
         SHLIBDEF =

    PROTO_DEFINES =

     INSTPGMFLAGS = -s

     INSTBINFLAGS = -m 0755
     INSTUIDFLAGS = -m 4755
     INSTLIBFLAGS = -m 0644
     INSTINCFLAGS = -m 0444
     INSTMANFLAGS = -m 0444
     INSTDATFLAGS = -m 0444
    INSTKMEMFLAGS = -m 4755

      PROJECTROOT = /opt

     TOP_INCLUDES = -I$(INCROOT)

      CDEBUGFLAGS = -O3 -g
        CCOPTIONS = -m386 -fpcc-struct-return -Di386
        HCCOPTIONS = DefaultHCCOptions

      ALLINCLUDES = $(INCLUDES) $(EXTRA_INCLUDES) $(TOP_INCLUDES) $(STD_INCLUDES)
       ALLDEFINES = $(ALLINCLUDES) $(STD_DEFINES) $(EXTRA_DEFINES) $(PROTO_DEFINES) $(DEFINES)
           CFLAGS = $(CDEBUGFLAGS) $(CCOPTIONS) $(ALLDEFINES)
           HCFLAGS = $(CDEBUGFLAGS) $(HCCOPTIONS) $(ALLDEFINES)
        LINTFLAGS = $(LINTOPTS) -DLINT $(ALLDEFINES)

           LDLIBS = $(SYS_LIBRARIES) $(EXTRA_LIBRARIES)

        LDOPTIONS = $(CDEBUGFLAGS) $(CCOPTIONS) $(LOCAL_LDFLAGS) -L$(USRLIBDIR)

        HLDOPTIONS = $(CDEBUGFLAGS) $(HCCOPTIONS) $(LOCAL_LDFLAGS)

   LDCOMBINEFLAGS = -r
      DEPENDFLAGS =

        MACROFILE = x386.cf
           RM_CMD = $(RM) *.CKP *.ln *.BAK *.bak *.o core errs ,* *~ *.a .emacs_* tags TAGS make.log MakeOut

    IMAKE_DEFINES =

         IRULESRC = $(CONFIGDIR)
        IMAKE_CMD = $(IMAKE) -DUseInstalled -I$(IRULESRC) $(IMAKE_DEFINES)

     ICONFIGFILES = $(IRULESRC)/Imake.tmpl $(IRULESRC)/Imake.rules \
			$(IRULESRC)/Project.tmpl $(IRULESRC)/site.def \
			$(IRULESRC)/$(MACROFILE) $(EXTRA_ICONFIGFILES)

# -------------------------------------------------------------------------
# X Window System Build Parameters
# $XConsortium: Project.tmpl,v 1.142 92/01/25 16:44:02 rws Exp $

# ----------------------------------------------------------------------
# LEMIS parameters (Greg Lehey, 7 September 1993)
#

         DEFINES = -DLIBDIR=\"$(PROJECTROOT)/lib\" -DDESTDIR=\"$(PROJECTROOT)/bin\"

# -------------------------------------------------------------------------
# X Window System make variables; this need to be coordinated with rules

          PATHSEP = /
        USRLIBDIR = $(XWINHOME)/lib
           BINDIR = /opt/bin
          INCROOT = /opt/include
     BUILDINCROOT = $(TOP)
      BUILDINCDIR = $(BUILDINCROOT)/X11
      BUILDINCTOP = ..
           INCDIR = $(INCROOT)/X11
           ADMDIR = /usr/adm
           LIBDIR = $(USRLIBDIR)
        CONFIGDIR = /cdimage/cdrom/ETC/xconfig
       LINTLIBDIR = $(USRLIBDIR)/lint

          FONTDIR = $(LIBDIR)/fonts
         XINITDIR = $(LIBDIR)/xinit
           XDMDIR = $(LIBDIR)/xdm
           TWMDIR = $(LIBDIR)/twm
          MANPATH = /opt/man
    MANSOURCEPATH = /opt/man/cat
        MANSUFFIX = 1
     LIBMANSUFFIX = 1
           MANDIR = $(MANSOURCEPATH)$(MANSUFFIX)
        LIBMANDIR = $(MANSOURCEPATH)$(LIBMANSUFFIX)
           NLSDIR = $(LIBDIR)/nls
        PEXAPIDIR = $(LIBDIR)/PEX
      XAPPLOADDIR = $(LIBDIR)/app-defaults
       FONTCFLAGS = -t

     INSTAPPFLAGS = $(INSTDATFLAGS)

            IMAKE = imake
           DEPEND = makedepend
              RGB = rgb

            FONTC = bdftosnf

        MKFONTDIR = mkfontdir
        MKDIRHIER = /bin/sh $(XWINLIBDIR)/mconfig/mkdirhier

        CONFIGSRC = $(TOP)/mconfig
       DOCUTILSRC = $(TOP)/doc/util
        CLIENTSRC = $(TOP)/clients
          DEMOSRC = $(TOP)/demos
           LIBSRC = $(TOP)/lib
          FONTSRC = $(TOP)/fonts
       INCLUDESRC = $(TOP)/X11
        SERVERSRC = $(TOP)/server
          UTILSRC = $(TOP)/util
        SCRIPTSRC = $(UTILSRC)/scripts
       EXAMPLESRC = $(TOP)/examples
       CONTRIBSRC = $(TOP)/../contrib
           DOCSRC = $(TOP)/doc
           RGBSRC = $(TOP)/rgb
        DEPENDSRC = $(UTILSRC)/makedepend
         IMAKESRC = $(CONFIGSRC)
         XAUTHSRC = $(LIBSRC)/Xau
          XLIBSRC = $(LIBSRC)/X
           XMUSRC = $(LIBSRC)/Xmu
       TOOLKITSRC = $(LIBSRC)/Xt
       AWIDGETSRC = $(LIBSRC)/Xaw
       OLDXLIBSRC = $(LIBSRC)/oldX
      XDMCPLIBSRC = $(LIBSRC)/Xdmcp

      BDFTOSNFSRC = $(FONTSRC)/clients/bdftosnf

     MKFONTDIRSRC = $(FONTSRC)/clients/mkfontdir
         FSLIBSRC = $(FONTSRC)/lib/fs
    FONTSERVERSRC = $(FONTSRC)/server
     EXTENSIONSRC = $(TOP)/extensions
         XILIBSRC = $(EXTENSIONSRC)/lib/xinput
      XTESTLIBSRC = $(EXTENSIONSRC)/lib/xtest
      PHIGSLIBSRC = $(EXTENSIONSRC)/lib/PEX

# $XConsortium: sv4Lib.tmpl,v 1.6 92/01/25 16:46:55 rws Exp $

#
# USL: BEGIN
#	The default revision numbers from MIT is 5. But since USL has to be
#	backward compatible, so force it to 1
#

         SOXOLREV = 1
        SOOLITREV = 1
       SOOLITMREV = 1
       SOOLITOREV = 1
          SODTREV = 1

# USL: END

SHLIBLDFLAGS = -G -z text
PICFLAGS = -K PIC

  DEPEXTENSIONLIB =
     EXTENSIONLIB = -lXext

          DEPXLIB = $(DEPEXTENSIONLIB)
             XLIB = $(EXTENSIONLIB) -lX11

        DEPXMULIB = $(USRLIBDIR)/libXmu.so.$(SOXMUREV)

              XMULIB = -lXmu

       DEPOLDXLIB =
          OLDXLIB = -loldX

      DEPXTOOLLIB =
         XTOOLLIB = -lXt

DEPXOLCOMPATLIB = $(USRLIBDIR)/libXol.so.$(SOXOLREV)
      DEPXOLLIB = $(USRLIBDIR)/libOlit.so.$(SOXOLREV)
         XOLLIB = -lOlit

        DEPXAWLIB =
           XAWLIB = -lXaw

        DEPXILIB =
           XILIB = -lXi

        DEPXTESTLIB =
           XTESTLIB = -lXtst

#
# USL: BEGIN
#

XHOSTLOC = $(DESTDIR)/$(LIBDIR)
SHLIBFLAGS =  -L $(XHOSTLOC)

#
# USL: END
#

        SOXLIBREV = 1
          SOXTREV = 1
         SOXAWREV = 1
        SOOLDXREV = 1
         SOXMUREV = 1
        SOXEXTREV = 1
      SOXINPUTREV = 1
       SOXTESTREV = 1
       SOXTRAPREV = 1

      DEPXAUTHLIB = $(USRLIBDIR)/libXau.a
         XAUTHLIB =  -lXau
      DEPXDMCPLIB = $(USRLIBDIR)/libXdmcp.a
         XDMCPLIB =  -lXdmcp

        DEPPHIGSLIB = $(USRLIBDIR)/libphigs.a
           PHIGSLIB =  -lphigs

 LINTEXTENSIONLIB = $(LINTLIBDIR)/llib-lXext.ln
         LINTXLIB = $(LINTLIBDIR)/llib-lX11.ln
          LINTXMU = $(LINTLIBDIR)/llib-lXmu.ln
        LINTXTOOL = $(LINTLIBDIR)/llib-lXt.ln
          LINTXAW = $(LINTLIBDIR)/llib-lXaw.ln
           LINTXI = $(LINTLIBDIR)/llib-lXi.ln
        LINTPHIGS = $(LINTLIBDIR)/llib-lphigs.ln

          DEPLIBS = $(DEPXAWLIB) $(DEPXMULIB) $(DEPXTOOLLIB) $(DEPXLIB)

         DEPLIBS1 = $(DEPLIBS)
         DEPLIBS2 = $(DEPLIBS)
         DEPLIBS3 = $(DEPLIBS)

# -------------------------------------------------------------------------
# Imake rules for building libraries, programs, scripts, and data files
# rules:  $XConsortium: Imake.rules,v 1.126 91/12/30 20:14:35 rws Exp $

# -------------------------------------------------------------------------
# start of Imakefile

TEX_BINDIR = /opt/bin
TEX_MANDIR = /opt/man/cat1
TEX_INPUTS = /opt/lib/tex/inputs

FontDesc= /opt/lib/tex/fontdesc

IprBin=/opt/bin

XTEX_IFDEF_OPTIONS=

XTEX_TFM_PATH=.:/opt/lib/tex/fonts::/usr/local/lib/tex/fonts:/usr/lib/tex/fonts:/usr/local/lib/tex/tfm

XTEX_FONT_PATH=/opt/xtex

XTEX_MAKE_FONT=TeXtoXfont %n %d %b %m sun $(XTEX_FONT_PATH)

    X_FONT_SUFFIX=snf
    X_FONT_COMPILER=bdftosnf $$BDFNAME > $$SNFNAME
    X_FONT_MAKE_DIR=mkfontdir
    X_FONT_COMPRESS=1
    X_FONT_PREPEND=true #xset +fp
    X_FONT_RESET=xset fp rehash

GHOST_SEARCH_PATH=/opt/lib/tex82/ps

  POPUP_WINDOW_TYPE	=overrideShellWidgetClass

     LIBTEXROOT = ../
      LIBTEXSRC	= ../libtex
         LIBTEX	= $(LIBTEXSRC)/libtex.a
      DEPLIBTEX	= $(LIBTEX)

  GETOPT=getopt.o

  STRTOL=

all::

#   CDEBUGFLAGS = -g

          FILES = $(SRCS) $(SRCS2) $(HDRS) \
		  DviPageNEWS.c \
		  DviPageNEWS.h \
		  DviPageDPS.c \
		  DviPageDPS.h \
		  xtex.man Xtex.AD \
		  TeXtoXfont.SCRIPT TeXtoXfont.remote.SCRIPT \
		  xtex.sty \
		  Imakefile Makefile ChangeLog \
		  README README.OPENWIN PS-FONT-MAP X11-Font-information

        VERSION = 2.18.5#
    RCS_VERSION = 2p185#

        EXTRA_DEFINES = -DVSPRINTF -DSYSV

    XTEX_IFDEF_GHOST  = -DGHOST
        GHOST_DEFINES = -DHAVE_GHOSTSCRIPT
            GHOST_LIB =
       GHOST_INCLUDES =
           GHOST_SRCS = DviPageGS-0.c DviPageGS-1.c DviPageGS-2.c
           GHOST_HDRS = DviPageGS-0.h DviPageGS-1.h DviPageGS-2.h
           GHOST_OBJS = DviPageGS-0.o DviPageGS-1.o DviPageGS-2.o

XTEX_IFDEF_PS_OPTIONS = $(XTEX_IFDEF_DPS) $(XTEX_IFDEF_NEWS) $(XTEX_IFDEF_GHOST)
   POSTSCRIPT_DEFINES = $(DPS_DEFINES) $(NEWS_DEFINES) $(GHOST_DEFINES)
       POSTSCRIPT_LIB = $(DPS_LIB) $(NEWS_LIB) $(GHOST_LIB)
  POSTSCRIPT_INCLUDES = $(DPS_INCLUDES) $(NEWS_INCLUDES) $(GHOST_INCLUDES)
      POSTSCRIPT_SRCS = $(DPS_SRCS) $(NEWS_SRCS) $(GHOST_SRCS)
      POSTSCRIPT_HDRS = $(DPS_HDRS) $(NEWS_HDRS) $(GHOST_HDRS)
      POSTSCRIPT_OBJS = $(DPS_OBJS) $(NEWS_OBJS) $(GHOST_OBJS)

      SELFILE_DEFINES = -DSELFILE
              SF_SRCS = Dir.c Draw.c Path.c SelFile.c
              SF_HDRS = SFinternal.h
              SF_OBJS = Dir.o Draw.o Path.o SelFile.o

        DEFINES = $(XVERSION_DEFINES) $(POSTSCRIPT_DEFINES) \
		  $(SELFILE_DEFINES) \
		  -DPOPUP_WINDOW_TYPE=$(POPUP_WINDOW_TYPE) \
		  -DXTEX_VERSION=\"$(VERSION)\"

       INCLUDES	= -I$(LIBTEXROOT) -I$(INCROOT) $(POSTSCRIPT_INCLUDES)
LOCAL_LIBRARIES = $(LIBTEX) $(POSTSCRIPT_LIB)
        DEPLIBS = $(DEPLIBTEX) $(DEPXAWLIB) $(DEPXMULIB) $(DEPXTOOLLIB) $(DEPXLIB)

  SYS_LIBRARIES =  $(XAWLIB) $(XMULIB) $(XTOOLLIB) $(XLIB) -lm

           SRCS = xtex.c widgets.c \
                  file.c dialog.c dvi-simple.c \
                  page.c x11fonts.c mark.c fontpath.c \
                  DviPage.c DviPage2.c Valuator.c \
		  EzMenu.c EzME.c ${POSTSCRIPT_SRCS} ${SF_SRCS}

           HDRS = DviPage.h dvi-simple.h mio.h xtex.h x11fonts.h \
		  DviPageP.h mark.h page.h widgets.h Valuator.h ValuatorP.h \
		  EzMenu.h EzMenuP.h EzME.h EzMEP.h \
                  ${POSTSCRIPT_HDRS} ${SF_HDRS}

           OBJS = xtex.o widgets.o \
                  file.o dialog.o dvi-simple.o \
                  page.o x11fonts.o mark.o fontpath.o \
                  DviPage.o DviPage2.o Valuator.o \
		  EzMenu.o EzME.o ${POSTSCRIPT_OBJS} ${SF_OBJS}

 PROGRAM = xtex

all:: xtex

xtex: $(OBJS) $(DEPLIBS)
	$(RM) $@
	$(CC) -o $@ $(OBJS) $(LDOPTIONS) $(LOCAL_LIBRARIES) $(LDLIBS) $(EXTRA_LOAD_FLAGS)

install:: xtex
	@if [ -d $(DESTDIR)$(BINDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(BINDIR)); fi
	$(INSTALL) -c $(INSTPGMFLAGS)  xtex $(DESTDIR)$(BINDIR)

install.man:: xtex.man
	@if [ -d $(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(MANDIR)); fi
	$(NROFF) -man xtex.man > $(MANDIR)/xtex.$(MANSUFFIX)
	chmod $(MANFLAGS) $(MANDIR)/xtex.$(MANSUFFIX)

depend::
	$(DEPEND) $(DEPENDFLAGS) -s "# DO NOT DELETE" -- $(ALLDEFINES) $(DEPEND_DEFINES) -- $(SRCS)

lint:
	$(LINT) $(LINTFLAGS) $(SRCS) $(LINTLIBS)
lint1:
	$(LINT) $(LINTFLAGS) $(FILE) $(LINTLIBS)

clean::
	$(RM) $(PROGRAM)

install:: TeXtoXfont.script
	@if [ -d $(DESTDIR) $(BINDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR) $(BINDIR)); fi
	$(INSTALL) -c $(INSTBINFLAGS) TeXtoXfont.script $(DESTDIR) $(BINDIR)/TeXtoXfont

install:: Xtex.ad
	@if [ -d $(DESTDIR)$(XAPPLOADDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(XAPPLOADDIR)); fi
	$(INSTALL) -c $(INSTAPPFLAGS) Xtex.ad $(DESTDIR)$(XAPPLOADDIR)/Xtex

install:: xtex.sty
	$(INSTALL) -c $(INSTDATFLAGS) xtex.sty $(DESTDIR)$(TEX_INPUTS)

Xtex.ad: Xtex.AD Makefile
	sed < Xtex.AD \
		-e "s|XTEX_TFM_PATH|$(XTEX_TFM_PATH)|" \
		-e "s|XTEX_FONT_PATH|$(XTEX_FONT_PATH)|" \
		-e "s|XTEX_MAKE_FONT|$(XTEX_MAKE_FONT)|" \
		-e "s|RESOURCES_VERSION|$(VERSION)|" \
		-e "s|GHOST_SEARCH_PATH|$(GHOST_SEARCH_PATH)|" | \
	/lib/cpp -Usun $(XTEX_IFDEF_OPTIONS) $(XTEX_IFDEF_PS_OPTIONS) \
		$(SELFILE_DEFINES) > Xtex.ad
clean::
	rm -f Xtex.ad

TeXtoXfont.script: TeXtoXfont.SCRIPT Makefile
	sed < TeXtoXfont.SCRIPT > TeXtoXfont.script \
		-e "s|X_FONT_SUFFIX|$(X_FONT_SUFFIX)|" \
		-e 's|X_FONT_COMPILER|$(X_FONT_COMPILER)|' \
		-e "s|X_FONT_MAKE_DIR|$(X_FONT_MAKE_DIR)|" \
		-e "s|X_FONT_COMPRESS|$(X_FONT_COMPRESS)|" \
		-e "s|X_FONT_PREPEND|$(X_FONT_PREPEND)|" \
		-e "s|X_FONT_RESET|$(X_FONT_RESET)|"
clean::
	rm -f TeXtoXfont.script

ci:
	echo "xtex version $(VERSION)" > /tmp/xtex.version
	ci -l -f -t/tmp/xtex.version -m"xtex $(VERSION)" -n"xtex$(RCS_VERSION)" $(FILES)

new-ad:: Xtex.ad
	$(INSTALL) -c $(INSTAPPFLAGS) Xtex.ad $(XAPPLOADDIR)/Xtex

tar:
	cd ../..;\
	for file in $(FILES); \
	do \
	  tar rf $(TARFILE) $(PRODUCT)/Xtex/$$file; \
	done

xtex-$(VERSION).tar.Z:
	tar crf xtex-$(VERSION).tar $(FILES)
	compress xtex-$(VERSION).tar

ftp: xtex-$(VERSION).tar.Z
	mv xtex-$(VERSION).tar.Z /srl/ftp/pub/SeeTeX

# -------------------------------------------------------------------------
# common rules for all Makefiles - do not edit

emptyrule::

clean::
	$(RM_CMD) "#"*

Makefile::
	-@if [ -f Makefile ]; then set -x; \
	$(RM) Makefile.bak; $(MV) Makefile Makefile.bak; \
	else exit 0; fi
	$(IMAKE_CMD) -DTOPDIR=$(TOP) -DCURDIR=$(CURRENT_DIR)

tags::
	$(TAGS) -w *.[ch]
	$(TAGS) -xw *.[ch] > TAGS

# -------------------------------------------------------------------------
# empty rules for directories that do not have SUBDIRS - do not edit

install::
	@echo "install in $(CURRENT_DIR) done"

install.man::
	@echo "install.man in $(CURRENT_DIR) done"

Makefiles::

includes::

# -------------------------------------------------------------------------
# dependencies generated by makedepend

