/* * Install directories for programs not related to X */

TEX_BINDIR = /opt/bin
TEX_MANDIR = /opt/man/cat1
TEX_INPUTS = /opt/lib/tex/inputs

/*
 *	Set `FONTDESC' to the location of your fontdesc file, unquoted.
 *	This is passed to the library routines so they can find it.
 */

FontDesc= /opt/lib/tex/fontdesc

IprBin=/opt/bin

/***********************************************************************
 *	Config options for Xtex:
 */

/*
 * Options in the Xtex.ad file enabled by #ifdef's.
 *
 * Possibilities include:
 *	-DCOLOR_BUTTONS
 */
XTEX_IFDEF_OPTIONS=

/*
 * XTEX_TFM_PATH is a colon seperated list of directories that
 * might contains TFM files; these are used by xtex to determine
 * true font widths.
 */

XTEX_TFM_PATH=.:/opt/lib/tex/fonts::/usr/local/lib/tex/fonts:/usr/lib/tex/fonts:/usr/local/lib/tex/tfm

/*	XtexFontPath is a comma/colon seperated list of directories that
 *	commonly contain X fonts for XTeX. If you specify your directory(-ies)
 *	here when you install XTeX, you avoid having to explain to users
 *	what needs to be done. You may need to #ifdef-configure this
 *	based on architecture. I don't use this, so it's commented out.
 */

XTEX_FONT_PATH=/opt/xtex
/***********************************************************************
 *	Automatic font creation: Morry Katz (katz@cs.stanford.edu) added this.
 *
 *	If a font is not found, a shell script (TeXtoXfont) is executed.
 *	This will attempt to build the font from scratch, using Metafont.
 *	The font will be installed in a certain directory, after which the
 *	server should be able to find it.
 *
 * Comand to build fonts:
 *	%n will be replaced by the font name
 *	%d will be replaced by the dpi
 *	%b will be replaced by the base dpi of the display device
 *	%m will be replaced by the magnification
 * For a server and client on the same machine the following is recommended:
 *   Xtex*.makeFont:TeXtoXfont %n %d %b %m MODE FONTCACHEDIR
 *	MODE should be replaced by the metafont mode_def for the server's
 *        display
 *	FONTCACHEDIR should be replaced by the directory in which the .bdf 
 *        and/or .snf font files which are built should be stored (this 
 *        directory must be in the server's font search path for correct
 *        operation).
 * For execution when the client is on a different machine than the server 
 * the following is recommended (note that TeXtoXfont and mftodbf must exist 
 * on the server):
 *   Xtex*.makeFont:rsh SERVER -l USER TeXtoXfont %n %d %b %m MODE FONTCACHEDIR
 *      SERVER should be replaced by the name of the X server.
 *      USER should be replaced by the username of the user whose account 
 *        should be used to run the script.  (The clinet must have rsh access 
 *        to the server for this to work.)
 * In those rare cases in which the server and client are different and the 
 * client knows how to build fonts for the server which the server cannot 
 * build on its own the following is recommended:
 *   Xtex*.makeFont:TeXtoXfont.remote %n %d %b %m MODE FONTCACHEDIR SERVER USER
 *
 ***********************************************************************/

XTEX_MAKE_FONT=TeXtoXfont %n %d %b %m sun $(XTEX_FONT_PATH)

/*
 * X_FONT_SUFFIXES	Font file suffix for your server
 * X_FONT_COMPILER	Font compiler for your server
 * X_FONT_MAKE_DIR	The way you build a 'fonts.dir' or equivilent 
 * X_FONT_COMPRESS	YES/NO - do you want fonts compressed?
 * X_FONT_RESET		Program to reset your font path.
 */

#if	defined(UltrixArchitecture)
  X_FONT_SUFFIX=pcf
  X_FONT_COMPILER=/usr/bin/dxfc $$BDFNAME > $$SNFNAME
  X_FONT_MAKE_DIR=/usr/bin/dxmkfontdir
  X_FONT_COMPRESS=YES
  X_FONT_PREPEND=xset +fp 
  X_FONT_RESET=xset fp rehash
#else
# if !defined(SunArchitecture)
    X_FONT_SUFFIX=snf
    X_FONT_COMPILER=bdftosnf $$BDFNAME > $$SNFNAME
    X_FONT_MAKE_DIR=mkfontdir
    X_FONT_COMPRESS=YES
    X_FONT_PREPEND=true #xset +fp 
    X_FONT_RESET=xset fp rehash
# else
    X_FONT_SUFFIX=fb
    X_FONT_COMPILER=convertfont -o $$NAME.$$DPI $$BDFNAME
    X_FONT_MAKE_DIR=bldfamily >/dev/null -f 64 -d
    X_FONT_COMPRESS=NO
    X_FONT_PREPEND=true	# xset +fp 
    X_FONT_RESET=xset fp rehash
# endif
#endif

/*
 *
 *	DISPLAY_POSTSCRIPT
 *		Set this if the client-side provides display postscript.
 *		If the server does not support DPS, you just won't see
 *		anything, but if you specify this & the client doesn't
 *		have it, you'll get compile errors. 
 *
 */

/*
#define DISPLAY_POSTSCRIPT
*/

/*
 * DISPLAY_GHOSTSCRIPT
 * 	Set this if you are using Ghostscript to display embedded 
 * 	PostScript.
 * 
 */

#define DISPLAY_GHOSTSCRIPT

#ifdef DISPLAY_GHOSTSCRIPT
/* 
 * GHOST_SEARCH_PATH 
 *    Should be a colon separated list of directories.
 *    This is pre-pended to ghostscripts default file search path.
 *    Use this to specify the location of prlog files (e.g., mac.pro). 
 */
GHOST_SEARCH_PATH=/opt/lib/tex82/ps	
#endif

/*
 *	NEWS SUPPORT -- If you have NeWS, then define NEWS
 */

#if defined(SunArchitecture) && OSMajorVersion >= 4
/*
 *	I don't think that NEWS/OpenWindows should be the default -- if
 *	you want NeWS/OpenWindows, just comment in the followingl.
 */

/* #  define NEWS */
#endif

/*
 * SELFILE
 *   Set this if you want to use Erik M. van der Poel's file selection
 *   widget. This just adds a new `Browse' button; files can still be
 *   be specified using the `Set Directory' and `Open' buttons.
 *
 */
#define SELFILE

/*
 * you can change this to transientShellWidgetClass if you like; however,
 * the mouse cursor won't be positioned under the 'confirm' button
 * automatically on the goto & print popups.
 */
#if 1
  POPUP_WINDOW_TYPE	=overrideShellWidgetClass
#else
  POPUP_WINDOW_TYPE	=transientShellWidgetClass
#endif

/*
 * common Make macros
 */
     LIBTEXROOT = ../
      LIBTEXSRC	= ../libtex
         LIBTEX	= $(LIBTEXSRC)/libtex.a
      DEPLIBTEX	= $(LIBTEX)

/*
 * 	 Undefine GETOP if your loader complains about multiple ref's.
 */
#if 1
  GETOPT=getopt.o
#else
  GETOPT=
#endif

/*
 *	Define STRTOL if your system does not provide strtol
 */
#if 0
  STRTOL=strtol.o
#else
  STRTOL=
#endif
