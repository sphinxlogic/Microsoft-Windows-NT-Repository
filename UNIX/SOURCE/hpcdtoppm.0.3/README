This is Version 0.3 of hpcdtoppm, Hadmut's pcd to ppm converter.
It has this name to be distinguishable in case someone
else is producing a program also called pcdtoppm.

Read the README.TOO !

This program converts Photo-CD-Images to the ppm-Format of
pbmplus. You can compile the program in two ways:

1. Use its own ppm-writing-routines. In this case
   you don't need ppm-includes or libraries. You
   have to define macro 'OWN_WRITE' in the source or
   by compiler-option. I am not sure, whether the
   format of the ppm-header is the same on non-unix
   machines. If you get problems with line-endings
   (things like CR, LF, CR/LF), modify the macro
   PPM_Header.

2. You can use the trusted pbmplus-routines. In this case
   you need some files from the pbmplus package to compile:

   ppm.h pgm.h pbm.h pbmplus.h libppm.a libpgm.a libpbm.a


IMPORTANT: Some older versions of the gcc have problems with
optimization. They produce buggy code. This code will not
die with 'segmentation fault' or something like that, it 
just produces damaged images. 

I did not have detailed information of the file-format and
i could test it only with a single Photo-CD with 24 Images.
Most of my information i got by starring at the hex-dumps
of an image file. So i am not absolutly sure, whether it
works on all Photo-CDs, because there are some bytes in
the header which i don't understand. But it works on
my Photo-CD.

Note that you will get a 24 bit image. You can view these
files with xv, but if you have an 8-bit-screen you will
sometimes have some color-defects (if you have an 1-bit-screen
you will often have a lot of color-defects :-). 
It will also take some time to show with xv.

You can produce nice overview prints if you get the icontact
program of Mark B. Hanson and put something like

decode	pcd	hpcdtoppm -1 -a

in your ~/.icrc .


If you compile the program on a machine other than
SPARC please send me a short email which machine
you are using, whether you had problems or which
changes you have made.

Hadmut  (danisch@ira.uka.de)

