               README for XFree86 2.1 on BSDI 1.0
               ----------------------------------

Contents
--------
    1) What and Where is XFree86?
    2) Configuring X for Your Hardware
    3) Running X
    4) Rebuilding the XFree86 Distribution


1 - What and Where is XFree86?
------------------------------
  XFree86 is a port of X11R5 that supports several versions of Intel-based
Unix.  It is derived from X386 1.2, which was the X server distributed
with X11R5.  This release consists of many new features and performance
improvements as well as many bug fixes.  The release is available as
source patches against the MIT X11R5 code, as well as binary distributions
for many architectures.

The sources for XFree86 are available by anonymous ftp from
ftp.x.org in /contrib/XFree86 and ftp.physics.su.oz.au in /XFree86.
There is no binary release available for BSD/386.

2 - Configuring X for Your Hardware
-----------------------------------
  You *must* edit /usr/X386/lib/X11/Xconfig to suit your hardware.

The Xconfig file tells the X server what kind of monitor, adapter and
mouse you have.  XFree86.man, Xconfig.man and README.Config describes
the contents.

  Once you understand the structure of Xconfig, try to find your specific
monitor and video card in the modeDB.txt and/or AccelCards files.  If your 
Clocks and ModeDB lines are there, grab the values there and put them in 
your Xconfig.

  If modeDB.txt does not have your monitor, and the generic video modes
don't work, read VideoModes.doc for instructions on how to create the video 
timing values given your vga card and monitor specs.  The manual for your 
monitor and adapter should have these values.

  The server will print out the Clocks values for your vga card if you leave
the Clocks line out of your Xconfig and run:

   X -probeonly >& x.out

If your mouse does not work try using kermit or tip to connect to the
mouse serial port and verify that it does indeed generate characters.

3 - Running X
-------------
  8mb of memory is a recommended minimum for running X.  The server,
window manager and an xterm take about 2.5 Mb of memory themselves.  On a
4Mb system that would leave very little left over for other applications
like gcc that expect a few meg free.  X will work with 4Mb of memory, but
in practice compilation while running X can take 5 or 10 times as long due
to constant paging.

The easiest way for new users to start X windows is to type 'startx >&
startx.log'.  Note that this redirects error messages to a file that would
otherwise be lost.  To get out of X windows, exit from the console xterm.
You can customize your X environment using .xinitrc, .xserverrc, and
.twmrc files in your home directory as described in the xinit and startx
man pages.

Or you can run the X display manager (xdm).  Root can invoke `xdm -nodaemon'
on the console to start the display manager.  If you would rather run xdm on
bootup, add code like the following to your /etc/rc.local script.

  if [ -x /usr/X386/bin/xdm ]; then
    echo -n ' xdm'; /usr/X386/bin/xdm
  fi

4 - Rebuilding the XFree86 Distribution
---------------------------------------

  The INSTALL file describes how to create and build the XFree86-2.1 source
distribution.
  When building for BSD/386, the default compiler is gcc-1.40. If you want to
use gcc-2.4.5, define "#define HasGcc2 YES" in config/site.def. The compiler
command used is "cc" for gcc-1.40 and "gcc" for gcc-2.4.5. If you use
gcc-2.4.5, make sure "gcc" starts the correct compiler.
  The default installation path is /usr/X386. This path can be redefined with
"#define ProjectRoot /xxx/yyy" in config/site.def.
  If you need to create the fonts, use "#define BuildFonts YES" in
config/site.def. The default is to skip the font creation.

  If you are using X when doing "make World", keep the number of open windows
to a minimum or you may get "Can't fork" errors from make. Another way to
avoid this problem is to raise your process limit to 64. If you are using
bash the command is "ulimit -u 64". With csh use "limit maxproc 64".

  The make program distributed with BSD/386 1.0 has been seen doing
recompilations in the wrong order. When that happens, you can usually restart
the make and it will complete OK. Gnu Make 3.70 works much better and builds
without problems on BSD/386 1.0.

$XFree86: mit/server/ddx/x386/README.Bsdi,v 2.4 1994/03/05 11:54:56 dawes Exp $
