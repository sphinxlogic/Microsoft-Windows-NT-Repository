.\" @(#)$Id: Ref.guide,v 5.13 1992/12/12 01:27:41 syd Exp $
.\"
.\"  Reference guide to the Elm mail system.
.\"  format with 
.\"      troff tmac.n Ref.guide > Ref.format
.\"
.\"  Elm is now in the public trust. Bug reports, comments, suggestions, flames
.\"  etc. should go to:
.\"	Syd Weinstein		elm@DSI.COM (dsinc!elm)
.\"
.\"  (C) Copyright 1986,1987 Dave Taylor
.\"  (C) Copyright 1988-1992 Usenet Community Trust
.\"
.\"  $Log: Ref.guide,v $
.\" Revision 5.13  1992/12/12  01:27:41  syd
.\" Make verb and pronoun agree.
.\" From: dwolfe@pffft.sps.mot.com (Dave Wolfe)
.\"
.\" Revision 5.12  1992/12/07  02:41:21  syd
.\" This implements the use of SIGUSR1 and SIGUSR2 as discussed on the
.\" mailing list recently, and adds them to the documentation.
.\" From: scs@lokkur.dexter.mi.us (Steve Simmons)
.\"
.\" Revision 5.11  1992/11/07  19:37:21  syd
.\" Enhanced printing support.  Added "-I" to readmsg to
.\" suppress spurious diagnostic messages.
.\" From: chip@chinacat.unicom.com (Chip Rosenthal)
.\"
.\" Revision 5.10  1992/11/07  16:31:15  syd
.\" another typo (2.4.6 Ref.guide)
.\" From: David.W.Tamkin@gagme.chi.il.us (David W. Tamkin)
.\"
.\" Revision 5.9  1992/10/30  20:56:37  syd
.\" Things I found in doc/Ref.guide looking over patches 4 & 5:
.\" From: dwolfe@pffft.sps.mot.com (Dave Wolfe)
.\"
.\" Revision 5.8  1992/10/24  13:53:16  syd
.\" I think all these are typos
.\" From: dwolfe@pffft.sps.mot.com (Dave Wolfe)
.\"
.\" Revision 5.7  1992/10/24  13:44:41  syd
.\" There is now an additional elmrc option "displaycharset", which
.\" sets the charset supported on your terminal. This is to prevent
.\" elm from calling out to metamail too often.
.\" Plus a slight documentation update for MIME composition (added examples)
.\" From: Klaus Steinberger <Klaus.Steinberger@Physik.Uni-Muenchen.DE>
.\"
.\" Revision 5.6  1992/10/24  13:25:41  syd
.\" In our global elm.rc I keep the four options as below
.\"
.\" 	confirmappend = OFF	Don't confirm every append to any file.
.\" 	confirmcreate = ON	Confirm creation of every new file.
.\" 	confirmfiles = ON	Confirm append to non folder files though.
.\" 	confirmfolders = ON	In case someone does not want to be asked
.\" 				every time when creating a new file try
.\" 				to confirm creation of folders though.
.\" From: Jukka Ukkonen <ukkonen@csc.fi>
.\"
.\" Revision 5.5  1992/10/17  22:58:57  syd
.\" patch to make elm use (or in my case, not use) termcap/terminfo ti/te.
.\" From: Graham Hudspith <gwh@inmos.co.uk>
.\"
.\" Revision 5.4  1992/10/17  22:01:01  syd
.\" corrected typos
.\" From: David.W.Tamkin@gagme.chi.il.us (David W. Tamkin)
.\"
.\" Revision 5.3  1992/10/11  01:33:36  syd
.\" fixed a bug in the .lp macro in doc/tmac.n.  The lp macros is always
.\" called with a unit specified for the second argument, however, the
.\" macro added a "n" unit specifier to that argument.  The following patch
.\" fixes this problem.
.\"
.\" The various .guide books use the troff .tl macro liberally, but often the
.\" extra ' characters needed at the end of the lines to explicitly specify
.\" the trailing nulls fields were left off.  The following patch fixes the
.\" erroneous lines.
.\" From: Larry Philps <larryp@sco.COM>
.\"
.\" Revision 5.2  1992/10/04  01:15:43  syd
.\" Emphasize that hostdomain, hostname and hostfullname must all be specified
.\" if one is specified in elmrc file.
.\"
.\" Revision 5.1  1992/10/03  20:51:50  syd
.\" Initial checkin as of 2.4 Release at PL0
.\"
.\" 
.\"
.po 1i
.ds h0
.ds h1
.ds h2
.ds f0
.ds f1
.ds f2
.nr Hy 1
.nr Pt 1
.nr Pi 0
.lg 0
.nf
.na
.rs
.za
.sv |3.0i
.ce 99
.ps 20
.ss 18
.vs 12
\f3The Elm Reference Guide\f1
.sp 4
.ps 12
.ss 14
.vs 14
\f2A comprehensive list of all commands, 
options and such to the \f3Elm\fP mail system\f1
.sp 3
The Elm Mail System
(Version 2.4)
.sp 2
Syd Weinstein, Elm Coordinator
Datacomp Systems, Inc.
3837 Byron Road
Huntingdon Valley, PA 19006-2320
.sp
email: elm\s-1@\s+1DSI.COM  or  dsinc\s-1!\s+1elm
.sp |9.0i
\s18\f3\(co\f1\s12 Copyright 1986,1987 by Dave Taylor
\s18\f3\(co\f1\s12 Copyright 1988-1992 by The USENET Community Trust
.fi
.ad
.bp 1
.sv 5v
.ce 99
.ps 14
.vs 16
\f3The Elm Reference Guide\f1
.ds h0 "Elm Reference Guide
.ds h1
.ds h2 "Version 2.4
.ds f0 "October 1, 1992
.ds f1
.ds f2 "Page %
.sp
.ps 10
.ss 12
.vs 12
(The Elm Mail System, \*(h2)
.sp
\*(f0
.sp 2
Syd Weinstein
Datacomp Systems, Inc.
3837 Byron Road
Huntingdon Valley, PA 19006-2320
.sp
email: elm\s-1@\s+1DSI.COM  or  dsinc\s-1!\s+1elm
.sp 2
Derived from
"The Elm Mail System, Version 2.0"
by
Dave Taylor
Intuitive Systems
Mountain View, California
email: taylor\s-1@\s+1intuitive.com  or  limbo\s-1!\s+1taylor
.ce 0
.sp 3
.hn 1 Introduction

There are many parts to a complex software system and \f3The Elm
Mail System\f1
is no different.  This document describes fully all the options 
available in the mailer, including the command line options,
the commands (in considerably more detail than
in \f2The Elm Users Guide\f1) and 
the \f2.elm/elmrc\f1 file.

To be more explicit, this document covers:
a discussion of 
the \f2.elm/elmrc\f1 file,
command line options of \f2elm\f1, 
outgoing mail processing,
responses of various commands,
mail archive folders,
the Alias system,
system aliases etc,
more on the \f3Elm\f1 utilities,
and a section for expert mail users.

Without any further ado, then, let's get this show on the road!!
.sp
.hn 1 "The .elm/elmrc File"

Elm, like lots of other software on the
.ux
system, has the ability to automatically read 
in a configuration file at each invocation.  The file must be
called \f2elmrc\f1 and reside in the \f2.elm\f1 directory located
in your home directory.  It can have any of the entries below, in any order.
If you are missing any entries, or if you don't have an \f2.elm/elmrc\f1
file, the default values (listed below for each option) or those values specified
by your systems administrator in a system wide \f2elm.rc\f1 file will be used.
Note that those options below designated with * can be altered
using elm via the o)ptions screen while those designated with a + can be placed
on the options screen using the \f2configoptions\f1 variable.
Also note that when you save a new \f2.elm/elmrc\f1 file via the `>' command
of the options
screen, it will be (re)created only including those options that you
have changed via your original \f2.elm/elmrc\f1 file or via the o)ptions screen.
.br
.sp 
.ne 8
.hu String Variables

.lp aliassortby* 1.0i
You can have your alias display sorted by any of the following ways:
.sp
.ta 1i
alias	This will sort according to \f2aliasname\f1 for each address.

name	This will sort according to \f2username\f1 for each address.

text	This will present the aliases in the order found in the 
\f2aliases.text\f1 file.
.sp
Each of these fields can also optionally be prepended with the
sequence ``reverse-'' to reverse the order of the sort.  This doesn't
imply anything about the order of the message in the \f2aliases.text\f1
file itself and affects only their order on the display screen.  (The
default is \f2name\f1 order.)

.lp alteditor+ 1.0i
The editor to use when mailing to a message that already includes text,
as the "builtin" editor cannot handle that situation.  Messages that
already include text are forwarded messages and replies where the
original message is included in the reply.  This value is not needed
if the \f2editor\f1 is not "builtin".

.lp alternatives 1.0i
This is a list of other machine/username combinations
that you receive mail from (forwarded).  This is used 
when the \f2group reply\f1 feature is invoked to ensure that
you don't send yourself a copy of the outbound message.
(The default is a list of no alternatives.)

.lp attribution 1.0i
When you \f2forward\f1 a message or \f2reply\f1 to it, you can
optionally attribute the quoted text to its original author.
Defining the attribution string here allows you to indicate the
form that the attribution should take.  The sequence `%s' in the
attribution will be replaced by the name of the original author.
Examples are:
.nf
.ft CW
.zf
	attribution = According to %s:
	attribution = %s writes:
.ft 1
.fi

.lp calendar* 1.0i
This is used in conjunction with the `<' \f2scan message for
calendar entries\f1 command, as the file to append any found
calendar entries to.  (The default is \f2calendar\f1 in your home directory.)

.lp charset 1.0i
This is the Character Set used for Messages with Content-Type: text/plain.
The default depends on your site's installation, but is usually 
\f2US-ASCII\f1. \f2charset\f1 is only recognized if \f2MIME\f1
support is configured. You could set charset to your preferred 
national Character Set. But be aware, that there is currently no way
to change it online. Also you must be aware that Elm probably needs
metamail to display messages with charset=US-ASCII, if you change 
charset. Elm tries to know which charset could display \f2US-ASCII\f1
too, but its list of compatible charsets is probably not complete.

.lp displaycharset 1.0i
This is the Character Set which is supported by your terminal.
The default depends on your sites installation but is usually
\f2US-ASCII\f1. For Sites with X-Windows support, \f2ISO-8859-1\f1
would be a reasonable default.

.lp compatcharsets 1.0i
This is the list of Character Sets, which are more or less a superset
of US-ASCII. This enables Elm to display messages with charset=US-ASCII
with the builtin pager, or your preferred pager instead of calling
metamail. \f2compatcharsets\f1 is only recognized if MIME support
is configured. Currently the ISO-8859-X character sets are default.

.lp configoptions 1.0i
This is a list of letters that indicate which of the run-time
configurable options you desire placed on the o)ptions screen.  There
are 22 run-time configurable options, but only room for 15 on the
normal sized screen.  The default list is \f2^_cdefsopyv_am_un\f1.  Two
additional characters can be specified for formatting.  Those are '_', which
adds a blank line, and '^', which places the title message on that line
instead of the bottom of the screen.  The
letters 'i', 'q', and 'x' are reserved for "return to index", "quit,"
and "exit" respectively and are not listed as part of the configoptions
list.  The options controlled by each letter are:
.sp
.ta 0.5i
a	A)rrow cursor \f2(arrow)\f1
.br
b	B)order on copy \f2(prefix)\f1
.br
c	C)alendar file \f2(calendar)\f1
.br
d	D)isplay mail using \f2(pager)\f1
.br
e	E)ditor (primary) \f2(editor)\f1
.br
f	F)older directory \f2(maildir)\f1
.br
h	H)old sent message \f2(copy)\f1
.br
j	J) reply editor \f2(alteditor)\f1
.br
k	K) pause after pager \f2(promptafter)\f1
.br
l	A(l)ias Sorting \f2(aliassortby)\f1
.br
m	M)enu display \f2(menu)\f1
.br
n	N)ames only \f2(names)\f1
.br
o	O)utbound mail saved \f2(sentmail)\f1
.br
p	P)rint mail using \f2(print)\f1
.br
r	R)eply copies msg \f2(autocopy)\f1
.br
s	S)orting criteria \f2(sortby)\f1
.br
t	T)ext editor (~e) \f2(easyeditor)\f1
.br
u	U)ser level \f2(userlevel)\f1
.br
v	V)isual Editor (~v) \f2(visualeditor)\f1
.br
w	W)ant Cc: prompt \f2(askcc)\f1
.br
y	Y)our full name \f2(fullname)\f1
.br
z	Z) signature dashes \f2(sigdashes)\f1

.lp easyeditor+ 1.0i
The editor to be used by the ~e escape within the "builtin" editor.
The default value is the value of the configuration option emacs_editor.

.lp editor* 1.0i
The editor to use when typing in new mail.  If you select
``none'' or ``builtin'' you'll get a Berkeley Mail style
interface for all mail that doesn't already have text
in the buffer (e.g. a reply, mail with a ``signature'', etc).
There are two possible formats for it, either a command that
can have a filename affixed to (as a suffix) before being
executed, or a string that contains the meta-sequence `%s'
which will be replaced by the name of the file before being
executed.  Examples of each are:
.nf
.ft CW
.zf
      editor = emacs -nw
      editor = emacs -nw %s -f text-mode -f turn-on-auto-fill
.br
.ft 1
.fi
(The default is to use the value of $EDITOR in your
current environment, and if not set, an editor selected by
the person who configured \f2elm\f1 for your system.)

.lp escape 1.0i
The character used with the ``builtin'' editor (see above)
to escape from text entry to input a command.
When a line begins with this character, the editor interprets it
as a command rather than as text to add.
(The default is ``~''.)

.lp fullname* 1.0i
This is the name the mailer will use in messages
you send.  It is highly recommended that you use your
full name and nothing strange or unusual, as that can
appear extremely rude to people receiving your mail.
(The default is to use the ``gcos'' field from the \f2/etc/passwd\f1 file
on systems that use this field to store full names, and to use the contents
of \f2.fullname\f1 in your home directory on other systems.)

.lp hostdomain 1.0i
This is the domain name of your system.
This variable is only valid in the system wide \f2elm.rc\f1 file.
It is only necessary if the value returned by
the getdomainname system call is incorrect for your mail use or if that system
call is unavailable on your system.
If this variable is specified, then the hostfullname variable must also be specified.

.lp hostfullname 1.0i
This is the full "Fully Qualified Domain Name" of your system.
This variable is only valid in the system wide \f2elm.rc\f1 file.
It is only necessary if the value returned by the getdomainname and
gethostname system calls are incorrect for your mail use or if those
system calls are unavailable on your system.  It is also required if either
hostdomain or hostname are used within the system wide \f2elm.rc\f1 file.

.lp hostname 1.0i
This is the local node name of your system.
This variable is only valid in the system wide \f2elm.rc\f1 file.
It is only necessary if the value returned by
the gethostname system call is incorrect for your mail use or if that system
call is unavailable on your system.
If this variable is specified, then the hostfullname variable must also be specified.

.lp localsignature 1.0i
See signature.

.lp maildir* 1.0i
This is your folder directory.
When you specify a folder name beginning with the `=' metacharacter\s-2\u1\d\s0,
.fn
1. Note that `%' and `+' are synonymous with `=' throughout \f2elm\f1
.ef
it stands for this directory name.  That is,
if you save a message to folder \f2=stuff\f1
the `=' will be expanded to the current value of \f2maildir\f1.
(The default is the directory \f2Mail\fP in your home directory.)

.lp pager* 1.0i
This is the program to be used to display messages.  You can
specify ``builtin'' or the name of any standard pager.  If you
use ``builtin+'', each screenfull of displayed message is
``paged'' from the top of your screen with a title line,
while ``builtin'' simply ``scrolls up'' subsequent screenfulls once
it has ``paged'' the first screenfull.
(The default is to use the value of $PAGER in your
current environment, and if not set, a pager selected by
the person who configured \f2elm\f1 for your system, quite likely ``builtin+''.)

.lp precedences 1.0i
Some mail transports will look at a ``Precedence'' header in outbound
mail messages to determine how to deliver the message.  The Elm header
editing menu allows you to place a precedence on your mail messages.
By default, Elm will allow any value to be specified as the message
precedence.  This option may be used to restrict the allowed precedences
to a particular list.  For example, you might say:
.nf
.ft CW
.zf

precedences = special-delivery air-mail first-class bulk junk

.br
.ft 1
.fi
Exactly what precedences your mail transport supports and what they
do (if anything at all!) will vary from site to site.

The distinction between the ``Precedence'' and ``Priority'' headers
is subtle:  the precedence tells the mail system how to handle the
message and the priority tells the recipient how important the message
is.  Although these are quite different things, they are often related.
This option will also allow you to associate message priorities with
precedences.  For example, you might say:
.nf
.ft CW
.zf

precedences = special-delivery:urgent air-mail:urgent first-class bulk junk

.br
.ft 1
.fi
In this example, if you select an ``air-mail'' precedence then the
message priority will default to ``urgent''.  If you select a
``first-class'' precedence then no special priority is implied.  The
priorities given in this field will be used only if you have not already
assigned a priority to your message, and even if one is assigned you
can always go back and change it.

.lp prefix+ 1.0i
When you \f2reply\f1 to a message or \f2forward\f1 a message to another person,
you can optionally include the original message.  Defining the
prefix value here allows you to indicate what the prefix of 
each included line should be.  (The default is ``>\ '' and is
standard in the Unix community.)

.lp print* 1.0i
This is the command used for printing mail messages.  There are two
possible formats for the command, depending whether or not the command
contains the sequence `%s'.  In the first form the mail message(s) to
be printed are fed into the specified command.  An example of this
form is:
.sp
.ft CW
.zf
	print = print -formfeed
.ft 1
.sp
In the second form the mail message(s) to be printed are dumped into
a temporary file, and a `%s' in the command string is replaced with
the name of the temporary file.  An example of this form is:
.sp
.ft CW
.zf
	print = pr %s | lpr
.ft 1
.sp
Another significant difference between the two forms is that in the
second form all output from the command is discarded, but in the first
form the command all output will be displayed on the terminal.  For
example, if you wish to use the ``pass-through'' feature to print on
the aux port of a terminal, you must use the first form.  The second
form is provided for backward compatibility with old versions of Elm.
It is depreciated and might be removed in a future release.  (The
default is set by the person who configured \f2elm\f1 for your system.)

.lp receivedmail 1.0i
This is the folder to which incoming mail is saved after you've read it.
When you answer \f2no\f1 (`n') to the ``keep unread messages in 
your incoming mailbox?'' prompt or \f2yes\f1 (`y') to the ``store read
messages in your "received" folder?'', this is where the messages go.
(The default is "=received", that is,
a folder called \f2received\f1 in your \f2maildir\f1 directory).

.lp remotesignature 1.0i
See signature.

.lp sentmail* 1.0i
This is the folder to which a copy of outgoing mail is automatically
saved.  This will only be done if the \f2copy\f1 flag
is turned on (see below).  Also note that if the \f2savename\f1 feature
(see below) is enabled then this folder may be ignored since the program
may save to a folder that has the same name as the login
of the person you're sending to.
Whether or not a copy is saved, and to what folder, can be changed just
prior to sending a message, see below.
(The default is "=sent", that is,
a folder called \f2sent\f1 in your \f2maildir\f1 directory).

.lp shell 1.0i
This defines the shell to use when doing ``!'' escapes and
such.  (The default is to use the value of $SHELL in your
current environment, and if not set, a shell selected by
the person who configured \f2elm\f1 for your system.)
Note: the ``!'' escape is optional and may not be enabled in your
version of Elm.

.lp signature 1.0i
This file, if defined, will be automatically appended to all
outbound mail before the editor is invoked.  Furthermore, 
if you'd like a different ``.signature'' file for \f2local\f1
mail and \f2remote\f1 mail (remote being via other hosts), 
you can alternatively define two variables, \f2localsignature\f1
and \f2remotesignature\f1, to have the same functionality.
(The default is to not have signatures appended to your message.)

.lp sortby* 1.0i
You can have your folder sorted by any of the following ways:
.sp
.ta 1i
from	This will sort according to whom each message is \f2from\f1.

lines	This will sort \f2shortest\f1 to \f2longest\f1 by message.

mailbox	This will leave the messages in the order found in the folder.

received	This will sort \f2least recently received\f1 to 
\f2most recently received\f1.

sent	This will sort \f2least recently sent\f1 to \f2most recently sent\f1.

status	This will sort by priority, action, new, tagged, then deleted.

subject	This will sort according to the \f2subject\f1 of each message.
.sp
Each of these fields can also optionally be prepended with the
sequence ``reverse-'' to reverse the order of the sort.  This doesn't
imply anything about the order of the message in the folder
itself and affects only their order on the index screen.  (The
default is \f2mailbox\f1 order.)

.lp tmpdir 1.0i
Use this if you want to define your own directory for the temporary
file Elm creates while running.  This is only necessary if using the
system temporary directory could cause problems, such as when not all
NFS clients mount the common temporary directory, or when the temporary
directory is prone to being cleared periodically.  The default entry
of the system temporary directory is normally ok.

.lp visualeditor+ 1.0i
The editor to be used by the ~v escape within the "builtin" editor.
The default value is the value of the configuration option vi_editor.

.lp weedout 1.0i
When specifying this option, you can list headers that
you \f2don't\f1 want to see when you are displaying a message.
This list can continue for as many lines as desired, as 
long as the continued lines all have leading indentation.
All headers in this entry append to the default weedout list.
There are two special header flags. The first, *clear-weed-list*,
will clear the default list.  The second, *end-of-user-headers*,
will terminate the entry, in case the following lines look like they
might be more headers for the list.
(The default is ``Received:'' and others.)
.br
.ne 8
.hu Numeric Variables

.lp bounceback 1.0i
This is a hop count threshold value and allows you to
set up the mailer so that when you send mail more than
\f2n\f1 machines away, it'll automatically include a
``Cc:'' to you through the remote machine.  In practice
this should be very rarely used.  (Note: this refuses to
bounce mail off an Internet address.  The default is to
have it set to zero, which disables the function)

.lp timeout 1.0i
On more advanced systems, it's nice to start up the 
mailer in a window and let it sit in background 
unless new mail arrives (see \f2wnewmail\f1 for
another window based program) at which point
it can be brought up to the forefront of the system 
and read.  In this case, it would be quite convenient
to have the mailer internally resynchronize every
so often.  This option specifies the number of seconds that this occurs.
.sp
This is also useful for normal terminals, for example you can
leave \f2elm\f1 running at night (I usually do) and when you
come in in the morning it'll be all ready to read your mail!
.sp
(The default is a 300 second (5 minute) timeout period).

.lp userlevel* 1.0i
This is what the program uses to determine the relative level of
sophistication of the user \(em the values are 0 for a new user (the
default), 1 for someone familiar with \f2elm\f1 
user, and 2 for experts.  Some advanced features are hidden from novice
users, while experts get less verbose prompt messages.
.br
.ne 8
.hu Boolean Variables

.lp alwaysdelete 1.0i
When set, this changes the default answer
of the prompt ``Delete messages?'' to the indicated value.  The value
for \f2alwaysdelete\f1 also applies to deletions from the alias system.  
(The default is
to have the answer be \f2No\f1 (i.e. alwaysdelete = OFF).)

.lp alwayskeep 1.0i
This sets the default answer
on the ``keep unread mail in incoming mailbox''
However, if you answered \f2No\fP to the ``store read
mail in "received" folder''
it is presumed that you'd also want to keep your unread mail in the
incoming mailbox, too, and the value of alwayskeep is ignored.
(The default is to have the
default answer be \f2Yes\f1 (i.e., alwayskeep = ON).)

.lp alwaysstore 1.0i
This sets the default
answer on the ``store read mail in "received" folder'' prompt
to the value indicated.  (The default is to have the default
answer be \f2No\f1 (i.e., alwaysstore = OFF).)

.lp arrow* 1.0i
Sometimes you are forced to use a slow, or ``dumb'' terminal.  In this
case, you can force the current message pointer to be the ``->''
sequence rather than the inverse bar.  (Note that this is
overridden by the similar `-a' command line option,
see below.)  (The default is OFF.)

.lp ask 1.0i
This allows you to tell the \f2elm\f1 system that 
you'd rather not be asked ``Delete Mail?'' and such each time you 
quit, resynchronize a folder or change folders,
and instead it should just use the values of
``alwaysdelete'', ``alwaysstore'', and ``alwayskeep'' without prompting.
(Note that when you quit \f2elm\fP, if you use `Q' instead of `q', you will
never be questioned, regardless of how you have \f2ask\f1 set.)
(The default is ON, i.e. to ask the questions.)

.lp askcc+ 1.0i
If turned off, this will allow you to send mail without being
presented the ``Copies to:'' prompt for each message. This
still allows you to explicitly include addresses in the ``cc''
list via either ``~c'' in the builtin editor, or via using the
header editor.  (The default is ON, i.e. to ask about copies.)

.lp autocopy+ 1.0i
If turned on, this will automatically copy
the text of each message being replied to into the edit
buffer.  Otherwise you will be prompted as to whether you want
the message included in yours. (See the \f2prefix\f1 
option above.)  (The default is OFF.)

.lp confirmappend 1.0i
When set to ON this will force elm to ask for permission
to append messages to the end of any file that already exists.
If the file is a mail folder in the user's mail directory
or an ordinary file makes no difference.
(The default is OFF.)

.lp confirmcreate 1.0i
When set to ON elm will ask for permission before it creates
a new file to store any messages in it.
It makes no difference whether the new file would be a mail
folder in the user's mail directory or an ordinary file.
(The default is OFF.)

.lp confirmfiles 1.0i
This will allow you to have some last resort control over elm
when a message would be appended (by copying, saving or auto-cc)
to an existing file which is not a folder in your mail directory.
(See maildir above.)
When set to ON elm will ask you for permission to append a message
to the end of an ordinary file.
When set to OFF elm will operate just as before and silently
add your message to the end of the specified file whether
it is a folder or not.
(The default is OFF.)

.lp confirmfolders 1.0i
When set to ON this will allow you to be asked about creation
of new mail folders in your mail directory. (See maildir above.)
When set to OFF elm will silently create new mail folders
whenever a copy of a message is going to be stored in a folder
that does not already exist.
(The default is OFF.)

.lp copy+ 1.0i
This, in combination with the \f2sentmail\f1 folder, will
allow you to have silent copies of all outgoing mail
made on the outbound step.  
Whether a copy is saved and to which folder can be set prior to sending
a message, see below.
(The default is OFF.)

.lp forcename 1.0i
This, in combination with the \f2savename\f1 option, governs
how a copy of an outgoing message will be saved.  (See \f2savename\f1 below
for details.)  (The default is OFF.)

.lp forms 1.0i
Enables the generation of and replies to forms type messages.
See the \f2Elm Forms Mode Guide\f1 for further information about
mail forms.

.lp keepempty 1.0i
The mail system has a habit of deleting folders when you've
removed everything from them.  With this option turned on, it will
instead preserve them as zero-byte files.
This option does not apply to your incoming mailbox.
(The default is OFF.)

.lp keypad 1.0i
If on, this tells \f2elm\f1 that you have an HP terminal and enables
the <NEXT>, <PREV>, <HOME> and <SHIFT-HOME> keys.  (The default is OFF.)

.lp menu* 1.0i
If turned off, this will inhibit the Menu display on all of the 
screen displays within the \f2elm\f1 program.  (Note that this is
overridden by the similar `-m' command line option,
see below.)  (The default is ON.)

.lp metoo 1.0i
If turned on, a user will get a copy of a message he sends to a
mailing list he is on.  Otherwise the user will not get a copy of
message sent to a mailing list he is on. (The default is OFF.)

.lp names* 1.0i
If turned off, the primary recipients' address is displayed on your
screen with their full names when you send a message.  Otherwise,
only the full names are given.  (The default is ON.)

.lp movepage 1.0i
If this is enabled then commands that move through the
folder by pages (the `+', `-', <right-arrow>, and <left-arrow> keys)
will also move the current message pointer to the
top of that page of messages.  If this is turned off 
then moving through the pages doesn't alter the
current message pointer location.
(The default is OFF.)

.lp noheader 1.0i
This boolean flag tells the mailer not to include the 
headers of messages when copying a message into a file
buffer for replying to or forwarding.
(The default is ON.)

.lp pointnew 1.0i
If this is turned on, the mailer will be automatically 
pointing to the first new message in your folder when started, instead
of at message #1.  This will only be effective for the incoming mailbox since
other folders are not expected to have `new' mail.  (The default is ON.)

.lp promptafter+ 1.0i
If this flag is ON and you use an external pager,
when the pager exits, you will be prompted for a command rather
than returned directly to the index screen.
If the external pager you are using exits when it reaches end of file
(i.e. end of the message), you should have this flag ON,
otherwise the last screen of the displayed message will not be held
but instead be immediately replaced by the index screen.
If the external pager you are using does not exit until you command it to exit,
you have a choice.
If you usually want to see the index screen before issuing a command,
having the flag OFF will cut down out the extra keystroke needed to return
to the index screen.
If you usually don't need to see the index screen to before issuing the
next command,
having the flag ON will allow you to proceed with your next command without
having to wait for the redrawing of the index screen.
(The default is ON.)

.lp resolve 1.0i
This is a boolean flag that defines the behavior of the
program for such actions as deletion, saving a message 
and so on.   Specifically, with this option enabled, as
soon as mail is `dealt with' the program moves you to the
next message in the folder, with deletion, undeletion,
saving a message and forwarding a message all being treated as
dealing with email in this manner.
(The default is ON.)

.lp savename 1.0i
One of the problems with electronic mail systems is that one
tends to get very large, one-dimensional (flat) files that
contain lots of completely unrelated mail.  If this option
is turned on, \f2elm\f1 will use a more intelligent 
algorithm \(em on incoming mail, when you \f2save\f1 or \f2copy\f1 it,
the default mailbox to save to (changeable by pressing anything other than
<return> of course) is a folder that is the \f2login name\f1 of the
person who sent you the message.  Similarly, when sending mail out,
instead of just blindly saving it to the \f2sentmail\f1 folder, \f2elm\f1
will save it to a folder that is the login name of the 
person who is to receive the mail\s-2\u2\d\s0.
.fn
2. When sending to a group, it's saved to the first person in the 
list only.
.ef

If \f2forcename\f1 is off (see above), the copy will be saved to
that folder only if the folder already exists.  In practice,
this means that important people that you communicate
with (those that you tend to save mail from) have folders that are
actually \f2a recorded log of the discussion in both directions\f1
and those others (random mailings) are all stuffed in the \f2sentmail\f1
folder for easy perusal and removal.

Otherwise, if you always want to save copies of outgoing messages
in separate folders by recipient login name,
you'll want to set \f2forcename\f1 to on.  (The
default for \f2savename\f1 is ON.)

.lp sigdashes+ 1.0i
If on, this tells \f2elm\f1 that you wish to follow the convention of prefixing
your signature with newline dash dash blank newline.  This will be placed in
your message before your signature file.  If off, the signature file is placed at
the end of the message without any prefix.

.lp softkeys 1.0i
If on, this tells \f2elm\f1 that you have an HP terminal with the
HP 2622 function key protocol and that you'd like to have them available
while in the program.  (The default is OFF.)

.lp titles 1.0i
This flag allows you to have the first line of a message
titled with:
.sp
.ft CW
.zf
.ps 9
.nf
.tl '           Message \f2N/M\fP from \f2username\fP''\f2date\fP at \f2time\f1      '
.fi
.ps 10
.ft 1
.sp
where all the information has been previously extracted
from the message.
This is especially useful if you weed out all the headers of each
message with a large `weedout' list.
(The default is ON.)

.lp usetite 1.0i
This flag allows you to enable/disable use of the \f2termcap/terminfo\f1
\f3ti/te\f1 capabilities.
Many terminal emulators require it (not the least of which is the
OpenLook \f2cmdtool\f1).
Some terminal emulators clear the screen on \f3te\f1 (some \f2xterm\f1s).
(Note that this is overridden by the similar `-t' command line option,
see below.)  (The default is ON.)

.lp weed 1.0i
This is a boolean flag that, in combination with the
``weedout'' list, allows you to custom define the set of
headers you would like to not have displayed while reading
messages.  
(The default is ON.)
.in 0
.sp
One more thing: the format for each of the lines is:
.nf
.ft CW
.zf
.ti .5i
variable = value\f1
.fi
and for boolean variables, \f2value\f1 can be `ON' or `OFF' only.
.sp
For a better idea of how this all works, here's 
my \f2.elm/elmrc\f1 file.
While looking through it, notice that you can have lots of comments
and blank lines for readability and that you can also use `shell
variables' and the `~' metacharacter for your home directory, 
and they are expanded accordingly when read in by the mailer.
(Note that this was automatically saved by the \f2elm\f1 program
on the fly from the o)ptions screen)
.ft CW
.zf
.nf
  #
  # .elm/elmrc - options file for the ELM mail system
  #
  # Saved automatically by ELM 2.4 for Dave Taylor
  #

  # For yes/no settings with ?, ON means yes, OFF means no

  # where to save calendar entries
  calendar = ~/.Agenda

  # what editor to use ("none" means simulate Berkeley Mail)
  editor = none

  # the character to use in the builtin editor for entering commands
  escape = ~

  # the full user name for outbound mail
  fullname = Dave Taylor

  # where to save received messages to, default file is "=received"
  receivedmail = $HOME/Mail/received

  # where to save my mail to, default directory is "Mail"
  maildir = /users/taylor/Mail

  # program to use for displaying messages ('builtin' is recommended)
  pager = builtin

  # prefix sequence for indenting included message text in outgoing messages...
  prefix = >_

  # how to print a message ('%s' is the filename)
  print = lpr -Plw2 %s

  # where to save copies of outgoing mail to, default file is "=sent"
  sentmail = /users/taylor/Mail/mail.sent

  # the shell to use for shell escapes
  shell = /bin/csh

  # local ".signature" file to append to appropriate messages...
  localsignature = localsig

  # remote ".signature" file to append to appropriate messages...
  remotesignature =  remotesig

  # do we want dashes above signatures? (News 2.11 compatibility and convention)
  sigdashes = ON

  # how to sort folders, "Mailbox" by default
  sortby = Reverse-Received

  # how to sort the alias list, "Name" by default
  aliassortby = Name

  # should the default be to delete messages we've marked for deletion?
  alwaysdelete = ON

  # should the default be to store read messages to the "received" folder?
  alwaysstore = ON

  # should the default be to keep unread messages in the incoming mailbox?
  alwayskeep = ON

  # should we use the "->" rather than the inverse video bar?
  arrow = OFF

  # should the message disposition questions be displayed(ON) or
  # auto-answered(OFF) with the default answers when we resync or change folders?
  ask = ON

  # would you like to be asked for Carbon-Copies information each msg?
  askcc = ON

  # automatically copy message being replied to into buffer? 
  autocopy = OFF

  # threshold for bouncing copies of remote uucp messages...
  # zero = disable function.
  bounceback = 0

  # save a copy of all outbound messages?
  copy = ON

  # do we want to be able to mail out AT&T Mail Forms?
  forms = OFF

  # should we keep folders from which all messages are deleted?
  keepempty = OFF

  # we're running on an HP terminal and want HOME, PREV, NEXT, etc...
  keypad = OFF

  # should we display the three-line 'mini' menu?
  menu = ON
  # would you like a copy of a message you send to an alias you are on???
  metoo = OFF

  # when using the page commands (+ - <NEXT> <PREV>) change the current
  # message pointer...?
  movepage = ON

  # just show the names when expanding aliases?
  names = ON

  # when messages are copied into the outbound buffer, don't include headers?
  noheader = ON

  # start up by pointing to the first new message received, if possible?
  pointnew = ON

  # prompt for a command after the external pager exits?
  promptafter = ON

  # emulate the mailx message increment mode (only increment after something
  # has been 'done' to a message, either saved or deleted, as opposed to 
  # simply each time something is touched)?
  resolve = ON

  # save messages, incoming and outbound, by login name of sender/recipient?
  savename = ON

  # save outbound messages by login name of sender/recipient even if the
  # associated folder doesn't already exist?
  forcename = OFF

  # are we running on an HP terminal and want HOME, PREV, NEXT, etc...?
  # (this implies "keypad=ON" too)
  softkeys = OFF

  # set the main prompt timeout for resynching...
  timeout = 60

  # display message title when displaying pages of message?
  titles = ON

  # are we good at it?  0=beginner, 1=intermediate, 2+ = expert!
  userlevel = 2

  # enable the weedout list to be read?
  weed = ON

  # what headers I DON'T want to see, ever.
  weedout = "Path:" "Via:" "Sent:" "Date" "Status:" "Original" "Phase" 
	  "Subject:" "Fruit" "Sun" "Lat" "Buzzword" "Return" "Posted" 
	  "Telephone" "Postal-Address" "Origin" "X-Sent-By-Nmail-V" "Resent" 
	  "X-Location" "Source" "Mood" "Neuron" "Libido" "To:" "X-Mailer:" 
	  "Full-Name:" "X-HPMAIL" "Cc:" "cc:" "Mmdf" "Network-" "Really-" 
	  "Sender:" "Post" "Message-" "Relay-" "Article-" "Lines:" 
	  "Approved:" "Xref:" "Organization:" 	"*end-of-user-headers*"

  # alternative addresses that I could receive mail from (usually a
  # forwarding mailbox) and don't want to have listed...
  alternatives = hplabs!taylor  hpldat!taylor  taylor@hplabs  taylor%hpldat  
.fi
.br
.ne 5
.sp
.hn 1 The Command Line Options

There are a number of command line options to the \f2elm\f1
program, with only one that needs to be remembered: ``-?''or ``-h'' for help.

The flags are:

.lp \h'24p'-a 66p
Arrow.  This allows you to have the ``->'' arrow pointer
rather than the inverse bar.  This can also be set in
the \f2.elm/elmrc\f1 
file \(em check the boolean variable \f2arrow\f1).

.lp \h'24p'-c 66p
Check only.  This is useful for expanding aliases 
without sending any mail.  The invocation is similar to
invoking \f2elm\f1 in send-only mode:
.ft CW
.zf
elm -c\f2  list-of-aliases\f1

.lp "\h'24p'-d \f2n\f1" 66p
Set debug level to \f2n\f1.  Useful for debugging the \f2elm\f1
program, this option will create a file in your home
directory called \f2ELM:debug.info\f1, then
output a running log of what is going on with
the program.  Level \f2n\f1 can be 1 through 11,
where the higher numbers generate more output.
This option might be disabled by the the person who configured
\f2elm\f1 for your system.

.lp "\h'24p'-f \f2folder\f1" 66p
Folder.  Read specified folder rather than the default incoming mailbox.
Note that you can use the same metacharacters (e.g. `=') as when 
you \f2change folders\f1 from within the program.  You can also use the
same abbreviatory symbols (`!', `>' and `<'),
but remember to ``single quote'' them
in case they have special meaning in the shell you use.

.lp "\h'24p'-h or -?" 66p
Help.  Gives a short list of all these options and exits.

.lp "\h'24p'-i \f2file\f1" 66p
Include.  Include prepared file in edit buffer before sending.
This facilitates using \f2elm\f1 with other programs
that interface with mail (like news readers, for example).  There
is an example of how to set up the \f3rn\f1 news reading program to
use \f2elm\f1 in \f2The Elm Users Guide\f1.  The file specified is 
copied into the temporary file just before the signature file.

.lp \h'24p'-k 66p
Keypad \(em This option, when used, lets the \f2elm\f1 program
know that you're on an HP terminal, and it can then interpret
the <PREV>, <NEXT> and <HOME>/<SHIFT>-<HOME> keys accordingly.  If you
are not on an HP terminal, it is recommended that you do
NOT use this option. (See the \f2keypad\f1 option in
the \f2.elm/elmrc\f1 section.)

.lp \h'24p'-K 66p
Keypad + softkeys.  The \f2elm\f1 mailer can
use the HP softkeys as an alternative form of
input.  If you specify this option be sure that you're on
an HP terminal that can accept the standard 2622 terminal
escape sequences! (See the \f2softkeys\f1 option in
the \f2.elm/elmrc\f1 section for more information.)

.lp \h'24p'-m 66p
Inhibit display of the 3-line menu when using the mailer.  This,
of course, gives you three more message headers per page instead.
(See also the 
.ft CW
.zf
menu\f1 option in
the \f2.elm/elmrc\f1 section.)

.lp "\h'24p'-s \f2subject\f1" 66p
In send-only and batch mode, this is how to indicate the subject of the
resulting message.  Please see the section on ``Non-Interactive
Uses of Elm'' in \f2The Elm Users Guide\f1 for more information.

.lp \h'24p'-t 66p
Disable use of the \f2termcap/terminfo\f1 \f3ti/te\f1 capabilities.
Many terminal emulators require it (not the least of which is the
OpenLook \f2cmdtool\f1).
Some terminal emulators clear the screen on \f3te\f1 (some \f2xterm\f1s).
(See also the 
.ft CW
.zf
usetite\f1 option in
the \f2.elm/elmrc\f1 section.)

.lp \h'24p'-z 66p
Zero.  This causes the mailer not to be started if you don't
have any mail.   This emulates the behavior of programs
like \f2Berkeley Mail\f1.

.in 0
All the above flags default to reasonable options, so there is
usually no need to use them.  Furthermore, the most used flags
are available through the \f2.elm/elmrc\f1 file.  See above.
.br
.ne 5
.sp
.hn 1 Multi-Media Capabilities of Elm

Elm optionally provides you with some Multi-Media features, which are compliant
to the MIME (Multipurpose Internet Mail Extension) IETF draft.

If the support is compiled into Elm, on the receiving side Elm accesses Metamail
from Nathaniel Borenstein of Bellcore.
If you receive a MIME compliant Message, Elm calls Metamail automatically
on displaying the message. Metamail asks you for each part of the
message, if you want to display it. Metamail uses the display
programs available at your site. This is controlled through the
mailcap file.

On the sending side, there is a simple mechanism integrated in elm
to compose MIME compliant messages. If you have one or more key lines
.ft CW
.zf
[\&include file contenttype/subtype encoding]\f1 in the message body, at each
of these key lines, a file would be included, and will be a part
of the message. The text lines before, between and after the \f2include\f1
lines go into extra Message parts of type Text.

As an example, say you want to include the File foo.gif into your message,
which is a GIF Image, and you want to use base64 encoding, use the
following line:

.ft CW
.zf
[\&include foo.gif image/gif base64]\f1

Or you want to include a text file which contains plain ASCII:

.ft CW
.zf
[\&include foo.txt text/plain]\f1

The \f2encoding\f1 parameter is optional and the default is 7bit.

Refer to RFC1341 for valid \f2contenttype/subtype\f1 and \f2encoding\f1
parameter values.
.br
.ne 5
.sp
.hn 1 Special Outgoing Mail Processing

There are a few extra features that the mailer offers on
outgoing mail that are worthy of mention:

The first, and probably the most exciting feature\s-2\u3\d\s0, is the
.fn
3. Unfortunately, at many non-US sites, it's quite probable that
you won't be able to use this feature since you won't have
the \f2crypt()\f1 library available due to licensing restrictions.
.ef
ability to send \f2encrypted\f1 mail! To do this is 
extremely simple:  You need merely to have two key lines
.ft CW
.zf
[\&encode]\f1 and 
.ft CW
.zf
[\&clear]\f1 in the message body.

Consider the following outgoing message:
.nf
.ps 9
.in .5i
.ft CW
.zf
Joe,
Remember that talk we had about Amy?  Well, I talked to my manager 
about it and he said...
uhh...better encrypt this...the usual `key'...
[\&encode]
He said that Amy was having family problems and that it had been 
affecting her work.
Given this, I went and talked to her, and told her I was sorry for 
getting angry.  She said that she understood.
We're friends again!!
[\&clear]
Exciting stuff, eh?   
\h'3i'Mike
.ps 10
.ft 1
.in 0
.fi
While this is obviously quite readable while being typed into 
the editor, as soon as the message is confirmed as wanting
to be sent, the \f2elm\f1 mailer prompts with:
.nf
.ft CW
.zf
.ps 9
.ti .5i
Enter encryption key: @
.ps 10
.ft 1
.fi
and accepts a key (a series of 8 or less characters) without
echoing them to the screen.  After entry, it will ask for the
same key again to confirm it, then *poof* it will encrypt and
send the mail.

If you have the \f2copy\f1 option enabled, the program will save
your copy of the message encrypted too.  (This is to ensure
the privacy and security of your mail archive, too.)

If the mailer doesn't ask for the encryption key, it's because
you don't have the 
.ft CW
.zf
[\&encode]\f1 entered as the first 8 characters
of the line.  It MUST be so for this to work!!

On the other end, a person receiving this mail (they must also
be using \f2elm\f1 to receive it, since this mailer has a
unique encryption program) will be reading the
message and then suddenly be prompted:
.nf
.ft CW
.zf
.ps 9
.ti .5i
Enter decryption key: @
.ft 1 
.ps 10 
.fi 
and will again be asked to re-enter it to confirm.  
The program will then on-the-fly decrypt the mail 
and display each line as it is decoded.  The 
.ft CW
.zf
[\&clear]\f1 
line signifies that the block to encrypt is done.  

Note that it is not possible currently to \f2pipe\f1 or \f2print\f1
encrypted mail.
.sp 2
The other option on outgoing mail is the ability to
specify what section of the message you want to have
archived (assuming \f2copy\f1 is enabled) and what section
you don't.  This is most useful for sending out source
file listings and so on.

To indicate the end of the section that should be
saved in the archive, you need merely to have the
line
.nf
.ft CW
.zf
.ti .5i
[\&nosave]
.ft 1
or
.ft CW
.zf
.ti .5i
[\&no save]
.ft 1
.fi
appear by itself on a line.  This will be removed from 
the outgoing mail, and will indicate the last line of
the message in the saved mail.
Other than this, the saved mail is identical to the outgoing mail.
.br
.ne 5
.sp
.hn 1 Customized header lines

The mailer provides a facility for including customized
header lines in the messages you send.
If you have an \f2.elm/elmheaders\f1 file,
the mailer will include its contents
immediately after the regular headers of all outbound  mail.
The mailer supports use of the backquote convention in this file.
Here's a typical \f2.elm/elmheaders\f1 file.
.ft CW
.zf
.nf
  Organization: Hewlett-Packard Laboratories
  Phone: (415)-555-1234
  Operating-System: `uname -srv`
.fi
.ft 1
These lines will appear after all other header lines in the message.
.br
.ne 5
.sp
.hn 1 Commands
.sp

This section will discuss each command in the \f2elm\f1
program in more detail than above, including the 
prompts the user can expect upon executing the
command, the meaning of different options, etc.

.lp \h'24p'? 66p
Help.  This command used once puts you in the \f2help\f1
mode, where any key you press will result in a one-line description
of the key.  Pressed again at this point will produce a two page
summary listing each command available.
`.' will leave the help mode and return you to the
main menu level.

.lp \h'24p'<space> 66p
Display the current message.
<space> is useful for reading through a mail folder.
When issued from the index screen,
it will display the first screen of the current message;
and then when issued while in the builtin pager,
it will page through the message to the end;
and then when issued at the end of a message
(with either the builtin pager or an external pager),
it will display the first screen of the next message not marked for deletion.

.lp \h'24p'<return> 66p
Display the current message.
<return> behaves somewhat differently from <space>.
When issued while in the builtin pager,
it will scroll the current message forward one line,
and then when issued at the end of a message
(with either the builtin pager or an external pager),
it will redisplay the first screen of the the \f2current\fP message.
The latter is useful in case you have issued a non-pager
command while in the builtin pager and want to restart the display
of the current message.

.lp \h'24p'! 66p
Shell.  This allows you to send a command to the shell without
leaving the program.  (Note it is possible for the person who
installed Elm on your system to disable this feature.)

.lp \h'24p'| 66p
Pipe.  This command allows you to pipe the current message
or the set of \f2tagged\f1 messages
through other filters as you desire.  The shell used for
the entire command will be either the one specified in
your \f2.elm/elmrc\f1 file, or the default shell (see above).

.lp \h'24p'\/ 66p
Pattern match.  This command, on the top level, allows the
user to search through all the \f2from\f1 and \f2subject\f1 lines of
the current folder starting at the current message and
continuing through the end.  If the first character of the
pattern is a `/', then the program will try to match the
specified pattern against \f2any\f1 line in the folder.  Again,
this works from one after the current message through the
end.  Both searches are case insensitive.

.lp "\h'24p'- or <left>" 66p
Display the previous page of the message index.

.lp "\h'24p'+ or <right>" 66p
Display the next page of the message index.

.lp \h'24p'<number><return> 66p
Specify new current message.  When you type in any digit key \f2elm\f1 will
prompt ``Set current to : n'', where `n' is
the digit entered.  Enter the full number
and terminate with <return>.  Note that changing the
current message to a message not on the 
current page of headers will result in a new page
being displayed.

.lp \h'24p'< 66p
Scan message for calendar entries.  A rather novel feature of 
the \f2elm\f1 mailer is the ability to automatically incorporate
calendar/agenda information from a mail message into the users
calendar file.  This is done quite simply; any line that has
the pattern

.ti +.5i
-> \f2calendar entry\f1

will be automatically added to the users \f2calendar\f1 file (see
the \f2calendar\f1 option of the \f2.elm/elmrc\f1 file) if the `<'
command is used.
.sp
For example, let's say we had a message with the text:

.ft CW
.zf
.ps 9
.ti +.5i
Regardless of that meeting, here's the seminar stuff:
.br
.ti +.5i
-> 8/03 3:00pm: AI Seminar with Ira Goldstein of HP Labs
.ft 1
.ps 10

then using the `<' command would add the line:

.ft CW
.zf
.ps 9
.ti +.5i
8/03 3:00pm: AI Seminar with Ira Goldstein of HP Labs
.ps 10
.ft 1

to the users \f2calendar\f1 file.

.lp \h'24p'a 66p
Alias.  The alias system is a way by which more complex mail addresses
can be shortened for the mail user.  For example:
.nf
.ps 9
.ft CW
.zf
.ti +.5i
joe, bleu   =  Joe Bleu  =   joe@hpfcla.SSO.HP.COM
.ft 1
.ps 10
.fi
which allows mail to `joe' or `bleu' with the system expanding
the address properly.  As is obvious, this saves remembering
complex addresses.  A more detailed discussion can
be found in either the section entitled \f2The Alias System\f1 in
this document or \f2The Elm Alias System Users Guide\f1.

.lp \h'24p'b 66p
Bounce mail.  This ``remails'' mail to someone else in such a
way as to make the return address the original sender rather
than you.  (The \f2forward\f1 command is similar, but it makes
the return address \f2you\f1 rather than the original sender.)

.lp \h'24p'C 66p
Copy to folder.  This command copies the current message or set of
tagged messages to
a folder.  If there is anything in the folder currently the
message or messages are appended to the end, otherwise the folder is created
containing only the newly copied message.  The prompt for this command
is `Copy to folder: '.  A response of <return> cancels the command
and returns the user to the system prompt.  The usual filename
metacharacters are available, too.  That is, this command expands filenames
with `~' being your home directory and `=' being your
\f2maildir\f1 directory, if defined.  This command also allows you to
use `>' for your \f2receivedmail\f1 folder,
`<' for your \f2sentmail\f1 folder,
`.' for the last folder you saved or copied a message to
and `@alias' for the default folder for `alias'.
If you use a shell wildcard in the file or folder name, you will
be given a list of all files or folders which match the wildcard.
Elm uses your shell to find the names, so whatever wildcards you are
used to can work.
Finally, you can also enter `?' at the prompt
to get some detailed help.

.lp \h'24p'c 66p
Change folder.  Specifying this command allows the user to change
the folder that is currently being read.  This is intended 
for perusal and reply to previously archived messages.
The prompt is `Name of new folder: ' and entering <return>
cancels the operation, while entering a filename causes the program
to read that file as the new folder,
if possible.  This command expands filenames
with `~' being your home directory and `=' being your
\f2maildir\f1 directory, if defined.  This command also allows you to
use `!' as an abbreviation for you incoming mailbox,
`>' for your \f2receivedmail\f1 folder,
`<' for your \f2sentmail\f1 folder,
`.' for the last folder you saved or copied a message to
and `@alias' for the default folder for `alias'.
If you use a shell wildcard in the file or folder name, you will
be given a list of all files or folders which match the wildcard.
Elm uses your shell to find the names, so whatever wildcards you are
used to can work.
Finally, you can also enter `?' at the prompt

.lp "\h'24p'd, u" 66p
Delete and Undelete.  Neither of these two commands have any prompts
and indicate their action by either adding a `D' to the current
message index entry (indicating deletion pending) or removing
the `D' (indicating that the message isn't set for deletion).

.lp \h'24p'<control>-D 66p
This command allows you to easily mark for deletion all messages 
that have a specific pattern.  After <control>-D is pressed,
the program will prompt for the string to match (currently it
only matches either the \f2from\f1 or \f2subject\f1 lines of
the message).

.lp \h'24p'<control>-U 66p
This is the direct opposite command to the previous \(em all messages
that match the specified pattern can have any mark for deletion 
removed by using this command.

.lp \h'24p'e 66p
Edit mailbox.  This allows you to modify the current mail file at
a single keystroke.  This is mostly useful for editing down messages
before saving them.  Modifying headers should be done with extreme
caution, as they contain routing information and other vital stuff
for full functionality.

.lp \h'24p'f 66p
Forward.  Allows the user to forward the current message to another user.
This copies the message into the edit buffer and allows the user to add
their own message too.  The prompt is `Forward to:' and will expand an alias
if entered.  (See also \f2bounce\f1, above.)

Elm will ask you if you want to edit the message before sending it.  If you
answer `yes', Elm will prepend your prefix string to each line of the
message, and let you edit the result.  If you do not want the prefix string
on each line, answer `no'; you will have another chance to edit the message
when you get to the `send' menu.  (See also the `elmrc' section, under
\f2prefix\f1.)

.lp \h'24p'g 66p
Group reply.  Identical to \f2reply\f1 below, except that the
response is mailed to \f2all recipients\f1 of the original
message (except yourself \(em see the \f2alternatives\f1
option for your \f2.elm/elmrc\f1 file above).

.lp \h'24p'h 66p
Display the current message with all headers intact.
When you display a message with other commands,
certain header lines are formatted and others discarded (according
to the \f2weedlist\fP parameter in your \f2.elm/elmrc\f1 file).

.lp \h'24p'i 66p
Return to the index screen,
when issued in the builtin pager or at the end of a message (with
either the builtin pager or an external pager).

.lp "\h'24p'j or <down>, k or <up>" 66p
These four keys work similarly to what they would do in \f2vi\f1 or
any of the other (precious few) screen oriented
programs.  The `j' and <down> keys move
the current message pointer down to the next message skipping
over any marked deleted (going to
the next page if needed) and the `k' and <up> keys move the current
message pointer back to the previous message skipping
over any marked deleted (also changing pages if needed)

.lp "\h'24p'J, K" 66p
These two keys work similarly to their lower case counterparts,
except that they don't skip over deleted messages.

.lp \h'24p'l 66p
Limit.  This feature allows you to specify a subset of the existing
messages to be dealt with.  For example, let's say we had a folder with
four hundred messages in it, about four or five different subjects.  We
could then limit what we're dealing with by using the \f2limit\f1
command.  Pressing `l' would result in the prompt:
.nf
.ft CW
.zf
.ti +.5i
Criteria: 
.ft 1
.fi
to which we could answer 
.ft CW
.zf
subject \f2string\f1, 
.ft CW
.zf
from \f2string\f1 or
.ft CW
.zf
to \f2string\f1.  In our example, we could use 
.ft CW
.zf
subject programming\f1
as a criteria for selection.  Once we've limited our selections down,
the screen will be rewritten with just the selected messages
and the top line will change to have a message
like:
.nf
.ft CW
.zf
.ps 9
.tl ''     Folder is "=elm" with 92 shown out of 124 [Elm 2.4]''
.ps 10
.ft 1
.fi
We can further limit selections by entering further criteria, each
time using the \f2limit\f1 option again.

To clear all the criteria and get back to the `regular' display, simply
enter \f2all\f1 as the limiting criteria.  It should be noted that the
selection based on ``to'' isn't fully implemented for this version, so
it is recommended that users stay with ``subject'' and ``from'' as the
basis for their criteria.

.lp \h'24p'm 66p
Mail.  Send mail to a specified user.  The prompt that is associated
with this command is `Send mail to :'.  Entering an alias name results
in the full address being rewritten in parenthesis immediately.  This
prompt is followed by `Subject:' which allows the user to title their
note.  The final field is `Copies to: ', which allows other people
specified to receive "carbon copies" of the message.  (See the \f2askcc\f1
option of the \f2.elm/elmrc\f1 file above.)  Upon entering all three items the 
editor is invoked and the message can be composed.

.lp \h'24p'n 66p
Next message that is not marked deleted:
useful for displaying successive messages in a folder.
When issued from the index screen, it displays the current message,
and then when issued while in the builtin pager or at the end of a message
(with either the builtin pager or an external pager),
it will display the first screen of the next message not marked for deletion.

.lp \h'24p'o 66p
Options.  This full-screen display allows you to alter the settings
of a number of parameters, including the current sorting method,
the method of printing files, the calendar file, the save file, and
so on.  It's self-documenting (where have you heard \f2that\f1
before?) so isn't explained in too much detail here.

.lp \h'24p'p 66p
Print.  This allows you to print out the current
message or the tagged messages to a previously defined printer.  (See
the section on the \f2.elm/elmrc\f1 discussing the \f2print\f1 variable.)

.lp \h'24p'q 66p
Quit.  If you in the pager, you are returned to the index screen. If you are
on the index screen, \f2elm\f1 quits altogether.  However, if you have the
option \f2ask\fP set, \f2elm\f1 first prompts you for the disposition of the
messages in the current folder.  If any messages are marked for deletion, it
will ask if you want them deleted.  If the current folder is your incoming
mailbox, you will also be asked if read messages should be stored in your
\f2receivedmail\f1 folder,
and if unread messages should be kept in the incoming mailbox.
The default answers to these questions are set by the \f2.elm/elmrc\f1
options \f2alwaysdelete\fP, \f2alwaysstore\fP, and \f2alwayskeep\fP.
However, if you elect to not store your read messages (i.e. keep them)
it is presumed you want to keep your unread messages, too.

.lp \h'24p'Q 66p
Quick quit.  This behaves similar to the `q' command except that
you are never prompted for answers to the message disposition questions.
\f2Elm\f1 will dispose of messages according to the values you
have set for \f2alwaysdelete\f1, \f2alwaysstore\f1, and \f2alwayskeep\f1
in your \f2.elm/elmrc\f1 file.

.lp \h'24p'r 66p
Reply.  Reply to the sender of the current message.  If
the \f2autocopy\f1 flag is OFF in your \f2.elm/elmrc\f1 file, the program will 
prompt ``Copy message? (y/n)'' to which the user can specify 
whether a copy of the source message is to be copied into the edit
buffer, or not.  If copied in, all lines from the message are 
prepended with the \f2prefix\f1 character sequence specified in
your \f2.elm/elmrc\f1 file.

.lp \h'24p's 66p
Save to folder.  This command is like the `copy' command, except
that the saved messages are marked for deletion, and that if you are
saving just the current message, the current message pointer is
incremented afterwards (see the \f2resolve\f1 option in the \f2.elm/elmrc\f1
file above).  This command expands folder names
with `~' being your home directory and `=' being your
\f2maildir\f1 directory, if defined.  This command also allows you to
use `>' for your \f2receivedmail\f1 folder,
`<' for your \f2sentmail\f1 folder,
`.' for the last folder you saved or copied a message to
and `@alias' for the default folder for `alias'.

.lp \h'24p't 66p
Tag.
.fn
4. Currently only \f2pipe\f1, \f2print\f1, and \f2save\f1 support this.
.ef
Tag the current message for a later operation\s-2\u4\d\s0.

.lp \h'24p'<control>-T 66p
Tag all messages containing the specified pattern.  Since \f2tagging\f1
messages can occur on screens other than the one being viewed, the 
\f2elm\f1 system will first check to see if any messages are currently
\f2tagged\f1 and ask you if you'd like to remove those tags.  After
that, it will, similar to the \f2<control>-D\f1 function, prompt for
a pattern to match and then mark all messages that contain
the (case insensitive) pattern in either the \f2from\f1 or \f2subject\f1
lines. 

.lp \h'24p'x 66p
Exit.  This leaves \f2elm\f1 discarding any changes to the mailbox.
If changes are pending (such as messages marked for deletion) a prompt
is made to confirm discarding the changes.  If confirmed, no
messages are deleted and the statuses of messages are unchanged.  That is,
any messages that were new will remain new instead of being noted as old,
and any messages that were read for the first time
will be again noted as unread.

.lp \h'24p'X 66p
Exit immediately.  This leaves \f2elm\f1 in the quickest possible manner
without even prompting about discarding the changes to the mailbox.
No messages are deleted and the statuses of messages are unchanged.  That is,
any messages that were new will remain new instead of being noted as old,
and any messages that were read for the first time
will be again noted as unread.

.in 0
.sp
When you are about to send of a message under the \f2forward\f1, \f2mail\f1,
or \f2reply\f1 commands (see above), a small menu of the following
options appears:

.lp \h'24p'c 66p
Specify folder for saving a copy to.  This allows you to override the
\f2copy\f1, \f2forcename\f1 and \f2savename\f1 options
of your \f2.elm/elmrc\f1 file.  It prompts you for the name
of the folder where a copy of the outgoing message is to be saved.  The
default displayed is taken from those three \f2.elm/elmrc\f1
options and can be changed.  This command also allows you to
use `>' for your \f2receivedmail\f1 folder
and `<' for your \f2sentmail\f1 folder,
and `=?' to mean ``conditionally save by name''
and `=' to mean ``unconditionally save by name''. (See the \f2savename\f1
option above for details on saving by name.)  (Since you could next enter
the \f2edit headers\f1 command and change the recipients
of your message, the name of the folder under the
two ``save by name'' options is not established until you enter the \f2send\f1
command.)
If you use a shell wildcard in the file or folder name, you will
be given a list of all files or folders which match the wildcard.
Elm uses your shell to find the names, so whatever wildcards you are
used to can work.
You can also enter `?' at the prompt
to some help about saving.

.lp \h'24p'e 66p
Edit message (or form).  Entering this command will allow you to edit
the text of your message or form.

.lp \h'24p'f 66p
Forget.  This gets you out of sending a message you started. If you are
in send-only mode, the message is saved to the file \f2Canceled.mail\f1
in your home directory.  Otherwise 
it can be restored at the next \f2forward\f1, \f2mail\f1,
or \f2reply\f1 command during the current session of \f2elm\f1. After
issuing one of those commands you will be prompted with ``Recall last
kept message?''

.lp \h'24p'h 66p
Edit headers.  This puts you into the \f2header editing mode\f1, whereby
you can edit to any of the various headers of your message.  Like
the options screen, it's self-documenting, so it isn't explained in too much
detail here.

.lp \h'24p'i 66p
Run ispell (or some other configured spelling correction program).
The current message is run through an interactive spelling correction program
if one is available.  The default spelling program is the GNU ispell program
unless changed by the person who installed Elm on your system.

.lp \h'24p'm 66p
Make form.  This converts the message you have edited into a form.  (See
\f2The Elm Forms Mode Guide\f1 for more details.)

.lp \h'24p's 66p
Send.  This sends the message as is without any further ado.
.in 0
.br
.ne 5
.sp
.hn 1 "Using Elm with ``editor = none''"
.sp
The \f2Elm\f1 program also supports a builtin editor for simple message 
composition that is very (very) similar to the simple line
editor available from the \f2Berkeley Mail\f1 system.

To access it, you need merely to specify ``\f2editor=none\f1'' in
your \f2.elm/elmrc\f1 file.  
With that, any messages to be composed
that don't already have text in the buffer (e.g. no reply with
the text included, etc), will use this editor.
.sp
From the builtin editor, the following options are available for use.
Each command here is prefixed with a `~'.
You can specify a different ``escape'' character in your \f2.elm/elmrc\f1 file,
if you desire (see above).
.sp

.lp \h'16p'~? .5i
Print a brief help menu.

.lp \h'16p'~b .5i
Change the Blind-Carbon-Copy list.

.lp \h'16p'~c .5i
Change the Carbon-Copy list.

.lp \h'16p'~e .5i
Invoke the Emacs editor on the message, if possible.

.lp \h'16p'~f .5i
Add the specified message or current message.

.lp \h'16p'~h .5i
Change all the available headers (To, Cc, Bcc, and Subject).

.lp \h'16p'~m .5i
Same as `~f', but with the current `prefix'.

.lp \h'16p'~o .5i
Invoke a user specified editor on the message.

.lp \h'16p'~p .5i
Print out the message as typed in so far.

.lp \h'16p'~r .5i
Include (read in) the contents of the specified file.

.lp \h'16p'~s .5i
Change the Subject line.

.lp \h'16p'~t .5i
Change the To list.

.lp \h'16p'~v .5i
Invoke the Vi visual editor on the message.

.lp \h'16p'~< .5i
Execute the specified UNIX command, entering the output
of the command into the editor buffer upon completion.
(For example ``~< who'' will include the output of
the \f2who\f1 command in your message.)

.lp \h'16p'~! .5i
Execute a UNIX command if one is given (as in ``~!ls'') or
give the user a shell (either from their shell setting in 
their \f2.elm/elmrc\f1 file or the default).

.lp \h'16p'~~ .5i
Add a line prefixed by a single `~' character.
.in 0
.sp
A useful note is that the `~f' and `~m' commands invoke the \f2readmsg\f1
command, so you can pass parameters along too.  For example, if we
wanted to include a message from Joe, without any headers, prefixed,
we could use:
.nf
.ti .5i
~m -n Joe
.fi
to accomplish the task.

To learn more about how they work, try 'em!
.br
.ne 5
.sp
.hn 1 The Alias System
.sp
As mentioned previously, there exists in the \f2elm\f1
system a set of aliases that associate
an arbitrary word (such as a persons name) to a complex address or group.  
The advantages are readily apparent; rather than
remembering an address of the form:
.nf
.ps 9
.ft CW
.zf
.ti .5i
host1!host2! ... !hostN!user
.ft 1
.ps 10
.fi
the user merely has to remember a single word.  

Two alias tables are available for a each
user within \f2elm\f1,
namely the system alias file and the user's alias file.  The
system alias file is created and maintained (by the system administrator)
by editing the 
file \f2SYSTEM_ALIASES\f1 as defined in the `sysdefs.h' file
(see \f2The Elm Configuration Guide\f1) and as described
in the documentation with the \f2newalias\f1 command,
then running the \f2newalias\f1 program.

An individual user can also have an alias file which works
in conjunction with the system aliases.  To do this, he
needs merely to enter the alias menu system and create aliases with
the `a' (\f2Alias current message\f1) or `n' (\f2Make new alias\f1) commands.
Alternatively, the user can peruse the documentation for the \f2newalias\f1
command and create a file as indicated therein.  After 
executing the program, the aliases will be available
for use from within \f2elm\f1.
.sp
Please refer to \f2The Elm Alias Users Guide\f1 for more helpful
hints and so on.
.sp 2
Within \f2elm\f1,
however, the alias system acts as an entirely different program, with
its own display, own commands, and own mini-menu.  The aliases are
presented in a
list similar to the main screen.  The menu replaces the
standard mini-menu with:
.sp
.sd
.nf
.ps 9
.ft CW
.zf
.ce
--------------------------------------------------------------------------------
.sp
.ce 3
Alias commands:  ?=help, <n>=set current to n, /=search pattern
a)lias current message, d)elete, e)dit aliases.text, f)ully expand alias,
l)imit display, m)ail, n)ew alias, r)eturn, t)ag, u)ndelete, or e(x)it
.sp
Alias: @
.ce
--------------------------------------------------------------------------------
.sp
.ps 10
.ft 1
.ed
.fi

The commands are:

.lp \h'16p'? .5i
Help.  This command used once puts you in the \f2help\f1
mode, where any key you press will result in a one-line description
of the key.  Pressed again at this point will produce a two page
summary listing each command available.
`.' will leave the help mode and return you to the
alias menu level.

.lp "\h'16p'<space> or <return> or v" .5i
Display the current alias address.  The alias address is displayed below
the alias menu.  This command allows you to verify the address for a
person or the contents of a group alias.

.lp \h'16p'\/ .5i
Pattern match.  This command allows the
user to search through all the \f2alias\f1 and \f2username\f1
entries for the alias list
starting at the current alias and
continuing through the end.  
If the first character of the
pattern is a `/', then the program will also include the \f2comment\f1
and the fully expanded \f2address\f1 fields in the search. 
The search is case insensitive.  This allows the user to find a
specific alias in the situation where there are a large number of
aliases.

.lp \h'16p'a .5i
Alias current message.  
This allows the user to create an alias that has the
return address of the current message as the address field of
the alias.  It prompts for a unique alias name.  For further 
information, please see \f2The Elm Alias System Users Guide\f1.

.lp "\h'16p'd, u" .5i
Delete or undelete an alias.
This allows the user to mark an alias for deletion in the same fashion
as on the main menu.  The deletions are not
actually made until the user \f2r)eturns\f1 to the main menu or resyncs
the display (with the `$' command).  Deletions on system aliases are not
allowed.  These commands (plus the <control>-D
and <control>-U versions) behave identically to their main menu counterparts.

.lp \h'16p'e .5i
Edit the \f2.elm/aliases.text\f1 file.  The user alias file is edited
using the editor defined in \f2editor\f1 in your \f2.elm/elmrc\f1 file.
\f2newalias\f1 is run after the edit.

.lp \h'16p'f .5i
Display \f2fully expanded\f1 alias.  The currently highlighted
alias is fully expanded and displayed to the user.  This is most useful when
working with group alias in the alias database.

.lp \h'16p'l .5i
Limit the display.  You can limit the display by alias type (person/group
or user/system) or by search pattern on name or alias.  Otherwise, this
works exactly like the limit command on the main menu.

.lp \h'16p'm .5i
Send mail to the current alias.  A new mail message will be sent to the
person or group specified by the selected alias.  If aliases are currently
tagged the message will be mailed to the person(s) and/or group(s)
specified by the tagged aliases.  Tags are cleared after mailing the
message.

.lp \h'16p'n .5i
Make a new user alias.  This will prompt for a unique alias name and
then for an address.  If aliases are tagged you will be asked if you
want to create a group alias from the tagged aliases.
The information provided will be added
to your individual aliases.text file (\f2$HOME/.elm/aliases.text\f1) and 
then added to the database (upon the next alias resync).

.lp "\h'16p'r or q or i" .5i
Return.  Return to the main level of the \f2elm\f1 program.  Any pending
deletions are processed and newalias is run to update the database.  New
additions are handled at this time as well.

.lp "\h'16p'R or Q" .5i
Quick return.  This behaves like the `r' command except that you are never
prompted for answers to alias disposition questions.
\f2Elm\f1 will dispose of aliases according to the values you
have set for \f2alwaysdelete\f1
in your \f2.elm/elmrc\f1 file.

.lp \h'16p't .5i
Tag.
.fn
5. Currently only \f2mail\f1 and \f2new alias\f1 support this.
.ef
Tag the current alias for a later operation\s-2\u5\d\s0.

.lp \h'16p'x .5i
Exit alias menu.  Exits the alias menu without processing any
deletions.  Aliases marked for deletion are unmarked.  Additionally,
newalias is not run, even if alias additions have been made.
.in 0
.sp
Additionally, the movement keys (`j', `k', `+', `-', etc.) work in the
same fashion as on the main menu.  (See the previous section on
\f2Commands\f1 in this guide.)
.br
.ne 5
.sp
.hn 1 Elm and Signals

\f2Elm\f1 can handle several standard UNIX \f2signals\fR to do
some special processing.
\f2Signals\f1 are interrupt messages sent from one program to
another.  No detailed messages are sent, but a properly configured
program (such as \f2elm\f1) can watch for and handle these signals.

In particular, \f2elm\fR watches for the following \f2signals\f1
and takes these actions:
.ip \f2ALRM\f1
This is the alarm clock signal or time warning.
Elm uses this to wake itself up periodically and check for
new mail.
.ip \f2HUP\f1
This is the hangup notice.
It means that the terminal/modem/whatever which you have been using
with \f2elm\f1 has become detached from the system where \f2elm\f1
was running.
When \f2elm\f1 gets this signal, it aborts all the pending operations
and exits leaving your mailbox unchanged.
.ip \f2USR1\f1
This is the first user-definable signal.
When \f2elm\f1 gets this signal, it recieves any pending mail,
performs all the pending operations (deletes), and exits
leaving all unread mail marked as new.
This is the same as giving the \f2$\f1 and \f2X\fR commands.
.ip \f2USR2\f1
This is the second user-definable signal.
When \f2elm\f1 gets this signal, it recieves any pending mail,
performs all the pending operations (deletes), and exits
leaving all unread mail marked as old.
This is the same as giving the \f2$\f1 and \f2Q\fR commands.

You would only use these signals youself under the most unusual
circumstances.  For example, suppose you were using \f2elm\fR
to read mail on \f2host_1\fR.  You have many messages, most of
which have been read and filed (and therefore deleted), or simply
deleted.  You have not yet resynchronized your mailbox (\f2$\f1
command).  Now you go to lunch.
On your return, you're stopped at the door and told to take care
of an emergency.  You go to another part of the building, and want
to read your mail to see what the emergency is \- but you can't,
because \f2elm\f1 is still running at your desk.

What you really want is one of the scenarios given in the
description of \f2HUP\f1, \f2USR1\f1 or \f2USR2\f1.
Use your local \f2ps\f1 command to find out what the \f2process number\f1
of your \f2elm\f1 session is.  Then give the command
.pp
\f2kill -XXX process_number\fR

where \f2XXX\f1 is either \f2HUP\f1, \f2USR1\f1 or \f2USR2\f1 and
\f2process_number\f1 is the process number for your remote \f2elm\f1 session.
Your remote session will terminate with the actions noted above.
.br
.ne 5
.sp
.hn 1 Expert Mail Users and Debugging the Mailer

There are some additional facilities available in the \f2elm\f1
mailer for those people who are knowledgeable about 
mail protocols, or trying to debug/track down a problem.

The `h' \f2headers\f1 command at the outermost level of the mailer
will display the current message ignoring the current
setting of the `weed' option.  This is most useful
for answering questions of the form "I wonder what
this guy put in his header?" and such.  This command
does not show up on the mini-menu because it is somewhat
esoteric, but it does appear on the `?' help screen (can
you find it there, though?).

The `@' command at the outermost level of the mailer
will output a screen of debugging information,
including the number of lines and 
offsets of each of the messages in the current mailbox.

The `#' command at the outermost level of the mailer
will display the entire stored `record structure' for
the current message.

The `%' command 
will display the full computed return address of the
current message.

Starting up \f2elm\f1 with the "-d" debug option will create a file called
\f2ELM:debug.info\f1 in your home directory and contain a wealth of useful
information (to me, at least!) to aid in tracking down
what errors are occurring and why.  
.sp

If there are any problems with the mailer,  please try
to recreate the error with the debug option enabled
and set to the highest level (11) before sending defect reports my way.
.sp 3
One final note: all error names reported by the program
are documented in the AT&T System V Interface Definition Reference 
Manual in \f2errno\f1(2).
