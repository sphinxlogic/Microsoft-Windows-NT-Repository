void printanewline(void);
void markwarning(void);
void markerror(void);
void markfatal(void);
void printoverflow(void);
void printconfusion(void);
void bufferoverflow(void);
boolean zinputln(alphafile * f);
#define inputln(f) zinputln(&(f))
void zoutpoolstr(alphafile * f,strnumber s);
#define outpoolstr(f, s) zoutpoolstr(&(f), (s))
void printapoolstr(strnumber s);
void pooloverflow(void);
void filenmsizeoverflow(void);
void zouttoken(alphafile * f);
#define outtoken(f) zouttoken(&(f))
void printatoken(void);
void printbadinputline(void);
void printskippingwhateverremains(void);
void samtoolongfilenameprint(void);
void samwrongfilenameprint(void);
void printauxname(void);
void auxerrprint(void);
void auxerrillegalanotherprint(integer cmdnum);
void auxerrnorightbraceprint(void);
void auxerrstuffafterrightbraceprint(void);
void auxerrwhitespaceinargumentprint(void);
void printbibname(void);
void printbstname(void);
void hashciteconfusion(void);
void checkciteoverflow(citenumber lastcite);
void auxend1errprint(void);
void auxend2errprint(void);
void bstlnnumprint(void);
void bsterrprintandlookforblankline(void);
void bstwarnprint(void);
void eatbstprint(void);
void unknwnfunctionclassconfusion(void);
void printfnclass(hashloc fnloc);
void traceprfnclass(hashloc fnloc);
void idscanningconfusion(void);
void bstidprint(void);
void bstleftbraceprint(void);
void bstrightbraceprint(void);
void alreadyseenfunctionprint(hashloc seenfnloc);
void singlfnoverflow(void);
void biblnnumprint(void);
void biberrprint(void);
void bibwarnprint(void);
void checkfieldoverflow(integer totalfields);
void eatbibprint(void);
void biboneoftwoprint(ASCIIcode char1,ASCIIcode char2);
void bibequalssignprint(void);
void bibunbalancedbracesprint(void);
void bibfieldtoolongprint(void);
void macrowarnprint(void);
void bibidprint(void);
void bibcmdconfusion(void);
void citekeydisappearedconfusion(void);
void badcrossreferenceprint(strnumber s);
void nonexistentcrossreferenceerror(void);
void printmissingentry(strnumber s);
void bstexwarnprint(void);
void bstmildexwarnprint(void);
void bstcantmesswithentriesprint(void);
void illeglliteralconfusion(void);
void unknwnliteralconfusion(void);
void printstklit(integer stklt,stktype stktp);
void printlit(integer stklt,stktype stktp);
void outputbblline(void);
void bst1printstringsizeexceeded(void);
void bst2printstringsizeexceeded(void);
void bracesunbalancedcomplaint(strnumber poplitvar);
void caseconversionconfusion(void);
void traceandstatprinting(void);
void startname(strnumber filename);
void addextension(strnumber ext);
void addarea(strnumber area);
strnumber makestring(void);
boolean streqbuf(strnumber s,buftype buf,bufpointer bfptr,bufpointer len);
boolean streqstr(strnumber s1,strnumber s2);
void lowercase(buftype buf,bufpointer bfptr,bufpointer len);
void uppercase(buftype buf,bufpointer bfptr,bufpointer len);
hashloc strlookup(buftype buf,bufpointer j,bufpointer l,strilk ilk,boolean insertit);
void predefine(pdstype pds,pdslen len,strilk ilk);
void zinttoASCII(integer theint,buftype intbuf,bufpointer intbegin,bufpointer * intend);
#define inttoASCII(theint, intbuf, intbegin, intend) zinttoASCII((theint), (intbuf), (intbegin), &(intend))
void zadddatabasecite(citenumber * newcite);
#define adddatabasecite(newcite) zadddatabasecite(&(newcite))
boolean findcitelocsforthiscitekey(strnumber citestr);
void swap(citenumber swap1,citenumber swap2);
boolean lessthan(citenumber arg1,citenumber arg2);
void quicksort(citenumber leftend,citenumber rightend);
void zbuildin(pdstype pds,pdslen len,hashloc * fnhashloc,bltinrange bltinnum);
#define buildin(pds, len, fnhashloc, bltinnum) zbuildin((pds), (len), &(fnhashloc), (bltinnum))
void predefcertainstrings(void);
boolean scan1(ASCIIcode char1);
boolean scan1white(ASCIIcode char1);
boolean scan2(ASCIIcode char1,ASCIIcode char2);
boolean scan2white(ASCIIcode char1,ASCIIcode char2);
boolean scan3(ASCIIcode char1,ASCIIcode char2,ASCIIcode char3);
boolean scanalpha(void);
void scanidentifier(ASCIIcode char1,ASCIIcode char2,ASCIIcode char3);
boolean scannonneginteger(void);
boolean scaninteger(void);
boolean scanwhitespace(void);
boolean eatbstwhitespace(void);
void skiptokenprint(void);
void printrecursionillegal(void);
void skptokenunknownfunctionprint(void);
void skipillegalstuffaftertokenprint(void);
void scanfndef(hashloc fnhashloc);
boolean eatbibwhitespace(void);
boolean compressbibwhite(void);
boolean scanbalancedbraces(void);
boolean scanafieldtokenandeatwhite(void);
boolean scanandstorethefieldvalueandeatwhite(void);
void decrbracelevel(strnumber poplitvar);
void checkbracelevel(strnumber poplitvar);
void namescanforand(strnumber poplitvar);
boolean vontokenfound(void);
void vonnameendsandlastnamestartsstuff(void);
void skipstuffatspbracelevelgreaterthanone(void);
void bracelvloneletterscomplaint(void);
boolean enoughtextchars(bufpointer enoughchars);
void figureouttheformattedname(void);
void pushlitstk(integer pushlt,stktype pushtype);
void zpoplitstk(integer * poplit,stktype * poptype);
#define poplitstk(poplit, poptype) zpoplitstk(&(poplit), &(poptype))
void printwrongstklit(integer stklt,stktype stktp1,stktype stktp2);
void poptopandprint(void);
void popwholestack(void);
void initcommandexecution(void);
void checkcommandexecution(void);
void addpoolbufandpush(void);
void addbufpool(strnumber pstr);
void addoutpool(strnumber pstr);
void xequals(void);
void xgreaterthan(void);
void xlessthan(void);
void xplus(void);
void xminus(void);
void xconcatenate(void);
void xgets(void);
void xaddperiod(void);
void xchangecase(void);
void xchrtoint(void);
void xcite(void);
void xduplicate(void);
void xempty(void);
void xformatname(void);
void xinttochr(void);
void xinttostr(void);
void xmissing(void);
void xnumnames(void);
void xpreamble(void);
void xpurify(void);
void xquote(void);
void xsubstring(void);
void xswap(void);
void xtextlength(void);
void xtextprefix(void);
void xtype(void);
void xwarning(void);
void xwidth(void);
void xwrite(void);
void executefn(hashloc exfnloc);
void getthetoplevelauxfilename(void);
void auxbibdatacommand(void);
void auxbibstylecommand(void);
void auxcitationcommand(void);
void auxinputcommand(void);
void poptheauxstack(void);
void getauxcommandandprocess(void);
void lastcheckforauxerrors(void);
void bstentrycommand(void);
boolean badargumenttoken(void);
void bstexecutecommand(void);
void bstfunctioncommand(void);
void bstintegerscommand(void);
void bstiteratecommand(void);
void bstmacrocommand(void);
void getbibcommandorentryandprocess(void);
void bstreadcommand(void);
void bstreversecommand(void);
void bstsortcommand(void);
void bststringscommand(void);
void getbstcommandandprocess(void);
void initialize(void);
