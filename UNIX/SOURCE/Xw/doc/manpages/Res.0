                           Core Resource Set -- CORE(3X)
     Name                   Class                  Type             Default
     __________________________________________________________________________
     XtNancestorSensitive   XtCSenstitive          Boolean          TRUE
     XtNx                   XtCPosition            int              0
     XtNy                   XtCPosition            int              0
     XtNwidth               XtCWidth               int              0
     XtNheight              XtCHeight              int              0
     XtNdepth               XtCDepth               int              0
     XtNbackground          XtCBackground          Pixel            White
     XtNbackgroundPixmap    XtCPixmap              Pixmap           Unspecified
     XtNborderWidth         XtCBorderWidth         int              1
     XtNborderColor         XtCBorderColor         Pixel            Black
     XtNborderPixmap        XtCPixmap              Pixmap           Unspecified
     XtNsensitive           XtCSensitive           Boolean          TRUE
     XtNmappedWhenManaged   XtCMappedWhenManaged   Boolean          TRUE
     XtNdestroyCallback     XtCCallback            Pointer          NULL
     XtNtranslations        XtCTranslations        XtTranslations   NULL





          XtNancestorSensitive
               This argument specifies whether the immediate parent of
               the widget will receive input events.  Use the function
               XtSetSensitive if you are changing the argument to
               preserve data integrity (see XtNsensitive below).

          XtNx This argument contains the x-coordinate of the widget's
               upper left hand corner (excluding the border) in
               relation to its parent widget.  Programs should not
               change this argument directly, but use geometry manager
               requests instead in order to ensure proper
               relationships with other widgets are maintained.

          XtNy This argument contains the y-coordinate of the widget's
               upper left hand corner (excluding the border) in
               relation to its parent widget.  Programs should not
               change this argument directly, but use geometry manager
               requests instead in order to ensure proper
               relationships with other widgets are maintained.

          XtNwidth
               This argument contains the width of the widget's window
               in pixels, not including the border area. Programs
               should not change this argument directly, but use
               geometry manager requests instead in order to ensure
               proper relationships with other widgets are maintained.

          XtNheight
               This argument contains the height of the widget's
               window in pixels, not including the border area.
               Programs should not change this argument directly, but
               use geometry manager requests instead in order to
               ensure proper relationships with other widgets are
               maintained.

          XtNdepth
               Determines how many bits should be used for each pixel
               in the widget's window.  Programs should not change or
               set this, it will be set by the Xt Intrinsics when the
               widget is created.

          XtNbackground
               This argument specifies the background color for the
               widget.

          XtNbackgroundPixmap
               The application can specify a pixmap to be used for
               tiling the background. The first tile is place at the
               upper left hand corner of the widget's window.

          XtNborderWidth
               This argument sets the width of the border that
               surrounds the widget's window on all four sides.  The
               width is specified in pixels.  A width of zero means no
               border will show.

          XtNborderColor
               This argument specifies the color of the border.

          XtNborderPixmap
               The application can specify a pixmap to be used for
               tiling the border. The first tile is place at the upper
               left hand corner of the border.

          XtNsensitive
               This argument determines whether a widget will receive
               input events.  If a widget is sensitive, the Xt
               Intrinsic's Event Manager will dispatch to the widget
               all keyboard, mouse button, motion, window enter/leave,
               and focus events.  Insensitive widgets do not receive
               these events.  Use the function XtSetSensitive if you
               are changing the sensitivity argument.  That way you
               ensure that if a parent widget has XtNsensitive set to
               FALSE, the ancestor-sensitive flag of all its children
               will be appropriately set.

          XtNmappedWhenManaged
               If set to TRUE, the widget will be mapped (made
               visible) as soon as it is both realized and managed.
               If set to FALSE, the client is responsible for mapping
               and unmapping the widget.  If the value is changed from
               TRUE to FALSE after the widget has been realized and
               managed, the widget is unmapped.

          XtNdestroyCallback
               This is a pointer to a callback list containing
               routines to be called when the widget is destroyed.

          XtNtranslations
               This is a pointer to a translations list.


                            Arrow Resource Set
          Name                Class               Type   Default
          ______________________________________________________
          XtNarrowDirection   XtCArrowDirection   int    up



          XtNarrowDirection
               This resource is the means by which the arrow direction
               is set.  It can be defined in either of two ways:
               Through the .Xdefaults file by the strings "up",
               "down", "left" and "right".  Within an arg list for use
               in XtSetValues() by the defines XwARROW_UP,
               XwARROW_DOWN, XwARROW_LEFT and XwARROW_RIGHT.

                             Button Resource Set
     Name               Class              Type            Default
     ___________________________________________________________________
     XtNfont            XtCFont            XFontStruct *   Fixed
     XtNlabel           XtCLabel           caddr_t         NULL
     XtNlabelLocation   XtCLabelLocation   int             right
     XtNvSpace          XtCVSpace          int             2
     XtNhSpace          XtCHSpace          int             2
     XtNset             XtCSet             Boolean         FALSE
     XtNsensitiveTile   XtCSensitiveTile   int             75_foreground
     XtNborderWidth     XtCBorderWidth     int             0



          XtNfont
               The application may define the font to be used when
               displaying the button string.  Any valid X11 font may
               be used.

          XtNlabel
               The application may define the button label by
               providing a pointer to a null terminated character
               string.  If no label is provided the class name of the
               widget will be used.

          XtNlabelLocation
               For those buttons that have a separate graphic, this
               field specifies whether the label should appear to the
               left or to the right of that graphic.  The acceptable
               values are the defines XwRIGHT (the default) and
               XwLEFT.

          XtNvSpace
               The application may determine the number of pixels of
               space left between the top of the button and the top of
               the button label, and between the bottom of the label
               and the bottom of the button.

          XtNhSpace
               The application may determine the number of pixels of
               space left between the left side of the button and the
               leftmost part of the button label, and between the
               rightmost part of the button label and the right side
               of the button.

          XtNset
               If set to true the button will display itself in its
               selected state.  This is useful for showing some
               conditions as active when a set of buttons appear.

          XtNsensitiveTile
               The application can determine the mix of foreground and
               background that will be used to draw text to show
               insensitivity. The #defines for setting the values
               through an arg list and the strings to be used in the
               .Xdefault file are described in XwCreateTile(3X).  The
               default is Xw75_FOREGROUND which is a 75/25 mix of
               foreground and background colors.

          XtNborderWidth
               This redefines the core class default border width from
               1 pixel to 0 pixels.

                           Cascade Resource Set
           Name               Class              Type   Default
           ____________________________________________________
           XtNtitlePosition   XtCTitlePosition   int    top



          XtNtitlePosition
               This resource is used to control where the title is
               displayed within the cascading menupane.  To
               programmatically set this resource, use either the
               XwTOP, XwBOTTOM or XwBOTH define.  To set this resource
               using the .Xdefaults file, use one of the strings top,
               bottom or both.

              Constraint Resource Set -- Children of FORM(3X)
      Name               Class              Type      Default
      _______________________________________________________________
      XtNxRefName        XtCXRefName        String    NULL
      XtNxRefWidget      XtCXRefWidget      Widget    the parent form
      XtNxOffset         XtCXOffset         int       0
      XtNxAddWidth       XtCXAddWidth       Boolean   FALSE
      XtNxVaryOffset     XtCXVaryOffset     Boolean   FALSE
      XtNxResizable      XtCXResizable      Boolean   FALSE
      XtNxAttachRight    XtCXAttachRight    Boolean   FALSE
      XtNxAttachOffset   XtCXAttachOffset   int       0
      XtNyRefName        XtCYRefName        String    NULL
      XtNyRefWidget      XtCYRefWidget      Widget    the parent form
      XtNyOffset         XtCYOffset         int       0
      XtNyAddHeight      XtCYAddHeight      Boolean   FALSE
      XtNyVaryOffset     XtCYVaryOffset     Boolean   FALSE
      XtNyResizable      XtCYResizable      Boolean   FALSE
      XtNyAttachBottom   XtCYAttachBottom   Boolean   False
      XtNyAttachOffset   XtCYAttachOffset   int       0



          XtNxRefName XtNyRefName
               When a widget is added as a child of the form its
               position is determined by the widget it references.
               The reference widget must be created before the widget
               which references it is created.  These resources allow
               the name of the reference widget to be given.  The form
               converts this name to a widget to use for the
               referencing.  Any widget that is a direct child of the
               form or the form widget itself can be used as a
               reference widget.

          XtNxRefWidget XtNyRefWidget
               The application can specify the reference widget as
               either a string representing the name of the widget (as
               described above) or as the Widget ID value returned
               from XtCreateWidget.  This resource is the means by
               which a widget ID is specified.

          XtNxOffset XtNyOffset
               The location of a widget is determined by the widget it
               references.  As the default, a widget's position on the
               form exactly matches its reference widget's location.
               There are two additional pieces of data used to
               determine the location.  This resource defines an
               integer value representing the number of pixels to add
               to the reference widget's location when calculating the
               widget's location.

          XtNxAddWidth XtNyAddHeight
               This resource indicates whether or not to add the width
               or height of the reference widget to a widget's
               location when determining the widget's position.

          XtNxVaryOffset XtNyVaryOffset
               When a form is resized, it processes the constraints
               contained within its children.  This resource allows
               the spacing between a widget and the widget it
               references to vary (either increase or decrease) when a
               form's size changes.  For widgets that directly
               reference the form widget this resource is ignored.
               The spacing between a widget and its reference widget
               can decrease to 0 pixels if the XtNAddWidth resource is
               FALSE or to 1 pixel if XtNAddWidth is TRUE.

          XtNxResizable XtNyResizable
               This resource specifies whether the form can resize
               (shrink) a widget.  When a form's size becomes smaller
               the form will resize its children only after all of the
               inter-widget spacing of widget's with their VaryOffset
               resource set to TRUE.  The form keeps track of a
               widgets initial size or size generated through
               XtSetValues so that when the form then becomes larger
               the widget will grow to it original size and no larger.

          XtNxAttachRight XtNyAttachBottom
               Widgets are normally referenced from "form left" to
               "form right" or from "form top" to "form bottom."  The
               attach resources allow this reference to occur on the
               opposite edge of the form.  These resources, when used
               in conjunction with the varyOffset resources, allow a
               widget to float along the right or bottom edge of the
               form.  This is done by setting both the Attach and
               VaryOffset resources to TRUE.  A widget can also span
               the width and height of the form by setting the Attach
               resource to TRUE and the VaryOffset resource to FALSE.

          XtNxAttachOffset XtNyAttachOffset
               When a widget is attached to the right or bottom edge
               of the form (through the above resources), the
               separation between the widget and the form is defaulted
               to 0 pixels.  This resource allows that separation to
               be set to some other value.  Also, for widgets that are
               not attached to the right or bottom edge of the form,
               this constraint specifies the minimum spacing between
               the widget and the form.


                          ImageEdit Resource Set
         Name               Class              Type       Default
         ________________________________________________________
         XtNimage           XtCImage           XImage *   NULL
         XtNpixelScale      XtCPixelScale      int        6
         XtNgridThickness   XtCGridThickness   int        1
         XtNdrawColor       XtCBackground      Pixel      Black
         XtNeraseColor      XtCBackground      Pixel      White
         XtNeraseOn         XtCEraseOn         Boolean    True
         XtNbackground      XtCBackground      Pixel      Black



          XtNimage
               This is a pointer to the image that is displayed in the
               grid.  It points to an XImage structure.

          XtNpixelScale
               This resource defines the magnification factor to use
               when displaying the expanded image.

          XtNgridThickness
               This resource defines the separation between the
               magnified pixels.

          XtNdrawColor
               This resource define the color to be used for drawing
               in the widget.

          XtNeraseColor
               This resource defines the color used for erasing in the
               widget.  Erase is enabled by the eraseOn resource.
               When selections occur on the widget, the widget
               determines the color of the pixel selected.  If the
               selected pixel is not the same as the draw color, the
               draw color will be used to draw until the button
               release occurs.  If the selected pixel is the draw
               color, the erase color will be used for drawing until
               the button release occurs.

          XtNeraseOn
               This resource is a boolean variable that indicates
               whether erasing is enabled or not.  If set to TRUE,
               drawing will occur as described above.  If set to
               FALSE, only the draw color will be used for drawing.

          XtNbackground
               ImageEdit redefines the core class background resource
               to default it to the color black.  This is then used as
               the background color for the widget's window which will
               be reflected in the grid color.


                                    List Resource Set
     Name                     Class                    Type          Default
     _______________________________________________________________________________
     XtNnumColumns            XtCNumColumns            int           1
     XtNcolumnWidth           XtCColumnWidth           int           0
     XtNelementHeight         XtCElementHeight         int           0
     XtNselectionStyle        XtCSelectionStyle        int           XwINSTANT
     XtNselectionMethod       XtCSelectionMethod       int           XwSINGLE
     XtNselectionBias         XtCSelectionBias         int           XwNO_BIAS
     XtNelementHighlight      XtCElementHighlight      int           XwBORDER
     XtNdestroyMode           XtCDestroyMode           int           XwSHRINK_COLUMN
     XtNnumSelectedElements   XtCNumSelectedElements   int           0
     XtNselectedElements      XtCSelectedElements      WidgetList*   NULL



          XtNnumColumns
               The number of columns in the list.

          XtNcolumnWidth
               The width of each column. If the value is 0, the width
               defaults to the width of the largest element.

          XtNelementHeight
               The height of each element. Zero implies that each
               element is resized to the height of the tallest
               element.

          XtNselectionStyle
               Controls the type of selection - either XwINSTANT or
               XwSTICKY.

          XtNselectionMethod
               Controls the selection mode - either one element at a
               time (XwSINGLE) or multiple (XwMULTIPLE).

          XtNselectionBias
               Bias mode - either XwNO_BIAS, XwROW_BIAS or XwCOL_BIAS.

          XtNelementHighlight
               This controls the highlight mode on selection - either
               border highlighting (XwBORDER) or inversion (XwINVERT).

          XtNdestroyMode
               Controls the visual appearance of the list when an
               element is deleted. One of XwSHRINK_COLUMN,
               XwSHRINK_ALL or XwNO_SHRINK.

          XtNSelectedElements
               This is a list of the widgets currently marked as
               selected. An application program can issue a call to
               XtGetValues on this resource at any time to query the
               selected elements.

          XtNnumSelectedElements
               The number of widgets currently selected (in the list
               pointed to by XtNselectedElements).
            Constraint Resource Set -- Children of XWLIST(3X)
          Name                Class               Type   Default
          ______________________________________________________
          XtNrowPosition      XtCRowPosition      int    -1
          XtNcolumnPosition   XtCColumnPosition   int    -1



          XtNrowPosition,XtNcolumnPosition
               This is the row,column location of the element in the
               list.  If these values are greater than or equal to
               zero, the widget is inserted into the list at that
               position. If the values are left at -1, the List widget
               will create a list with XtNnumColumns number of
               columns, assigning row and column positions as needed.

                             Manager Resource Set
     Name                    Class                   Type      Default
     ____________________________________________________________________
     XtNforeground           XtCForeground           Pixel     Black
     XtNbackgroundTile       XtCBackgroundTile       int       background
     XtNhighlightThickness   XtCHighlightThickness   int       0
     XtNtraversalOn          XtCTraversalOn          Boolean   FALSE
     XtNlayout               XtCLayout               int       minimize
     XtNnextTop              XtCCallback             Pointer   NULL



          XtNforeground
               This resource defines the foreground color for the
               widget.  Widgets built upon this class can use the
               foreground for their drawing.

          XtNbackgroundTile
               This resource defines the tile to be used for the
               background of the widget.  It defines a particular tile
               to be combined with the foreground and background pixel
               colors.  The #defines for setting the tile value
               through an arg list and the strings to be used in the
               .Xdefaults files are described in XwCreateTile(3X).

          XtNhighlightThickness
               This resource specifies an amount of border spacing
               around the border of the widget.  It is typically used
               by managers to have padding space around their children
               and to draw special borders.  This highlight thickness
               is and an integer value representing the width, in
               pixels, of the border area.  This value must be greater
               than or equal to 0.

          XtNtraversalOn
               The application can define whether keyboard traversal
               is active or not.  The default for this resource is
               typically FALSE.

          XtNlayout
               This flag controls how the manager widget's geometry
               deals with too little or too much space.  The valid
               settings for this field are XwMINIMIZE, XwMAXIMIZE and
               XwIGNORE.  (The counterpart for these settings to be
               used in resource files, like .Xdefaults, are: minimize,
               maximize and ignore.)  Typically, the XwMINIMIZE means
               to request the minimum amount of space necessary to
               display all children.  The XwMAXIMIZE means that if
               additional space is given to the widget (i.e., at
               create time or set values time) then use the additional
               space as padding between children widgets. The XwIGNORE
               settings means, maintain the size set at create time or
               at set value time and never change size in response to
               a child widget's request (i.e., added/deleted/modified
               a child widget).  Look at the description of the
               individual manager widgets to see if this feature is
               supported.

          XtNnextTop
               This callback procedure is used by the applications
               programmer to move the focus from one toplevel widget
               to another toplevel widget.

          NOTE:  The XwManagerClass provides a specialized insert
          child procedure.  Manager widgets for which ordering makes
          sense (such as the RowCol manager widget) make use of the
          procedure.  It allows an application to provide a special
          argument list type XtNinsertPosition with an integer value.
          This value specifies where in the child list the new widget
          is inserted.

                            MenuButton Resource Set
     Name                     Class                    Type       Default
     _____________________________________________________________________
     XtNlabelType             XtCLabelType             int        XwSTRING
     XtNlabelImage            XtCLabelImage            XImage *   NULL
     XtNcascadeImage          XtCCascadeImage          XImage *   NULL
     XtNcascadeOn             XtCCascadeOn             Widget     NULL
     XtNmarkImage             XtCMarkImage             XImage *   NULL
     XtNsetMark               XtCSetMark               Boolean    FALSE
     XtNkbdAccelerator        XtCKbdAccelerator        String     NULL
     XtNmnemonic              XtCMnemonic              String     NULL
     XtNmgrOverrideMnemonic   XtCMgrOverrideMnemonic   Boolean    TRUE
     XtNmenuMgrId             XtCMenuMgrId             Widget     NULL
     XtNcascadeSelect         XtCCallback              Pointer    NULL
     XtNcascadeUnselect       XtCCallback              Pointer    NULL



          XtNlabelType
               Two styles of labels are supported by the MenuButton
               widget: text string labels and image labels.  The text
               string label is defined by the Button resource XtNlabel
               and the image label is defined by the XtNlabelImage
               resource.  To programmatically set this resource, use
               either the XwSTRING define or the XwIMAGE define.  To
               set this resource using the .Xdefaults files, use one
               of the strings string or image.

          XtNlabelImage
               If XtNlabelType indicates that a label image should be
               displayed, then this resource contains the image used.
               This is a pointer to an XImage structure which
               describes the label image data.  If the image is
               defined with XYBitmap data, then the image is nicely
               inverted when the menubutton is highlighted.

          XtNcascadeImage
               This resource points to an XImage structure which
               describes the cascade image data.  The cascade area is
               a fixed size (16x16).  If this resource is set to NULL,
               then the default cascade image, an arrow, is used. The
               cascade indicator is not displayed if the XtNcascadeOn
               resource is set to NULL.  If the image is defined with
               XYBitmap data, then the image is nicely inverted when
               the menubutton is highlighted.

          XtNcascadeOn
               This resource determines if the cascade indicator is
               displayed.  It is typically set only by the menu
               manager and contains the widget ID of the menupane
               which cascades as a submenu from this menubutton.  This
               resource is set to NULL to disable the display of the
               cascade indicator.

          XtNmarkImage
               This resource points to an XImage structure which
               describes the mark image data.  The mark area is a
               fixed size (16x16).  If this resource is set to NULL,
               then the default mark image is used.  The mark is not
               displayed if the XtNsetMark resource is set to FALSE.
               If the image is defined with XYBitmap data, then the
               image is nicely inverted when the menubutton is
               highlighted.

          XtNsetMark
               This boolean resource determines whether the mark is
               displayed.

          XtNkbdAccelerator
               This resource is a string which describe a set of
               modifiers and the key which may be used to select this
               menubutton widget.  The format for this string is
               identical to that used by the translations manager,
               with the exception that only a single event may be
               specified, and only KeyPress events are allowed.  If
               the menubutton does not have a menu manager associated
               with it, then this resource is ignored.  The menu
               manager determines when, and if, this accelerator is
               available.

          XtNmnemonic
               Certain menu managers allow the menubuttons to have a
               mnemonic.  Mnemonics provide the user with another
               means for selecting a menu button.  This resource is a
               NULL terminated string, containing a single character.
               The menu manager determines if this mnemonic is
               available.  If the XtNmgrOverrideMnemonic resource is
               false and the mnemonic is found in the label string,
               then that character is underlined when the menubutton
               is displayed.  Refer to XwPullDown(3X) man page for
               further discussion of traversal.

          XtNmgrOverrideMnemonic
               This boolean resource determines if the mnemonic
               character is underlined in the label string.  If it is
               set to TRUE, then the mnemonic character is not
               underlined.  This resource is typically set only by
               menu managers.

          XtNmenuMgrId
               This resource is used only by menu managers to indicate
               to the menubutton widget its menu manager.  If this is
               set to NULL, then the menubutton checks if it has a
               menu manager at the appropriate level in its parentage.
               This resource should not be set by users.

          XtNcascadeSelect
               This resource provides the means for registering
               callback routines which are invoked if a cascade
               indicator is displayed and the pointer moves into the
               cascade area.  In some cases, the menu manager
               suppresses the calling of these callback routines.  The
               menubutton does not pass any data in the call_data
               field of the callback.

          XtNcascadeUnselect
               This resource provides the means for registering
               callback routines which are invoked if a cascade
               indicator is displayed and the pointer moves out of the
               cascade area.  These callbacks are only invoked if the
               XtNcascadeSelect callbacks have been previously
               invoked.  The menubutton passes data in the call_data
               field of the callback.  It is a pointer to the
               XwunselectParams data structure shown below:

                 typedef struct
                 {
                   Dimension         rootX;
                   Dimension         rootY;
                   Boolean           remainHighlighted;
                 } XwunselectParams;


          The rootX and rootY parameters have the position of the
          pointer relative to the root window when the event occurred
          which caused the XtNcascadeUnselect call backs to be called.
          The remainHighlighted parameter is used by cascading
          submenus.  It is set by the menu manager's call back routine
          to indicate that the pointer traversed from a cascade into
          the submenu.  If the boolean is set TRUE, then the
          menubutton does not unhighlight on exit.  It also sets up an
          event handler on its parent menupane so that it is notified
          if the pointer enters another menubutton, in which case the
          menubutton should then unhighlight.

                             MenuMgr Resource Set
     Name                   Class                  Type      Default
     _____________________________________________________________________
     XtNassociateChildren   XtCAssociateChildren   Boolean   TRUE
     XtNmenuPost            XtCMenuPost            String    "<Btn1Down>"
     XtNmenuSelect          XtCMenuSelect          String    "<Btn1Up>"
     XtNmenuUnpost          XtCMenuUnpost          String    NULL
     XtNkbdSelect           XtCKBDSelect           String    "<Key>Select"



          XtNassociateChildren
               This resource indicates whether the menu hierarchy
               controlled by the menu manager is accessible only from
               within the associated widget, or from within the widget
               and any of the widget's children.

          XtNmenuPost
               This string resource describes the button event and any
               required modifiers needed to post one of the top level
               menupanes controlled by the menu manager.  The string
               is specified using the syntax supported by the Xt
               Intrinsic's translation manager, with three exceptions.

               First, only a single event may be specified.  Secondly,
               the event must be a ButtonPress or ButtonRelease event.
               Thirdly, all modifiers specified are interpreted as
               being exclusive; this means that only the specified
               modifiers can be present when the button event occurs.

          XtNmenuSelect
               This string resource describes the button event and any
               required modifiers needed to select a menu button
               within any of the menupanes controlled by the menu
               manager.  The string is specified using the syntax
               supported by the Xt Intrinsic's translation manager,
               with three exceptions. First, only a single event may
               be specified.  Secondly, the event must be a
               ButtonPress or ButtonRelease event.  Thirdly, all
               modifiers specified are interpreted as being exclusive;
               this means that only the specified modifiers can be
               present when the button event occurs.

          XtNmenuUnpost
               This string resource describes the key event and any
               required modifiers needed to unpost the currently
               viewable set of menupanes controlled by the menu
               manager.  This provides the user with the means for
               unposting a menu hierarchy from the keyboard, without
               selecting a menu button.  The string is specified using
               the syntax supported by the Xt Intrinsic's translation
               manager, with three exceptions. First, only a single
               event may be specified.  Secondly, the event must be a
               key event. Thirdly, all modifiers specified are
               interpreted as being exclusive; this means that only
               the specified modifiers can be present when the button
               event occurs.

          XtNkbdSelect
               This string resource describes the key event and any
               required modifiers needed to select the currently
               highlighted menu button. This provides the user with
               the means for selecting a menu item from the keyboard,
               without being required to use the mouse.  The string is
               specified using the syntax supported by the Xt
               Intrinsic's translation manager, with three exceptions.
               First, only a single event may be specified.  Secondly,
               the event must be a key event. Thirdly, all modifiers
               specified are interpreted as being exclusive; this
               means that only the specified modifiers can be present
               when the button event occurs.

                            MenuPane Resource Set
     Name                  Class              Type            Default
     ____________________________________________________________________
     XtNtitleShowing       XtCTitleShowing    Boolean         TRUE
     XtNmgrTitleOverride   XtCTitleOverride   Boolean         FALSE
     XtNtitleType          XtCTitleType       int              XwSTRING
     XtNtitleString        XtCTitleString     String          widget name
     XtNtitleImage         XtCTitleImage      XImage *        NULL
     XtNfont               XtCFont            XFontStruct *   "fixed"
     XtNattachTo           XtCAttachTo        String          NULL
     XtNmnemonic           XtCMnemonic        String          NULL
     XtNselect             XtCCallback        Pointer         NULL



          XtNtitleShowing
               This resource may be used by the application to control
               the displaying of a title within the menupane.  This
               may be overridden, however, by a menu manager using the
               XtNmgrTitleOverride resource.

          XtNmgrTitleOverride
               This resource is not intended to be used by
               applications; it should only be used by a menu manager
               widget, for overriding the application, and forcing off
               the menupane title.  This is useful for those menu
               managers whose style dictates that certain menupane
               should not have a title displayed.

          XtNtitleType
               Two styles of titles are supported by the MenuPane
               widget.  They include text string titles and image
               titles.  To programmatically set this resource, use
               either the XwSTRING define or the XwIMAGE define.  To
               set this resource using the .Xdefaults file, use one of
               the strings string or image.

          XtNtitleString
               If the title type resource indicates that a title
               string should be displayed, then this resource will
               contain the title string which is to be used.  In the
               case where the application does not specify a title
               string, the name of the menupane widget will be used.
               The title is displayed using the foreground color.

          XtNtitleImage
               If the title type resource indicates that a title image
               should be displayed, then this resource will contain a
               pointer to an XImage structure; this structure
               describes the title image data.

          XtNfont
               If the title type resource indicates that a title
               string should be displayed, then this resource will
               describe the font used to draw the title string.

          XtNattachTo
               When used in conjunction with a menu manager, this
               resource provides the means by which the menupane may
               be attached as a cascade to a menubutton.  The string
               which is specified represents the name of the
               menubutton to which the menupane is to be attached;
               this provides the means by which the menu manager is
               able to construct the menu tree.  To specify that this
               menupane should be treated as the top level menupane
               within the menu tree, this string should contain the
               name of the menu manager widget, instead of a
               menubutton widget.  Specifying a NULL string indicates
               that the menupane will not be presently attached to
               anything.  If the menupane does not have a menu manager
               associated with it, then this resource is unused.

          XtNmnemonic
               Certain menu managers allow some of their menupanes to
               have a mnemonic.  Mnemonics may be used to post a
               menupane using the keyboard, instead of using the
               pointer device.  This resource is a NULL terminated
               string, containing a single character.  Typically, the
               character is the same as one present in the menupane
               title.

          XtNselect
               This resource provides the means for registering
               callback routines which will be invoked when the
               menupane receives a select action.

                           MenuSep Resource Set
        Name               Class              Type   Default
        __________________________________________________________
        XtNseparatorType   XtCseparatorType   int    XwSINGLE_LINE

          XtNseparatorType
               This resource defines the type of line drawing to be
               done in the menu separator widget.  Five different line
               drawing styles are provided.  They are single, double,
               single dashed, double dashed and no line.  The
               separator type can be set through an argument list by
               using one of the defines: XwSINGLE_LINE, XwDOUBLE_LINE,
               XwSINGLE_DASHED_LINE, XwDOUBLE_DASHED_LINE, and
               XwNO_LINE.  The separator type can be set through the
               .Xdefaults file by using one of the following strings:
               single_line, double_line single_dashed_line,
               double_dashed_line and no_line.


                    PushButton Resource Set -- CORE(3X)
                 Name        Class       Type      Default
                 _________________________________________
                 XtNtoggle   XtCToggle   Boolean   FALSE



          XtNtoggle
               If set to TRUE makes the pushbutton act like a toggle
               button.

                               Panel Resource Set
     Name                       Class                      Type      Default
     _______________________________________________________________________
     XtNtopLevel                XtCTopLevel                Boolean   TRUE
     XtNdisplayTitle            XtCDisplayTitle            Boolean   TRUE
     XtNvSpace                  XtCVSpace                  int       0
     XtNhSpace                  XtCHSpace                  int       0
     XtNtitleToMenuPad          XtCTitleToMenuPad          int       0
     XtNworkSpaceToSiblingPad   XtCWorkSpaceToSiblingPad   int       0



          XtNtopLevel
               Indicates whether not the panel is a candidate for
               management by a window manager.  This should always be
               set by the application.

          XtNdisplayTitle
               Ignored if XtNtopLevel is FALSE.

               Otherwise, if XtNdisplayTitle is TRUE, the titlebar
               child will be displayed.  If XtNdisplayTitle is FALSE,
               the titlebar child will not be displayed.

               This resource should be set by the user in the resource
               defaults file.  If the user runs the application
               without a window manager or with a non-titling window
               manager, this resource should be set to TRUE.  If the
               user runs with a titling window manager this resource
               should be set to FALSE.

          XtNvSpace
               Padding between the top of the Panel and the top child
               in pixels, and between the bottom of the Panel and the
               bottom child in pixels.

          XtNhSpace
               Padding between the sides of the Panel and the sides of
               the displayed children.

          XtNtitleToMenuPad
               If both a title and a menu child are being displayed,
               the padding between them in pixels.

          XtNworkSpaceToSiblingPad
               The padding between the work space child and the
               sibling above it.  If there is no title nor menu being
               displayed this resource is ignored.

             Constraint Resource Set -- Children of PANEL(3X)
      Name              Class             Type           Default
      _______________________________________________________________
      XtNwidgetType     XtCWidgetType     XwWidgetType   XwWORK_SPACE
      XtNcausesResize   XtCCausesResize   Boolean        FALSE



          XtNwidgetType
               Indicates to Panel what type of child it is.  The
               possible values are, XwWORK_SPACE, specified in a
               resource defaults file as "work space", XwTITLE,
               specified in a resource defaults file as "title", and
               XwPULLDOWN, specified in a resource defaults file as
               "pulldown".

          XtNcausesResize
               Controls whether changes in the child geometry can
               cause the Panel to make a geometry request of its
               parent.  If TRUE for only one child, Panel will request
               changes whenever that child requests changes.  If TRUE
               for multiple children, Panel will request changes
               whenever any of that set of children grow, and when all
               of that set of children have shrunk.

          The behavior of this resource can be nullified by setting
          XwNLayout to XwIGNORE.

                           PopupMgr Resource Set
        Name                 Class                Type      Default
        ___________________________________________________________
        XtNstickyMenus       XtCStickyMenus       Boolean   FALSE
        XtNpostAccelerator   XtCPostAccelerator   String    NULL



          XtNstickyMenus
               This resource controls whether the menu manager
               operates in sticky menu mode.

          XtNpostAccelerator
               This resource indicates the keyboard event that can be
               used to post the top level menupane.  The string is
               specified using the syntax supported by the translation
               manager, with three exceptions.  First, only a single
               event may be specified.  Second, the event must be a
               KeyPress or KeyRelease event.  Third, all modifiers
               specified are interpreted as being exclusive; this
               means that only the specified modifiers can be present
               when the key event occurs.

                    Primitive Resource Set -- XWPRIMITIVE(3X)
     Name                    Class                   Type      Default
     ________________________________________________________________________
     XtNforeground           XtCForeground           Pixel     Black
     XtNbackgroundTile       XtCBackgroundTile       int       background
     XtNtraversalType        XtCTraversalType        int       highlight_off
     XtNhighlightStyle       XtCHighlightStyle       int       pattern_border
     XtNhighlightColor       XtCForeground           Pixel     Black
     XtNhighlightTile        XtCHighlightTile        int       50_foreground
     XtNhighlightThickness   XtCHighlightThickness   int       0
     XtNrecomputeSize        XtCRecomputeSize        Boolean   TRUE
     XtNselect               XtCCallback             Pointer   NULL
     XtNrelease              XtCCallback             Pointer   NULL



          XtNforeground
               This resource defines the foreground color for the
               widget.  Widgets built upon this class can use the
               foreground for their drawing.

          XtNbackgroundTile
               This resource defines the tile to be used for the
               background of the widget.  It defines a particular tile
               to be combined with the foreground and background pixel
               colors.  The #defines for setting the tile value
               through an arg list and the strings to be used in the
               .Xdefaults files are described in XwCreateTile(3X).

          XtNhighlightColor
               This resource defines the color to be used in the
               highlighting drawn by Primitive around the exterior of
               the widget.

          XtNhighlightStyle
               Two styles of border highlighting are supported by
               Primitive.  They include drawing the highlighting with
               a pattern and widget specific border drawing.  To set
               the highlight style through an arg list, use the
               #define XwPATTERN_BORDER.  To set the highlight style
               through the .Xdefaults file, use the string
               pattern_border.

               For Widget Writers:  The highlighting style of
               XwWIDGET_DEFINED is used exclusively by widgets with
               special highlighting requirements that need to override
               the normal highlighting types.  To use, the widget
               inserts a highlight and unhighlight procedure into its
               primitive class and forces the highlightStyle field in
               the primitive instance to the define XwWIDGET_DEFINED.
               The primitive class will then make the appropriate
               calls to the highlight and dehighlight functions.

          XtNhighlightTile
               When the highlight style is XwPATTERN_BORDER, one of
               several tiles can be used for the drawing.  The
               #defines for setting the values through an arg list and
               the strings to be used in the .Xdefaults files are
               described in XwCreateTile(3X).

          XtNhighlightThickness
               The width of the highlight can be set using this
               resource.  It is specified as an integer value
               representing the width, in pixels, of the highlight to
               be drawn.  This value must be greater than or equal to
               0.  Note that highlighting takes place within the
               window created for a widget and is separate from the
               window border.

          XtNtraversalType
               Three modes of border highlighting activation are
               supported by Primitive.  They are, no highlighting,
               highlight on the cursor entering the widgets window and
               highlight for keyboard traversal.  The last mode is
               used by the keyboard traversal mechanism to indicate
               the widget that is to receive all input occurring
               within the widget hierarchy.  To set the traversal type
               through an arg list, one of three defines can be used.
               They are XwHIGHLIGHT_OFF, XwHIGHLIGHT_ENTER and
               XwHIGHLIGHT_TRAVERSAL.  The strings that can be used to
               set this resource through the .Xdefaults file are
               highlight_off, highlight_enter, and
               highlight_traversal.

          XtNrecomputeSize
               This boolean resource indicates to a primitive widget
               whether it should recalculate its size when an
               application makes a XtSetValues call to it.  If set to
               TRUE, the widget will perform its normal size
               calculations will may cause its geometry to change.  If
               set to FALSE, the widget will not recalculate its size.

          XtNselect
               This is a reserved callback list used by widget
               subclasses built upon Primitive to implement there
               callback lists.

          XtNrelease
               This is a reserved callback list used by widget
               subclasses built upon Primitive to implement there
               callback lists.

                          Row Column Resource Set
        Name            Class           Type      Default
        ___________________________________________________________
        XtNhSpace       XtCHSpace       int       4
        XtNvSpace       XtCVSpace       int       4
        XtNlayoutType   XtCLayoutType   int       requested_columns
        XtNcolumns      XtCColumns      int       1
        XtNforceSize    XtCForceSize    Boolean   FALSE
        XtNsingleRow    XtCSingleRow    Boolean   FALSE
        XtNmode         XtCMode         int       n_of_many



          XtNhSpace
               The application may determine the number of pixels of
               space left between each element within a given row.
               This defines a minimum spacing.

          XtNvSpace
               The application may determine the number of pixels of
               space left between each column.  This defines a minimum
               spacing.

          XtNlayoutType
               The application can specify the type of layout the row
               column manager is to perform.  Allowable argument list
               settings are XwREQUESTED_COLUMNS, XwMAXIMUM_COLUMNS and
               XwMAXIMUM_UNALIGNED.  To set this value in .Xdefaults
               or another resource file use the strings
               requested_columns, maximum_columns and
               maximum_unaligned.

          XtNcolumns
               The application can specify the number of columns to be
               used when laying out the widgets children.

          XtNforceSize
               The application has the option of forcing the widths of
               each widget in a column and the heights of each widget
               in a row to be the same.  This can be used, for example
               to enforce an orderly layout for a group of buttons.
               For the layout type of maximum unaligned, only the
               heights of the widgets in a row are forced to the same
               size.

          XtNsingleRow
               For layout types of maximum columns and maximum
               unaligned, the application has the option of having the
               row column manager to try to lay itself out in a single
               row whenever one of its children makes a geometry
               request.

          XtNmode
               The application can specify whether the selection
               policy is n_of_many or one_of_many. Allowable argument
               list settings are XwONE_OF_MANY and XwN_OF_MANY.  To
               set this value in .Xdefaults or another resource file
               use the strings one_of_many and n_of_many.

                        StaticRaster Resource Set
        Resource            Class               Type       Default
        __________________________________________________________
        XtNsRimage          XtCSRimage          XImage *   NULL
        XtNinvertOnSelect   XtCInvertOnSelect   Boolean    TRUE
        XtNshowSelected     XtCIShowSelected    Boolean    TRUE
        XtNset              XtCSet              Boolean    FALSE



          XtNsRimage
               This is a pointer to an XImage data structure.

          XtNinvertOnSelect
               If this resource is TRUE, the raster image will invert
               its foreground and background colors when selected, and
               return to normal when unselected.

          XtNshowSelected
               If TRUE, this will cause the image to appear to be
               indented when selected, and raised when unselected.

          XtNset
               This is a Boolean resource which indicates whether the
               raster is currently selected (TRUE) or not (FALSE).

                          StaticText Resource Set
        Name           Class          Type            Default
        ___________________________________________________________
        XtNhSpace      XtCHSpace      int             2
        XtNvSpace      XtCVSpace      int             2
        XtNalignment   XtCAlignment   XwAlignment     XwALIGN_LEFT
        XtNgravity     XtCGravity     int             CenterGravity
        XtNwrap        XtCWrap        Boolean         TRUE
        XtNstrip       XtCStrip       Boolean         TRUE
        XtNlineSpace   XtCLineSpace   int             0
        XtNfont        XtCFont        XFontStruct *   Fixed
        XtNstring      XtCString      char *          NULL



          XtNhSpace
               This specifies the number of pixels to maintain between
               the text and the highlight area to the right and left
               of the text.

          XtNvSpace
               This specifies the number of pixels to maintain between
               the text and the highlight area to the top and bottom
               of the text.

          XtNalignment
               This specifies the alignment to be applied when drawing
               the text.  The alignment resource is interpreted
               without regard to case.

               Alignment never causes leading or trailing spaces to be
               stripped.

               Alignment may have the following values and effects:

                    XwALIGN_LEFT will cause the left sides of the
                    lines will be vertically aligned.  Specified in
                    resource default file as "Left".

                    XwALIGN_CENTER will cause the centers of the lines
                    will be vertically aligned.  Specified in resource
                    default file as "Center".

                    XwALIGN_RIGHT will cause the right sides of the
                    lines will be vertically aligned.  Specified in
                    resource default file as "Right".

          XtNgravity
               This resource controls the use of extra space within
               the widget.

                    CenterGravity will cause the string to be centered
                    in the extra space.  Specified in the resource
                    defaults file as "CenterGravity".

                    NorthGravity will cause the string to always to be
                    at the top of the window centered in any extra
                    width.  Specified in the resource defaults file as
                    "NorthGravity".

                    SouthGravity will cause the string to always to be
                    at the bottom of the window centered in any extra
                    width.  Specified in the resource defaults file as
                    "SouthGravity".

                    EastGravity will cause the string to always be at
                    the right of the window centered in any extra
                    height.  Specified in the resource defaults file
                    as "EastGravity".

                    WestGravity will cause the string to always be at
                    the left of the window centered in any extra
                    height.  Specified in the resource defaults file
                    as "WestGravity".

                    NorthWestGravity will cause the string to always
                    be in the upper left corner of the window.
                    Specified in the resource defaults file as
                    "NorthWestGravity".

                    NorthEastGravity will cause the string to always
                    be in the upper right corner of the window.
                    Specified in the resource defaults file as
                    "NorthEastGravity".

                    SouthWestGravity will cause the string to always
                    be in the lower left corner of the window.
                    Specified in the resource defaults file as
                    "SouthWestGravity".

                    SouthEastGravity will cause the string to always
                    be in the lower right corner of the window.
                    Specified in the resource defaults file as
                    "SouthEastGravity".

          XtNwrap
               This resource controls the wrapping of lines within the
v               widget. If XtNwrap is TRUE, lines which are too long
               are broken on spaces.  The spaces are converted to
               new-lines to break the line. Imbedded new-lines are
               honored.  If there is too much text for the specified
               window size, it will be clipped at the bottom.

               If XtNwrap is FALSE, lines which are too long will be
               clipped according to the alignment.  An XtNalignment
               value of XwALIGN_LEFT will cause lines which are too
               long to be clipped to the right.  An XtNalignment value
               of XwALIGN_RIGHT will cause lines which are too long to
               be clipped to the left.  An XtNalignment value of
               XwALIGN_CENTER will cause lines to be clipped equally
               on both the right and the left.

          XtNstrip
               This resource controls the stripping of leading an
               trailing spaces during the layout of the text string.
               If XtNstrip is FALSE, spaces are not stripped.  If
               XtNstrip is TRUE and XtNalignment is XwALIGN_LEFT,
               leading spaces are stripped from each line.  If
               XtNstrip is TRUE and XtNalignment is XwALIGN_CENTER,
               both leading and trailing spaces are stripped from each
               line.  If XtNstrip is TRUE and XtNalignment is
               XwALIGN_RIGHT, trailing spaces are stripped from each
               line.

          XtNlineSpace
               This resource controls the amount of space between
               lines.  It is specified as a percentage of the font
               height.  This space is added between each line of text.
               XtNlineSpace may be negative to a maximum of -100
               (which causes all lines to overwrite each other).

          XtNfont
               This resource controls which font the text will drawn
               in.

          XtNstring
               This resource is the string which will be drawn.  The
               string must be null terminated.  If the string is given
               in a resource defaults file, newlines may be specified
               by "\n" within the string.

                             Sash Resource Set
               Name          Class         Type      Default
               _____________________________________________
               XtNcallback   XtCCallback   caddr_t   NULL



          XtNcallback
               This is used by the paned window widget to be informed
               of button presses and mouse movement associated with
               the sash.

                          ScrollBar Resource Set
            Name              Class             Type   Default
            __________________________________________________
            XtNinitialDelay   XtCinitialDelay   int    500
            XtNrepeatRate     XtCRepeatRate     int    100
            XtNgranularity    XtCGranularity    int    2



          XtNinitialDelay
               The ScrollBar supports smooth time sequenced movement
               of the slider when a selection occurs on the arrows.
               This resource defines the amount of delay to wait
               between the initial selection and the slider starting
               its repetitive movement.  The value is defined in
               milliseconds.

          XtNrepeatRate
               This resource defines the continuous repeat rate to use
               to move the slider while the button is being held down
               on an arrow.  The value is also defined in
               milliseconds.

          XtNgranularity
               This resource defines the increment in the valuator's
               coordinate system to move the slider while continuous
               scrolling.

                              TextEdit Resource Set
     Name                  Class             Type           Default
     _______________________________________________________________________
     XtNsourceType         XtCSourceType     String         "stringsrc"
     XtNsource             XtCTextSource     Pointer        StringSrc
     XtNdisplayPosition    XtCTextPosition   XtTextPosition 0
     XtNinsertPosition     XtCTextPosition   XtTextPosition 0
     XtNselectionLeft      XtCSelectionLeft  XtTextPosition 0
     XtNselectionRight     XtCSelectionRight XtTextPosition 0
     XtNwrap               XtCWrap           XwWrap         XwWrapOff
     XtNwrapBreak          XtCWrapBreak      XwWrapBreak    XwWrapWhiteSpace
     XtNscroll             XtCScroll         XwScroll       XwAutoScrollOff
     XtNgrow               XtCGrow           XwGrow         XwGrowOff
     XtNleftMargin         XtCMargin         Dimension      3 See Note Below
     XtNrightMargin        XtCMargin         Dimension      3 See Note Below
     XtNtopMargin          XtCMargin         Dimension      3 See Note Below
     XtNbottomMargin       XtCMargin         Dimension      3 See Note Below
     XtNmotionVerification XtCCallback       XtRCallback    NULL
     XtNmodifyVerification XtCCallback       XtRCallback    NULL
     XtNleaveVerification  XtCCallback       XtRCallback    NULL
     XtNexecute            XtCallback        XtRCallback    NULL


          XtNtranslations
               The set of default translations are described below.

          XtNdisplayPosition
               The position in the text source that will be displayed
               at the top of the screen.  The default is 0, or the
               start of the text source.

          XtNinsertPosition
               The position in the text source of the insert cursor.
               The default is 0.

          XtNselectionLeft
               The starting position of the initial selection.  The
               default is 0.

          XtNselectionRight
               The ending position of the initial selection.  The
               default is 0.

          XtNsourceType
               This defines the type of the text source. It is one of
               "stringsrc," "disksrc" or "progdefinedsource."

          XtNsource
               This specifies a new Source.  The default is StringSrc.

          XtNwrap
               This resource specifies how the widget displays lines
               longer than the screen width.  When set to XwWrapOff,
               the lines may extend off screen to the right.  When set
               to XwSoftWrap, the lines will be wrapped at the right
               margin with the actual position determined by the
               resource XtNwrapBreak.

          XtNwrapBreak
               This resource specifies how the wrap position is
               determined.  When set to XwWrapAny, the wrap will
               happen at the character position closest to the right
               margin.  When set to XwWrapWhiteSpace, the wrap will
               happen at the  last whitespace before the right margin.
               If the line does not have whitespace, it will be
               wrapped as XwWrapAny.

          XtNscroll
               This resource controls the horizontal and vertical
               scrolling of lines longer than the screen width.  When
               set to XwAutoScrollOff the widget will not scroll.
               When set to XwAutoScrollVertical, the widget will
               scroll lines vertically.  When set to
               XwAutoScrollHorizontal, the widget will scroll a
               single-line display horizontally.  Horizontal scrolling
               is not currently supported for multi-line displays.
               Both horizontal and vertical scrolling can be set with
               XwAutoScrollBoth (again, subject to the single-line
               horizontal restriction).  The default is
               XwAutoScrollOff.  XtNscroll has lower priority than
               XtNwrap, meaning if wrapping is enabled, the widget
               will attempt to wrap to the next line before it will
               attempt to scroll horizontally.

          XtNgrow
               This resource controls if the widget will try to resize
               its window when it needs more height or width to
               display the text.  When set to XwGrowOff it will not
               resize itself.  When set to XwGrowHorizontal it will
               attempt to change its width when lines are too long for
               the current screen width.  When set to XwGrowVertical
               it will attempt to resize its height when the number of
               text lines is greater than can be displayed with the
               current screen height.  When set to XwGrowBoth, the
               widget will attempt resizes in both dimensions.  Growth
               attempts have higher priority than either wrapping or
               scrolling.  If enabled, the widget will always try to
               grow to display text before trying to wrap or scroll.
               The default is XwGrowOff.  The success of a resize
               request is determined by the widget's parent.

          XtNleftMargin
               The number of pixels used for the left margin.

               NOTE: if TextEdit is embedded in a manager with
               keyboard traversal enabled, it will silently enforce
               the constraint that all margins must be at least 3
               pixels wider than the highlight border width.

          XtNrightMargin
               The number of pixels used for the right margin.

          XtNtopMargin
               The number of pixels used for the top margin.

          XtNbottomMargin
               The number of pixels used for the bottom margin.

          XtNmotionVerification
               This verification callback list is called before the
               insertion cursor is moved to a new position.  The
               default is NULL.  See the verification section below.

          XtNmodifyVerification
               This verification callback list is called before text
               is deleted from or inserted to the text source.  The
               default is NULL.  See the verification section below.

          XtNleaveVerification
               This verification callback list is called before the
               widget loses input focus.  The default is NULL.  See
               the verification section below.

          XtNexecute
               This callback list is similar to a selection function
               on a button.  When the user invokes an event that calls
               the "execute" function (see the translation table
               below), this callback list will be executed. In the
               default translation table, this is bound to the "enter"
               key.

     SUBCOMPONENT RESOURCES
          StringSrc defines the following new resources.  In a
          resource file they can be specified by the name stringsrc
          under the name of the TextEdit widget, or through the class
          StringSrc.


                          StringSrc Resource Set
          Name             Class         Type         Default
          ______________________________________________________
          XtNstring        XtCString     char *       NULL
          XtNmaximumSize   XtCLength     int          NULL
          XtNeditType      XtCEditType   XtEditType   XwtextEdit


          XtNstring
               The initial string to be viewed and/or edited.  The
               default is the empty string.  An XtGetValues call on
               this resource will return a copy of the internal
               buffer. The application program is responsible for
               freeing the space allocated by the copy. An XtSetValues
               call will copy the given string into the internal
               buffer.

          XtNmaximumSize
               The maximum number of characters that can be entered
               into the internal buffer.  If this value is not set
               then the internal buffer will increase its size as
               needed limited only by the space limitations of the
               process.

          XtNeditType
               This resource controls the edit state of the source.
               It can be XttextRead, a read only source, XttextAppend,
               a source than can only be appended to, and XttextEdit,
               a fully editable source.


               DiskSrc defines the following new resources.  In a
               resource file they can be specified by the name disksrc
               under the name of the TextEdit widget, or through the
               class DiskSrc.


                           DiskSrc Resource Set
            Name          Class         Type         Default
            ___________________________________________________
            XtNfile       XtCFile       char *       NULL
            XtNeditType   XtCEditType   XtEditType   XwtextEdit


          XtNfile
               The absolute pathname of a disk file to be viewed
               and/or edited.  If no file is given, a temporary file
               will be created.

          XtNeditType
               This resource controls the edit state of the source.
               It can be XttextRead, a read only source, and
               XttextAppend, a source than can only be appended to.


               Display defines the following new resources.  In a
               resource file they can be specified by the name display
               under the name of the TextEdit widget, or through the
               class Display.


                           Display resource Set
          Name            Class           Type            Default
          _______________________________________________________
          XtNfont         XtCFont         XFontStruct *   Fixed
          XtNforeground   XtCForeground   XtRPixel        Black


          XtNfont
               The font used to display the text.  The default is
               fixed.  There are currently several display bugs
               associated with proportional fonts.

          XtNforeground
               The color for drawing the text.  The default is black.

                              TitleBar Resource Set
     Name                  Class                Type          Default
     _______________________________________________________________________
     XtNtitlePrecedence    XtCTitlePrecedence   int           0
     XtNtitleRegion        XtCTitleRegion       XwAlignment   XwALIGN_CENTER
     XtNtitlePosition      XtCTitlePosition     int           0
     XtNtitleRPadding      XtCTitleRPadding     int           1
     XtNtitleLPadding      XtCTitleLPadding     int           1
     XtNtitleForeground    XtCForeground        Pixel         black
     XtNtitleBackground    XtCBackground        Pixel         white
     XtNtitleHSpace        XtNTitleHSpace       int           2
     XtNtitleVSpace        XtVTitleHSpace       int           2
     XtNtitleBorderWidth   XtCBorderWidth       int           0
     XtNtitleSelect        XtCCallback          Pointer       NULL
     XtNtitleRelease       XtCCallback          Pointer       NULL
     XtNhSpace             XtCHSpace            int           2
     XtNvSpace             XtCVSpace            int           2
     XtNenter              XtCCallback          Pointer       NULL
     XtNleave              XtCCallback          Pointer       NULL
     XtNselect             XtCCallback          Pointer       NULL
     XtNrelease            XtCCallback          Pointer       NULL



          XtNtitlePrecedence
               The value to be loaded into the constraint record of
               the optional StaticText widget.

          XtNtitleRegion
               The value to be loaded into the XtNtitleRegion
               constraint resource of the optional StaticText widget.

          XtNtitlePosition
               The value to be loaded into the XtNtitlePosition
               constraint resource of the optional StaticText widget.

          XtNtitleRPadding
               The value to be loaded into the XtNtitleRPadding
               constraint resource of the optional StaticText widget.

          XtNtitleLPadding
               The value to be loaded into the XtNtitleLPadding
               constraint resource of the optional StaticText widget.

          XtNtitleForeground
               The value to be loaded into the XtNforeground resource
               of the optional StaticText widget's core part.

          XtNtitleBackground
               The value to be loaded into the XtNbackground resource
               of the optional StaticText widget's core part.

          XtNtitleHSpace
               The value to be loaded into the XtNhSpace resource of
               the optional StaticText widget.

          XtNtitleVSpace
               The value to be loaded into the XtNvSpace resource of
               the optional StaticText widget.

          XtNtitleBorderWidth
               The value to loaded into the XtNborderWidth resource of
               the optional StaticText widget.

          XtNtitleSelect
               The value loaded into the XtNselect resource of the
               optional StaticText widget.

          XtNtitleRelease
               The value loaded into the XtNrelease resource of the
               optional StaticText widget.

          XtNhSpace
               The amount of space to maintain between the right and
               left of the titlebar and the interior widgets.

          XtNvSpace
               The amount of space to maintain between the top and
               bottom of the titlebar and the interior widgets.

          XtNenter, XtNleave, XtNselect, and XtNrelease
               Callbacks provided for control of TitleBar.  The data
               parameter is unused.

     CONSTRAINT RESOURCES
          The following resources will be attached to every widget
          inserted into TitleBar.  See CONSTRAINT(3X) for a general
          discussion of constraint resources.

          TitleBar uses the constraint resources as hints during the
          layout of its managed children.  Under certain conditions,
          any of these resources except XtNprecedence can (and will)
          be ignored by TitleBar.


           Constraint Resource Set -- Children of TITLEBAR(3X)
         Name            Class           Type          Default
         ________________________________________________________
         XtNregion       XtCRegion       XwAlignment   See below.
         XtNposition     XtCPosition     int           0
         XtNlPadding     XtCLPadding     int           2
         XtNrPadding     XtCRPadding     int           2
         XtNprecedence   XtCPrecedence   int           1



          XtNregion
               Associates a child with a region of the titlebar.  The
               regions may be specified in the resource default file
               as "left" for XwALIGN_LEFT, "center" for
               XwALIGN_CENTER, and "right" for XwALIGN_RIGHT.

               During layout widgets with XtNregion values of
               XwALIGN_LEFT grouped to the left end of TitleBar.
               Widgets with XtNregion values of XwALIGN_LEFT are
               grouped to the right of TitleBar.  Widgets with
               XtNregion values of XwALIGN_CENTER will be grouped
               between the left and right groups.  Additionally,
               TitleBar tries to center the center group within the
               TitleBar.

               Widgets for which XtNregion is unspecified or
               XwALIGN_NONE when XtNstring is non-null, will be
               children's padding requests without hiding some
               children, some, possibly all, padding requests will be
               collapsed.

          XtNprecedence
               When TitleBar is too narrow to display all of its
               children, this resource is used to determine which
               children should be hidden.  Widgets with high values of
               XtNprecedence are hidden first.  Precedence values are
               relative to all other widgets within an instantiation
               of TitleBar.  This means that all widgets, regardless
               of their region, with high values of XtNprecedence will
               be hidden before any widgets with the next lower values
               are hidden.

               Values of XtNprecedence need not be unique.  If values
               are unique, there is no question about which widget is
               first to lose its padding, nor about which widget is
               first to be hidden.

               If values are not unique for all children of TitleBar,
               there need be no question about which widget is acted
               on first, but it is dependent on both insertion order
               and precedence.  The last widget inserted in TitleBar
               of a given precedence is the first to lose its
               requested padding  (of widgets with that priority).
               Widgets lose padding from last inserted to first
               inserted, within a given level of precedence.  When
               hiding widgets, widgets within a given precedence level
               are hidden from last inserted to first inserted.

                           Toggle Resource Set
            Name             Class           Type      Default
            __________________________________________________
            XtNsquare        XtCSquare       Boolean   True
            XtNselectColor   XtCForeground   Pixel     Black



          XtNsquare
               If True, forces the button to draw a square box,
               otherwise it will draw a diamond shape box.  One
               possible usage for this resource is to make the
               convention that row column managers containing diamond
               shaped toggles have their XtNmode resource set to
               one_of_many which will only allow one of the buttons to
               be set at any one time, while row column managers
               containing square buttons use the default mode setting
               of n_of_many which allows any or all of the buttons to
               be set.

          XtNselectColor
               Allows the application to specify what color should be
               used to fill in the center of the square (or the
               diamond) when it is set.

                       Vertical Paned Resource Set
           Name              Class            Type      Default
           ____________________________________________________
           XtNsashIndent     XtCSashIndent    int       -10
           XtNborderFrame    XtCBorderWidth   int       1
           XtNframed         XtCBoolean       Boolean   TRUE
           XtNpadding        XtCPadding       int       3
           XtNrefigureMode   XtCBoolean       Boolean   TRUE



          XtNsashIndent
               This controls where along the bottom of the pane the
               control widget (the pane's sash) will be placed.  A
               positive number will cause the sash to be offset from
               the left side of the pane, a negative number will cause
               the sash to be offset from the right side of the pane.
               If the offset specified is greater than the width of
               the vertical paned manager, minus the width of the
               sash, the sash will be placed flush against the left
               hand side of the paned manager.

          XtNborderFrame
               The application can specify the thickness of the
               borderwidth of all panes in the paned manager.  The
               value must be greater than or equal to 0.

          XtNframed
               The application can specify whether the panes should be
               displayed with some padding surrounding each pane
               (TRUE) or whether the panes should be set flush with
               the paned manager (FALSE).

          XtNpadding
               The application can specify how many pixels of padding
               should surround each pane when it is being displayed in
               framed mode.  This value must be greater than or equal
               to 0.

          XtNrefigureMode
               This setting is useful if a large number of
               programmatic manipulations are taking place.  It will
               prevent the manager from recomputing and displaying new
               positions for the child panes (FALSE).  Once the
               changes have been executed this flag should be set to
               TRUE to allow the vertical paned manager to show the
               correct positions of the current children.

     CONSTRAINT RESOURCES
          The following resources are attached to every widget
          inserted into vertical paned manager.  See CONSTRAINT(3X)
          for a general discussion of constraint resources.


          Constraint Resource Set -- Children of VPANEDWINDOW(3X)
          Name             Class           Type        Default
          _______________________________________________________
          XtNmin           XtCMin          int         1
          XtNmax           XtCMax          int         10000
          XtNallowResize   XtCBoolean      Boolean     FALSE
          XtNskipAdjust    XtCBoolean      Boolean     FALSE



          XtNmin
               Allows an application to specify the mimimum size to
               which a pane may be resized.  This value must be
               greater than 0.

          XtNmax
               Allows an application to specify the maximum size to
               which a pane may be resized.  This value must be
               greater than the specified minimum.

          XtNallowResize
               Allows an application to specify whether the vertical
               paned manager should allow a pane to request to be
               resized.  This flag only has an effect after the paned
               manager and its children have been realized.  If this
               flag is set to TRUE, the manager will try to honor
               requests to alter the height of the pane. If false, it
               will always deny pane requests to resize.

          XtNskipAdjust
               Allows an application to specify that the vertical
               paned manager should not automatically resize this pane
               (flag set to TRUE).

                          Valuator Resource Set
     Name                  Class                 Type      Default
     ________________________________________________________________
     XtNsliderMin          XtCSliderMin          int       0
     XtNsliderMax          XtCSliderMax          int       100
     XtNsliderExtent       XtCSliderExtent       int       10
     XtNsliderOrigin       XtCSliderOrigin       int       0
     XtNsliderTile         XtCSliderTile         int       foreground
     XtNslideOrientation   XtCSlideOrientation   int       vertical
     XtNsliderMoved        XtCCallback           Pointer   NULL
     XtNsliderReleased     XtCCallback           Pointer   NULL
     XtNareaSelected       XtCCallback           Pointer   NULL



          XtNsliderMin, XtNsliderMax
               The Valuator widget lets the application define its own
               coordinate system for the valuator.  Any integer values
               with sliderMin less than sliderMax can be specified.

          XtNsliderExtent
               The size of the slider can be set by the application.
               The acceptable values are 0 < sliderExtent < (sliderMax
               - sliderMin).

          XtNsliderOrigin
               The location of the slider can be set by the
               application.  The acceptable values are between
               sliderMin and (sliderMax - sliderExtent).

          XtNsliderTile
               This resource is used to set the tile used to create
               the pixmap to use when drawing the slider.  The
               #defines for setting the values through an arg list and
               the strings to be used in the .Xdefaults files are
               described in XwCreateTile(3X).

          XtNslideOrientation
               The Valuator widget supports both horizontal and
               vertical scrolling.  This resource type is the means by
               which this is set.  It can be defined through the
               .Xdefaults file by the strings "horizontal", and
               "vertical" or within an arg list for use in
               XtSetValues() by the defines XwHORIZONTAL and
               XwVERTICAL.

          XtNsliderMoved, XtNsliderReleased, XtNareaSelected
               The Valuator widget defines three types of callback
               lists which get invoked upon different event conditions
               when interacting with a valuator. All types use the
               data parameter to send the location of the slider to
               the callback functions.

               The first callback type, sliderMoved, defines the
               callback list containing the callback functions called
               when the slider is interactively moved.

               The second callback type, sliderReleased, defines a
               callback list containing callback functions called when
               the mouse button is released after moving the slider.

               The third callback type, areaSelected, defines a
               callback list containing the callback functions called
               when an area in a valuator not containing the slider is
               selected.  The slider is not moved to this position but
               if the application wants the slider moved, it can use
               the position value contained in the parameter call_data
               and perform a XtSetValues() to its valuator.

               For the callback types, the call_data parameter of the
               callback function will be an integer containing the
               slider or selection position.

                          WorkSpace Resource Set
               Name         Class         Type      Default
               ____________________________________________
               XtNexpose    XtCCallback   Pointer   Null
               XtNresize    XtCCallback   Pointer   Null
               XtNkeyDown   XtCCallback   Pointer   Null

          XtNexpose
               This resource defines a callback list which is invoked
               when an exposure event occurs on the widget.  The
               call_data parameter for the callback will contain a
               Region structure containing the exposed region.

          XtNresize
               This resource defines a callback list which is invoked
               when the widget is resized.  The widget parameter can
               be accessed to obtain the new size of the widget.

          XtNkeyDown
               This resource defines a callback list which is invoked
               when keyboard input occurs in the widget.  The
               call_data parameter for the callback will contain the
               key pressed event.

