# Makefile generated by imake - do not edit!
# $XConsortium: imake.c,v 1.65 91/07/25 17:50:17 rws Exp $
#
# The cpp used on this machine replaces all newlines and multiple tabs and
# spaces in a macro expansion with a single space.  Imake tries to compensate
# for this, but is not always successful.
#

# -------------------------------------------------------------------------
# Makefile generated from "Imake.tmpl" and </tmp/IIf.a000-7>
# $XConsortium: Imake.tmpl,v 1.139 91/09/16 08:52:48 rws Exp $
#
# Platform-specific parameters may be set in the appropriate <vendor>.cf
# configuration files.  Site-specific parameters should be set in the file
# site.def.  Full rebuilds are recommended if any parameters are changed.
#
# If your C preprocessor does not define any unique symbols, you will need
# to set BOOTSTRAPCFLAGS when rebuilding imake (usually when doing
# "make World" the first time).
#

# -------------------------------------------------------------------------
# site-specific configuration parameters that need to come before
# the platform-specific parameters - edit site.def to change

# site:  $XConsortium: site.def,v 1.2 91/07/30 20:26:44 rws Exp $

# -------------------------------------------------------------------------
# platform-specific configuration parameters - edit usl.cf to change

MEMUTILDEF =
MEMUTILLIB =
INC = $(TOOLS)/usr/include

         YFLAGS =
          STRIP = $(PFX)strip
            AWK = /usr/bin/awk
             CD = cd
             LS = /bin/ls
             PR = /bin/pr
          CHMOD = $(CH)chmod
          CHOWN = $(CH)chown
          CHGRP = $(CH)chgrp
            SED = /bin/sed
            MCS = $(PFX)mcs -d

  PROTO_DEFINES =
LOCAL_LIBRARIES = $(XLIB)
  SYS_LIBRARIES =

  USE_INSTALLED =
   SYS_TO_BUILD =
   ARCHIVE_ONLY =

BUILD_DEFINES = $(SYS_TO_BUILD) $(USE_INSTALLED) $(ARCHIVE_ONLY)

# :: end of BUILD_DEFINES set-up

       UNIX_REL = -DSVR4

MAKEDEFINES = $(STD_DEFINES) $(BUILD_DEFINES) $(UNIX_REL) $(CCS_USED)

# until we use R5 server, use R4 font structures

# operating system:  OSName

INSTALLFLAGS = -m 0644

# $XConsortium: sv4Lib.rules,v 1.8 91/07/19 15:38:53 rws Exp $

    FURCCOPTIONS = -Xa -W2,-A -Wa,-r
             FUR = $(PFX)fur

INCLUDE_EXTENSION =  $(EXTENSIONSRC)/include

   EXTRA_INCLUDES = -I$(INCLUDESRC) -I$(INC)

# -------------------------------------------------------------------------
# site-specific configuration parameters that go after
# the platform-specific parameters - edit site.def to change

# site:  $XConsortium: site.def,v 1.2 91/07/30 20:26:44 rws Exp $

#
# ProjectRoot is where you want to install the binaries, libs, fonts etc
#

      PROJECTROOT = $(ROOT)/$(MACH)/usr/X
         XWINHOME = /usr/X
       XWINLIBDIR = $(XWINHOME)/lib
       XWINBINDIR = $(XWINHOME)/bin

     USLCLIENTSRC = $(TOP)/uslclients
       DESKTOPDIR = $(PROJECTROOT)/desktop
         DTADMDIR = $(PROJECTROOT)/adm
        XDEFAULTS = $(PROJECTROOT)/defaults

       FONTINCSRC = $(FONTSRC)/include
    FONTLIBINCSRC = $(FONTSRC)/lib/include
      FOLIOLIBSRC = $(FONTSRC)/lib/folio
       FONTLIBSRC = $(FONTSRC)/lib/font
    BITMAPFONTSRC = $(FONTSRC)/lib/bitmap
      FONTSLIBSRC = $(FONTSRC)/lib/
           XOLSRC = $(LIBSRC)/Xol
        XOLLIBSRC = $(LIBSRC)/Xol
BITMAPLIBS_TO_BUILD = libbitmap.a libbitmap.so
FONTLIBS_TO_BUILD = libfont.a libfont.so

    USL_DEFINES = -DLIBDIR=\"$(XWINLIBDIR)\" -DDESTDIR=\"$(XWINHOME)\"

        DEFINES = $(USL_DEFINES)

            SHELL = /bin/sh

              TOP = .
      CURRENT_DIR = .

               AR = $(PFX)ar rv
  BOOTSTRAPCFLAGS = -Dusl
               CC = $(PFX)cc
               AS = $(PFX)as

         COMPRESS = compress
              CPP = $(TOOLS)/usr/ccs/lib/$(PFX)cpp $(STD_CPP_DEFINES)
    PREPROCESSCMD = $(PFX)cc -E $(STD_CPP_DEFINES)
          INSTALL = /usr/ucb/install
               LD = $(PFX)ld
             LINT = $(PFX)lint
      LINTLIBFLAG = -o
         LINTOPTS = -ax
               LN = /bin/ln -s
             MAKE = $(PFX)make
               MV = /bin/mv
               CP = /bin/cp
              HCC = /bin/cc
              SED = /bin/sed

               RM = /bin/rm -f
            TROFF = psroff
         MSMACROS = -ms
              TBL = tbl
              EQN = eqn
     STD_INCLUDES = -I.
  STD_CPP_DEFINES = -DLD_LIBRARY_PATH=":/usr/X/lib" -DUSL -DSVR4 -DSYSV -DI18N $(MEMUTILDEF)
      STD_DEFINES = -DLD_LIBRARY_PATH=":/usr/X/lib" -DUSL -DSVR4 -DSYSV -DI18N $(MEMUTILDEF)
 EXTRA_LOAD_FLAGS =
  EXTRA_LIBRARIES = -DLD_LIBRARY_PATH=":/usr/X/lib" -lnsl -lsocket -ldl $(MEMUTILLIB)
             TAGS = ctags

    SHAREDCODEDEF =
         SHLIBDEF =

    PROTO_DEFINES = -DFUNCPROTO=15 -DNARROWPROTO

     INSTPGMFLAGS = -s

     INSTBINFLAGS = -m 0755
     INSTUIDFLAGS = -m 4755
     INSTLIBFLAGS = -m 0644
     INSTINCFLAGS = -m 0444
     INSTMANFLAGS = -m 0444
     INSTDATFLAGS = -m 0444
    INSTKMEMFLAGS = -m 4755

      PROJECTROOT = $(ROOT)/$(MACH)/usr/X

     TOP_INCLUDES = -I$(TOP)

      CDEBUGFLAGS = -O
        CCOPTIONS = -Xa -W2,-A

      ALLINCLUDES = $(INCLUDES) $(EXTRA_INCLUDES) $(TOP_INCLUDES) $(STD_INCLUDES)
       ALLDEFINES = $(ALLINCLUDES) $(STD_DEFINES) $(EXTRA_DEFINES) $(PROTO_DEFINES) $(DEFINES)
           CFLAGS = $(CDEBUGFLAGS) $(CCOPTIONS) $(ALLDEFINES)
        LINTFLAGS = $(LINTOPTS) -DLINT $(ALLDEFINES)

           LDLIBS = -L$(USRLIBDIR) $(SYS_LIBRARIES) $(EXTRA_LIBRARIES)

        LDOPTIONS = $(CDEBUGFLAGS) $(CCOPTIONS) $(LOCAL_LDFLAGS) -T 0x8300000

   LDCOMBINEFLAGS = -r
      DEPENDFLAGS =

        MACROFILE = usl.cf
           RM_CMD = $(RM) *.CKP *.ln *.BAK *.bak *.o core errs ,* *~ *.a .emacs_* tags TAGS make.log MakeOut

    IMAKE_DEFINES =

         IRULESRC = $(CONFIGSRC)
        IMAKE_CMD = $(NEWTOP)$(IMAKE) -I$(NEWTOP)$(IRULESRC) $(IMAKE_DEFINES)

     ICONFIGFILES = $(IRULESRC)/Imake.tmpl $(IRULESRC)/Imake.rules \
			$(IRULESRC)/Project.tmpl $(IRULESRC)/site.def \
			$(IRULESRC)/$(MACROFILE) $(EXTRA_ICONFIGFILES)

# -------------------------------------------------------------------------
# X Window System Build Parameters
# $XConsortium: Project.tmpl,v 1.142 92/01/25 16:44:02 rws Exp $

# -------------------------------------------------------------------------
# X Window System make variables; this need to be coordinated with rules

          PATHSEP = /
        USRLIBDIR = $(ROOT)/$(MACH)/usr/X/lib
           BINDIR = $(ROOT)/$(MACH)/usr/X/bin
          INCROOT = $(ROOT)/$(MACH)/usr/X/include
     BUILDINCROOT = $(TOP)
      BUILDINCDIR = $(BUILDINCROOT)/X11
      BUILDINCTOP = ..
           INCDIR = $(INCROOT)/X11
           ADMDIR = /usr/adm
           LIBDIR = $(USRLIBDIR)
        CONFIGDIR = $(LIBDIR)/config
       LINTLIBDIR = $(USRLIBDIR)/lint

          FONTDIR = $(LIBDIR)/fonts
         XINITDIR = $(LIBDIR)/xinit
           XDMDIR = $(LIBDIR)/xdm
           TWMDIR = $(LIBDIR)/twm
          MANPATH = $(ROOT)/$(MACH)/usr/X/man
    MANSOURCEPATH = $(MANPATH)/man
        MANSUFFIX = n
     LIBMANSUFFIX = 3
           MANDIR = $(MANSOURCEPATH)$(MANSUFFIX)
        LIBMANDIR = $(MANSOURCEPATH)$(LIBMANSUFFIX)
           NLSDIR = $(LIBDIR)/nls
        PEXAPIDIR = $(LIBDIR)/PEX
      XAPPLOADDIR = $(LIBDIR)/app-defaults
       FONTCFLAGS = -L -l -t

     INSTAPPFLAGS = $(INSTDATFLAGS)

            IMAKE = $(IMAKESRC)/imake
           DEPEND = $(DEPENDSRC)/makedepend
              RGB = $(RGBSRC)/rgb

            FONTC = $(BDFTOSNFSRC)/bdftosnf

        MKFONTDIR = $(MKFONTDIRSRC)/mkfontdir
        MKDIRHIER = /bin/sh $(SCRIPTSRC)/mkdirhier.sh

        CONFIGSRC = $(TOP)/config
       DOCUTILSRC = $(TOP)/doc/util
        CLIENTSRC = $(TOP)/clients
          DEMOSRC = $(TOP)/demos
           LIBSRC = $(TOP)/lib
          FONTSRC = $(TOP)/fonts
       INCLUDESRC = $(TOP)/X11
        SERVERSRC = $(TOP)/server
          UTILSRC = $(TOP)/util
        SCRIPTSRC = $(UTILSRC)/scripts
       EXAMPLESRC = $(TOP)/examples
       CONTRIBSRC = $(TOP)/../contrib
           DOCSRC = $(TOP)/doc
           RGBSRC = $(TOP)/rgb
        DEPENDSRC = $(UTILSRC)/makedepend
         IMAKESRC = $(CONFIGSRC)
         XAUTHSRC = /usr/X/lib
          XLIBSRC = /usr/X/lib
           XMUSRC = /usr/X/lib
       TOOLKITSRC = /usr/X/lib
       AWIDGETSRC = /usr/X/lib
       OLDXLIBSRC = /usr/X/lib
      XDMCPLIBSRC = /usr/X/lib

      BDFTOSNFSRC = $(FONTSRC)/clients/bdftosnf

     MKFONTDIRSRC = $(FONTSRC)/clients/mkfontdir
         FSLIBSRC = $(FONTSRC)/lib/fs
    FONTSERVERSRC = $(FONTSRC)/server
     EXTENSIONSRC = $(TOP)/extensions
         XILIBSRC = $(EXTENSIONSRC)/lib/xinput
      XTESTLIBSRC = $(EXTENSIONSRC)/lib/xtest
      PHIGSLIBSRC = $(EXTENSIONSRC)/lib/PEX

# $XConsortium: sv4Lib.tmpl,v 1.6 92/01/25 16:46:55 rws Exp $

#
# USL: BEGIN
#	The default revision numbers from MIT is 5. But since USL has to be
#	backward compatible, so force it to 1
#

         SOXOLREV = 1
        SOOLITREV = 1
       SOOLITMREV = 1
       SOOLITOREV = 1
          SODTREV = 1

# USL: END

SHLIBLDFLAGS = -G -z text
PICFLAGS = -K PIC

  DEPEXTENSIONLIB =
     EXTENSIONLIB = -L$(EXTENSIONSRC)/lib -L/usr/X/lib -Bstatic -lXext -Bdynamic

          DEPXLIB = $(DEPEXTENSIONLIB)
             XLIB = $(EXTENSIONLIB) -L$(XLIBSRC) -lX11 -lXIM

        DEPXMULIB = $(XMUSRC)/libXmu.so.$(SOXMUREV)

              XMULIB = -L$(XMUSRC) -lXmu

       DEPOLDXLIB =
          OLDXLIB = -L$(OLDXLIBSRC) -loldX

      DEPXTOOLLIB =
         XTOOLLIB = -L$(TOOLKITSRC) -lXt

      DEPXOLLIB = $(XOLSRC)/libOlit.so.$(SOXOLREV)
         XOLLIB = -L$(XOLSRC) -lOlit

        DEPXAWLIB =
           XAWLIB = -L$(AWIDGETSRC) -lXaw

        DEPXILIB =
           XILIB = -L$(XILIBSRC) -lXi

        DEPXTESTLIB =
           XTESTLIB = -L$(XTESTLIBSRC) -lXtst

#
# USL: BEGIN
#

XHOSTLOC = ../../X
SHLIBFLAGS = -L $(ROOT)/$(MACH)/usr/lib -L $(ROOT)/$(MACH)/lib -L $(XHOSTLOC)

#
# USL: END
#

        SOXLIBREV = 1
          SOXTREV = 1
         SOXAWREV = 1
        SOOLDXREV = 1
         SOXMUREV = 1
        SOXEXTREV = 1
      SOXINPUTREV = 1
       SOXTESTREV = 1
       SOXTRAPREV = 1

      DEPXAUTHLIB = $(XAUTHSRC)/libXau.a
         XAUTHLIB =  $(DEPXAUTHLIB)
      DEPXDMCPLIB = $(XDMCPLIBSRC)/libXdmcp.a
         XDMCPLIB =  $(DEPXDMCPLIB)

        DEPPHIGSLIB = $(PHIGSLIBSRC)/libphigs.a
           PHIGSLIB =  $(DEPPHIGSLIB)

       DEPXBSDLIB = $(LIBSRC)/Berk/libXbsd.a
          XBSDLIB =  $(DEPXBSDLIB)

 LINTEXTENSIONLIB = $(EXTENSIONSRC)/lib/llib-lXext.ln
         LINTXLIB = $(XLIBSRC)/llib-lX11.ln
          LINTXMU = $(XMUSRC)/llib-lXmu.ln
        LINTXTOOL = $(TOOLKITSRC)/llib-lXt.ln
          LINTXAW = $(AWIDGETSRC)/llib-lXaw.ln
           LINTXI = $(XILIBSRC)/llib-lXi.ln
        LINTPHIGS = $(PHIGSLIBSRC)/llib-lphigs.ln

          DEPLIBS = $(DEPXAWLIB) $(DEPXMULIB) $(DEPXTOOLLIB) $(DEPXLIB)

         DEPLIBS1 = $(DEPLIBS)
         DEPLIBS2 = $(DEPLIBS)
         DEPLIBS3 = $(DEPLIBS)

# -------------------------------------------------------------------------
# Imake rules for building libraries, programs, scripts, and data files
# rules:  $XConsortium: Imake.rules,v 1.126 91/12/30 20:14:35 rws Exp $

# -------------------------------------------------------------------------
# start of Imakefile

# @(#)Imakefile	23.9 91/09/27
# Imakefile - xlock
#
        DEFINES = -DDEF_FILESEARCHPATH=\"$(LIBDIR)/%T/%N%S\" -DSTARSIZE=2
        DEPLIBS = $(DEPXLIB)
LOCAL_LIBRARIES = $(XLIB)
       LINTLIBS = $(LINTXLIB)
  SYS_LIBRARIES = -lm
           SRCS = xlock.c hsbramp.c usleep.c resource.c \
		hopalong.c qix.c life.c image.c blank.c \
		swarm.c rotor.c pyro.c flame.c worm.c
           OBJS = xlock.o hsbramp.o usleep.o resource.o \
		hopalong.o qix.o life.o image.o blank.o \
		swarm.o rotor.o pyro.o flame.o worm.o

 PROGRAM = xlock

all:: xlock

xlock: $(OBJS) $(DEPLIBS)
	$(RM) $@
	$(CC) -o $@ $(OBJS) $(LDOPTIONS) $(LOCAL_LIBRARIES) $(LDLIBS) $(EXTRA_LOAD_FLAGS)

install:: xlock
	@if [ -d $(DESTDIR)$(BINDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(BINDIR)); fi
	$(INSTALL) -c $(INSTPGMFLAGS)  xlock $(DESTDIR)$(BINDIR)

install.man:: xlock.man
	@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) xlock.man $(DESTDIR)$(MANDIR)/xlock.$(MANSUFFIX)

depend:: $(DEPEND)

$(DEPEND):
	@echo "checking $@ over in $(DEPENDSRC) first..."; \
	cd $(DEPENDSRC); $(MAKE); \
	echo "okay, continuing in $(CURRENT_DIR)"

depend::
	$(DEPEND) $(DEPENDFLAGS) -s "# DO NOT DELETE" -- $(ALLDEFINES) $(DEPEND_DEFINES) -- $(SRCS)

lint:
	$(LINT) $(LINTFLAGS) $(SRCS) $(LINTLIBS)
lint1:
	$(LINT) $(LINTFLAGS) $(FILE) $(LINTLIBS)

clean::
	$(RM) $(PROGRAM)

install:: XLock.ad
	@if [ -d $(DESTDIR)$(XAPPLOADDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(XAPPLOADDIR)); fi
	$(INSTALL) -c $(INSTAPPFLAGS) XLock.ad $(DESTDIR)$(XAPPLOADDIR)/XLock

# -------------------------------------------------------------------------
# common rules for all Makefiles - do not edit

emptyrule::

clean::
	$(RM_CMD) "#"*

Makefile:: $(IMAKE)

$(IMAKE):
	@(cd $(IMAKESRC); if [ -f Makefile ]; then \
	echo "checking $@ in $(IMAKESRC) first..."; $(MAKE) all; else \
	echo "bootstrapping $@ from Makefile.ini in $(IMAKESRC) first..."; \
	$(MAKE) -f Makefile.ini BOOTSTRAPCFLAGS="$(BOOTSTRAPCFLAGS)"; fi; \
	echo "okay, continuing in $(CURRENT_DIR)")

Makefile::
	-@if [ -f Makefile ]; then set -x; \
	$(RM) Makefile.bak; $(MV) Makefile Makefile.bak; \
	else exit 0; fi
	$(IMAKE_CMD) -DTOPDIR=$(TOP) -DCURDIR=$(CURRENT_DIR)

tags::
	$(TAGS) -w *.[ch]
	$(TAGS) -xw *.[ch] > TAGS

# -------------------------------------------------------------------------
# empty rules for directories that do not have SUBDIRS - do not edit

install::
	@echo "install in $(CURRENT_DIR) done"

install.man::
	@echo "install.man in $(CURRENT_DIR) done"

Makefiles::

includes::

# -------------------------------------------------------------------------
# dependencies generated by makedepend

