
            _-_ _,,
               -/  )    _
              ~||_<    < \, \\/\\ \\/\\  _-_  ,._-_  _-_,
               || \\   /-|| || || || || || \\  ||   ||_.
               ,/--|| (( || || || || || ||/    ||    ~ ||
              _--_-'   \/\\ \\ \\ \\ \\ \\,/   \\,  ,-_-
             (

********************************************************************************
*              BANNERS - the ultimative banner program collection              *
*                   (created and maintained by Frank Kaefer)                   *
********************************************************************************

This is banners version 1.1.

The sources you find in this directory tree are different from other
source packages: this directory holds the source to several different
"banner" programs. These banner programms all serve the same purpose
as the "normal" unix banner(1) programm: print banners to stdout. But
there is a big difference between banner(1) and these banner programs.
The banner programs in this directory are far more flexible and have
many nice features. So if you allways wanted a better banner program,
this is what you have been waiting for!

History:
The idea of putting together a banner collection was born some years ago.
Several smaller collections were posted to alt.sources and a call for
contribution of banner programs was posted to many other groups.
Banners version 1.0 was posted to comp.sources.unix: v26i109 - v26i113.
Banners version 1.1 will also be submitted to comp.sources.unix.

In this package you should find the following files:

Makefile	a simple makefile to compile all banners
README		the file you are just reading
banner-01/	see below
banner-02/	see below
banner-03/	see below
banner-04/	see below
banner-05/	see below
banner-06/	see below
banner-07/	see below
banner-08/	see below
banner-09/	see below
banner-10/	see below
banner-11/	see below
banner-12/	see below
banner-13/	see below
cursive-01/	see below
cursive-02/	see below
gothic/		see below

Some of these banner programs do not contain any manual page, so I am giving
you a description of all these programs in this file.

If you have a nice banner program, please contact me. Also if you have
found a bug in these banner programs, I'd like to encourage you to send
me not only a note about the bug but also a fix for it (preferably in
context diff format).

Email: frank.kaefer@Germany.Sun.COM (<- please use this address)
       (frank.kaefer@sta.sub.org, frank.kaefer@sta.com)

Here is a more detailed description of the banner programs:
===========================================================

SYNOPSIS: how to start the banner program
OPTIONS: command line options of the banner
DESCRIPTION: some more info on this banner
HISTORY: some background information
EXAMPLES: sample banner output

banner-01
---------
SYNOPSIS: banner [<opts>] {<string>} [<opts>]
OPTIONS:
          -i          prints italic 
          -d          double size 
          -c=<char>   character 
          -s          use same character 
          -z          read strings from standard input 
          -z=<file>   read strings from <file> 
DESCRIPTION: This banner can be used as a drop in replacement of the standard
             banner.
HISTORY: This was the very first banner on OS-9/68000 and it also compiled
         fine on Unix, so it was one of the few programs that transitioned
         with me from OS-9/68000 to Unix. Banner-12 is based on this banner.
EXAMPLES:
% bin/banner-01 Test

******                     *    
* ** *                    **    
  **     ****    *****   *****  
  **    **  **  **        **    
  **    ******   ****     **    
  **    **          **    ** *  
 ****    ****   *****      **   

% bin/banner-01 -si Test

       TTTTTT                     t    
      T TT T                    tt    
       TT     eeee    sssss   ttttt  
      TT    ee  ee  ss        tt    
     TT    eeeeee   ssss     tt    
    TT    ee          ss    tt t  
  TTTT    eeee   sssss      tt   

% bin/banner-01 -d Test

************                                          **        
************                                          **        
**  ****  **                                        ****        
**  ****  **                                        ****        
    ****          ********        **********      **********    
    ****          ********        **********      **********    
    ****        ****    ****    ****                ****        
    ****        ****    ****    ****                ****        
    ****        ************      ********          ****        
    ****        ************      ********          ****        
    ****        ****                    ****        ****  **    
    ****        ****                    ****        ****  **    
  ********        ********      **********            ****      
  ********        ********      **********            ****      


banner-02
---------
SYNOPSIS: banner /<option1> /<opt2> /<opt3> <text>
OPTIONS:
 /?          : Help text in German
 /h          : Help text in German
 /S:<breite> : Width of banner output, Default: 80
 /D:<path>   : Specify different font file
 /F:<path>   : banner the specified file
 /#          : Use same char for bannering a letter
 /P          : Read text from stdin
 /U          : Convert all to capital letters
 /R          : Reverse banner
 /I          : Italics
 /Cxy!z      : x = "Front-Color", y = "Background-Color" (optional)
             : "!" = Enable shadowing (optional), x = Shadow char (optional)
DESCRIPTION: Although this banner uses a DOS-like option syntax it is one
             of the most powerful banners in this collection.
HISTORY:
EXAMPLES:
% bin/banner-02 Test
 ######                   ##
 # ## #                   ##
   ##     ####    ####   #####
   ##    ##  ##  ##       ##
   ##    ######   ####    ##
   ##    ##          ##   ## ##
  ####    ####   #####     ###

bin/banner-02 /c\+\_\!\` Test
_++++++`__________________++`___
_+`++`+`__________________++`___
___++`____++++`___++++`__+++++`_
___++`___++`_++`_++`______++`___
___++`___++++++`__++++`___++`___
___++`___++`_________++`__++`++`
__++++`___++++`__+++++`____+++`_
________________________________


banner-03
---------
SYNOPSIS: banr [-n]
OPTIONS:
          -n  Forces no underlining to be used even if the capability exists
DESCRIPTION: banr prints its standard input in large letters (but smaller than
             banner(1)) on the standard output
HISTORY: Written by Art Messenger (art@wilbur.coyote.trw.com)
EXAMPLES:
% bin/banner-03 -n 
This is a test
___                                    
 |  |_  . _    . _     _.    |  _  _ | 
 |  | | | \    | \    (_|    | (-' \ | 
                                       

banner-04
---------
SYNOPSIS: banner <text>
OPTIONS: none
DESCRIPTION: simple but also nice banner
HISTORY:
EXAMPLES:
% bin/banner-04 Test
@@@@@@@
   @     @@@@@@   @@@@    @@@@@
   @     @       @          @
   @     @@@@@    @@@@      @
   @     @            @     @
   @     @       @    @     @
   @     @@@@@@   @@@@      @


banner-05
---------
SYNOPSIS:
OPTIONS:
DESCRIPTION: This is a banner collection. Important notice: bin/banner-05 is
             a zero length touched file, the executables are named
             banner-05-[1-9]. Banner-05-2 is the same as cursive.
             Please look at the files in banner-05 for more information.
HISTORY: A banner collection from Han YoonSoo KAIST
EXAMPLES:
% bin/banner-05-1 Test
TTTTTTTTTT  EEEEEEEEEE   SSSSSSSS   TTTTTTTTTT  
TTTTTTTTTT  EEEEEEEEEE  SSSSSSSSSS  TTTTTTTTTT  
    TT      EE          SS       S      TT      
    TT      EE          SS              TT      
    TT      EEEEE       SSSSSSSSS       TT      
    TT      EEEEE        SSSSSSSSS      TT      
    TT      EE                  SS      TT      
    TT      EE          S       SS      TT      
    TT      EEEEEEEEEE  SSSSSSSSSS      TT      
    TT      EEEEEEEEEE   SSSSSSSS       TT      
 
% bin/banner-05-2 Test
  ______
    /       _/_
 --/ _  _   /
(_/ </_/_)_<__

% bin/banner-05-3 Test
 |''||''|                  .  
    ||      ....   ....  .||. 
    ||    .|...|| ||. '   ||  
    ||    ||      . '|..  ||  
   .||.    '|...' |'..|'  '|.'
                              
 '''''''' ''''''' '''''' '''''

% bin/banner-05-7 Test
 _______________   __________      _____     _______________ 
/______________/  /_________/    /____ / \  /______________/ 
       | |       | |           /|      \ /         | |       
       | |       | |______    |/ \ _____           | |       
       | |       |/______/     \ /____ / \         | |       
       | |       | |                   \ /|        | |       
       | |       | |_________  / \ _____|/         | |       
       |/        |/_________/  \ /_____/           |/      

% bin/banner-05-8 Test
 _________   _______    _____    _________  
|___   ___| |  _____|  / ____|  |___   ___| 
    | |     | |___    | |____       | |     
    | |     |  ___|    \____ \      | |     
    | |     | |_____    ____| |     | |     
    |_|     |_______|  |_____/      |_|     

bin/banner-05-9 Test
 ___         
  |   _   _|_
  |  (= S  |_


banner-06
---------
SYNOPSIS: banner [-w#] [-d] [-t] message ...
OPTIONS:
DESCRIPTION:
     Banner prints a large, high quality banner on  the  standard
     output.  If the message is omitted, it prompts for and reads
     one line of its standard input.  If -w is given, the  output
     is  scrunched down from a width of 132 to n , suitable for a
     narrow terminal.  If n is omitted, it defaults to 80.

     The output should be printed on a hard-copy  device,  up  to
     132  columns  wide,  with  no  breaks between the pages. The
     volume is great enough that you may want a printer or a fast
     hardcopy  terminal,  but  if you are patient, a decwriter or
     other 300 baud terminal will do.
HISTORY: This is the BSD banner: "@(#)banner.c    4.3 (Berkeley) 6/1/90"
EXAMPLES:
% bin/banner-06 a
                         ######## 
                     ################ 
                   #################### 
                 ########################             ##### 
                ##########################          ########## 
               ############################        ############# 
              ##############################       ############## 
              #########            #########       ############### 
             ########                ########       ############## 
             #######                  #######         ####   ###### 
             ######                    ######                 ##### 
             ######                    ######                  #### 
             ######                    ######                  #### 
              #####                    #####                   #### 
              #####                    #####                  ##### 
               #####                  #####                  ###### 
                #####                #####                  ####### 
                 ######            ######                ######### 
                  ################################################ 
                ################################################# 
               ################################################# 
              ################################################# 
             ################################################# 
             ############################################### 
             ############################################# 
             ######################################### 
             ###### 
             #### 
             ### 
             ## 


banner-07
---------
SYNOPSIS: banner <text>
OPTIONS: none
DESCRIPTION: And just another small banner variation.
HISTORY:
EXAMPLES:
% bin/banner-07 test
 _____  ___  __   _____
   |   |__  |  \    |  
   |   |     \__    |  
   |   |___ \___|   |  


banner-08
---------
SYNOPSIS: banner [-h] [-s] <text>
OPTIONS:  -h = convert to hebrew (compile with -DHEBREW)
          -s = shadow mode on
DESCRIPTION: Nice shadow function.
HISTORY: Submitted by Amos Shapir <amos@cs.huji.ac.il>
EXAMPLES:
% ../bin/banner-08 Test
######                     #    
# ## #                    ##    
  ##     ####    #####   #####  
  ##    ##  ##  ##        ##    
  ##    ######   ####     ##    
  ##    ##          ##    ## #  
 ####    ####   #####      ##   
                                
% ../bin/banner-08 -s Test
        _  _ /                        /    
      _/  /_/                        /    
         /      __ /     ____/   _  __/  
        /      /   /  _ /          /    
       /      ____/   ___ /       /    
      /    _ /           _/    _ /_/  
  ____/    ____/   _____/      __/   
                                    

banner-09
---------
SYNOPSIS: banner <text>
OPTIONS: none
DESCRIPTION: And another banner. Has also nice output.
HISTORY:
EXAMPLES:
% bin/banner-09 Test
 @@@@@@@@@                       
     @                       @   
     @  @@@@@@@   @@@@@@@ @@@@@@@
     @ @       @ @           @   
     @ @@@@@@@@@  @@@@@@@    @   
     @ @                 @   @  @
     @  @@@@@@@   @@@@@@@     @@ 


banner-10
---------
SYNOPSIS: scripto <text >output
OPTIONS: none
DESCRIPTION: I didn't test this program because I have no pascal compiler,
             it is included here only for completeness.
HISTORY:
EXAMPLES: none


banner-11
---------
SYNOPSIS:  mb [<opts>] [<text>] [<opts>]
OPTIONS: 
     -o=<file>      use <file> instead of the default font file.
     -l             use the 16x8 font instead of the  8x8  font  (producing
                    larger banners).
     -w=<num>       print banner with a larger width. Default is 1.
     -h=<num>       print banner with a larger height. Default is 1.
     -c             print the banner cursive.
     -C             print the banner back cursive.
     -i             invert the banner.

     -f=<char>      use <char> as the foreground character. Default is `*'.
     -b=<char>      use <char> as  the  background  character.  Default  is
                    Space.
     -s             use the character  as  foreground  which  is  currently
                    printed.
DESCRIPTION: Also a very nice banner program. See also Read.Me.
HISTORY: This banner was written by a good friend of mine. This is
         the latest version I got from him and although Read.Me says that
         there is no manpage included, Ulli wrote a small manpage for me.
EXAMPLES:

% bin/banner-11 -o=bin/banner-11.font Test
******                     *    
* ** *                    **    
  **     ****    *****   *****  
  **    **  **  **        **    
  **    ******   ****     **    
  **    **          **    ** *  
 ****    ****   *****      **   
                                
% bin/banner-11 -o=bin/banner-11.font -l Test
                                
                                
                                
 ******                         
   **                     **    
   **                     **    
   **    *****   *****  ******  
   **   **   ** **   **   **    
   **   **   ** **        **    
   **   *******  *****    **    
   **   **           **   **    
   **   **      **   **   **    
   **    ******  *****     ***  
                                
                                
                                
% bin/banner-11 -o=bin/banner-11.font -C Test  
******                     *           
 * ** *                    **          
    **     ****    *****   *****       
     **    **  **  **        **        
      **    ******   ****     **       
       **    **          **    ** *    
       ****    ****   *****      **    
                                       

banner-12
---------
SYNOPSIS: banner [<opts>] {<string>} [<opts>]
OPTIONS:
     -i         prints italic
     -d         double size
     -c=<char>  character
     -s         use same character
     -z         read strings from standard input
     -z=<file>  read strings from <file>
DESCRIPTION: This banner program is based on banner-01.
HISTORY:
1.00 -- Written in 1987 by Wolfgang Ocker, reccoware systems, Puchheim.
1.01 -- Tested on OS-9/68000, SunOS, System V 3.2.
1.02 -- Some cleanups by Frank Kaefer (fkk@stasys.sta.sub.org).
1.10 -- Paul E. Black (paul@delfin.com):
        - Added a C interface to the banner routine itself so it
          can be linked with an application.  The user interface now
          sets flags and calls the C interface.
        - Letters can be any height, not just single or double.
        - Multi-height italic are smoother: it shifts one column per
          printed row rather than one double-column per double-row.
        - Cleaned up and sped up some of the low level loops some what.
1.11 -- Banner is now under the GNU GENERAL PUBLIC LICENSE,
        Version 2, June 1991 (fkk)
EXAMPLES:
% bin/banner-12 -d Test
************                                          **        
************                                          **        
**  ****  **                                        ****        
**  ****  **                                        ****        
    ****          ********        **********      **********    
    ****          ********        **********      **********    
    ****        ****    ****    ****                ****        
    ****        ****    ****    ****                ****        
    ****        ************      ********          ****        
    ****        ************      ********          ****        
    ****        ****                    ****        ****  **    
    ****        ****                    ****        ****  **    
  ********        ********      **********            ****      
  ********        ********      **********            ****      


banner-13
---------
SYNOPSIS: cyrban <text>
OPTIONS: none
DESCRIPTION: Print cyrillic banners.
HISTORY:
EXAMPLES:
% bin/banner-13 Test
 #####  #####   ####  ##### 
   #    #      #        #   
   #    ####   #        #   
   #    #      #        #   
   #    #####   ####    #   

% bin/banner-13 abcdefg
   #    ####   #   #  #####  #####    #    ##### 
  # #    #     #   #   #  #  #       ###   #   # 
 #####   ####   ####   #  #  ####   # # #  #     
 #   #   #  #      #   ####  #       ###   #     
 #   #  #####      #  #    # #####    #    #     


cursive-01
----------
SYNOPSIS: cursive [ -in ] [ -tn ] [message]
OPTIONS:
DESCRIPTION:
     Cursive prints a line of text  in  a  rather  crude  cursive
     script.  It is intended for use mainly for the generation of
     decorative signatures for electronic mail.  If message  text
     is  given on the command line, that text is used.  Otherwise
     the text will be read from standard input up to  an  end  of
     file.   The -i option sets the minimum spacing between adja-
     cent characters.  The default is -i1 . The  -t  option  sets
     the  length  of  the trailing lines on the end of each word.
     The default is -t1 .

     The '_' character is treated in a special way.   It  may  be
     inserted  in  the  text anywhere you wish to lengthen a con-
     necting line between two letters.
HISTORY: Written by Jan Wolter.
EXAMPLES:
% bin/cursive-01 Test
  ______
    /       _/_
 --/ _  _   /
(_/ </_/_)_<__


cursive-02
----------
SYNOPSIS: see cursive-01
OPTIONS: see cursive-01
DESCRIPTION: see cursive-01 (The difference to cursive-01 is a different
             character set.)
HISTORY: see cursive-01
EXAMPLES:
% bin/cursive-02 Test
  ______
    /       _/_
 --/ _  _   /
(_/ (<_/_)_(__


gothic
------
SYNOPSIS: gothic
OPTIONS: none
DESCRIPTION: Print a line of text in Gothic (Black) Script.
HISTORY:
EXAMPLES:
% bin/gothic Test
 ___
-   ---___-               ,
   (' ||                 ||
  ((  ||     _-_   _-_, =||=
 ((   ||    || \\ ||_.   ||
  (( //     ||/    ~ ||  ||
    -____-  \\,/  ,-_-   \\,
