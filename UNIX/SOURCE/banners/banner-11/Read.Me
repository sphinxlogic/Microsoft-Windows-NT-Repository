mb - and just another banner program.

No makefile, No manualpage included.

It's just another senseless program but I couldn't resist in writing
it. It should just compile ok under OS-9/68k, any *IX flavour and on
nearly every other system (with same small changes...). I could only
test it on OS-9/68k.

The main difference to other programs: It uses an external font-file,
so you can change this as you want. The format is very easy:
256 characters each in a size of 16 byte, displaying in following
order
bit     7 6 5 4 3 2 1 0
byte 0  X X X X X X X X
byte 1  X X X X X X X X
byte 2  X X X X X X X X
byte 3  X X X X X X X X
byte 4  X X X X X X X X
byte 5  X X X X X X X X
byte 6  X X X X X X X X
byte 7  X X X X X X X X
byte 8  X X X X X X X X
byte 9  X X X X X X X X
byte 10 X X X X X X X X
byte 11 X X X X X X X X
byte 12 X X X X X X X X
byte 13 X X X X X X X X
byte 14 X X X X X X X X
byte 15 X X X X X X X X

Then 256 characters with a size of 8 bytes each follows, order is the
same as above (but only 8 lines).

This file may be prefixed by an OS-9/68k module header of 48 bytes
(these font files are used on an OS-9 implementation for the Atari ST).

The format itself can be found in the Atari ST TOS world very often,
so it's easy to get other fonts (I haven't included any, 'cause I
don't if they are copyrighted, sigh).

There is no difference to other programs of the same type, the most
common options are available:
-o=<file>  use this fontfile instead of $HOME/.font or
           /dd/SYS/MB_Font (OS-9) / /etc/MB_Font (*IX) / \MB_FONT (DOS)
-l         use the larger (16x8) font (default is 8x8 font)
-w=<num>   width multiplicator
-h=<num>   hight multiplicator
-c         print the letters cursive (well not really cursive...)
-C         make the banner cursive in other direction
-i         invert the printing (exchange for- and background pattern)
-f=<char>  use <char> as the forground (i.e. write) pattern
           (default `*')
-b=<char>  the background (default ` ')
-s         use the character itself as the forground pattern

If no string is given, the strings are read in from stdin until
an EOF is detected.

You can print a leading `-' with a construct `--'

The included font file represents roughly the ISO 8859/1 character
set.

Bug: if a fontfile starts with the bytes 0x4a 0xfc then it is assumed
to be a OS-9 Module and the first 48 bytes are skipped...

Some expamples:
% mb Foo Bar
*******                 
 **   *                 
 ** *    ****    ****   
 ****   **  **  **  **  
 ** *   **  **  **  **  
 **     **  **  **  **  
****     ****    ****   
                        
******                  
 **  **                 
 **  **  ****   ** ***  
 *****      **   *** ** 
 **  **  *****   **  ** 
 **  ** **  **   **     
******   *** ** ****    
                        

$ mb "Foo Bar"
*******                         ******                  
 **   *                          **  **                 
 ** *    ****    ****            **  **  ****   ** ***  
 ****   **  **  **  **           *****      **   *** ** 
 ** *   **  **  **  **           **  **  *****   **  ** 
 **     **  **  **  **           **  ** **  **   **     
****     ****    ****           ******   *** ** ****    
                                                        
$ mb -lcfXb. "--Foo Bar"
...............................................................................
...............................................................................
...............................................................................
....................XXXXXXX.........................XXXXXX.....................
...................XX..............................XX...XX.....................
..................XX..............................XX...XX......................
.................XX.......XXXXX...XXXXX..........XX...XX..XXXXX..XXXXXX........
.........XXXXXX.XXXXX...XX...XX.XX...XX.........XXXXXX.......XX.XX...XX........
...............XX......XX...XX.XX...XX.........XX...XX..XXXXXX.XX...XX.........
..............XX......XX...XX.XX...XX.........XX...XX.XX...XX.XX...............
.............XX......XX...XX.XX...XX.........XX...XX.XX...XX.XX................
............XX......XX...XX.XX...XX.........XX...XX.XX...XX.XX.................
...........XX.......XXXXX...XXXXX..........XXXXXX...XXXXXX.XX..................
...............................................................................
...............................................................................
...............................................................................

$ mb -w=3 Foo
*********************                                                   
   ******         ***                                                   
   ******   ***            ************            ************         
   ************         ******      ******      ******      ******      
   ******   ***         ******      ******      ******      ******      
   ******               ******      ******      ******      ******      
************               ************            ************         
                                                                        
