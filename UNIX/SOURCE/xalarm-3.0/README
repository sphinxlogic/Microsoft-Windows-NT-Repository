			Welcome to xalarm-3 for X11R4/5
		   Ideal for the permanently late, like me.

		  Copyright (c) 1991, 1992 by Simon Marshall


WOULD XALARM BE USEFUL TO ME?
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  For those who need to be reminded that they have to be somewhere, or have to
  do something, on a one-off basis.  "Gotta finish work on time, can't be late,
  going out!", "Meeting in half an hour!" etc.

  For those who have to be reminded that they have to be somewhere, or have to
  do something, on a regular basis.  "Project discussion at 2.30pm Wednesday!",
  "Lunch at 1pm!" etc.


DESCRIPTION
~~~~~~~~~~~

  xalarm is an interactive alarm clock analogous to a combination of leave(1)
  and calendar(1), only much more powerful.

  You can set the alarm either by command line options, or by entering the time
  using the popup window.  The time and date formats are quite flexible and
  natural.  At the appropriate time, xalarm pops up a window to tell you that
  your time is up.  You can tell xalarm to pop up warning windows at specified
  times before the alarm is to trigger in order to warn you of the impending
  alarm.

  If a time is not given or recognised, or a date or warning time is not
  recognised, or confirmation is required, xalarm prompts for one by popping up
  a window.  This gives you an opportunity to change the alarm setting,
  warnings times, and the message xalarm will display when the alarm is
  triggered.

  This form is suitable for inclusion as a menu option under a window manager.

  You can make xalarm read alarm times, dates, and the messages to display from
  a file, either as a one-off or periodically using an xalarm daemon.  The
  alarms will only be set on the dates specified in the file.  This way you can
  have an appointments file.

  This form is suitable for inclusion in an X start up or initialisation
  script.

  To help you, xalarm shows the current time, and the alarm also displays the
  time since the alarm triggered.  Even if you end an X session before xalarm
  has finished, xalarm will save its alarm.  It will then be re-started (if the
  time has not passed) next time you invoke xalarm.

  xalarm allows you to snooze the alarm after it is triggered, to give you an
  opportunity to carry on and be late anyway.  It can also pester you after it
  has triggered.  Even after you have set the alarm and confirmed it, you can
  reset the alarm as long as you know the xalarm process number; xalarm can
  list other xalarm pids.

  xalarm makes maximum use of resources, as well as having a number of command
  line options, and these can be used to control most of the appearance of
  xalarm and (just about) all of its behaviour.

  The current xalarm options include:
	-daemon +days|daily|weekly
	-file +days|date|today|tomorrow|weekly
	-date +days|date|today|tomorrow|week
	-time +time|time|now|noon
	-warn time[,time...]				-nowarn
	-confirm					-noconfirm
	-warnwords number				-nowarnwords
	-list
	-reset pid|all
	-kill pid|all
	-pester time					-nopester
	-snooze time
	-alarmaudio bell|beep|quiet|shell_script
	-warningaudio bell|beep|quiet|shell_script
	-quiet						-volume	percent
	-help						-version

  Also supplied is xmemo, a front end to xalarm.  By default, make tries to
  create xfortune and xyow (front ends to xmemo).  Note that they require the
  fortune and yow programs respectively, they don't come with this.

  See the file INSTALL and PROBLEMS for help with installation and problems.


THE END
~~~~~~~

  Xalarm uses Xt & Xaw stuff only, and may well be a useful aid to someone
  trying to learn X, as I was/am.

  You may have problems with X function names if using R3 or earlier;
  application contexts are used, but this should not take much changing - using
  #defines may do most of the job.

  Written in an attempt to learn X Windows in as short a time as possible; it
  may be written badly, but makes as much use of resources as possible.  I
  don't think it is (but I wouldn't, would I?) and I have found it is very
  useful for me now I'm to be responsible for giving lectures...

	Simon.
_______________________________________________________________________________
    Simon Marshall, Dept. Computer Science, University of Hull, HU6 7RX, UK
    S.Marshall@Hull.ac.UK
