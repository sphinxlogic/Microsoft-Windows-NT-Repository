#!/bin/sh

# Just try to find out the full path names for kill, ps, grep & colrm which
# are used within fns.c to do process listing.

echo -n '
I need to find the path of a few things on your system.  If I guess wrongly,
say so at the end, and I will try again.  If I do not know where they reside, I
will ask you.  Default answers are in brackets.  If you do not know where they
are on your system, first try "which <command>" (or equivalent) in a shell, or
ask your local System Guru or Manager.

+ If you do not have "kill", "ps", "grep" or "colrm" (or equivalent), do not
  panic, xalarm only uses them when it is attempting to list the process ids of
  other xalarms.  If you do not have these commands, just hit RETURN.

  You can make xalarm, but you will not be able to use the -reset, -kill or
  -list options.

  I need to know because xalarm should use full path names.

+ If you do not have "fortune" or "yow", you cannot have the X equivalent since
  they are just front ends to them!  But do not panic, they are not necessary
  for xalarm, so if you do not have them just hit RETURN when asked for their
  whereabouts.

Hit RETURN when ready...'
read dummy
echo " "

if test "$1" = "-quick"; then
	mode=-quick
	shift
else
	mode=
fi

kill=`./fullpath $mode kill`
ps=`./fullpath $mode ps`
grep=`./fullpath $mode grep`
colrm=`./fullpath $mode colrm`

echo '/*
 * Get xalarm pids:
 *     list user processes | filter for xalarm | pid #s only | filter us out
 *
 * Where "us" is where the xalarm pid# running this will go.
 *
 * Normally we use ps(1), grep(1), colrm(1) and grep(1) again, respectively.
 * Typically:
 *    "/bin/ps -cx | /bin/grep -w xalarm | /usr/ucb/colrm 7 | /bin/grep -v %d"
 */

#define	GETXALARMPIDS	\
    "'$ps' -cx | '$grep' -w xalarm | '$colrm' 7 | '$grep' -v %d"

/*
 * Full path of kill(1), typically "/bin/kill".
 */

#define	KILLPATH	"'$kill'"
' > fns.h

echo "+ Created fns.h using these."
echo " "

for program in $*; do
	progpath=`./fullpath $mode $program`
	if test -f "$progpath"; then
		echo '#!/bin/sh
exec xmemo -name x'$program' ${1+"$@"} "`'$progpath'`"' > x$program
		echo "+ Created x$program using this."
	else
		echo '#!/bin/sh
exec xmemo -name x'$program' "Sorry, x'$program' is unavailable - no '$program'!"' > x$program
		echo "+ Created x$program with an apologetic message."
	fi
	chmod +x x$program
done

echo -n "
Are these OK? [y] "
read ans
case $ans in
	""|"y"*|"Y"*)	touch .config
			echo "
Thank you.
";;
	*)		./config.1st $*;;
esac
