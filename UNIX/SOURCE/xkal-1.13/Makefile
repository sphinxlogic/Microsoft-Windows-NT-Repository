# Makefile generated by imake - do not edit!
# $XConsortium: imake.c,v 1.65 91/07/25 17:50:17 rws Exp $
#
# The cpp used on this machine replaces all newlines and multiple tabs and
# spaces in a macro expansion with a single space.  Imake tries to compensate
# for this, but is not always successful.
#

# -------------------------------------------------------------------------
# Makefile generated from "Imake.tmpl" and </tmp/IIf.a002TK>
# $XConsortium: Imake.tmpl,v 1.139 91/09/16 08:52:48 rws Exp $
#
# Platform-specific parameters may be set in the appropriate <vendor>.cf
# configuration files.  Site-specific parameters should be set in the file
# site.def.  Full rebuilds are recommended if any parameters are changed.
#
# If your C preprocessor does not define any unique symbols, you will need
# to set BOOTSTRAPCFLAGS when rebuilding imake (usually when doing
# "make World" the first time).
#

# -------------------------------------------------------------------------
# site-specific configuration parameters that need to come before
# the platform-specific parameters - edit site.def to change

# site:  $XConsortium: site.def,v 1.2 91/07/30 20:26:44 rws Exp $

# -------------------------------------------------------------------------
# platform-specific configuration parameters - edit x386.cf to change

# $Header: /home/x_cvs/mit/config/x386.cf,v 1.22 1992/07/16 10:45:34 dawes Exp $
# platform:  $XConsortium: x386.cf,v 1.7 91/08/16 19:30:10 gildea Exp $

  EXTRA_INCLUDES =

# $XConsortium: sv4Lib.rules,v 1.8 91/07/19 15:38:53 rws Exp $

# operating system:  Unix System V/386 Release 4.2 Consensys

# -------------------------------------------------------------------------
# site-specific configuration parameters that go after
# the platform-specific parameters - edit site.def to change

# site:  $XConsortium: site.def,v 1.2 91/07/30 20:26:44 rws Exp $

#
# ProjectRoot is where you want to install the binaries, libs, fonts etc
#

      PROJECTROOT = /opt
         XWINHOME = /usr/X
       XWINLIBDIR = $(XWINHOME)/lib
       XWINBINDIR = $(XWINHOME)/bin

     USLCLIENTSRC = $(TOP)/uslclients
       DESKTOPDIR = $(PROJECTROOT)/desktop
         DTADMDIR = $(PROJECTROOT)/adm
        XDEFAULTS = $(PROJECTROOT)/defaults

       FONTINCSRC = $(FONTSRC)/include
    FONTLIBINCSRC = $(FONTSRC)/lib/include
      FOLIOLIBSRC = $(FONTSRC)/lib/folio
       FONTLIBSRC = $(FONTSRC)/lib/font
    BITMAPFONTSRC = $(FONTSRC)/lib/bitmap
      FONTSLIBSRC = $(FONTSRC)/lib/
           XOLSRC = $(LIBSRC)/Xol
        XOLLIBSRC = $(LIBSRC)/Xol
            NROFF = nroff
         MANFLAGS = 444
BITMAPLIBS_TO_BUILD = libbitmap.a libbitmap.so
FONTLIBS_TO_BUILD = libfont.a libfont.so

            SHELL = /bin/sh

              TOP = .
      CURRENT_DIR = .

               AR = ar cq
  BOOTSTRAPCFLAGS =  -DSVR4 -DSYSV386 -DSYSV -DUSG
               CC = gcc
               AS = as

         COMPRESS = compress
              CPP = /lib/cpp $(STD_CPP_DEFINES)
    PREPROCESSCMD = gcc -E $(STD_CPP_DEFINES)
          INSTALL = /usr/ucb/install
               LD = ld
             LINT = lint
      LINTLIBFLAG = -o
         LINTOPTS = -ax
               LN = ln -s
             MAKE = make
               MV = mv
               CP = cp
              HCC = HccCmd
              SED = SedCmd

               RM = rm -f
            TROFF = psroff
         MSMACROS = -ms
              TBL = tbl
              EQN = eqn
     STD_INCLUDES = -I/usr/X/include -I$(TOOLS)/usr/include
  STD_CPP_DEFINES =  -DSVR4 -DSYSV386 -DSYSV -DUSG
      STD_DEFINES =  -DSVR4 -DSYSV386 -DSYSV -DUSG
 EXTRA_LOAD_FLAGS =
  EXTRA_LIBRARIES = -lsocket -lnsl
             TAGS = ctags

    SHAREDCODEDEF =
         SHLIBDEF =

    PROTO_DEFINES =

     INSTPGMFLAGS = -s

     INSTBINFLAGS = -m 0755
     INSTUIDFLAGS = -m 4755
     INSTLIBFLAGS = -m 0644
     INSTINCFLAGS = -m 0444
     INSTMANFLAGS = -m 0444
     INSTDATFLAGS = -m 0444
    INSTKMEMFLAGS = -m 4755

      PROJECTROOT = /opt

     TOP_INCLUDES = -I$(INCROOT)

      CDEBUGFLAGS = -O3 -g
        CCOPTIONS = -m386 -fpcc-struct-return -Di386
        HCCOPTIONS = DefaultHCCOptions

      ALLINCLUDES = $(INCLUDES) $(EXTRA_INCLUDES) $(TOP_INCLUDES) $(STD_INCLUDES)
       ALLDEFINES = $(ALLINCLUDES) $(STD_DEFINES) $(EXTRA_DEFINES) $(PROTO_DEFINES) $(DEFINES)
           CFLAGS = $(CDEBUGFLAGS) $(CCOPTIONS) $(ALLDEFINES)
           HCFLAGS = $(CDEBUGFLAGS) $(HCCOPTIONS) $(ALLDEFINES)
        LINTFLAGS = $(LINTOPTS) -DLINT $(ALLDEFINES)

           LDLIBS = $(SYS_LIBRARIES) $(EXTRA_LIBRARIES)

        LDOPTIONS = $(CDEBUGFLAGS) $(CCOPTIONS) $(LOCAL_LDFLAGS) -L$(USRLIBDIR)

        HLDOPTIONS = $(CDEBUGFLAGS) $(HCCOPTIONS) $(LOCAL_LDFLAGS)

   LDCOMBINEFLAGS = -r
      DEPENDFLAGS =

        MACROFILE = x386.cf
           RM_CMD = $(RM) *.CKP *.ln *.BAK *.bak *.o core errs ,* *~ *.a .emacs_* tags TAGS make.log MakeOut

    IMAKE_DEFINES =

         IRULESRC = $(CONFIGDIR)
        IMAKE_CMD = $(IMAKE) -DUseInstalled -I$(IRULESRC) $(IMAKE_DEFINES)

     ICONFIGFILES = $(IRULESRC)/Imake.tmpl $(IRULESRC)/Imake.rules \
			$(IRULESRC)/Project.tmpl $(IRULESRC)/site.def \
			$(IRULESRC)/$(MACROFILE) $(EXTRA_ICONFIGFILES)

# -------------------------------------------------------------------------
# X Window System Build Parameters
# $XConsortium: Project.tmpl,v 1.142 92/01/25 16:44:02 rws Exp $

# ----------------------------------------------------------------------
# LEMIS parameters (Greg Lehey, 7 September 1993)
#

         DEFINES = -DLIBDIR=\"$(PROJECTROOT)/lib\" -DDESTDIR=\"$(PROJECTROOT)/bin\"

# -------------------------------------------------------------------------
# X Window System make variables; this need to be coordinated with rules

          PATHSEP = /
        USRLIBDIR = $(XWINHOME)/lib
           BINDIR = /opt/bin
          INCROOT = /opt/include
     BUILDINCROOT = $(TOP)
      BUILDINCDIR = $(BUILDINCROOT)/X11
      BUILDINCTOP = ..
           INCDIR = $(INCROOT)/X11
           ADMDIR = /usr/adm
           LIBDIR = $(USRLIBDIR)
        CONFIGDIR = /cdimage/cdrom/ETC/xconfig
       LINTLIBDIR = $(USRLIBDIR)/lint

          FONTDIR = $(LIBDIR)/fonts
         XINITDIR = $(LIBDIR)/xinit
           XDMDIR = $(LIBDIR)/xdm
           TWMDIR = $(LIBDIR)/twm
          MANPATH = /opt/man
    MANSOURCEPATH = /opt/man/cat
        MANSUFFIX = 1
     LIBMANSUFFIX = 1
           MANDIR = $(MANSOURCEPATH)$(MANSUFFIX)
        LIBMANDIR = $(MANSOURCEPATH)$(LIBMANSUFFIX)
           NLSDIR = $(LIBDIR)/nls
        PEXAPIDIR = $(LIBDIR)/PEX
      XAPPLOADDIR = $(LIBDIR)/app-defaults
       FONTCFLAGS = -t

     INSTAPPFLAGS = $(INSTDATFLAGS)

            IMAKE = imake
           DEPEND = makedepend
              RGB = rgb

            FONTC = bdftosnf

        MKFONTDIR = mkfontdir
        MKDIRHIER = /bin/sh $(XWINLIBDIR)/mconfig/mkdirhier

        CONFIGSRC = $(TOP)/mconfig
       DOCUTILSRC = $(TOP)/doc/util
        CLIENTSRC = $(TOP)/clients
          DEMOSRC = $(TOP)/demos
           LIBSRC = $(TOP)/lib
          FONTSRC = $(TOP)/fonts
       INCLUDESRC = $(TOP)/X11
        SERVERSRC = $(TOP)/server
          UTILSRC = $(TOP)/util
        SCRIPTSRC = $(UTILSRC)/scripts
       EXAMPLESRC = $(TOP)/examples
       CONTRIBSRC = $(TOP)/../contrib
           DOCSRC = $(TOP)/doc
           RGBSRC = $(TOP)/rgb
        DEPENDSRC = $(UTILSRC)/makedepend
         IMAKESRC = $(CONFIGSRC)
         XAUTHSRC = $(LIBSRC)/Xau
          XLIBSRC = $(LIBSRC)/X
           XMUSRC = $(LIBSRC)/Xmu
       TOOLKITSRC = $(LIBSRC)/Xt
       AWIDGETSRC = $(LIBSRC)/Xaw
       OLDXLIBSRC = $(LIBSRC)/oldX
      XDMCPLIBSRC = $(LIBSRC)/Xdmcp

      BDFTOSNFSRC = $(FONTSRC)/clients/bdftosnf

     MKFONTDIRSRC = $(FONTSRC)/clients/mkfontdir
         FSLIBSRC = $(FONTSRC)/lib/fs
    FONTSERVERSRC = $(FONTSRC)/server
     EXTENSIONSRC = $(TOP)/extensions
         XILIBSRC = $(EXTENSIONSRC)/lib/xinput
      XTESTLIBSRC = $(EXTENSIONSRC)/lib/xtest
      PHIGSLIBSRC = $(EXTENSIONSRC)/lib/PEX

# $XConsortium: sv4Lib.tmpl,v 1.6 92/01/25 16:46:55 rws Exp $

#
# USL: BEGIN
#	The default revision numbers from MIT is 5. But since USL has to be
#	backward compatible, so force it to 1
#

         SOXOLREV = 1
        SOOLITREV = 1
       SOOLITMREV = 1
       SOOLITOREV = 1
          SODTREV = 1

# USL: END

SHLIBLDFLAGS = -G -z text
PICFLAGS = -K PIC

  DEPEXTENSIONLIB =
     EXTENSIONLIB = -lXext

          DEPXLIB = $(DEPEXTENSIONLIB)
             XLIB = $(EXTENSIONLIB) -lX11

        DEPXMULIB = $(USRLIBDIR)/libXmu.so.$(SOXMUREV)

              XMULIB = -lXmu

       DEPOLDXLIB =
          OLDXLIB = -loldX

      DEPXTOOLLIB =
         XTOOLLIB = -lXt

DEPXOLCOMPATLIB = $(USRLIBDIR)/libXol.so.$(SOXOLREV)
      DEPXOLLIB = $(USRLIBDIR)/libOlit.so.$(SOXOLREV)
         XOLLIB = -lOlit

        DEPXAWLIB =
           XAWLIB = -lXaw

        DEPXILIB =
           XILIB = -lXi

        DEPXTESTLIB =
           XTESTLIB = -lXtst

#
# USL: BEGIN
#

XHOSTLOC = $(DESTDIR)/$(LIBDIR)
SHLIBFLAGS =  -L $(XHOSTLOC)

#
# USL: END
#

        SOXLIBREV = 1
          SOXTREV = 1
         SOXAWREV = 1
        SOOLDXREV = 1
         SOXMUREV = 1
        SOXEXTREV = 1
      SOXINPUTREV = 1
       SOXTESTREV = 1
       SOXTRAPREV = 1

      DEPXAUTHLIB = $(USRLIBDIR)/libXau.a
         XAUTHLIB =  -lXau
      DEPXDMCPLIB = $(USRLIBDIR)/libXdmcp.a
         XDMCPLIB =  -lXdmcp

        DEPPHIGSLIB = $(USRLIBDIR)/libphigs.a
           PHIGSLIB =  -lphigs

 LINTEXTENSIONLIB = $(LINTLIBDIR)/llib-lXext.ln
         LINTXLIB = $(LINTLIBDIR)/llib-lX11.ln
          LINTXMU = $(LINTLIBDIR)/llib-lXmu.ln
        LINTXTOOL = $(LINTLIBDIR)/llib-lXt.ln
          LINTXAW = $(LINTLIBDIR)/llib-lXaw.ln
           LINTXI = $(LINTLIBDIR)/llib-lXi.ln
        LINTPHIGS = $(LINTLIBDIR)/llib-lphigs.ln

          DEPLIBS = $(DEPXAWLIB) $(DEPXMULIB) $(DEPXTOOLLIB) $(DEPXLIB)

         DEPLIBS1 = $(DEPLIBS)
         DEPLIBS2 = $(DEPLIBS)
         DEPLIBS3 = $(DEPLIBS)

# -------------------------------------------------------------------------
# Imake rules for building libraries, programs, scripts, and data files
# rules:  $XConsortium: Imake.rules,v 1.126 91/12/30 20:14:35 rws Exp $

# -------------------------------------------------------------------------
# start of Imakefile

#
#	Imakefile for xkal - X appointment calendar
#
#	George Ferguson, ferguson@cs.rochester.edu, 15 Oct 1990.
#	Version 1.1 - 27 Feb 1991.
#
#	$Id: Imakefile,v 2.3 91/03/13 13:30:40 ferguson Exp $
#

#
# Here's what to change to customize the installation...
#
# Where do you want this stuff (if the defaults aren't okay)?
#
BINDIR = /usr/X/bin
LIBDIR = /usr/X/lib
MANDIR = /opt/man/man1

#
# Where is the ezMenu package?
#
EZMENU_DIR =		/source/cdrom/SOURCE/ezMenu
EZMENU_INCLUDES =	-I$(EZMENU_DIR)
EZMENU_LIBRARIES =	-L$(EZMENU_DIR) -lezMenu$(TARGET_MACH)

#
# Where is the app-defaults to C converter?
# Only needed if you change the app-defaults file Xkal.ad and want the changes
# compiled into the program. If you don't have ad2c you should remove the
# extra clean target for Xkal.ad.h below. If you lose Xkal.ad.h and can't
# remake it, create it to be a line containing NULL (i.e. those four
# characters) only.
#
AD2C = ad2c

#
# Do you want to use popup alert boxes (can you compile them)? If not,
# comment out these definitions and error messages will go to stderr.
#
ALERTC = alert.c
ALERTO = alert.o
ALERTDEFS = -DUSE_ALERT

#
# Is dysize(3) in your standard library? If not, you need these definitions.
# It appears that Ultrix and maybe SGI systems need this for sure.
#
# Needed in .2 as well (Greg Lehey, LEMIS, 18 May 1993)
DYSIZEC = dysize.c
DYSIZEO = dysize.o

#
# Is strcasecmp(3) in your standard library? If not, you need these definitions.
# It appears that at least Sun 386i systems need this for sure.
#
# Also .2 (Greg Lehey, LEMIS, 18 May 1993)
STRCASECMPC = strcasecmp.c
STRCASECMPO = strcasecmp.o

#
# This is -g for debugging or -O for optimization (or nothing).
#
# Why do people put this stuff in the Imakefile? (Grog, 17 May 1993)
# CDEBUGFLAGS = -g

#	#	#	#	#	#	#	#	#	#
# Nothing to change below here
#

PROGRAMS	=	xkal xkal2xremind xkal2pcal
DEFINES		=	-DXAPPLOADDIR=\"$(XAPPLOADDIR)\" $(ALERTDEFS)
EXTRA_INCLUDES  =	$(EZMENU_INCLUDES)
LOCAL_LIBRARIES =	$(EZMENU_LIBRARIES) $(XAWLIB) $(XMULIB) $(XTOOLLIB) $(XLIB)

#
# These definitions are for xkal itself
#
# Was:
# SRCS1 = xkal.c month.c day.c edit.c edit-defaults.c db.c \
#	util.c date-strings.c resources.c string-convert.c \
#	$(ALERTC) $(DYSIZEC) $(STRCASECMPC)
# OBJS1 = xkal.o month.o day.o edit.o edit-defaults.o db.o \
#	util.o date-strings.o resources.o string-convert.o \
#	$(ALERTO) $(DYSIZEO) $(STRCASECMPO)
# (Greg Lehey, LEMIS, 18 May 1993)
# but we have trouble with and don't need string-convert.c, so

SRCS1 = xkal.c month.c day.c edit.c edit-defaults.c db.c \
	util.c date-strings.c resources.c strcasecmp.c \
	$(ALERTC) $(DYSIZEC) $(STRCASECMPC)
OBJS1 = xkal.o month.o day.o edit.o edit-defaults.o db.o \
	util.o date-strings.o resources.o strcasecmp.o\
	$(ALERTO) $(DYSIZEO) $(STRCASECMPO)

 OBJS = $(OBJS1) $(OBJS2) $(OBJS3)
 SRCS = $(SRCS1) $(SRCS2) $(SRCS3)

all:: $(PROGRAMS)

xkal: $(OBJS1) $(DEPLIBS1)
	$(RM) $@
	$(CC) -o $@ $(LDOPTIONS) $(OBJS1) $(LOCAL_LIBRARIES) $(LDLIBS)  $(EXTRA_LOAD_FLAGS)

install:: xkal
	@if [ -d $(DESTDIR)$(BINDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(BINDIR)); fi
	$(INSTALL) -c $(INSTPGMFLAGS)  xkal $(DESTDIR)$(BINDIR)

install.man:: xkal.man
	@if [ -d $(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(MANDIR)); fi
	$(NROFF) -man xkal.man > $(MANDIR)/xkal.$(MANSUFFIX)
	chmod $(MANFLAGS) $(MANDIR)/xkal.$(MANSUFFIX)

depend::
	$(DEPEND) $(DEPENDFLAGS) -s "# DO NOT DELETE" -- $(ALLDEFINES) $(DEPEND_DEFINES) -- $(SRCS)

lint:
	$(LINT) $(LINTFLAGS) $(SRCS) $(LINTLIBS)
lint1:
	$(LINT) $(LINTFLAGS) $(FILE) $(LINTLIBS)

clean::
	$(RM) $(PROGRAMS)

install:: Xkal.ad
	@if [ -d $(DESTDIR)$(XAPPLOADDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(XAPPLOADDIR)); fi
	$(INSTALL) -c $(INSTAPPFLAGS) Xkal.ad $(DESTDIR)$(XAPPLOADDIR)/Xkal

install:: xkal.appoints
	$(INSTALL) -c $(INSTDATFLAGS) xkal.appoints $(DESTDIR)$(LIBDIR)

#
# These definitions are for xkal2xremind
#
OBJS2 = xkal2xremind.o resources.o db.o util.o date-strings.o $(STRCASECMPO) $(DYSIZEC)
SRCS2 = xkal2xremind.c resources.c db.c util.c date-strings.c $(STRCASECMPC) $(DYSIZEO)

xkal2xremind: $(OBJS2) $(DEPLIBS2)
	$(RM) $@
	$(CC) -o $@ $(LDOPTIONS) $(OBJS2) $(XTOOLLIB) $(XLIB) $(LDLIBS)  $(EXTRA_LOAD_FLAGS)

install:: xkal2xremind
	@if [ -d $(DESTDIR)$(BINDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(BINDIR)); fi
	$(INSTALL) -c $(INSTPGMFLAGS)  xkal2xremind $(DESTDIR)$(BINDIR)

install.man:: xkal2xremind.man
	@if [ -d $(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(MANDIR)); fi
	$(NROFF) -man xkal2xremind.man > $(MANDIR)/xkal2xremind.$(MANSUFFIX)
	chmod $(MANFLAGS) $(MANDIR)/xkal2xremind.$(MANSUFFIX)

#
# These definitions are for xkal2pcal
#
OBJS3 = xkal2pcal.o resources.o db.o util.o date-strings.o $(STRCASECMPO) $(DYSIZEC)
SRCS3 = xkal2pcal.c resources.c db.c util.c date-strings.c $(STRCASECMPC) $(DYSIZEO)

xkal2pcal: $(OBJS3) $(DEPLIBS3)
	$(RM) $@
	$(CC) -o $@ $(LDOPTIONS) $(OBJS3) $(XTOOLLIB) $(XLIB) $(LDLIBS)  $(EXTRA_LOAD_FLAGS)

install:: xkal2pcal
	@if [ -d $(DESTDIR)$(BINDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(BINDIR)); fi
	$(INSTALL) -c $(INSTPGMFLAGS)  xkal2pcal $(DESTDIR)$(BINDIR)

install.man:: xkal2pcal.man
	@if [ -d $(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(MANDIR)); fi
	$(NROFF) -man xkal2pcal.man > $(MANDIR)/xkal2pcal.$(MANSUFFIX)
	chmod $(MANFLAGS) $(MANDIR)/xkal2pcal.$(MANSUFFIX)

#
# This definition installs xkal-mail and xkal-automail
#
install::
	$(INSTALL) -c $(INSTPGMFLAGS) xkal-mail xkal-automail $(BINDIR)

install.man:: xkal-mail.man
	@if [ -d $(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(MANDIR)); fi
	$(NROFF) -man xkal-mail.man > $(MANDIR)/xkal-mail.$(MANSUFFIX)
	chmod $(MANFLAGS) $(MANDIR)/xkal-mail.$(MANSUFFIX)

install.man:: xkal-automail.man
	@if [ -d $(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(MANDIR)); fi
	$(NROFF) -man xkal-automail.man > $(MANDIR)/xkal-automail.$(MANSUFFIX)
	chmod $(MANFLAGS) $(MANDIR)/xkal-automail.$(MANSUFFIX)

#
#	Generate C code for fallback resources
#
Xkal.ad.h: Xkal.ad
	$(AD2C) Xkal.ad >Xkal.ad.h

clean::
	$(RM)

# The above was:
#	$(RM) Xkal.ad.h
# but that requires ad2h, upon which we don't want to depend (Greg Lehey, 17 May 1993)

#
#	Miscellaneous other rules:
#
ci:
	ci -u *.c *.h Xkal.ad xkal.man xkal.appoints Imakefile

tar:
	tar cvf - \
		README Imakefile Makefile Xkal.ad \
		alert.c alert.h app-resources.h date-strings.c date-strings.h \
		day.c day.h db.c db.h dysize.c edit-defaults.c edit-defaults.h \
		edit.c edit.h month.c month.h patchlevel.h \
		resources.c resources.h strcasecmp.c \
		strcasecmp.c string-convert.c util.c util.h \
		xkal-automail xkal-automail.man xkal-mail xkal-mail.man \
		xkal.appoints xkal.c xkal.h xkal.man \
		xkal2pcal.c xkal2pcal.man xkal2xremind.c xkal2xremind.man | \
	    compress >xkal.tar.Z

# -------------------------------------------------------------------------
# common rules for all Makefiles - do not edit

emptyrule::

clean::
	$(RM_CMD) "#"*

Makefile::
	-@if [ -f Makefile ]; then set -x; \
	$(RM) Makefile.bak; $(MV) Makefile Makefile.bak; \
	else exit 0; fi
	$(IMAKE_CMD) -DTOPDIR=$(TOP) -DCURDIR=$(CURRENT_DIR)

tags::
	$(TAGS) -w *.[ch]
	$(TAGS) -xw *.[ch] > TAGS

# -------------------------------------------------------------------------
# empty rules for directories that do not have SUBDIRS - do not edit

install::
	@echo "install in $(CURRENT_DIR) done"

install.man::
	@echo "install.man in $(CURRENT_DIR) done"

Makefiles::

includes::

# -------------------------------------------------------------------------
# dependencies generated by makedepend

