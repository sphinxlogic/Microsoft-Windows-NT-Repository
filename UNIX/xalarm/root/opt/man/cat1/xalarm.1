


XALARM(1)                USER COMMANDS                  XALARM(1)



NNNNAAAAMMMMEEEE
     xalarm - alarm clock for _X

     xmemo - memo for _X

     xfortune - fortune for _X

     xyow - yow for _X

SSSSYYYYNNNNOOOOPPPPSSSSIIIISSSS
     xxxxaaaallllaaaarrrrmmmm [-_t_o_o_l_k_i_t_o_p_t_i_o_n ...] [-option ...] [message_text]

     xxxxmmmmeeeemmmmoooo [-_t_o_o_l_k_i_t_o_p_t_i_o_n ...] [-option ...] [message_text]

     xxxxffffoooorrrrttttuuuunnnneeee [-_t_o_o_l_k_i_t_o_p_t_i_o_n ...] [-option ...]

     xxxxyyyyoooowwww [-_t_o_o_l_k_i_t_o_p_t_i_o_n ...] [-option ...]

DDDDEEEESSSSCCCCRRRRIIIIPPPPTTTTIIIIOOOONNNN
     _x_a_l_a_r_m is an interactive alarm clock  for  the  _X(_1)  _W_i_n_d_o_w
     _S_y_s_t_e_m,  and  is  analogous to a combination of _l_e_a_v_e(_1) and
     _c_a_l_e_n_d_a_r(_1), but much more powerful.  You can set the  alarm
     either on the command line or by using the popup window.  At
     the appropriate time and date, _x_a_l_a_r_m pops up  a  window  to
     tell  you  that  your  time is up.  The time the alarm is to
     trigger may be a specific time or a time for _x_a_l_a_r_m to  wait
     before  triggering.   The  date  may be a specific date or a
     number of days in the future.

     You can tell _x_a_l_a_r_m to pop up warning windows  at  specified
     times  before  the alarm is to trigger, in order to warn you
     of the impending triggering of the alarm, and  specify  what
     message you want the alarm to display.

     You can also make _x_a_l_a_r_m read alarm times and  dates,  along
     with  the message to display in the alarm, from alarm files.
     This can be done once by _x_a_l_a_r_m, or you  can  make  it  read
     from  the  file  periodically,  as  an  _x_a_l_a_r_m daemon.  This
     enables you to forget your  regular  or  important  appoint-
     ments,  but  _x_a_l_a_r_m  will  tell  you  by  popping  up at the
     appropriate time.

     In the event that the current _X session is terminated before
     _x_a_l_a_r_m  has  finished,  _x_a_l_a_r_m saves its alarm (if it is not
     already in the alarm file) so that it will automatically  be
     restarted the next time _x_a_l_a_r_m is invoked.  Any daemons con-
     nected to the display will go away.

     This means that you can set an alarm even if you are  likely
     to terminate the _X session underwhich you are currently run-
     ning before it triggers, and the alarm will still trigger on
     whatever display you are then connected to at the time.



X Version 11         Last change: Release 5                     1






XALARM(1)                USER COMMANDS                  XALARM(1)



     The alarm window itself consists of a box of buttons and  an
     area containing the alarm message.  To give you an opportun-
     ity to carry on after the alarm has triggered  and  be  late
     anyway, _x_a_l_a_r_m allows you to snooze the alarm.  For the com-
     pletely absent-minded, _x_a_l_a_r_m can also repeatedly re-trigger
     after a specified interval.

     To help with setting the  alarm,  each  popup  displays  the
     current  time,  and  the alarm itself also displays the time
     since the alarm last triggered.

UUUUSSSSIIIINNNNGGGG XXXXAAAALLLLAAAARRRRMMMM TTTTOOOO SSSSEEEETTTT AAAANNNN AAAALLLLAAAARRRRMMMM
     If no alarm time is specified, _x_a_l_a_r_m will pop up  a  window
     in order for an alarm time to be entered.

     This form is suitable for inclusion as a menu option under a
     window manager.

     The window is also popped up if an invalid alarm or  warning
     time  is  given  (see below for date and time syntax), or if
     you specify that confirmation should be sought  before  set-
     ting the alarm.

     The window gives you an opportunity to change the alarm set-
     ting,  warning  times,  and  the message _x_a_l_a_r_m will display
     when the alarm is triggered.

     The popup resizes itself to edit any message larger than the
     space  given by default.  The keymap used by the Athena Dia-
     log widget is modelled on the  text  buffer  keymap  of  the
     editor/environment  _e_m_a_c_s(_1).  Text  may be entered when the
     pointer is anywhere within the popup.

     This popup window comprises of four separate windows,  deal-
     ing  with the alarm time, date, the warning time(s) and con-
     firmation of all the settings (where you  can  also  re-edit
     the alarm message).

     If the confirmation window is popped up, then  you  can  re-
     edit  the  alarm time, date, or warning time(s) by switching
     through the windows using the _e_d_i_t buttons.  Confirmation of
     a window's settings is made using the _e_n_t_e_r buttons, and the
     translations resource is set so that the _r_e_t_u_r_n key will  do
     the same thing.

     From the confirmation window you can  also  save  the  alarm
     settings  in  your own alarm file.  You can make _x_a_l_a_r_m read
     alarms from this alarm file.

     If confirmation is not enabled, then the window for  confir-
     mation  of  all  settings  will not be popped up even if the
     other windows are.



X Version 11         Last change: Release 5                     2






XALARM(1)                USER COMMANDS                  XALARM(1)



     Also see the examples section.

UUUUSSSSIIIINNNNGGGG XXXXAAAALLLLAAAARRRRMMMM TTTTOOOO RRRREEEEAAAADDDD AAAANNNN AAAALLLLAAAARRRRMMMM FFFFIIIILLLLEEEE
     You  can  put  alarms  in  alarm  files.   _x_a_l_a_r_m  looks  in
     ~/._x_a_l_a_r_m_s  and all the files in the colon separated list of
     files in the environment variable _X_A_L_A_R_M_F_I_L_E_P_A_T_H.

     This form is suitable for inclusion in your _X  start  up  or
     initialisation   script.  It is suited to those who start up
     _X on a regular (eg. daily) basis.

     Each line in the file should consist of an optional date  on
     which  the  alarm  is to trigger, optionally followed the by
     time and/or message.  If the time and/or date are/is  speci-
     fied,  then they must be separated from the date by a `-' on
     its own.  If both the time and message are given,  the  time
     must come first.

     If no date is specified, it is assumed to be today.   If  no
     time  is  specified,  the  alarm will trigger at the current
     time on whatever date is given.

     The format for entries in an alarm file is therefore:

                         _d_a_t_e [- [_t_i_m_e] [_m_e_s_s_a_g_e]]
          or
                               - [_t_i_m_e] [_m_e_s_s_a_g_e]

     To make it easier to put entries into the alarm file, _x_a_l_a_r_m
     can  create them for you.  You can save settings by pressing
     the _s_a_v_e button in the confirmation window when you have set
     the  alarm  that  you  want.   The settings are saved in the
     alarm file ~/._x_a_l_a_r_m_s.

     You can use _X_A_L_A_R_M_F_I_L_E_P_A_T_H to include alarms shared among  a
     number  of  people.   If a path in the list is not absolute,
     then it is assumed to be relative to your home directory.

     Blank lines and any line with `#' or `!' as the first  char-
     acter  are  ignored.  This can be used to structure and com-
     ment the alarm file.

     All other command line options and  resources  still  apply.
     See below for the date and time formats.  Also see the exam-
     ples section.

UUUUSSSSIIIINNNNGGGG AAAA DDDDAAAAEEEEMMMMOOOONNNN TTTTOOOO RRRREEEEAAAADDDD AAAANNNN AAAALLLLAAAARRRRMMMM FFFFIIIILLLLEEEE
     An alternative to using the file option to search for alarms
     within a certain date, is to use an _x_a_l_a_r_m daemon.

     This form is suitable for inclusion in your _X  start  up  or
     initialisation   script.   It  is  suited  to  those whose _X



X Version 11         Last change: Release 5                     3






XALARM(1)                USER COMMANDS                  XALARM(1)



     sessions typically span days.

     The daemon behaves in the same way as invoking  _x_a_l_a_r_m  with
     the  file  option,  except  that it periodically attempts to
     scan the alarm file(s).  The interval between  scanning  may
     be  a  date in the form of +_d_a_y_s, or one of the special sym-
     bols _d_a_i_l_y (equivalent to +_1) or _w_e_e_k_l_y. See below for  more
     on date formats.

     Once  started,  the  daemon  immediately  reads  the   alarm
     file(s),  starting  those  alarms  which are within the date
     given.  It then sleeps until the number of days given  ahead
     (on  the following Sunday if given as _w_e_e_k_l_y) at just passed
     midnight before trying again, ad infinitum.  The daemon dies
     when the connection to the display is lost.

     Note that any _x_a_l_a_r_m processes that the daemon invokes  will
     try  to  connect to the same display each time.  If you move
     displays, _x_a_l_a_r_m cannot know.

     Also see the examples section.

TTTTIIIIMMMMEEEESSSS
     The definition is that for times given with 3 or  4  digits,
     the last 2 digits are always assumed to be minutes.

     Absolute times may be suffixed with `am' or  `pm',  and  are
     assumed to be in hours if given with 1 or 2 digits.

     Times relative to the present time must be prefixed by  `+',
     and  are  assumed  to  be  in  minutes  if given with 1 or 2
     digits.

     The special symbols _n_o_w and _n_o_o_n may also be used,  and  are
     equivalent to +_0 and _1_2:_0_0, respectively.  Hours and minutes
     may be separated with `:', `.' or `-'.

     To prevent ambiguities, hours and minutes must be  in  their
     usual  ranges.   If a time of an hour or more is wanted, you
     must state it in hours and minutes.  It is not  possible  to
     specify days in the time.

     The format is a super-set (by far) of the format  recognised
     by _l_e_a_v_e(_1).

     Also see the examples section.

DDDDAAAATTTTEEEESSSS
     The date may be in the form of that given by _d_a_t_e(_1) (day of
     week,  day  of month, month, year), but can be in any order,
     need not be completely specified, and case is  not  signifi-
     cant.   _x_a_l_a_r_m  attempts to find the nearest real date which



X Version 11         Last change: Release 5                     4






XALARM(1)                USER COMMANDS                  XALARM(1)



     matches the date given.

     Alternatively, the date may be specified as  the  number  of
     whole  days  into  the  future, by prefixing the number with
     `+'.  The special symbols _t_o_d_a_y, _t_o_m_o_r_r_o_w and _w_e_e_k may  also
     be  used,  and  these  symbols  may  be  combined.  They are
     equivalent to +_0, +_1 and +_7, respectively.

     Note that if there is more than one word in the  date,  then
     the  date  must be quoted to stop the shell treating them as
     separate arguments.

     When given as an argument to the -_d_a_t_e  option,  _w_e_e_k  means
     ``seven days into the future''.  However, when it is used as
     an argument to  the  -_f_i_l_e  or  -_d_a_e_m_o_n  options,  it  means
     ``until  the  end of the current week'' (up to and including
     the coming Sunday), as in _w_e_e_k_l_y. This is to make it  easier
     to get _x_a_l_a_r_m to set all the alarms for the current week.

     Because the alarm is set in milliseconds, you cannot set  an
     alarm  for more than 49 days into the future (on the assump-
     tion that your machine has 32-bit unsigned longs).

     All symbols must consist of at least the first 3  characters
     of  the  name.   Unlike  _c_a_l_e_n_d_a_r(_1),  _t_o_m_o_r_r_o_w always means
     tomorrow.

     Also see the examples section.

WWWWAAAARRRRNNNNIIIINNNNGGGGSSSS
     When given, warnings are popped up at specified times before
     the alarm.  You can also specify that a number of words from
     the alarm message should be displayed with any warnings,  in
     case  you've  forgotten what you set it for.  If none are to
     be used, the warning will only indicate when  the  alarm  is
     due.

     Also see the examples section.

RRRRIIIINNNNGGGGIIIINNNNGGGG
     You can specify how _x_a_l_a_r_m announces itself, when  either  a
     warning or the alarm is popped up.  Each of these events has
     a separate resource, which can be one of the special symbols
     _b_e_l_l, _b_e_e_p and _q_u_i_e_t, or a shell script.

     The first two cause the terminal bell to be rung, and  _q_u_i_e_t
     does  nothing.  Otherwise it is assumed to be a shell script
     and is executed under a Bourne shell (_s_h(_1)). You  can  also
     control the volume at which the terminal bell is rung.

     Note that if the script contains more than one word then the
     whole  script must be quoted to stop the shell treating them



X Version 11         Last change: Release 5                     5






XALARM(1)                USER COMMANDS                  XALARM(1)



     as separate arguments.

     Also see the examples section.

SSSSNNNNOOOOOOOOZZZZIIIINNNNGGGG AAAANNNNDDDD PPPPEEEESSSSTTTTEEEERRRRIIIINNNNGGGG
     You can snooze the alarm and make it pester you,  after  the
     alarm has triggered.

     Snoozing is done by selecting a time  to  snooze  using  the
     +_m_i_n_s  buttons  (they  can be pressed as often as necessary)
     and pressing the _s_n_o_o_z_e button.   The  snooze  time  may  be
     zeroed  by  clicking  on the _s_n_o_o_z_e_t_i_m_e button (it has these
     two functions; display and zero).  For the really lazy,  the
     initial  value  of  _s_n_o_o_z_e_t_i_m_e  can  be  set  either  by the
     relevant command line option or by its resource.

     Pestering is done either by the relevant command line option
     or  by its resource.  The alarm will then re-popup after the
     specified interval, a bit like _s_n_o_o_z_e on autopilot.

     Note that if you snooze the alarm, pestering is  temporarily
     disabled and you will have to rely on the snoozed alarm.

     Also see the examples section.

MMMMOOOORRRREEEE OOOONNNN XXXXAAAALLLLAAAARRRRMMMM
     Even after you have set the alarm and confirmed it, you  can
     reset  the  alarm  as  long  as  you know the _x_a_l_a_r_m process
     number.  This can be found by using the command line  option
     to list process numbers, or _p_s(_1).

     _x_a_l_a_r_m makes maximum use of resources, as well as  having  a
     number  of  command  line  options, and these can be used to
     control most of the appearance of _x_a_l_a_r_m  and  (just  about)
     all  of its behaviour.  Both command line options and useful
     resources are listed below.

     When _x_a_l_a_r_m is invoked it immediately attempts to fork off a
     child  and  exit  itself, leaving the child to continue with
     the alarm.  The child disappears when the _X session on which
     display _x_a_l_a_r_m is using is terminated.

     You can exit from _x_a_l_a_r_m at any time by pressing the  avail-
     able _q_u_i_t button.

XXXXMMMMEEEEMMMMOOOO,,,, XXXXFFFFOOOORRRRTTTTUUUUNNNNEEEE &&&& XXXXYYYYOOOOWWWW
     In reality, _x_m_e_m_o is just a front end to _x_a_l_a_r_m (implemented
     as  _x_a_l_a_r_m  -_t_i_m_e  _n_o_w -_d_a_t_e _t_o_d_a_y), while _x_f_o_r_t_u_n_e and _x_y_o_w
     are front ends to _x_m_e_m_o (implemented  as  _x_m_e_m_o  "`_f_o_r_t_u_n_e`"
     etc.).   Options  supplied to them on the command line still
     override these defaults, however.




X Version 11         Last change: Release 5                     6






XALARM(1)                USER COMMANDS                  XALARM(1)



     Note that _x_f_o_r_t_u_n_e and _x_y_o_w require  _f_o_r_t_u_n_e(_6)  and  _y_o_w(_6)
     respectively  -  _y_o_w(_6)  comes with _e_m_a_c_s(_1). Also note that
     since they are front ends to _x_m_e_m_o, you  can  actually  give
     extra  message  text to include on the command line.  If you
     specify a time in the future, you can edit the message  text
     when asked to confirm (if enabled).

OOOOPPPPTTTTIIIIOOOONNNNSSSS
     _x_a_l_a_r_m accepts all of the standard _X  Toolkit  command  line
     options along with the additional options listed below:

     ----hhhheeeellllpppp   Print a (possibly) helpful usage message.

     ----vvvveeeerrrrssssiiiioooonnnn
             Print out the version number of _x_a_l_a_r_m in  the  form
             _v_e_r_s_i_o_n._p_a_t_c_h_l_e_v_e_l.

     ----rrrreeeessssttttaaaarrrrtttt[[[[oooonnnnllllyyyy]]]]
             This option makes _x_a_l_a_r_m  attempt  only  to  restart
             those  alarms which had not finished when a previous
             _X session was terminated.

     ----kkkkiiiillllllll _p_i_d|_a_l_l
             This option sends a signal  to  the  process  number
             _p_i_d,  or  to  all  _x_a_l_a_r_m  processes, on the current
             host.  If the process is an _x_a_l_a_r_m, owned by you, it
             will  exit.   Note  these  are what _p_s(_1) thinks are
             _x_a_l_a_r_m processes, and only on the current host.

     ----dddd[[[[aaaa]]]]eeeemmmmoooonnnn +_d_a_y_s|_d_a_i_l_y|_w_e_e_k_l_y
             This option  starts  a  new  _x_a_l_a_r_m  daemon  on  the
             current  host connected to the current display.  See
             the above description for more on alarm files, dates
             and daemons.

     ----ffff[[[[iiiilllleeee]]]] +_d_a_y_s|_d_a_t_e|_t_o_d_a_y|_t_o_m_o_r_r_o_w|_w_e_e_k_l_y
             This option makes _x_a_l_a_r_m read alarms from the  alarm
             file(s).   See the above description for more on the
             alarm file and dates.

     ----ddddaaaatttteeee +_d_a_y_s|_d_a_t_e|_t_o_d_a_y|_t_o_m_o_r_r_o_w|_w_e_e_k
             This option indicates the date on which the alarm is
             to be triggered.  See the above description for more
             on dates.

     ----tttt[[[[iiiimmmmeeee]]]] +_t_i_m_e|_t_i_m_e|_n_o_w|_n_o_o_n
             This option indicates at what time the alarm  is  to
             be triggered.  See the above description for more on
             times.

     ----wwww[[[[aaaarrrrnnnn]]]] _t_i_m_e[,_t_i_m_e...]
             Indicate the time(s) before  the  alarm  is  due  to



X Version 11         Last change: Release 5                     7






XALARM(1)                USER COMMANDS                  XALARM(1)



             trigger  when  a warning should be given.  They need
             not be in any particular order, and should be in the
             same  format  as  relative  times,  but  without the
             preceding `+'.  Note that  multiple  times  must  be
             separated by commas but without spaces.

     ----cccc[[[[oooonnnnffffiiiirrrrmmmm]]]]
             This option overrides the resource value and  forces
             _x_a_l_a_r_m  to ask for confirmation, unless the alarm is
             due to trigger immediately.

     ----wwwwaaaarrrrnnnnwwwwoooorrrrddddssss [[[[----wwwwwwww]]]] _n_u_m_b_e_r__o_f__w_o_r_d_s
             Indicate the number of words from the alarm  message
             you wish to display with the warning.

     ----llll[[[[iiiisssstttt]]]] List the process numbers  of  any  _x_a_l_a_r_m  processes
             running  on  the current host.  Note that this lists
             what _p_s(_1) thinks are _x_a_l_a_r_m processes, and only  on
             the current host.

     ----rrrr[[[[eeeesssseeeetttt]]]] _p_i_d|_a_l_l
             This option sends a signal  to  the  process  number
             _p_i_d,  or  to  all  _x_a_l_a_r_m  processes, on the current
             host.  If the process is an _x_a_l_a_r_m, owned by you, it
             will  pop up the confirmation window to allow you to
             re-edit the alarm settings.  If the  process  is  an
             _x_a_l_a_r_m  daemon,  it will have no effect.  Note these
             are what _p_s(_1) thinks are _x_a_l_a_r_m processes, and only
             on the current host.

     ----pppp[[[[eeeesssstttteeeerrrr]]]] _t_i_m_e
             Indicate the time that  _x_a_l_a_r_m  should  wait  before
             re-triggering.   It  should be in the same format as
             relative times, but without the preceding `+'.

     ----ssss[[[[nnnnoooooooozzzzeeee]]]] _t_i_m_e
             Indicate the time that _s_n_o_o_z_e_t_i_m_e  should  initially
             have  when  the alarm triggers.  It should be in the
             same format  as  relative  times,  but  without  the
             preceding `+'.

     ----aaaallllaaaarrrrmmmmaaaauuuuddddiiiioooo [[[[----aaaaaaaa]]]] _b_e_l_l|_b_e_e_p|_q_u_i_e_t|_s_h_e_l_l _s_c_r_i_p_t
             The method by which _x_a_l_a_r_m should announce the  fact
             that  the alarm has been triggered.  See above for a
             description on the different options.

     ----wwwwaaaarrrrnnnniiiinnnnggggaaaauuuuddddiiiioooo [[[[----wwwwaaaa]]]] _b_e_l_l|_b_e_e_p|_q_u_i_e_t|_s_h_e_l_l _s_c_r_i_p_t
             As above, but  for  when  any  warning  windows  are
             popped up.

     ----qqqq[[[[uuuuiiiieeeetttt]]]]
             This is equivalent to specifying  -_a_l_a_r_m_a_u_d_i_o  _q_u_i_e_t



X Version 11         Last change: Release 5                     8






XALARM(1)                USER COMMANDS                  XALARM(1)



             -_w_a_r_n_i_n_g_a_u_d_i_o   _q_u_i_e_t,   or   setting  the  relevant
             resources to _q_u_i_e_t.

     ----vvvv[[[[oooolllluuuummmmeeee]]]] _p_e_r_c_e_n_t_a_g_e
             The percentage of full volume at which the  terminal
             bell  should  ring,  if  it is rung.  This currently
             applies to the terminal bell only.

     ----nnnnoooowwwwaaaarrrrnnnn [[[[----nnnnwwww]]]]
             This option overrides the resource value and  forces
             _x_a_l_a_r_m  not  to give any warnings.  This is the same
             as setting the warning times resource to  the  empty
             string.

     ----nnnnooooccccoooonnnnffffiiiirrrrmmmm [[[[----nnnncccc]]]]
             This option overrides the resource value and  forces
             _x_a_l_a_r_m not to ask for confirmation.

     ----nnnnoooowwwwaaaarrrrnnnnwwwwoooorrrrddddssss [[[[----nnnnwwwwwwww]]]]
             This option overrides the resource value and  forces
             _x_a_l_a_r_m not to display any of the alarm text with any
             warnings.  This is the same as setting the  warning-
             words resource to zero.

     ----nnnnooooppppeeeesssstttteeeerrrr [[[[----nnnnpppp]]]]
             This option overrides the resource value and  forces
             _x_a_l_a_r_m  not  to  re-trigger  the  alarm  once it has
             popped up.  This is the same as setting  the  pester
             resource to zero.

     ----nnnnooooaaaallllaaaarrrrmmmmaaaauuuuddddiiiioooo [[[[----nnnnaaaaaaaa]]]] ----nnnnoooowwwwaaaarrrrnnnniiiinnnnggggaaaauuuuddddiiiioooo [[[[----nnnnwwwwaaaa]]]]
             These options  make  the  relevant  resource  values
             _q_u_i_e_t,  and  are  equivalent  to  setting  the audio
             method to _q_u_i_e_t.

     _m_e_s_s_a_g_e__t_e_x_t
             The remaining unrecognised text is used as the  mes-
             sage  displayed  with  the  triggering of the alarm.
             Note that each separate argument is assumed to be  a
             single  line, so words must be quoted if they are to
             appear on the same line.  For example:

                    % xxxxaaaallllaaaarrrrmmmm """"OOOOnnnn oooonnnneeee lllliiiinnnneeee"""" SSSSeeeeccccoooonnnnddddlllliiiinnnneeee """"TTTThhhhiiiirrrrdddd lllliiiinnnneeee""""

             It  is a good idea always to use quotes, even when a
             line is only one word.   Newlines  within  arguments
             are  recognised,  so that input from other tools can
             be used:

                    % xxxxaaaallllaaaarrrrmmmm ----ttttiiiimmmmeeee nnnnoooowwww """"````ffffoooorrrrttttuuuunnnneeee ----llll````""""

             Also note  that  _x_a_l_a_r_m  deletes  its  copy  of  any



X Version 11         Last change: Release 5                     9






XALARM(1)                USER COMMANDS                  XALARM(1)



             arguments,  including any message, given on the com-
             mand line, so your boss can't see them by looking at
             the _x_a_l_a_r_m process.

EEEEXXXXAAAAMMMMPPPPLLLLEEEESSSS
     An entry in an _X initialisation file, invoked along with all
     the  other utilities, before the window manager is executed,
     making _x_a_l_a_r_m check the alarm file for today's appointments,
     asking  for  confirmation before each of the alarms are set,
     and using up to three words from the alarm  message  in  any
     warning message:

          xclock &
          xbiff &
          xalarm -file today -confirm -warnwords 3
          exec twm

     If you do not want to know about the alarms that remain from
     the  previous  _X  session,  you  could  first  restart  them
     silently.  Here they are restarted with warnings set  at  15
     and 30 minutes prior to each alarm's triggering.

     To check the  week's  appointments,  including  some  shared
     alarm  files,  warning  1 hour, and 30 and 15 minutes before
     each alarm (if you set the variable in your _X initialisation
     script,  rather  than  your  login  script,  you may need to
     export it):

          XALARMFILEPATH=\
               /usr/local/lib/seminars.xlm:/usr/local/lib/meetings.xlm
          export XALARMFILEPATH
          xalarm -restartonly -noconfirm -warn 15,30
          xalarm -file weekly -confirm -warn 1:00,30,15

     Or to start an _x_a_l_a_r_m daemon, which is  to  scan  the  alarm
     file  on  a daily basis.  Each alarm should not ask for con-
     firmation, but should give warnings 30 and 15 minutes before
     triggering, and pester every 5 minutes thereafter:

          xalarm -daemon daily -noconfirm -warn 15,30 -pester 5

     The alarm file might contain, for example, the lines:

          # This is just a comment.
          ! So is this.  Format is: _d_a_t_e [- [_t_i_m_e] [_m_e_s_s_a_g_e]]
          !                     or:       - [_t_i_m_e] [_m_e_s_s_a_g_e]

          Wednesday - 12:30pm Football !!!
          Sun 29 september - 9pm Drag yourself home.
          Oct 4 - Contrib sometime today...

     So that every Wednesday I have an alarm set for 12:30pm;  on



X Version 11         Last change: Release 5                    10






XALARM(1)                USER COMMANDS                  XALARM(1)



     Sunday  September 29 there is an alarm to be set for 9pm; on
     October 4 the alarm is to trigger straight away.

     A _t_w_m(_1) window manger entry which forces _x_a_l_a_r_m to ask  for
     confirmation,  and have the triggered alarm re-trigger every
     5 minutes:

          Menu "Utilities" {
               ...
               "alarm":  f.exec "xalarm -confirm -pester 5 &"
               ...
          }

     The following examples show how to set the  alarm  from  the
     command  line.  It is often more convenient to invoke _x_a_l_a_r_m
     without specifying the time and, where necessary,  the  date
     and/or message as arguments (using a window manager, say, as
     above), using the popup window to enter these options.

     If this was the method of entry, the option arguments  would
     be  entered in the relevant Dialog box instead, just as they
     appear below (except that there is no need to  quote  multi-
     word arguments).

     To only restart those _x_a_l_a_r_m processes that were set  before
     a  previous _X session was terminated, not including those in
     the alarm file:

          % xxxxaaaallllaaaarrrrmmmm ----rrrreeeessssttttaaaarrrrttttoooonnnnllllyyyy

     To set an alarm for tomorrow at noon, so as to avoid missing
     yet another meeting:

          % xxxxaaaallllaaaarrrrmmmm ----ddddaaaatttteeee ttttoooommmmoooorrrrrrrroooowwww ----ttttiiiimmmmeeee nnnnoooooooonnnn """"MMMMEEEEEEEETTTTIIIINNNNGGGG!!!!!!!!!!!!""""

     To set an alarm on Tuesday week (that is one  week  on  from
     the next Tuesday) at 3:30 in the afternoon:

          % xxxxaaaallllaaaarrrrmmmm ----ddddaaaatttteeee """"TTTTuuuueeeessss wwwweeeeeeeekkkk"""" ----ttttiiiimmmmeeee 3333----33330000ppppmmmm

     To set an alarm for March 10th (my very own personal  public
     holiday),  first  thing  in the morning, just in case I have
     forgotten:

          % xxxxaaaallllaaaarrrrmmmm ----ddddaaaatttteeee """"11110000 mmmmaaaarrrrcccchhhh"""" ----ttttiiiimmmmeeee 9999aaaammmm """"BBBBiiiirrrrtttthhhhddddaaaayyyy bbbbooooyyyy!!!!""""

     To set an alarm for 5 o'clock in the evening without confir-
     mation,  with the snooze time initially 10 minutes, but with
     the default alarm message:

          % xxxxaaaallllaaaarrrrmmmm ----ttttiiiimmmmeeee 5555ppppmmmm ----ssssnnnnoooooooozzzzeeee 11110000 ----nnnnooooccccoooonnnnffffiiiirrrrmmmm




X Version 11         Last change: Release 5                    11






XALARM(1)                USER COMMANDS                  XALARM(1)



     To set an alarm for 2 hours in advance, warning 1 minute and
     5 minutes before it, with a message other than the default:

          % xxxxaaaallllaaaarrrrmmmm ----ttttiiiimmmmeeee ++++2222....00000000 ----wwwwaaaarrrrnnnn 5555,,,,1111 """"GGGGeeeetttt ooooffffffff yyyyoooouuuurrrr bbbboooottttttttoooommmm""""

     To set a completely silent alarm for  4.30  (not  specifying
     am/pm,  so it is whichever is first), with the default warn-
     ings and a message other than the default:

          % xxxxaaaallllaaaarrrrmmmm ----qqqquuuuiiiieeeetttt ----ttttiiiimmmmeeee 4444::::33330000 """"TTTTiiiimmmmeeee ttttoooo ssssnnnneeeeaaaakkkk ooooffffffff hhhhoooommmmeeee!!!!""""

     To reset a running _x_a_l_a_r_m we  first  find  out  its  process
     number, and then we can reset it:

          % xxxxaaaallllaaaarrrrmmmm ----lllliiiisssstttt
          xalarms: 12345 12321
          % xxxxaaaallllaaaarrrrmmmm ----rrrreeeesssseeeetttt 11112222333344445555

     To put a 2 line message on the display _f_o_o immediately (this
     will only work if the display _f_o_o can be opened):

          % xxxxmmmmeeeemmmmoooo ----ddddiiiissssppppllllaaaayyyy ffffoooooooo::::0000....0000 """"BBBBoooobbbb!!!!"""" """"TTTThhhheeee bbbbaaaarrrr ffffoooorrrr lllluuuunnnncccchhhh????""""

     To display a  fortune  (a  random  adage  from  hell)  at  a
     specific geometry in 5 minutes:

          % xxxxffffoooorrrrttttuuuunnnneeee ----ggggeeeeoooommmmeeeettttrrrryyyy ++++11110000++++333300000000 ----ttttiiiimmmmeeee ++++5555

     To  display  a  Zippy  quote  (yow!!!),   characteristically
     harassing  you  every minute and making some noise each time
     it triggers by executing a shell script:

          % xxxxyyyyoooowwww ----ppppeeeesssstttteeeerrrr 1111 ----aaaallllaaaarrrrmmmmaaaauuuuddddiiiioooo """"ppppllllaaaayyyy ----vvvv33330000 yyyyoooowwww....aaaauuuu""""

     In this example, -_v_3_0 is the option to make  _p_l_a_y  play  the
     audio data in the file _y_o_w._a_u at maximum volume.

WWWWIIIIDDDDGGGGEEEETTTT HHHHIIIIEEEERRRRAAAARRRRCCCCHHHHYYYY
     _x_a_l_a_r_m uses the Athena Widget set, and the widget  hierarchy
     is as follows:

          XAlarm (applicationShell)
               Alarm! (transientShell)
                    alarm (form)
                         buttons (form)
                              quit (command)
                              snooze (command)
                              snooze1 (command)
                              snooze5 (command)
                              snooze15 (command)
                              snoozetime (command)
                         message (label)



X Version 11         Last change: Release 5                    12






XALARM(1)                USER COMMANDS                  XALARM(1)



               When? (transientShell)
                    when (form)
                         time (dialog)
                              label (label)
                              value (asciiText)
                              ok (command)
                              editdate (command)
                              editwarnings (command)
                              quit (command)
                         date (dialog)
                              label (label)
                              value (asciiText)
                              ok (command)
                              edittime (command)
                              editwarnings (command)
                              quit (command)
                         warnings (dialog)
                              label (label)
                              value (asciiText)
                              ok (command)
                              edittime (command)
                              editdate (command)
                              quit (command)
                         confirm (dialog)
                              label (label)
                              value (asciiText)
                              ok (command)
                              cancel (command)
                              save (command)
                              quit (command)
               Warning! (transientShell)
                    warning (form)
                         dismiss (command)
                         message (label)
                         reset (command)
                         quit (command)

EEEEXXXXAAAAMMMMPPPPLLLLEEEE RRRREEEESSSSOOOOUUUURRRRCCCCEEEESSSS
     Some  example  resources.   These  are   the   most   common
     resources,  and the ones most likely needed changed in order
     to alter the (default) behaviour of _x_a_l_a_r_m:

          ! For some nice colours...
          XAlarm*background:            LightYellow
          XAlarm*foreground:            IndianRed
          XAlarm*Command.background:         IndianRed
          XAlarm*Command.foreground:         LightYellow
          ! But this is what you normally get...
          XAlarm*background:            White
          XAlarm*foreground:            Black
          XAlarm*Command.background:         Black
          XAlarm*Command.foreground:         White



X Version 11         Last change: Release 5                    13






XALARM(1)                USER COMMANDS                  XALARM(1)



          ! Perhaps the most commonly used resources...
          XAlarm.confirm:                    True
          XAlarm.warnings:              5,15
          XAlarm.warningwords:               0
          XAlarm.pester:                0
          XAlarm.snooze:                0
          XAlarm.volume:                50
          XAlarm.alarmaudio:            bell
          XAlarm.warningaudio:               bell

          ! If the fonts are not to your taste, try "-new century schoolbook-"
          ! instead of "-times-".
          XAlarm*font: -*-times-bold-r-*-*-14-*-*-*-p-*-iso8859-1
          XAlarm.When?.when.confirm.value*font: -*-times-bold-i-*-*-14-*-*-*-p-*-iso8859-1
          XAlarm.Alarm!.alarm.message.font: -*-times-bold-i-*-*-34-*-*-*-p-*-iso8859-1

          ! If you want a more compact alarm window, try these...
          XAlarm.Alarm!.alarm.buttons.snooze1.fromVert:     quit
          ! This will vary depending on button labels & font...
          XAlarm.Alarm!.alarm.buttons.snooze1.horizDistance:     -93
          XAlarm.Alarm!.alarm.buttons.snooze5.fromVert:     quit
          XAlarm.Alarm!.alarm.buttons.snooze15.fromVert:    quit
          XAlarm.Alarm!.alarm.buttons.snoozetime.fromHoriz: snooze

          ! Plus, if you want...
          XAlarm.Alarm!.alarm.message.fromHoriz:       buttons
          ! This will vary depending on button labels & font...
          XAlarm.Alarm!.alarm.message.vertDistance:         -33

          ! Some other defaults...
          XAlarm.Alarm!.alarm.background:         Black
          XAlarm.Alarm!.alarm.message.label:      Alarm Call!!!
          XAlarm.Alarm!.alarm.buttons.quit.label: Quit
          XAlarm.Alarm!.alarm.buttons.snooze.label:    Snooze
          XAlarm.Alarm!.alarm.buttons.snooze1.label:   +1 min
          XAlarm.Alarm!.alarm.buttons.snooze5.label:   +5 mins
          XAlarm.Alarm!.alarm.buttons.snooze15.label:  +15 mins

TTTTOOOOOOOOLLLLKKKKIIIITTTT OOOOPPPPTTTTIIIIOOOONNNNSSSS
     The following standard _X Toolkit command line arguments  are
     commonly used with _x_a_l_a_r_m:

     ----ddddiiiissssppppllllaaaayyyy _d_i_s_p_l_a_y
             This option specifies the _X server to contact.

     ----ggggeeeeoooommmmeeeettttrrrryyyy _g_e_o_m_e_t_r_y
             This option specifies the preferred size  and  posi-
             tion  of  _x_a_l_a_r_m.  It  is  a  little  meaningless to
             specify a size; it is as large as need be.

     ----xxxxrrrrmmmm _r_e_s_o_u_r_c_e_s_t_r_i_n_g
             This option specifies a resource string to be  used.



X Version 11         Last change: Release 5                    14






XALARM(1)                USER COMMANDS                  XALARM(1)



             This is especially useful for setting resources that
             do not have separate command line options.

EEEENNNNVVVVIIIIRRRROOOONNNNMMMMEEEENNNNTTTT
     DDDDIIIISSSSPPPPLLLLAAAAYYYY to get the default host and display number.

     XXXXEEEENNNNVVVVIIIIRRRROOOONNNNMMMMEEEENNNNTTTT
             to get the name of a resource  file  that  overrides
             the  global resources stored in the RESOURCE_MANAGER
             property.

     XXXXAAAALLLLAAAARRRRMMMMFFFFIIIILLLLEEEEPPPPAAAATTTTHHHH
             a colon separated list of file names to be  used  in
             conjunction  with  ~/._x_a_l_a_r_m_s for _x_a_l_a_r_m to look for
             alarms to set.

     HHHHOOOOMMMMEEEE    The user's home directory.   This  may  be  used  by
             _x_a_l_a_r_m when looking for the user's alarm file.

FFFFIIIILLLLEEEESSSS
     ~~~~////....xxxxaaaallllaaaarrrrmmmmssss
             The name of the alarm file looked at by  _x_a_l_a_r_m  for
             alarms  to set and where alarms are saved.  See also
             the environment variable _X_A_L_A_R_M_F_I_L_E_P_A_T_H.

     ~~~~////....xxxxaaaallllaaaarrrrmmmmssss....ddddiiiieeeedddd
             The name of the alarm file where _x_a_l_a_r_m  stores  its
             alarm  which  had  not  finished  when the _X session
             under which it was running was terminated.

SSSSEEEEEEEE AAAALLLLSSSSOOOO
     X(1),  leave(1),  calendar(1),  date(1),  emacs(1),  twm(1),
     ps(1), sh(1), fortune(6), yow(6)

BBBBUUUUGGGGSSSS
     PPPPrrrreeeeaaaammmmbbbblllleeee::::
             Because of the way _x_a_l_a_r_m has evolved (it started as
             a  24-hour  period one-off alarm clock), its dealing
             with dates, alarm files and the interface  to  these
             is not ideal.  Nobody said evolution was perfect.

             If you want to  report  a  bug,  or  anything  else,
             please  first  give  as much information as you can.
             See _C_O_M_M_E_N_T_S at the end of the manual.

     GGGGeeeennnneeeerrrraaaallll::::
             Each alarm is a separate,  forked,  _x_a_l_a_r_m  process,
             each  with its own connection to the display.  There
             is no way to get _x_a_l_a_r_m to set more than  one  alarm
             or to display on several displays at once.

             Because _x_a_l_a_r_m is one of those clients you  tend  to



X Version 11         Last change: Release 5                    15






XALARM(1)                USER COMMANDS                  XALARM(1)



             start from a window manager or from an _X initialisa-
             tion script, you may not  see  error  messages  that
             these _x_a_l_a_r_m processes write to standard error.  You
             will only see them if this output also goes  to,  or
             is redirected to, your display.

             If your shell initialisation script does any output,
             _x_a_l_a_r_m  may  get  confused when trying to list other
             _x_a_l_a_r_m processes (and therefore also when killing or
             resetting all _x_a_l_a_r_m processes).

     DDDDaaaaeeeemmmmoooonnnnssss::::
             If you terminate the session which an _x_a_l_a_r_m  daemon
             is  running  under,  the  daemon does not exit until
             just before it re-tries to start new alarms from the
             alarm  file.   It  is  possible,  but unlikely, that
             someone else may have got  your  particular  display
             connection  (not  physical display) in the meantime.
             _x_a_l_a_r_m cannot know when this happens.

             It would be nice to be able to tell daemon and  nor-
             mal _x_a_l_a_r_m processes apart when listing them.

     SSSSaaaavvvviiiinnnngggg ttttoooo ffffiiiilllleeee::::
             The date saved in the alarm file is the  exact  date
             the  alarm  would trigger, not the date specified in
             the  date  input  popup  window.   Both   types   of
             behaviour  have  their  advantages,  but  only  this
             behaviour is implemented.

             The same happens with those alarms  that  are  saved
             when  the  _X session under which they are running is
             terminated.  This type of behaviour does  seem  more
             useful than the alternative.

             Currently does not satisfactorily save  alarms  with
             multi-line messages.

     RRRReeeessssttttaaaarrrrttttiiiinnnngggg::::
             Because uncompleted alarms are  saved  in  the  same
             format  as  the  alarm  file  format,  the  resource
             environment of restarted alarms  is  inherited  from
             the _x_a_l_a_r_m which restarted them.  This is not neces-
             sarily the same as the  original  resource  environ-
             ments of these alarms.

     TTTTiiiimmmmeeeessss &&&& DDDDaaaatttteeeessss::::
             _x_a_l_a_r_m is at the mercy of the system clock.

             The message informing at  what  time  _x_a_l_a_r_m  is  to
             trigger may appear to be wrong if the clocks go for-
             wards or backwards between the present and the  time



X Version 11         Last change: Release 5                    16






XALARM(1)                USER COMMANDS                  XALARM(1)



             it is due to trigger.

             If the time is relative to the present and confirma-
             tion  is sought, the alarm and warnings are set from
             when the time is confirmed, not from when _x_a_l_a_r_m was
             invoked.

             Date and symbol names are recognised  by  the  first
             three  characters  only, the rest are ignored.  This
             is why _w_e_e_k and _w_e_e_k_l_y are  equivalent,  and  _m_i_d_d_a_y
             and  _m_i_d_n_i_g_h_t are not implemented.  There is no real
             wild carding within dates.

             You can only set an alarm that will  trigger  within
             the  next  49  days  (on  the  assumption  that your
             machine has 32-bit unsigned longs).

     EEEEddddiiiittttiiiinnnngggg::::
             The  dialog  box  uses  a  subset  of  the  _e_m_a_c_s(_1)
             editor/environment keymap for text buffers (which is
             certainly not a bug!).

             However, the  _r_e_t_u_r_n  key  event  is  translated  by
             default  into  the  _c_o_n_f_i_r_m  button  event, as it is
             translated similarly in the alarm time  and  warning
             dialog  boxes.   To  insert  a  newline,  use _c_t_r_l-_m
             (since under _e_m_a_c_s(_1) the _r_e_t_u_r_n key  is  a  synonym
             for _c_t_r_l-_m, under _X they generate different events),
             or just change  the  relevant  resource(s)  so  that
             _r_e_t_u_r_n  produces the desired effect.  The resources,
             followed by the necessary value, are:

          XAlarm.When?.time.value.translations
                  XAlarm.When?.date.value.translations
                  XAlarm.When?.warnings.value.translations
                  XAlarm.When?.confirm.value.translations

                                 #override <Key>Return: newline()

     RRRReeeesssseeeettttttttiiiinnnngggg &&&& KKKKiiiilllllllliiiinnnngggg::::
             Signalling is implemented very simply,  and  if  the
             process  signalled  is not an _x_a_l_a_r_m, strange things
             may occur.  Usually, nothing will happen.

             However, killing does not use the _K_I_L_L  signal,  and
             is therefore relatively safe to use even though your
             _p_s(_1) can never be 100% reliable.

             Still, this can mean that when you reset or kill all
             _x_a_l_a_r_m processes, not all will have been signalled.

     IIIInnnnppppuuuutttt::::  Doesn't take input from a pipe etc.



X Version 11         Last change: Release 5                    17






XALARM(1)                USER COMMANDS                  XALARM(1)



     AAAAuuuuddddiiiioooo::::  Doesn't parse the alarm or warning message  to  pro-
             duce voice output(!)

CCCCOOOOPPPPYYYYRRRRIIIIGGGGHHHHTTTT
     Copyright 1991, 1992, Simon Marshall.

AAAAUUUUTTTTHHHHOOOORRRR
     Simon Marshall, Ph.D. Self Defense Group, Dept. of  Computer
     Science, University Of Hull, UK.  S.Marshall@Hull.ac.UK

CCCCOOOONNNNTTTTRRRRIIIIBBBBEEEERRRRSSSS
     A lot of people have put in effort for _x_a_l_a_r_m since  it  was
     first  released  in the summer of 1991; testing, suggesting,
     commenting, cajoling and even fixing, in all the areas  that
     software  development  entails.  Not all will have been men-
     tioned below, but thanks for your input.

     Big thanks yet again have to go  to  Gisle  Hannemyr,  Norsk
     Regnsesentral  (NCC), J Braham Levy, UDSP Lab, University of
     Keele and Ex-Tek  Associates  (UK),  and  Stefan  Haenssgen,
     Informatik  Rechnerabteilung,  University  of Karlsruhe, for
     their help with ideas, comments and code, in the  making  of
     _x_a_l_a_r_m version 3.03.  Thanks also to Paul Moore for his help
     in porting _x_a_l_a_r_m for version 3.04.

     For getting version 3 from version 2  in  the  first  place,
     thanks  have  to go to Bill Leonard, Harris Computer Systems
     Division, Florida, for harassing  me  with  suggestions  for
     improvements to make _x_a_l_a_r_m version 3 a useful tool and this
     manual page  easier  to  understand,  and  Andreas  Stolcke,
     International  Computer Science Institute, Berkeley, for his
     help fixing code.   Without  both,  xalarm  would  still  be
     pretty much as version 2.

     Thanks also to J Braham Levy, Stefan Haenssgen, Jamie Zawin-
     ski,  Jason  Venner  and  Kimmo Suominen for their help with
     version 3.

     For their help and suggestions with _x_a_l_a_r_m "over the years",
     I would also like to thank (in no real order) Steve Aronson,
     Dave Brooks, Reiner Hammer, Jay Lawlor, Janet Anstett,  Gor-
     don  Freedman,  Francois-Regis  Colin  and Jeffrey Mast.  If
     I've missed anyone, sorry.


CCCCOOOOMMMMMMMMEEEENNNNTTTTSSSS
     I'd welcome any; comments, suggestions,  code,  bug  reports
     and  fixes,  etc.   Don't forget to include which version of
     _x_a_l_a_r_m you are using (from _x_a_l_a_r_m -_v_e_r_s_i_o_n),  machine/OS,  _X
     release & patch number, window manager etc.





X Version 11         Last change: Release 5                    18



