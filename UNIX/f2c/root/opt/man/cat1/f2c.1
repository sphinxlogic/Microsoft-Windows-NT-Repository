


F2C(1)                   USER COMMANDS                     F2C(1)



NNNNAAAAMMMMEEEE
     f2c - Convert Fortran 77 to C or C++

SSSSYYYYNNNNOOOOPPPPSSSSIIIISSSS
     ffff2222cccc [ _o_p_t_i_o_n ... ] _f_i_l_e ...

DDDDEEEESSSSCCCCRRRRIIIIPPPPTTTTIIIIOOOONNNN
     _F_2_c converts Fortran 77 source code in _f_i_l_e_s with names end-
     ing  in  `.f'  or  `.F'  to  C  (or C++) source files in the
     current directory, with `.c' substituted for the final  `.f'
     or  `.F'.   If no Fortran files are named, _f_2_c reads Fortran
     from standard input and writes C on standard  output.   _F_i_l_e
     names  that  end with `.p' or `.P' are taken to be prototype
     files, as produced by option `-P', and are read first.

     The following options have the same meaning as in _f_7_7(1).

     ----CCCC   Compile  code  to  check  that  subscripts  are  within
          declared array bounds.

     ----IIII2222  Render INTEGER and LOGICAL as short, INTEGER*4 as  long
          int.  Assume the default _l_i_b_F_7_7 and _l_i_b_I_7_7:  allow only
          INTEGER*4  (and  no  LOGICAL)  variables  in  INQUIREs.
          Option  `-I4' confirms the default rendering of INTEGER
          as long int.

     ----oooonnnneeeettttrrrriiiipppp
          Compile DO loops that are performed at  least  once  if
          reached.  (Fortran 77 DO loops are not performed at all
          if the upper limit is smaller than the lower limit.)

     ----UUUU   Honor the case of variable and external names.  Fortran
          keywords must be in _l_o_w_e_r case.

     ----uuuu   Make the default type of a variable `undefined'  rather
          than using the default Fortran rules.

     ----wwww   Suppress  all  warning  messages.   If  the  option  is
          `-w66',  only  Fortran  66  compatibility  warnings are
          suppressed.

     The following options are peculiar to _f_2_c.

     ----AAAA   Produce ANSI C.  Default is old-style C.

     ----aaaa   Make  local  variables  automatic  rather  than  static
          unless they appear in a DATA, EQUIVALENCE, NAMELIST, or
          SAVE statement.

     ----CCCC++++++++ Output C++ code.

     ----cccc   Include original Fortran source as comments.



AT&T Bell Laboratories    Last change:                          1






F2C(1)                   USER COMMANDS                     F2C(1)



     ----EEEE   Declare uninitialized COMMON to be EEEExxxxtttteeeerrrrnnnn  (overridably
          defined in f2c.h as eeeexxxxtttteeeerrrrnnnn))))....

     ----eeeecccc  Place uninitialized COMMON blocks  in  separate  files:
          CCCCOOOOMMMMMMMMOOOONNNN  ////AAAABBBBCCCC//// appears in file aaaabbbbcccc____ccccoooommmm....cccc.  Option `-e1c'
          bundles the separate files into the output  file,  with
          comments that give an unbundling _s_e_d(1) script.

     ----eeeexxxxtttt Complain about _f_7_7(1) extensions.

     ----gggg   Include original Fortran line numbers as comments.

     ----iiii2222  Similar to ----IIII2222, but assume a modified _l_i_b_F_7_7 and _l_i_b_I_7_7
          (compiled  with ----DDDDffff2222cccc____iiii2222), so INTEGER and LOGICAL vari-
          ables may be assigned by INQUIRE.

     ----PPPP   Write a _f_i_l_e....PPPP of ANSI (or  C++)  prototypes  for  pro-
          cedures  defined  in each input _f_i_l_e....ffff or _f_i_l_e....FFFF.  When
          reading Fortran from standard input,  write  prototypes
          at the beginning of standard output.  Implies ----AAAA unless
          option `-C++' is present.  Option ----PPPPssss implies ----PPPP ,,,,  and
          gives  exit status 4 if rerunning _f_2_c may change proto-
          types or declarations.

     ----pppp   Supply preprocessor definitions  to  make  common-block
          members look like local variables.

     ----RRRR   Do not promote REAL functions and operations to  DOUBLE
          PRECISION.  Option  `-!R'  confirms  the default, which
          imitates _f_7_7.

     ----rrrr8888  Promote REAL to DOUBLE  PRECISION,  COMPLEX  to  DOUBLE
          COMPLEX.

     ----TTTT_d_i_r
          Put temporary files in directory _d_i_r.

     ----wwww8888  Suppress warnings when  COMMON  or  EQUIVALENCE  forces
          odd-word alignment of doubles.

     ----WWWW_n  Assume _n characters/word (default 4) when  initializing
          numeric variables with character data.

     ----zzzz   Do not implicitly recognize DOUBLE COMPLEX.

     ----!!!!cccc  Inhibit C output, but produce ----PPPP output.

     ----!!!!IIII  Reject iiiinnnncccclllluuuuddddeeee statements.

     ----!!!!iiiitttt Don't infer types of untyped EXTERNAL  procedures  from
          use  as  parameters to previously defined or prototyped
          procedures.



AT&T Bell Laboratories    Last change:                          2






F2C(1)                   USER COMMANDS                     F2C(1)



     ----!!!!PPPP  Do not attempt to infer ANSI  or  C++  prototypes  from
          usage.

     The resulting C invokes the support routines of _f_7_7;  object
     code  should be loaded by _f_7_7 or with _l_d(1) or _c_c(1) options
     ----llllFFFF77777777 ----llllIIII77777777 ----llllmmmm.  Calling conventions are those of _f_7_7:  see
     the reference below.

FFFFIIIILLLLEEEESSSS
     _f_i_l_e....[[[[ffffFFFF]]]]
          input file

     ****....cccc  output file

     /usr/include/f2c.h
          header file

     /usr/lib/libF77.a
          intrinsic function library

     /usr/lib/libI77.a
          Fortran I/O library

     /lib/libc.a
          C library, see section 3

SSSSEEEEEEEE AAAALLLLSSSSOOOO
     S. I. Feldman and P. J. Weinberger, `A Portable  Fortran  77
     Compiler',  _U_N_I_X  _T_i_m_e  _S_h_a_r_i_n_g  _S_y_s_t_e_m _P_r_o_g_r_a_m_m_e_r'_s _M_a_n_u_a_l,
     Tenth Edition, Volume 2, AT&T Bell Laboratories, 1990.

DDDDIIIIAAAAGGGGNNNNOOOOSSSSTTTTIIIICCCCSSSS
     The diagnostics produced by _f_2_c are  intended  to  be  self-
     explanatory.

BBBBUUUUGGGGSSSS
     Floating-point constant expressions are  simplified  in  the
     floating-point  arithmetic  of  the  machine running _f_2_c, so
     they are typically accurate to at  most  16  or  17  decimal
     places.
     Untypable EXTERNAL functions are declared iiiinnnntttt.














AT&T Bell Laboratories    Last change:                          3



