


XSPRINGIES(1)            USER COMMANDS              XSPRINGIES(1)



NNNNAAAAMMMMEEEE
     xspringies - a mass and spring simulation system for X  win-
     dows

SSSSYYYYNNNNTTTTAAAAXXXX
     xxxxsssspppprrrriiiinnnnggggiiiieeeessss [ _o_p_t_i_o_n_s ]

DDDDEEEESSSSCCCCRRRRIIIIPPPPTTTTIIIIOOOONNNN
     xxxxsssspppprrrriiiinnnnggggiiiieeeessss is a simulator which allows you to  interactively
     create and edit a system of masses and springs.  The parame-
     ters of the masses and springs (such as mass elasticity  and
     spring  K)  as well as those of the surrounding system (such
     as air viscosity and gravity) can be changed.
     These systems can be loaded and saved into a file.

     I guess you could use xxxxsssspppprrrriiiinnnnggggiiiieeeessss for  real  work,  but  it's
     really intended to be a time waster.

OOOOPPPPTTTTIIIIOOOONNNNSSSS
     -bg _c_o_l_o_r
          Specifies the color  of  the  window  background.   The
          default is black.

     -d _d_i_s_p_n_a_m_e
          Specifies  the  display  screen  on  which   xxxxsssspppprrrriiiinnnnggggiiiieeeessss
          displays  its  window.   If  the  display option is not
          specified, xxxxsssspppprrrriiiinnnnggggiiiieeeessss uses the display screen specified
          by your DISPLAY environment variable.

     -display _d_i_s_p_n_a_m_e
          This option is the same as the ----dddd option.

     -fg _c_o_l_o_r
          Specifies the foreground  color  of  the  window.   The
          default is white.

     -geometry _g_e_o_m
          Specifies  the  width,  height,  and  location  of  the
          xxxxsssspppprrrriiiinnnnggggiiiieeeessss  window.   If  the  geometry  option  is not
          specified,  xxxxsssspppprrrriiiinnnnggggiiiieeeessss  uses   default   values.    The
          geometry option has the format
               [=][_w_i_d_t_hx_h_e_i_g_h_t][+/-_x_o_f_f_s_e_t+/-_y_o_f_f_s_e_t].

     -nbb This option turns off  the  bounding-box  optimization.
          To  produce  smooth  animation,  xxxxsssspppprrrriiiinnnnggggiiiieeeessss redraws the
          smallest screen region which contains all objects.  For
          smaller  objects,  the  performance improvement is very
          noticible -- this is the bounding-box optimization.  By
          disabling  it  with this option, xxxxsssspppprrrriiiinnnnggggiiiieeeessss redraws the
          entire display window.  On slower  machines  or  larger
          window  sizes, this can produce slow results.  The main
          reason for using this option  is  if  the  bounding-box



AT&T Bell LaboratoriesLast change: September 1, 1992                1






XSPRINGIES(1)            USER COMMANDS              XSPRINGIES(1)



          changes size rapidly, causing uneven animation.

     -hl _c_o_l_o_r
          Specifies  the  color  of  the  button  and   selection
          highlights  in  the window.  This defaults to the fore-
          ground color, or to green on color displays.

     -rv  Specifies that the foreground and background colors  be
          reversed.

     -st _t_h_i_c_k_n_e_s_s
          Specifies the thickness of the springs in pixels (0  is
          the default value)

SSSSUUUUMMMMMMMMAAAARRRRYYYY OOOOFFFF OOOOPPPPEEEERRRRAAAATTTTIIIIOOOONNNN
       The left side of the xxxxsssspppprrrriiiinnnnggggiiiieeeessss window contains  the  con-
     trols,  and the right side contains the display.  Masses can
     be created and placed with the mouse when in MMMMaaaassssssss mode,  and
     springs  can  be  created  when  in  SSSSpppprrrriiiinnnngggg mode.  Temporary
     springs that connect the mouse and any mass can be  used  to
     pull on objects.  Masses and springs can be selected in edit
     mode, and  moved  around.   Parameters  of  the  masses  and
     springs  (such  as Mass or Elasticity) can be set upon crea-
     tion or if they are selected.

       Forces (such as gravity) can be enabled  by  pressing  the
     appropriate   force  button  with  customizable  parameters.
     Environment parameters such as viscosity of the  medium  and
     stickiness  of  the walls can also be set.  Each of the four
     walls can be disabled.

       The animation/simulation is activated by pressing the  GGGGOOOO!!!!
     button.

       The entire system (masses, springs and parameters) can  be
     loaded  and  saved  to  files.   XXXXsssspppprrrriiiinnnnggggiiiieeeessss  comes with many
     demonstration files.


CCCCOOOONNNNTTTTRRRROOOOLLLLSSSS
       There are three types of controls (widgets) in xxxxsssspppprrrriiiinnnnggggiiiieeeessss.
     There  are  push  buttons, checkboxes and sliders.  The push
     buttons and checkboxes act in the obvious  manner.   If  you
     click on them, they get activated.

       Sliders are a little more compilicated.  They consist of a
     left  arrow  button,  a  right arrow button, and a text box.
     The text box displays the current value.  Clicking  on  this
     text  box  causes  it to become highlighted.  All text input
     then goes to the text box.  After entering a  value,  return
     accepts it, and escape cancels.
       The value displayed can also be changed  by  pressing  the



AT&T Bell LaboratoriesLast change: September 1, 1992                2






XSPRINGIES(1)            USER COMMANDS              XSPRINGIES(1)



     arrow buttons.  Using the _L_e_f_t _m_o_u_s_e _b_u_t_t_o_n causes the value
     to be incremented or decremented by one  step.   The  _M_i_d_d_l_e
     _m_o_u_s_e _b_u_t_t_o_n is the same as the left mouse button, but hold-
     ing it down causes it to scan by one step at  a  time.   The
     _R_i_g_h_t _m_o_u_s_e _b_u_t_t_o_n scans like the _M_i_d_d_l_e _m_o_u_s_e _b_u_t_t_o_n except
     that it scans 10 steps at a time.


EEEEDDDDIIIITTTTIIIINNNNGGGG MMMMOOOODDDDEEEESSSS
       There are three main modes in xxxxsssspppprrrriiiinnnnggggiiiieeeessss.  These are _E_d_i_t,
     _M_a_s_s  and  _S_p_r_i_n_g.  In  _E_d_i_t  mode, you can select, move and
     throw objects.  In _M_a_s_s mode, you  can  create  masses.   In
     _S_p_r_i_n_g  mode,  you  can  create springs and tug on an object
     with a spring connected to the mouse.

     More specifically,

     _E_d_i_t mmmmooooddddeeee::::
          ---- _L_e_f_t _m_o_u_s_e _b_u_t_t_o_n selects objects.
            If you  click  on  or  near  an  object,  it  becomes
          selected,  and  all other objects become unselected. If
          you hold down shift while clicking, the object  becomes
          selected  (or  unselected  if it was already selected),
          and all other objects remain the same.
            If you do not click  near  an  object,  dragging  the
          mouse  causes  a  selection  box  to  appear.  Anything
          within the selection box when  the  mouse  is  released
          becomes  selected.  All other masses become unselected,
          unless the shift key was  held  down  for  the  initial
          click.

          ---- _M_i_d_d_l_e _m_o_u_s_e _b_u_t_t_o_n moves objects.
            All selected objects move with the mouse.  The masses
          are  frozen in their positions after the initial click.
          They continue to move relative to  the  mouse  movement
          until the middle button is released.

          ---- _R_i_g_h_t _m_o_u_s_e _b_u_t_t_o_n throws objects.
            This acts the same way as  moving  objects  with  the
          middle button, except for the fact that the mouse velo-
          city is transferred to all selected  objects  when  the
          right mouse button is released.
            Note: a good way to stop an object from moving is  to
          simply select it and click the right mouse button.

     _M_a_s_s mmmmooooddddeeee::::
            When you click with the mouse, a mass  appears.   The
          mass  takes  on  the  values of the _M_a_s_s and _E_l_a_s_t_i_c_i_t_y
          sliders.  The mass is placed when the mouse  button  is
          released.

     _S_p_r_i_n_g mmmmooooddddeeee::::



AT&T Bell LaboratoriesLast change: September 1, 1992                3






XSPRINGIES(1)            USER COMMANDS              XSPRINGIES(1)



            When you click with the mouse, if  there  is  a  mass
          nearby,  one  end  of a spring is connected to it.  The
          other end of the spring  is  connected  to  the  cursor
          until  the  mouse  button  is  released.  If no mass is
          nearby when the spring is released, the spring is  dis-
          carded.   The  new  spring  takes  on the values of the
          _K_s_p_r_i_n_g and _K_d_a_m_p sliders.   The  rest  length  of  the
          spring is equal to the length of the spring when it was
          created.

          ---- _L_e_f_t _m_o_u_s_e _b_u_t_t_o_n adds a spring  between  two  masses
          while actively affecting the first mass.

          ---- _M_i_d_d_l_e _m_o_u_s_e _b_u_t_t_o_n adds a spring between  the  first
          mass and the cursor, actively affecting the first mass.
          The spring  is  discarded  when  the  mouse  button  is
          released.

          ---- _R_i_g_h_t _m_o_u_s_e _b_u_t_t_o_n adds a spring between two  masses.
          The  first mass is not affected by the spring until the
          spring is in place after the mouse is released.


OOOOPPPPEEEERRRRAAAATTTTIIIIOOOONNNN
     Masses and Springs
            Accelerations on the masses are calculated  according
          to  gravity (and other special forces), viscous forces,
          and by forces from the springs.  When a  mass  collides
          with  a wall, its velocity in the direction of the wall
          is reversed.  The resulting velocity  is  multipled  by
          the  _E_l_a_s_t_i_c_i_t_y  of the mass.  So, an elasticity of 0.0
          causes an inelastic collision (it stops on  the  wall),
          and  an  elasticity of 1.0 results in an elastic colli-
          sion.
            If a mass is fixed, all forces on it are ignored.  It
          simply  does not move.  Think of it as a nail (a really
          good one).
            The _M_a_s_s and _E_l_a_s_t_i_c_i_t_y of a mass can be  changed  by
          selecting  the  mass  and  changing  the  values on the
          corresponding  sliders.   To  make  a  mass  fixed   or
          unfixed, check or uncheck the _F_i_x_e_d _M_a_s_s checkbox while
          the mass is selected.

            A spring has three  parameters  associated  with  it.
          _K_s_p_r_i_n_g,  _K_d_a_m_p  and  rest length.  The spring force is
          calculated as follows (according to Hooke's law):
                FFFF = - _K_s_p_r_i_n_g * (length - rest length) - _K_d_a_m_p  *
                    (velocity in spring direction)

            To change the _K_s_p_r_i_n_g or _K_d_a_m_p of  a  spring,  change
          the  values of the sliders when the spring is selected.
          Pressing the _S_e_t _R_e_s_t _L_e_n_g_t_h button  changes  the  rest



AT&T Bell LaboratoriesLast change: September 1, 1992                4






XSPRINGIES(1)            USER COMMANDS              XSPRINGIES(1)



          length of a selected spring to its current length.


     Forces and sticky stuff
            There are four special forces.  They can be turned on
          and  off  by  clicking  their  appropriate  box.   When
          highlighted, the force is on.  Each of these forces has
          two  parameters associated with it (for example, _M_a_g_n_i_-
          _t_u_d_e and _D_i_r_e_c_t_i_o_n for  gravity).   Only  one  forces's
          parameters  are  displayed  at  a time (below the force
          buttons).  Which particular force is shown by a  darker
          box  around  that  force.   This  force selector box is
          moved to another force whenever a force is turned on.

            Some of the  forces  are  applied  relative  to  some
          specified  origin,  or  center point.  By default, this
          center point is the center of the screen.   It  can  be
          changed  to  be  any one particular mass by selecting a
          single mass, and pushing the _S_e_t _C_e_n_t_e_r button.  If  no
          masses  are  selected, the current center is changed to
          be the center of the screen.
            Center points are marked by a box around  the  center
          mass.

            There are four forces that can be enabled.  The first
          one,   _G_r_a_v_i_t_y,   acts  in  the  familiar  manner.   It
          accelerates masses by the value specified by _G_r_a_v_i_t_y in
          a  direction  specified  by _D_i_r_e_c_t_i_o_n. The _D_i_r_e_c_t_i_o_n is
          measured in  degrees,  with  0.0  degrees  being  down,
          increasing counter-clockwise.
            The second force is a bit strange,  and  isn't  real.
          Its  a  force  which attracts the center of mass of all
          the objects toward the center point.  It has  a  _M_a_g_n_i_-
          _t_u_d_e and a _D_a_m_p_i_n_g coefficient.
            The third force is a force which attracts all  masses
          toward  the  center  point.  This force has a _M_a_g_n_i_t_u_d_e
          and an _E_x_p_o_n_e_n_t associated with it.   The  _E_x_p_o_n_e_n_t  is
          simply  how  the  force relation works.  A value of 2.0
          means inverse-square force (the force is inversely pro-
          portional  to the distance squared).  A value of 0.0 is
          a constant force independent of position.  If the  _M_a_g_-
          _n_i_t_u_d_e  of  this force is negative, it becomes a repul-
          sion force.
            The fourth force is a wall repulsion  force.   Masses
          are  repelled  by  a  force  from each wall that is on.
          This force has a _M_a_g_n_i_t_u_d_e and _E_x_p_o_n_e_n_t associated with
          it.   The  _E_x_p_o_n_e_n_t  behaves  similarly  to that of the
          third force.

            For the most part, most everything obeys _f = _m_a.  The
          only  exceptions  are wall bounces and wall stickiness.
          Another unphysical aspect  is  found  in  some  of  the



AT&T Bell LaboratoriesLast change: September 1, 1992                5






XSPRINGIES(1)            USER COMMANDS              XSPRINGIES(1)



          special  forces  (the  second  and  third  ones).  If a
          center point exists, that mass  does  not  receive  any
          force  response  from  other  masses due to the special
          force.  In other words, these two  special  forces  are
          not  _e_q_u_a_l  _a_n_d  _o_p_p_o_s_i_t_e  forces.  They're pretty much
          just unreal.

            _V_i_s_c_o_s_i_t_y is a viscous drag  force  which  applies  a
          resistive  force  on  the  masses proportional to their
          velocity.
            _S_t_i_c_k_i_n_e_s_s is not a real force.  When a mass  hits  a
          wall,  it  loses  part of its velocity component in the
          direction of the wall (in an amount proportional to the
          _S_t_i_c_k_i_n_e_s_s).  If  it  loses  all  of this component, it
          remains stuck to the wall.  It will remain stuck to the
          wall  until  a  force  (which exceeds an amount propor-
          tional to the _S_t_i_c_k_i_n_e_s_s) pulls it off the wall.


     Numerics
            The internals of xxxxsssspppprrrriiiinnnnggggiiiieeeessss consist of a fourth order
          Runge-Kutta (RK4) differental equation solver.  Consult
          a Numerical Methods text  for  more  information.   The
          _T_i_m_e  _S_t_e_p  that is used by this solver (the ddddtttt) can be
          set using the slider.
            The solver can be selectively made into  an  adaptive
          RK4  solver  using the _A_d_a_p_t_i_v_e _T_i_m_e _S_t_e_p checkbox.  An
          adaptive  solver  chooses  the  best  time  step  value
          according  to  an  error calculation.  The error is not
          allowed to exceed the _P_r_e_c_i_s_i_o_n value.  Lower precision
          values  result  in  smaller  time steps.  While this is
          more accurate, the simulation runs slower.
            You will notice that some objects will tend to  "blow
          up"  easily.  This is because the objects are unstable,
          or are sensitive to small numerical errors.  An  object
          will  tend  to  "blow up" less with smaller time steps.
          By using an adaptive solver, the simulation can be made
          more  accurate  only when necessary.  This results in a
          more stable system which runs at a reasonable speed.


     Walls
            There are four walls.  In case you haven't guessed by
          now,  they  are  the _t_o_p, _l_e_f_t, _r_i_g_h_t and _b_o_t_t_o_m walls.
          They are located at the window  boundaries;  they  move
          with  window  resizes.  Individual walls can be enabled
          and disabled by checking the corresponding checkboxes.

            Walls are only one-way.  An object  moving  from  the
          screen  toward a wall will bounce off the wall.  But an
          object moving from off screen toward  the  screen  will
          pass through the walls.



AT&T Bell LaboratoriesLast change: September 1, 1992                6






XSPRINGIES(1)            USER COMMANDS              XSPRINGIES(1)



     Saving and Restoring State
            The state of the  world  (at  least  for  xxxxsssspppprrrriiiinnnnggggiiiieeeessss)
          includes  all of the masses and springs, as well as the
          system parameters.  By pushing the _S_a_v_e  _S_t_a_t_e  button,
          the  current  system  state  is saved.   By pushing the
          _R_e_s_t_o_r_e _S_t_a_t_e _b_u_t_t_o_n the previously saved system  state
          is  restored (if no previous save was made, the initial
          state is used).

            This is useful for temporarily saving a system confi-
          guration that you do not feel like setting up again (or
          saving to a file), that you might disturb with  experi-
          mentation.   If you break it, you can _R_e_s_t_o_r_e _S_t_a_t_e any
          number of times you like.
            The _R_e_s_e_t button resets  xxxxsssspppprrrriiiinnnnggggiiiieeeessss  to  its  initial
          configuration.  All the masses and springs are removed,
          and the default system parameters are used.


     Saving and Loading Files
            The system state can be  saved  to  and  loaded  from
          files.   By  pushing the _L_o_a_d _F_i_l_e button, a previously
          saved file can be loaded.  This will load  up  all  the
          masses and springs that were saved, as well as the sys-
          tem parameters.  Any previous state before the load  is
          cleared.   Pushing  the  _S_a_v_e  _F_i_l_e  button  saves this
          information in the designated file.   The  _I_n_s_e_r_t  _F_i_l_e
          button  is  much like the _L_o_a_d _F_i_l_e button, except that
          the current state is not cleared.   Instead,  only  the
          masses  and  springs  are loaded (the system paramaters
          are not changed), and are added to the current  collec-
          tion.   If no objects are selected when the _I_n_s_e_r_t _F_i_l_e
          button is pressed, then all the objects in the file are
          selected after they are loaded.

            The filenames are entered in the text  window,  which
          is  located  at  the  bottom right of the window.   For
          consistency,  the  filenames  should   terminate   with
          "....xxxxsssspppp".  When a file is loaded or saved, this extension
          is automatically added if not added by the user.  Stan-
          dard emacs-like editing features are present.  The fol-
          lowing key controls can be used:
               ccccoooonnnnttttrrrroooollll----BBBB  move cursor backward
               ccccoooonnnnttttrrrroooollll----FFFF  move cursor forward
               ccccoooonnnnttttrrrroooollll----AAAA  goto beginning of line
               ccccoooonnnnttttrrrroooollll----EEEE  goto end of line
               ccccoooonnnnttttrrrroooollll----KKKK  kill to end of line
               ccccoooonnnnttttrrrroooollll----YYYY  yank from kill buffer
               ccccoooonnnnttttrrrroooollll----DDDD  delete character under cursor
               ccccoooonnnnttttrrrroooollll----UUUU  erase all input
               ccccoooonnnnttttrrrroooollll----TTTT  transpose character under  cursor  with
                    previous character



AT&T Bell LaboratoriesLast change: September 1, 1992                7






XSPRINGIES(1)            USER COMMANDS              XSPRINGIES(1)



               EEEEssssccccaaaappppeeee     exit from filename edit mode

            By default, the directory which contains the  xxxxsssspppprrrriiiinnnn----
          ggggiiiieeeessss  files  is present automatically.  If the environ-
          ment variable SSSSPPPPRRRRIIIINNNNGGGGDDDDIIIIRRRR is set, then the default direc-
          tory is changed to reflect it.
            If a file error occurs (for example,  the  file  does
          not exist), a beep is emitted.


     Other stuff
            The _G_O! button simply turns on and off the animation.
          With  _G_O!  turned  off,  xxxxsssspppprrrriiiinnnnggggiiiieeeessss  uses up little CPU
          time.

            The _S_h_o_w _S_p_r_i_n_g_s checkbox controls whether or not the
          springs are drawn.  If there are a lot of springs, ani-
          mation may go faster with this option on.  Sometimes an
          object will even look better with only the masses.

            When placing masses or springs, objects can be placed
          in  a  gridlike  fashion  if  the _G_r_i_d _S_n_a_p checkbox is
          enabled.  Masses will be separated (vertically and hor-
          izontally)  by  the  amount  specified by the _G_r_i_d _S_n_a_p
          slider.

            When the _D_u_p_l_i_c_a_t_e button  is  pushed,  all  selected
          masses and springs are duplicated.  The copy is left in
          the same place, unselected.

            By pushing the _S_e_l_e_c_t  _A_l_l  button,  all  masses  and
          springs are selected.

            By pushing the _D_e_l_e_t_e button, or pressing the  _D_e_l_e_t_e
          key,  all selected objects are deleted.  Note that if a
          mass is deleted, all attached springs are also  deleted
          (even if they were not selected).

            The _Q_u_i_t button quits the program.  This same  effect
          is found by pressing the _Q key.


FFFFIIIILLLLEEEE FFFFOOOORRRRMMMMAAAATTTT
       The xxxxsssspppprrrriiiinnnnggggiiiieeeessss file format is human readable.   Each  line
     consists  of  a  four letter command string, followed by the
     parameters for that command.  The file must start  with  the
     command  "####1111....0000".   (This  1.0  refers to file format version
     1.0, and not the version of xspringies being  run)  Each  of
     the  commands  below  is  on a line by itself.  There are no
     blank lines allowed.  The file must end in a newline.

     The file consists of the following commands:



AT&T Bell LaboratoriesLast change: September 1, 1992                8






XSPRINGIES(1)            USER COMMANDS              XSPRINGIES(1)



          ccccmmmmaaaassss <current _M_a_s_s value>
          eeeellllaaaassss <current _E_l_a_s_t_i_c_i_t_y value>
          kkkksssspppprrrr <current _K_s_p_r_i_n_g value>
          kkkkddddmmmmpppp <current _K_d_a_m_p value>
          ffffiiiixxxxmmmm <boolean value for _F_i_x_e_d _M_a_s_s>
          sssshhhhwwwwssss <boolean value for _S_h_o_w _S_p_r_i_n_g_s>
          cccceeeennnntttt <mass id number of center mass>
             If there is no center mass (i.e. - center of  screen
             is to be used), then the value of -_1 is used.
          ffffrrrrcccceeee         <force id number>         <boolean active>
               <parameter #1 value> <parameter #2 value>
             The <force id number> sequence is as follows:
                0000 - Gravity
                1111 - Center of mass attraction force
                2222 - Center attraction force
                3333 - Wall repulsion force
          vvvviiiisssscccc <current _V_i_s_c_o_s_i_t_y value>
          ssssttttcccckkkk <current _S_t_i_c_k_i_n_e_s_s value>
          sssstttteeeepppp <current _T_i_m_e _S_t_e_p value>
          pppprrrreeeecccc <current _P_r_e_c_i_s_i_o_n value>
          aaaaddddpppptttt <boolean value for _A_d_a_p_t_i_v_e _T_i_m_e _S_t_e_p>
          ggggssssnnnnpppp <current _G_r_i_d _S_n_a_p value> <boolean enable>
          wwwwaaaallllllll   <boolean top>   <boolean left>   <boolean right>
               <boolean bottom>
          mmmmaaaassssssss        <mass id number>         <x position value>
               <y position value>              <x velocity value>
               <y velocity value> <mass value> <elasticity value>
             For each mass, the <mass id number> must be  unique.
             They  do  not need to be in any order.  If a mass is
             fixed, then the <mass value> field is negated.
          ssssppppnnnngggg       <spring id number>       <mass #1 id number>
               <mass #2 id number>  <Kspring value> <Kdamp value>
               <rest length value>
             For each  spring,  the  <spring id number>  must  be
             unique.   They  do not need to be in any order.  The
             order of the <mass id number>'s is not important.

       All _v_a_l_u_e_s are floating point numbers.  All _i_d _n_u_m_b_e_r_s are
     positive  integers, and all _b_o_o_l_e_a_n values are non-zero/zero
     for True/False.  It is possible  to  feed  xxxxsssspppprrrriiiinnnnggggiiiieeeessss  bogus
     values.  It may produce interesting or amusing side effects,
     but will most likely cause an object to explode  or  xxxxsssspppprrrriiiinnnn----
     ggggiiiieeeessss to crash.

AAAAUUUUTTTTHHHHOOOORRRR
     Douglas DeCarlo (dmd@gradient.cis.upenn.edu)

     Please send demo files, comments, suggestions, bug  reports,
     bug fixes and enhancements.


     With thanks to:



AT&T Bell LaboratoriesLast change: September 1, 1992                9






XSPRINGIES(1)            USER COMMANDS              XSPRINGIES(1)



          Elliott Evans
              Bitmap slave.

          Nathan Loofbourrow
              I bothered him a whole lot about  the  user  inter-
              face.

          Drew Olbrich
              The blame for "stickiness" falls on him, as well as
              a few other things.

          Andy Witkin
              For teaching a really great physically based model-
              ing  course  at  CMU.  Many ideas (both methods and
              interface) came from that class.

          And thanks to the many other people who helped in test-
          ing  xxxxsssspppprrrriiiinnnnggggiiiieeeessss  and  make some of the neat demo files,
          including James Helfrich, Brian Kelley, Patrick  Lopez,
          Chris Newman and Jef Poskanzer.


RRRREEEESSSSTTTTRRRRIIIICCCCTTTTIIIIOOOONNNNSSSS
     xxxxsssspppprrrriiiinnnnggggiiiieeeessss runs faster on a monochrome  display  than  on  a
     color display (usually).

     You probably don't want to run xxxxsssspppprrrriiiinnnnggggiiiieeeessss on a slow  machine
     or a machine which does slow bit-blitting operations.  Well,
     I guess you could... But you would be sorry for even trying.

     Here is a good rule:  If xxxxsssspppprrrriiiinnnnggggiiiieeeessss isn't fun to  use,  then
     your  machine  is  either too slow, or it is overloaded.  Or
     maybe you just aren't a fun person.  :-)






















AT&T Bell LaboratoriesLast change: September 1, 1992               10



