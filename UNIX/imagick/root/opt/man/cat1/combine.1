


CONVERT(1)               USER COMMANDS                 CONVERT(1)



NNNNAAAAMMMMEEEE
     combine - combine images to create new images.

SSSSYYYYNNNNOOOOPPPPSSSSIIIISSSS
     ccccoooonnnnvvvveeeerrrrtttt [ _o_p_t_i_o_n_s ... ] _i_n_p_u_t__f_i_l_e_1 _i_n_p_u_t__f_i_l_e_2 _o_u_t_p_u_t__f_i_l_e

DDDDEEEESSSSCCCCRRRRIIIIPPPPTTTTIIIIOOOONNNN
     _C_o_m_b_i_n_e combine images to create new images.

EEEEXXXXAAAAMMMMPPPPLLLLEEEESSSS
     To combine a image of a cockatoo with a perch, use

          combine cockatoo.miff perch.ras composite.miff

     To compute the difference between images in a series, use

          combine -compose difference series.1 series.2
     difference.miff

     To combine a image of a cockatoo with a perch starting at
     location (100,150), use

          combine -geometry +100+150 cockatoo.miff perch.ras
     composite.miff

OOOOPPPPTTTTIIIIOOOONNNNSSSS
     ----aaaallllpppphhhhaaaa
          store alpha channel if the image has one.

     ----ccccoooolllloooorrrrssss _v_a_l_u_e
          preferred number of colors in the image.

          The actual number of colors in the image may be less
          than your request, but never more.  Note, this is a
          color reduction option.  Images with less unique colors
          than specified with this option will remain unchanged.
          Refer to QQQQuuuuaaaannnnttttiiiizzzzeeee((((9999)))) for more details.

          Note, options ----ddddiiiitttthhhheeeerrrr, ----ccccoooolllloooorrrrssssppppaaaacccceeee, and ----ttttrrrreeeeeeeeddddeeeepppptttthhhh
          affect the color reduction algorithm.

     ----ccccoooolllloooorrrrssssppppaaaacccceeee _v_a_l_u_e
          the type of colorspace: _G_R_A_Y, _R_G_B, _X_Y_Z, _Y_I_Q, or _Y_U_V.

          Color reduction, by default, takes place in the RGB
          color space.  Empirical evidence suggests that
          distances in color spaces such as YUV or YIQ correspond
          to perceptual color differences more closely than do
          distances in RGB space.  These color spaces may give
          better results when color reducing an image.  Refer to
          QQQQuuuuaaaannnnttttiiiizzzzeeee((((9999)))) for more details.




ImageMagick       Last change: 10 January 1993                  1






CONVERT(1)               USER COMMANDS                 CONVERT(1)



          The ----ccccoooolllloooorrrrssss or ----mmmmoooonnnnoooocccchhhhrrrroooommmmeeee option is required for this
          option to take effect.

     ----ccccoooommmmppppoooosssseeee _o_p_e_r_a_t_o_r
          the type of image composition.

          By default, each of the composite image pixels are
          replaced by the cooresponding image tile pixel. You can
          choose an alternate composite operation:

              over
              in
              out
              atop
              xor
              plus
              minus
              add
              subtract
              difference
              replace

     The operations behaves as follows:

     oooovvvveeeerrrr     The result will be the union of the two image
              shapes, with _i_m_a_g_e obscuring _c_o_m_p_o_s_i_t_e _i_m_a_g_e in the
              region of overlap.

     iiiinnnn       The result is simply _i_m_a_g_e cut by the shape of
              _i_m_a_g_e _w_i_n_d_o_w.  None of the image data of _c_o_m_p_o_s_i_t_e
              _i_m_a_g_e will be in the result.

     oooouuuutttt      The resulting image is _i_m_a_g_e with the shape of
              _c_o_m_p_o_s_i_t_e _i_m_a_g_e cut out.

     aaaattttoooopppp     The result is the same shape as image _c_o_m_p_o_s_i_t_e
              _i_m_a_g_e, with _i_m_a_g_e obscuring _c_o_m_p_o_s_i_t_e _i_m_a_g_e where
              the image shapes overlap.  Note this differs from
              oooovvvveeeerrrr because the portion of _i_m_a_g_e outside _c_o_m_p_o_s_i_t_e
              _i_m_a_g_e's shape does not appear in the result.

     xxxxoooorrrr      The result is the image data from both _i_m_a_g_e and
              _c_o_m_p_o_s_i_t_e _i_m_a_g_e that is outside the overlap region.
              The overlap region will be blank.

     pppplllluuuussss     The result is just the sum of the image data.
              Output values are clipped to 255 (no overflow).
              This operation is independent of the alpha
              channels.

     mmmmiiiinnnnuuuussss    The result of _i_m_a_g_e - _c_o_m_p_o_s_i_t_e _i_m_a_g_e, with
              underflow clipped to zero.  The alpha channel is



ImageMagick       Last change: 10 January 1993                  2






CONVERT(1)               USER COMMANDS                 CONVERT(1)



              ignored (set to 255, full coverage).

     aaaadddddddd      The result of _i_m_a_g_e + _c_o_m_p_o_s_i_t_e _i_m_a_g_e, with
              overflow wrapping around (_m_o_d 256).

     ssssuuuubbbbttttrrrraaaacccctttt The result of _i_m_a_g_e - _c_o_m_p_o_s_i_t_e _i_m_a_g_e, with
              underflow wrapping around (_m_o_d 256).  The aaaadddddddd and
              ssssuuuubbbbttttrrrraaaacccctttt operators can be used to perform
              reversible transformations.

     ddddiiiiffffffffeeeerrrreeeennnncccceeee
              The result of abs(_i_m_a_g_e - _c_o_m_p_o_s_i_t_e _i_m_a_g_e).  This
              is useful for comparing two very similar images.

     rrrreeeeppppllllaaaacccceeee  The resulting image is _c_o_m_p_o_s_i_t_e _i_m_a_g_e replaced
              with _i_m_a_g_e.  Here the alpha information is ignored.

              The image compositor requires an alpha, or matte
              channel in the image for some operations.  This
              extra channel usually defines a mask which
              represents a sort of a cookie-cutter for the image.
              This is the case when alpha is 255 (full coverage)
              for pixels inside the shape, zero outside, and
              between zero and 255 on the boundary.  If _i_m_a_g_e
              does not have an alpha channel, it is initialized
              with 0 for any pixel matching in color to pixel
              location (0,0), otherwise 255 (to work properly
              bbbboooorrrrddddeeeerrrrwwwwiiiiddddtttthhhh must be 0).

     ----ccccoooommmmpppprrrreeeessssssss _t_y_p_e
          the type of image compression: _Q_E_n_c_o_d_e_d or
          _R_u_n_l_e_n_g_t_h_E_n_c_o_d_e_d.

          Specify ++++ccccoooommmmpppprrrreeeessssssss to store the binary image in an
          uncompressed format.  The default is the compression
          type of the specified image file.

     ----ddddeeeennnnssssiiiittttyyyy <_w_i_d_t_h>_x<_h_e_i_g_h_t>
          vertical and horizonal density of the image.

          This option specifies an image density whose
          interpretation changes with the type of image.  The
          default is 72 dots per inch in the horizonal and
          vertical direction for Postscript.  Text files default
          to 80 characters in width and 60 lines in height.  Use
          this option to alter the default density.

     ----ddddiiiissssppppllllaaaayyyy _h_o_s_t:_d_i_s_p_l_a_y[._s_c_r_e_e_n]
          specifies the X server to contact; see XXXX((((1111)))).

     ----ddddiiiitttthhhheeeerrrr
          apply Floyd/Steinberg error diffusion to the image.



ImageMagick       Last change: 10 January 1993                  3






CONVERT(1)               USER COMMANDS                 CONVERT(1)



          The basic strategy of dithering is to trade intensity
          resolution for spatial resolution by averaging the
          intensities of several neighboring pixels.  Images
          which suffer from severe contouring when reducing
          colors can be improved with this option.

          The ----ccccoooolllloooorrrrssss option is required for dithering to take
          effect.

     ----ggggeeeeoooommmmeeeettttrrrryyyy <_w_i_d_t_h>_x<_h_e_i_g_h_t>{+-}<_x _o_f_f_s_e_t>{+-}<_y _o_f_f_s_e_t>
          the width and height of the image.

          Use this option to specified the width and height of
          raw images whose dimensions are unknown such as GRAY,
          RGB, and CMYK.  This option can also change the default
          8.5 by 11 width and height of the Postscript canvas.

          By default the images are combined relative to the top
          left corner, location (0,0).  Use <_x _o_f_f_s_e_t> and <_y
          _o_f_f_s_e_t> to specify a particular location to combine the
          images.

     ----qqqquuuuaaaalllliiiittttyyyy _v_a_l_u_e
          JPEG quality setting.  Quality is 0 (worst) to 100
          (best). The default is 75.

     ----sssscccceeeennnneeee _v_a_l_u_e
          image scene number.

     ----ttttrrrreeeeeeeeddddeeeepppptttthhhh _v_a_l_u_e
          Normally, this integer value is zero or one.  A zero or
          one tells _D_i_s_p_l_a_y to choose a optimal tree depth for
          the color reduction algorithm.

          An optimal depth generally allows the best
          representation of the source image with the fastest
          computational speed and the least amount of memory.
          However, the default depth is inappropriate for some
          images.  To assure the best representation, try values
          between 2 and 8 for this parameter.  Refer to
          QQQQuuuuaaaannnnttttiiiizzzzeeee((((9999)))) for more details.

          The ----ccccoooolllloooorrrrssss option is required for this option to take
          effect.

     ----vvvveeeerrrrbbbboooosssseeee
          print detailed information about the image.

          This information is printed: image scene number;  image
          name;  converted image name;  image size;  the image
          class (_D_i_r_e_c_t_C_l_a_s_s or _P_s_e_u_d_o_C_l_a_s_s);  the total number
          of unique colors;  and the number of seconds to read



ImageMagick       Last change: 10 January 1993                  4






CONVERT(1)               USER COMMANDS                 CONVERT(1)



          and convert the image.

     Change '-' to '+' in any option above to reverse its effect.
     For example, specify +alpha to store the image without its
     alpha channel.

EEEENNNNVVVVIIIIRRRROOOONNNNMMMMEEEENNNNTTTT
     DDDDIIIISSSSPPPPLLLLAAAAYYYY
          To get the default host, display number, and screen.

SSSSEEEEEEEE AAAALLLLSSSSOOOO
     display(1), animate(1), mogrify(1), Quantize(9), X(1),
     MIFF(5)

CCCCOOOOPPPPYYYYRRRRIIIIGGGGHHHHTTTT
     Copyright 1992 E. I. du Pont de Nemours & Company

     Permission to use, copy, modify, distribute, and sell this
     software and its documentation for any purpose is hereby
     granted without fee, provided that the above copyright
     notice appear in all copies and that both that copyright
     notice and this permission notice appear in supporting
     documentation, and that the name of E. I. du Pont de Nemours
     & Company not be used in advertising or publicity pertaining
     to distribution of the software without specific, written
     prior permission.  E. I. du Pont de Nemours & Company makes
     no representations about the suitability of this software
     for any purpose.  It is provided "as is" without express or
     implied warranty.

     E. I. du Pont de Nemours & Company disclaims all warranties
     with regard to this software, including all implied
     warranties of merchantability and fitness, in no event shall
     E. I. du Pont de Nemours & Company be liable for any
     special, indirect or consequential damages or any damages
     whatsoever resulting from loss of use, data or profits,
     whether in an action of contract, negligence or other
     tortious action, arising out of or in connection with the
     use or performance of this software.

AAAAUUUUTTTTHHHHOOOORRRRSSSS
     John Cristy, E.I. du Pont De Nemours & Company Incorporated













ImageMagick       Last change: 10 January 1993                  5



