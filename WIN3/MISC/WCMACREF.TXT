Macro Statement Reference Contents


Clipboard Control
 CLIPTOFILE(clipboard_type,filename)
  Copies the Clipboard Text, Bitmap or Metafile to a disk file.
 FILETOCLIP(clipbrd_type,file_name)
  Copies a Windows metafile, bitmap or text file to the Clipboard.
 PASTETEXT
  Transmits and displays the text in the clipboard.

Conversion
 INTTIME(hour,day,month,year)
  Converts times and dates to the WinComm integer time/day value.
 STRBIN(number)
  Changes an integer number into a binary string representation of the number.
 STRHEX(number)
  Changes an integer number into a Hexedecimal string representation of the number.
 STRINT(number)
  Changes an integer number into a base 10 string representation of the number.
 STROCT(number)
  Changes an integer number into an Octal string representation of the number.
 STRTIME(time)
  Converts an integer time date value to a text string.
 VALBIN(bin_text)
  Converts a string of 1's and 0's in binary form to an integer value.
 VALHEX(hex_text)
  Converts a string representing a hex decimal number to an integer value.
 VALINT(dec_text)
  Converts a string representing a decimal number to an integer value.
 VALOCT(oct_text)
  Converts a string representing an octal number to an integer value.

Customizing
 ALARM
  Beeps the speaker.

Dialog Box Customizing
 DIALOGBOX(left,top,width,height) and DEND
  Used with the following items to create custom dialog boxes.
 BEGINGROUP_RADIOBUTTON
  The first radio button in a radiobutton group.
 CANCELBUTTON
  Defines the button that will be selected when the Esc key is pressed.
 CHECKBOX
  Displays a standard check box.
 COMBOBOX
  Displays a drop down list box for selection of an item from a list.
 DEFCANCELBUTTON
  Defines a Cancel button that will be selected when the Enter key is pressed.
 DEFPUSHBUTTON
  Defines the button that will be selected when the Enter key is pressed.
 DESTROYDLG
  Used to remove or destroy a Modeless Dialog Box
 DIALOG?
  Indicates the status of a dialog box.
 DIRLISTBOX
  Displays a list for selection of files, directories and drives.
 DIRPATH
  Displays the current path when used with the DIRLISTBOX.
 EDITBOX
  Used to create an edit box for text entry.
 ENABLECTL(id,enabled)
  Enables and disables Push Button and List Box styles
 ENDGROUP_RADIOBUTTON
  The last radiobutton in a radiobutton group.
 FLISTBOX
  Displays a list box for selection of an item from a large list.
 GROUPBOX
  Draws a black frame in a dialog box.
 HELPID integer_id
  Specifies the help topic to use with this dialog box.
 LISTBOX
  Displays a list box for selection of an item from a list.
 LTEXT, CTEXT, RTEXT
  Used to display static text in a dialog box.
 PUSHBUTTON
  Creates additional pushbuttons.
 RADIOBUTTON
  To create additional buttons in a radiobutton group.
 SEDIT
  Creates a file linked edit box with a vertical scroll bar for text entry.
 STEXT
  Creates a file linked text box with a vertical scroll bar.
 UPDATEDLG(update_items)
  Defines which variables are to be updated in a dialog box.
 UPDATEPB
  Updates variables in a dialog box.
 VTEXT
  Used to display a string variable in a dialog box.

DOS File Control
 ADD(text)
  Adds text to the capture file.
 CHGDIR(directory_name)
  Changes the current directory.
 CHGDRIVE(drive_letter)
  Changes the current drive.
 COPYFILE(source_file,dest_file)
  Copies a disk file.
 DELETEFILE(file_name)
  Deletes a disk file.
 FCLOSE(file_no)
  Closes a disk file.
 FOPEN(open_mode,file_name)
  Opens a disk file for information or for read/write operation.
 FREAD(open_file,num_chars)
  Returns a specified number of characters from a file.
 FREADLN(open_file)
  Returns a line of text from an open file.
 FSEEK(open_file,offset,seek_type)
  Positions a pointer in an open file for reading or writing.
 FWRITE(open_file,chars,text)
  Writes a string of text to an open file.
 FWRITELN(open_file,text)
  Writes a line of text to an open file.
 MKDIR(dir_name)
  Used to create a new disk directory.
 RENAME(old_name,new_name)
  Renames a file.
 RMDIR(dir_name)
  Removes a directory.
 SETFILEATTR(attribute,file_name)
  Sets a file attribute.
 SETFILEDATE(date_time,file_name)
  Sets a files date and time.

DOS File Information
 CURDIR?
  Returns the name of the current directory.
 CURDRIVE?
  Returns the name of the current disk drive.
 FILEATTRIBUTE(file_name)
  Used to obtain the attributes of a file.
 FILEFIND(file_name,attributes)
  Finds the first file meeting name and attribute requirements.
 FILESIZE(open_file)
  Returns the size of a file.
 FILETIME(open_file)
  Returns the creation or last modification date of a file.
 FINDNEXT
  Finds the next file that meets the criteria set up by FILEFIND.

DOS Information
 DOSVER?
  Returns the version of DOS.
 ENVIRON
  Returns information about the current DOS environment.
Dynamic Data Exchange
 DDEADVISE(chan_no,my_var$,server_var)
  Requests the server application to send the value of a variable to WinComm each time it changes.
 DDEEXEC(chan_no,"execute_text")
  Executes commands  in the server application.
 DDEINIT(app_name,doc_name)
  Requests the server application to establish a DDE channel for data exchanges or control.
 DDEPOKE(chan_no,server_var,my_var$)
  Sends data to the server application.
 DDEREQ(chan_no,my_var,server_var)
  Obtains the current value of a variable from the server application.
 DDETERM(chan_no)
  Terminates the DDE link or channel established with the server using DDEINIT.
 DDEUNADVISE(chan_no,server_var)
  Terminates an advise which was established by using DDEADVISE.

Graphics Customizing
 BITBKG(h_pos,v_pos,from,file_name)
  Displays a bitmap background in the user window.
 DELOBJECT(type,start_id,end_id)
  Used to remove different items of a graphic display.
 METABKG(h_pos,v_pos,mapping,file_name)
  Displays a metafile background in the user window.
 USERWINDOW(pos,size_ref,size,bkg_color)
  Used to define an area of the WinComm window for display of graphics.

Graphics Menus
 BITMAP(left,top,id,text,file_name)
  Places a bitmap icon on the background graphic.
 BUTTON(left,top,width,height,"id,text")
  Places a Windows push button on the background graphic.
 HOTSPOT(left,top,right,bot,id)
  Places a mouse selectable spot on the background graphic.
 METAFILE(left,top,right,bot,file_name)
  Places a metafile on the background graphic.
 OBJECT?
  Returns information about selection of objects on a graphic display screen.

Macro Control
 CHAIN(macro_name)
  Transfers macro execution to another macro.
 CHAINRETURN
  Transfers macro execution back to the calling macro.
 END
  Indicates the logical end of a macro.
 GOSUB label
  Transfers execution of the macro to a subroutine.
 GOTO label
  Transfers execution of the macro to a label.
 HALT
  Stops the in-line execution of the macro.
 MACROHALT(greyed)
  Used to disable the Macro check box on the WinComm command bar.
 MACROTRAP(enabled)
  Routes all characters received on the communication port to the macro.
 PROMPT and PEND and PROMPT?
  Allows testing of the communication port and input strings.
  The following statements are used in a prompt statement group:
   PCOUNT(id,#char)
    Tests for the number of characters received on communication port.
   PDCD(id)
    Test the status of the Data Carrier Detect modem signal.
   PKEY(id,char_code)
    Tests for a character typed on the keyboard.
   PQUIET(is,10ths_sec)
    Tests for quiet time on communication port.
   PSTR(type,id,char_str)
    Tests for a string received on the communication port.
   PWAIT(id,10ths_sec)
    Waits for a specified period of time.
 RETURN
  Used to denote the logical end of a subroutine.
 RSTACK
  Used to reset the subroutine stack pointer.
 SEND(text)
  Transmits text to the communication port.
 STEP
  Used to break execution in a running macro to allow debugging.

Macro Evaluation
 IF(logical_experession)
  Used to make branching decisions based on values of input variables.
 ELSE
  Used with the IF statement to group a number of statements
 DO
  Used with UNTIL to begin a looping operation.
 UNTIL(logical_expression)
  Ends a DO loop statement group.
 WHILE(logical_expression)
  Performs a statement or statement group while a condition is true.
 WEND
  Ends a WHILE statement group.

Macro Variable Control
 GETGLOBALINT(integer_number)
  Used to pass strings between chained macros.
 GETGLOBALSTR(string_number)
  Used to pass integers between chained macros.
 PUTGLOBALINT(integer_number,value)
  Passes numbers to macros that will be chained to.
 PUTGLOBALSTR(string_number,text)
  Passes strings to macros that will be chained to.
 RESTOREVARS
  Restores a macro's variables after a CHAINRETURN.
 SAVEVARS
  Saves macro variables for a CHAINRETURN from another macro.

Math
 ABS(value)
  Gives the absolute value of the integer argument.
 CHKSUM
  Calculates the checksum of a string.
 CRC
  Calculates the CRC of a string.

Menu Customizing
 ADDBAR
  Adds a menu bar to the WinComm menu bar set.
 ADDCOMMAND(menu_number,menu_id,menu_text)
  Adds a command to a pop-up menu item.
 ADDMENU(bar_number,menu_text)
  Adds a menu to the Menu Bar.
 ENABLEMENU(menu_bar,id,greyed)
  Used to enable and disable individual menu items.
 HELP(help_file)
  Identifies the custom context sensitive help file.
 MENU?
  Returns the value of the selected menu item.
 MENUBAR?
  Returns an identifier for the current menu bar.
 SHOWBAR(bar_number)
  Displays a new or changed menu bar.

Session Variable Control
 ACTIVATESESS
  Activates changes made to session variables.
 GETSESSINT(int_id)
  Used to return the currently loaded integer session variable.
 GETSESSSTR(string_id)
  Used to return the currently loaded string session variable.
 PUTSESSINT(int_id,int_value)
  Used to assign values to any session integer.
 PUTSESSSTR(string_id,string_value)
  Used to assign values to any session string.

Stock Dialog Box
 ALERT(text)
  Displays a stock dialog box with text and an OK button.
 ALERTCANCEL(text)
  Displays text in a stock dialog box with OK and Cancel buttons.
 FILEOPENDLG(head_txt,ext,return_txt)
  Displays a stock dialog box for selecting a file.
 INPUTDLG(input_txt,heading_txt)
  Displays a stock dialog box for input.
 SAVEASDLG(heading_text,def_filename)
  Displays a stock dialog box used to name a file before it is saved.

System Information
 TIME?
  Returns the current system time in integer format.

Text
 ASC(text)
  Returns the decimal value of an ASCII character.
 BITSTRIP(text)
  Sets the high order bit in text to 0.
 CHAR(ascii_value)
  Returns an ASCII character from a decimal value.
 CLEAN(text)
  Removes non-printing ASCII characters from a string.
 CMP(str1,str2)
  Compares 2 text strings.
 DELETE(text,beg_pos,num_char)
  Removes text from a string
 EXTRACT(bracket_text,text,inst_no)
  Extracts a substring from a text string.
 LEFT(text,num_chars)
  Returns a number of characters from the left portion of a string.
 LEN(text)
  Returns the length of a string.
 LOWERCASE(text)
  Converts text to lower case.
 LPRINT(text)
  Sends a line of text to the printer.
 MID(text,first_char,num_chars)
  Returns characters from the middle portion of a string.
 NEXTCHAR?
  Returns the next character in the receive buffer.
 NULL(text)
  Tests to see if a string is null.
 PRINT(text)
  Displays characters in the WinComm window text area.
 QUOTE(text)
  Puts a string in quotation marks.
 RIGHT(text,num_chars)
  Returns a number of characters from the right end of a string.
 SEARCH(substr,str)
  Finds the occurrence of a string in another string.
 SUBST(orig_txt,find_txt,replace_txt,times)
  Substitutes text for other text in a string.
 UPPERCASE(text)
  Returns a string as all upper case characters.

WinComm Command
 ACTIVATE
  Activates the instance of WinComm running this macro.
 CAPTURE(cont)
  Controls the capture feature of WinComm.
 CLEAR
  Clears the WinComm screen and display buffer.
 CLOSE
  Exits WinComm
 DIAL(tele_number)
  Dials a telephone number.
 DISABLE(logical)
  Used to disable selection of menu items and dialog box controls.
 PRINTER(cont)
  Turns the printer on and off.
 SHOW(change)
  Repaints the WinComm window for graphics display.
 START
  Starts the currently loaded session.
 STATUSLINE(status_text)
  Places text in the status line.
 STOP
  Stops the currently loaded session.
 WINMOVE(left,top,width,height)
  Sizes and positions the WinComm Window.

WinComm DLL
 CALL(dll.fil|process,str1,str2,int1,int2)
  Calls a dynamically linked library from within a WinComm macro.

WinComm File Control
 NEW
  Loads default WinComm session settings.
 OPEN(session_file_name,pswrd,mode)
  Opens a WinComm session file.
 SAVEAS(file_name)
  Saves the current session file using file_name.

WinComm File Transfer
 RECEIVEASCII(diag_disp,file_name)
  Sets WinComm up to receive an ASCII file.
 SENDASCII(diag_disp,file_name)
  Sends an ASCII file using the settings assigned in the current session.
 XFER?
  Variable used to determine the status of a file transfer.

WinComm Information
 ACTIVE?
  Indicates if WinComm is active.
 ONLINE?
  Tests to see if a WinComm session has been started.
 STATUSLINE?
  Returns the text displayed on the status line.
 WINCOMMVER?
  Gives the version of WinComm.

WinComm Packet Data Transfer
 PKTIME(trans_time,rec_time)
  Used to set the timing for packet transmission and reception.
 RXPKT(cmd,rec_str)
  Receives an error-free string of data from another macro using the TXPKT command.
 TXPKT(cmd,xmit_str)
  Sends an error-free string to another macro using RXPKT statement.
 TXPKTSTAT?
  The variable that indicates the status of a packet protocol transfer.

WinComm Protocol File Transfer
 RECEIVEFILE(diag_disp,file_name)
  Sets WinComm up to receive a file using an error-correcting protocol.
 SENDFILE(diag_disp,file_name)
  Sends a file using an error-free protocol assigned in the current session.

WinComm/WinLink File Control
 PCTOPC(cmd,opt,text)
  Used to control file operations of another computer via the serial communication link.

Windows Application Control
 APPACTIVATE(title_bar_text)
  Activates a loaded Windows application.
 RUN(app_name,cmd_line,size)
  Used to start another Windows application.
 SENDKEY(key_text)
  Sends normal ASCII characters to the active Windows application.
 SENDSPECKEY(ctrl,key1_val,key2_val)
  Sends non-printing and combinations of non-printing and printing characters to the active Windows application.
 SETFOCUS(id)
  Sets the focus to a given window or control within a Windows application.

Windows File Control
 SYSTEM
  Saves system information in the WIN.INI file.
 FREEMEM?
  Returns the number of bytes of Windows free memory.
 GETFOCUS?
  Returns an identifier of the window that has the input focus.
 GETSCRAP(value_id)
  Returns information about the Windows display screen.
 WINVER?
  Gives the version of Windows.

