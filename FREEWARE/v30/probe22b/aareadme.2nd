AAREADME.2ND

===============================================================================

 BUILDING / USING THE SOFTWARE


 1. If you want to rebuild the software from the sources...

 Once you have obtained/expanded (etc) the kit files, set default to the [.SRC]
 subdirectory:

    $ SET DEFAULT [PROBE.SRC]   ! or whatever specification is appropriate

 Invoke the building process by typing:

    $ @BUILD

 This command procedure will assemble (VAX) or compile (Alpha) and link three
 different images, namely PROBE.EXE, ACQ.EXE and DMS.EXE, which will be moved
 to the parent directory. All intermediate files will be preserved in place.

 To rebuild the playback image you will need VAXC. On a VAX, you would type:

    $ @BUILD PLAYBACK

 This will compile and link the REPLAY.EXE image and move it to the parent
 directory.

 I don't have access to DECC but I have been told that straight compilation
 will not work cleanly with this compiler. However, you may wish to try to
 compile manually, using the

 /STANDARD=VAXC

 qualifier (or something similar). If this works (I don't know), the resulting
 image should be moved to the parent directory. Alternately, a precompiled VAX
 object, [PROBE.VAX]REPLAY.OBJ, is provided should you wish to just relink or
 if you don't have VAXC.

 If all else fails, or on Alpha, the DCL procedure [PROBE]FORMAT.COM provides
 the essential functionality of the native REPLAY image. See the procedure
 header for more information.


 2. Before the programs can be executed...

 If you ran through the build procedure, covered above, skip to the next
 paragraph. Otherwise, you need to manually copy or rename the *.EXE image
 files provided from either [PROBE.VAX] or [PROBE.AXP] into the [PROBE]
 directory.

 The *JOB* logical name SYS_PROBE must be defined to point to the directory
 where the executable files exist. The file [PROBE]SETUP.COM is provided for
 this purpose and to modify the process command table with the definition for
 PROBE. You would typically prepare the utility once per session by issuing
 the following command:

    $ @<device>[PROBE]SETUP     ! or equivalent specification

 where <device> is the logical or physical specification of the drive where
 the software is installed.

 You may wish to update the system command table SYS$LIBRARY:DCLTABLES.EXE so
 that the PROBE command is permanently available system-wide. You could also
 define the (JOB) logical name SYS_PROBE as part of your login procedure. If
 you do both of these steps, the file SETUP.COM is of no further use to you.


 3. Reading the documentation...

 A help library is provided for your perusal:

    $ HELP/LIBRARY=SYS_PROBE:PROBE  PROBE

 You may wish to merge the help information located in [PROBE.SRC]PROBE.HLP
 into the VMS library SYS$LIBRARY:HELPLIB.HLB or some other library of your
 choice and pointed to with a HLP$LIBRARY_x logical name. You would then see
 PROBE information by issuing an unqualified HELP command.


 4. Trying it up...

 Invoking the utility is simply:

    $ PROBE /qualifier... as described by the help information.

 To look at a recording file on Alpha, you will need to do:

    $ @SYS_PROBE:FORMAT ... as described in that file's header.

===============================================================================

 A BIT OF HISTORY...

 Probe evolved from a personal project (EE master's course and research) and
 was mostly developed circa 1989-1991. Since it proved a useful utility in my
 then-current job, I enhanced it in my spare time based on co-worker feedback
 and on my own experience and interests.

 I consider Probe to be unfinished in some areas. Some parts are unpolished,
 some I would rewrite for clarity (modularity), some commented-out (future
 plans) stubs could be expanded (given time!), some development code could be
 removed... but overall, the software has shown itself to be very robust and
 stable, even under very heavy network loads.

 Early implementations have run on VAX/VMS since version 5.2. More recent
 versions have been tested on OpenVMS VAX 5.5 through 6.1.

 This software was written with a "low-powered" (microVAX class) machine in
 mind. It is known to run on (at least):

 microVAX II / VAXstation 2000
 VAX 3x00    / VAXstation 3100/xx
 VAX 4x00    / VAXstation 4000/xx
 VAX 6320
 VAX 6430
 VAX 6610
 VAX 7610
 VAX 8350
 VAX 8550

 Recently, I used PROBE 2.2 as a baseline for porting to Alpha. This effort
 yields the current release 2.2B. It has been tested on an AlphaStation 200
 with VMS 6.2 and on some of the above VAXes.

===============================================================================

 FUTURES

 One limitation that is hard to get around is that a given node cannot see
 the details of its own transmissions. DECnet line counters only provide total
 values so the projected workaround is to have another node on the same segment
 run a light-weight Probe to listen and feedback to the main node at regular
 interval.

 This software has not yet been tested with DECnet/OSI.

===============================================================================
