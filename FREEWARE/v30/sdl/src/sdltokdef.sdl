{
{****************************************************************************
{*									    *
{*  Copyright (c) 1980, 1981		                                    *
{*  by DIGITAL Equipment Corporation, Maynard, Mass.			    *
{* 									    *
{*  This software is furnished under a license and may be used and  copied  *
{*  only  in  accordance  with  the  terms  of  such  license and with the  *
{*  inclusion of the above copyright notice.  This software or  any  other  *
{*  copies  thereof may not be provided or otherwise made available to any  *
{*  other person.  No title to and ownership of  the  software  is  hereby  *
{*  transferred.							    *
{* 									    *
{*  The information in this software is subject to change  without  notice  *
{*  and  should  not  be  construed  as  a commitment by DIGITAL Equipment  *
{*  Corporation.							    *
{* 									    *
{*  DIGITAL assumes no responsibility for the use or  reliability  of  its  *
{*  software on equipment which is not supplied by DIGITAL.		    *
{*									    *
{****************************************************************************
{++
{ facility:
{
{	SDL (Structure Definition Language)
{
{ abstract:
{
{	Generates constants for the token id's used by grammar
{	and the common TOKEN structure used to pass the tokens around
{
{ author:
{	c.t. pacy
{ date:
{	revised 22-DEC-1981	ctp
{_______________!_______!______________________________________________________
{    1-May-1992	!  JAK	! EV1-8 Added token_locator, token_text.
{_______________!_______!______________________________________________________

module $tokdef ident "EV1-8";

 
/* token structure
/* filled in by LEX 

#maxtoksiz = 132;
constant maxtoksiz equals #maxtoksiz;
 
aggregate  token structure dimension 0:9 common ;
	token_id longword;
	token_locator structure longword;
	    lineno word;
	    colno word;
	    end;
	token_text structure;
	    token_length longword;
	    token_address address;
	    end;
	start_line byte;
	synthetic byte;
	token_string character length #maxtoksiz;
	constant token_size equals :;
	end;

item token_index longword common;

end_module;

