1 XMFRACT
A freeware fractal generation program

Usage:

 $ Xmfract [options]


2 DESCRIPTION
  This is xmfract 1.4, an X11R[5/6] Motif program based upon a
  popular DOS freeware program named Fractint. It is a true graphic
  user interface quite different from that program.

  The program will calculate, display and manipulate over 90 discrete
  fractal types with very fast algorithms. Other features include zooming,
  animation (color cycling), color editing, spherical projection, and an
  amazing wealth of parameters. There are too many features to list here.

  Also included are dozens of ancillary files such as color map files,
  parameter files, formula files, and an extensive on-line help system.

  System requirements:
    The program is known run to under the following operating systems:

      OSF/1 (with Motif 1.2 or later)
      Solaris 2.x (with Motif 1.2 or later)
      Linux 1.94 or later (with XFree 3.1 and Motif 1.2 or later)
      HPUX (with Motif 1.2 or later)
      AIX (with Motif 1.2 or later)

 ==> AND NOW OPENVMS !!!

    Motif 1.2 or later is required for this program. Motif 1.1 will
      not work with this program.

    The program has been tested under the following window managers:
      mwm olwm olvwm twm tvtwm vuewm

2 Initialization

  1. - Xmfract may obtain initialization information from many sources,
       including the command line, the environment, and two different
       names for initialization files. Choose whichever of these options
       is most convenient for you:

         a: If you use this method, no modification of any initialization
            file is necessary (yet not disallowed). Set an environment
            variable XMFRACTDIR or FRACTDIR that points to wherever you
            have placed the ancillary files (*.map, *.par, etc.).
            Then rename the file "xmfract.ini" to ".xmfractrc" (note the
            leading "dot") and place it in your home directory.

         -- or --

         b: Add a line to the top of the "xmfract.ini" that points to
            wherever you have placed the ancillary files. This must be
            a full-pathed name of a directory (relative paths or variables
            are not (yet) supported). i.e. fractdir=/usr/local/xmfract
            Note that there are no spaces before or after the "=", nor
            is the path surrounded by quotation marks. Place this file
            in your home directory or the directory from which you
            intend to run xmfract. If it is in your home directory,
            you may rename the file as .xmfractrc, or leave it named
            xmfract.ini -- both forms are supported.

       In either case, if you have placed the help files in any directory
       other than <fractdir>/help, then add a line to whichever file you
       are using for initialization (xmfract.ini or .xmfractrc) that
       points to wherever you have placed the help files.

  2. - The program contains internal default fallback X resources, so an
       app-defaults file is not necessary, but it may be useful for
       customizing the program's appearance and behaviour. If desired,
       rename the X resource file from Xmfract.ad to Xmfract and place it
       where your system's resource files are stored, or your home directory.
       Review the comments at the top of the resource file for more
       information about customizing resources.

       For Linux systems, this will probably be required because XFree has
       a problem dealing with tear-off menus in many versions of Motif.
       Set the tearOffModel resource to TEAR_OFF_DISABLED for Linux systems,
       if you experience problems with tear-off menus. Xmfract does not need
       to be re-compiled when any resource is changed.


2 USER_INFORMATION

  This documentation assumes that the user has read "Fractal Creations
  Second Edition", by Tim Wegner and Bert Tyler, published (1993) by
  Wait Group Press, 200 Tamal Plaza, Corte Madera, CA 94925. If you
  have not read this most excellent book, please do so. The book will
  give you many insights into the creation and inner workings of fractals
  in addition to the user's guide to Fractint, the original DOS program
  that this version of xmfract is based upon.

  Ken Shirriff has ported Fractint to UNIX, using an interface almost
  identical to the original Fractint. That version of the program is
  named Xfract and has several advantages over this version, and may
  be preferable for many users. Those differences include the ability to
  use the disk video mode, and that the interface has the same look-and-feel
  of the original Fractint, among many others.

  Xmfract differs from Fractint and Xfract in many ways. The first and
  most obvious of these is the graphic user interface. Many of the same
  keystrokes will invoke familiar menus, and some other keystrokes are
  changed or non-existent. Please browse each of the menus on the menu
  bar to become familiar with their contents.

  The letter to the right of the menu item indicates the letter which may
  be typed to invoke that menu item. This is called a menu item accelerator.
  The menu does not need to be displayed to invoke the item with the
  accelerator letter.

  Xmfract supports tear-off menus, if the user has not specifically
  prevented it by an entry in the resource file. Menus may be "torn off",
  or posted in windows of their own (separate from the main window), by
  selecting the dashed line at the top of the menu. To dismiss any torn-off
  menu, press the 'Esc' key while the pointer is in the menu window.

  An extensive on-line help system is installed. Browse the help files
  from the main menu's "Help" button or press the "Help" button in
  any of the various dialogs that will be displayed during the
  course of the program. A good place to start with the on-line help
  system is the main index. Select "About the Main Menu Bar" to help
  you get started.

  For a detailed description of a specific fractal formula, select the
  topic "Summary of Fractal Types" from the help index, or highlight a
  fractal type from the fractal type selection dialog, then press the help
  button in the dialog to get more information about that type.

  In general, pressing the "Done" button in a dialog will accept the
  values displayed unless an error is detected. Pressing the "Reset"
  button will reset the values to those that were in effect when the
  dialog was invoked. Pressing the "Default" button will set the values
  to preset default values. Pressing the "Cancel" button will cause the
  dialog to disappear without changing any values. Pressing "Apply" will
  accept the values displayed unless an error is detected, and not make
  the dialog disappear.

  Other specialized buttons, and menus are available in some dialogs.
  Use the on-line help system to guide you through the maze of fractal
  parameters.

  As of this writing, the zoom box functions available are move, pan,
  and stretch.

  If the user has drawn a zoom box on the screen and presses the "d"
  key (or selects "Create image" from the "Image" menu), the program
  assumes that the user wishes to zoom in on the selected area.

  Selecting Pan from the Zoom menu will draw a zoom box the full size
  of the screen. Moving this zoom box around on the screen will cause
  the program to select the area inside the zoom box and fill the
  screen with it. This effectively "pans" the image on the screen. The
  portion of the visible image that has been calculated will not be
  recalculated, just re-displayed. Any portion of the image that was
  not visible before the pan will be calculated and displayed.

  Moving the zoom box means moving it around on the screen without
  changing its size or shape. Draw a zoom box, then press the left
  mouse button down when the pointer is inside the zoom box. The outline
  of the zoom box will change to a dotted line and the cursor will change
  to a cross-arrow. While holding the mouse button down, move the cursor
  around the screen and the outline of the zoom box will follow the mouse
  pointer. When the zoom box is positioned where you want it, release the
  mouse button and the outline of the zoom box will revert to a solid line.
  All done. Note that if you press the mouse button down outside the zoom
  box, the program assumes that you want to draw a different zoom box, and
  cancels the current zoom box, and any move or stretch operation that is in
  effect. Also note that if you draw a zoom box that is too small (the
  minimum size is 25 x 25 pixels), the box will not be drawn. This also is
  a short cut for canceling a zoom box. Simply click the left mouse button
  when the pointer is outside the zoom box and the zoom box and any pending
  functions will be canceled. If you move the zoom box so that the outside
  edge of the box is outside the visible window, the area outside of
  the visible window will not be included in the zoomed in or out image.

  Stretching the zoom box means changing its shape. The zoom box may be
  stretched vertically, horizontally, or diagonally. After drawing a
  zoom box on the screen some additional lines will appear on the zoom
  box. The boxes that are created by these lines are zoom box "handles".
  Press the left mouse button down in one of the handles and the cursor
  will change to the appropriate arrow (either up, down, left, right, or
  toward one of the four corners). Hold the mouse button down and move the
  cursor and the zoom box will grow and/or shrink in the desired direction.
  Experiment with changing the shape in several directions to become
  familiar with the stretching operation.

  Options may be specified on the command line or in a parameter file
  (<filename>.par) or in a startup command file named "$HOME/.xmfractrc"
  or "./xmfract.ini".

  I have used dozens of ".par" files in this program and have found none
  that will confuse xmfract. In addition, all of the "*.map" (color map),
  "*.l" (L-System definition), "*.frm" (formula definition), and ".ifs"
  (IFS definition) files that I have used have performed as expected.

  Arguments that are not understood by xmfract are displayed in
  a dialog, and the rest of the arguments are processed normally.
  Dismiss the dialog and generate the image as usual, and you
  will probably find that the image appears as expected. If not,
  edit the offending line from the parameter file or command line
  and try again.

  Some new options may be of note - the author credits screen that pops
  up when the program lifts off may enabled or disabled with the
  command-line or startup-file option "creditscreen=". An xmfract.ini
  entry of "creditscreen=no" will prevent the credits screen from
  popping up when the program starts. Of course, the credits may be
  viewed at any time by selecting "Display authors window" from the
  "Authors" menu (or by hitting the "w" key) regardless of the
  creditscreen option. The copyright and legal disclaimer may also
  be disabled with a command-line or startup-file option named
  "disclaimer=". The disclaimer may popped up again by invoking the
  "Version information" item in the "Authors" menu.

  Experienced xmfract users may want to set the "verbose=" option. This
  option (sometimes in concert with the "overwrite=" option) when set
  set to "verbose=yes" will prevent some of the more obvious dialogs
  from being presented. For example, the program usually asks the user
  to confirm creation of image or parameter files, or whether to resize
  a window to fit an image to be read. These messages and some other
  dialogs will not appear when this option is set to "yes".

  Setting the "overwrite=" option to "overwrite=yes" will cause the
  program to automatically overwrite existing files (such as parameter
  files or images), without asking the user -- if the verbose option
  is not set to "yes".

  I recommend that you become familiar with the dialogs that appear
  periodically during the course of this program before setting the
  verbose option to "no" or the overwrite option to "yes". That will
  prevent you from becoming confused by unexpected behavior from xmfract.

  A new menu item has been added to allow the user to explicitly set
  the size of the main window. The default size is 640 x 480 pixels,
  and the maximum size is 2048 x 2048. Only the size of the menu bar is
  taken into account when calculating the maximum size for a fully
  visible image (the window manager decorations, such as borders,
  etc., are not considered). That means that if you resize the window
  to the maximum size for a fully visible image, the borders may be off
  the screen, but the image canvas will be fully visible. In addition,
  if the user elects to load an image that was created in a size that
  is different from the current window size, the user is given the option
  to resize the window to fit the new image.

  Press the left mouse button when the pointer is in the option menu and
  a list will appear that allows the user to select from several
  preconfigured window sizes, including the maximum size for a fully
  visible image. Pressing the "Default" pushbutton will set the window
  to the pre-selected default size of 640 x 480 pixels. The normal
  aspect ratio for the program (the ratio of width to height) is 4:3,
  and the program figures out the aspect ratio of the root window on
  your display and configures several preset values in that aspect
  ratio as well. To resize the window to any of these values, select
  the desired menu item.

  A note about color - if you are using a display that allows only one
  hardware color map (this is by far the most common type of color display)
  xmfract will, by default, attempt to allocate as many color cells as
  possible that results in a total number of colors which is a power of two.
  This results in a color map that will contain 256, 128, 64, 32, 16, 8, 4,
  or 2 colors, depending on how many colors are already allocated by the
  window manager and other clients running on this display. To find out how
  many colors xmfract has currently allocated, use the <tab> display ("Info
  about image" under the "Misc" menu). The "Video:" line in this dialog will
  display the current width and height of the main window and the number of
  colors that xmfract has currently allocated.  For example, the line
  "Video: 640x480x128 xmfract mode" means that the main window is 640 by 480
  pixels and that xmfract has allocated 128 colors. To use all 256 colors
  in this type of display, use the -private command line option. This will
  cause color flashing (rather rude, eh?), but it is the only method for
  displays that allow only one color map.

  Starfields may be generated only on displays where xmfract has allocated
  all 256 colors, and the images that are generated with the *.par files
  that are supplied with the program have all been generated with 256 color
  displays. To display an image that appears as the artist has visualized it,
  use a 256-color mode when invoking the related parameter file or loading
  the image file.

  I have implemented a different color palette editor -- experienced
  Fractint users will find it quite different, yet the same in some
  respects. The active vs. inactive color registers have completely
  different meanings than those in Fractint.

  To use the editor, select "Edit current color palette" from the "File"
  menu, or press the "e" key. Two color registers are displayed at the
  top of the dialog, and the color palette will be displayed below.
  Only the color in the active register may be edited. Colors in the
  inactive register will follow the mouse (until a range is selected,
  see help). The inactive register will display the color that is under
  the mouse pointer if the pointer is in the editor dialog or in the image
  window. You may select a color to edit by clicking the left mouse button
  in the desired color in either window. If you click in the image window,
  a small circle is drawn on the image to remind you where you clicked.
  A white dashed line is drawn around the selected color box in the
  editor palette, and the selected color plus it's red, green, and blue
  component values are displayed in the active register scale widgets.
  Moving the bars on the scales will change the color.

  For range selection, the palette rectangles are numbered from left
  to right, and top to bottom. That is, the upper left corner is the
  lowest numbered rectangle and the bottom right is the highest.
  To select a range of colors to operate upon, select the start of the
  range with the left mouse button. Again, a white dashed line is drawn
  around the selected color box in the editor palette. Select the end of
  the range by pressing the center mouse button down in the desired
  color. That box will now be surrounded by a solid white line,
  and the range operation menu items will be enabled (not greyed
  out). The inactive register will no longer follow the mouse. Select the
  desired range operation from the menu. You may get the inactive register
  color to follow the mouse again by canceling the range selection from
  the range sub-menu. When selecting a range to copy, it does not matter
  whether the range is selected with the active register as the low end
  of the range or whether the inactive register is the low end. In either
  case, the saved range will be loaded into memory from low to high.
  When pasting the range, the order of the selected ranged becomes
  important. The range will be pasted in a forward direction if the
  active register is the low end of the range, and will be pasted in a
  reverse order if the inactive register is the low end of the range.

  See the help topic "Color Editor Commands" for an example range
  editing session.

  Experiment with the palette editor to become familiar with these
  operations. Hands-on experimentation will make these operation much
  more clear because you can see the colors change, rather than just
  numbers in the crude boxes used as an example in the help files...

  In addition, the color cycling operations are available. Start or stop
  the color cycling by pressing the "c" key. Colors may be cycled if you
  have completed creation of an image and/or if the palette editor is
  displayed.

  You may change the speed of the color cycling by pressing the keypad
  up and down arrow keys or the cursor up and down arrow keys, whichever
  is appropriate for your keyboard. The keypad "+" and "-" keys and the
  alphabetic "+" and "-" keys will cause the palette cycle to change
  direction. Pressing the "+" and "-" key when not color cycling will
  cause the palette to rotate one step in the indicated direction. The
  keypad "Enter" key will randomize portions of the palette while the
  palette is cycling.

  A command-line or initialization file parameter named rate=nnn is
  also available. This value controls the rate at which the screen
  will update during image calculation. Valid values are 1 -> 100.
  Lower numbers will cause the screen to update less frequently,
  thereby (hopefully) reducing network overhead in situations
  where net traffic is critical. This value may also be changed when
  the program is running by selecting "Refresh Rate..." from the
  "Image" menu.

  Orbit windows and Julia Inverse method displays are toggled on and off
  by pressing the space bar (for Julia Inverse) or "o" key (for an orbits
  window) after an image is complete. The operation of these functions is
  similar to the same functions in Fractint. When the orbits window is
  displayed, the line and/or circle modes may be toggled with upper-case
  "L" or "C", respectively. The upper case is required to resolve a
  conflict where the the lower-case "l" and "c" are menu item accelerator
  letters (load color map and cycle color palette).

  There are a maximum of 10 parameters sets that are automatically logged
  by the program. You may re-create a previously created image by using
  the "Restore" menu.

  Some of the commands that were necessary in Xfract are no longer
  necessary in xmfract. For example, the -slowdisplay, -simple, and -fast
  options are not required and therefore not implemented. The program
  will silently ignore command-line options or parameter-file entries
  that are valid for Fractint or Xfract that are included in xmfract
  for backward compatibility purposes only.

  The user may reset the color, clear the screen, or reset the fractal
  parameters from a menu selection. One may also choose to reset all of
  the above from the same menu.


2 COMMAND-LINE_OPTIONS

  Some of these are detailed in the previous section, and are listed here
  as well. All of these options, except those that are preceded with a
  dash (-) may be entered either on the command line, or in an
  initialization file, or in a parameter file. The most common or
  recommended locations for these options are listed here and in the
  on-line help files (see "Command Line Parameters" in the on-line help).

  Xmfract accepts command-line parameters that allow you to start it with a
  particular mode, fractal type, starting coordinates, and just about
  every other parameter and option.

  These parameters can also be specified in a ~/.xmfractrc file, to set them
  every time you run xmfract.

  They can also be specified as named groups in a <name>.par (parameter) file
  which you can then call up while running xmfract by using the <@> command.

  In all three cases (command line, ~/.xmfractrc, and parameter file) the
  parameters use the same syntax, usually a series of keyword=value commands
  like overwrite=no. In each case below, values between "<" and ">" are
  required arguments for the specified command, and values between "[" and "]"
  are optional arguments for the specified command. Do not type any of these
  characters in the command unless otherwise directed.

  The command-line only parameters that may be set are:

    -display <hostname>:<screen>.<display>
       Specifies the X11 display to use.

    -share
       Shares the current display's colormap.

    -private
       Allocates the entire colormap (i.e. more colors).

    -geometry <WxH[{+-X}{+-Y}]>
       Changes the geometry of the initial image window.

    makemig=<x/y>
       Create a multi-image gif file "x" images wide by "y" images high.
       See "Creating Multi-image GIF files" below for more information.


  These commands and options may be specified on the command line or in
  an initialization file named "~/.xmfractrc":

    fractdir=<directory>
       Specify where the ancillary files are stored.
       This should be the first line in the initialization file.

    helpdir=<directory>
       Specify where the ancillary files are stored.

    exitnoask=<yes|no>
       Exit with or without asking for confirmation.

    creditscreen=<yes|no>
       Display the authors screen when the program starts.

    disclaimer=<yes|no>
       Display the disclaimer message when the program starts.

    verbose=<yes|no>
       Set the level of verbosity in the program.

    overwrite=<yes|no>
       Automatically overwrite existing files without confirmation.

    map=<mapfilename>
       Specify a color map file at startup.

    rate=<number>
       Specify the screen refresh rate as a percentage. A lower value
       is slower and results in less overhead on networked machines,
       and usually results in faster fractal calculations, due to the
       reduced number of graphics function calls. The valid range for
       this value is 1 -> 100.

    undo=<number>
       Specify the number of color editor commands that may undone.
       A zero means that no undos will available. This is useful on
       machines that have a limited amount of memory available.
       The valid range for this value is 0 -> 32767. The default is 8192.


  These options are most commonly specified in a parameter file:

    filename=<filename>
      Process commands from a file.

    map=<@mapfilename>
      Use 'filename' as the current color map.

    reset[=<version>]
      Causes xmfract to reset all calculation related parameters
      to their default values.

    colors=<@mapname|colorspec>
      Reads in a replacement color map from 'filename'. The 'colorspec'
      is rather long (768 characters for 256 color modes), and its syntax
      is not documented here. This form of the 'colors=' command is not
      intended for manual use - it exists for use by the 'b' command when
      saving the description of a nice image.

    type=<fractal>
      Selects the fractal type to calculate. The default is type "mandel".

    inside=<nnn|bof60|bof61|zmag|attractor|epscross|startrail|period>
      Set the color of the interior; for example, "inside=0" makes the M-set
      "lake" a stylish basic black. A setting of -1 makes inside=maxiter.
      Three more options reveal hidden structure inside the lake. Inside=bof60
      and inside=bof61, are named after the figures on pages 60 and 61 of
      "Beauty of Fractals".

    fillcolor=<color>
      Sets a block fill color for use with boundary tracing and tesseral
      calculation mode options.

    finattract=<yes|no>
      Look for finite attractor in julia types.

    function=<func[,func,func,func]>
      Allows specification of transcendental functions with fractal types
      which use variable functions. Valid values are:
        sin, cos, tan, cotan, sinh, cosh, tanh, cotanh,
        exp, log, sqr, recip (1/z), ident (identity),
        conj, flip, zero, and cosxx (cos with bug).

    outside=<nnn|iter|real|imag|mult|summ>
      Fractal exterior color options.

    maxiter=<iterations>
      Maximum number of iterations {0-32767} (default = 127).

    passes=<1|2|g|b|t>
      Select single-pass, dual-pass, solid-guessing, boundary-tracing,
      or the tesseral drawing algorithms.

    cyclerange=<min/max>
      Range of colors to cycle (default 1/255).

    ranges=<ranges=nn/nn/nn/...>
      Ranges of iteration values to map to colors.

    potential=<potential=nn[/nn[/nn[/16bit]]]>
      Continuous potential.

    params=params=<xxx[/xxx[/...]]>
      Begin with these extra parameter values.

    miim=<[depth|breadth|walk]/[left|right]/[xxx/yyy[/zzz]]>
      Params for MIIM julias. xxx/yyy = julia constant, zzz = max hits.
      Eg. miim=depth/left/-.74543/.11301/3

    initorbit=<nnn/nnn>
      Sets the value used to initialize Mandelbrot orbits to the given
      complex number (real and imag parts).

    orbitname=<type>
      Sets the orbit type for Julias.

    3dmode=<monocular|left|right|red-blue>
      Sets the 3D mode used with Julibrot.

    julibrot3d=<nn[/nn[/nn[/nn[/nn[/nn]]]]]>
      Sets Julibrot 3D parameters zdots, origin, depth, height, width,
      and distance.

    julibroteyes=<nn>
      Distance between the virtual eyes for Julibrot.

    julibrotfromto=<julibrotfromto=nn/nn[/nn/nn]>
      "From-to" parameters used for Julibrot.

    corners=<xmin/xmax/ymin/ymax[/x3rd/y3rd]>
      Begin with these coordinates. (Eg.: corners=-0.739/-0.736/0.288/0.291)

    viewwindows=<xx[/xx[/yes|no[/nn[/nn]]]]>
      Set the reduction factor, final media aspect ratio,
      crop starting coordinates (y/n), explicit x size,
      and explicit y size

    center-mag=[Xctr/Yctr/Mag]
      This is an alternative way to enter corners as a center point and
      a magnification that is popular with some fractal programs and
      publications.

    invert=<nn/nn/nn>
      Turns on inversion - turns images 'inside out'

    biomorph=<nnn>
      Biomorph coloring.

    bailout=<nnnn>
      Use this as the iteration bailout value instead of the default.
      (4.0 for most fractal types)

    symmetry=<xxxx>
      Force symmetry to None, Xaxis, Yaxis, XYaxis, Origin, or Pi symmetry.

    periodicity=<no|show|nnn>
      Controls periodicity checking. 'no' turns checking off; entering a
      number nnn controls the tightness of checking (default 1, higher is
      more stringent). 'show' or a neg value colors 'caught' points white.

    logmap=<yes|old|nn>
      Yes maps logarithm of iteration to color. Old uses pre vsn 14 logic.
      >1 compresses, <-1 for quadratic.

    rseed=<nnnnn>
      Random number seed, for reproducable plasma clouds.

    orbitdelay=<nn>
      Slows up the display of orbits (by nn/10000 sec).

    showdot=<nn>
      Colors the current dot being calculated color nn.

    decomp=<nn>
      'Decomposition' toggle, value 2 to 256.

    distest=<nnn/nnn>
      Distance estimator method.

    formulafile=<filename>
      File for type=formula.

    formulaname=<name>
      Specifies the formula name for type=formula fractals.

    lfile=<filename>
      File for type=lsystem.

    lname=<name>
      Lsystem name for 'type=lsystem' fractals.

    ifsfile=<filename>
      File for type=ifs.

    ifs=<name>
      IFS name for 'type=ifs' fractals.

    stereo=<nnn>
      Sets Stereo (R/B 3D) option:  0 = none, 1 = alternate,
      2 = superimpose, 3 = photo.

    rotation=<nn[/nn[/nn]]>
      Rotation about x, y, and z axes.

    perspective=<nn>
      Perspective viewer distance (100 is at the edge).

    xyshift=<nn/nn>
      Shift image in x & y directions (alters viewpoint).

    interocular=<nnn>
      Sets 3D Interocular distance default value.

    converge=<nnn>
      Sets 3D Convergence default value.

    crop=<nnn/nnn/nnn/nnn>
      Sets 3D red-left, red-right, blue-left, and blue-right cropping values.

    bright=<nnn/nnn>
      Sets 3D red and blue brightness values.

    xyadjust=<nnn/nnn>
      Sets 3D X and Y adjustment values.

    3d=<yes|overlay>
      Resets 3D to defaults, starts 3D mode. If overlay specified,
      does not clear existing graphics screen.

    sphere=<yes>
      Turns on 3D sphere mode.

    scalexyz=<nn/nn/nn>
      3d x, y, and z scale factors.

    roughness=<nn>
      Same as z scale factor.

    waterline=<nn>
      Colors this number and below will be 'inside' color.

    filltype=<nn>
      3D filltype.

    lightsource=<nn/nn/nn>
      The coordinates of the light source vector.

    smoothing=<nn>
      Smooths rough images in light source mode.

    latitude=<nn/nn>
      Latitude minimum and maximum.

    longitude=<nn/nn>
      Longitude minumim and maximum.

    radius=<nn>
      Radius scale factor.

    transparent=<mm/nn>
      Sets colors 'mm' to 'nn as transparent.

    preview=<yes>
      Turns on 3D 'preview' mode.

    showbox=<yes>
      Turns on 3D 'showbox' mode.

    coarse=<nnn>
      Sets preview 'coarseness' value.

    randomize=<nnn>
      Smoothes 3d color transitions between elevations.

    ambient=<nnn>
      Sets depth of shadows and contrast when using light source fill types.

    haze=<nnn>
      Sets haze for distant objects if fullcolor=1.

    fullcolor=<yes>
      Allows creation of full color .tga image with light source fill types.

    lightname=<filename>
      Targa FullColor output file name.

    ray=nnn
      Selects raytrace output file format.

    brief=yes
      Selects brief or verbose file for DKB output.


  Creating Multi-image GIF files:

    To create a multiple-image GIF file from images created with xmfract,
    the input images must all have the same width and height. Select the
    images to be merged, then save or rename the selected gif files in
    this format: "frmig_xy.gif" where x is the horizontal offset (from 0)
    in the resulting mig and y is the vertical offset (from 0) in the
    resulting mig... for example, if you have nine gif files to stitch
    together and you want them to be in a 3-gif by 3-gif mig, then the
    names will be:

    frmig_00.gif will become the upper left image
    frmig_10.gif will become the upper middle image
    frmig_20.gif will become the upper right image

    frmig_01.gif will become the middle left image
    frmig_11.gif will become the middle middle image
    frmig_21.gif will become the middle right image

    frmig_02.gif will become the lower left image
    frmig_12.gif will become the lower middle image
    frmig_22.gif will become the lower right image

    Because the command-line parameters are processed by xmfract before
    the initialization file or environment variables, the mig maker
    will not understand "fractdir" if it is set in the initialization
    file or the environment. To overcome this limitation, supply the
    "fractdir=" command-line argument in addition to the "makemig="
    argument on the command line when creating a multi-image GIF from
    files that reside in <fractdir>. If the files that are to be
    stitched together reside in the current directory (from where you
    invoke xmfract) then this additional argument is not necessary.

    In the above example, the command-line argument would be:
      xmfract fractdir=/my/images makemig=3/3

    The output multiple-image GIF file will be named "fractmig.gif"

2 GETTING_STARTED

  To generate a fractal, select the fractal type by invoking the
  "Parameters" menu (or hitting the "t" key). By default the basic
  Mandelbrot type is selected. Parameters for the selected type will
  be displayed. Change these if desired, then select "Create Image"
  from the "Image" menu (or hit the "d" key).

  Other parameter selection is found under the "Options" menu. I have
  attempted to make these selections appear (as much as possible) as they
  appear in Fractint. Again, please read the above-mentioned book for
  a MUCH more detailed explanation of these and other options.

  To load a pre-selected set of parameters, select "Load saved parameter
  set" from the "File" menu. Once a parameter file is selected, and an
  entry from that file is selected, the parameters for that image are
  loaded into the calculation routines. Select "Create Image" from the
  "Image" menu (or hit the "d" key) to begin creating an image.

  I have attempted to update the help files for xmfract, but there may be
  inconsistencies that I have overlooked. If you spot any, please bring
  them to my attention.

2 BUGS

  Probably infinite.

  - The ones I know about:

      -> On machines where the size of the 'float' data type does not
         equal the size of the 'long' data type, the log palette functions
         will fail causing alignment errors and, eventually, segmentation
         faults. A workaround (sort of) -- don't use a log palette setting
         other than zero.

      -> The 3D tranformation function cannot be interrupted with the
         ESC or CTRL-C keys. This is due to the recursive nature of
         the plasma fractal type, which also cannot be interrupted.

      -> Tear-off menus do not work on many Linux systems. If you
         attempt to tear off a menu and the program halts, you
         may disable the tear-off menus by changing the tear-off
         resource in xmfract's resource file. Change the line
         that reads: Xmfract**tearOffModel: TEAR_OFF_ENABLED
         to: Xmfract**tearOffModel: TEAR_OFF_DISABLED
         xmfract does not have to be re-compiled when any
         resource is changed. Simply stop and restart the program.

      -> The Restore menu and saved image indexes are confusing.

      -> Generating a set of thumbnail GIF images is tedious.

2 CORRESPONDENCE

  Bug reports, complaints, comments of any sort, and any news whatsoever
  concerning this program are *all* welcome, any time. I enjoy hearing
  from anyone who has used this program. Thank you!

  Send correspondence by e-mail, phone, surface mail or fax:

    Darryl House
    Business Process Systems and Services (BPSS)
    Electronic Data Systems, Inc.
    450 W. East Avenue
    Chico, CA 95926

    e-mail: darryl@chc.bpss.eds.com

    ph:(916) 896-7076 fax:(916) 896-7193 icbm:39.48N 121.51W

2 TO-DO_LIST

  Things that will be (or maybe will be) accomplished in the next
  major release of xmfract (release 2.0). These are in addition
  to all of the features in this release, and all of the new
  features of Fractint 19.2 (newer than Fractint 18.2). These
  are not listed in any particular order.

  -- Enhance the zoom box, adding rotation and skew.

  -- Put the inverse julia and orbits displays in windows other
     than the main window.

  -- Display the contents of parameter file entries as they
     are selected.

  -- Revise the history and image restoration functions, adding
     a browsing dialog that may display thumbnail images created
     from the saved parameters.

  -- Enhance the reset options, adding modes where the options
     and/or parameters may be reset independently. Also take
     into consideration the preview mode and window resize mode.

  -- Add image manipulation routines which change the size of the
     image according to a preset range of sizes.

  -- Add 90-degree (and continuously-variable?) image rotation.

  -- Add HSV controls to the color editor.

  -- Add (up to) 24-bit color support.

  -- Add support for more image formats (TIFF, MPEG, PNG).

  -- Add (maybe various flavors of) image animation.

  -- Add a Fractint-like "Enter command string" function.

  -- Automate and enhance the MIG generator (with support
     for other image formats?)

  -- Enhance the formula parser, adding binary if/else.

  -- Add image manipulation routines for merging images.

  -- Add ray-trace (and rendering?) capabilities.

  -- Add fractal morphing capability.

  -- Revise the on-line help, adding contex-sensitive help and hyper-links.

  -- A whole host of other stuff...

2 COPYRIGHT
###############################################################################

        xmfract version 1.4 - a freeware fractal generation program.
          Copyright (C) 1995 Darryl House and the Stone Soup Group.

    This program is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation; either version 2 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

    Some source code for this program is covered by additional copyrights.
    See the copyright notices in the source files for more information.

    You should have received a machine-readable and/or hard copy of the
    GNU General Public License along with this program; if not, write to the
    Free Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.

###############################################################################
