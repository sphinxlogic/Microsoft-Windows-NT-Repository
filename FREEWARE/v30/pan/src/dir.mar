



	.macro	pad_star , list, ?L3
	pushr	#^m<R5>

	pushaq	noautowildcard
	calls	#1,g^cli$present
	blbs	r0,L3



	movzwl	list, R5
	addl2	List+4, R5

	decl	R5
	cmpb	#^a/*/, (R5)
	beql	L3

	incl	R5
	incw	list

	movb	#^a/*/, (R5)

L3:	popr	#^m<R5>

	.endm	pad_star

fab:	$fab	fac=<put>,rat=<cr>,fop=nam,nam=nam



nam:    $nam    rsa=result,-
                rss=200,-
                esa=exp,-
                ess=200

result:	.blkb	200
exp:	.blkb	200



rab:	$rab	fab=fab,usz=500,rsz=500


	.macro	fix_this	which,?L21

	Locc	#^a/-/, Which, Which+8
	beql	L21

	movzbl	Which, R6
	subl3	R0, R6, Which


L21:	nop
	.endm	fix_this	



	.macro	tst_this	which, W_ctr, ?L21,?L100,?L1,?L4,?L5,?L6,?L7,?L8,?L9,?L10,?L11,?L12,?L14,?L15,?L16,?L17,?L18,?L19
	cmpb	Input+8, which+8
	BEQL	L1
	BRW	L4
L1:	NOP

	tstl	which
	bneq	L100
	BRW	L4
L100:	NOP


	movzbl	W_ctr, W_ctr
	movzbl	Which, Which


	movc3	Which,@Which+4, @tell_point
	addl2	Which, tell_point	
	addl2	Which, tell_len



	movc3	W_ctr,@W_ctr+4, @Ctr_point
	addl2	W_ctr, Ctr_point	
	addl2	W_ctr, Ctr_len



; store the right thing in the fao control block

; -------------------------------------------------
	cmpb	Input+8, #^a/A/	; Author
	BNEQ	l5

	movab	Author, @Faol_Point
        addl2   #4, Faol_point

; -------------------------------------------------
L5:	cmpb	Input+8, #^a/C/	; Conf pointer
	BNEQ	L6
	
	movab	Dconf_point, @Faol_Point
        addl2   #4, Faol_point


; -------------------------------------------------
L6:	cmpb	Input+8, #^a/D/	; Date
	BNEQ	L7


	movab	note_create_time, @Faol_Point
        addl2   #4, Faol_point



; -------------------------------------------------
L7:	cmpb	Input+8, #^a/H/	; Hidden
	BNEQ	L8

	movab	note_hidden, @Faol_Point
	movl	Faol_Point, hid_P
        addl2   #4, Faol_point

; -------------------------------------------------
L8:	cmpb	Input+8, #^a/K/	; Keywords
	BNEQ	L9

	movab   not_yet, @Faol_Point
	movab	key_d, @Faol_Point
        addl2   #4, Faol_point
; -------------------------------------------------
L9:	cmpb	Input+8, #^a/L/	; Lines
	BNEQ	L10

	movl	number_of_lines, @Faol_Point
	movl	Faol_Point, lin_p
        addl2   #4, Faol_point




; -------------------------------------------------
L10:	cmpb	Input+8, #^a/N/	; Note_Id
	BNEQ	L11


	movab	noteX, @Faol_Point
        addl2   #4, Faol_point

; -------------------------------------------------
L11:	cmpb	Input+8, #^a/P/	; Personal name
	BNEQ	L12


        movab   perX, @Faol_Point
        addl2   #4, Faol_point
; -------------------------------------------------
L12:	cmpb	Input+8, #^a/R/	; Replies
	BNEQ	L14


	movl	note_numresponces, @Faol_Point
	movl	Faol_Point, rep_p
        addl2   #4, Faol_point




; -------------------------------------------------
L14:	cmpb	Input+8, #^a/T/	; Title
	BNEQ	L15

        movab   titX, @Faol_Point
        addl2   #4, Faol_point

; -------------------------------------------------
L15:	cmpb	Input+8, #^a/U/	; Uid
	BNEQ	L16

	movl	uid, @Faol_Point
	movl	Faol_Point, uid_p
        addl2   #4, Faol_point
; -------------------------------------------------
L16:	cmpb	Input+8, #^a/E/	; Extra
	BNEQ	L17

        movab   extX, @Faol_Point
        addl2   #4, Faol_point

L17:	NOP
; -------------------------------------------------
	cmpb	input+8,#^A/F/		; file_name
	bneq	L21


        movab   file_name, @Faol_Point
        addl2   #4, Faol_point

L21:	nop

	clrl	which
L4:	nop
	.endm	tst_this



dlm:	
.ascid	/------------------------------------------------------------------/


ret_per_name:	.blkb	400
ret_per_name_len:	.blkl	1
uid:		.blkl	1



version:	
.ascid	/>>>>>>>>>>>>>>>>>>>>>>>>>> Dir , version D1.0 <<<<<<<<<<<<<<<<<<<<<<<<<</




	.MACRO	CHECK	AR0,AERROR,?L3

	BLBS	AR0,L3
	ret
L3:	NOP

	.ENDM	CHECK






	.library	/sys$login:peb/
	.library	/sys$library:lib/
	$Fscndef
	$prvdef
	$Maildef
	$hlpdef
        $notesdef
	$NOTESMSGDEF
	NOTEITEMS
	$ttdef
 	$tt2def
	$brkdef
	$Fscndef

fpmt:	
.ascid	/COMMAND! (Dir) >/


cpmt:	.ascid	/Cli     Pmt > /




; ---------------------------------------------------------------



ctr_len:	.blkl	1
ctr_str:	.blkb	500
ctr_point:	.blkl	1


tell_len:	.blkl	1
tell_str:	.blkb	500
tell_point:	.blkl	1


	.entry	Dir,0


	$bintim_s	timbuf=time,-
			timadr=timadr
	check	r0,error


	$setimr_s	daytim=timadr,-
			astadr=ast,-
			reqidt=reqidt
	check	r0,error


	pushaq	UNseen
	calls	#1,cli$present
	blbc	r0,677$
	movw	#notes$k_note_next_unseen, str1
	movw	#notes$k_note_mark_seen, str2
677$:	nop


; title list ?

	pushaq	Ttitle
	calls	#1,g^cli$present
	blbc	r0,200$

	movab	title_list, R8

100$:	movl    #100,input         
	Pushaw  Input
	pushaq  Input
	pushaq  TTitle
	calls   #3,g^cli$get_value 
	blbs	r0,10$
	brw	200$
10$:	nop


	pushaq	input
	pushaq	input
	calls	#2,g^str$upcase



	movzbl	input,input

	movb	input, (R8)
	incl	R8

	movc3	input, input+8, (R8)
	addl2	input, R8

	brw	100$

200$:	nop
end_title:	nop


; ------------------------------------------

	pushaq	Tauthor
	calls	#1,g^cli$present
	blbc	r0,200$

	movab	author_list, R8


100$:	movl    #100,input         
	Pushaw  Input
	pushaq  Input
	pushaq  Tauthor
	calls   #3,g^cli$get_value 
	blbs	r0,10$
	brw	200$
10$:	nop


	pushaq	input
	pushaq	input
	calls	#2,g^str$upcase



	movzbl	input,input

	movb	input, (R8)
	incl	R8

	movc3	input, input+8, (R8)
	addl2	input, R8

	brw	100$

200$:	nop
end_author:	nop

; -------------------------------------------
; output file

	movl    #100,input         
	Pushaw  Input
	pushaq  Input
	pushaq  output
	calls   #3,g^cli$get_value 
	check	r0,error


	movb	input,fab+fab$b_fns
	movl	input+4, fab+fab$l_fna

	$create	fab=fab
	check	r0,error

	$connect	rab=rab
	check	r0,error



; tell us the resulting file name


	cvtbl   NAM+NAM$B_RSL,Descr
	movab	result,Descr+4


	movl	#100,out
	$fao_s	ctrstr=ctr_fn,outbuf=out,outlen=out,-
		p1=#Descr
	pushaq	out
	calls	#1,g^lib$put_output





	movl    #100,range_v
	Pushaw  range_v
	pushaq  range_v
	pushaq  range
	calls   #3,g^cli$get_value 
	check	r0,error

	movw	range_v, disp_i
	movab	range_v+8, disp_i+4

; should we include replies ??

	locc	#^a/*/,range_v,range_v+8
	bneq	12$
	movw	#notes$k_noop, i_ar
12$:	nop


; /since?

	pushaq	since
	calls	#1,cli$present
	blbc	r0,600$

	movl    #100,input         
	Pushaw  Input
	pushaq  Input
	pushaq  since
	calls   #3,g^cli$get_value 
	check	r0,error



	$bintim_s	timbuf=Input,-
			timadr=since_time
	check	r0,error

	movw	#NOTES$K_NOTE_SINCE_TIME   , sl1
	movab	since_time, sl2

	movw	#notes$k_noop, i_ar

600$:	nop






; before


	pushaq	before
	calls	#1,cli$present
	blbc	r0,650$

	movl    #100,input         
	Pushaw  Input
	pushaq  Input
	pushaq  before
	calls   #3,g^cli$get_value
	check	r0,error



	$bintim_s	timbuf=Input,-
			timadr=before_time
	check	r0,error

	movw	#NOTES$K_NOTE_before_TIME   , sl3
	movab	before_time, sl4

	movw	#notes$k_noop, i_ar

650$:	nop




	movab	faol_list, faol_point


	clrl	ctr_len
	movab	ctr_str, ctr_point


	clrl	tell_len
	movab	tell_str, tell_point


; get the report options

100$:	movl    #100,input         
	Pushaw  Input
	pushaq  Input
	pushaq  Report
	calls   #3,g^cli$get_value 
	blbs	r0,10$
	brw	200$
10$:	nop


	tst_this	opt_15, ctr_15
	tst_this	opt_1, ctr_1
	tst_this	opt_2, ctr_2
	tst_this	opt_3, ctr_3
	tst_this	opt_4, ctr_4
	tst_this	opt_5, ctr_5
	tst_this	opt_6, ctr_6
	tst_this	opt_7, ctr_7
	tst_this	opt_8, ctr_8
	tst_this	opt_9, ctr_9
	tst_this	opt_10, ctr_10
	tst_this	opt_11, ctr_11
	tst_this	opt_12, ctr_12


	brw	100$


200$:	nop

	fix_this	opt_15
	fix_this	opt_1
	fix_this	opt_2
	fix_this	opt_3
	fix_this	opt_4
	fix_this	opt_5
	fix_this	opt_6
	fix_this	opt_7
	fix_this	opt_8
	fix_this	opt_9
	fix_this	opt_10
	fix_this	opt_11
	fix_this	opt_12




; tell us which options not used

	pushaq	no_used
	calls	#1,g^lib$put_output

	movl	#100,out
	$fao_s	ctrstr=ctr_nu,outbuf=out,outlen=out,-
		p1=#opt_1,-
		p2=#opt_2,-
		p3=#opt_3,-
		p4=#opt_4,-
		p5=#opt_5,-
		p6=#opt_6,-
		p7=#opt_7,-
		p8=#opt_8,-
		p9=#opt_9,-
		p10=#opt_10,-
		p11=#opt_11,-
		p12=#opt_12,-
		p13=#opt_15
	pushaq	out
	calls	#1,g^lib$put_output



	movl	ctr_len, Descr
	movab	ctr_str, descr+4
;	pushaq	Descr
;	calls	#1,g^lib$put_output
	



; get the conf name


	movl    #100,input         
	Pushaw  Input
	pushaq  Input
	pushaq  conf
	calls   #3,g^cli$get_value 
	check	r0,error






	movl	#100,out
	$Fao_s	ctrstr=ctr_ent,outbuf=out,outlen=out,-
		p1=#Input
	pushaq	out
	calls	#1,g^lib$put_output


	movw	input, notes_open_i
	movab	input+8, notes_open_i+4




; /nonote ??


	pushaq	notebook
	calls	#1,g^cli$present
	blbs	r0,34$
	brw	op_f
34$:	nop




	movl    #100,notebook_spec      
	Pushaw  notebook_spec
	pushaq  notebook_spec
	pushaq  notebook
	calls   #3,g^cli$get_value 
	check	r0,error
	movw	notebook_spec, notebook_in
	


; open notebook 

        pushaw  null
        pushaw  notebook_in
        pushal  notebook_file_cont
        calls   #3,G^Notes$notefile_begin
        check   r0,error

; begin

	pushaw  null
	pushaw	book_in
	pushal	notebook_cont
	calls	#3,g^notes$entry_begin
	check	r0,error

; get the entry

	movw	input, ent_in
	movl	input+4, ent_in+4

	pad_star	ent_in

urep:	pushaw	ent_out
	pushaw	ent_in
	pushal	notebook_cont
	calls	#3,g^notes$entry_get
	check	r0,error


	movw	#notes$k_continue, ent_in+2


	movl	entry_name_len, descr
	movab	entry_name, descr+4

	movl	#100,out
	$Fao_s	ctrstr=ctr_ent,outbuf=out,outlen=out,-
		p1=#descr
	pushaq	out
	calls	#1,g^lib$put_output

	movw	seen_map_len, se_mp

	movw	Notefile_file_name_len, notes_open_i
	movab	Notefile_file_name, notes_open_i+4


op_f:	nop

        pushaw  notes_open_o
        pushaw  notes_open_i
        pushal  file_cont
        calls   #3,G^Notes$notefile_begin
	blbs	r0,90$
	brw	end_loop
90$:	nop

        movl    result_spec_len,Descr
        movab   result_spec,descr+4
        pushaq  descr
        calls   #1,g^lib$put_output


; get out the filename

	$FileScan_s	Srcstr=Descr,-
			Valuelst=Valuelst
	check	r0,error

	movzwl	ValueLst, file_name
	movl	ValueLst+4, file_name+4


	movl	title_len,Descr
	movab	title,Descr+4
;	pushaq	Descr
;	calls	#1,g^lib$put_output

	movl	#100,out
	$fao_s	ctrstr=ctr_title,outbuf=out,outlen=out,-
		p1=#Descr
	pushaq	out
	calls	#1,g^lib$put_output


        movl    notice_len,Descr
        movab   notice,descr+4
;        pushaq  descr
 ;       calls   #1,g^lib$put_output


	movl	#100,out
	$fao_s	ctrstr=ctr_notice,outbuf=out,outlen=out,-
		p1=#Descr
	pushaq	out
	calls	#1,g^lib$put_output










	movab	file_cont, notes_beg_i+4



        pushaw  notes_beg_o
        pushaw  notes_beg_i
        pushal  note_cont
        calls   #3,G^Notes$note_begin
        check   r0,error                                                                       




	calls	#0,g^lib$init_timer

	pushaq	dlm
	calls	#1,g^lib$put_output


	movl	tell_len, Descr
	movab	tell_str, descr+4
;	pushaq	Descr
;	calls	#1,g^lib$put_output


	movw	descr, rab+rab$w_rsz
	movw	descr, rab+rab$w_usz

	movl	descr+4, rab+rab$l_ubf
	movl	descr+4, rab+rab$l_rbf

	$put	rab=rab
	check	r0,error





; are we getting keywords ???

	tstl	opt_5
	bneq	loop

	movw	#notes$k_note_hint_get_keyword, kmr

loop:	nop

	movc5	#0,(sp),#^a/ /,#50,note_id


        pushaw  add_add_O
        pushaw  disp_i
        pushal  note_cont
        calls   #3,G^Notes$note_get
	blbs	r0,90$
	brw	end_loop
90$:	nop


	movl	note_id_len, Descr
	movab	note_id, Descr+4
;	pushaq	descr
;	calls	#1,g^lib$put_output

	movl	note_id_len, orig_id_len
	movc3	note_id_len, note_id, orig_id



; -------------------------------------------
	clrl	key_d
	movab	key_d+8, key_point
	movc5	#0,(Sp),#^a/,/,#500,key_d+8


	tstl	opt_5
	beql	554$
	brw	555$
554$:	nop

551$:	pushaw	k_out
	pushaw	k_in
	pushal	note_cont
	calls	#3,g^notes$note_get_keyword
	blbs	r0,591$

;	MOVL    R0,VEC+4
 ;       $PUTMSG_S       MSGVEC=VEC

	brw	555$
591$:	nop

	tstl	keyword_name_len
	bneq	1234$
	brw	555$
1234$:	nop

	movl	keyword_name_len,descr
	movab	keyword_name,descr+4
;	pushaq	descr
;	calls	#1,g^lib$put_output


	movc3	keyword_name_len, keyword_name, @Key_Point
	addl2	keyword_name_len, key_d
	addl2	keyword_name_len, Key_Point
	incl	Key_Point
	incl	Key_d
;	movl	#50, key_d

;	pushaq	key_d
;	calls	#1,g^lib$put_output



	brw	551$

555$:	nop
	


; -------------------------------------------

	cmpw	#notes$k_noop, str1
	bneq	44$

	movw	#notes$k_continue, disp_i+2

44$:	nop

	movl	#100,out
	$fao_s	ctrstr=ctr_p3,outbuf=out,outlen=out,-
		p1=note_id_len,-
		p2=#note_id,-
		p3=ret_note_author_len,-
		p4=#ret_note_author,-
		p5=ret_note_title_len,-
		p6=#ret_note_title,-
		p7=number_of_lines
;	pushaq	out
;	calls	#1,g^lib$put_output


; ++++++++++++++++++++++++++++++++++++++++++++++++++++++
; are we checking authors ???????
	tstl	author_list
	bneq	400$
	brw	500$
400$:	nop

	movab	author_list, R8

399$:	movzbl	(R8), descr
	incl	R8
	movl	R8, descr+4

	tstl	descr
	bneq	501$
	brw	loop
501$:	nop

;	pushaq	descr
;	calls	#1,g^lib$put_output


	incl	fred




	movl	ret_note_author_len, titX
	movab	ret_note_author, titX+4


;	movl	#100,Tmp1
	movl	titx,tmp1

	pushaq	titX
	pushaq	tmp1
	calls	#2,g^str$upcase


;	pushaq	tmp1
;	calls	#1,g^lib$put_output

; stright match

	matchc	descr,@descr+4,tmp1,tmp1+8
	bneq	51$
	brw	500$
51$:	nop



; wild card match ?

	pushaq	descr
	pushaq	tmp1
	calls	#2,g^STR$MATCH_WILD  
	blbc	r0,91$
	brw	500$
91$:	nop


	addl2	descr, R8

	brw	399$

500$:	nop
end1:	nop
; ++++++++++++++++++++++++++++++++++++++++++++++++++++++


; are we checking titles ???????
	tstl	title_list
	bneq	400$
	brw	500$
400$:	nop

	movab	title_list, R8

399$:	movzbl	(R8), descr
	incl	R8
	movl	R8, descr+4

	tstl	descr
	bneq	501$
	brw	loop
501$:	nop

;	pushaq	descr
;	calls	#1,g^lib$put_output







	movl	ret_note_title_len, titX
	movab	ret_note_title, titX+4


;	movl	#100,Tmp1
	movl	titx,tmp1

	pushaq	titX
	pushaq	tmp1
	calls	#2,g^str$upcase

; stright match

	matchc	descr,@descr+4,tmp1,tmp1+8
	bneq	51$
	brw	500$
51$:	nop

; wild card match ?

	pushaq	descr
	pushaq	tmp1
	calls	#2,g^STR$MATCH_WILD  
	blbc	r0,91$
	brw	500$
91$:	nop


	addl2	descr, R8

	brw	399$

500$:	nop
; ++++++++++++++++++++++++++++++++++++++++++++++++++++++

	movl	ret_note_author_len, Author
	movab	ret_note_author, Author+4

	movl	note_id_len, noteX
	movab	note_id, noteX+4

	movl	conf_point_len, Dconf_point
	movab	conf_point, Dconf_point+4	

	movl	ctr_len, Descr
	movab	ctr_str, descr+4

	movl	note_hidden, @hid_P
	movl	number_of_lines, @lin_p
	movl    note_numresponces, @rep_p
	movl	uid, @uid_p

	movl	ret_per_name_len, perX
	movab	ret_per_name, perX+4



	movl	ret_note_title_len, titX
	movab	ret_note_title, titX+4


	movl	note_user_area_len, extX
	movab	note_user_area, extX+4

	movl	#500,out
	$faoL_s	ctrstr=Descr,outbuf=out,outlen=out,-
		PRMLST=faol_list
	check	r0,error

;	pushaq	out
;	calls	#1,g^lib$put_output
;	check	r0,error

	movw	out, rab+rab$w_rsz
	movw	out, rab+rab$w_usz

	movab	out+8, rab+rab$l_ubf
	movab	out+8, rab+rab$l_rbf

	$put	rab=rab
	check	r0,error

	incl	written

	brw	loop

; -------------------------------------------------

end_loop:	nop


	MOVL    R0,VEC+4
        $PUTMSG_S       MSGVEC=VEC



	movw	#notes$k_note_id, disp_i+2



        pushaw  null
        pushaw  null
        pushal  note_cont
        calls   #3,G^Notes$note_end


        pushaw  null
        pushaw  null
        pushal  file_cont
        calls   #3,G^Notes$notefile_end

	pushaq	dlm
	calls	#1,g^lib$put_output


	tstl	notebook_cont
	bneq	10$
	ret
10$:	nop


	brw	urep


error:	ret



VEC:    .LONG   2
        .BLKL   1
        .LONG   0
        .LONG   0






ent_in:		.word	0
		.word	notes$k_entry_name
		.long	0
		.long	0
;
cl_le:		.word	0
		.word	notes$k_class_name
		.long	class_name
		.long	0
;
		.long	0


class_name:	.blkb	100


ent_out:	.word	100
		.word	notes$k_notefile_file_name
		.long	Notefile_file_name
		.long	Notefile_file_name_len
;
		.word	100
		.word	notes$k_entry_name
		.long	entry_name
		.long	entry_name_len
;
		.word	3000
		.word	notes$k_seen_map
		.long	seen_map
		.long	seen_map_len
;
		.long	0



user_area:	.blkb	500
user_area_len:	.blkl	1

seen_map:	.blkb	3000
seen_map_len:	.blkl	1

entry_name:	.blkb	255
entry_name_len:	.blkl	1


notebook_file_cont:	.blkl	1

notebook_spec:		.long	100
			.long	notebook_spec+8
			.blkb	100

notebook:		.ascid	/NOTEBOOK/

notebook_in:	.word   0
                .word   notes$k_notefile_file_name
                .long   notebook_spec+8
                .long   0
;
		.word	notebook_def_len
		.word	notes$k_notefile_default_name
		.long	notebook_def_spec
		.long	0
;
		.long	0


notebook_def_spec:	.ascii	/SYS$LOGIN:.NOTE/
notebook_def_len = . - notebook_def_spec


book_in:	.word	4
		.word	notes$k_notefile_context
		.long	notebook_file_cont
		.long	0
;
		.long	0

notebook_cont:	.blkl	1


ctr_ent:	.ascid	/Opening conference entry !AS/

out:		.long	500
		.long	out+8
		.blkb	500


input:		.long	100
		.long	input+8
		.blkb	100


title_len:      .blkl   1
title:          .blkb   100
atitle:	.ascid	/TITLE/
r_title:	.ascid	/TITLE/
a_title:	.ascid	/TITLE/
set_title:	.ascid	/Setting title field/
ret_note_title_len:	.blkl	1
ret_note_title:		.blkb	100
ret_note_author_len:	.blkl	1
ret_note_author:	.blkb	100
result_spec_len:        .blkl   1
result_spec:            .blkb   150
number_of_lines:	.blkl	1
notice_len:     .blkl   1
notice:         .blkb   100
r_notice:	.ascid	/NOTICE/
a_notice:	.ascid	/NOTICE/
set_notice:	.ascid	/Setting notice field/
note_id_len:    .blkl   1
tmp_note_id_len:	.blkl	1
o_note_id_len:	.blkl	1


note_id:        .blkb   50
r_note_id:	.blkb	100
tmp_note_id:		.blkb	50
o_note_id:	.blkb	100
NOTE_CONT:		.blkl	1
TMP_NOTE_CONT:	.blkl	1
mast_note_cont:	.blkl	1
shad_note_cont:	.blkl	1
mod_shad_note_cont:	.blkl	1
Notefile_file_name_len:	.blkl	1
Notefile_file_name:	.blkb	100
file_cont:	.blkl	1
tmp_file_cont:	.blkl	1
mast_file_cont:	.blkl	1
shad_file_cont:	.blkl	1
descr:		.blkl	2
ctr_p3:		.ascid	/Note !7AD !20AD !30AD !4UL lines/
ctr_ent1:	.ascid	/Opening conference     !AS ............../
message_cont:	.blkl	1
mail_cont:	.blkl	1
cont:	.long	1
del_note_cont:	.blkl	1
conf:	.ascid	/CONF/

null:	.blkl	100







notes_beg_i:    .word   4
                .word   notes$k_notefile_context
                .long   file_cont
                .long   0
;
                .word   4
                .word   notes$k_nosignal
                .long   no_sig
                .long   0

;
                .long   0


notes_beg_o:    .word   4
                .word   notes$k_notefile_numnotes
                .long   number_of_notes
                .long   0
;
                .long   0
                                                                                





notes_open_i:   .word   0
                .word   notes$k_notefile_file_name
                .long   input+8
                .long   0
;
		.word   default_name_len
                .word   notes$k_notefile_default_name
		.long   default_name
                .long   default_name_len
;
se_mp:		.word	0
		.word	notes$k_seen_map
		.long	seen_map
		.long	0
;
                .long   0




notes_open_o:   .word   100
                .word   notes$k_notefile_title
                .long   title
                .long   title_len
;
                .word   150
                .word   notes$k_notefile_result_spec
                .long   result_spec
                .long   result_spec_len
;
                .word   100
                .word   notes$k_notefile_notice
                .long   notice
                .long   notice_len
;
                .long   0
                                                                               

number_of_notes:	.blkl	1
no_sig:			.long	1


default_name:   .ascii  /Notes$library:.Note/
default_name_len =. - default_name








conf_point:	.blkb	100
conf_point_len:	.blkl	1





add_add_o:      .word   20
                .word   notes$k_note_id
                .long   note_id
                .long   note_id_len
;
		.word	4
		.word	notes$k_note_uid
		.long	uid
		.long	0
;
                .word   100
                .word   Notes$K_Note_pen_Name
                .long   ret_per_name
                .long   ret_per_name_len
;
		.word	100
		.word	notes$k_notefile_file_name
		.long	conf_point
		.long	conf_point_len
;

		.word	100
		.word	notes$k_note_author
		.long	ret_note_author
		.long	ret_note_author_len
;
		.word	100
		.word	notes$k_note_title
		.long	ret_note_title
		.long	ret_note_title_len
;
		.word	4
		.word	notes$k_note_numrecords
		.long	number_of_lines
		.long	0
;
		.word	8
		.word	notes$k_note_create_time
		.long	note_create_time
		.long	0
;
		.word	4
		.word	notes$k_note_numresponses
		.long	note_numresponces
		.long	0
;
		.word	500
		.word	notes$k_note_user_area
		.long	note_user_area
		.long	note_user_area_len
;
		.word	4
		.word	notes$k_note_hidden
		.long	note_hidden
		.long	0
;
		.long	0




note_hidden:		.blkl	1
note_user_area:		.blkb	500
note_user_area_len:	.blkl	1
note_numresponces:	.blkl	1
note_create_time:	.blkl	2

un_I:	.word	4
	.word	notes$k_note_uid
	.long	uid
	.long	0
;
	.word	4
	.word	notes$k_note_mark_seen
	.long	no_sig
	.long	0
;
	.long	0






time:	.ascid	/0 00:00:30/
timadr:	.blkl	2

	.entry	ast,^m<r2,r3,r4,r5,r6,r7,r8,r9>

	pushr	#^m<r0,r1,r2>

	$bintim_s	timbuf=time,-
			timadr=timadr
	check	r0,error


	$setimr_s	daytim=timadr,-
			astadr=ast,-
			reqidt=reqidt
	check	r0,error



	movl	#100,out
	$fao_s	ctrstr=ctr_ast,outbuf=out,outlen=out,-
		p1=orig_id_len,-
		p2=#orig_id,-
		p3=written
	pushaq	out
	calls	#1,g^lib$put_output



	popr	#^m<r0,r1,r2>

	ret


REQIDT:	.blkl	1

report:	.ascid	/REPORT/




opt_1:	.ascid	/Author               /
ctr_1:	.ascid	/!21AS /

opt_2:	.ascid	/Conf_pointer	/
ctr_2:	.ascid	/!25AS/



opt_3:	.ascid	/Date ----------------->	/
ctr_3:	.ascid	/!%D	/



opt_4:	.ascid	/Hidden->	/
ctr_4:	.ascid	/Hidden=!UL	/

opt_5:	.ascid	/Keywords	/
ctr_5:	.ascid	/"!AS"	/

opt_6:	.ascid	/Lines	/
ctr_6:	.ascid	/!4UL /


opt_7:	.ascid	/Note      /
ctr_7:	.ascid	/!9AS /



opt_8:	.ascid	/Personal_name -------------------------------->	/
ctr_8:	.ascid	/"!45AS"	/

opt_9:	.ascid	/Replies	/
ctr_9:	.ascid	/"!4UL"	/


opt_10:	.ascid	/Title /
ctr_10:	.ascid	/"!32AS"/


opt_11:	.ascid	/Uid --->	/
ctr_11:	.ascid	/!XL	/

opt_12:	.ascid	/Extra	/
ctr_12:	.ascid	/"!AS"	/


ctr_15:	.ascid	/"!15AS"	/
opt_15:	.ascid	/File ----------->	/



no_used:	.ascid	/Report Options not used are.............../
ctr_nu:	
.ascid	/!AS !AS !AS !AS !AS !AS !AS !AS !AS !AS !AS !AS !AS/




Author:	.blkl	2

Dconf_point:	.blkl	2


null_st:	.blkb	100

hid_P:		.long	null_st
lin_p:		.long	null_st
rep_p:		.long	null_st
uid_p:		.long	null_st


noteX:		.blkl	2

perX:		.blkl	2

titX:		.blkl	2

not_yet:	.ascid	/not done yet/


faol_list:	.blkl	500
faol_point:	.blkl	1

extX:		.blkl	2





disp_i:		.word	note_id_i_len
		.word	notes$k_note_id
		.long	note_id_i
		.long	0
;
		.word	4
		.word	notes$k_nosignal
		.long	no_sig
		.long	0
;
		.word	4
i_ar:		.word	notes$k_note_all_responses
		.long	cont
		.long	0
;
		.word	8
sl1:		.word	notes$k_noop
sl2:		.long	0
		.long	0
;
		.word	8
sl3:		.word	notes$k_noop
sl4:		.long	0
		.long	0
;
		.word	4
str1:		.word	notes$k_noop
		.long	no_sig
		.long	0
;
		.word	4
str2:		.word	notes$k_noop
		.long	no_sig
		.long	0
;
		.word	4
kmr:		.word	notes$k_noop
		.long	no_sig
		.long	0
;
		.long	0




note_id_i:	.ascii	/999999999.*-1.0/
note_id_i_len = . - note_id_i


range:	.ascid	/RANGE/
range_v:	.long	100
		.long	range_v+8
		.blkb	100

output:	.ascid	/OUTPUT/

ctr_fn:	.ascid	+Output file is !AS+

Ttitle:		.ascid	/TITLE/
title_list:	.blkb	500

author_list:	.blkb	500
Tauthor:	.ascid	/AUTHOR/


tmp1:	.long	100
	.long	tmp1+8
	.blkb	100



since:	.ascid	/SINCE/
since_time:	.blkl	2

UNseen:	.ascid	/UNSEEN/

before_time:	.blkl	2
before:		.ascid	/BEFORE/




k_in:	.word	4
	.word	notes$k_nosignal
	.long	no_sig
	.long	0
;
	.word	4
	.word	notes$k_continue
	.long	no_sig
	.long	0
;
	.long	0




k_out:	.word	100
	.word	notes$k_keyword_name
	.long	keyword_name
	.long	keyword_name_len
;
	.long	0


keyword_name:		.blkb	100
keyword_name_len:	.blkl	1


key_point:		.blkl	1
key_d:			.long	0
			.long	key_d+8
			.blkb	500





file_name:	.blkl	2



Valuelst:	.word	0
		.word	Fscn$_name
		.long	0
;
		.long	0


ctr_title:	.ascid	/Conference  Title = "!AS"/
ctr_notice:	.ascid	/Conference Notice = "!AS"/

written:	.blkl	1

orig_id_len:	.blkl	1
orig_id:	.blkb	100

ctr_ast:	.ascid	/WORKING !! Current note !9AD, !UL notes listed/


fred:		.blkl	1


other_note_cont:	.blkl	1

	.end	



Author               Lines       Title
74.0      COVERT::COVERT          19 "London Area Code Split          "



Note      Author            Lines       Title
74.0      COVERT::COVERT          19 "London Area Code Split          "
