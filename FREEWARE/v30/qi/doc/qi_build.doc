QI_BUILD.DOC

QI_BUILD takes field data and builds a .INDEX file for all the indexable
fields.  If you wish, QI_BUILD will also create a .DATA file (although
running convert may be faster).  A couple of definitions here:
Database is the .INDEX, .DATA file combination (depending on if /DATA is given).
Record is the RMS record, i.e. input file line, i.e. ID, Field, Sequence tuple.
Field is all the records that match the ID number, Field number tuple.
Entry is all the fields that match the ID number.


QI_BUILD takes its arguments on the command line, so you must first create
a symbol to invoke the program:

BUILD := $device:[path]QI_BUILD.EXE

The syntax of the database build is:

BUILD input [switches...]

By default QI_BUILD reads the field definitions (input.CNF), input data
(input.DAT) and creates an index file (input.INDEX) and optionally a data
file (input.DATA).

QI_BUILD has several switches:

/CONFIGURATION=file specifies a CSO database configuration other than
	input.CNF.

/OUTPUT=file specifies a new file name for the .INDEX and .DATA files.

/DATA says to create or update a .DATA file as well as a .INDEX file.

/CREATE
/MERGE
/MERGE=REPLACE=ONE
/MERGE=REPLACE=ALL
/UPDATE

Only one of /CREATE, /MERGE or /UPDATE can be given and /UPDATE implies
/DATA.  If /DATA is given these switches apply to the .DATA file as well
as the .INDEX file.

/CREATE (the default) will create a new file.

/MERGE will add new records to an existing database.  If a duplicate record
	is found, an error message is displayed by default.
/MERGE=REPLACE=ONE (the default =REPLACE option) will replace duplicate
	records with the new instance.
/MERGE=REPLACE=ALL will replace all the subsequent records of a field (e.g.
	sequence numbers 02, 03, etc.) that had the duplicate record.

/UPDATE will replace a block of entries (specified with /START and /END)
	with the entries from the input file.  It differs from /DELETE/MERGE
	in that it will not change a record that was interactively modified.
	Also, since it only performs I/O if necessary, it's much faster.

/START=n (defaults 0)
/END=n   (defaults to 999999999)

/START and /END specify a range of ID numbers for /DELETE and /UPDATE.

/DELETE will delete a range of entries before performing a /MERGE (/DELETE
without /MERGE is just a slower way of performing /CREATE).


Both /MERGE and /UPDATE update an existing database file.  This file is
the same name as the input file with a file type of .INDEX (and .DATA if /DATA
is used) by default.  If you wish to use a .INDEX/.DATA file with a name other
than the input file name, specify it with /OUTPUT=<database file name>.
