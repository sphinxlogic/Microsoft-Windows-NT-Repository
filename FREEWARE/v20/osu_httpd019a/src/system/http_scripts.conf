# Define translation rules  for triggering scripts.  The following virtual
# script directories are defined:
#
#    /htbin/*			Runs scripts in www_root:[bin] via DECnet
#    /cgi-bin/*			(unix) fork-based CGI scripts.
#    /$mapimage/*		Builtin clickable image processing
#    /$omnimap/*		Dynamically loaded clickable image processing
#    /$testcgi/*		Test environment for dynamically loaded MST.
#    /tarserv/*			Connects to alternate DECnet-based scriptserver.
#
# Additionally, bind the following suffixes to virtual scripts:
#
#    .mapimage		/$omnimap/ncsa
#    .htimage		/$omnimap/htimage
#    .url		/$omnimap/url
#
# Enable check for image map requests (/$mapimage/*), restrict the config 
# files to residing in the /www directory tree (delete argument for
# unrestricted use of builtin mapimage).
#
ThreadPool imap stack=120000 q_flag=1 limit=10  
Service mapimage pool=imap builtin=mapimage
exec /$mapimage/* %mapimage:/www
#
# Define the primary directories for external scripts.  /htbin is used
# for external VMS scripts and /cgi-bin is used for unix scripts.
#
exec /htbin/* www_root:[bin]
service forkscript builtin=cgifork
map /cgi-bin/testfork/* /forkcgitest/*
fail /cgi-bin/*
map /forkcgitest/* /cgi-bin/testfork/*
exec /cgi-bin/* %forkscript:/www_root/cgi-bin/
#
# Configure the omnimap MST.  This dynamically loaded service handles mapping
# for multiple input file formats: htimage image maps, NCSA (mapimage) image
# maps, and indirection files (url).  Use same thread pool as  the mapimage
# builtin service.  Note that in use the omnimap script directory must include
# the name of one of its virtual scripts: /htime/, /ncsa/, /url/.
#
service omnimap pool=imap dynamic=(omnimap,http_omnimap_mst)
exec /$omnimap/* %omnimap:/www

suffix .mapimage application/mapimage
suffix .mapimage2 application/htimage
suffix .url application/url-redirect
presentation application/mapimage %omnimap:/ncsa
presentation application/htimage %omnimap:/htimage
presentation application/url-redirect %omnimap:/url
#
service testcgi pool=imap dynamic=(testcgi,http_testcgi_mst)
exec /$testcgi/* %testcgi:/blorp
#
# Configure the /tarserv/* exec directory to use the WWWTAR scriptserver.
# This scriptserver reads tar files and presents them as directories, letting
# you extract individual modules.
#
exec /tarserv/* sys$node::"0=WWWTAR"tar_archive:
#
