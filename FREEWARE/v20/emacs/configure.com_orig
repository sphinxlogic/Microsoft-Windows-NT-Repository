 

$! This is the VMS version of configure.in
$!#### Configuration script for GNU Emacs
$!#### Copyright (C) 1992 Free Software Foundation, Inc.
$
$!### Don't edit this script!
$!### This script was automatically generated by the `autoconf' program
$!### from the file `configure.com_in'.
$!### To rebuild it, execute the command
$!###	autoconf
$!### in the this directory.  You must have autoconf for VMS 
$!### version 1.4 or later.
$
$!### This file is part of GNU Emacs.
$
$!### GNU Emacs is free software; you can redistribute it and/or modify
$!### it under the terms of the GNU General Public License as published by
$!### the Free Software Foundation; either version 1, or (at your option)
$!### any later version.
$
$!### GNU Emacs is distributed in the hope that it will be useful,
$!### but WITHOUT ANY WARRANTY; without even the implied warranty of
$!### MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
$!### GNU General Public License for more details.
$
$!### You should have received a copy of the GNU General Public License
$!### along with GNU Emacs; see the file COPYING.  If not, write to
$!### the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.
$
$!### Since Emacs has configuration requirements that autoconf can't
$!### meet, this file is an unholy marriage of custom-baked
$!### configuration code and autoconf macros.
$!###
$!### We use the m4 quoting characters [ ] (as established by the
$!### autoconf system) to include large sections of raw sewage - Oops, I
$!### mean, shell code - in the final configuration script.
$!###
$!### Usage: @configure config_name
$!###
$!### If configure succeeds, it leaves its status in config.status.
$!### If configure fails after disturbing the status quo,
$!### 	config.status is removed.
$
$ progname = f$element(0,";",f$environment("procedure"))
$ say := write sys$output
$ sayerr := write sys$error
$
$!### Establish some default values
$ run_in_place=""
$ single_tree=""
$ force=""
$ with_debug_hack=""
$ startupdir:=sys$common:[sys$startup]
$ vuelibdir:=sys$common:[vue$library.user]
$ prefix:=sys$sysdevice:[gnu]
$ prefix_dev = f$parse(prefix,,,"NODE") + f$parse(prefix,,,"DEVICE")
$ prefix_dir = f$parse(prefix,,,"DIRECTORY") - "[" - "<" - "]" - ">"
$ exec_prefix="'prefix'"
$ exec_prefix_dev = "'prefix_dev'"
$ exec_prefix_dir = "'prefix_dir'"
$ bindir_dev="'exec_prefix_dev'"
$ bindir_dir="'exec_prefix_dir'.bin"
$ bindir="'bindir_dev'['bindir_dir']"
$ datadir_dev="'prefix_dev'"
$ datadir_dir="'prefix_dir'.lib"
$ datadir="'datadir_dev'['datadir_dir']"
$ statedir_dev="'prefix_dev'"
$ statedir_dir="'prefix_dir'.lib"
$ statedir="'statedir_dev'['statedir_dir']"
$ libdir_dev="'exec_prefix_dev'"
$ libdir_dir="'exec_prefix_dir'.lib"
$ libdir="'libdir_dev'['libdir_dir']"
$ mandir_dev="'prefix_dev'"
$ mandir_dir="'prefix_dir'.help"
$ mandir="'mandir_dev'['mandir_dir']"
$ infodir_dev="'prefix_dev'"
$ infodir_dir="'prefix_dir'.info"
$ infodir="'infodir_dev'['infodir_dir']"
$ lispdir_dev="'datadir_dev'"
$ lispdir_dir="'datadir_dir'.emacs.'version_us'.lisp"
$ lispdir="'lispdir_dev'['lispdir_dir']"
$ locallisppath="'datadir_dev'['datadir_dir'.emacs.site-lisp]"
$ lisppath="'locallisppath','lispdir'"
$ etcdir_dev="'datadir_dev'"
$ etcdir_dir="'datadir_dir'.emacs.'version_us'.etc"
$ etcdir="'etcdir_dev'['etcdir_dir']"
$ lockdir_dev="'statedir_dev'"
$ lockdir_dir="'statedir_dir'.emacs.lock"
$ lockdir="'lockdir_dev'['lockdir_dir']"
$ archlibdir_dev="'libdir_dev'"
$ archlibdir_dir="'libdir_dir'.emacs.'version_us'.'configuration'"
$ archlibdir="'archlibdir_dev'['archlibdir_dir']"
$ vmslibdir_dev="'libdir_dev'"
$ vmslibdir_dir="'libdir_dir'.emacs.vms"
$ vmslibdir="'vmslibdir_dev'['vmslibdir_dir']"
$
$!### These are all the options we have to change the different paths.
$ path_options="| PREFIX | EXEC_PREFIX | BINDIR | LIBDIR | ETCDIR | DATADIR"
$ path_options=path_options+" | ARCHLIBDIR | STATEDIR | MANDIR | INFODIR"
$ path_options=path_options+" | LISPDIR | LOCKDIR | LISPPATH | LOCALLISPPATH"
$ path_options=path_options+" | VMSLIBDIR | STARTUPDIR | VUELIBDIR |"
$
$ goto main
$!
$!!!! Usage messages. These are implemented as subroutine you GOSUB to.
$short_usage:
$ say "Usage: ''progname' CONFIGURATION [-OPTION[=VALUE] ...]"
$ say ""
$ say "Set compilation and installation parameters for GNU Emacs, and report."
$ say "CONFIGURATION specifies the machine and operating system to build for."
$ say "If you omit the CONFIGURATION, ''progname' will find out by itself."
$ say "--WITH-X			Support the X Window System."
$ say "--WITH-X=NO		Don't support X."
$ say "--WITH-GCC		Use GCC to compile Emacs."
$ say "--WITH-GCC=NO		Don't use GCC to compile Emacs."
$ say "--WITH-UCX		Use the Digital UCX TCP/IP kit."
$ say "--WITH-MULTINET		Use the MultiNet TCP/IP kit."
$ say "--WITH-DEBUG-HACK	Use the dirty debug hack.  See [.SRC]DESCRIP.MMS_IN_IN"
$ say "--RUN-IN-PLACE		Use libraries and data files directly out of the "
$ say "				source tree."
$ say "--SINGLE-TREE=dev:[dir]  Has the effect of creating a directory tree"
$ say "                         at dev:[dir...] which looks like:"
$ say "                           dev:[dir.BIN.configname] (emacs, etags, etc.)"
$ say "                           dev:[dir.BIN.configname.ETC] (movemail, etc.)"
$ say "                           dev:[dir.COMMON.LISP]  (emacs' lisp files)"
$ say "                           dev:[dir.COMMON.SITE-LISP] (local lisp files)"
$ say "                           dev:[dir.COMMON.LIB] (DOC, TUTORIAL, etc.)"
$ say "                           dev:[dir.COMMON.LOCK] (lockfiles)"
$ say "--SRCDIR=dir             Look for the Emacs source files in DIR."
$ say "--PREFIX=dir             Install files below DIR. Defaults to `''prefix''."
$ say "--FORCE                  Forces a reconfiguration."
$ say ""
$ say "You may also specify any of the `path' variables found in Makefile.in,"
$ say "including --bindir, --libdir, --etcdir, --infodir, and so on.  This allows"
$ say "you to override a single default location when configuring."
$ say ""
$ say "If successful, 'progname' leaves its status in config.status.  If"
$ say "unsuccessful after disturbing the status quo, it removes config.status.""
$ say ""
$ return
$!
$main:
$!#### Option processing.
$
$!### Record all the arguments, so we can save them in config.status.
$ arguments=f$edit("''p1' ''p2' ''p3' ''p4' ''p5' ''p6' ''p7' ''p8'",-
	"compress,trim")
$
$!### Don't use shift -- that destroys the argument list, which autoconf needs
$!### to produce config.status.  It turns out that "set - ${arguments}" doesn't
$!### work portably.
$!### In configure.in, it ended up using shift in any case, because some shells
$!### cannot expand ${10}.  We don't need it here, because a .COM file will not
$!### receive more than 8 arguments in any case.  And if it did, it would be no
$!### problem handling it. Thus, we don't need the quoted arguments either.
$ args_from_file := NO
$ arg_line = ""
$ index = 0
$ goto while
$arg_file_end:
$ close arg_file
$ args_from_file := NO
$ arg_line = ""
$while:
$ if index .lt. 8 .or. args_from_file
$  then
$   if .not. args_from_file
$    then
$     index = index+1
$     current_arg = p'index'
$    else
$    arg_file_loop1:
$     if arg_line .eqs. ""
$      then
$	read/error=arg_file_end/end=arg_file_end arg_file arg_line
$       goto arg_file_loop1
$      endif
$     current_arg = ""
$     arg_line = f$edit(arg_line,"TRIM")
$    arg_file_loop2:
$! sh sym arg_line
$     if arg_line .nes. ""
$      then
$       i1 = f$locate(" ",arg_line)
$      arg_file_loop3:
$       i2 = f$locate("""",arg_line)
$       if i2 .lt. i1
$        then
$         current_arg = current_arg + f$extract(0,i2,arg_line)
$         arg_line = f$extract(i2,f$length(arg_line)-i2,arg_line)
$         i1 = i1 - i2
$         i2 = f$locate("""",arg_line)
$         current_arg = current_arg + f$extract(0,i2,arg_line)
$         arg_line = f$extract(i2,f$length(arg_line)-i2,arg_line)
$         i1 = i1 - i2
$         if i1 .lt. i1 then goto arg_file_loop2: ! The space was between quotes
$         goto arg_file_loop3:
$        endif
$       current_arg = current_arg + f$extract(0,i1,arg_line)
$       arg_line = f$extract(i1,f$length(arg_line)-i1,arg_line)
$      endif
$     ! This should make sure the argument is treated the same way as a command
$     ! line argument.
$     current_arg := 'current_arg'
$    endif
$!
$! sh sym current_arg
$   if current_arg .nes. ""
$    then
$     if f$extract(0,1,current_arg) .eqs. "+"
$      then
$       open/read/error=arg_file_end arg_file 'f$extract(1,999,current_arg)'
$       args_from_file := YES
$       goto while
$      endif
$     if f$extract(0,1,current_arg) .eqs. "-"
$      then
$	p = current_arg
$      while2:
$	if f$extract(0,1,p) .eqs. "-"
$	 then
$	  p = f$extract(1,999,p)
$	  goto while2
$	 endif
$	opt = f$element(0,"=",p)
$	val = f$element(1,"=",p)
$	if val .eqs. "="
$	 then
$	  !!! If FOO is a boolean argument, --FOO is equivalent to
$	  !!! --FOO=yes.  Otherwise, the value comes from the next
$	  !!! argument - see below.
$	  valomitted = "YES"
$	  val = "YES"
$	 else
$	  valomitted = "NO"
$	 endif
$	tmp = f$element(0,"-",opt)
$	n = 1
$us_loop: ! us = underscore, not United States :-)
$	e = f$element(n,"-",opt)
$	n = n + 1
$	if e .nes. "-"
$	 then
$	  tmp = tmp + "_" + e
$	  goto us_loop
$	 endif
$	opt = f$edit(tmp,"upcase")
$	valu = f$edit(val,"upcase")
$
$	!! Process the option
$	if opt .nes. "WITH_X" then goto NOT_WITH_X
$	if f$extract(0,f$length(valu),"YES") .eqs. valu
$	 then
$	  val = "YES"
$	 else
$	  if f$extract(0,f$length(valu),"NO") .eqs. valu
$	   then
$	    val = "NO"
$	   else
$	    sayerr "''progname': the `--''opt'' option is supposed to have a boolean value."
$	    sayerr "Set it to either `yes' or `no'.""
$	    gosub short_usage
$	    exit 0
$	   endif
$	 endif
$	'opt'=val
$	goto while
$      NOT_WITH_X:
$	if opt .nes. "WITH_GCC" .and. opt .nes. "WITH_GNU_CC" then -
	goto NOT_WITH_GCC
$	if f$extract(0,f$length(valu),"YES") .eqs. valu
$	 then
$	  val = "YES"
$	 else
$	  if f$extract(0,f$length(valu),"NO") .eqs. valu
$	   then
$	    val = "NO"
$	   else
$	    sayerr "''progname': the `--''opt'' option is supposed to have a boolean value."
$	    sayerr "Set it to either `yes' or `no'.""
$	    gosub short_usage
$	    exit 0
$	   endif
$	 endif
$	with_gcc=val
$	goto while
$      NOT_WITH_GCC:
$	if opt .nes. "WITH_UCX" then goto NOT_WITH_UCX
$	if f$extract(0,f$length(valu),"YES") .eqs. valu
$	 then
$	  val = "YES"
$	 else
$	  if f$extract(0,f$length(valu),"NO") .eqs. valu
$	   then
$	    val = "NO"
$	   else
$	    sayerr "''progname': the `--''opt'' option is supposed to have a boolean value."
$	    sayerr "Set it to either `yes' or `no'.""
$	    gosub short_usage
$	    exit 0
$	   endif
$	 endif
$	'opt'=val
$	goto while
$      NOT_WITH_UCX:
$	if opt .nes. "WITH_MULTINET" then goto NOT_WITH_MULTINET
$	if f$extract(0,f$length(valu),"YES") .eqs. valu
$	 then
$	  val = "YES"
$	 else
$	  if f$extract(0,f$length(valu),"NO") .eqs. valu
$	   then
$	    val = "NO"
$	   else
$	    sayerr "''progname': the `--''opt'' option is supposed to have a boolean value."
$	    sayerr "Set it to either `yes' or `no'.""
$	    gosub short_usage
$	    exit 0
$	   endif
$	 endif
$	'opt'=val
$	goto while
$      NOT_WITH_MULTINET:
$	if opt .nes. "WITH_DEBUG_HACK" then goto NOT_WITH_DEBUG_HACK
$	with_debug_hack = "YES"
$	goto while
$      NOT_WITH_DEBUG_HACK:
$	if opt .nes. "SRCDIR" then goto NOT_SRCDIR
$	if valomitted
$	 then
$	  i = index + 1
$	  if index .eq. 8 .or. (index .lt. 8 .and. p'i' .eqs. "")
$	   then
$	    sayerr "''progname': You must give a value for the `--''opt'' option, as in"
$	    sayerr "    `--''opt'=FOO'."
$	    gosub short_usage
$	    exit 0
$	   endif
$	  index = i
$	  val = current_arg
$	 endif
$	SRCDIR = val
$	goto while
$      NOT_SRCDIR:
$	if opt .nes. "RUN_IN_PLACE" then goto NOT_RUN_IN_PLACE
$       single_tree="NO"
$       run_in_place="YES"
$	goto while
$      NOT_RUN_IN_PLACE:
$       if opt .nes. "SINGLE_TREE" then goto NOT_SINGLE_TREE
$       single_tree="YES"
$       run_in_place="NO"
$	goto while
$      NOT_SINGLE_TREE:
$!                ## Has the user specified one of the path_options?
$       if f$locate("| "+opt+" |", path_options) .ge. f$length(path_options) -
	then goto NO_PATH_OPTION
$       if valomitted
$	 then
$	  i = index + 1
$	  if index .eq. 8 .or. (index .lt. 8 .and. p'i' .eqs. "")
$	   then
$           sayerr "''progname': You must give a value for the `--''opt'' option, as in"
$           sayerr "    `--''opt'=FOO'."
$           gosub short_usage
$           exit 0
$	   endif
$	  index = i
$	  val = current_arg
$	 endif
$	if f$locate("PATH",opt) .ne. f$length(opt)
$	 then
$         'opt' = val
$         'opt'_specified = "YES"
$	 else
$         'opt'_dev = f$parse(val,,,"NODE")+f$parse(val,,,"DEVICE")
$         'opt'_dir = f$parse(val,,,"DIRECTORY")-"["-"<"-"]"-">"
$         'opt' = val
$         'opt'_specified = "YES"
$	 endif
$	goto while
$      NO_PATH_OPTION:
$	if opt .nes. "VERBOSE" then goto NOT_VERBOSE
$	VERBOSE = "YES"
$	goto while
$      NOT_VERBOSE:
$	if opt .eqs. "USAGE" .or. opt .eqs. "HELP"
$	 then
$	  gosub short_usage
$	  exit 1
$	 endif
$	if opt .nes. "FORCE" then goto NOT_FORCE
$	force = "YES"
$	goto while
$      NOT_FORCE:
$      else
$	!! Anything not starting with a hyphen we assume is a
$	!! configuration name.
$	!! This really is stupid... We know it is VMS, so we just cancel it.
$	configuration = current_arg
$      endif
$    endif
$   goto while
$  endif
$! done
$
$ if "''configuration'" .eqs. ""
$  then
$   ! We use 'avms' for AXP/VMS because stupid Digital made a new
$   ! version number serie for that one!
$   configuration = "alpha-dec-avms"
$   if f$getsyi("HW_MODEL") .ge. 1024 -
       .and. f$extract(1,1,f$getsyi("VERSION")) .nes. "1" then -
	configuration = "alpha-dec-vms"
$   if f$getsyi("HW_MODEL") .lt. 1024 then -
	configuration = "vax-dec-vms"
$   vms_version = f$extract(1,3,f$getsyi("version")) !! from V5.5-2 we have 5.5
$   vms_version_major = f$extract(0,1,vms_version)
$   vms_version_minor = f$extract(2,1,vms_version)
$   vms_version_tmp = vms_version_major+"-"+vms_version_minor
$   configuration = configuration + vms_version_tmp
$   canonical = configuration
$   use_avms_h := no
$   if f$element(0,"-",configuration) .eqs. "alpha" -
       .and. f$extract(0,4,f$element(2,"-",configuration)) .eqs. "avms" then -
	use_avms_h := yes
$  endif
$
$!#### Decide where the source is.
$ if "''SRCDIR'" .eqs. ""
$  then
$   !+
$   dirname=f$parse("A.;0",progname) - "A.;0"
$   dirname=dirname - ".][000000" - ".><000000" - ".>[000000" - ".]<000000"
$   dirname=dirname - "][" - "><" - ">[" - "]<"
$   if f$element(1,"<",dirname) .nes. "<" then -
	dirname = f$element(0,"<",dirname) + "[" + f$element(1,"<",dirname)
$   if f$element(1,">",dirname) .nes. ">" then -
	dirname = f$element(0,">",dirname) + "]" + f$element(1,">",dirname)
$   if dirname - "[000000." .nes. dirname then dirname = dirname - "000000."
$   !-
$   !! We know this file is in the root of the source
$   if f$search(dirname - "]" + ".SRC]LISP.H") .nes. "" -
	.and. f$search(dirname - "]" + ".LISP]VERSION.EL") .nes. ""
$    then
$     srcdir = dirname
$    else
$     if f$search("[.SRC]LISP.H") .nes. "" -
	.and. f$search("[.LISP]VERSION.EL") .nes. ""
$      then
$       srcdir = f$parse("A.;0") - "A.;0"
$      else
$	if f$search("[-.SRC]LISP.H") .nes. "" -
	.and. f$search("[-.LISP]VERSION.EL") .nes. ""
$	 then
$         srcdir = f$parse("[-]A.;0") - "A.;0"
$	 else
$	  sayerr "''progname': Neither the current directory nor its parent seem to"
$	  sayerr "contain the Emacs sources.  If you do not want to build Emacs in its"
$	  sayerr "source tree, you should run `''progname'' in the directory in which"
$	  sayerr "you wish to build Emacs, using its `--SRCDIR' option to say where the"
$	  sayerr "sources may be found."
$	  gosub short_usage
$	  exit 0
$	 endif
$      endif
$    endif
$  else
$   if f$search(srcdir - "]" + ".SRC]LISP.H") .eqs. "" -
	.or. f$search(srcdir - "]" + ".LISP]VERSION.EL") .eqs. ""
$    then
$     sayerr "''progname': The directory specified with the `--SRCDIR' option,"
$     sayerr "`''srcdir'', doesn't seem to contain the Emacs sources.  You should"
$     sayerr "either run the `''progname'' script at the top of the Emacs source"
$     sayerr "tree, or use the `--SRCDIR' option to specify where the Emacs sources"
$     sayerr "are."
$     gosub short_usage
$     exit 0
$    endif
$  endif
$!
$!#### Make srcdir absolute, if it isn't already.  It's important to
$!#### avoid running the path through pwd unnecessary, since pwd can
$!#### give you automounter prefixes, which can go away.
$ save_default = f$environment("DEFAULT")
$ set def 'srcdir'
$ srcdir = f$environment("DEFAULT")
$ set def 'save_default'
$
$!#### Check if the source directory already has a configured system in it.
$ if f$search (srcdir - "]" + ".SRC]CONFIG.H") .nes. "" .and. .not. force
$  then
$   sayerr "''progname': WARNING: The directory tree `''srcdir'' is being used"
$   sayerr "   as a build directory right now; it has been configured in its own"
$   sayerr "   right.  To  configure in another directory as well, you MUST"
$!#$   sayerr "   right.  To  configure in another directory as well, you MUST"
$!#$   sayerr "   use GNU make.  If you do not have GNU make, then you must"
$   sayerr "   now do `make distclean' in ''srcdir',"
$   sayerr "   and then run ''progname' again."
$!#AC_INSTALL_extrasub(LINE_BEGIN+("VPATH"+(((span(" "+ASCII(9))|"")+"="))
$!#$   extrasub="/^VPATH[      ]*=/c\
$!#! vpath %.c $(srcdir)\
$!#! vpath %.h $(srcdir)\
$!#! vpath %.y $(srcdir)\
$!#! vpath %.l $(srcdir)\
$!#! vpath %.s $(srcdir)\
$!#! vpath %.in $(srcdir)'
$   exit 0
$  endif
$!
$!### Make the necessary directories, if they don't exist.
$ dirs = "[.src] [.lib-src] [.cpp] [.oldXmenu] [.etc] [.vms]"
$ diri = 0
$dir_loop:
$ dir = f$element(diri," ",dirs)
$ diri = diri + 1
$ if dir .nes. " "
$  then
$   if f$parse(dir) .eqs. "" then create/directory 'dir'
$   goto dir_loop
$  endif
$! done
$
$!#### Given the configuration name, set machfile and opsysfile to the
$!#### names of the m/*.h and s/*.h files we should use.
$
$ sdir = srcdir  - "]" + ".SRC.S]"
$ !! Let's assume they come in rising version order...
$ max_tmp = ""
$ opsystmp = "vms"
$ if use_avms_h then opsystmp = "avms"
$conf_loop:
$ tmp = f$search("''sdir'''opsystmp'%*.H")
$ if tmp .nes. ""
$  then
$   tmp = f$parse(tmp,,,"NAME") - f$edit(opsystmp,"UPCASE")
$   test_major = f$element(0,"-",tmp)
$   test_minor = f$element(1,"-",tmp)
$   if tmp .les. vms_version_tmp .and. tmp .ges. max_tmp
$    then
$     max_tmp = tmp
$     machine = f$element(0,"-",configuration)
$     opsys = "''opsystmp'''tmp'"
$    endif
$   goto conf_loop
$  endif
$ say "Guessing the configuration to be ''configuration'"
$ machfile = "''machine'.h"
$ opsysfile = "''opsys'.h"
$!
$
$!# set noon
$!# I removed the following check for C compilers, because it doesn't
$!# belong here!
$!# CC = "CC"
$!# set noon		!do not bomb if an error occurs.
$!# def/user sys$output nla0:
$!# def/user sys$error nla0:
$!# cc nla0:compiler_check.c /NOLIST !# So we don't get no stupid listing if in
$!#				   !# Batch mode!!!!!
$!# if $status .eq. %x38090
$!#  then
$!#   cc = ""
$!#   def/user sys$output nla0:
$!#   def/user sys$error nla0:
$!#   gcc nla0:compiler_check.c
$!#   if $status .ne. %x38090
$!#    then
$!#     CC := GCC/nocase_hack
$!#    endif
$!#  else
$!#   CC := CC
$!#  endif
$!# if "''CC'" .eqs. ""
$!#  then
$!#   write sys$output "You must have a C compiler to build Emacs.  Sorry."
$!#   exit %x38090
$!#  endif
$!# def/user sys$output nla0:
$!# def/user sys$error nla0:
$!#
$ goto after_VMS_DELR
$VMS_DELR: subroutine
$ on control_y then goto VMS_DELR_STOP
$ on warning then goto VMS_DELR_exit
$ _VMS_DELR_def = f$trnlnm("SYS$DISK")+f$directory()
$ if f$parse(p1) .eqs. "" then exit
$ set default 'f$parse(p1,,,"DEVICE")''f$parse(p1,,,"DIRECTORY")'
$VMS_DELR_loop:
$ _fp = f$parse(".DIR",p1)
$ _f = f$search(_fp)
$ if _f .eqs. "" then goto VMS_DELR_loopend
$ call VMS_DELR [.'f$parse(_f,,,"NAME")']*.*
$ goto VMS_DELR_loop
$VMS_DELR_loopend:
$ _fp = f$parse(p1,".;*")
$ if f$search(_fp) .eqs. "" then goto VMS_DELR_exit
$ set noon
$ set file/prot=(S:RWED,O:RWED,G:RWED,W:RWED) '_fp'
$ set on
$ delete/nolog '_fp'
$VMS_DELR_exit:
$ set default '_VMS_DELR_def'
$ exit
$VMS_DELR_STOP:
$ set default '_VMS_DELR_def'
$ stop/id=""
$ exit
$ endsubroutine
$
$after_VMS_DELR:
$!
$ call VMS_DELR "conftest*.*"
$
$ goto ac_prepare_after_subs
$ac_prepare_compile:
$ __cflags = ""
$ if f$type(CFLAGS) .nes. "" then __cflags = CFLAGS
$ __defs = ""
$ if f$type(DEFS) .nes. "" then __defs = "/defin=("+DEFS+")"
$ __switches = ""
$ if f$type(ac_flags) .nes. "" then __switches = ac_flags
$ __incs = ""
$ if f$type(INCS) .nes. "" then __incs = "/include=("+INCS+")"
$ cc '__cflags' '__switches' '__defs' '__incs' conftest.c /object=conftest.obj
$ return
$ac_prepare_link:
$ open/write link_opt conftest.opt
$ libi = 0
$ if f$type(LIBS) .eqs. "" then libs = ""
$ac_prepare_link_loop:
$ lib1 = f$element(libi," ",libs)
$ libi = libi + 1
$ if lib1 .nes. " "
$  then
$   if lib1 .nes. "" then write link_opt lib1
$   goto ac_prepare_link_loop
$  endif
$ close link_opt
$ libc = ","
$ if "''OPTS'" .eqs. "" then libc = ""
$ link 'ldflags' conftest.obj,conftest.opt/opt 'libc' 'OPTS'
$ return
$ac_prepare_after_subs:
$
$ ldflags := /nouserlibrary
$ compile := gosub ac_prepare_compile
$ link_it := gosub ac_prepare_link
$
$ if f$search("CONFTEST*.*.*") .nes. "" then delete/nolog conftest*.*.*
$ if f$search("CONFDEFS.H.*") .nes. "" then delete/nolog confdefs.h.*
$
$ open/write foo confdefs.h
$ close foo
$
$!# A filename unique to this package, relative to the directory that
$!# configure is in, which we can look for to find out if srcdir is correct.
$ unique_file:=lisp.dir
$
$!# Find the source files, if location was not specified.
$ if "''srcdir'" .nes. "" then goto ac_prepare_srcdir_try
$  srcdirdefaulted := yes
$!# Try the directory containing this script, then `..'.
$  prog=f$environment("PROCEDURE")
$  _dummy = "''prog'" ! This is prog, for debugging
$  confdir=f$parse(prog,,,"NODE") + f$parse(prog,,,"DEVICE") + f$parse(prog,,,"DIRECTORY")
$  _dummy = "''confdir'" ! This is confdir, for debugging
$  if confdir .eqs. f$environment("DEFAULT") then confdir := []
$  srcdir=confdir
$  if f$search(srcdir+unique_file) .eqs. "" then srcdir := [-]
$ac_prepare_srcdir_try:
$ if f$search(srcdir+unique_file) .nes. "" then goto ac_prepare_srcdir2
$ if "''srcdirdefaulted'" then -
  write sys$error "configure: Can not find sources in `''confdir'' or `[-]'."
$ if .not. "''srcdirdefaulted'" then -
  write sys$error "configure: Can not find sources in `''srcdir''."
$ exit 0
$ac_prepare_srcdir2:
$!# The following are quite usefull
$ srcdir_dir = f$parse(srcdir,,,"DIRECTORY") - "[" - "]" - "<" - ">"
$ srcdir_dev = f$parse(srcdir,,,"DEVICE")
$!# Set default prefixes.
$ __tmp1 :=
$ if "''prefix'" .nes. "" then __tmp1 := 'prefix'
$ if __tmp1 .nes. ""
$  then
$   prefix_dir = f$parse(prefix,,,"DIRECTORY") - "[" - "]" - "<" - ">"
$   prefix_dev = f$parse(prefix,,,"DEVICE")
$  endif
$ __tmp2 :=
$ if "''exec_prefix'" .nes. "" then __tmp2 := 'exec_prefix'
$ if __tmp1 .nes. "" .and. __tmp2 .eqs. "" then exec_prefix=prefix
$ __tmp2 :=
$ if "''exec_prefix'" .nes. "" then __tmp2 := 'exec_prefix'
$ if __tmp2 .nes. ""
$  then
$   exec_prefix = __tmp2
$   exec_prefix_dir = f$parse(exec_prefix,,,"DIRECTORY") - "[" - "]" - "<" - ">"
$   exec_prefix_dev = f$parse(exec_prefix,,,"DEVICE")
$  endif
$
$
$!# Save the original args to write them into config.status later.
$ configure_args=f$edit("''p1' ''p2' ''p3' ''p4' ''p5' ''p6' ''p7' ''p8'","TRIM,COMPRESS")
$
$ 
$
$
$!#### Choose a compiler.
$ cc := cc
$ if "''WITH_GCC'" .eqs. "YES"
$  then
$   cc := gcc/nocase_hack
$   use_gcc := yes
$  else
 $ if "''CC'" .eqs. ""
$  then ! We are taking a risk here, because we are really trying to start
$	! the program. I hope we don't get caught by this.
$   set noon
$ __debug = f$trnlnm("DEBUG_CONFIGURE")
$ if .not. __debug then __save_mesg_VMS_LABLE0 = f$environment("MESSAGE")
$ if .not. __debug then set message/nofacility/noident/noseverity/notext
$   !# Gasp...
$   dummy = "cc"
$   dummy
$   _tmp = $status
$ if .not. __debug then set message '__save_mesg_VMS_LABLE0'
$   
$   set on
$   if _tmp .ne. %X038090 ! This is the code for an unknown verb
$    then
$     CC = "cc"
$    endif
$  endif
$ if "''CC'" .eqs. "" then CC="gcc"
$ if "''CC'" .nes. "" .and. "''verbose'" then write sys$output "	setting CC to ''CC'"
$
$!# Find out if we are using GNU C, under whatever name.
$ _GNU_C := no
$ _DEC_C := no
$ _VAX_C := no
$ __debug = f$trnlnm("DEBUG_CONFIGURE")
$ if .not. __debug then __save_mesg_VMS_LABLE1 = f$environment("MESSAGE")
$ if .not. __debug then set message/nofacility/noident/noseverity/notext
$ type sys$input /out=conftest.c
#ifdef __GNUC__
conftest___ _GNU_C:=yes
#endif
#ifdef __DECC
conftest___ _DEC_C:=yes
#else
#ifdef VAXC
conftest___ _VAX_C:=yes
#endif
#endif
$!#
$ CC/preprocess=conftest.out conftest.c
$ search conftest.out "conftest___" /out=conftest.out-stripped/noheader
$ if .not. __debug then set message '__save_mesg_VMS_LABLE1'
$ open/read ac_prog_cc_in conftest.out-stripped
$ac_prog_cc_read_loop:
$ read/end=ac_prog_cc_stop_reading ac_prog_cc_in foo
$ foo = f$extract(12,999,foo) ! Get rid of "conftest___ "
$ 'foo'
$ goto ac_prog_cc_read_loop
$ac_prog_cc_stop_reading:
$ close ac_prog_cc_in
$ if f$type(LIBS) .eqs. "" then LIBS = ""
$ if f$type(OPTS) .eqs. "" then OPTS = ""
$ sys_includes = ""
$ CFLAGS = ""
$ if _GNU_C
$  then
$   if OPTS .nes. ""
$    then OPTS = OPTS + ","
$    endif
$   OPTS := 'OPTS'GNU_CC:[000000]OPTIONS_SHR.OPT/opt
$  else
$   if _DEC_C
$    then
$     CFLAGS := /PREFIX=ALL /NESTED=INCLUDE
$    else
$     if LIBS .nes. ""
$      then LIBS = LIBS + " "
$      endif
$     LIBS = LIBS + "SYS$SHARE:VAXCRTL/SHARE"
$     sys_includes := vaxc$include:,sys$library:
$    endif
$   if sys_includes .nes. "" then defi/nolog sys 'sys_includes'
$  endif
$ ac_cflags = CFLAGS
$ set noon
$ delete conftest*.*.*
$ 
$  endif
$
$!#### Some other nice autoconf tests.  If you add a test here which
$!#### should make an entry in src/config.h, don't forget to add an
$!#### #undef clause to src/config.h.in for autoconf to modify.
$
$ write sys$output "Will use COPY instead of ln -s"
$ LN_S:=copy
$
$ write sys$output "checking how to run the C preprocessor"
$ if "''CPP'" .eqs. ""
$  then
$  !# This must be in double quotes, not single quotes, because CPP may get
$  !# substituted into the Makefile and ``${CC-cc}'' will simply confuse
$  !# make.  It must be expanded now.
$  CPP="''CC'/PREPROCESS"
  $ open/write conftest_file conftest.c
$ write conftest_file "#include ""confdefs.h"""
$ write conftest_file "#include <stdio.h>"
$ write conftest_file "Syntax Error"
$ close conftest_file
$ set noon
$ def/user sys$output conftest.err
$ def/user sys$error conftest.err
$ cpp conftest.c
$ set on
$ ac_test_cpp_flag = "YES"
$ if f$search("conftest.err") .nes. "" then -
	if f$file("conftest.err","EOF") .ne. 0 then -
	ac_test_cpp_flag = "no"
$ if ac_test_cpp_flag
$  then
$!
$  else
$ delete/nolog conftest*.*.*
$ write sys$error "What do I do now?"
$ exit 0
$  endif
$ dummy = f$search("foo.bar.1") ! To prevent f$search bug.
$ if f$search("CONFTEST*.*.*") .nes. "" then delete/nolog conftest*.*.*
$
$  endif
$ if "''verbose'" then write sys$output "	setting CPP to ''CPP'"
$
$ INSTALL:=copy/prot=(s:rwed,o:rwed,g:re,w:re)
$ if "''verbose'" then write sys$output "  setting INSTALL to ''INSTALL'"
$ INSTALL_PROGRAM:=copy/prot=(s:rwed,o:rwed,g:re,w:re)
$ if "''verbose'" then write sys$output "  setting INSTALL_PROGRAM to ''INSTALL_PROGRAM'"
$ INSTALL_DATA:=copy/prot=(s:rwed,o:rwed,g:re,w:re)
$ if "''verbose'" then write sys$output "  setting INSTALL_DATA to ''INSTALL_DATA'"
$
$ _prgs = "bison/yacc byacc yacc"
$ _i = 0
$ac_pc_VMS_LABLE0:
$  p = f$element(_i," ",_prgs)
$  _i = _i + 1
$  if p .nes. " "
$   then
$ if "''YACC'" .eqs. ""
$  then ! We are taking a risk here, because we are really trying to start
$	! the program. I hope we don't get caught by this.
$   set noon
$ __debug = f$trnlnm("DEBUG_CONFIGURE")
$ if .not. __debug then __save_mesg_VMS_LABLE2 = f$environment("MESSAGE")
$ if .not. __debug then set message/nofacility/noident/noseverity/notext
$   !# Gasp...
$   dummy = "''p'"
$   dummy
$   _tmp = $status
$ if .not. __debug then set message '__save_mesg_VMS_LABLE2'
$   
$   set on
$   if _tmp .ne. %X038090 ! This is the code for an unknown verb
$    then
$     YACC = "''p'"
$    endif
$  endif
$ if "''YACC'" .nes. "" .and. "''verbose'" then write sys$output "	setting YACC to ''YACC'"
$
$    if "''YACC'" .eqs. "" then goto ac_pc_VMS_LABLE0
$   endif
$
$
$
$ _ac_hh_l = "sys/timeb.h sys/time.h fcntl.h unistd.h"
$ _ac_hh_i = 0
$ac_hh_VMS_LABLE0:
$ _ac_hh_hdr_orig = f$element(_ac_hh_i," ",_ac_hh_l)
$ _ac_hh_hdr = "HAVE_" + _ac_hh_hdr_orig
$ _ac_hh_i = _ac_hh_i + 1
$ if _ac_hh_hdr_orig .nes. " "
$  then
$   _ac_hh_trhdr = ""
$   _ac_hh_c1 = "."
$   _ac_hh_c2 = "/"
$   _ac_hh_c = 1
$   _ac_hh_j = 0
$ac_hh_VMS_LABLE1:
$   _ac_hh_e = f$element(_ac_hh_j,_ac_hh_c'_ac_hh_c',_ac_hh_hdr)
$   _ac_hh_j = _ac_hh_j + 1
$   if _ac_hh_e .eqs. _ac_hh_c'_ac_hh_c'
$    then
$     if _ac_hh_c .eq. 1
$      then
$       _ac_hh_c = 2
$       _ac_hh_hdr = _ac_hh_trhdr
$       _ac_hh_trhdr = ""
$       _ac_hh_j = 0
$       goto ac_hh_VMS_LABLE1
$      endif
$    else
$     if _ac_hh_trhdr .nes. "" then -
	_ac_hh_trhdr = _ac_hh_trhdr + "_"
$     _ac_hh_trhdr = _ac_hh_trhdr + f$edit(_ac_hh_e,"UPCASE")
$     goto ac_hh_VMS_LABLE1
$    endif
$ write sys$output "checking for ''_ac_hh_hdr_orig'"
$ open/write conftest_file conftest.c
$ write conftest_file "#include ""confdefs.h"""
$ write conftest_file "#include <''_ac_hh_hdr_orig'>"
$ write conftest_file ""
$ close conftest_file
$ set noon
$ def/user sys$output conftest.err
$ def/user sys$error conftest.err
$ cpp conftest.c
$ set on
$ ac_test_cpp_flag = "YES"
$ if f$search("conftest.err") .nes. "" then -
	if f$file("conftest.err","EOF") .ne. 0 then -
	ac_test_cpp_flag = "no"
$ if ac_test_cpp_flag
$  then
$ delete/nolog conftest*.*.*
$!#
$ if f$type(DEFS_COUNTER) .eqs. "" then DEFS_COUNTER = 0
$ DEFS_COUNTER = DEFS_COUNTER + 1
$ if "''verbose'" then write sys$output -
"	defining ''_ac_hh_trhdr'"
$ open/append ac_define_file confdefs.h
$ write ac_define_file "#define ''_ac_hh_trhdr' 1"
$ close ac_define_file
$ DEFS'DEFS_COUNTER' = """''_ac_hh_trhdr'""=""1"""
$ if "''SEDDEFS_COUNTER'" .eqs. "" then SEDDEFS_COUNTER = 0
$ SEDDEFS_COUNTER = SEDDEFS_COUNTER + 1
$ SEDDEFS'SEDDEFS_COUNTER' = "SEDd(""''_ac_hh_trhdr'"",""1"");"
$ SEDDEFS_COUNTER = SEDDEFS_COUNTER + 1
$ SEDDEFS'SEDDEFS_COUNTER' = "SEDu(""''_ac_hh_trhdr'"",""1"");"
$ SEDDEFS_COUNTER = SEDDEFS_COUNTER + 1
$ SEDDEFS'SEDDEFS_COUNTER' = "SEDe(""''_ac_hh_trhdr'"",""1"");"
$
$  endif
$ dummy = f$search("foo.bar.1") ! To prevent f$search bug.
$ if f$search("CONFTEST*.*.*") .nes. "" then delete/nolog conftest*.*.*
$
$
$   goto ac_hh_VMS_LABLE0
$  endif
$
$ write sys$output "checking for ANSI C header files"
$ open/write conftest_file conftest.c
$ write conftest_file "#include ""confdefs.h"""
$ write conftest_file "#include <stdlib.h>"
$ write conftest_file "#include <stdarg.h>"
$ write conftest_file "#include <string.h>"
$ write conftest_file "#include <float.h>"
$ close conftest_file
$ set noon
$ def/user sys$output conftest.err
$ def/user sys$error conftest.err
$ cpp conftest.c
$ set on
$ ac_test_cpp_flag = "YES"
$ if f$search("conftest.err") .nes. "" then -
	if f$file("conftest.err","EOF") .ne. 0 then -
	ac_test_cpp_flag = "no"
$ if ac_test_cpp_flag
$  then
$ delete/nolog conftest*.*.*
$!# SunOS 4.x string.h does not declare mem*, contrary to ANSI.
$ open/write conftest_FILE conftest.c
$ write conftest_FILE "#include ""confdefs.h"""
$ write conftest_FILE "#include <string.h>"
$ close conftest_FILE
$ set noon
$!# def/user sys$error nla0:
$!# def/user sys$output nla0:
$ 'CPP'=conftest.out conftest.c
$ __debug = f$trnlnm("DEBUG_CONFIGURE")
$ if .not. __debug then __save_mesg_VMS_LABLE6 = f$environment("MESSAGE")
$ if .not. __debug then set message/nofacility/noident/noseverity/notext
$ search/out=nla0: conftest.out "memchr"
$ _tmp = $severity
$ if .not. __debug then set message '__save_mesg_VMS_LABLE6'
$
$ set on
$ if _tmp .eq. 1
$  then
$ delete/nolog conftest*.*.*
$!# SGI's /bin/cc from Irix-4.0.5 gets non-ANSI ctype macros unless using -ansi.
$   open/write conftest_file conftest.c
$   write conftest_file "#include ""confdefs.h"""
$   write conftest_file "#include <ctype.h>"
$   write conftest_file "#define ISLOWER(c) ('a' <= (c) && (c) <= 'z')"
$   write conftest_file "#define TOUPPER(c) (ISLOWER(c) ? 'A' + ((c) - 'a') : (c))"
$   write conftest_file "#define XOR(e,f) (((e) && !(f)) || (!(e) && (f)))"
$   write conftest_file "void exit();"
$   write conftest_file "int main () { int i; for (i = 0; i < 256; i++)"
$   write conftest_file "if (XOR (islower (i), ISLOWER (i)) || toupper (i) != TOUPPER (i)) exit(2);"
$   write conftest_file "exit (0); }"
$   write conftest_file ""
$   close conftest_file
$   set noon
$   _tmp = -1 ! Because DCL can't jump into the middle of an IF stmt
$ __debug = f$trnlnm("DEBUG_CONFIGURE")
$ if .not. __debug then __save_mesg_VMS_LABLE3 = f$environment("MESSAGE")
$ if .not. __debug then set message/nofacility/noident/noseverity/notext
$   compile
$ if .not. __debug then set message '__save_mesg_VMS_LABLE3'
$
$   if f$search("conftest.obj") .eqs. "" then goto ac_tp_VMS_LABLE0
$ __debug = f$trnlnm("DEBUG_CONFIGURE")
$ if .not. __debug then __save_mesg_VMS_LABLE4 = f$environment("MESSAGE")
$ if .not. __debug then set message/nofacility/noident/noseverity/notext
$   link_it
$   _tmp = $severity
$ if .not. __debug then set message '__save_mesg_VMS_LABLE4'
$
$   if _tmp .ne. 1 then goto ac_tp_VMS_LABLE0
$ __debug = f$trnlnm("DEBUG_CONFIGURE")
$ if .not. __debug then __save_mesg_VMS_LABLE5 = f$environment("MESSAGE")
$ if .not. __debug then set message/nofacility/noident/noseverity/notext
$   run conftest
$   _tmp = $status
$ if .not. __debug then set message '__save_mesg_VMS_LABLE5'
$
$   set on
$ ac_tp_VMS_LABLE0:
$   if _tmp .eq. 1 .or. _tmp .eq. 0 ! UNIXoid programs return 0 for success
$    then
$!#
$ if f$type(DEFS_COUNTER) .eqs. "" then DEFS_COUNTER = 0
$ DEFS_COUNTER = DEFS_COUNTER + 1
$ if "''verbose'" then write sys$output -
"	defining STDC_HEADERS"
$ open/append ac_define_file confdefs.h
$ write ac_define_file "#define STDC_HEADERS 1"
$ close ac_define_file
$ DEFS'DEFS_COUNTER' = """STDC_HEADERS""=""1"""
$ if "''SEDDEFS_COUNTER'" .eqs. "" then SEDDEFS_COUNTER = 0
$ SEDDEFS_COUNTER = SEDDEFS_COUNTER + 1
$ SEDDEFS'SEDDEFS_COUNTER' = "SEDd(""STDC_HEADERS"",""1"");"
$ SEDDEFS_COUNTER = SEDDEFS_COUNTER + 1
$ SEDDEFS'SEDDEFS_COUNTER' = "SEDu(""STDC_HEADERS"",""1"");"
$ SEDDEFS_COUNTER = SEDDEFS_COUNTER + 1
$ SEDDEFS'SEDDEFS_COUNTER' = "SEDe(""STDC_HEADERS"",""1"");"
$
$  else
$!
$    endif
$ if f$search("CONFTEST*.*.*") .nes. "" then delete/nolog conftest*.*.*
$
$  endif
$ dummy = f$search("foo.bar.1") ! To prevent f$search bug.
$ if f$search("CONFTEST*.*.*") .nes. "" then delete/nolog conftest*.*.*
$
$  endif
$ dummy = f$search("foo.bar.1") ! To prevent f$search bug.
$ if f$search("CONFTEST*.*.*") .nes. "" then delete/nolog conftest*.*.*
$
$
$ write sys$output "checking for whether time.h and sys/time.h may both be included"
$ open/write conftest_file conftest.c
$ write conftest_file "#include ""confdefs.h"""
$ write conftest_file "#include <sys/types.h>"
$ write conftest_file "#include <sys/time.h>"
$ write conftest_file "#include <time.h>"
$ write conftest_file "void exit();"
$ write conftest_file "int main() { exit(1); }"
$ write conftest_file "int t() { struct tm *tp; return 0; }"
$ close conftest_file
$ _ac_cc_flag = "NO"
$!# def/user sys$error nla0:
$!# def/user sys$output nla0:
$ set noon
$ __debug = f$trnlnm("DEBUG_CONFIGURE")
$ if .not. __debug then __save_mesg_VMS_LABLE7 = f$environment("MESSAGE")
$ if .not. __debug then set message/nofacility/noident/noseverity/notext
$ compile
$ if .not. __debug then set message '__save_mesg_VMS_LABLE7'
$
$ if f$search("conftest.obj") .nes. ""
$  then
$ __debug = f$trnlnm("DEBUG_CONFIGURE")
$ if .not. __debug then __save_mesg_VMS_LABLE8 = f$environment("MESSAGE")
$ if .not. __debug then set message/nofacility/noident/noseverity/notext
$   link_it
$   _tmp = $severity
$ if .not. __debug then set message '__save_mesg_VMS_LABLE8'
$
$   if _tmp .eq. 1
$    then
$     _ac_cc_flag = "YES"
$    endif
$  endif
$ set on
$ if _ac_cc_flag
$  then
$ delete/nolog conftest*.*.*
$!#
$ if f$type(DEFS_COUNTER) .eqs. "" then DEFS_COUNTER = 0
$ DEFS_COUNTER = DEFS_COUNTER + 1
$ if "''verbose'" then write sys$output -
"	defining TIME_WITH_SYS_TIME"
$ open/append ac_define_file confdefs.h
$ write ac_define_file "#define TIME_WITH_SYS_TIME 1"
$ close ac_define_file
$ DEFS'DEFS_COUNTER' = """TIME_WITH_SYS_TIME""=""1"""
$ if "''SEDDEFS_COUNTER'" .eqs. "" then SEDDEFS_COUNTER = 0
$ SEDDEFS_COUNTER = SEDDEFS_COUNTER + 1
$ SEDDEFS'SEDDEFS_COUNTER' = "SEDd(""TIME_WITH_SYS_TIME"",""1"");"
$ SEDDEFS_COUNTER = SEDDEFS_COUNTER + 1
$ SEDDEFS'SEDDEFS_COUNTER' = "SEDu(""TIME_WITH_SYS_TIME"",""1"");"
$ SEDDEFS_COUNTER = SEDDEFS_COUNTER + 1
$ SEDDEFS'SEDDEFS_COUNTER' = "SEDe(""TIME_WITH_SYS_TIME"",""1"");"
$
$ tm_in_sys_time="YES"
$  endif
$ dummy = f$search("foo.bar.1") ! To prevent f$search bug.
$ if f$search("CONFTEST*.*.*") .nes. "" then delete/nolog conftest*.*.*
$
$
$ write sys$output "checking for return type of signal handlers"
$ open/write conftest_file conftest.c
$ write conftest_file "#include ""confdefs.h"""
$ write conftest_file "#include <sys/types.h>"
$ write conftest_file "#include <signal.h>"
$ write conftest_file "#ifdef signal"
$ write conftest_file "#undef signal"
$ write conftest_file "#endif"
$ write conftest_file "extern void (*signal ()) ();"
$ write conftest_file "void exit();"
$ write conftest_file "int main() { exit(1); }"
$ write conftest_file "int t() { int i; return 0; }"
$ close conftest_file
$ _ac_cc_flag = "NO"
$!# def/user sys$error nla0:
$!# def/user sys$output nla0:
$ set noon
$ __debug = f$trnlnm("DEBUG_CONFIGURE")
$ if .not. __debug then __save_mesg_VMS_LABLE9 = f$environment("MESSAGE")
$ if .not. __debug then set message/nofacility/noident/noseverity/notext
$ compile
$ if .not. __debug then set message '__save_mesg_VMS_LABLE9'
$
$ if f$search("conftest.obj") .nes. ""
$  then
$ __debug = f$trnlnm("DEBUG_CONFIGURE")
$ if .not. __debug then __save_mesg_VMS_LABLE10 = f$environment("MESSAGE")
$ if .not. __debug then set message/nofacility/noident/noseverity/notext
$   link_it
$   _tmp = $severity
$ if .not. __debug then set message '__save_mesg_VMS_LABLE10'
$
$   if _tmp .eq. 1
$    then
$     _ac_cc_flag = "YES"
$    endif
$  endif
$ set on
$ if _ac_cc_flag
$  then
$ delete/nolog conftest*.*.*
$!#
$ if f$type(DEFS_COUNTER) .eqs. "" then DEFS_COUNTER = 0
$ DEFS_COUNTER = DEFS_COUNTER + 1
$ if "''verbose'" then write sys$output -
"	defining RETSIGTYPE to be void"
$ open/append ac_define_file confdefs.h
$ write ac_define_file "#define RETSIGTYPE void"
$ close ac_define_file
$ DEFS'DEFS_COUNTER' = """RETSIGTYPE""=""void"""
$ if "''SEDDEFS_COUNTER'" .eqs. "" then SEDDEFS_COUNTER = 0
$ SEDDEFS_COUNTER = SEDDEFS_COUNTER + 1
$ SEDDEFS'SEDDEFS_COUNTER' = "SEDd(""RETSIGTYPE"",""void"");"
$ SEDDEFS_COUNTER = SEDDEFS_COUNTER + 1
$ SEDDEFS'SEDDEFS_COUNTER' = "SEDu(""RETSIGTYPE"",""void"");"
$ SEDDEFS_COUNTER = SEDDEFS_COUNTER + 1
$ SEDDEFS'SEDDEFS_COUNTER' = "SEDe(""RETSIGTYPE"",""void"");"
$
$  else
$ delete/nolog conftest*.*.*
$!#
$ if f$type(DEFS_COUNTER) .eqs. "" then DEFS_COUNTER = 0
$ DEFS_COUNTER = DEFS_COUNTER + 1
$ if "''verbose'" then write sys$output -
"	defining RETSIGTYPE to be int"
$ open/append ac_define_file confdefs.h
$ write ac_define_file "#define RETSIGTYPE int"
$ close ac_define_file
$ DEFS'DEFS_COUNTER' = """RETSIGTYPE""=""int"""
$ if "''SEDDEFS_COUNTER'" .eqs. "" then SEDDEFS_COUNTER = 0
$ SEDDEFS_COUNTER = SEDDEFS_COUNTER + 1
$ SEDDEFS'SEDDEFS_COUNTER' = "SEDd(""RETSIGTYPE"",""int"");"
$ SEDDEFS_COUNTER = SEDDEFS_COUNTER + 1
$ SEDDEFS'SEDDEFS_COUNTER' = "SEDu(""RETSIGTYPE"",""int"");"
$ SEDDEFS_COUNTER = SEDDEFS_COUNTER + 1
$ SEDDEFS'SEDDEFS_COUNTER' = "SEDe(""RETSIGTYPE"",""int"");"
$
$  endif
$ dummy = f$search("foo.bar.1") ! To prevent f$search bug.
$ if f$search("CONFTEST*.*.*") .nes. "" then delete/nolog conftest*.*.*
$
$
$ write sys$output "checking for struct tm in time.h"
$ open/write conftest_file conftest.c
$ write conftest_file "#include ""confdefs.h"""
$ write conftest_file "#include <sys/types.h>"
$ write conftest_file "#include <time.h>"
$ write conftest_file "void exit();"
$ write conftest_file "int main() { exit(1); }"
$ write conftest_file "int t() { struct tm *tp; tp->tm_sec; return 0; }"
$ close conftest_file
$ _ac_cc_flag = "NO"
$!# def/user sys$error nla0:
$!# def/user sys$output nla0:
$ set noon
$ __debug = f$trnlnm("DEBUG_CONFIGURE")
$ if .not. __debug then __save_mesg_VMS_LABLE11 = f$environment("MESSAGE")
$ if .not. __debug then set message/nofacility/noident/noseverity/notext
$ compile
$ if .not. __debug then set message '__save_mesg_VMS_LABLE11'
$
$ if f$search("conftest.obj") .nes. ""
$  then
$ __debug = f$trnlnm("DEBUG_CONFIGURE")
$ if .not. __debug then __save_mesg_VMS_LABLE12 = f$environment("MESSAGE")
$ if .not. __debug then set message/nofacility/noident/noseverity/notext
$   link_it
$   _tmp = $severity
$ if .not. __debug then set message '__save_mesg_VMS_LABLE12'
$
$   if _tmp .eq. 1
$    then
$     _ac_cc_flag = "YES"
$    endif
$  endif
$ set on
$ if _ac_cc_flag
$  then
$!
$  else
$ delete/nolog conftest*.*.*
$!#
$ if f$type(DEFS_COUNTER) .eqs. "" then DEFS_COUNTER = 0
$ DEFS_COUNTER = DEFS_COUNTER + 1
$ if "''verbose'" then write sys$output -
"	defining TM_IN_SYS_TIME"
$ open/append ac_define_file confdefs.h
$ write ac_define_file "#define TM_IN_SYS_TIME 1"
$ close ac_define_file
$ DEFS'DEFS_COUNTER' = """TM_IN_SYS_TIME""=""1"""
$ if "''SEDDEFS_COUNTER'" .eqs. "" then SEDDEFS_COUNTER = 0
$ SEDDEFS_COUNTER = SEDDEFS_COUNTER + 1
$ SEDDEFS'SEDDEFS_COUNTER' = "SEDd(""TM_IN_SYS_TIME"",""1"");"
$ SEDDEFS_COUNTER = SEDDEFS_COUNTER + 1
$ SEDDEFS'SEDDEFS_COUNTER' = "SEDu(""TM_IN_SYS_TIME"",""1"");"
$ SEDDEFS_COUNTER = SEDDEFS_COUNTER + 1
$ SEDDEFS'SEDDEFS_COUNTER' = "SEDe(""TM_IN_SYS_TIME"",""1"");"
$
$  endif
$ dummy = f$search("foo.bar.1") ! To prevent f$search bug.
$ if f$search("CONFTEST*.*.*") .nes. "" then delete/nolog conftest*.*.*
$
$ if "''tm_in_sys_time'"
$  then decl = "sys/time.h"
$  else decl = "time.h"
$  endif
$ write sys$output "checking for tm_zone in struct tm"
$ open/write conftest_file conftest.c
$ write conftest_file "#include ""confdefs.h"""
$ write conftest_file "#include <sys/types.h>"
$ write conftest_file "#include <''decl'>"
$ write conftest_file ""
$ write conftest_file "void exit();"
$ write conftest_file "int main() { exit(1); }"
$ write conftest_file "int t() { struct tm tm; tm.tm_zone; return 0; }"
$ close conftest_file
$ _ac_cc_flag = "NO"
$!# def/user sys$error nla0:
$!# def/user sys$output nla0:
$ set noon
$ __debug = f$trnlnm("DEBUG_CONFIGURE")
$ if .not. __debug then __save_mesg_VMS_LABLE13 = f$environment("MESSAGE")
$ if .not. __debug then set message/nofacility/noident/noseverity/notext
$ compile
$ if .not. __debug then set message '__save_mesg_VMS_LABLE13'
$
$ if f$search("conftest.obj") .nes. ""
$  then
$ __debug = f$trnlnm("DEBUG_CONFIGURE")
$ if .not. __debug then __save_mesg_VMS_LABLE14 = f$environment("MESSAGE")
$ if .not. __debug then set message/nofacility/noident/noseverity/notext
$   link_it
$   _tmp = $severity
$ if .not. __debug then set message '__save_mesg_VMS_LABLE14'
$
$   if _tmp .eq. 1
$    then
$     _ac_cc_flag = "YES"
$    endif
$  endif
$ set on
$ if _ac_cc_flag
$  then
$ delete/nolog conftest*.*.*
$!#
$ if f$type(DEFS_COUNTER) .eqs. "" then DEFS_COUNTER = 0
$ DEFS_COUNTER = DEFS_COUNTER + 1
$ if "''verbose'" then write sys$output -
"	defining HAVE_TM_ZONE"
$ open/append ac_define_file confdefs.h
$ write ac_define_file "#define HAVE_TM_ZONE 1"
$ close ac_define_file
$ DEFS'DEFS_COUNTER' = """HAVE_TM_ZONE""=""1"""
$ if "''SEDDEFS_COUNTER'" .eqs. "" then SEDDEFS_COUNTER = 0
$ SEDDEFS_COUNTER = SEDDEFS_COUNTER + 1
$ SEDDEFS'SEDDEFS_COUNTER' = "SEDd(""HAVE_TM_ZONE"",""1"");"
$ SEDDEFS_COUNTER = SEDDEFS_COUNTER + 1
$ SEDDEFS'SEDDEFS_COUNTER' = "SEDu(""HAVE_TM_ZONE"",""1"");"
$ SEDDEFS_COUNTER = SEDDEFS_COUNTER + 1
$ SEDDEFS'SEDDEFS_COUNTER' = "SEDe(""HAVE_TM_ZONE"",""1"");"
$
$  else
$ delete/nolog conftest*.*.*
$ no_tm_zone=1
$  endif
$ dummy = f$search("foo.bar.1") ! To prevent f$search bug.
$ if f$search("CONFTEST*.*.*") .nes. "" then delete/nolog conftest*.*.*
$
$ if "''no_tm_zone'" .nes. ""
$  then
$ write sys$output "checking for tzname"
$ open/write conftest_file conftest.c
$ write conftest_file "#include ""confdefs.h"""
$ write conftest_file "#include <time.h>"
$ write conftest_file "#ifndef tzname /* For SGI.  */"
$ write conftest_file "extern char *tzname[]; /* RS6000 and others want it this way.  */"
$ write conftest_file "#endif"
$ write conftest_file "void exit();"
$ write conftest_file "int main() { exit(1); }"
$ write conftest_file "int t() { atoi(*tzname); return 0; }"
$ close conftest_file
$ _ac_cc_flag = "NO"
$!# def/user sys$error nla0:
$!# def/user sys$output nla0:
$ set noon
$ __debug = f$trnlnm("DEBUG_CONFIGURE")
$ if .not. __debug then __save_mesg_VMS_LABLE15 = f$environment("MESSAGE")
$ if .not. __debug then set message/nofacility/noident/noseverity/notext
$ compile
$ if .not. __debug then set message '__save_mesg_VMS_LABLE15'
$
$ if f$search("conftest.obj") .nes. ""
$  then
$ __debug = f$trnlnm("DEBUG_CONFIGURE")
$ if .not. __debug then __save_mesg_VMS_LABLE16 = f$environment("MESSAGE")
$ if .not. __debug then set message/nofacility/noident/noseverity/notext
$   link_it
$   _tmp = $severity
$ if .not. __debug then set message '__save_mesg_VMS_LABLE16'
$
$   if _tmp .eq. 1
$    then
$     _ac_cc_flag = "YES"
$    endif
$  endif
$ set on
$ if _ac_cc_flag
$  then
$ delete/nolog conftest*.*.*
$!#
$ if f$type(DEFS_COUNTER) .eqs. "" then DEFS_COUNTER = 0
$ DEFS_COUNTER = DEFS_COUNTER + 1
$ if "''verbose'" then write sys$output -
"	defining HAVE_TZNAME"
$ open/append ac_define_file confdefs.h
$ write ac_define_file "#define HAVE_TZNAME 1"
$ close ac_define_file
$ DEFS'DEFS_COUNTER' = """HAVE_TZNAME""=""1"""
$ if "''SEDDEFS_COUNTER'" .eqs. "" then SEDDEFS_COUNTER = 0
$ SEDDEFS_COUNTER = SEDDEFS_COUNTER + 1
$ SEDDEFS'SEDDEFS_COUNTER' = "SEDd(""HAVE_TZNAME"",""1"");"
$ SEDDEFS_COUNTER = SEDDEFS_COUNTER + 1
$ SEDDEFS'SEDDEFS_COUNTER' = "SEDu(""HAVE_TZNAME"",""1"");"
$ SEDDEFS_COUNTER = SEDDEFS_COUNTER + 1
$ SEDDEFS'SEDDEFS_COUNTER' = "SEDe(""HAVE_TZNAME"",""1"");"
$
$  endif
$ dummy = f$search("foo.bar.1") ! To prevent f$search bug.
$ if f$search("CONFTEST*.*.*") .nes. "" then delete/nolog conftest*.*.*
$
$ endif
$
$
$ write sys$output "checking for lack of working const"
$ open/write conftest_file conftest.c
$ write conftest_file "#include ""confdefs.h"""
$ write conftest_file "void exit();"
$ write conftest_file "int main() { exit(1); }"
$ write conftest_file "int t() { /* Ultrix mips cc rejects this.  */"
$ write conftest_file "typedef int charset[2]; const charset x;"
$ write conftest_file "/* SunOS 4.1.1 cc rejects this.  */"
$ write conftest_file "char const *const *ccp;"
$ write conftest_file "char **p;"
$ write conftest_file "/* AIX XL C 1.02.0.0 rejects this."
$ write conftest_file "   It does not let you subtract one const X* pointer from another in an arm"
$ write conftest_file "   of an if-expression whose if-part is not a constant expression */"
$ write conftest_file "const char *g = ""string"";"
$ write conftest_file "ccp = &g + (g ? g-g : 0);"
$ write conftest_file "/* HPUX 7.0 cc rejects these. */"
$ write conftest_file "++ccp;"
$ write conftest_file "p = (char**) ccp;"
$ write conftest_file "ccp = (char const *const *) p;"
$ write conftest_file "{ /* SCO 3.2v4 cc rejects this.  */"
$ write conftest_file "  char *t;"
$ write conftest_file "  char const *s = 0 ? (char *) 0 : (char const *) 0;"
$ write conftest_file ""
$ write conftest_file "  *t++ = 0;"
$ write conftest_file "}"
$ write conftest_file "{ /* Someone thinks the Sun supposedly-ANSI compiler will reject this.  */"
$ write conftest_file "  int x[] = {25,17};"
$ write conftest_file "  const int *foo = &x[0];"
$ write conftest_file "  ++foo;"
$ write conftest_file "}"
$ write conftest_file "{ /* Sun SC1.0 ANSI compiler rejects this -- but not the above. */"
$ write conftest_file "  typedef const int *iptr;"
$ write conftest_file "  iptr p = 0;"
$ write conftest_file "  ++p;"
$ write conftest_file "}"
$ write conftest_file "{ /* AIX XL C 1.02.0.0 rejects this saying"
$ write conftest_file "     ""k.c"", line 2.27: 1506-025 (S) Operand must be a modifiable lvalue. */"
$ write conftest_file "  struct s { int j; const int *ap[3]; };"
$ write conftest_file "  struct s *b; b->j = 5;"
$ write conftest_file "}"
$ write conftest_file "{ /* ULTRIX-32 V3.1 (Rev 9) vcc rejects this */"
$ write conftest_file "  const int foo = 10;"
$ write conftest_file "}"
$ write conftest_file " return 0; }"
$ close conftest_file
$ _ac_cc_flag = "NO"
$!# def/user sys$error nla0:
$!# def/user sys$output nla0:
$ set noon
$ __debug = f$trnlnm("DEBUG_CONFIGURE")
$ if .not. __debug then __save_mesg_VMS_LABLE17 = f$environment("MESSAGE")
$ if .not. __debug then set message/nofacility/noident/noseverity/notext
$ compile
$ if .not. __debug then set message '__save_mesg_VMS_LABLE17'
$
$ if f$search("conftest.obj") .nes. ""
$  then
$ __debug = f$trnlnm("DEBUG_CONFIGURE")
$ if .not. __debug then __save_mesg_VMS_LABLE18 = f$environment("MESSAGE")
$ if .not. __debug then set message/nofacility/noident/noseverity/notext
$   link_it
$   _tmp = $severity
$ if .not. __debug then set message '__save_mesg_VMS_LABLE18'
$
$   if _tmp .eq. 1
$    then
$     _ac_cc_flag = "YES"
$    endif
$  endif
$ set on
$ if _ac_cc_flag
$  then
$!
$  else
$ delete/nolog conftest*.*.*
$!#
$ if f$type(DEFS_COUNTER) .eqs. "" then DEFS_COUNTER = 0
$ DEFS_COUNTER = DEFS_COUNTER + 1
$ if "''verbose'" then write sys$output -
"	defining const to be empty"
$ open/append ac_define_file confdefs.h
$ write ac_define_file "#define const "
$ close ac_define_file
$ DEFS'DEFS_COUNTER' = """const""="""""
$ if "''SEDDEFS_COUNTER'" .eqs. "" then SEDDEFS_COUNTER = 0
$ SEDDEFS_COUNTER = SEDDEFS_COUNTER + 1
$ SEDDEFS'SEDDEFS_COUNTER' = "SEDd(""const"","""");"
$ SEDDEFS_COUNTER = SEDDEFS_COUNTER + 1
$ SEDDEFS'SEDDEFS_COUNTER' = "SEDu(""const"","""");"
$ SEDDEFS_COUNTER = SEDDEFS_COUNTER + 1
$ SEDDEFS'SEDDEFS_COUNTER' = "SEDe(""const"","""");"
$
$  endif
$ dummy = f$search("foo.bar.1") ! To prevent f$search bug.
$ if f$search("CONFTEST*.*.*") .nes. "" then delete/nolog conftest*.*.*
$
$
$ write sys$output "checking for long file names (vms has that!)"
$!#
$ if f$type(DEFS_COUNTER) .eqs. "" then DEFS_COUNTER = 0
$ DEFS_COUNTER = DEFS_COUNTER + 1
$ if "''verbose'" then write sys$output -
"	defining HAVE_LONG_FILE_NAMES"
$ open/append ac_define_file confdefs.h
$ write ac_define_file "#define HAVE_LONG_FILE_NAMES 1"
$ close ac_define_file
$ DEFS'DEFS_COUNTER' = """HAVE_LONG_FILE_NAMES""=""1"""
$ if "''SEDDEFS_COUNTER'" .eqs. "" then SEDDEFS_COUNTER = 0
$ SEDDEFS_COUNTER = SEDDEFS_COUNTER + 1
$ SEDDEFS'SEDDEFS_COUNTER' = "SEDd(""HAVE_LONG_FILE_NAMES"",""1"");"
$ SEDDEFS_COUNTER = SEDDEFS_COUNTER + 1
$ SEDDEFS'SEDDEFS_COUNTER' = "SEDu(""HAVE_LONG_FILE_NAMES"",""1"");"
$ SEDDEFS_COUNTER = SEDDEFS_COUNTER + 1
$ SEDDEFS'SEDDEFS_COUNTER' = "SEDe(""HAVE_LONG_FILE_NAMES"",""1"");"
$
$
$
$
$
$
$!#### Choose a TCP/IP package.
$ say "Checking TCP/IP package."
$ tcpip_package = ""
$ if "''with_ucx'" .eqs. "YES"
$  then tcpip_package = "UCX"
$  else if "''with_multinet'" .eqs. "YES"
$   then tcpip_package = "MultiNet"
$   else
$    say "  No TCP/IP package specified.  Looking for TCP/IP package."
$    if f$search("SYS$LIBRARY:UCX$IPC.OLB") .nes. "" -
	.or. f$search("SYS$SHARE:UCX$IPC_SHR.EXE") .nes. ""
$     then tcpip_package = "UCX"
$     else
$      if f$trnlnm("multinet") .nes. ""
$       then if f$search("MULTINET:MULTINET_SOCKET_LIBRARY.EXE") .nes. ""
$        then tcpip_package = "MultiNet"
$        endif
$       endif
$     endif
$   endif
$  endif
$ if tcpip_package .nes. ""
$  then
$   if tcpip_package .eqs. "UCX"
$    then
$     netinet_includes := vaxc$include:,sys$library:
$     arpa_includes := vaxc$include:,sys$library:
$    else if tcpip_package .eqs. "MultiNet"
$      then
$       a = f$trnlnm("multinet_root") - ".]"
$       netinet_includes := 'a'.netinet]
$       arpa_includes := 'a'.arpa]
$      endif
$    endif
$   defi netinet 'netinet_includes'
$   defi arpa 'arpa_includes'
$   have_sockets = "YES"
$   say "  Using ''tcpip_package'."
$  else
$   netinet_includes = ""
$   arpa_includes = ""
$   have_sockets = "NO"
$   say "  Using no TCP/IP package."
$  endif
$ 
$!#### Choose a window system.
$ say "Checking window system."
$
$ window_system=""
$ if "''with_x'" .eqs. "YES"
$  then window_system = "x11"
$  else if "''with_x'" .eqs. "NO" then window_system = "none"
$  endif
$ if window_system .eqs. ""
$  then
$   say "  No window system specified.  Looking for X11."
$   if f$trnlnm("DECW$INCLUDE") .nes. "" then window_system = "x11"
$  endif
$ if window_system .eqs. "x11" .or. window_system .eqs. ""
$  then
$   if f$type(x_includes) .eqs. "" .and. f$type(x_libraries) .eqs. ""
$    then
$!# If we find X, set shell vars x_includes and x_libraries to the paths.
$ write sys$output "checking for X include and library files"
$ if f$trnlnm("DECW$INCLUDE") .nes. "" then x_includes := DECW$INCLUDE:
$ if f$trnlnm("DECW$INCLUDE") .nes. "" then x_libraries := SYS$LIBRARY:
$ defi/nolog x11 'x_includes'
$
$    endif
$   if f$type(x_includes) .nes. "" .or. f$type(x_libraries) .nes. "" then window_system = "x11"
$  endif
$
$ if window_system .eqs. "" then window_system = "none"
$
$ if window_system .eqs. "x11"
$  then
$   have_x_windows = "YES"
$   have_x11 = "YES"
$   say "  Using X11."
$  else
$   have_x_windows = "NO"
$   have_x11 = "NO"
$   say "  Using no window system."
$  endif
$
$!### If we're using X11, we should use the X menu package.
$ have_x_menu = have_x11
$
$!#### Extract some information from the operating system and machine files.
$
$ say "Examining the machine- and system-dependent files to find out"
$ say " - which libraries the lib-src programs will want, and"
$ say " - whether the GNU malloc routines are usable."
$!### It's not important that this name contain the PID; you can't run
$!### two configures in the same directory and have anything work
$!### anyway.
$ tempcname="configure-tmp.c" ! Named this way so configure.com* don't get erased
$ open /write out 'tempcname'
$ sout := write out
$ sdir = srcdir - "]" + ".SRC.S]"
$ mdir = srcdir - "]" + ".SRC.M]"
$ if "''tcpip_package'" .nes. "" then -
	sout "#define ",f$edit(tcpip_package, "UPCASE")
$ sout "#include ""''sdir'''opsysfile'"""
$ sout "#include ""''mdir'''machfile'"""
$ type sys$input/output=out !This is a piece of dark DCL magic
/* Added for  */
#ifndef C_SWITCH_MACHINE
#define C_SWITCH_MACHINE
#endif
configure___ c_switch_machine:=C_SWITCH_MACHINE
#ifndef C_SWITCH_X_MACHINE
#define C_SWITCH_X_MACHINE
#endif
configure___ c_switch_x_machine:=C_SWITCH_X_MACHINE
#ifndef C_SWITCH_X_SYSTEM
#define C_SWITCH_X_SYSTEM
#endif
configure___ c_switch_x_system:=C_SWITCH_X_SYSTEM
#ifndef C_SWITCH_SITE
#define C_SWITCH_SITE
#endif
configure___ c_switch_site:=C_SWITCH_SITE
#ifndef C_SWITCH_X_SITE
#define C_SWITCH_X_SITE
#endif
configure___ c_switch_x_site:=C_SWITCH_X_SITE
/* End of  addition */
#ifndef LIBS_MACHINE
#define LIBS_MACHINE
#endif
#ifndef LIBS_SYSTEM
#define LIBS_SYSTEM
#endif
#ifndef C_SWITCH_SYSTEM
#define C_SWITCH_SYSTEM
#endif
configure___ libsrc_libs:=LIBS_MACHINE LIBS_SYSTEM
configure___ c_switch_system:=C_SWITCH_SYSTEM

#ifndef LIB_X11_LIB
#define LIB_X11_LIB sys$share:decw$xlibshr/share
#endif

#ifndef LIBX11_MACHINE
#define LIBX11_MACHINE
#endif

#ifndef LIBX11_SYSTEM
#define LIBX11_SYSTEM
#endif
configure___ LIBX:=LIB_X11_LIB LIBX11_MACHINE LIBX11_SYSTEM

#ifdef UNEXEC
configure___ unexec:=UNEXEC
#else
configure___ unexec:=,vmsmap.obj
#endif

#ifdef SYSTEM_MALLOC
configure___ system_malloc:=yes
#else
configure___ system_malloc:=no
#endif

#ifndef C_DEBUG_SWITCH
#define C_DEBUG_SWITCH /debug
#endif

#ifndef C_OPTIMIZE_SWITCH
#define C_OPTIMIZE_SWITCH 
#endif

#ifdef __GNUC__
configure___ __tmp:=C_DEBUG_SWITCH C_OPTIMIZE_SWITCH
#else
configure___ __tmp:=C_DEBUG_SWITCH
#endif
configure___ if f$type(CFLAGS) .eqs. "" then CFLAGS = ""
configure___ CFLAGS = CFLAGS + __tmp

$ close out
$
$ cc /preprocess='tempcname'-i /include=('mdir','sdir') 'tempcname'
$ search/nohead/output='tempcname'-stripped 'tempcname'-i "configure___"
$ open/read in 'tempcname'-stripped
$read_loop:
$ read/end=stop_reading in foo
$ foo = f$extract(12,999,foo) ! Get rid of "configure___"
$ 'foo'
$ goto read_loop
$stop_reading:
$ close in
$ delete/nolog 'tempcname'*.*
$
$!### Compute the unexec souce name from the object name.
$ UNEXEC_SRC = "$(srcdir)" + f$edit(unexec-",","UPCASE,TRIM") - ".OBJ" + ".C"
$
$!# Do the opsystem or machine files prohibit the use of the GNU malloc?
$!# Assume not, until told otherwise.
$ GNU_MALLOC="YES"
$ if "''system_malloc'" .eqs. ""
$  then
$   gnu_malloc = "NO"
$   gnu_malloc_reason = -
"(The GNU allocators don't work with this system configuration.)"
$  endif
$! if "''rel_alloc'" .eqs. "" then rel_alloc = gnu_malloc
$ rel_alloc = "NO" ! it doesn't work at the moment, and won't probably ever
$ lisp_float_type = "YES"
$
$!#### Add the libraries to LIBS and check for some functions.
$
$
$ ac_flags=c_switch_system+" "+cflags
$ LIBS=libsrc_libs
$
$
$
$ if "''HAVE_X11'" = "YES"
$  then
$   if "''C_SWITCH_X_SITE'" .nes. "" then ac_flags=C_SWITCH_X_SITE + " " + ac_flags
$   if "''LIBX'" .nes. "" then LIBS=LIBX + " " + LIBS
$   if "''LD_SWITCH_X_SITE'" .nes. "" then LDFLAGS=LD_SWITCH_X_SITE + " " + LDFLAGS
$ l = "XrmSetDatabase XScreenResourceString XScreenNumberOfScreen"
$ i = 0
$ac_hf_VMS_LABLE0:
$ func = f$element(i," ",l)
$ i = i + 1
$ if func .nes. " "
$  then
$   !# Translates all lower case characters to upper case
$   trfunc := HAVE_'FUNC'
$ write sys$output "checking for ''func'"
$ open/write conftest_file conftest.c
$ write conftest_file "#include ""confdefs.h"""
$ write conftest_file "#include <ctype.h>"
$ write conftest_file ""
$ write conftest_file "void exit();"
$ write conftest_file "int main() { exit(1); }"
$ write conftest_file "int t() { /* The GNU C library defines this for functions which it implements"
$ write conftest_file "    to always fail with ENOSYS.  Some functions are actually named"
$ write conftest_file "    something starting with __ and the normal name is an alias.  */"
$ write conftest_file "#if defined (__stub_''func') || defined (__stub___''func')"
$ write conftest_file "choke me"
$ write conftest_file "#else"
$ write conftest_file "/* Override any gcc2 internal prototype to avoid an error.  */"
$ write conftest_file "extern char ''func'(); ''func'();"
$ write conftest_file "#endif"
$ write conftest_file " return 0; }"
$ close conftest_file
$ _ac_cc_flag = "NO"
$!# def/user sys$error nla0:
$!# def/user sys$output nla0:
$ set noon
$ __debug = f$trnlnm("DEBUG_CONFIGURE")
$ if .not. __debug then __save_mesg_VMS_LABLE19 = f$environment("MESSAGE")
$ if .not. __debug then set message/nofacility/noident/noseverity/notext
$ compile
$ if .not. __debug then set message '__save_mesg_VMS_LABLE19'
$
$ if f$search("conftest.obj") .nes. ""
$  then
$ __debug = f$trnlnm("DEBUG_CONFIGURE")
$ if .not. __debug then __save_mesg_VMS_LABLE20 = f$environment("MESSAGE")
$ if .not. __debug then set message/nofacility/noident/noseverity/notext
$   link_it
$   _tmp = $severity
$ if .not. __debug then set message '__save_mesg_VMS_LABLE20'
$
$   if _tmp .eq. 1
$    then
$     _ac_cc_flag = "YES"
$    endif
$  endif
$ set on
$ if _ac_cc_flag
$  then
$ delete/nolog conftest*.*.*
$!#
$ if f$type(DEFS_COUNTER) .eqs. "" then DEFS_COUNTER = 0
$ DEFS_COUNTER = DEFS_COUNTER + 1
$ if "''verbose'" then write sys$output -
"	defining ''trfunc'"
$ open/append ac_define_file confdefs.h
$ write ac_define_file "#define ''trfunc' 1"
$ close ac_define_file
$ DEFS'DEFS_COUNTER' = """''trfunc'""=""1"""
$ if "''SEDDEFS_COUNTER'" .eqs. "" then SEDDEFS_COUNTER = 0
$ SEDDEFS_COUNTER = SEDDEFS_COUNTER + 1
$ SEDDEFS'SEDDEFS_COUNTER' = "SEDd(""''trfunc'"",""1"");"
$ SEDDEFS_COUNTER = SEDDEFS_COUNTER + 1
$ SEDDEFS'SEDDEFS_COUNTER' = "SEDu(""''trfunc'"",""1"");"
$ SEDDEFS_COUNTER = SEDDEFS_COUNTER + 1
$ SEDDEFS'SEDDEFS_COUNTER' = "SEDe(""''trfunc'"",""1"");"
$
$  endif
$ dummy = f$search("foo.bar.1") ! To prevent f$search bug.
$ if f$search("CONFTEST*.*.*") .nes. "" then delete/nolog conftest*.*.*
$
$   goto ac_hf_VMS_LABLE0
$  endif 
$
$  endif
$
$!# The Ultrix 4.2 mips built in alloca declared by alloca.h only works
$!# for constant arguments.  Useless!
$ write sys$output "checking for working alloca.h"
$ open/write conftest_file conftest.c
$ write conftest_file "#include ""confdefs.h"""
$ write conftest_file "#include <alloca.h>"
$ write conftest_file "void exit();"
$ write conftest_file "int main() { exit(1); }"
$ write conftest_file "int t() { char *p = alloca(2 * sizeof(int)); return 0; }"
$ close conftest_file
$ _ac_cc_flag = "NO"
$!# def/user sys$error nla0:
$!# def/user sys$output nla0:
$ set noon
$ __debug = f$trnlnm("DEBUG_CONFIGURE")
$ if .not. __debug then __save_mesg_VMS_LABLE21 = f$environment("MESSAGE")
$ if .not. __debug then set message/nofacility/noident/noseverity/notext
$ compile
$ if .not. __debug then set message '__save_mesg_VMS_LABLE21'
$
$ if f$search("conftest.obj") .nes. ""
$  then
$ __debug = f$trnlnm("DEBUG_CONFIGURE")
$ if .not. __debug then __save_mesg_VMS_LABLE22 = f$environment("MESSAGE")
$ if .not. __debug then set message/nofacility/noident/noseverity/notext
$   link_it
$   _tmp = $severity
$ if .not. __debug then set message '__save_mesg_VMS_LABLE22'
$
$   if _tmp .eq. 1
$    then
$     _ac_cc_flag = "YES"
$    endif
$  endif
$ set on
$ if _ac_cc_flag
$  then
$ delete/nolog conftest*.*.*
$!#
$ if f$type(DEFS_COUNTER) .eqs. "" then DEFS_COUNTER = 0
$ DEFS_COUNTER = DEFS_COUNTER + 1
$ if "''verbose'" then write sys$output -
"	defining HAVE_ALLOCA_H"
$ open/append ac_define_file confdefs.h
$ write ac_define_file "#define HAVE_ALLOCA_H 1"
$ close ac_define_file
$ DEFS'DEFS_COUNTER' = """HAVE_ALLOCA_H""=""1"""
$ if "''SEDDEFS_COUNTER'" .eqs. "" then SEDDEFS_COUNTER = 0
$ SEDDEFS_COUNTER = SEDDEFS_COUNTER + 1
$ SEDDEFS'SEDDEFS_COUNTER' = "SEDd(""HAVE_ALLOCA_H"",""1"");"
$ SEDDEFS_COUNTER = SEDDEFS_COUNTER + 1
$ SEDDEFS'SEDDEFS_COUNTER' = "SEDu(""HAVE_ALLOCA_H"",""1"");"
$ SEDDEFS_COUNTER = SEDDEFS_COUNTER + 1
$ SEDDEFS'SEDDEFS_COUNTER' = "SEDe(""HAVE_ALLOCA_H"",""1"");"
$
$  endif
$ dummy = f$search("foo.bar.1") ! To prevent f$search bug.
$ if f$search("CONFTEST*.*.*") .nes. "" then delete/nolog conftest*.*.*
$
$ write sys$output "checking for alloca"
$ open/write conftest_file conftest.c
$ write conftest_file "#include ""confdefs.h"""
$ write conftest_file "#ifdef __GNUC__"
$ write conftest_file "#define alloca __builtin_alloca"
$ write conftest_file "#else"
$ write conftest_file "#if HAVE_ALLOCA_H"
$ write conftest_file "#include <alloca.h>"
$ write conftest_file "#else"
$ write conftest_file "#ifdef _AIX"
$ write conftest_file " #pragma alloca"
$ write conftest_file "#else"
$ write conftest_file "char *alloca ();"
$ write conftest_file "#endif"
$ write conftest_file "#endif"
$ write conftest_file "#endif"
$ write conftest_file ""
$ write conftest_file "void exit();"
$ write conftest_file "int main() { exit(1); }"
$ write conftest_file "int t() { char *p = (char *) alloca(1); return 0; }"
$ close conftest_file
$ _ac_cc_flag = "NO"
$!# def/user sys$error nla0:
$!# def/user sys$output nla0:
$ set noon
$ __debug = f$trnlnm("DEBUG_CONFIGURE")
$ if .not. __debug then __save_mesg_VMS_LABLE23 = f$environment("MESSAGE")
$ if .not. __debug then set message/nofacility/noident/noseverity/notext
$ compile
$ if .not. __debug then set message '__save_mesg_VMS_LABLE23'
$
$ if f$search("conftest.obj") .nes. ""
$  then
$ __debug = f$trnlnm("DEBUG_CONFIGURE")
$ if .not. __debug then __save_mesg_VMS_LABLE24 = f$environment("MESSAGE")
$ if .not. __debug then set message/nofacility/noident/noseverity/notext
$   link_it
$   _tmp = $severity
$ if .not. __debug then set message '__save_mesg_VMS_LABLE24'
$
$   if _tmp .eq. 1
$    then
$     _ac_cc_flag = "YES"
$    endif
$  endif
$ set on
$ if _ac_cc_flag
$  then
$ delete/nolog conftest*.*.*
$!#
$ if f$type(DEFS_COUNTER) .eqs. "" then DEFS_COUNTER = 0
$ DEFS_COUNTER = DEFS_COUNTER + 1
$ if "''verbose'" then write sys$output -
"	defining HAVE_ALLOCA"
$ open/append ac_define_file confdefs.h
$ write ac_define_file "#define HAVE_ALLOCA 1"
$ close ac_define_file
$ DEFS'DEFS_COUNTER' = """HAVE_ALLOCA""=""1"""
$ if "''SEDDEFS_COUNTER'" .eqs. "" then SEDDEFS_COUNTER = 0
$ SEDDEFS_COUNTER = SEDDEFS_COUNTER + 1
$ SEDDEFS'SEDDEFS_COUNTER' = "SEDd(""HAVE_ALLOCA"",""1"");"
$ SEDDEFS_COUNTER = SEDDEFS_COUNTER + 1
$ SEDDEFS'SEDDEFS_COUNTER' = "SEDu(""HAVE_ALLOCA"",""1"");"
$ SEDDEFS_COUNTER = SEDDEFS_COUNTER + 1
$ SEDDEFS'SEDDEFS_COUNTER' = "SEDe(""HAVE_ALLOCA"",""1"");"
$
$  else
$ delete/nolog conftest*.*.*
$ alloca_missing=1
$ open/write conftest_file conftest.c
$ write conftest_file "#include ""confdefs.h"""
$ write conftest_file ""
$ write conftest_file "#if defined(CRAY) && ! defined(CRAY2)"
$ write conftest_file "winnitude"
$ write conftest_file "#else"
$ write conftest_file "lossage"
$ write conftest_file "#endif"
$ write conftest_file ""
$ close conftest_file
$ set noon
$!# def/user sys$error nla0:
$!# def/user sys$output nla0:
$ __debug = f$trnlnm("DEBUG_CONFIGURE")
$ if .not. __debug then __save_mesg_VMS_LABLE25 = f$environment("MESSAGE")
$ if .not. __debug then set message/nofacility/noident/noseverity/notext
$ CC/PREPROCESS=conftest.out conftest.c
$ search/out=nla0: conftest.out winnitude
$ _tmp = $status
$ if .not. __debug then set message '__save_mesg_VMS_LABLE25'
$
$ set on
$ if _tmp .eq. 1
$  then
$ delete/nolog conftest*.*.*
$ write sys$output "checking for _getb67"
$ open/write conftest_file conftest.c
$ write conftest_file "#include ""confdefs.h"""
$ write conftest_file "#include <ctype.h>"
$ write conftest_file ""
$ write conftest_file "void exit();"
$ write conftest_file "int main() { exit(1); }"
$ write conftest_file "int t() { /* The GNU C library defines this for functions which it implements"
$ write conftest_file "    to always fail with ENOSYS.  Some functions are actually named"
$ write conftest_file "    something starting with __ and the normal name is an alias.  */"
$ write conftest_file "#if defined (__stub__getb67) || defined (__stub____getb67)"
$ write conftest_file "choke me"
$ write conftest_file "#else"
$ write conftest_file "#ifndef _getb67 /* It might be implemented as a macro, as with DEC C for AXP */"
$ write conftest_file "/* Override any gcc2 internal prototype to avoid an error.  */"
$ write conftest_file "extern char _getb67();"
$ write conftest_file "#endif"
$ write conftest_file "_getb67();"
$ write conftest_file "#endif"
$ write conftest_file " return 0; }"
$ close conftest_file
$ _ac_cc_flag = "NO"
$!# def/user sys$error nla0:
$!# def/user sys$output nla0:
$ set noon
$ __debug = f$trnlnm("DEBUG_CONFIGURE")
$ if .not. __debug then __save_mesg_VMS_LABLE26 = f$environment("MESSAGE")
$ if .not. __debug then set message/nofacility/noident/noseverity/notext
$ compile
$ if .not. __debug then set message '__save_mesg_VMS_LABLE26'
$
$ if f$search("conftest.obj") .nes. ""
$  then
$ __debug = f$trnlnm("DEBUG_CONFIGURE")
$ if .not. __debug then __save_mesg_VMS_LABLE27 = f$environment("MESSAGE")
$ if .not. __debug then set message/nofacility/noident/noseverity/notext
$   link_it
$   _tmp = $severity
$ if .not. __debug then set message '__save_mesg_VMS_LABLE27'
$
$   if _tmp .eq. 1
$    then
$     _ac_cc_flag = "YES"
$    endif
$  endif
$ set on
$ if _ac_cc_flag
$  then
$ delete/nolog conftest*.*.*
$!#
$ if f$type(DEFS_COUNTER) .eqs. "" then DEFS_COUNTER = 0
$ DEFS_COUNTER = DEFS_COUNTER + 1
$ if "''verbose'" then write sys$output -
"	defining CRAY_STACKSEG_END to be _getb67"
$ open/append ac_define_file confdefs.h
$ write ac_define_file "#define CRAY_STACKSEG_END _getb67"
$ close ac_define_file
$ DEFS'DEFS_COUNTER' = """CRAY_STACKSEG_END""=""_getb67"""
$ if "''SEDDEFS_COUNTER'" .eqs. "" then SEDDEFS_COUNTER = 0
$ SEDDEFS_COUNTER = SEDDEFS_COUNTER + 1
$ SEDDEFS'SEDDEFS_COUNTER' = "SEDd(""CRAY_STACKSEG_END"",""_getb67"");"
$ SEDDEFS_COUNTER = SEDDEFS_COUNTER + 1
$ SEDDEFS'SEDDEFS_COUNTER' = "SEDu(""CRAY_STACKSEG_END"",""_getb67"");"
$ SEDDEFS_COUNTER = SEDDEFS_COUNTER + 1
$ SEDDEFS'SEDDEFS_COUNTER' = "SEDe(""CRAY_STACKSEG_END"",""_getb67"");"
$
$  else
$ delete/nolog conftest*.*.*
$ write sys$output "checking for GETB67"
$ open/write conftest_file conftest.c
$ write conftest_file "#include ""confdefs.h"""
$ write conftest_file "#include <ctype.h>"
$ write conftest_file ""
$ write conftest_file "void exit();"
$ write conftest_file "int main() { exit(1); }"
$ write conftest_file "int t() { /* The GNU C library defines this for functions which it implements"
$ write conftest_file "    to always fail with ENOSYS.  Some functions are actually named"
$ write conftest_file "    something starting with __ and the normal name is an alias.  */"
$ write conftest_file "#if defined (__stub_GETB67) || defined (__stub___GETB67)"
$ write conftest_file "choke me"
$ write conftest_file "#else"
$ write conftest_file "#ifndef GETB67 /* It might be implemented as a macro, as with DEC C for AXP */"
$ write conftest_file "/* Override any gcc2 internal prototype to avoid an error.  */"
$ write conftest_file "extern char GETB67();"
$ write conftest_file "#endif"
$ write conftest_file "GETB67();"
$ write conftest_file "#endif"
$ write conftest_file " return 0; }"
$ close conftest_file
$ _ac_cc_flag = "NO"
$!# def/user sys$error nla0:
$!# def/user sys$output nla0:
$ set noon
$ __debug = f$trnlnm("DEBUG_CONFIGURE")
$ if .not. __debug then __save_mesg_VMS_LABLE28 = f$environment("MESSAGE")
$ if .not. __debug then set message/nofacility/noident/noseverity/notext
$ compile
$ if .not. __debug then set message '__save_mesg_VMS_LABLE28'
$
$ if f$search("conftest.obj") .nes. ""
$  then
$ __debug = f$trnlnm("DEBUG_CONFIGURE")
$ if .not. __debug then __save_mesg_VMS_LABLE29 = f$environment("MESSAGE")
$ if .not. __debug then set message/nofacility/noident/noseverity/notext
$   link_it
$   _tmp = $severity
$ if .not. __debug then set message '__save_mesg_VMS_LABLE29'
$
$   if _tmp .eq. 1
$    then
$     _ac_cc_flag = "YES"
$    endif
$  endif
$ set on
$ if _ac_cc_flag
$  then
$ delete/nolog conftest*.*.*
$!#
$ if f$type(DEFS_COUNTER) .eqs. "" then DEFS_COUNTER = 0
$ DEFS_COUNTER = DEFS_COUNTER + 1
$ if "''verbose'" then write sys$output -
"	defining CRAY_STACKSEG_END to be GETB67"
$ open/append ac_define_file confdefs.h
$ write ac_define_file "#define CRAY_STACKSEG_END GETB67"
$ close ac_define_file
$ DEFS'DEFS_COUNTER' = """CRAY_STACKSEG_END""=""GETB67"""
$ if "''SEDDEFS_COUNTER'" .eqs. "" then SEDDEFS_COUNTER = 0
$ SEDDEFS_COUNTER = SEDDEFS_COUNTER + 1
$ SEDDEFS'SEDDEFS_COUNTER' = "SEDd(""CRAY_STACKSEG_END"",""GETB67"");"
$ SEDDEFS_COUNTER = SEDDEFS_COUNTER + 1
$ SEDDEFS'SEDDEFS_COUNTER' = "SEDu(""CRAY_STACKSEG_END"",""GETB67"");"
$ SEDDEFS_COUNTER = SEDDEFS_COUNTER + 1
$ SEDDEFS'SEDDEFS_COUNTER' = "SEDe(""CRAY_STACKSEG_END"",""GETB67"");"
$
$  else
$ delete/nolog conftest*.*.*
$ write sys$output "checking for getb67"
$ open/write conftest_file conftest.c
$ write conftest_file "#include ""confdefs.h"""
$ write conftest_file "#include <ctype.h>"
$ write conftest_file ""
$ write conftest_file "void exit();"
$ write conftest_file "int main() { exit(1); }"
$ write conftest_file "int t() { /* The GNU C library defines this for functions which it implements"
$ write conftest_file "    to always fail with ENOSYS.  Some functions are actually named"
$ write conftest_file "    something starting with __ and the normal name is an alias.  */"
$ write conftest_file "#if defined (__stub_getb67) || defined (__stub___getb67)"
$ write conftest_file "choke me"
$ write conftest_file "#else"
$ write conftest_file "/* Override any gcc2 internal prototype to avoid an error.  */"
$ write conftest_file "extern char getb67(); getb67();"
$ write conftest_file "#endif"
$ write conftest_file " return 0; }"
$ close conftest_file
$ _ac_cc_flag = "NO"
$!# def/user sys$error nla0:
$!# def/user sys$output nla0:
$ set noon
$ __debug = f$trnlnm("DEBUG_CONFIGURE")
$ if .not. __debug then __save_mesg_VMS_LABLE30 = f$environment("MESSAGE")
$ if .not. __debug then set message/nofacility/noident/noseverity/notext
$ compile
$ if .not. __debug then set message '__save_mesg_VMS_LABLE30'
$
$ if f$search("conftest.obj") .nes. ""
$  then
$ __debug = f$trnlnm("DEBUG_CONFIGURE")
$ if .not. __debug then __save_mesg_VMS_LABLE31 = f$environment("MESSAGE")
$ if .not. __debug then set message/nofacility/noident/noseverity/notext
$   link_it
$   _tmp = $severity
$ if .not. __debug then set message '__save_mesg_VMS_LABLE31'
$
$   if _tmp .eq. 1
$    then
$     _ac_cc_flag = "YES"
$    endif
$  endif
$ set on
$ if _ac_cc_flag
$  then
$ delete/nolog conftest*.*.*
$!#
$ if f$type(DEFS_COUNTER) .eqs. "" then DEFS_COUNTER = 0
$ DEFS_COUNTER = DEFS_COUNTER + 1
$ if "''verbose'" then write sys$output -
"	defining CRAY_STACKSEG_END to be getb67"
$ open/append ac_define_file confdefs.h
$ write ac_define_file "#define CRAY_STACKSEG_END getb67"
$ close ac_define_file
$ DEFS'DEFS_COUNTER' = """CRAY_STACKSEG_END""=""getb67"""
$ if "''SEDDEFS_COUNTER'" .eqs. "" then SEDDEFS_COUNTER = 0
$ SEDDEFS_COUNTER = SEDDEFS_COUNTER + 1
$ SEDDEFS'SEDDEFS_COUNTER' = "SEDd(""CRAY_STACKSEG_END"",""getb67"");"
$ SEDDEFS_COUNTER = SEDDEFS_COUNTER + 1
$ SEDDEFS'SEDDEFS_COUNTER' = "SEDu(""CRAY_STACKSEG_END"",""getb67"");"
$ SEDDEFS_COUNTER = SEDDEFS_COUNTER + 1
$ SEDDEFS'SEDDEFS_COUNTER' = "SEDe(""CRAY_STACKSEG_END"",""getb67"");"
$
$  endif
$ dummy = f$search("foo.bar.1") ! To prevent f$search bug.
$ if f$search("CONFTEST*.*.*") .nes. "" then delete/nolog conftest*.*.*
$
$  endif
$ dummy = f$search("foo.bar.1") ! To prevent f$search bug.
$ if f$search("CONFTEST*.*.*") .nes. "" then delete/nolog conftest*.*.*
$
$  endif
$ dummy = f$search("foo.bar.1") ! To prevent f$search bug.
$ if f$search("CONFTEST*.*.*") .nes. "" then delete/nolog conftest*.*.*
$
$  endif
$ dummy = f$search("foo.bar.1") ! To prevent f$search bug.
$ if f$search("CONFTEST*.*.*") .nes. "" then delete/nolog conftest*.*.*
$
$
$  endif
$ dummy = f$search("foo.bar.1") ! To prevent f$search bug.
$ if f$search("CONFTEST*.*.*") .nes. "" then delete/nolog conftest*.*.*
$
$ if "''alloca_missing'" .nes. ""
$  then
$   !# The SVR3 libPW and SVR4 libucb both contain incompatible functions
$   !# that cause trouble.  Some versions do not even contain alloca or
$   !# contain a buggy version.  If you still want to use their alloca,
$   !# use ar to extract alloca.o from them instead of compiling alloca.c.
$   ALLOCA=",alloca.obj"
$!#
$ if f$type(DEFS_COUNTER) .eqs. "" then DEFS_COUNTER = 0
$ DEFS_COUNTER = DEFS_COUNTER + 1
$ if "''verbose'" then write sys$output -
"	defining C_ALLOCA"
$ open/append ac_define_file confdefs.h
$ write ac_define_file "#define C_ALLOCA 1"
$ close ac_define_file
$ DEFS'DEFS_COUNTER' = """C_ALLOCA""=""1"""
$ if "''SEDDEFS_COUNTER'" .eqs. "" then SEDDEFS_COUNTER = 0
$ SEDDEFS_COUNTER = SEDDEFS_COUNTER + 1
$ SEDDEFS'SEDDEFS_COUNTER' = "SEDd(""C_ALLOCA"",""1"");"
$ SEDDEFS_COUNTER = SEDDEFS_COUNTER + 1
$ SEDDEFS'SEDDEFS_COUNTER' = "SEDu(""C_ALLOCA"",""1"");"
$ SEDDEFS_COUNTER = SEDDEFS_COUNTER + 1
$ SEDDEFS'SEDDEFS_COUNTER' = "SEDe(""C_ALLOCA"",""1"");"
$
$
$   write sys$output "checking stack direction for C alloca"
$ write sys$output "checking whether cross-compiling"
$!# If we cannot run a trivial program, we must be cross compiling.
$   open/write conftest_file conftest.c
$   write conftest_file "#include ""confdefs.h"""
$   write conftest_file "void exit();main(){exit(0);}"
$   close conftest_file
$   set noon
$   _tmp = -1 ! Because DCL can't jump into the middle of an IF stmt
$ __debug = f$trnlnm("DEBUG_CONFIGURE")
$ if .not. __debug then __save_mesg_VMS_LABLE32 = f$environment("MESSAGE")
$ if .not. __debug then set message/nofacility/noident/noseverity/notext
$   compile
$ if .not. __debug then set message '__save_mesg_VMS_LABLE32'
$
$   if f$search("conftest.obj") .eqs. "" then goto ac_tp_VMS_LABLE1
$ __debug = f$trnlnm("DEBUG_CONFIGURE")
$ if .not. __debug then __save_mesg_VMS_LABLE33 = f$environment("MESSAGE")
$ if .not. __debug then set message/nofacility/noident/noseverity/notext
$   link_it
$   _tmp = $severity
$ if .not. __debug then set message '__save_mesg_VMS_LABLE33'
$
$   if _tmp .ne. 1 then goto ac_tp_VMS_LABLE1
$ __debug = f$trnlnm("DEBUG_CONFIGURE")
$ if .not. __debug then __save_mesg_VMS_LABLE34 = f$environment("MESSAGE")
$ if .not. __debug then set message/nofacility/noident/noseverity/notext
$   run conftest
$   _tmp = $status
$ if .not. __debug then set message '__save_mesg_VMS_LABLE34'
$
$   set on
$ ac_tp_VMS_LABLE1:
$   if _tmp .eq. 1 .or. _tmp .eq. 0 ! UNIXoid programs return 0 for success
$    then
$!
$  else
$ cross_compiling=1
$    endif
$ if f$search("CONFTEST*.*.*") .nes. "" then delete/nolog conftest*.*.*
$
$
$ if "''cross_compiling'" .nes. ""
$  then
$!#
$ if f$type(DEFS_COUNTER) .eqs. "" then DEFS_COUNTER = 0
$ DEFS_COUNTER = DEFS_COUNTER + 1
$ if "''verbose'" then write sys$output -
"	defining STACK_DIRECTION to be 0"
$ open/append ac_define_file confdefs.h
$ write ac_define_file "#define STACK_DIRECTION 0"
$ close ac_define_file
$ DEFS'DEFS_COUNTER' = """STACK_DIRECTION""=""0"""
$ if "''SEDDEFS_COUNTER'" .eqs. "" then SEDDEFS_COUNTER = 0
$ SEDDEFS_COUNTER = SEDDEFS_COUNTER + 1
$ SEDDEFS'SEDDEFS_COUNTER' = "SEDd(""STACK_DIRECTION"",""0"");"
$ SEDDEFS_COUNTER = SEDDEFS_COUNTER + 1
$ SEDDEFS'SEDDEFS_COUNTER' = "SEDu(""STACK_DIRECTION"",""0"");"
$ SEDDEFS_COUNTER = SEDDEFS_COUNTER + 1
$ SEDDEFS'SEDDEFS_COUNTER' = "SEDe(""STACK_DIRECTION"",""0"");"
$
$  else
$   open/write conftest_file conftest.c
$   write conftest_file "#include ""confdefs.h"""
$   write conftest_file "find_stack_direction ()"
$   write conftest_file "{"
$   write conftest_file "  static char *addr = 0;"
$   write conftest_file "  auto char dummy;"
$   write conftest_file "  if (addr == 0)"
$   write conftest_file "    {"
$   write conftest_file "      addr = &dummy;"
$   write conftest_file "      return find_stack_direction ();"
$   write conftest_file "    }"
$   write conftest_file "  else"
$   write conftest_file "    return (&dummy > addr) ? 1 : -1;"
$   write conftest_file "}"
$   write conftest_file "void exit();"
$   write conftest_file "main ()"
$   write conftest_file "{"
$   write conftest_file "  exit (find_stack_direction() < 0 ? 2 : 1); /* slightly changed for VMS */"
$   write conftest_file "}"
$   close conftest_file
$   set noon
$   _tmp = -1 ! Because DCL can't jump into the middle of an IF stmt
$ __debug = f$trnlnm("DEBUG_CONFIGURE")
$ if .not. __debug then __save_mesg_VMS_LABLE35 = f$environment("MESSAGE")
$ if .not. __debug then set message/nofacility/noident/noseverity/notext
$   compile
$ if .not. __debug then set message '__save_mesg_VMS_LABLE35'
$
$   if f$search("conftest.obj") .eqs. "" then goto ac_tp_VMS_LABLE2
$ __debug = f$trnlnm("DEBUG_CONFIGURE")
$ if .not. __debug then __save_mesg_VMS_LABLE36 = f$environment("MESSAGE")
$ if .not. __debug then set message/nofacility/noident/noseverity/notext
$   link_it
$   _tmp = $severity
$ if .not. __debug then set message '__save_mesg_VMS_LABLE36'
$
$   if _tmp .ne. 1 then goto ac_tp_VMS_LABLE2
$ __debug = f$trnlnm("DEBUG_CONFIGURE")
$ if .not. __debug then __save_mesg_VMS_LABLE37 = f$environment("MESSAGE")
$ if .not. __debug then set message/nofacility/noident/noseverity/notext
$   run conftest
$   _tmp = $status
$ if .not. __debug then set message '__save_mesg_VMS_LABLE37'
$
$   set on
$ ac_tp_VMS_LABLE2:
$   if _tmp .eq. 1 .or. _tmp .eq. 0 ! UNIXoid programs return 0 for success
$    then
$!#
$ if f$type(DEFS_COUNTER) .eqs. "" then DEFS_COUNTER = 0
$ DEFS_COUNTER = DEFS_COUNTER + 1
$ if "''verbose'" then write sys$output -
"	defining STACK_DIRECTION to be 1"
$ open/append ac_define_file confdefs.h
$ write ac_define_file "#define STACK_DIRECTION 1"
$ close ac_define_file
$ DEFS'DEFS_COUNTER' = """STACK_DIRECTION""=""1"""
$ if "''SEDDEFS_COUNTER'" .eqs. "" then SEDDEFS_COUNTER = 0
$ SEDDEFS_COUNTER = SEDDEFS_COUNTER + 1
$ SEDDEFS'SEDDEFS_COUNTER' = "SEDd(""STACK_DIRECTION"",""1"");"
$ SEDDEFS_COUNTER = SEDDEFS_COUNTER + 1
$ SEDDEFS'SEDDEFS_COUNTER' = "SEDu(""STACK_DIRECTION"",""1"");"
$ SEDDEFS_COUNTER = SEDDEFS_COUNTER + 1
$ SEDDEFS'SEDDEFS_COUNTER' = "SEDe(""STACK_DIRECTION"",""1"");"
$
$  else
$!#
$ if f$type(DEFS_COUNTER) .eqs. "" then DEFS_COUNTER = 0
$ DEFS_COUNTER = DEFS_COUNTER + 1
$ if "''verbose'" then write sys$output -
"	defining STACK_DIRECTION to be -1"
$ open/append ac_define_file confdefs.h
$ write ac_define_file "#define STACK_DIRECTION -1"
$ close ac_define_file
$ DEFS'DEFS_COUNTER' = """STACK_DIRECTION""=""-1"""
$ if "''SEDDEFS_COUNTER'" .eqs. "" then SEDDEFS_COUNTER = 0
$ SEDDEFS_COUNTER = SEDDEFS_COUNTER + 1
$ SEDDEFS'SEDDEFS_COUNTER' = "SEDd(""STACK_DIRECTION"",""-1"");"
$ SEDDEFS_COUNTER = SEDDEFS_COUNTER + 1
$ SEDDEFS'SEDDEFS_COUNTER' = "SEDu(""STACK_DIRECTION"",""-1"");"
$ SEDDEFS_COUNTER = SEDDEFS_COUNTER + 1
$ SEDDEFS'SEDDEFS_COUNTER' = "SEDe(""STACK_DIRECTION"",""-1"");"
$
$    endif
$  endif
$ if f$search("CONFTEST*.*.*") .nes. "" then delete/nolog conftest*.*.*
$
$ endif
$ 
$
$
$!# logb and frexp are found in -lm on most systems.
$ l = "gettimeofday gethostname dup2 rename closedir mkdir rmdir random bcopy logb frexp ftime"
$ i = 0
$ac_hf_VMS_LABLE1:
$ func = f$element(i," ",l)
$ i = i + 1
$ if func .nes. " "
$  then
$   !# Translates all lower case characters to upper case
$   trfunc := HAVE_'FUNC'
$ write sys$output "checking for ''func'"
$ open/write conftest_file conftest.c
$ write conftest_file "#include ""confdefs.h"""
$ write conftest_file "#include <ctype.h>"
$ write conftest_file ""
$ write conftest_file "void exit();"
$ write conftest_file "int main() { exit(1); }"
$ write conftest_file "int t() { /* The GNU C library defines this for functions which it implements"
$ write conftest_file "    to always fail with ENOSYS.  Some functions are actually named"
$ write conftest_file "    something starting with __ and the normal name is an alias.  */"
$ write conftest_file "#if defined (__stub_''func') || defined (__stub___''func')"
$ write conftest_file "choke me"
$ write conftest_file "#else"
$ write conftest_file "/* Override any gcc2 internal prototype to avoid an error.  */"
$ write conftest_file "extern char ''func'(); ''func'();"
$ write conftest_file "#endif"
$ write conftest_file " return 0; }"
$ close conftest_file
$ _ac_cc_flag = "NO"
$!# def/user sys$error nla0:
$!# def/user sys$output nla0:
$ set noon
$ __debug = f$trnlnm("DEBUG_CONFIGURE")
$ if .not. __debug then __save_mesg_VMS_LABLE38 = f$environment("MESSAGE")
$ if .not. __debug then set message/nofacility/noident/noseverity/notext
$ compile
$ if .not. __debug then set message '__save_mesg_VMS_LABLE38'
$
$ if f$search("conftest.obj") .nes. ""
$  then
$ __debug = f$trnlnm("DEBUG_CONFIGURE")
$ if .not. __debug then __save_mesg_VMS_LABLE39 = f$environment("MESSAGE")
$ if .not. __debug then set message/nofacility/noident/noseverity/notext
$   link_it
$   _tmp = $severity
$ if .not. __debug then set message '__save_mesg_VMS_LABLE39'
$
$   if _tmp .eq. 1
$    then
$     _ac_cc_flag = "YES"
$    endif
$  endif
$ set on
$ if _ac_cc_flag
$  then
$ delete/nolog conftest*.*.*
$!#
$ if f$type(DEFS_COUNTER) .eqs. "" then DEFS_COUNTER = 0
$ DEFS_COUNTER = DEFS_COUNTER + 1
$ if "''verbose'" then write sys$output -
"	defining ''trfunc'"
$ open/append ac_define_file confdefs.h
$ write ac_define_file "#define ''trfunc' 1"
$ close ac_define_file
$ DEFS'DEFS_COUNTER' = """''trfunc'""=""1"""
$ if "''SEDDEFS_COUNTER'" .eqs. "" then SEDDEFS_COUNTER = 0
$ SEDDEFS_COUNTER = SEDDEFS_COUNTER + 1
$ SEDDEFS'SEDDEFS_COUNTER' = "SEDd(""''trfunc'"",""1"");"
$ SEDDEFS_COUNTER = SEDDEFS_COUNTER + 1
$ SEDDEFS'SEDDEFS_COUNTER' = "SEDu(""''trfunc'"",""1"");"
$ SEDDEFS_COUNTER = SEDDEFS_COUNTER + 1
$ SEDDEFS'SEDDEFS_COUNTER' = "SEDe(""''trfunc'"",""1"");"
$
$  endif
$ dummy = f$search("foo.bar.1") ! To prevent f$search bug.
$ if f$search("CONFTEST*.*.*") .nes. "" then delete/nolog conftest*.*.*
$
$   goto ac_hf_VMS_LABLE1
$  endif 
$
$ write sys$output "checking for vfork"
$ open/write conftest_file conftest.c
$ write conftest_file "#include ""confdefs.h"""
$ write conftest_file "#include <ctype.h>"
$ write conftest_file ""
$ write conftest_file "void exit();"
$ write conftest_file "int main() { exit(1); }"
$ write conftest_file "int t() { /* The GNU C library defines this for functions which it implements"
$ write conftest_file "    to always fail with ENOSYS.  Some functions are actually named"
$ write conftest_file "    something starting with __ and the normal name is an alias.  */"
$ write conftest_file "#if defined (__stub_vfork) || defined (__stub___vfork)"
$ write conftest_file "choke me"
$ write conftest_file "#else"
$ write conftest_file "#ifndef vfork /* It might be implemented as a macro, as with DEC C for AXP */"
$ write conftest_file "/* Override any gcc2 internal prototype to avoid an error.  */"
$ write conftest_file "extern char vfork();"
$ write conftest_file "#endif"
$ write conftest_file "vfork();"
$ write conftest_file "#endif"
$ write conftest_file " return 0; }"
$ close conftest_file
$ _ac_cc_flag = "NO"
$!# def/user sys$error nla0:
$!# def/user sys$output nla0:
$ set noon
$ __debug = f$trnlnm("DEBUG_CONFIGURE")
$ if .not. __debug then __save_mesg_VMS_LABLE40 = f$environment("MESSAGE")
$ if .not. __debug then set message/nofacility/noident/noseverity/notext
$ compile
$ if .not. __debug then set message '__save_mesg_VMS_LABLE40'
$
$ if f$search("conftest.obj") .nes. ""
$  then
$ __debug = f$trnlnm("DEBUG_CONFIGURE")
$ if .not. __debug then __save_mesg_VMS_LABLE41 = f$environment("MESSAGE")
$ if .not. __debug then set message/nofacility/noident/noseverity/notext
$   link_it
$   _tmp = $severity
$ if .not. __debug then set message '__save_mesg_VMS_LABLE41'
$
$   if _tmp .eq. 1
$    then
$     _ac_cc_flag = "YES"
$    endif
$  endif
$ set on
$ if _ac_cc_flag
$  then
$ delete/nolog conftest*.*.*
$!#
$ if f$type(DEFS_COUNTER) .eqs. "" then DEFS_COUNTER = 0
$ DEFS_COUNTER = DEFS_COUNTER + 1
$ if "''verbose'" then write sys$output -
"	defining HAVE_VFORK"
$ open/append ac_define_file confdefs.h
$ write ac_define_file "#define HAVE_VFORK 1"
$ close ac_define_file
$ DEFS'DEFS_COUNTER' = """HAVE_VFORK""=""1"""
$ if "''SEDDEFS_COUNTER'" .eqs. "" then SEDDEFS_COUNTER = 0
$ SEDDEFS_COUNTER = SEDDEFS_COUNTER + 1
$ SEDDEFS'SEDDEFS_COUNTER' = "SEDd(""HAVE_VFORK"",""1"");"
$ SEDDEFS_COUNTER = SEDDEFS_COUNTER + 1
$ SEDDEFS'SEDDEFS_COUNTER' = "SEDu(""HAVE_VFORK"",""1"");"
$ SEDDEFS_COUNTER = SEDDEFS_COUNTER + 1
$ SEDDEFS'SEDDEFS_COUNTER' = "SEDe(""HAVE_VFORK"",""1"");"
$
$  else
$ delete/nolog conftest*.*.*
$ open/write conftest_file conftest.c
$ write conftest_file "#include ""confdefs.h"""
$ write conftest_file "#include <ctype.h>"
$ write conftest_file "#include <processes.h>"
$ write conftest_file ""
$ write conftest_file "void exit();"
$ write conftest_file "int main() { exit(1); }"
$ write conftest_file "int t() { /* The GNU C library defines this for functions which it implements"
$ write conftest_file "    to always fail with ENOSYS.  Some functions are actually named"
$ write conftest_file "    something starting with __ and the normal name is an alias.  */"
$ write conftest_file "#if defined (__stub_vfork) || defined (__stub___vfork)"
$ write conftest_file "choke me"
$ write conftest_file "#else"
$ write conftest_file "#ifndef vfork /* It might be implemented as a macro, as with DEC C for AXP */"
$ write conftest_file "/* Override any gcc2 internal prototype to avoid an error.  */"
$ write conftest_file "extern char vfork();"
$ write conftest_file "#endif"
$ write conftest_file "vfork();"
$ write conftest_file "#endif"
$ write conftest_file " return 0; }"
$ close conftest_file
$ _ac_cc_flag = "NO"
$!# def/user sys$error nla0:
$!# def/user sys$output nla0:
$ set noon
$ __debug = f$trnlnm("DEBUG_CONFIGURE")
$ if .not. __debug then __save_mesg_VMS_LABLE42 = f$environment("MESSAGE")
$ if .not. __debug then set message/nofacility/noident/noseverity/notext
$ compile
$ if .not. __debug then set message '__save_mesg_VMS_LABLE42'
$
$ if f$search("conftest.obj") .nes. ""
$  then
$ __debug = f$trnlnm("DEBUG_CONFIGURE")
$ if .not. __debug then __save_mesg_VMS_LABLE43 = f$environment("MESSAGE")
$ if .not. __debug then set message/nofacility/noident/noseverity/notext
$   link_it
$   _tmp = $severity
$ if .not. __debug then set message '__save_mesg_VMS_LABLE43'
$
$   if _tmp .eq. 1
$    then
$     _ac_cc_flag = "YES"
$    endif
$  endif
$ set on
$ if _ac_cc_flag
$  then
$ delete/nolog conftest*.*.*
$!#
$ if f$type(DEFS_COUNTER) .eqs. "" then DEFS_COUNTER = 0
$ DEFS_COUNTER = DEFS_COUNTER + 1
$ if "''verbose'" then write sys$output -
"	defining HAVE_VFORK"
$ open/append ac_define_file confdefs.h
$ write ac_define_file "#define HAVE_VFORK 1"
$ close ac_define_file
$ DEFS'DEFS_COUNTER' = """HAVE_VFORK""=""1"""
$ if "''SEDDEFS_COUNTER'" .eqs. "" then SEDDEFS_COUNTER = 0
$ SEDDEFS_COUNTER = SEDDEFS_COUNTER + 1
$ SEDDEFS'SEDDEFS_COUNTER' = "SEDd(""HAVE_VFORK"",""1"");"
$ SEDDEFS_COUNTER = SEDDEFS_COUNTER + 1
$ SEDDEFS'SEDDEFS_COUNTER' = "SEDu(""HAVE_VFORK"",""1"");"
$ SEDDEFS_COUNTER = SEDDEFS_COUNTER + 1
$ SEDDEFS'SEDDEFS_COUNTER' = "SEDe(""HAVE_VFORK"",""1"");"
$
$  endif
$ dummy = f$search("foo.bar.1") ! To prevent f$search bug.
$ if f$search("CONFTEST*.*.*") .nes. "" then delete/nolog conftest*.*.*
$
$  endif
$ dummy = f$search("foo.bar.1") ! To prevent f$search bug.
$ if f$search("CONFTEST*.*.*") .nes. "" then delete/nolog conftest*.*.*
$
$
$ ok_so_far="YES"
$ write sys$output "checking for socket"
$ open/write conftest_file conftest.c
$ write conftest_file "#include ""confdefs.h"""
$ write conftest_file "#include <ctype.h>"
$ write conftest_file ""
$ write conftest_file "void exit();"
$ write conftest_file "int main() { exit(1); }"
$ write conftest_file "int t() { /* The GNU C library defines this for functions which it implements"
$ write conftest_file "    to always fail with ENOSYS.  Some functions are actually named"
$ write conftest_file "    something starting with __ and the normal name is an alias.  */"
$ write conftest_file "#if defined (__stub_socket) || defined (__stub___socket)"
$ write conftest_file "choke me"
$ write conftest_file "#else"
$ write conftest_file "#ifndef socket /* It might be implemented as a macro, as with DEC C for AXP */"
$ write conftest_file "/* Override any gcc2 internal prototype to avoid an error.  */"
$ write conftest_file "extern char socket();"
$ write conftest_file "#endif"
$ write conftest_file "socket();"
$ write conftest_file "#endif"
$ write conftest_file " return 0; }"
$ close conftest_file
$ _ac_cc_flag = "NO"
$!# def/user sys$error nla0:
$!# def/user sys$output nla0:
$ set noon
$ __debug = f$trnlnm("DEBUG_CONFIGURE")
$ if .not. __debug then __save_mesg_VMS_LABLE44 = f$environment("MESSAGE")
$ if .not. __debug then set message/nofacility/noident/noseverity/notext
$ compile
$ if .not. __debug then set message '__save_mesg_VMS_LABLE44'
$
$ if f$search("conftest.obj") .nes. ""
$  then
$ __debug = f$trnlnm("DEBUG_CONFIGURE")
$ if .not. __debug then __save_mesg_VMS_LABLE45 = f$environment("MESSAGE")
$ if .not. __debug then set message/nofacility/noident/noseverity/notext
$   link_it
$   _tmp = $severity
$ if .not. __debug then set message '__save_mesg_VMS_LABLE45'
$
$   if _tmp .eq. 1
$    then
$     _ac_cc_flag = "YES"
$    endif
$  endif
$ set on
$ if _ac_cc_flag
$  then
$!
$  else
$ delete/nolog conftest*.*.*
$ ok_so_far="NO"
$  endif
$ dummy = f$search("foo.bar.1") ! To prevent f$search bug.
$ if f$search("CONFTEST*.*.*") .nes. "" then delete/nolog conftest*.*.*
$
$ if ok_so_far
$  then
$ write sys$output "checking for netinet/in.h"
$ open/write conftest_file conftest.c
$ write conftest_file "#include ""confdefs.h"""
$ write conftest_file "#include <netinet/in.h>"
$ write conftest_file ""
$ close conftest_file
$ set noon
$ def/user sys$output conftest.err
$ def/user sys$error conftest.err
$ cpp conftest.c
$ set on
$ ac_test_cpp_flag = "YES"
$ if f$search("conftest.err") .nes. "" then -
	if f$file("conftest.err","EOF") .ne. 0 then -
	ac_test_cpp_flag = "no"
$ if ac_test_cpp_flag
$  then
$!
$  else
$ delete/nolog conftest*.*.*
$ ok_so_far="NO"
$  endif
$ dummy = f$search("foo.bar.1") ! To prevent f$search bug.
$ if f$search("CONFTEST*.*.*") .nes. "" then delete/nolog conftest*.*.*
$
$
$  endif
$ if ok_so_far
$  then
$ write sys$output "checking for arpa/inet.h"
$ open/write conftest_file conftest.c
$ write conftest_file "#include ""confdefs.h"""
$ write conftest_file "#include <arpa/inet.h>"
$ write conftest_file ""
$ close conftest_file
$ set noon
$ def/user sys$output conftest.err
$ def/user sys$error conftest.err
$ cpp conftest.c
$ set on
$ ac_test_cpp_flag = "YES"
$ if f$search("conftest.err") .nes. "" then -
	if f$file("conftest.err","EOF") .ne. 0 then -
	ac_test_cpp_flag = "no"
$ if ac_test_cpp_flag
$  then
$!
$  else
$ delete/nolog conftest*.*.*
$ ok_so_far="NO"
$  endif
$ dummy = f$search("foo.bar.1") ! To prevent f$search bug.
$ if f$search("CONFTEST*.*.*") .nes. "" then delete/nolog conftest*.*.*
$
$
$  endif
$ if ok_so_far
$  then
$!#
$ if f$type(DEFS_COUNTER) .eqs. "" then DEFS_COUNTER = 0
$ DEFS_COUNTER = DEFS_COUNTER + 1
$ if "''verbose'" then write sys$output -
"	defining HAVE_INET_SOCKETS"
$ open/append ac_define_file confdefs.h
$ write ac_define_file "#define HAVE_INET_SOCKETS 1"
$ close ac_define_file
$ DEFS'DEFS_COUNTER' = """HAVE_INET_SOCKETS""=""1"""
$ if "''SEDDEFS_COUNTER'" .eqs. "" then SEDDEFS_COUNTER = 0
$ SEDDEFS_COUNTER = SEDDEFS_COUNTER + 1
$ SEDDEFS'SEDDEFS_COUNTER' = "SEDd(""HAVE_INET_SOCKETS"",""1"");"
$ SEDDEFS_COUNTER = SEDDEFS_COUNTER + 1
$ SEDDEFS'SEDDEFS_COUNTER' = "SEDu(""HAVE_INET_SOCKETS"",""1"");"
$ SEDDEFS_COUNTER = SEDDEFS_COUNTER + 1
$ SEDDEFS'SEDDEFS_COUNTER' = "SEDe(""HAVE_INET_SOCKETS"",""1"");"
$
$  endif
$
$!#### Find out which version of Emacs this is.
$ versiontempname = "version-tmp-''pid'.lis"
$ __lispdir = srcdir - "]" + ".LISP]"
$ search '__lispdir'version.el "defconst","emacs-version"/match=and/nohead-
	/output='versiontempname'
$ open/read/error=no_version/end=no_version in 'versiontempname'
$ read/error=no_version/end=no_version in foo
$ close in
$ delete/nolog 'versiontempname'*.*
$ foo = f$element(1,"""",foo)
$ version = f$element(0,".",foo)+"."+f$element(1,".",foo)
$ if "''version'" .nes. ""
$  then say "Emacs version is ''version'"
$	version_us = f$element(0,".",version)
$	v_i = 1
$loop_version:
$	v_e = f$element(v_i,".",version)
$	v_i = v_i + 1
$	if v_e .nes. "."
$	 then
$	  version_us = version_us + "_" + v_e
$	 endif
$  else
$no_version:
$   a = srcdir - "]" + ".LISP]"
$   sayerr "''progname': can't find current emacs version in"
$   sayerr "	`''a'VERSION.EL'."
$   exit 0
$  endif
$
$
$
$!#### Specify what sort of things we'll be editing into Makefile and config.h.
$!### Use configuration here uncanonicalized to avoid exceeding size limits.
$
$ srcdir_dev = f$parse(srcdir,,,"DEVICE")
$ srcdir_dir = f$parse(srcdir,,,"DIRECTORY") - "[" - "<" - "]" - ">"
$
$!#
$ if f$type(DEFS_COUNTER) .eqs. "" then DEFS_COUNTER = 0
$ DEFS_COUNTER = DEFS_COUNTER + 1
$ if "''verbose'" then write sys$output -
"	defining config_machfile to be """"''srcdir_dev'[''srcdir_dir'.src.m]''machfile'"""""
$ open/append ac_define_file confdefs.h
$ write ac_define_file "#define config_machfile """"''srcdir_dev'[''srcdir_dir'.src.m]''machfile'"""""
$ close ac_define_file
$ DEFS'DEFS_COUNTER' = """config_machfile""=""""""''srcdir_dev'[''srcdir_dir'.src.m]''machfile'"""""""
$ if "''SEDDEFS_COUNTER'" .eqs. "" then SEDDEFS_COUNTER = 0
$ SEDDEFS_COUNTER = SEDDEFS_COUNTER + 1
$ SEDDEFS'SEDDEFS_COUNTER' = "SEDd(""config_machfile"",""""""''srcdir_dev'[''srcdir_dir'.src.m]''machfile'"""""");"
$ SEDDEFS_COUNTER = SEDDEFS_COUNTER + 1
$ SEDDEFS'SEDDEFS_COUNTER' = "SEDu(""config_machfile"",""""""''srcdir_dev'[''srcdir_dir'.src.m]''machfile'"""""");"
$ SEDDEFS_COUNTER = SEDDEFS_COUNTER + 1
$ SEDDEFS'SEDDEFS_COUNTER' = "SEDe(""config_machfile"",""""""''srcdir_dev'[''srcdir_dir'.src.m]''machfile'"""""");"
$
$!#
$ if f$type(DEFS_COUNTER) .eqs. "" then DEFS_COUNTER = 0
$ DEFS_COUNTER = DEFS_COUNTER + 1
$ if "''verbose'" then write sys$output -
"	defining config_opsysfile to be """"''srcdir_dev'[''srcdir_dir'.src.s]''opsysfile'"""""
$ open/append ac_define_file confdefs.h
$ write ac_define_file "#define config_opsysfile """"''srcdir_dev'[''srcdir_dir'.src.s]''opsysfile'"""""
$ close ac_define_file
$ DEFS'DEFS_COUNTER' = """config_opsysfile""=""""""''srcdir_dev'[''srcdir_dir'.src.s]''opsysfile'"""""""
$ if "''SEDDEFS_COUNTER'" .eqs. "" then SEDDEFS_COUNTER = 0
$ SEDDEFS_COUNTER = SEDDEFS_COUNTER + 1
$ SEDDEFS'SEDDEFS_COUNTER' = "SEDd(""config_opsysfile"",""""""''srcdir_dev'[''srcdir_dir'.src.s]''opsysfile'"""""");"
$ SEDDEFS_COUNTER = SEDDEFS_COUNTER + 1
$ SEDDEFS'SEDDEFS_COUNTER' = "SEDu(""config_opsysfile"",""""""''srcdir_dev'[''srcdir_dir'.src.s]''opsysfile'"""""");"
$ SEDDEFS_COUNTER = SEDDEFS_COUNTER + 1
$ SEDDEFS'SEDDEFS_COUNTER' = "SEDe(""config_opsysfile"",""""""''srcdir_dev'[''srcdir_dir'.src.s]''opsysfile'"""""");"
$
$!#
$ if f$type(DEFS_COUNTER) .eqs. "" then DEFS_COUNTER = 0
$ DEFS_COUNTER = DEFS_COUNTER + 1
$ if "''verbose'" then write sys$output -
"	defining LD_SWITCH_X_SITE to be ''LD_SWITCH_X_SITE'"
$ open/append ac_define_file confdefs.h
$ write ac_define_file "#define LD_SWITCH_X_SITE ''LD_SWITCH_X_SITE'"
$ close ac_define_file
$ DEFS'DEFS_COUNTER' = """LD_SWITCH_X_SITE""=""''LD_SWITCH_X_SITE'"""
$ if "''SEDDEFS_COUNTER'" .eqs. "" then SEDDEFS_COUNTER = 0
$ SEDDEFS_COUNTER = SEDDEFS_COUNTER + 1
$ SEDDEFS'SEDDEFS_COUNTER' = "SEDd(""LD_SWITCH_X_SITE"",""''LD_SWITCH_X_SITE'"");"
$ SEDDEFS_COUNTER = SEDDEFS_COUNTER + 1
$ SEDDEFS'SEDDEFS_COUNTER' = "SEDu(""LD_SWITCH_X_SITE"",""''LD_SWITCH_X_SITE'"");"
$ SEDDEFS_COUNTER = SEDDEFS_COUNTER + 1
$ SEDDEFS'SEDDEFS_COUNTER' = "SEDe(""LD_SWITCH_X_SITE"",""''LD_SWITCH_X_SITE'"");"
$
$!#
$ if f$type(DEFS_COUNTER) .eqs. "" then DEFS_COUNTER = 0
$ DEFS_COUNTER = DEFS_COUNTER + 1
$ if "''verbose'" then write sys$output -
"	defining C_SWITCH_X_SITE to be ''C_SWITCH_X_SITE'"
$ open/append ac_define_file confdefs.h
$ write ac_define_file "#define C_SWITCH_X_SITE ''C_SWITCH_X_SITE'"
$ close ac_define_file
$ DEFS'DEFS_COUNTER' = """C_SWITCH_X_SITE""=""''C_SWITCH_X_SITE'"""
$ if "''SEDDEFS_COUNTER'" .eqs. "" then SEDDEFS_COUNTER = 0
$ SEDDEFS_COUNTER = SEDDEFS_COUNTER + 1
$ SEDDEFS'SEDDEFS_COUNTER' = "SEDd(""C_SWITCH_X_SITE"",""''C_SWITCH_X_SITE'"");"
$ SEDDEFS_COUNTER = SEDDEFS_COUNTER + 1
$ SEDDEFS'SEDDEFS_COUNTER' = "SEDu(""C_SWITCH_X_SITE"",""''C_SWITCH_X_SITE'"");"
$ SEDDEFS_COUNTER = SEDDEFS_COUNTER + 1
$ SEDDEFS'SEDDEFS_COUNTER' = "SEDe(""C_SWITCH_X_SITE"",""''C_SWITCH_X_SITE'"");"
$
$!#
$ if f$type(DEFS_COUNTER) .eqs. "" then DEFS_COUNTER = 0
$ DEFS_COUNTER = DEFS_COUNTER + 1
$ if "''verbose'" then write sys$output -
"	defining UNEXEC_SRC to be ''UNEXEC_SRC'"
$ open/append ac_define_file confdefs.h
$ write ac_define_file "#define UNEXEC_SRC ''UNEXEC_SRC'"
$ close ac_define_file
$ DEFS'DEFS_COUNTER' = """UNEXEC_SRC""=""''UNEXEC_SRC'"""
$ if "''SEDDEFS_COUNTER'" .eqs. "" then SEDDEFS_COUNTER = 0
$ SEDDEFS_COUNTER = SEDDEFS_COUNTER + 1
$ SEDDEFS'SEDDEFS_COUNTER' = "SEDd(""UNEXEC_SRC"",""''UNEXEC_SRC'"");"
$ SEDDEFS_COUNTER = SEDDEFS_COUNTER + 1
$ SEDDEFS'SEDDEFS_COUNTER' = "SEDu(""UNEXEC_SRC"",""''UNEXEC_SRC'"");"
$ SEDDEFS_COUNTER = SEDDEFS_COUNTER + 1
$ SEDDEFS'SEDDEFS_COUNTER' = "SEDe(""UNEXEC_SRC"",""''UNEXEC_SRC'"");"
$
$ if with_debug_hack
$  then
$!#
$ if f$type(DEFS_COUNTER) .eqs. "" then DEFS_COUNTER = 0
$ DEFS_COUNTER = DEFS_COUNTER + 1
$ if "''verbose'" then write sys$output -
"	defining USE_DEBUG_HACK"
$ open/append ac_define_file confdefs.h
$ write ac_define_file "#define USE_DEBUG_HACK 1"
$ close ac_define_file
$ DEFS'DEFS_COUNTER' = """USE_DEBUG_HACK""=""1"""
$ if "''SEDDEFS_COUNTER'" .eqs. "" then SEDDEFS_COUNTER = 0
$ SEDDEFS_COUNTER = SEDDEFS_COUNTER + 1
$ SEDDEFS'SEDDEFS_COUNTER' = "SEDd(""USE_DEBUG_HACK"",""1"");"
$ SEDDEFS_COUNTER = SEDDEFS_COUNTER + 1
$ SEDDEFS'SEDDEFS_COUNTER' = "SEDu(""USE_DEBUG_HACK"",""1"");"
$ SEDDEFS_COUNTER = SEDDEFS_COUNTER + 1
$ SEDDEFS'SEDDEFS_COUNTER' = "SEDe(""USE_DEBUG_HACK"",""1"");"
$
$  endif
$
$
$ if "''HAVE_SOCKETS'" .eqs. "YES"
$  then 
$!#
$ if f$type(DEFS_COUNTER) .eqs. "" then DEFS_COUNTER = 0
$ DEFS_COUNTER = DEFS_COUNTER + 1
$ if "''verbose'" then write sys$output -
"	defining HAVE_SOCKETS"
$ open/append ac_define_file confdefs.h
$ write ac_define_file "#define HAVE_SOCKETS 1"
$ close ac_define_file
$ DEFS'DEFS_COUNTER' = """HAVE_SOCKETS""=""1"""
$ if "''SEDDEFS_COUNTER'" .eqs. "" then SEDDEFS_COUNTER = 0
$ SEDDEFS_COUNTER = SEDDEFS_COUNTER + 1
$ SEDDEFS'SEDDEFS_COUNTER' = "SEDd(""HAVE_SOCKETS"",""1"");"
$ SEDDEFS_COUNTER = SEDDEFS_COUNTER + 1
$ SEDDEFS'SEDDEFS_COUNTER' = "SEDu(""HAVE_SOCKETS"",""1"");"
$ SEDDEFS_COUNTER = SEDDEFS_COUNTER + 1
$ SEDDEFS'SEDDEFS_COUNTER' = "SEDe(""HAVE_SOCKETS"",""1"");"
$
$!#
$ if f$type(DEFS_COUNTER) .eqs. "" then DEFS_COUNTER = 0
$ DEFS_COUNTER = DEFS_COUNTER + 1
$ if "''verbose'" then write sys$output -
"	defining ''f$edit(tcpip_package,""UPCASE"")'"
$ open/append ac_define_file confdefs.h
$ write ac_define_file "#define ''f$edit(tcpip_package,""UPCASE"")' 1"
$ close ac_define_file
$ DEFS'DEFS_COUNTER' = """''f$edit(tcpip_package,""UPCASE"")'""=""1"""
$ if "''SEDDEFS_COUNTER'" .eqs. "" then SEDDEFS_COUNTER = 0
$ SEDDEFS_COUNTER = SEDDEFS_COUNTER + 1
$ SEDDEFS'SEDDEFS_COUNTER' = "SEDd(""''f$edit(tcpip_package,""UPCASE"")'"",""1"");"
$ SEDDEFS_COUNTER = SEDDEFS_COUNTER + 1
$ SEDDEFS'SEDDEFS_COUNTER' = "SEDu(""''f$edit(tcpip_package,""UPCASE"")'"",""1"");"
$ SEDDEFS_COUNTER = SEDDEFS_COUNTER + 1
$ SEDDEFS'SEDDEFS_COUNTER' = "SEDe(""''f$edit(tcpip_package,""UPCASE"")'"",""1"");"
$ 
$  endif
$ if "''HAVE_X_WINDOWS'" .eqs. "YES" 
$  then
   $!#
$ if f$type(DEFS_COUNTER) .eqs. "" then DEFS_COUNTER = 0
$ DEFS_COUNTER = DEFS_COUNTER + 1
$ if "''verbose'" then write sys$output -
"	defining HAVE_X_WINDOWS"
$ open/append ac_define_file confdefs.h
$ write ac_define_file "#define HAVE_X_WINDOWS 1"
$ close ac_define_file
$ DEFS'DEFS_COUNTER' = """HAVE_X_WINDOWS""=""1"""
$ if "''SEDDEFS_COUNTER'" .eqs. "" then SEDDEFS_COUNTER = 0
$ SEDDEFS_COUNTER = SEDDEFS_COUNTER + 1
$ SEDDEFS'SEDDEFS_COUNTER' = "SEDd(""HAVE_X_WINDOWS"",""1"");"
$ SEDDEFS_COUNTER = SEDDEFS_COUNTER + 1
$ SEDDEFS'SEDDEFS_COUNTER' = "SEDu(""HAVE_X_WINDOWS"",""1"");"
$ SEDDEFS_COUNTER = SEDDEFS_COUNTER + 1
$ SEDDEFS'SEDDEFS_COUNTER' = "SEDe(""HAVE_X_WINDOWS"",""1"");"
$ 
$  endif
$ if "''HAVE_X11'" .eqs. "YES" 
$  then
   $!#
$ if f$type(DEFS_COUNTER) .eqs. "" then DEFS_COUNTER = 0
$ DEFS_COUNTER = DEFS_COUNTER + 1
$ if "''verbose'" then write sys$output -
"	defining HAVE_X11"
$ open/append ac_define_file confdefs.h
$ write ac_define_file "#define HAVE_X11 1"
$ close ac_define_file
$ DEFS'DEFS_COUNTER' = """HAVE_X11""=""1"""
$ if "''SEDDEFS_COUNTER'" .eqs. "" then SEDDEFS_COUNTER = 0
$ SEDDEFS_COUNTER = SEDDEFS_COUNTER + 1
$ SEDDEFS'SEDDEFS_COUNTER' = "SEDd(""HAVE_X11"",""1"");"
$ SEDDEFS_COUNTER = SEDDEFS_COUNTER + 1
$ SEDDEFS'SEDDEFS_COUNTER' = "SEDu(""HAVE_X11"",""1"");"
$ SEDDEFS_COUNTER = SEDDEFS_COUNTER + 1
$ SEDDEFS'SEDDEFS_COUNTER' = "SEDe(""HAVE_X11"",""1"");"
$ 
$  endif
$ if "''HAVE_XFREE386'" .eqs. "YES" 
$  then
   $!#
$ if f$type(DEFS_COUNTER) .eqs. "" then DEFS_COUNTER = 0
$ DEFS_COUNTER = DEFS_COUNTER + 1
$ if "''verbose'" then write sys$output -
"	defining HAVE_XFREE386"
$ open/append ac_define_file confdefs.h
$ write ac_define_file "#define HAVE_XFREE386 1"
$ close ac_define_file
$ DEFS'DEFS_COUNTER' = """HAVE_XFREE386""=""1"""
$ if "''SEDDEFS_COUNTER'" .eqs. "" then SEDDEFS_COUNTER = 0
$ SEDDEFS_COUNTER = SEDDEFS_COUNTER + 1
$ SEDDEFS'SEDDEFS_COUNTER' = "SEDd(""HAVE_XFREE386"",""1"");"
$ SEDDEFS_COUNTER = SEDDEFS_COUNTER + 1
$ SEDDEFS'SEDDEFS_COUNTER' = "SEDu(""HAVE_XFREE386"",""1"");"
$ SEDDEFS_COUNTER = SEDDEFS_COUNTER + 1
$ SEDDEFS'SEDDEFS_COUNTER' = "SEDe(""HAVE_XFREE386"",""1"");"
$ 
$  endif
$ if "''HAVE_X_MENU'" .eqs. "YES" 
$  then
   $!#
$ if f$type(DEFS_COUNTER) .eqs. "" then DEFS_COUNTER = 0
$ DEFS_COUNTER = DEFS_COUNTER + 1
$ if "''verbose'" then write sys$output -
"	defining HAVE_X_MENU"
$ open/append ac_define_file confdefs.h
$ write ac_define_file "#define HAVE_X_MENU 1"
$ close ac_define_file
$ DEFS'DEFS_COUNTER' = """HAVE_X_MENU""=""1"""
$ if "''SEDDEFS_COUNTER'" .eqs. "" then SEDDEFS_COUNTER = 0
$ SEDDEFS_COUNTER = SEDDEFS_COUNTER + 1
$ SEDDEFS'SEDDEFS_COUNTER' = "SEDd(""HAVE_X_MENU"",""1"");"
$ SEDDEFS_COUNTER = SEDDEFS_COUNTER + 1
$ SEDDEFS'SEDDEFS_COUNTER' = "SEDu(""HAVE_X_MENU"",""1"");"
$ SEDDEFS_COUNTER = SEDDEFS_COUNTER + 1
$ SEDDEFS'SEDDEFS_COUNTER' = "SEDe(""HAVE_X_MENU"",""1"");"
$ 
$  endif
$ if "''GNU_MALLOC'" .eqs. "YES" 
$  then
   $!#
$ if f$type(DEFS_COUNTER) .eqs. "" then DEFS_COUNTER = 0
$ DEFS_COUNTER = DEFS_COUNTER + 1
$ if "''verbose'" then write sys$output -
"	defining GNU_MALLOC"
$ open/append ac_define_file confdefs.h
$ write ac_define_file "#define GNU_MALLOC 1"
$ close ac_define_file
$ DEFS'DEFS_COUNTER' = """GNU_MALLOC""=""1"""
$ if "''SEDDEFS_COUNTER'" .eqs. "" then SEDDEFS_COUNTER = 0
$ SEDDEFS_COUNTER = SEDDEFS_COUNTER + 1
$ SEDDEFS'SEDDEFS_COUNTER' = "SEDd(""GNU_MALLOC"",""1"");"
$ SEDDEFS_COUNTER = SEDDEFS_COUNTER + 1
$ SEDDEFS'SEDDEFS_COUNTER' = "SEDu(""GNU_MALLOC"",""1"");"
$ SEDDEFS_COUNTER = SEDDEFS_COUNTER + 1
$ SEDDEFS'SEDDEFS_COUNTER' = "SEDe(""GNU_MALLOC"",""1"");"
$ 
$  endif
$ if "''REL_ALLOC'" .eqs. "YES" 
$  then
   $!#
$ if f$type(DEFS_COUNTER) .eqs. "" then DEFS_COUNTER = 0
$ DEFS_COUNTER = DEFS_COUNTER + 1
$ if "''verbose'" then write sys$output -
"	defining REL_ALLOC"
$ open/append ac_define_file confdefs.h
$ write ac_define_file "#define REL_ALLOC 1"
$ close ac_define_file
$ DEFS'DEFS_COUNTER' = """REL_ALLOC""=""1"""
$ if "''SEDDEFS_COUNTER'" .eqs. "" then SEDDEFS_COUNTER = 0
$ SEDDEFS_COUNTER = SEDDEFS_COUNTER + 1
$ SEDDEFS'SEDDEFS_COUNTER' = "SEDd(""REL_ALLOC"",""1"");"
$ SEDDEFS_COUNTER = SEDDEFS_COUNTER + 1
$ SEDDEFS'SEDDEFS_COUNTER' = "SEDu(""REL_ALLOC"",""1"");"
$ SEDDEFS_COUNTER = SEDDEFS_COUNTER + 1
$ SEDDEFS'SEDDEFS_COUNTER' = "SEDe(""REL_ALLOC"",""1"");"
$ 
$  endif
$ if "''LISP_FLOAT_TYPE'" .eqs. "YES" 
$  then
   $!#
$ if f$type(DEFS_COUNTER) .eqs. "" then DEFS_COUNTER = 0
$ DEFS_COUNTER = DEFS_COUNTER + 1
$ if "''verbose'" then write sys$output -
"	defining LISP_FLOAT_TYPE"
$ open/append ac_define_file confdefs.h
$ write ac_define_file "#define LISP_FLOAT_TYPE 1"
$ close ac_define_file
$ DEFS'DEFS_COUNTER' = """LISP_FLOAT_TYPE""=""1"""
$ if "''SEDDEFS_COUNTER'" .eqs. "" then SEDDEFS_COUNTER = 0
$ SEDDEFS_COUNTER = SEDDEFS_COUNTER + 1
$ SEDDEFS'SEDDEFS_COUNTER' = "SEDd(""LISP_FLOAT_TYPE"",""1"");"
$ SEDDEFS_COUNTER = SEDDEFS_COUNTER + 1
$ SEDDEFS'SEDDEFS_COUNTER' = "SEDu(""LISP_FLOAT_TYPE"",""1"");"
$ SEDDEFS_COUNTER = SEDDEFS_COUNTER + 1
$ SEDDEFS'SEDDEFS_COUNTER' = "SEDe(""LISP_FLOAT_TYPE"",""1"");"
$ 
$  endif
$
$!# ====================== Developer's configuration =======================
$
$!# The following assignments make sense if you're running Emacs on a single
$!# machine, one version at a time, and  you want changes to the lisp and etc
$!# directories in the source tree to show up immediately in your working
$!# environment.  It saves a great deal of disk space by not duplicating the
$!# lisp and etc directories.
$ 
$ if "''run_in_place'"
$  then
$   if .not. "''lispdir_specified'"
$    then
$     lispdir_dev="'srcdir_dev'"
$     lispdir_dir="'srcdir_dir'.lisp"
$     lispdir="'lispdir_dev'['lispdir_dir']"
$    endif
$   if .not. "''locallisp_specified'"
$    then
$     locallisppath="'srcdir_dev'['srcdir_dir'.site-lisp]"
$    endif
$   if .not. "''etcdir_specified'"
$    then
$     etcdir_dev="'srcdir_dev'"
$     etcdir_dir="'srcdir_dir'.etc"
$     etcdir="'etcdir_dev'['etcdir_dir']"
$    endif
$   if .not. "''lockdir_specified'"
$    then
$     lockdir_dev="'srcdir_dev'"
$     lockdir_dir="'srcdir_dir'.lock"
$     lockdir="'lockdir_dev'['lockdir_dir']"
$    endif
$!   if .not. "''archlibdir_specified'"
$!    then
$!     archlibdir_dev="'srcdir_dev'"
$!     archlibdir_dir="'srcdir_dir'.lib-src"
$!     archlibdir="'archlibdir_dev'['archlibdir_dir']"
$!    endif
$   if .not. "''vmslibdir_specified'"
$    then
$     vmslibdir_dev="'srcdir_dev'"
$     vmslibdir_dir="'srcdir_dir'.vms"
$     vmslibdir="'vmslibdir_dev'['vmslibdir_dir']"
$    endif
$   if .not. "''infodir_specified'"
$    then
$     infodir_dev="'srcdir_dev'"
$     infodir_dir="'srcdir_dir'.info"
$     infodir="'infodir_dev'['infodir_dir']"
$    endif
$  else if "''single_tree'"
$   then
$    if .not. "''exec_prefix_specified'" 
$     then
$      exec_prefix_dev = "'prefix_dev'"
$      exec_prefix_dir = "'prefix_dir'"
$      exec_prefix="'prefix'"
$     endif
$    if .not. "''bindir_specified'"
$     then
$      bindir_dev="'exec_prefix_dev'"
$      bindir_dir="'exec_prefix_dir'.bin.'configuration'"
$      bindir="'bindir_dev'['bindir_dir']"
$     endif
$    if .not. "''datadir_specified'"
$     then
$      datadir_dev="'prefix_dev'"
$      datadir_dir="'prefix_dir'.common"
$      datadir="'datadir_dev'['datadir_dir']"
$     endif
$    if .not. "''statedir_specified'"
$     then
$      statedir_dev="'prefix_dev'"
$      statedir_dir="'prefix_dir'.common"
$      statedir="'statedir_dev'['statedir_dir']"
$     endif
$    if .not. "''libdir_specified'"
$     then
$      libdir_dev="'bindir_dev'"
$      libdir_dir="'bindir_dir'"
$      libdir="'libdir_dev'['libdir_dir']"
$     endif
$    if .not. "''lispdir_specified'"
$     then
$      lispdir_dev="'prefix_dev'"
$      lispdir_dir="'prefix_dir'.common.lisp"
$      lispdir="'lispdir_dev'['lispdir_dir']"
$     endif
$    if .not. "''locallisppath_specified'"
$     then
$      locallisppath="'prefix_dev'['prefix_dir'.common.site-lisp]"
$     endif
$    if .not. "''lockdir_specified'"
$     then
$      lockdir_dev="'prefix_dev'"
$      lockdir_dir="'prefix_dir'.common.lock"
$      lockdir="'lockdir_dev'['lockdir_dir']"
$     endif
$    if .not. "''archlibdir_specified'"
$     then
$      archlibdir_dev="'libdir_dev'"
$      archlibdir_dir="'libdir_dir'.etc"
$      archlibdir="'archlibdir_dev'['archlibdir_dir']"
$     endif
$    if .not. "''etcdir_specified'"
$     then
$      etcdir_dev="'prefix_dev'"
$      etcdir_dir="'prefix_dir'.common.data"
$      etcdir="'etcdir_dev'['etcdir_dir']"
$     endif
$    if .not. "''vmslibdir_specified'"
$     then
$      vmslibdir_dev="'libdir_dev'"
$      vmslibdir_dir="'libdir_dir'.vms"
$      vmslibdir="'vmslibdir_dev'['vmslibdir_dir']"
$     endif
$    if .not. "''vuelibdir_specified'"
$     then
$      vuelibdir_dev="'prefix_dev'"
$      vuelibdir_dir="'prefix_dir'"
$      vuelibdir="'vuelibdir_dev'['vuelibdir_dir']"
$     endif
$    if .not. "''startupdir_specified'"
$     then
$      startupdir_dev="'prefix_dev'"
$      startupdir_dir="'prefix_dir'.vms"
$      startupdir="'startupdir_dev'['startupdir_dir']"
$     endif
$   endif
$ endif
$
$!#### Report on what we decided to do.
$ say ""
$ say ""
$ say "Configured for `''canonical''."
$ say ""
$ say "  Where should the build process find the source code?    ''srcdir'"
$ say "  What operating system and machine description files should Emacs use?"
$ say "        `''opsysfile'' and `''machfile''"
$ say "  What compiler should emacs be built with?               ''CC' ''CFLAGS'"
$ say "  Should Emacs use the GNU version of malloc?             ''GNU_MALLOC'''GNU_MALLOC_reason'"
$ say "  Should Emacs use the relocating allocator for buffers?  ''REL_ALLOC'"
$ say "  What window system should Emacs use?                    ''window_system'"
$ if "''x_includes'" .nes. "" then -
say "  Where do we find X Windows header files?                ''x_includes'"
$ if "''x_libraries'" .nes. "" then -
say "  Where do we find X Windows libraries?                   ''x_libraries'"
$ say ""
$ say ""
$
$!# Remove any trailing slashes in these variables.
$!test -n "${prefix}" &&
$!  prefix=`echo "${prefix}" | sed 's,\([^/]\)/*$,\1,'`
$!test -n "${exec_prefix}" &&
$!  exec_prefix=`echo "${exec_prefix}" | sed 's,\([^/]\)/*$,\1,'`
$
$ prsub_counter = 0
$ if "''prefix_dev'" .nes. ""
$  then
$   prsub_counter = prsub_counter + 1
$   prsub'prsub_counter'="position(beginning_of (main_buffer));"
$   prsub_counter = prsub_counter + 1
$   prsub'prsub_counter'= "r := search_quietly(LINE_BEGIN+(""""prefix_dev""""+ ((p_0_or_more_spc +""""="""")@r1)+(p_0_or_more_spc@r2)+scan(""""""""))@r0+LINE_END,FORWARD);"
$   prsub_counter = prsub_counter + 1
$   prsub'prsub_counter'="if (r <> 0)"
$   prsub_counter = prsub_counter + 1
$   prsub'prsub_counter'="then"
$   prsub_counter = prsub_counter + 1
$! This is a piece of deep DCL magic.
$   prsub_support'prsub_counter'="__prsub_tmp:='prefix_dev'"
$   prsub'prsub_counter'="res := """"prefix_dev"""" + """"=""""+""""'"+"'__prsub_tmp'"""";"
$   prsub_counter = prsub_counter + 1
$   prsub'prsub_counter'="erase(r0);"
$   prsub_counter = prsub_counter + 1
$   prsub'prsub_counter'="position(r0);"
$   prsub_counter = prsub_counter + 1
$   prsub'prsub_counter'="copy_text(res);"
$   prsub_counter = prsub_counter + 1
$   prsub'prsub_counter'="endif;"
$  endif
$!#
$
$ if "''prefix_dir'" .nes. ""
$  then
$   prsub_counter = prsub_counter + 1
$   prsub'prsub_counter'="position(beginning_of (main_buffer));"
$   prsub_counter = prsub_counter + 1
$   prsub'prsub_counter'= "r := search_quietly(LINE_BEGIN+(""""prefix_dir""""+ ((p_0_or_more_spc +""""="""")@r1)+(p_0_or_more_spc@r2)+scan(""""""""))@r0+LINE_END,FORWARD);"
$   prsub_counter = prsub_counter + 1
$   prsub'prsub_counter'="if (r <> 0)"
$   prsub_counter = prsub_counter + 1
$   prsub'prsub_counter'="then"
$   prsub_counter = prsub_counter + 1
$! This is a piece of deep DCL magic.
$   prsub_support'prsub_counter'="__prsub_tmp:='prefix_dir'"
$   prsub'prsub_counter'="res := """"prefix_dir"""" + """"=""""+""""'"+"'__prsub_tmp'"""";"
$   prsub_counter = prsub_counter + 1
$   prsub'prsub_counter'="erase(r0);"
$   prsub_counter = prsub_counter + 1
$   prsub'prsub_counter'="position(r0);"
$   prsub_counter = prsub_counter + 1
$   prsub'prsub_counter'="copy_text(res);"
$   prsub_counter = prsub_counter + 1
$   prsub'prsub_counter'="endif;"
$  endif
$!#
$
$ if "''prefix'" .nes. ""
$  then
$   prsub_counter = prsub_counter + 1
$   prsub'prsub_counter'="position(beginning_of (main_buffer));"
$   prsub_counter = prsub_counter + 1
$   prsub'prsub_counter'= "r := search_quietly(LINE_BEGIN+(""""prefix""""+ ((p_0_or_more_spc +""""="""")@r1)+(p_0_or_more_spc@r2)+scan(""""""""))@r0+LINE_END,FORWARD);"
$   prsub_counter = prsub_counter + 1
$   prsub'prsub_counter'="if (r <> 0)"
$   prsub_counter = prsub_counter + 1
$   prsub'prsub_counter'="then"
$   prsub_counter = prsub_counter + 1
$! This is a piece of deep DCL magic.
$   prsub_support'prsub_counter'="__prsub_tmp:='prefix'"
$   prsub'prsub_counter'="res := """"prefix"""" + """"=""""+""""'"+"'__prsub_tmp'"""";"
$   prsub_counter = prsub_counter + 1
$   prsub'prsub_counter'="erase(r0);"
$   prsub_counter = prsub_counter + 1
$   prsub'prsub_counter'="position(r0);"
$   prsub_counter = prsub_counter + 1
$   prsub'prsub_counter'="copy_text(res);"
$   prsub_counter = prsub_counter + 1
$   prsub'prsub_counter'="endif;"
$  endif
$!#
$
$ if "''exec_prefix_dev'" .nes. ""
$  then
$   prsub_counter = prsub_counter + 1
$   prsub'prsub_counter'="position(beginning_of (main_buffer));"
$   prsub_counter = prsub_counter + 1
$   prsub'prsub_counter'= "r := search_quietly(LINE_BEGIN+(""""exec_prefix_dev""""+ ((p_0_or_more_spc +""""="""")@r1)+(p_0_or_more_spc@r2)+scan(""""""""))@r0+LINE_END,FORWARD);"
$   prsub_counter = prsub_counter + 1
$   prsub'prsub_counter'="if (r <> 0)"
$   prsub_counter = prsub_counter + 1
$   prsub'prsub_counter'="then"
$   prsub_counter = prsub_counter + 1
$! This is a piece of deep DCL magic.
$   prsub_support'prsub_counter'="__prsub_tmp:='exec_prefix_dev'"
$   prsub'prsub_counter'="res := """"exec_prefix_dev"""" + """"=""""+""""'"+"'__prsub_tmp'"""";"
$   prsub_counter = prsub_counter + 1
$   prsub'prsub_counter'="erase(r0);"
$   prsub_counter = prsub_counter + 1
$   prsub'prsub_counter'="position(r0);"
$   prsub_counter = prsub_counter + 1
$   prsub'prsub_counter'="copy_text(res);"
$   prsub_counter = prsub_counter + 1
$   prsub'prsub_counter'="endif;"
$  endif
$!#
$
$ if "''exec_prefix_dir'" .nes. ""
$  then
$   prsub_counter = prsub_counter + 1
$   prsub'prsub_counter'="position(beginning_of (main_buffer));"
$   prsub_counter = prsub_counter + 1
$   prsub'prsub_counter'= "r := search_quietly(LINE_BEGIN+(""""exec_prefix_dir""""+ ((p_0_or_more_spc +""""="""")@r1)+(p_0_or_more_spc@r2)+scan(""""""""))@r0+LINE_END,FORWARD);"
$   prsub_counter = prsub_counter + 1
$   prsub'prsub_counter'="if (r <> 0)"
$   prsub_counter = prsub_counter + 1
$   prsub'prsub_counter'="then"
$   prsub_counter = prsub_counter + 1
$! This is a piece of deep DCL magic.
$   prsub_support'prsub_counter'="__prsub_tmp:='exec_prefix_dir'"
$   prsub'prsub_counter'="res := """"exec_prefix_dir"""" + """"=""""+""""'"+"'__prsub_tmp'"""";"
$   prsub_counter = prsub_counter + 1
$   prsub'prsub_counter'="erase(r0);"
$   prsub_counter = prsub_counter + 1
$   prsub'prsub_counter'="position(r0);"
$   prsub_counter = prsub_counter + 1
$   prsub'prsub_counter'="copy_text(res);"
$   prsub_counter = prsub_counter + 1
$   prsub'prsub_counter'="endif;"
$  endif
$!#
$
$ if "''exec_prefix'" .nes. ""
$  then
$   prsub_counter = prsub_counter + 1
$   prsub'prsub_counter'="position(beginning_of (main_buffer));"
$   prsub_counter = prsub_counter + 1
$   prsub'prsub_counter'= "r := search_quietly(LINE_BEGIN+(""""exec_prefix""""+ ((p_0_or_more_spc +""""="""")@r1)+(p_0_or_more_spc@r2)+scan(""""""""))@r0+LINE_END,FORWARD);"
$   prsub_counter = prsub_counter + 1
$   prsub'prsub_counter'="if (r <> 0)"
$   prsub_counter = prsub_counter + 1
$   prsub'prsub_counter'="then"
$   prsub_counter = prsub_counter + 1
$! This is a piece of deep DCL magic.
$   prsub_support'prsub_counter'="__prsub_tmp:='exec_prefix'"
$   prsub'prsub_counter'="res := """"exec_prefix"""" + """"=""""+""""'"+"'__prsub_tmp'"""";"
$   prsub_counter = prsub_counter + 1
$   prsub'prsub_counter'="erase(r0);"
$   prsub_counter = prsub_counter + 1
$   prsub'prsub_counter'="position(r0);"
$   prsub_counter = prsub_counter + 1
$   prsub'prsub_counter'="copy_text(res);"
$   prsub_counter = prsub_counter + 1
$   prsub'prsub_counter'="endif;"
$  endif
$!#
$
$!# Substitute for predefined variables.
$
$ set noon
$ if f$search("CONFIG.STATUS.*") .nes. "" then delete/nolog config.status.*
$ set on
$ write sys$output "creating config.status"
$ open/write config_status_file config.status
$ write config_status_file "$! Generated automatically by CONFIGURE.COM."
$ write config_status_file "$! Run this file to recreate the current configuration."
$ write config_status_file "$! This directory was configured as follows,"
$ write config_status_file "$! on host "+f$getsyi("NODENAME")+":"
$ write config_status_file "$!"
$ __tmp_p = f$env("PROCEDURE")
$ __tmp_p = f$parse(__tmp_p,,,"DEVICE")+f$parse(__tmp_p,,,"DIRECTORY")+ -
	f$parse(__tmp_p,,,"NAME")+f$parse(__tmp_p,,,"TYPE")
$ write config_status_file "$! @"+__tmp_p+" "+configure_args
$ write config_status_file "$"
$ write config_status_file "$! A trick to read the whole file before processing..."
$ write config_status_file "$! This way, CONFIG.STATUS will not complain at the end of a --RECHECK."
$ write config_status_file "$ goto config_status_end"
$ write config_status_file "$config_status_begin:"
$ write config_status_file "$"
$ write config_status_file "$ argc = 8"
$ write config_status_file "$config_status_loop1:"
$ write config_status_file "$ if argc .gt. 0
$ write config_status_file "$  then
$ write config_status_file "$   if p'argc' .eqs. """""
$ write config_status_file "$    then"
$ write config_status_file "$     argc = argc - 1"
$ write config_status_file "$     goto config_status_loop1"
$ write config_status_file "$    endif"
$ write config_status_file "$  endif"
$ write config_status_file "$ i = 0"
$ write config_status_file "$config_status_loop2:"
$ write config_status_file "$ i = i + 1"
$ write config_status_file "$ if i .le. argc"
$ write config_status_file "$  then"
$ write config_status_file "$   if p'i' .eqs. ""-RECHECK"" -"
$ write config_status_file "	.or. p'i' .eqs. f$extract(0,f$length(p'i'),""--RECHECK"")"
$ write config_status_file "$    then"
$ write config_status_file "$     write sys$output ""@"+__tmp_p+" "+configure_args+""""
$ write config_status_file "$     @"+__tmp_p+" "+configure_args
$ write config_status_file "$     exit $status"
$ write config_status_file "$    else"
$ write config_status_file "$     write sys$error ""Usage: @config.status --recheck"""
$ write config_status_file "$     exit 0"
$ write config_status_file "$    endif"
$ write config_status_file "$   goto config_status_loop2"
$ write config_status_file "$  endif"
$ write config_status_file "$"
$ write config_status_file "$ set noon"
$ write config_status_file "$! _tmp = f$parse(""[.src]config.h"","";*"",,,""SYNTAX_ONLY"")
$ write config_status_file "$! if f$search(_tmp) .nes. """" then delete/nolog '_tmp'"
$ write config_status_file "$ if f$search(""CONFTEST*.*.*"") .nes. """" then delete/nolog conftest*.*.*"
$ write config_status_file "$ if f$search(""CONFDEFS*.*.*"") .nes. """" then delete/nolog confdefs*.*.*"
$ write config_status_file "$ set on"
$ write config_status_file "$ CC=""''CC'""" ! Experimental
$ write config_status_file "$ sys_includes=""''sys_includes'""" ! Experimental
$ write config_status_file "$ LIBS=""''LIBS'""" ! Experimental
$ write config_status_file "$ CFLAGS=""''CFLAGS'""" ! Experimental
$ write config_status_file "$ LN_S=""''LN_S'""" ! Experimental
$ write config_status_file "$ CPP=""''CPP'""" ! Experimental
$ write config_status_file "$ INSTALL=""''INSTALL'""" ! Experimental
$ write config_status_file "$ INSTALL_PROGRAM=""''INSTALL_PROGRAM'""" ! Experimental
$ write config_status_file "$ INSTALL_DATA=""''INSTALL_DATA'""" ! Experimental
$ write config_status_file "$ YACC=""''YACC'""" ! Experimental
$ write config_status_file "$ netinet_includes=""''netinet_includes'""" ! Experimental
$ write config_status_file "$ arpa_includes=""''arpa_includes'""" ! Experimental
$ write config_status_file "$ x_includes=""''x_includes'""" ! Experimental
$ write config_status_file "$ ALLOCA=""''ALLOCA'""" ! Experimental
$ write config_status_file "$ configuration=""''configuration'""" ! Experimental
$ write config_status_file "$ version=""''version'""" ! Experimental
$ write config_status_file "$ version_us=""''version_us'""" ! Experimental
$ write config_status_file "$ srcdir_dev=""''srcdir_dev'""" ! Experimental
$ write config_status_file "$ srcdir_dir=""''srcdir_dir'""" ! Experimental
$ write config_status_file "$ srcdir=""''srcdir'""" ! Experimental
$ write config_status_file "$ libsrc_libs=""''libsrc_libs'""" ! Experimental
$ write config_status_file "$ LD_SWITCH_X_SITE=""''LD_SWITCH_X_SITE'""" ! Experimental
$ write config_status_file "$ C_SWITCH_MACHINE=""''C_SWITCH_MACHINE'""" ! Experimental
$ write config_status_file "$ C_SWITCH_X_MACHINE=""''C_SWITCH_X_MACHINE'""" ! Experimental
$ write config_status_file "$ C_SWITCH_SYSTEM=""''C_SWITCH_SYSTEM'""" ! Experimental
$ write config_status_file "$ C_SWITCH_X_SYSTEM=""''C_SWITCH_X_SYSTEM'""" ! Experimental
$ write config_status_file "$ C_SWITCH_SITE=""''C_SWITCH_SITE'""" ! Experimental
$ write config_status_file "$ C_SWITCH_X_SITE=""''C_SWITCH_X_SITE'""" ! Experimental
$ write config_status_file "$ C_DEBUG_SWITCH=""''C_DEBUG_SWITCH'""" ! Experimental
$ write config_status_file "$ LDFLAGS=""''LDFLAGS'""" ! Experimental
$ write config_status_file "$ startupdir=""''startupdir'""" ! Experimental
$ write config_status_file "$ vuelibdir=""''vuelibdir'""" ! Experimental
$ write config_status_file "$ prefix_dev=""''prefix_dev'""" ! Experimental
$ write config_status_file "$ prefix_dir=""''prefix_dir'""" ! Experimental
$ write config_status_file "$ prefix=""''prefix'""" ! Experimental
$ write config_status_file "$ exec_prefix_dev=""''exec_prefix_dev'""" ! Experimental
$ write config_status_file "$ exec_prefix_dir=""''exec_prefix_dir'""" ! Experimental
$ write config_status_file "$ exec_prefix=""''exec_prefix'""" ! Experimental
$ write config_status_file "$ bindir_dev=""''bindir_dev'""" ! Experimental
$ write config_status_file "$ bindir_dir=""''bindir_dir'""" ! Experimental
$ write config_status_file "$ bindir=""''bindir'""" ! Experimental
$ write config_status_file "$ datadir_dev=""''datadir_dev'""" ! Experimental
$ write config_status_file "$ datadir_dir=""''datadir_dir'""" ! Experimental
$ write config_status_file "$ datadir=""''datadir'""" ! Experimental
$ write config_status_file "$ statedir_dev=""''statedir_dev'""" ! Experimental
$ write config_status_file "$ statedir_dir=""''statedir_dir'""" ! Experimental
$ write config_status_file "$ statedir=""''statedir'""" ! Experimental
$ write config_status_file "$ libdir_dev=""''libdir_dev'""" ! Experimental
$ write config_status_file "$ libdir_dir=""''libdir_dir'""" ! Experimental
$ write config_status_file "$ libdir=""''libdir'""" ! Experimental
$ write config_status_file "$ mandir_dev=""''mandir_dev'""" ! Experimental
$ write config_status_file "$ mandir_dir=""''mandir_dir'""" ! Experimental
$ write config_status_file "$ mandir=""''mandir'""" ! Experimental
$ write config_status_file "$ infodir_dev=""''infodir_dev'""" ! Experimental
$ write config_status_file "$ infodir_dir=""''infodir_dir'""" ! Experimental
$ write config_status_file "$ infodir=""''infodir'""" ! Experimental
$ write config_status_file "$ lispdir_dev=""''lispdir_dev'""" ! Experimental
$ write config_status_file "$ lispdir_dir=""''lispdir_dir'""" ! Experimental
$ write config_status_file "$ lispdir_file=""''lispdir_file'""" ! Experimental
$ write config_status_file "$ lispdir=""''lispdir'""" ! Experimental
$ write config_status_file "$ locallisppath=""''locallisppath'""" ! Experimental
$ write config_status_file "$ lisppath=""''lisppath'""" ! Experimental
$ write config_status_file "$ etcdir_dev=""''etcdir_dev'""" ! Experimental
$ write config_status_file "$ etcdir_dir=""''etcdir_dir'""" ! Experimental
$ write config_status_file "$ etcdir_file=""''etcdir_file'""" ! Experimental
$ write config_status_file "$ etcdir=""''etcdir'""" ! Experimental
$ write config_status_file "$ lockdir_dev=""''lockdir_dev'""" ! Experimental
$ write config_status_file "$ lockdir_dir=""''lockdir_dir'""" ! Experimental
$ write config_status_file "$ lockdir_file=""''lockdir_file'""" ! Experimental
$ write config_status_file "$ lockdir=""''lockdir'""" ! Experimental
$ write config_status_file "$ archlibdir_dev=""''archlibdir_dev'""" ! Experimental
$ write config_status_file "$ archlibdir_dir=""''archlibdir_dir'""" ! Experimental
$ write config_status_file "$ archlibdir=""''archlibdir'""" ! Experimental
$ write config_status_file "$ vmslibdir_dev=""''vmslibdir_dev'""" ! Experimental
$ write config_status_file "$ vmslibdir_dir=""''vmslibdir_dir'""" ! Experimental
$ write config_status_file "$ vmslibdir=""''vmslibdir'""" ! Experimental
$ write config_status_file "$ OPTS=""''OPTS'""" ! Experimental
$ i = 0
$prsub_loop:
$ i = i + 1
$ if f$type(prsub'i') .nes. ""
$  then"
$   if f$type(prsub_support'i') .nes. ""
$    then
$     _tmp = prsub_support'i'
$     write config_status_file "$   ",_tmp
$    endif
$   _tmp = prsub'i'
$   write config_status_file "$   prsub''i'=""",_tmp,""""
$   goto prsub_loop
$  endif
$ i = 0
$extrasub_loop:
$ i = i + 1
$ if f$type(extrasub'i') .nes. ""
$  then"
$   _tmp = extrasub'i'
$   write config_status_file "$   extrasub''i'=""''_tmp'"""
$   goto extrasub_loop
$  endif
$ write config_status_file "$ CC := 'CC'"
$ write config_status_file "$ sys_includes := 'sys_includes'"
$ write config_status_file "$ LIBS := 'LIBS'"
$ write config_status_file "$ CFLAGS := 'CFLAGS'"
$ write config_status_file "$ LN_S := 'LN_S'"
$ write config_status_file "$ CPP := 'CPP'"
$ write config_status_file "$ INSTALL := 'INSTALL'"
$ write config_status_file "$ INSTALL_PROGRAM := 'INSTALL_PROGRAM'"
$ write config_status_file "$ INSTALL_DATA := 'INSTALL_DATA'"
$ write config_status_file "$ YACC := 'YACC'"
$ write config_status_file "$ netinet_includes := 'netinet_includes'"
$ write config_status_file "$ arpa_includes := 'arpa_includes'"
$ write config_status_file "$ x_includes := 'x_includes'"
$ write config_status_file "$ ALLOCA := 'ALLOCA'"
$ write config_status_file "$ configuration := 'configuration'"
$ write config_status_file "$ version := 'version'"
$ write config_status_file "$ version_us := 'version_us'"
$ write config_status_file "$ srcdir_dev := 'srcdir_dev'"
$ write config_status_file "$ srcdir_dir := 'srcdir_dir'"
$ write config_status_file "$ srcdir := 'srcdir'"
$ write config_status_file "$ libsrc_libs := 'libsrc_libs'"
$ write config_status_file "$ LD_SWITCH_X_SITE := 'LD_SWITCH_X_SITE'"
$ write config_status_file "$ C_SWITCH_MACHINE := 'C_SWITCH_MACHINE'"
$ write config_status_file "$ C_SWITCH_X_MACHINE := 'C_SWITCH_X_MACHINE'"
$ write config_status_file "$ C_SWITCH_SYSTEM := 'C_SWITCH_SYSTEM'"
$ write config_status_file "$ C_SWITCH_X_SYSTEM := 'C_SWITCH_X_SYSTEM'"
$ write config_status_file "$ C_SWITCH_SITE := 'C_SWITCH_SITE'"
$ write config_status_file "$ C_SWITCH_X_SITE := 'C_SWITCH_X_SITE'"
$ write config_status_file "$ C_DEBUG_SWITCH := 'C_DEBUG_SWITCH'"
$ write config_status_file "$ LDFLAGS := 'LDFLAGS'"
$ write config_status_file "$ startupdir := 'startupdir'"
$ write config_status_file "$ vuelibdir := 'vuelibdir'"
$ write config_status_file "$ prefix_dev := 'prefix_dev'"
$ write config_status_file "$ prefix_dir := 'prefix_dir'"
$ write config_status_file "$ prefix := 'prefix'"
$ write config_status_file "$ exec_prefix_dev := 'exec_prefix_dev'"
$ write config_status_file "$ exec_prefix_dir := 'exec_prefix_dir'"
$ write config_status_file "$ exec_prefix := 'exec_prefix'"
$ write config_status_file "$ bindir_dev := 'bindir_dev'"
$ write config_status_file "$ bindir_dir := 'bindir_dir'"
$ write config_status_file "$ bindir := 'bindir'"
$ write config_status_file "$ datadir_dev := 'datadir_dev'"
$ write config_status_file "$ datadir_dir := 'datadir_dir'"
$ write config_status_file "$ datadir := 'datadir'"
$ write config_status_file "$ statedir_dev := 'statedir_dev'"
$ write config_status_file "$ statedir_dir := 'statedir_dir'"
$ write config_status_file "$ statedir := 'statedir'"
$ write config_status_file "$ libdir_dev := 'libdir_dev'"
$ write config_status_file "$ libdir_dir := 'libdir_dir'"
$ write config_status_file "$ libdir := 'libdir'"
$ write config_status_file "$ mandir_dev := 'mandir_dev'"
$ write config_status_file "$ mandir_dir := 'mandir_dir'"
$ write config_status_file "$ mandir := 'mandir'"
$ write config_status_file "$ infodir_dev := 'infodir_dev'"
$ write config_status_file "$ infodir_dir := 'infodir_dir'"
$ write config_status_file "$ infodir := 'infodir'"
$ write config_status_file "$ lispdir_dev := 'lispdir_dev'"
$ write config_status_file "$ lispdir_dir := 'lispdir_dir'"
$ write config_status_file "$ lispdir_file := 'lispdir_file'"
$ write config_status_file "$ lispdir := 'lispdir'"
$ write config_status_file "$ locallisppath := 'locallisppath'"
$ write config_status_file "$ lisppath := 'lisppath'"
$ write config_status_file "$ etcdir_dev := 'etcdir_dev'"
$ write config_status_file "$ etcdir_dir := 'etcdir_dir'"
$ write config_status_file "$ etcdir_file := 'etcdir_file'"
$ write config_status_file "$ etcdir := 'etcdir'"
$ write config_status_file "$ lockdir_dev := 'lockdir_dev'"
$ write config_status_file "$ lockdir_dir := 'lockdir_dir'"
$ write config_status_file "$ lockdir_file := 'lockdir_file'"
$ write config_status_file "$ lockdir := 'lockdir'"
$ write config_status_file "$ archlibdir_dev := 'archlibdir_dev'"
$ write config_status_file "$ archlibdir_dir := 'archlibdir_dir'"
$ write config_status_file "$ archlibdir := 'archlibdir'"
$ write config_status_file "$ vmslibdir_dev := 'vmslibdir_dev'"
$ write config_status_file "$ vmslibdir_dir := 'vmslibdir_dir'"
$ write config_status_file "$ vmslibdir := 'vmslibdir'"
$ write config_status_file "$ OPTS := 'OPTS'"
$ write config_status_file "$"
$ write config_status_file "$ top_srcdir=srcdir"
$ write config_status_file "$ top_srcdir_dev=srcdir_dev"
$ write config_status_file "$ top_srcdir_dir=srcdir_dir"
$ write config_status_file "$"
$ write config_status_file "$ if f$type(CONFIG_FILES) .eqs. """" then CONFIG_FILES = ""[-]"" +-"
$ write config_status_file "	"" descrip.mms [.lib-src]descrip.mms [.oldXMenu]descrip.mms"" +-"
$ write config_status_file "	"" [.vms]descrip.mms [.src]descrip.mms_in"" +-"
$ write config_status_file "	"" [.vms]makepaths.com [.vms]compXmenu.com [.vms]compvmslib.com"" +-"
$ write config_status_file "	"" [.vms]precomp.com [.vms]compile.com"" +-"
$ write config_status_file "	"" [.vms]complibsrc.com [.vms]makedoc.com_in"" +-"
$ write config_status_file "	"" [.vms]emacs_install.com [.vms]emacs_vue.com"" +-"
$ write config_status_file "	"""""
$ write config_status_file "$! CONFIG_FILE_i = -1"
$ write config_status_file "$ CONFIG_FILE_i = 0"
$ write config_status_file "$config_status_loop3:"
$ write config_status_file "$! if CONFIG_FILE_i .eq. -1"
$ write config_status_file "$!  then"
$ write config_status_file "$!   file = ""[-]"""
$ write config_status_file "$!  else"
$ write config_status_file "$   file = f$element(CONFIG_FILE_i,"" "",CONFIG_FILES)"
$ write config_status_file "$!  endif"
$ write config_status_file "$ dummy = ""'"+"'file'""" ! debug
$ write config_status_file "$ CONFIG_FILE_i = CONFIG_FILE_i + 1"
$ write config_status_file "$ if file .eqs. ""[-]"" then goto config_status_loop3"
$ write config_status_file "$ if file .nes. "" """
$ write config_status_file "$  then"
$ write config_status_file "$   srcdir=top_srcdir"
$ write config_status_file "$   srcdir_dev=top_srcdir_dev"
$ write config_status_file "$   srcdir_dir=top_srcdir_dir"
$ write config_status_file "$!   dir=f$parse(file,,,""DEVICE"") + f$parse(file,,,""DIRECTORY"")"
$ write config_status_file "$   dir=""'f$parse(file,,,""""DIRECTORY"""")'"""
$ write config_status_file "$   if f$parse(file,,,""NAME"") + f$parse(file,,,""TYPE"") .eqs. f$edit(file,""UPCASE"") then dir = ""[]"""
$ write config_status_file "$   if dir .nes. file"
$ write config_status_file "$    then"
$ write config_status_file "$     save_def = f$environment(""DEFAULT"")"
$ write config_status_file "$     set def 'top_srcdir'"
$ write config_status_file "$     _dir := 'dir'" ! This better be relative
$ write config_status_file "$     set def '_dir'"
$ write config_status_file "$     srcdir = f$environment(""DEFAULT"")"
$ write config_status_file "$     srcdir_dev = f$parse(srcdir,,,""DEVICE"")"
$ write config_status_file "$     srcdir_dir = f$parse(srcdir,,,""DIRECTORY"") - ""["" - ""]"" - ""<"" - "">"""
$ write config_status_file "$     set def 'save_def'"
$ write config_status_file "$     dir := 'dir'" ! This better be relative
$ write config_status_file "$     set noon"
$ write config_status_file "$     if f$parse(dir) .eqs. """" then create/dir 'dir'"
$ write config_status_file "$     set on"
$ write config_status_file "$    endif"
$ write config_status_file "$   write sys$output ""creating '"+"'file'"""
$ write config_status_file "$   set noon"
$ write config_status_file "$   _tmp = f$parse(file,"";*"")"
$ write config_status_file "$!   if f$search(_tmp) .nes. """" then delete/nolog '_tmp'"
$ write config_status_file "$   input_file = f$parse(file,,,""NAME"")"
$ write config_status_file "$   if f$parse(file,,,""TYPE"") .eqs. ""."""
$ write config_status_file "$    then input_file = input_file + "".IN"""
$ write config_status_file "$    else input_file = input_file + f$parse(file,,,""TYPE"") + ""_IN"""
$ write config_status_file "$    endif"
$ write config_status_file "$   open/write config_status_tpu conftest.tpu
$ write config_status_file "$   type sys$input:/out=config_status_tpu"
$ write config_status_file "procedure TPU_substitute(pat,value)"
$ write config_status_file "	local r;"
$ write config_status_file "	position (beginning_of (main_buffer));"
$ write config_status_file "	loop"
$ write config_status_file "		r := search_quietly (pat, FORWARD);"
$ write config_status_file "		EXITIF r = 0;"
$ write config_status_file "		erase (r);"
$ write config_status_file "		position (r);"
$ write config_status_file "		copy_text (value);"
$ write config_status_file "		position (end_of (r));"
$ write config_status_file "	endloop;"
$ write config_status_file "endprocedure;"
$ write config_status_file "! This is the main thing."
$ write config_status_file "input_file := GET_INFO (COMMAND_LINE, ""file_name"");"
$ write config_status_file "main_buffer := CREATE_BUFFER (""main"", input_file);"
$ write config_status_file "p_0_or_more_spc := (span("" ""+ASCII(9)) | """");"
$ write config_status_file "position (beginning_of (main_buffer));"
$ write config_status_file "! Here it is time to put the calls."
$ write config_status_file "$   i = 0"
$ write config_status_file "$prsub_write_loop:"
$ write config_status_file "$   i = i + 1"
$ write config_status_file "$   if f$type(prsub'i') .nes. ""
$ write config_status_file "$    then
$ write config_status_file "$     _tmp = prsub'i'"
$ write config_status_file "$     write config_status_tpu _tmp"
$ write config_status_file "$     goto prsub_write_loop"
$ write config_status_file "$    endif"
$ write config_status_file "$   i = 0"
$ write config_status_file "$extrasub_write_loop:"
$ write config_status_file "$   i = i + 1"
$ write config_status_file "$   if f$type(extrasub'i') .nes. ""
$ write config_status_file "$    then
$ write config_status_file "$     _tmp = extrasub'i'"
$ write config_status_file "$     write config_status_tpu _tmp"
$ write config_status_file "$     goto extrasub_write_loop"
$ write config_status_file "$    endif"
$ write config_status_file "$ __config_status_tmp := 'CC'"
$ write config_status_file "$ write config_status_tpu ""TPU_substitute(""""@""""+""""CC""""+""""@"""","""""",__config_status_tmp,"""""");""" ! Experimental
$ write config_status_file "$ __config_status_tmp := 'sys_includes'"
$ write config_status_file "$ write config_status_tpu ""TPU_substitute(""""@""""+""""sys_includes""""+""""@"""","""""",__config_status_tmp,"""""");""" ! Experimental
$ write config_status_file "$ __config_status_tmp := 'LIBS'"
$ write config_status_file "$ write config_status_tpu ""TPU_substitute(""""@""""+""""LIBS""""+""""@"""","""""",__config_status_tmp,"""""");""" ! Experimental
$ write config_status_file "$ __config_status_tmp := 'CFLAGS'"
$ write config_status_file "$ write config_status_tpu ""TPU_substitute(""""@""""+""""CFLAGS""""+""""@"""","""""",__config_status_tmp,"""""");""" ! Experimental
$ write config_status_file "$ __config_status_tmp := 'LN_S'"
$ write config_status_file "$ write config_status_tpu ""TPU_substitute(""""@""""+""""LN_S""""+""""@"""","""""",__config_status_tmp,"""""");""" ! Experimental
$ write config_status_file "$ __config_status_tmp := 'CPP'"
$ write config_status_file "$ write config_status_tpu ""TPU_substitute(""""@""""+""""CPP""""+""""@"""","""""",__config_status_tmp,"""""");""" ! Experimental
$ write config_status_file "$ __config_status_tmp := 'INSTALL'"
$ write config_status_file "$ write config_status_tpu ""TPU_substitute(""""@""""+""""INSTALL""""+""""@"""","""""",__config_status_tmp,"""""");""" ! Experimental
$ write config_status_file "$ __config_status_tmp := 'INSTALL_PROGRAM'"
$ write config_status_file "$ write config_status_tpu ""TPU_substitute(""""@""""+""""INSTALL_PROGRAM""""+""""@"""","""""",__config_status_tmp,"""""");""" ! Experimental
$ write config_status_file "$ __config_status_tmp := 'INSTALL_DATA'"
$ write config_status_file "$ write config_status_tpu ""TPU_substitute(""""@""""+""""INSTALL_DATA""""+""""@"""","""""",__config_status_tmp,"""""");""" ! Experimental
$ write config_status_file "$ __config_status_tmp := 'YACC'"
$ write config_status_file "$ write config_status_tpu ""TPU_substitute(""""@""""+""""YACC""""+""""@"""","""""",__config_status_tmp,"""""");""" ! Experimental
$ write config_status_file "$ __config_status_tmp := 'netinet_includes'"
$ write config_status_file "$ write config_status_tpu ""TPU_substitute(""""@""""+""""netinet_includes""""+""""@"""","""""",__config_status_tmp,"""""");""" ! Experimental
$ write config_status_file "$ __config_status_tmp := 'arpa_includes'"
$ write config_status_file "$ write config_status_tpu ""TPU_substitute(""""@""""+""""arpa_includes""""+""""@"""","""""",__config_status_tmp,"""""");""" ! Experimental
$ write config_status_file "$ __config_status_tmp := 'x_includes'"
$ write config_status_file "$ write config_status_tpu ""TPU_substitute(""""@""""+""""x_includes""""+""""@"""","""""",__config_status_tmp,"""""");""" ! Experimental
$ write config_status_file "$ __config_status_tmp := 'ALLOCA'"
$ write config_status_file "$ write config_status_tpu ""TPU_substitute(""""@""""+""""ALLOCA""""+""""@"""","""""",__config_status_tmp,"""""");""" ! Experimental
$ write config_status_file "$ __config_status_tmp := 'configuration'"
$ write config_status_file "$ write config_status_tpu ""TPU_substitute(""""@""""+""""configuration""""+""""@"""","""""",__config_status_tmp,"""""");""" ! Experimental
$ write config_status_file "$ __config_status_tmp := 'version'"
$ write config_status_file "$ write config_status_tpu ""TPU_substitute(""""@""""+""""version""""+""""@"""","""""",__config_status_tmp,"""""");""" ! Experimental
$ write config_status_file "$ __config_status_tmp := 'version_us'"
$ write config_status_file "$ write config_status_tpu ""TPU_substitute(""""@""""+""""version_us""""+""""@"""","""""",__config_status_tmp,"""""");""" ! Experimental
$ write config_status_file "$ __config_status_tmp := 'srcdir_dev'"
$ write config_status_file "$ write config_status_tpu ""TPU_substitute(""""@""""+""""srcdir_dev""""+""""@"""","""""",__config_status_tmp,"""""");""" ! Experimental
$ write config_status_file "$ __config_status_tmp := 'srcdir_dir'"
$ write config_status_file "$ write config_status_tpu ""TPU_substitute(""""@""""+""""srcdir_dir""""+""""@"""","""""",__config_status_tmp,"""""");""" ! Experimental
$ write config_status_file "$ __config_status_tmp := 'srcdir'"
$ write config_status_file "$ write config_status_tpu ""TPU_substitute(""""@""""+""""srcdir""""+""""@"""","""""",__config_status_tmp,"""""");""" ! Experimental
$ write config_status_file "$ __config_status_tmp := 'libsrc_libs'"
$ write config_status_file "$ write config_status_tpu ""TPU_substitute(""""@""""+""""libsrc_libs""""+""""@"""","""""",__config_status_tmp,"""""");""" ! Experimental
$ write config_status_file "$ __config_status_tmp := 'LD_SWITCH_X_SITE'"
$ write config_status_file "$ write config_status_tpu ""TPU_substitute(""""@""""+""""LD_SWITCH_X_SITE""""+""""@"""","""""",__config_status_tmp,"""""");""" ! Experimental
$ write config_status_file "$ __config_status_tmp := 'C_SWITCH_MACHINE'"
$ write config_status_file "$ write config_status_tpu ""TPU_substitute(""""@""""+""""C_SWITCH_MACHINE""""+""""@"""","""""",__config_status_tmp,"""""");""" ! Experimental
$ write config_status_file "$ __config_status_tmp := 'C_SWITCH_X_MACHINE'"
$ write config_status_file "$ write config_status_tpu ""TPU_substitute(""""@""""+""""C_SWITCH_X_MACHINE""""+""""@"""","""""",__config_status_tmp,"""""");""" ! Experimental
$ write config_status_file "$ __config_status_tmp := 'C_SWITCH_SYSTEM'"
$ write config_status_file "$ write config_status_tpu ""TPU_substitute(""""@""""+""""C_SWITCH_SYSTEM""""+""""@"""","""""",__config_status_tmp,"""""");""" ! Experimental
$ write config_status_file "$ __config_status_tmp := 'C_SWITCH_X_SYSTEM'"
$ write config_status_file "$ write config_status_tpu ""TPU_substitute(""""@""""+""""C_SWITCH_X_SYSTEM""""+""""@"""","""""",__config_status_tmp,"""""");""" ! Experimental
$ write config_status_file "$ __config_status_tmp := 'C_SWITCH_SITE'"
$ write config_status_file "$ write config_status_tpu ""TPU_substitute(""""@""""+""""C_SWITCH_SITE""""+""""@"""","""""",__config_status_tmp,"""""");""" ! Experimental
$ write config_status_file "$ __config_status_tmp := 'C_SWITCH_X_SITE'"
$ write config_status_file "$ write config_status_tpu ""TPU_substitute(""""@""""+""""C_SWITCH_X_SITE""""+""""@"""","""""",__config_status_tmp,"""""");""" ! Experimental
$ write config_status_file "$ __config_status_tmp := 'C_DEBUG_SWITCH'"
$ write config_status_file "$ write config_status_tpu ""TPU_substitute(""""@""""+""""C_DEBUG_SWITCH""""+""""@"""","""""",__config_status_tmp,"""""");""" ! Experimental
$ write config_status_file "$ __config_status_tmp := 'LDFLAGS'"
$ write config_status_file "$ write config_status_tpu ""TPU_substitute(""""@""""+""""LDFLAGS""""+""""@"""","""""",__config_status_tmp,"""""");""" ! Experimental
$ write config_status_file "$ __config_status_tmp := 'startupdir'"
$ write config_status_file "$ write config_status_tpu ""TPU_substitute(""""@""""+""""startupdir""""+""""@"""","""""",__config_status_tmp,"""""");""" ! Experimental
$ write config_status_file "$ __config_status_tmp := 'vuelibdir'"
$ write config_status_file "$ write config_status_tpu ""TPU_substitute(""""@""""+""""vuelibdir""""+""""@"""","""""",__config_status_tmp,"""""");""" ! Experimental
$ write config_status_file "$ __config_status_tmp := 'prefix_dev'"
$ write config_status_file "$ write config_status_tpu ""TPU_substitute(""""@""""+""""prefix_dev""""+""""@"""","""""",__config_status_tmp,"""""");""" ! Experimental
$ write config_status_file "$ __config_status_tmp := 'prefix_dir'"
$ write config_status_file "$ write config_status_tpu ""TPU_substitute(""""@""""+""""prefix_dir""""+""""@"""","""""",__config_status_tmp,"""""");""" ! Experimental
$ write config_status_file "$ __config_status_tmp := 'prefix'"
$ write config_status_file "$ write config_status_tpu ""TPU_substitute(""""@""""+""""prefix""""+""""@"""","""""",__config_status_tmp,"""""");""" ! Experimental
$ write config_status_file "$ __config_status_tmp := 'exec_prefix_dev'"
$ write config_status_file "$ write config_status_tpu ""TPU_substitute(""""@""""+""""exec_prefix_dev""""+""""@"""","""""",__config_status_tmp,"""""");""" ! Experimental
$ write config_status_file "$ __config_status_tmp := 'exec_prefix_dir'"
$ write config_status_file "$ write config_status_tpu ""TPU_substitute(""""@""""+""""exec_prefix_dir""""+""""@"""","""""",__config_status_tmp,"""""");""" ! Experimental
$ write config_status_file "$ __config_status_tmp := 'exec_prefix'"
$ write config_status_file "$ write config_status_tpu ""TPU_substitute(""""@""""+""""exec_prefix""""+""""@"""","""""",__config_status_tmp,"""""");""" ! Experimental
$ write config_status_file "$ __config_status_tmp := 'bindir_dev'"
$ write config_status_file "$ write config_status_tpu ""TPU_substitute(""""@""""+""""bindir_dev""""+""""@"""","""""",__config_status_tmp,"""""");""" ! Experimental
$ write config_status_file "$ __config_status_tmp := 'bindir_dir'"
$ write config_status_file "$ write config_status_tpu ""TPU_substitute(""""@""""+""""bindir_dir""""+""""@"""","""""",__config_status_tmp,"""""");""" ! Experimental
$ write config_status_file "$ __config_status_tmp := 'bindir'"
$ write config_status_file "$ write config_status_tpu ""TPU_substitute(""""@""""+""""bindir""""+""""@"""","""""",__config_status_tmp,"""""");""" ! Experimental
$ write config_status_file "$ __config_status_tmp := 'datadir_dev'"
$ write config_status_file "$ write config_status_tpu ""TPU_substitute(""""@""""+""""datadir_dev""""+""""@"""","""""",__config_status_tmp,"""""");""" ! Experimental
$ write config_status_file "$ __config_status_tmp := 'datadir_dir'"
$ write config_status_file "$ write config_status_tpu ""TPU_substitute(""""@""""+""""datadir_dir""""+""""@"""","""""",__config_status_tmp,"""""");""" ! Experimental
$ write config_status_file "$ __config_status_tmp := 'datadir'"
$ write config_status_file "$ write config_status_tpu ""TPU_substitute(""""@""""+""""datadir""""+""""@"""","""""",__config_status_tmp,"""""");""" ! Experimental
$ write config_status_file "$ __config_status_tmp := 'statedir_dev'"
$ write config_status_file "$ write config_status_tpu ""TPU_substitute(""""@""""+""""statedir_dev""""+""""@"""","""""",__config_status_tmp,"""""");""" ! Experimental
$ write config_status_file "$ __config_status_tmp := 'statedir_dir'"
$ write config_status_file "$ write config_status_tpu ""TPU_substitute(""""@""""+""""statedir_dir""""+""""@"""","""""",__config_status_tmp,"""""");""" ! Experimental
$ write config_status_file "$ __config_status_tmp := 'statedir'"
$ write config_status_file "$ write config_status_tpu ""TPU_substitute(""""@""""+""""statedir""""+""""@"""","""""",__config_status_tmp,"""""");""" ! Experimental
$ write config_status_file "$ __config_status_tmp := 'libdir_dev'"
$ write config_status_file "$ write config_status_tpu ""TPU_substitute(""""@""""+""""libdir_dev""""+""""@"""","""""",__config_status_tmp,"""""");""" ! Experimental
$ write config_status_file "$ __config_status_tmp := 'libdir_dir'"
$ write config_status_file "$ write config_status_tpu ""TPU_substitute(""""@""""+""""libdir_dir""""+""""@"""","""""",__config_status_tmp,"""""");""" ! Experimental
$ write config_status_file "$ __config_status_tmp := 'libdir'"
$ write config_status_file "$ write config_status_tpu ""TPU_substitute(""""@""""+""""libdir""""+""""@"""","""""",__config_status_tmp,"""""");""" ! Experimental
$ write config_status_file "$ __config_status_tmp := 'mandir_dev'"
$ write config_status_file "$ write config_status_tpu ""TPU_substitute(""""@""""+""""mandir_dev""""+""""@"""","""""",__config_status_tmp,"""""");""" ! Experimental
$ write config_status_file "$ __config_status_tmp := 'mandir_dir'"
$ write config_status_file "$ write config_status_tpu ""TPU_substitute(""""@""""+""""mandir_dir""""+""""@"""","""""",__config_status_tmp,"""""");""" ! Experimental
$ write config_status_file "$ __config_status_tmp := 'mandir'"
$ write config_status_file "$ write config_status_tpu ""TPU_substitute(""""@""""+""""mandir""""+""""@"""","""""",__config_status_tmp,"""""");""" ! Experimental
$ write config_status_file "$ __config_status_tmp := 'infodir_dev'"
$ write config_status_file "$ write config_status_tpu ""TPU_substitute(""""@""""+""""infodir_dev""""+""""@"""","""""",__config_status_tmp,"""""");""" ! Experimental
$ write config_status_file "$ __config_status_tmp := 'infodir_dir'"
$ write config_status_file "$ write config_status_tpu ""TPU_substitute(""""@""""+""""infodir_dir""""+""""@"""","""""",__config_status_tmp,"""""");""" ! Experimental
$ write config_status_file "$ __config_status_tmp := 'infodir'"
$ write config_status_file "$ write config_status_tpu ""TPU_substitute(""""@""""+""""infodir""""+""""@"""","""""",__config_status_tmp,"""""");""" ! Experimental
$ write config_status_file "$ __config_status_tmp := 'lispdir_dev'"
$ write config_status_file "$ write config_status_tpu ""TPU_substitute(""""@""""+""""lispdir_dev""""+""""@"""","""""",__config_status_tmp,"""""");""" ! Experimental
$ write config_status_file "$ __config_status_tmp := 'lispdir_dir'"
$ write config_status_file "$ write config_status_tpu ""TPU_substitute(""""@""""+""""lispdir_dir""""+""""@"""","""""",__config_status_tmp,"""""");""" ! Experimental
$ write config_status_file "$ __config_status_tmp := 'lispdir_file'"
$ write config_status_file "$ write config_status_tpu ""TPU_substitute(""""@""""+""""lispdir_file""""+""""@"""","""""",__config_status_tmp,"""""");""" ! Experimental
$ write config_status_file "$ __config_status_tmp := 'lispdir'"
$ write config_status_file "$ write config_status_tpu ""TPU_substitute(""""@""""+""""lispdir""""+""""@"""","""""",__config_status_tmp,"""""");""" ! Experimental
$ write config_status_file "$ __config_status_tmp := 'locallisppath'"
$ write config_status_file "$ write config_status_tpu ""TPU_substitute(""""@""""+""""locallisppath""""+""""@"""","""""",__config_status_tmp,"""""");""" ! Experimental
$ write config_status_file "$ __config_status_tmp := 'lisppath'"
$ write config_status_file "$ write config_status_tpu ""TPU_substitute(""""@""""+""""lisppath""""+""""@"""","""""",__config_status_tmp,"""""");""" ! Experimental
$ write config_status_file "$ __config_status_tmp := 'etcdir_dev'"
$ write config_status_file "$ write config_status_tpu ""TPU_substitute(""""@""""+""""etcdir_dev""""+""""@"""","""""",__config_status_tmp,"""""");""" ! Experimental
$ write config_status_file "$ __config_status_tmp := 'etcdir_dir'"
$ write config_status_file "$ write config_status_tpu ""TPU_substitute(""""@""""+""""etcdir_dir""""+""""@"""","""""",__config_status_tmp,"""""");""" ! Experimental
$ write config_status_file "$ __config_status_tmp := 'etcdir_file'"
$ write config_status_file "$ write config_status_tpu ""TPU_substitute(""""@""""+""""etcdir_file""""+""""@"""","""""",__config_status_tmp,"""""");""" ! Experimental
$ write config_status_file "$ __config_status_tmp := 'etcdir'"
$ write config_status_file "$ write config_status_tpu ""TPU_substitute(""""@""""+""""etcdir""""+""""@"""","""""",__config_status_tmp,"""""");""" ! Experimental
$ write config_status_file "$ __config_status_tmp := 'lockdir_dev'"
$ write config_status_file "$ write config_status_tpu ""TPU_substitute(""""@""""+""""lockdir_dev""""+""""@"""","""""",__config_status_tmp,"""""");""" ! Experimental
$ write config_status_file "$ __config_status_tmp := 'lockdir_dir'"
$ write config_status_file "$ write config_status_tpu ""TPU_substitute(""""@""""+""""lockdir_dir""""+""""@"""","""""",__config_status_tmp,"""""");""" ! Experimental
$ write config_status_file "$ __config_status_tmp := 'lockdir_file'"
$ write config_status_file "$ write config_status_tpu ""TPU_substitute(""""@""""+""""lockdir_file""""+""""@"""","""""",__config_status_tmp,"""""");""" ! Experimental
$ write config_status_file "$ __config_status_tmp := 'lockdir'"
$ write config_status_file "$ write config_status_tpu ""TPU_substitute(""""@""""+""""lockdir""""+""""@"""","""""",__config_status_tmp,"""""");""" ! Experimental
$ write config_status_file "$ __config_status_tmp := 'archlibdir_dev'"
$ write config_status_file "$ write config_status_tpu ""TPU_substitute(""""@""""+""""archlibdir_dev""""+""""@"""","""""",__config_status_tmp,"""""");""" ! Experimental
$ write config_status_file "$ __config_status_tmp := 'archlibdir_dir'"
$ write config_status_file "$ write config_status_tpu ""TPU_substitute(""""@""""+""""archlibdir_dir""""+""""@"""","""""",__config_status_tmp,"""""");""" ! Experimental
$ write config_status_file "$ __config_status_tmp := 'archlibdir'"
$ write config_status_file "$ write config_status_tpu ""TPU_substitute(""""@""""+""""archlibdir""""+""""@"""","""""",__config_status_tmp,"""""");""" ! Experimental
$ write config_status_file "$ __config_status_tmp := 'vmslibdir_dev'"
$ write config_status_file "$ write config_status_tpu ""TPU_substitute(""""@""""+""""vmslibdir_dev""""+""""@"""","""""",__config_status_tmp,"""""");""" ! Experimental
$ write config_status_file "$ __config_status_tmp := 'vmslibdir_dir'"
$ write config_status_file "$ write config_status_tpu ""TPU_substitute(""""@""""+""""vmslibdir_dir""""+""""@"""","""""",__config_status_tmp,"""""");""" ! Experimental
$ write config_status_file "$ __config_status_tmp := 'vmslibdir'"
$ write config_status_file "$ write config_status_tpu ""TPU_substitute(""""@""""+""""vmslibdir""""+""""@"""","""""",__config_status_tmp,"""""");""" ! Experimental
$ write config_status_file "$ __config_status_tmp := 'OPTS'"
$ write config_status_file "$ write config_status_tpu ""TPU_substitute(""""@""""+""""OPTS""""+""""@"""","""""",__config_status_tmp,"""""");""" ! Experimental
$ write config_status_file "$ write config_status_tpu ""TPU_substitute(""""@DEFS@"""",""""""""""""HAVE_CONFIG_H"""""""""""");"""
$ write config_status_file "$   type sys$input:/out=config_status_tpu"
$ write config_status_file "! Now let's save it all"
$ write config_status_file "WRITE_FILE(main_buffer, GET_INFO(COMMAND_LINE, ""output_file""));"
$ write config_status_file "quit;"
$ write config_status_file "$   close config_status_tpu"
$ write config_status_file "$   open/write config_status_dest conftest.out"
$ write config_status_file "$   if f$parse(file,,,""TYPE"") .eqs. "".COM"""
$ write config_status_file "$    then
$ write config_status_file "$     write config_status_dest ""$! Generated automatically from ""+-"
$ write config_status_file "	input_file+"" by configure."""
$ write config_status_file "$    else"
$ write config_status_file "$     write config_status_dest ""# Generated automatically from ""+-"
$ write config_status_file "	input_file+"" by configure."""
$ write config_status_file "$    endif"
$ write config_status_file "$   save_mesg = f$environment(""MESSAGE"") ! EDIT/TPU is way too talkative"
$ write config_status_file "$   set message/nofacility/noident/noseverity/notext"
$ write config_status_file "$   edit/tpu/nosection/command=conftest.tpu/nodisplay -"
$ write config_status_file "	'srcdir'"+"'input_file' /out=config_status_dest"
$ write config_status_file "$   set message 'save_mesg'"
$ write config_status_file "$   close config_status_dest"
$ write config_status_file "$   set noon"
$ write config_status_file "$   if f$search(""conftest.tpu"") then delete/nolog conftest.tpu.*"
$ write config_status_file "$! Description files are often check for dependencies, so don't check
$ write config_status_file "$! if they have changed.  Scripts on the ofter hand...
$ write config_status_file "$   if f$parse(file,,,""TYPE"") .eqs. "".COM"" -"
$ write config_status_file "	.and. f$search(file) .nes. """" then -"
$ write config_status_file "	diff conftest.out 'file'/out=nla0:"
$ write config_status_file "$   if $status .eq. %X06c8009 ! code for no change"
$ write config_status_file "$    then"
$ write config_status_file "$     ! The file exists and we would not be changing it."
$ write config_status_file "$     write sys$output ""'"+"'file' is unchanged."""
$ write config_status_file "$    else"
$ write config_status_file "$     copy conftest.out 'file'"
$ write config_status_file "$     purge/nolog 'file'"
$ write config_status_file "$    endif"
$ write config_status_file "$   if f$search(""conftest.out.*"") .nes. """" then delete/nolog conftest.out.*"
$ write config_status_file "$   set on"
$ write config_status_file "$   goto config_status_loop3"
$ write config_status_file "$  endif"
$ write config_status_file "$ type sys$input: /out=conftest.tpu"
$ write config_status_file "$"
$ write config_status_file "$ if f$type(CONFIG_HEADERS) .eqs. """" then CONFIG_HEADERS=""[.src]config.h"""
$ write config_status_file "$ CONFIG_HEADER_i = 0"
$ write config_status_file "$config_status_loop4:"
$ write config_status_file "$ file = f$element(CONFIG_HEADER_i,"" "",CONFIG_HEADERS)"
$ write config_status_file "$ CONFIG_HEADER_i = CONFIG_HEADER_i + 1"
$ write config_status_file "$ if file .nes. "" """
$ write config_status_file "$  then"
$ write config_status_file "$   write sys$output ""creating "",file"
$ write config_status_file "$   if f$search(""conftest.tpu"") .nes. """" then delete/nolog conftest.tpu.*"
$ write config_status_file "$   type sys$input: /out=conftest.tpu"
$ write config_status_file "! SEDd sets the value in ""#define NAME VALUE"" lines."
$ write config_status_file "! SEDu turns ""#undef NAME"" with trailing blanks into ""#define NAME VALUE""."
$ write config_status_file "! SEDe turns ""#undef NAME"" without trailing blanks into ""#define NAME VALUE""."
$ write config_status_file ""
$ write config_status_file "procedure SEDd(nam,value)"
$ write config_status_file "	local p0, r, r0, r1, r2, r3, res;"
$ write config_status_file "	position (beginning_of (main_buffer));"
$ write config_status_file "	p0 := line_begin + (((p_before_keyword @ r1) + ((""def""+""ine"" + p_after_keyword) @ r2) + nam + (p_after_keyword @ r3) + p_old_value) @ r0) + line_end;"
$ write config_status_file "	loop"
$ write config_status_file "		r := search_quietly (p0, FORWARD);"
$ write config_status_file "		EXITIF r = 0;"
$ write config_status_file "		res := sub"+"str (r1, 1) + sub"+"str (r2, 1) + nam + sub"+"str (r3, 1) + value;"
$ write config_status_file "		erase (r0);"
$ write config_status_file "		position (r0);"
$ write config_status_file "		copy_text (res);"
$ write config_status_file "		position (end_of (r0));"
$ write config_status_file "	endloop;"
$ write config_status_file "endprocedure;"
$ write config_status_file ""
$ write config_status_file "procedure SEDu(nam,value)"
$ write config_status_file "	local p0, r, r0, r1, r2, r3, res;"
$ write config_status_file "	position (beginning_of (main_buffer));"
$ write config_status_file "	p0 := line_begin + (((p_before_keyword @ r1) + ""undef"" + ((p_after_keyword) @ r2) + nam + ((unanchor + """") @ r3)) @ r0) + line_end;"
$ write config_status_file "	loop"
$ write config_status_file "		r := search_quietly (p0, FORWARD);"
$ write config_status_file "		EXITIF r = 0;"
$ write config_status_file "		res := sub"+"str (r1, 1) + ""def""+""ine"" + sub"+"str (r2, 1) + nam + "" "" + value + sub"+"str (r3, 1);"
$ write config_status_file "		erase (r0);"
$ write config_status_file "		position (r0);"
$ write config_status_file "		copy_text (res);"
$ write config_status_file "		position (end_of (r0));"
$ write config_status_file "	endloop;"
$ write config_status_file "endprocedure;"
$ write config_status_file ""
$ write config_status_file "procedure SEDe(nam,value)"
$ write config_status_file "	local p0, r, r0, r1, r2, r3, res;"
$ write config_status_file "	position (beginning_of (main_buffer));"
$ write config_status_file "	p0 := line_begin + (((p_before_keyword @ r1) + ""undef"" + ((p_after_keyword) @ r2) + nam) @ r0) + line_end;"
$ write config_status_file "	loop"
$ write config_status_file "		r := search_quietly (p0, FORWARD);"
$ write config_status_file "		EXITIF r = 0;"
$ write config_status_file "		res := sub"+"str (r1, 1) + ""def""+""ine"" + sub"+"str (r2, 1) + nam + "" "" + value;"
$ write config_status_file "		erase (r0);"
$ write config_status_file "		position (r0);"
$ write config_status_file "		copy_text (res);"
$ write config_status_file "		position (end_of (r0));"
$ write config_status_file "	endloop;"
$ write config_status_file "endprocedure;"
$ write config_status_file ""
$ write config_status_file "procedure comment_undefs()"
$ write config_status_file "	local p0, r, r0, res;"
$ write config_status_file "	position (beginning_of (main_buffer));"
$ write config_status_file "	p0 := line_begin + ((p_before_keyword + ""undef"" + p_after_keyword + p_any_name) @ r0);"
$ write config_status_file "	loop"
$ write config_status_file "		r := search_quietly (p0, FORWARD);"
$ write config_status_file "		EXITIF r = 0;"
$ write config_status_file "		res := ""/* "" + sub"+"str (r0, 1) + "" */"";"
$ write config_status_file "		erase (r0);"
$ write config_status_file "		position (r0);"
$ write config_status_file "		copy_text (res);"
$ write config_status_file "		position (end_of (r0));"
$ write config_status_file "	endloop;"
$ write config_status_file "endprocedure;"
$ write config_status_file ""
$ write config_status_file "p_before_keyword := (span ("" "" + ascii (9)) | """") + ""#"" + (span ("" "" + ascii (9)) | """");"
$ write config_status_file "p_after_keyword := span ("" "" + ascii (9));"
$ write config_status_file "p_old_value := scan ("" "" + ascii (9));"
$ write config_status_file "p_any_name := any(""abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_"") +"
$ write config_status_file "	span(""abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_0123456789"");"
$ write config_status_file ""
$ write config_status_file "! This is the main thing."
$ write config_status_file "input_file := GET_INFO (COMMAND_LINE, ""file_name"");"
$ write config_status_file "main_buffer := CREATE_BUFFER (""main"", input_file);"
$ write config_status_file "position (beginning_of (main_buffer));"
$ write config_status_file "! Here it is time to put the calls."
$ i = 0
$seddefs_write_loop:
$ i = i + 1
$ if f$type(SEDDEFS'i') .nes. ""
$  then"
$   write config_status_file SEDDEFS'i'
$   goto seddefs_write_loop
$  endif
$ write config_status_file "!# This command replaces #undef's with comments.  This is necessary, for"
$ write config_status_file "!# example, in the case of _POSIX_SOURCE, which is predefined and required"
$ write config_status_file "!# on some systems where configure will not decide to define it in"
$ write config_status_file "!#"+-
" [[.src]config.h]."
$ write config_status_file "comment_undefs();"
$ write config_status_file "!# Now let's save it all"
$ write config_status_file "WRITE_FILE(main_buffer, GET_INFO(COMMAND_LINE, ""output_file""));"
$ write config_status_file "quit;"
$ write config_status_file "$!"
$ write config_status_file "$   set noon"
$ write config_status_file "$   if f$search(""conftest.h.*"") .nes. """" then delete/nolog conftest.h.*"
$ write config_status_file "$   set on"
$ write config_status_file "$   open/write config_status_tmp conftest.h"
$ write config_status_file "$   write config_status_tmp ""/* '"+"'file'.  Generated automatically by configure.  */"""
$ write config_status_file "$   _tmp = f$parse(file,"".;*"")"
$ write config_status_file "$   input_file = f$parse(file,,,""NAME"")"
$ write config_status_file "$   if f$parse(file,,,""TYPE"") .eqs. ""."""
$ write config_status_file "$    then input_file = input_file + "".IN"""
$ write config_status_file "$    else input_file = input_file + f$parse(file,,,""TYPE"") + ""_IN"""
$ write config_status_file "$    endif"
$ write config_status_file "$   save_def = f$environment(""DEFAULT"")"
$ write config_status_file "$   set def 'top_srcdir'"
$ write config_status_file "$!   set def 'f$parse(file,,,""DEVICE"")'"+"'f$parse(file,,,""DIRECTORY"")"
$ write config_status_file "$   set def 'f$parse(file,,,""DIRECTORY"")'"
$ write config_status_file "$   input_dir = f$environment(""DEFAULT"")"
$ write config_status_file "$   set def 'save_def'"
$ write config_status_file "$!   set noon"
$ write config_status_file "$   save_mesg = f$environment(""MESSAGE"") ! EDIT/TPU is way too talkative"
$ write config_status_file "$   set message/nofacility/noident/noseverity/notext"
$ write config_status_file "$   edit/tpu/nosection/nodisplay/command=conftest.tpu/out=config_status_tmp 'input_dir'"+"'input_file'"
$ write config_status_file "$   set message 'save_mesg'"
$ write config_status_file "$   close config_status_tmp"
$ write config_status_file "$   set noon"
$ write config_status_file "$   if f$search(""conftest.tpu.*"") .nes. """" then delete/nolog conftest.tpu.*"
$ write config_status_file "$   if f$search(file) .nes. """" then -"
$ write config_status_file "	diff conftest.h 'file'/out=nla0:"
$ write config_status_file "$   if $status .eq. %X06c8009 ! code for no change"
$ write config_status_file "$    then"
$ write config_status_file "$     ! The file exists and we would not be changing it."
$ write config_status_file "$     write sys$output ""'"+"'file' is unchanged."""
$ write config_status_file "$    else"
$ write config_status_file "$     _tmp = f$parse(file,"".;*"")"
$ write config_status_file "$     if f$search(_tmp) .nes. """" then delete/nolog '_tmp'"
$ write config_status_file "$     copy conftest.h 'file'"
$ write config_status_file "$     purge/nolog 'file'"
$ write config_status_file "$    endif"
$ write config_status_file "$   if f$search(""conftest.h.*"") .nes. """" then delete/nolog conftest.h.*"
$ write config_status_file "$   goto config_status_loop4
$ write config_status_file "$  endif
$ write config_status_file "$ set on"
$ write config_status_file "$ srcdir_dev = top_srcdir_dev"
$ write config_status_file "$ srcdir_dir = top_srcdir_dir"
$ write config_status_file "$ srcdir = top_srcdir"
$ write config_status_file "$"
$
$ write config_status_file "$!# Build [.src]descrip.mms from [.src]descrip.mms_in."
$ write config_status_file "$!!#  # We discard all lines in Makefile.in that start with `# Generated' or /**/#"
$ write config_status_file "$!!#  # because some cpps get confused by them."
$ write config_status_file "$!!#  # Really we should preserve them somehow into descrip.mms,"
$ write config_status_file "$!!#  # but that is beyond my level of DCL programming."
$ write config_status_file "$ write sys$output ""creating [.src]descrip.mms"""
$ write config_status_file "$ topsrcdir_dev=srcdir_dev"
$ write config_status_file "$ topsrcdir_dir=srcdir_dir"
$ write config_status_file "$ topsrcdir=srcdir"
$ write config_status_file "$ save_default = f$environment(""DEFAULT"")"
$ write config_status_file "$ set default [.src]"
$ write config_status_file "$!"
$ write config_status_file "$ open/write foo junk1.tpu"
$ write config_status_file "$ write foo ""input_file := GET_INFO (COMMAND_LINE, """"file_name"""");"""
$ write config_status_file "$ write foo ""main_buffer := CREATE_BUFFER (""""main"""", input_file);"""
$ write config_status_file "$ write foo ""p_spcs := (SPAN("""" """") | """""""");"""
$ write config_status_file "$ write foo ""!"""
$ write config_status_file "$ write foo ""POSITION (BEGINNING_OF (main_buffer));"""
$ write config_status_file "$ write foo ""my_pattern := LINE_BEGIN + (""""# Generated"""" | """"/**/#"""") + unanchor + """""""" + LINE_END;"""
$ write config_status_file "$ write foo ""LOOP"""
$ write config_status_file "$ write foo ""  my_range := SEARCH_QUIETLY (my_pattern, FORWARD);"""
$ write config_status_file "$ write foo ""  EXITIF my_range = 0;"""
$ write config_status_file "$ write foo ""  ERASE (my_range);"""
$ write config_status_file "$ write foo ""  POSITION (END_OF (my_range));"""
$ write config_status_file "$ write foo ""ENDLOOP;"""
$ write config_status_file "$ write foo ""!"""
$ write config_status_file "$ write foo ""WRITE_FILE (main_buffer, get_info (command_line, """"output_file""""));"""
$ write config_status_file "$ write foo ""QUIT;"""
$ write config_status_file "$ close foo"
$ write config_status_file "$ set noon"
$ write config_status_file "$ save_mesg = f$environment(""MESSAGE"")"
$ write config_status_file "$ set message/nofacility/noseverity/noident/notext"
$ write config_status_file "$ edit/tpu/nosection/command=junk1.tpu/nodisplay/out=junk.c -"
$ write config_status_file "	descrip.mms_in"
$ write config_status_file "$ set message 'save_mesg'"
$ write config_status_file "$!"
$ write config_status_file "$ save_mesg = f$environment(""MESSAGE"")"
$ write config_status_file "$ set message/nofacility/noseverity/noident/notext"
$ write config_status_file "$ CPP /include=(sys$disk:[],sys$disk:[-.src],-"
$ write config_status_file "	'topsrcdir_dev'['topsrcdir_dir'.src]) -"
$ write config_status_file "	'CFLAGS' 'c_switch_system' junk.c"
$ write config_status_file "$ set message 'save_mesg'"
$ write config_status_file "$ set on"
$ write config_status_file "$ junkname := junk.cpp"
$ write config_status_file "$ if f$search(junkname) .eqs. """" then junkname := junk.i"
$ write config_status_file "$ open/write foo junk2.tpu"
$ write config_status_file "$ write foo ""input_file := GET_INFO (COMMAND_LINE, """"file_name"""");"""
$ write config_status_file "$ write foo ""main_buffer := CREATE_BUFFER (""""main"""", input_file);"""
$ write config_status_file "$ write foo ""p_spcs := (SPAN("""" """") | """""""");"""
$ write config_status_file "$ write foo ""!"""
$ write config_status_file "$ write foo ""POSITION (BEGINNING_OF (main_buffer));"""
$ write config_status_file "$ write foo ""my_pattern := ((LINE_BEGIN + LINE_END)@r) | ((LINE_BEGIN + SPAN("""" """"+ASCII(12)+ASCII(9)) + LINE_END)@r) | (((LINE_BEGIN + """"#"""" + unanchor + """""""")@r)+LINE_END);"""
$ write config_status_file "$ write foo ""LOOP"""
$ write config_status_file "$ write foo ""  my_range := SEARCH_QUIETLY (my_pattern, FORWARD);"""
$ write config_status_file "$ write foo ""  EXITIF my_range = 0;"""
$ write config_status_file "$ write foo ""  ERASE (r);"""
$ write config_status_file "$ write foo ""  POSITION (END_OF (my_range));"""
$ write config_status_file "$ write foo ""ENDLOOP;"""
$ write config_status_file "$ write foo ""!"""
$ write config_status_file "$ write foo ""POSITION (BEGINNING_OF (main_buffer));"""
$ write config_status_file "$ write foo ""my_pattern := LINE_BEGIN + ("""" """"@r);"
$ write config_status_file "$ write foo ""LOOP"""
$ write config_status_file "$ write foo ""  my_range := SEARCH_QUIETLY (my_pattern, FORWARD);"""
$ write config_status_file "$ write foo ""  EXITIF my_range = 0;"""
$ write config_status_file "$ write foo ""  ERASE (r); POSITION (r); COPY_TEXT (ASCII(9));"""
$ write config_status_file "$ write foo ""  POSITION (END_OF (my_range));"""
$ write config_status_file "$ write foo ""ENDLOOP;"""
$ write config_status_file "$ write foo ""!"""
$ write config_status_file "$ write foo ""POSITION (BEGINNING_OF (main_buffer));"""
$ write config_status_file "$ write foo ""my_pattern := """"/ / /""""@r;"""
$ write config_status_file "$ write foo ""LOOP"""
$ write config_status_file "$ write foo ""  my_range := SEARCH_QUIETLY (my_pattern, FORWARD);"""
$ write config_status_file "$ write foo ""  EXITIF my_range = 0;"""
$ write config_status_file "$ write foo ""  ERASE (r); POSITION (r); COPY_TEXT (""""@"""");"""
$ write config_status_file "$ write foo ""  POSITION (END_OF (my_range));"""
$ write config_status_file "$ write foo ""ENDLOOP;"""
$ write config_status_file "$ write foo ""!"""
$ write config_status_file "$ write foo ""WRITE_FILE (main_buffer, get_info (command_line, """"output_file""""));"""
$ write config_status_file "$ write foo ""QUIT;"""
$ write config_status_file "$ close foo"
$ write config_status_file "$ set noon"
$ write config_status_file "$ save_mesg = f$environment(""MESSAGE"")"
$ write config_status_file "$ set message/nofacility/noseverity/noident/notext"
$ write config_status_file "$ edit/tpu/nosection/command=junk2.tpu/nodisplay/out=descrip.new -"
$ write config_status_file "	'junkname'"
$ write config_status_file "$ set message 'save_mesg'"
$ write config_status_file "$!$ if f$search(""descrip.mms"") .nes. """" then -"
$ write config_status_file "$!	diff descrip.new descrip.mms/out=nla0:"
$ write config_status_file "$!$ if $status .eq. %X06c8009 ! code for no change"
$ write config_status_file "$!$  then"
$ write config_status_file "$!$   ! The file exists and we would not be changing it."
$ write config_status_file "$!$   delete descrip.new.*/nolog"
$ write config_status_file "$!$   write sys$output ""[.src]descrip.mms is unchanged."""
$ write config_status_file "$!$  else"
$ write config_status_file "$   if f$search(""descrip.mms"") .nes. """" then -"
$ write config_status_file "	set file/prot=(s:rwed,o:rwed) descrip.mms.*"
$ write config_status_file "$   rename descrip.new .mms"
$ write config_status_file "$   set file/prot=(s:r,o:r,g:r,w:r) descrip.mms"
$ write config_status_file "$   purge/nolog descrip.mms"
$ write config_status_file "$!$  endif"
$ write config_status_file "$ set on"
$ write config_status_file "$ junknames = junkname+"";*"""
$ write config_status_file "$ delete junk.c.*,junk%.tpu.*,'junknames'"
$ write config_status_file "$!"
$ write config_status_file "$ set def [-.vms]"
$ write config_status_file "$ open/write foo junk3.tpu"
$ write config_status_file "$ write foo ""input_file := GET_INFO (COMMAND_LINE, """"file_name"""");"""
$ write config_status_file "$ write foo ""main_buffer := CREATE_BUFFER (""""main"""", input_file);"""
$ write config_status_file "$ write foo ""p_spcs := (SPAN("""" """") | """""""");"""
$ write config_status_file "$ write foo ""!"""
$ write config_status_file "$ write foo ""POSITION (BEGINNING_OF (main_buffer));"""
$ write config_status_file "$ write foo ""my_range := SEARCH_QUIETLY (LINE_BEGIN + """"! ---- """" + unanchor + """""""" + LINE_END, FORWARD);"""
$ write config_status_file "$ write foo ""POSITION (END_OF (my_range));"""
$ write config_status_file "$ write foo ""my_pattern := SPAN("""" """"+ASCII(9))@r;"""
$ write config_status_file "$ write foo ""LOOP"""
$ write config_status_file "$ write foo ""  my_range := SEARCH_QUIETLY (my_pattern, FORWARD);"""
$ write config_status_file "$ write foo ""  EXITIF my_range = 0;"""
$ write config_status_file "$ write foo ""  ERASE (r); POSITION (r); SPLIT_LINE;"""
$ write config_status_file "$ write foo ""  POSITION (END_OF (my_range));"""
$ write config_status_file "$ write foo ""ENDLOOP;"""
$ write config_status_file "$ write foo ""!"""
$ write config_status_file "$ write foo ""WRITE_FILE (main_buffer, get_info (command_line, """"output_file""""));"""
$ write config_status_file "$ write foo ""QUIT;"""
$ write config_status_file "$ close foo"
$ write config_status_file "$ open/write foo junk4.tpu"
$ write config_status_file "$ write foo ""input_file := GET_INFO (COMMAND_LINE, """"file_name"""");"""
$ write config_status_file "$ write foo ""main_buffer := CREATE_BUFFER (""""main"""", input_file);"""
$ write config_status_file "$ write foo ""p_spcs := (SPAN("""" """") | """""""");"""
$ write config_status_file "$ write foo ""!"""
$ write config_status_file "$ write foo ""POSITION (BEGINNING_OF (main_buffer));"""
$ write config_status_file "$ write foo ""my_pattern := ((LINE_BEGIN + LINE_END)@r) | ((LINE_BEGIN + SPAN("""" """"+ASCII(12)+ASCII(9)) + LINE_END)@r) | (((LINE_BEGIN + """"#"""" + unanchor + """""""")@r)+LINE_END);"""
$ write config_status_file "$ write foo ""LOOP"""
$ write config_status_file "$ write foo ""  my_range := SEARCH_QUIETLY (my_pattern, FORWARD);"""
$ write config_status_file "$ write foo ""  EXITIF my_range = 0;"""
$ write config_status_file "$ write foo ""  ERASE (r);"""
$ write config_status_file "$ write foo ""  POSITION (END_OF (my_range));"""
$ write config_status_file "$ write foo ""ENDLOOP;"""
$ write config_status_file "$ write foo ""!"""
$ write config_status_file "$ write foo ""WRITE_FILE (main_buffer, get_info (command_line, """"output_file""""));"""
$ write config_status_file "$ write foo ""QUIT;"""
$ write config_status_file "$ close foo"
$ write config_status_file "$ set noon"
$ write config_status_file "$ save_mesg = f$environment(""MESSAGE"")"
$ write config_status_file "$ set message/nofacility/noseverity/noident/notext"
$ write config_status_file "$ write sys$output ""creating [.vms]def_temacs.opt"""
$ write config_status_file "$ CPP /include=(sys$disk:[],sys$disk:[-.src],sys$disk:[-.vms],-"
$ write config_status_file "	'topsrcdir_dev'['topsrcdir_dir'.src],-"
$ write config_status_file "	'topsrcdir_dev'['topsrcdir_dir'.vms]) -"
$ write config_status_file "	'CFLAGS' 'c_switch_system' -"
$ write config_status_file "	'topsrcdir_dev'['topsrcdir_dir'.vms]temacs.opt_in"
$ write config_status_file "$ junkname := temacs.cpp"
$ write config_status_file "$ if f$search(junkname) .eqs. """" then junkname := temacs.i"
$ write config_status_file "$ edit/tpu/nosection/command=junk3.tpu/nodisplay/out=def_temacs.tmp -"
$ write config_status_file "	'junkname'"
$ write config_status_file "$ junknames = junkname+"";*"""
$ write config_status_file "$ edit/tpu/nosection/command=junk4.tpu/nodisplay/out=def_temacs.new -"
$ write config_status_file "	def_temacs.tmp"
$ write config_status_file "$ set message 'save_mesg'"
$ write config_status_file "$ if f$search(""def_temacs.opt"") .nes. """" then -"
$ write config_status_file "	diff def_temacs.new def_temacs.opt/out=nla0:"
$ write config_status_file "$ if $status .eq. %X06c8009 ! code for no change"
$ write config_status_file "$  then"
$ write config_status_file "$   ! The file exists and we would not be changing it."
$ write config_status_file "$   delete def_temacs.new.*/nolog"
$ write config_status_file "$   write sys$output ""[.vms]def_temacs.opt is unchanged."""
$ write config_status_file "$  else"
$ write config_status_file "$   rename def_temacs.new .opt"
$ write config_status_file "$   purge/nolog def_temacs.opt"
$ write config_status_file "$  endif"
$ write config_status_file "$!"
$ write config_status_file "$ open/write foo junk5.tpu"
$ write config_status_file "$ write foo ""input_file := GET_INFO (COMMAND_LINE, """"file_name"""");"""
$ write config_status_file "$ write foo ""main_buffer := CREATE_BUFFER (""""main"""", input_file);"""
$ write config_status_file "$ write foo ""p_spcs := (SPAN("""" """") | """""""");"""
$ write config_status_file "$ write foo ""!"""
$ write config_status_file "$ write foo ""POSITION (BEGINNING_OF (main_buffer));"""
$ write config_status_file "$ write foo ""my_pattern := LINE_BEGIN + (""""# Generated"""" | """"/**/#"""") + unanchor + """""""" + LINE_END;"""
$ write config_status_file "$ write foo ""LOOP"""
$ write config_status_file "$ write foo ""  my_range := SEARCH_QUIETLY (my_pattern, FORWARD);"""
$ write config_status_file "$ write foo ""  EXITIF my_range = 0;"""
$ write config_status_file "$ write foo ""  ERASE (my_range);"""
$ write config_status_file "$ write foo ""  POSITION (END_OF (my_range));"""
$ write config_status_file "$ write foo ""ENDLOOP;"""
$ write config_status_file "$ write foo ""!"""
$ write config_status_file "$ write foo ""WRITE_FILE (main_buffer, get_info (command_line, """"output_file""""));"""
$ write config_status_file "$ write foo ""QUIT;"""
$ write config_status_file "$ close foo"
$ write config_status_file "$ save_mesg = f$environment(""MESSAGE"")"
$ write config_status_file "$ set message/nofacility/noseverity/noident/notext"
$ write config_status_file "$ write sys$output ""creating [.vms]makedoc.com"""
$ write config_status_file "$ edit/tpu/nosection/command=junk5.tpu/nodisplay/out=junk.c -"
$ write config_status_file "	makedoc.com_in"
$ write config_status_file "$ CPP /include=(sys$disk:[],sys$disk:[-.src],sys$disk:[-.vms],-"
$ write config_status_file "	'topsrcdir_dev'['topsrcdir_dir'.src],-"
$ write config_status_file "	'topsrcdir_dev'['topsrcdir_dir'.vms]) -"
$ write config_status_file "	'CFLAGS' 'c_switch_system' junk.c"
$ write config_status_file "$ junkname := junk.cpp"
$ write config_status_file "$ if f$search(junkname) .eqs. """" then junkname := junk.i"
$ write config_status_file "$ edit/tpu/nosection/command=junk4.tpu/nodisplay/out=makedoc.new -"
$ write config_status_file "	'junkname'"
$ write config_status_file "$ junknames = junknames + "","" + junkname+"";*"""
$ write config_status_file "$ set message 'save_mesg'"
$ write config_status_file "$ if f$search(""makedoc.com"") .nes. """" then -"
$ write config_status_file "	diff makedoc.new makedoc.com/out=nla0:"
$ write config_status_file "$ if $status .eq. %X06c8009 ! code for no change"
$ write config_status_file "$  then"
$ write config_status_file "$   ! The file exists and we would not be changing it."
$ write config_status_file "$   delete makedoc.new.*/nolog"
$ write config_status_file "$   write sys$output ""[.vms]makedoc.com is unchanged."""
$ write config_status_file "$  else"
$ write config_status_file "$   rename makedoc.new .com"
$ write config_status_file "$   purge/nolog makedoc.com"
$ write config_status_file "$  endif"
$ write config_status_file "$!"
$ write config_status_file "$ delete junk.c;*,junk%.tpu.*,'junknames',def_temacs.tmp;*"
$ write config_status_file "$ if f$search(""build.com"") .nes. """" then -"
$ write config_status_file "	diff build.com 'topsrcdir_dev'['topsrcdir_dir'.vms]build.com/out=nla0:"
$ write config_status_file "$ if $status .ne. %X06c8009 ! code for no change"
$ write config_status_file "$  then"
$ write config_status_file "$   write sys$output ""copying [.vms]build.com"""
$ write config_status_file "$   copy 'topsrcdir_dev'['topsrcdir_dir'.vms]build.com sys$disk:[]"
$ write config_status_file "$  endif"
$ write config_status_file "$ if f$search(""link.com"") .nes. """" then -"
$ write config_status_file "	diff link.com 'topsrcdir_dev'['topsrcdir_dir'.vms]link.com/out=nla0:"
$ write config_status_file "$ if $status .ne. %X06c8009 ! code for no change"
$ write config_status_file "$  then"
$ write config_status_file "$   write sys$output ""copying [.vms]link.com"""
$ write config_status_file "$   copy 'topsrcdir_dev'['topsrcdir_dir'.vms]link.com sys$disk:[]"
$ write config_status_file "$  endif"
$ write config_status_file "$ if f$search(""testemacs.com"") .nes. """" then -"
$ write config_status_file "	diff testemacs.com 'topsrcdir_dev'['topsrcdir_dir'.vms]testemacs.com/out=nla0:"
$ write config_status_file "$ if $status .ne. %X06c8009 ! code for no change"
$ write config_status_file "$  then"
$ write config_status_file "$   write sys$output ""copying [.vms]testemacs.com"""
$ write config_status_file "$   copy 'topsrcdir_dev'['topsrcdir_dir'.vms]testemacs.com sys$disk:[]"
$ write config_status_file "$  endif"
$ write config_status_file "$ set on"
$ write config_status_file "$!"
$ write config_status_file "$ set def [-]"
$ write config_status_file "$ set def 'save_default'"
$ write config_status_file "$"
$ write config_status_file "$ exit"
$ write config_status_file "$config_status_end:"
$ write config_status_file "$ goto config_status_begin"
$ close config_status_file
$ set file/prot=(s:rwed,o:rwed,g:re,w:re) config.status
$ @config.status
$
