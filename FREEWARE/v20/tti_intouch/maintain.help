!File name: MAINTAIN.HELP
!Written by: Michael Aklufi (with the guiding light of Robert)
!Date last modified: August 23, 1989
!
!This file is read by the included file HELP.INC.  
!
!Given a key name [e.g. "data_entry"], the program searches for the $key 
!plus the key name [e.g. "$key data_entry"]; the information between it and the
!next $key is then displayed in MAINTAIN's help box.
!
!The exception to this rule is when the line begins with a $.  These
!lines are not displayed in the help box, but rather contain formatting
!information for those boxes.
!
!$title will print any words following it in bold, in the upper left
!hand corner of the help box.
!
!$break by itself will start a new page in the help boxes.  $break
!followed by a number (e.g. $break 4) will prevent that number of lines
!following it from being broken up and displayed on two screens.  If the 
!information following the break would have been broken, it will instead 
!print all that block of information on the next screen.  If the block
!would not have been broken, then it is just displayed as is.

$key data_entry
$title Data Entry
$Break 2
At this level you can either add new data or modify previously entered
data.

$break 4
The field prompt name at which the data will be stored appears as a prompt 
at the bottom of the screen.  Simply type the information to be stored and
press [return]; this data will then be stored at that field prompt name.  
The default is always the currently stored data.

$break 2
Also, you can move to different fields or screens of information through
the use of the ">" at any field prompt in the ADD or CHANGE modes.  
$break 13
If you type:
   o  ">" alone, you will be prompted for the field name (or screen 
      number) to which you wish to skip.

   o  ">" followed by a field prompt name, you will skip to that prompt.
      If you abbreviate the field prompt name, it will search for a match.  
      [e.g. ">org" will skip to the field "ORGANIZATION"]

   o  ">" followed by a number, you will skip to that screen.  
      ["e.g. ">2" will skip to the second screen of information]

   o  ">done", the record will be added (or changed) as if you had gone
      to the end of the record and completed data entry. 
$key data_entry_wrap
$title Data Entry
$Break 2
At this level you can either add new data or modify previously entered
data.

$break 4
The field prompt name at which the data will be stored appears as a
prompt.  Simply type the information to be stored and press GOLD/F; this data
will then be stored at that field prompt name.  The default is always the 
currently stored data.  

$break 2
Also, you can move to different fields or screens of information through
the use of the ">" at any field prompt in the ADD or CHANGE modes.  
$Break 13
If you type:
   o  ">" alone, you will be prompted for the field name (or screen 
      number) to which you wish to skip.

   o  ">" followed by a field prompt name, you will skip to that prompt.
      If you abbreviate the field prompt name, it will search for a match.  
      [e.g. ">org" will skip to the field "ORGANIZATION"]

   o  ">" followed by a number, you will skip to that screen.  
      ["e.g. ">2" will skip to the second screen of information]

   o  ">done", the record will be added (or changed) as if you had gone
      to the end of the record and completed data entry. 
$key sequence_number
$title "Sequence Number?"
$break 2
At this prompt, enter the number corresponding to the record which you
wish to look up.  

$break 2
If there is more than one screen of records to be displayed, more
records will be displayed after you press [return].
$key key_field_sequence_number
$title "Key field sequence number?"
$break 2
At this prompt, enter the number corresponding to the key field which
you wish to look up.

$break 2
If there is more than one screen of records to be displayed, more
records will be displayed after you press [return].
$key enter_key_value
$title "Enter [key] value?"
$break 10
At this prompt, enter the data you wish to look up.

If you type:
   o  a number, and the [key] value is numeric, that record will be
      selected

   o  a number or other data, and the [key] value is NOT numeric, all
      records matching your entered data will be pulled up

   o  a space and then [return], all records will be pulled up

$key delete_this_record
$title "Delete this record?"
$break 4
At this prompt, type "y" or "yes" to delete the record in question. 

If you do not wish to delete the record, press [return], \, or type "no"
or "EXIT" and you will be returned to the "Enter [key] value?" prompt.  
$key option
$title "Option?"
$break 10
At this prompt, enter any of the following commands:

ADD  -- allows you to add a new record to the database
CHA  -- allows you to change a record already present in the database 
DEL  -- allows you to delete a record already present in the database

NAR  -- puts the screen in the 80 column mode (which facilitates reading
        because of the larger type size)
WID  -- puts the screen in the 132 column mode (which allows more
        information to be presented on any one screen)        
$Break 7
MAIL -- allows you to exit to the VMS mail facility.  To return to MAINTAIN,
        type "EXIT" at the "MAIL>" prompt. 

SYS  -- allows you to exit to the DCL prompt.  To return to MAINTAIN,
        press [return] at the "$$" prompt.

EXIT -- exits MAINTAIN


$Break 2
Note: If you are using a screen file, some of these options may not be
available to you.
$key structure_name
$title "Structure name?"
$break 11
At this prompt, enter the name of the structure you wish to access:
  [structure name]

If you wish to access a structure with a screen file or different 
data file, use: 
  [structure name] using [screen file name]
                               - or -
  [structure name] datafile [data file name]

You can also combine the above:
  [structure name] datafile [data file name] using [screen file name]
$break 4
These parameters can also be specified at the DCL command prompt:
 $ MAINTAIN [structure name]
 $ MAINTAIN [structure name] using [screen file name]
 $ MAINTAIN [structure name] datafile [data file name]  
