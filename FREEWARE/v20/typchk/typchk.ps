%!PS-Adobe-2.1
%%Creator: DECwrite V2.0
%%+Copyright (c) 1990 DIGITAL EQUIPMENT CORPORATION.  
%%+All Rights Reserved.
%%DocumentFonts: (atend)
%%EndComments
%%BeginProcSet DEC_WRITE 1.07
/DEC_WRITE_dict 150 dict def DEC_WRITE_dict begin/$D save def/$I 0 def/$S 0
def/$C matrix def/$R matrix def/$L matrix def/$E matrix def/pat1{/px exch
def/pa 8 array def 0 1 7{/py exch def/pw 4 string def 0 1 3{pw exch px py 1
getinterval putinterval}for pa py pw put}for}def/pat2{/pi exch def/cflag
exch def save cflag 1 eq{eoclip}{clip}ifelse newpath{clippath
pathbbox}stopped not{/ph exch def/pw exch def/py exch def/px exch def/px px
3072 div floor 3072 mul def/py py 3072 div floor 3072 mul def px py
translate/pw pw px sub 3072 div floor 1 add cvi def/ph ph py sub 3072 div
floor 1 add cvi def pw 3072 mul ph 3072 mul scale/pw pw 32 mul def/ph ph 32
mul def/px 0 def/py 0 def pw ph pi[pw 0 0 ph 0 0]{pa py get/px px 32 add
def px pw ge{/px 0 def/py py 1 add 8 mod def}if}pi type/booleantype
eq{imagemask}{image}ifelse}if restore}def/PS{/_op exch def/_np 8 string def
0 1 7{/_ii exch def/num _op _ii get def _np 7 _ii sub num -4 bitshift PX
num 15 and 4 bitshift -4 bitshift PX 4 bitshift or put}for _np}def/PX{[15 7
11 3 13 5 9 1 14 6 10 2 12 4 8 0]exch get}def/FR{0.7200 0 $E defaultmatrix
dtransform/yres exch def/xres exch def xres dup mul yres dup mul add
sqrt}def/SU{/_sf exch def/_sa exch def/_cs exch def/_mm $C currentmatrix
def/rm _sa $R rotate def/sm _cs dup $L scale def sm rm _mm _mm concatmatrix
_mm concatmatrix pop 1 0 _mm dtransform/y1 exch def/x1 exch def/_vl x1 dup
mul y1 dup mul add sqrt def/_fq FR _vl div def/_na y1 x1 atan def _mm 2 get
_mm 1 get mul _mm 0 get _mm 3 get mul sub 0 gt{{neg}/_sf load
concatprocs/_sf exch def}if _fq _na/_sf load setscreen}def/BO{/_yb exch
def/_xb exch def/_bv _bs _yb _bw mul _xb 8 idiv add get def/_mk 1 7 _xb 8
mod sub bitshift def _bv _mk and 0 ne $I 1 eq xor}def/BF{DEC_WRITE_dict
begin/_yy exch def/_xx exch def/_xi _xx 1 add 2 div _bp mul cvi def/_yi _yy
1 add 2 div _bp mul cvi def _xi _yi BO{/_nb _nb 1 add def 1}{/_fb _fb 1 add
def 0}ifelse end}def/setpattern{/_cz exch def/_bw exch def/_bp exch def/_bs
exch PS def/_nb 0 def/_fb 0 def _cz 0/BF load SU{}settransfer _fb _fb _nb
add div setgray/$S 1 def}def/invertpattern{$S 0 eq{{1 exch
sub}currenttransfer concatprocs settransfer}if}def/invertscreen{/$I 1
def/$S 0 def}def/revertscreen{/$I 0 def}def/setrect{/$h exch def/$w exch
def/$y exch def/$x exch def newpath $x $y moveto $w $x add $y lineto $w $x
add $h $y add lineto $x $h $y add lineto closepath}def/concatprocs{/_p2
exch cvlit def/_p1 exch cvlit def/_pn _p1 length _p2 length add array def
_pn 0 _p1 putinterval _pn _p1 length _p2 putinterval _pn
cvx}def/OF/findfont load def/findfont{dup DEC_WRITE_dict exch
known{DEC_WRITE_dict exch get}if DEC_WRITE_dict/OF get exec}def
mark/ISOLatin1Encoding 
8#000 1 8#001{StandardEncoding exch get}for /emdash/endash
8#004 1 8#025{StandardEncoding exch get}for /quotedblleft/quotedblright
8#030 1 8#054{StandardEncoding exch get}for /minus 8#056 1 8#217
{StandardEncoding exch get}for/dotlessi 8#301 1 8#317{StandardEncoding 
exch get}for/space/exclamdown/cent/sterling/currency/yen/brokenbar/section
/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered
/macron/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph
/periodcentered/cedilla/onesuperior/ordmasculine/guillemotright/onequarter
/onehalf/threequarters/questiondown/Agrave/Aacute/Acircumflex/Atilde
/Adieresis/Aring/AE/Ccedilla/Egrave/Eacute/Ecircumflex/Edieresis/Igrave
/Iacute/Icircumflex/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde
/Odieresis/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn
/germandbls/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave
/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis
256 array astore def cleartomark 
/encodefont{findfont dup maxlength dict begin{1 index/FID ne{def}{pop
pop}ifelse}forall/Encoding exch def dup/FontName exch def currentdict
definefont end}def/loads{/$/ISOLatin1Encoding load def/&/encodefont load
def/*/invertpattern load def/+/revertscreen load def/-/invertscreen load
def/:/concatprocs load def/^/setpattern load def/~/pat1 load def/_/pat2
load def/@/setrect load def/A/arcn load def/B/ashow load def/C/curveto load
def/D/def load def/E/eofill load def/F/findfont load def/G/setgray load
def/H/closepath load def/I/clip load def/J/fill load def/K/kshow load
def/L/lineto load def/M/moveto load def/N/newpath load def/O/rotate load
def/P/pop load def/R/grestore load def/S/gsave load def/T/translate load
def/U/sub load def/V/div load def/W/widthshow load def/X/exch load
def/Y/awidthshow load def/a/save load def/c/setlinecap load def/d/setdash
load def/e/restore load def/f/setfont load def/g/initclip load def/h/show
load def/i/setmiterlimit load def/j/setlinejoin load def/k/stroke load
def/l/rlineto load def/m/rmoveto load def/n/currentfont load
def/o/scalefont load def/p/currentpoint load def/q/setrgbcolor load
def/r/currenttransfer load def/s/scale load def/t/setmatrix load
def/u/settransfer load def/w/setlinewidth load def/x/matrix load
def/y/currentmatrix load def}def
end
%%EndProcSet
%%EndProlog

%%BeginSetup
DEC_WRITE_dict begin
loads
version cvi 23.0 gt {
currentdict {dup type /arraytype eq
{bind def} {pop pop} ifelse} forall} if
0.0100 0.0100 s

%%EndSetup
%%Page: i 1
/$P a D
g N
0 79200 T
N
14400 -21939 M
56408 -21939 L
S
50 w
0 c
0 j
2 i
0.00 G k
R
N

14400 -3700 T
N
0 G
41712 -963 M
41712 -11663 M
288 -23938 M
/AvantGarde-Demi-ISOLatin1 $
/AvantGarde-Demi & P
/AvantGarde-Demi-ISOLatin1 F 3000 o f
(MACRO\25532 Type Checker) h
288 -26738 M
/AvantGarde-Book-ISOLatin1 $
/AvantGarde-Book & P
/AvantGarde-Book-ISOLatin1 F 1800 o f
(Paul Houlihan, OpenVMS Engineering) h
288 -32263 M
/NewCenturySchlbk-Roman-ISOLatin1 $
/NewCenturySchlbk-Roman & P
/NewCenturySchlbk-Roman-ISOLatin1 F 900 o f
64.7 0 32 (This report describes DCL command files that support the checking of the embedded data type in) W
288 -33263 M
13.3 0 32 (MACRO\25532 field names against an opcode's expectation for each argument. The benefit of this data) W
288 -34263 M
(type checking is increased productivity and quality when programming in MACRO\25532.) h
288 -40863 M
(March 30, 1991) h
-14400 3700 T

14400 -71900 T
N
0 G
288 -963 M
288 -2242 M
-14400 71900 T

showpage
$P e

%%Page: ii 2
/$P a D
g N
0 79200 T
N
5778 -14399 M
57222 -14399 L
S
50 w
0 c
0 j
2 i
0.00 G k
R
N

5400 -75600 T
N
0 G
300 -975 M
51291 -975 M
/AvantGarde-Book-ISOLatin1 $
/AvantGarde-Book & P
/AvantGarde-Book-ISOLatin1 F 900 o f
( ) h
(ii) h
300 -2254 M
-5400 75600 T

5400 -15200 T
N
0 G
43312 -1788 M
/AvantGarde-Demi-ISOLatin1 $
/AvantGarde-Demi & P
/AvantGarde-Demi-ISOLatin1 F 2000 o f
(Contents) h
288 -8438 M
313 -8438 M
n 0.700 o f
(1) h
2288 -8438 M
(Introduction) h
288 -10338 M
6288 -10338 M
/NewCenturySchlbk-Roman-ISOLatin1 $
/NewCenturySchlbk-Roman & P
/NewCenturySchlbk-Roman-ISOLatin1 F 1000 o f
(Benefits/Features) h
14734 -10338 M
(.........................................................................................) h
39643 -10338 M
(1\2551) h
288 -11538 M
6288 -11538 M
(Overview) h
10842 -11538 M
(.......................................................................................................) h
39643 -11538 M
(1\2551) h
288 -15638 M
313 -15638 M
/AvantGarde-Demi-ISOLatin1 F 1400 o f
(2) h
2288 -15638 M
( TYPCHK.DEFINITIONS) h
288 -17538 M
6288 -17538 M
/NewCenturySchlbk-Roman-ISOLatin1 F 1000 o f
(New Alpha Data Types) h
17236 -17538 M
(................................................................................) h
39643 -17538 M
(2\2555) h
288 -21638 M
313 -21638 M
/AvantGarde-Demi-ISOLatin1 F 1400 o f
(3) h
2288 -21638 M
( TYPCHK.COM) h
288 -26438 M
313 -26438 M
(4) h
2288 -26438 M
( TYPCHK_DIFF.COM) h
288 -31238 M
313 -31238 M
(5) h
2288 -31238 M
( WARNINGS) h
288 -36038 M
313 -36038 M
(6) h
2288 -36038 M
( ERRORS) h
-5400 15200 T

showpage
$P e

%%Page: 1-1 3
/$P a D
g N
0 79200 T
N
5778 -14414 M
57222 -14414 L
S
0.00 G J
R
S
50 w
0 c
0 j
2 i
0.00 G k
R
N

5400 -75600 T
N
0 G
300 -975 M
42568 -975 M
/AvantGarde-Book-ISOLatin1 $
/AvantGarde-Book & P
/AvantGarde-Book-ISOLatin1 F 900 o f
(       ) h
(Introduction) h
/AvantGarde-Demi-ISOLatin1 $
/AvantGarde-Demi & P
/AvantGarde-Demi-ISOLatin1 F 900 o f
(   ) h
(1\2551) h
300 -2254 M
-5400 75600 T

5400 -11500 T
N
0 G
39140 -1800 M
n 2.222 o f
(1) h
40260 -1800 M
(Introduction) h
-5400 11500 T

5400 -14900 T
N
0 G
10200 -1050 M
0 -3450 M
n 0.700 o f
(Benefits/Features) h
10200 -5350 M
/NewCenturySchlbk-Roman-ISOLatin1 $
/NewCenturySchlbk-Roman & P
/NewCenturySchlbk-Roman-ISOLatin1 F 1000 o f
(The MACRO\25532 Type Checker is a DCL command file that checks the data types embed\255) h
10200 -6550 M
(ded in a MACRO\25532 argument field name against the opcode's expectation for each argu\255) h
10200 -7750 M
(ment. The following benefits/features are provided by the MACRO\25532 Type Checker:) h
10500 -9550 M
/Symbol F 1000 o f
(\267) h
12000 -9550 M
/NewCenturySchlbk-Roman-ISOLatin1 F 1000 o f
(IMPROVED PRODUCTIVITY \255 A programmer can immediately access data type con\255) h
12000 -10750 M
(flicts on a newly written or modified MACRO\25532 module instead of painstakingly ex\255) h
12000 -11950 M
(tracting each bug through manual debugging. A potential problem with type checking) h
12000 -13150 M
(is that too many warnings can be produced to process in a reasonable amount of time.) h
12000 -14350 M
(The Type Checker addresses this problem by providing options to control the different) h
12000 -15550 M
(types of checking performed and by giving complete control over the type checking) h
12000 -16750 M
(rules. Another unmanageable problem is sifting out new warnings that result from) h
12000 -17950 M
(minor changes to a module from previously existing and verified warnings. A com\255) h
12000 -19150 M
(mand file exists that makes identifying the different warnings in two listing files a) h
12000 -20350 M
(manageable task.  ) h
10500 -22150 M
/Symbol F 1000 o f
(\267) h
12000 -22150 M
/NewCenturySchlbk-Roman-ISOLatin1 F 1000 o f
(IMPROVED QUALITY \255 MACRO\25532 code on infrequently executed code paths can be) h
12000 -23350 M
(checked for common failures instead of waiting until a field test site or customer dis\255) h
12000 -24550 M
(covers the bug. It should be possible with this tool for an engineer to never ship or) h
12000 -25750 M
(even checkin another bug resulting from the confusion over a VIELD \($V_\) or MASK) h
12000 -26950 M
(\($M_\) field! The tool can be used by developers to verify changes or after source) h
12000 -28150 M
(checkin by anyone interested in monitoring one dimension of quality in MACRO\25532) h
12000 -29350 M
(code. The Type Checker also encourages the clean up of field naming and usage in or\255) h
12000 -30550 M
(der to reduce the number of warnings generated and to improve the type checking) h
12000 -31750 M
(which results in more maintainable code.) h
10500 -33550 M
/Symbol F 1000 o f
(\267) h
12000 -33550 M
/NewCenturySchlbk-Roman-ISOLatin1 F 1000 o f
(EASY TO USE \255 No complicated learning curve is involved. The Type Checker re\255) h
12000 -34750 M
(quires no tailoring, just provide a VAX MACRO or MACRO Compiler listing file and) h
12000 -35950 M
(the Type checker returns a copy of the listing file with simple descriptive warnings) h
12000 -37150 M
(embedded.) h
10500 -38950 M
/Symbol F 1000 o f
(\267) h
12000 -38950 M
/NewCenturySchlbk-Roman-ISOLatin1 F 1000 o f
(FLEXIBILITY \255 A powerful optional aspect of the Type Checker is the ability to tailor) h
12000 -40150 M
(the checking rules to the specific conventions of a facility to support more rigorous) h
12000 -41350 M
(checking or reduce the noise of false warnings. This flexibility helps the engineer cus\255) h
12000 -42550 M
(tomize the type checking to their code, focusing in quickly on problems without wast\255) h
12000 -43750 M
(ing time examining excessive false warnings.) h
0 -46350 M
/AvantGarde-Demi-ISOLatin1 F 1400 o f
(Overview) h
10200 -48250 M
10200 -50050 M
/NewCenturySchlbk-Roman-ISOLatin1 F 1000 o f
( The MACRO\25532 field naming conventions in the ) h
/NewCenturySchlbk-Italic-ISOLatin1 $
/NewCenturySchlbk-Italic & P
/NewCenturySchlbk-Italic-ISOLatin1 F 1000 o f
(VMS Internals and Data Structures) h
10200 -51250 M
(\(IDSM\) ) h
/NewCenturySchlbk-Roman-ISOLatin1 F 1000 o f
(recommends a format of: ) h
10200 -53050 M
15960 -53050 M
(<data_structure_name>$<data_type>_<field_name>) h
10200 -54850 M
(The data_type field can be used to check against the opcode's argument expectations. For) h
10200 -56050 M
(example the opcode MOVZBL is expecting a byte field \($B_\) for the first argument and a) h
10200 -57250 M
(longword field \($L_\) as the second argument. The MACRO\25532 Type Checker is a simple) h
-5400 14900 T

showpage
$P e

%%Page: 1-2 4
/$P a D
g N
0 79200 T
5400 -75600 T
N
0 G
300 -975 M
42730 -975 M
/AvantGarde-Book-ISOLatin1 $
/AvantGarde-Book & P
/AvantGarde-Book-ISOLatin1 F 900 o f
(       ) h
(Introduction) h
(  ) h
/AvantGarde-Demi-ISOLatin1 $
/AvantGarde-Demi & P
/AvantGarde-Demi-ISOLatin1 F 900 o f
( ) h
(1\2552) h
300 -2254 M
-5400 75600 T

5400 -4200 T
N
0 G
10200 -1050 M
/NewCenturySchlbk-Roman-ISOLatin1 $
/NewCenturySchlbk-Roman & P
/NewCenturySchlbk-Roman-ISOLatin1 F 1000 o f
(text processor that is able to parse the opcode and the text of any arguments. You define) h
10200 -2250 M
(the strings that identify a data type of a field, for example, "$B_" identifies a byte data) h
10200 -3450 M
(type field. You also define for each opcode the data type\(s\) that are expected for each ar\255) h
10200 -4650 M
(gument. The Type Checker then issues warnings whenever an argument of the wrong) h
10200 -5850 M
(data type is detected.) h
10200 -7650 M
(In addition the Type Checker checks for other common failures, such as missing #\255signs) h
10200 -8850 M
(or indexing errors. The problems being looked for by the Type Checker were suggested by) h
10200 -10050 M
(OpenVMS engineers and by a perusal MACRO\25532 bugs in OpenVMS VAX V5.0, V5.2 and) h
10200 -11250 M
(V5.4. ) h
10200 -13050 M
(The remaining sections of this Type Checker documentation cover current checking capa\255) h
10200 -14250 M
(bilities, the files that comprize this tool and the warnings and errors that can be gener\255) h
10200 -15450 M
(ated. The files are:) h
10500 -17250 M
/Symbol F 1000 o f
(\267) h
12000 -17250 M
/NewCenturySchlbk-Roman-ISOLatin1 F 1000 o f
(TYPCHK.DEFINITIONS \255 contains the editing rules and options.) h
10500 -19050 M
/Symbol F 1000 o f
(\267) h
12000 -19050 M
/NewCenturySchlbk-Roman-ISOLatin1 F 1000 o f
(TYPCHK.COM \255 is the DCL command file that performs the type checking. It takes) h
12000 -20250 M
(as input a VAX MACRO Listing file or a MACRO Compiler Listing file along with) h
12000 -21450 M
(TYPCHK.DEFINITIONS file and outputs a copy of the listing file with warnings em\255) h
12000 -22650 M
(bedded.) h
10500 -24450 M
/Symbol F 1000 o f
(\267) h
12000 -24450 M
/NewCenturySchlbk-Roman-ISOLatin1 F 1000 o f
(TYPCHK_DIFF.COM \255 is the DCL command file that can be used to DIFF the Type) h
12000 -25650 M
(Checker warnings of two files. ) h
10500 -27450 M
/Symbol F 1000 o f
(\267) h
12000 -27450 M
/NewCenturySchlbk-Roman-ISOLatin1 F 1000 o f
(TYPCHK.PS \255 this documentation) h
10200 -29450 M
(Thanks to Linda Duffell for encouraging me in doing this project and to Dick Stockdale) h
10200 -30650 M
(for field testing and making many suggestions on the Type Checker.) h
10200 -32450 M
10200 -34250 M
10200 -36050 M
-5400 4200 T

showpage
$P e

%%Page: 2-1 5
/$P a D
g N
0 79200 T
N
5778 -14414 M
57222 -14414 L
S
0.00 G J
R
S
50 w
0 c
0 j
2 i
0.00 G k
R
N

5400 -75600 T
N
0 G
300 -975 M
38886 -975 M
/AvantGarde-Book-ISOLatin1 $
/AvantGarde-Book & P
/AvantGarde-Book-ISOLatin1 F 900 o f
(       ) h
( TYPCHK.DEFINITIONS) h
/AvantGarde-Demi-ISOLatin1 $
/AvantGarde-Demi & P
/AvantGarde-Demi-ISOLatin1 F 900 o f
(   ) h
(2\2551) h
300 -2254 M
-5400 75600 T

5400 -11500 T
N
0 G
30700 -1800 M
n 2.222 o f
(2) h
31820 -1800 M
( TYPCHK.DEFINITIONS) h
-5400 11500 T

5400 -14900 T
N
0 G
10200 -1050 M
10200 -2850 M
/NewCenturySchlbk-Roman-ISOLatin1 $
/NewCenturySchlbk-Roman & P
/NewCenturySchlbk-Roman-ISOLatin1 F 1000 o f
(A powerful feature of the Type Checker is that all checking rules and selected options are) h
10200 -4050 M
(contained in a simple text file called TYPCHK.DEFINITIONS. The checking rules de\255) h
10200 -5250 M
(scribe the data type expectations for all opcode arguments and the options select among) h
10200 -6450 M
(checking rules that are hardwired into the TYPCHK.COM. The definition file is input) h
10200 -7650 M
(along with a listing file on each execution of TYPCHK.COM. The checking rules and op\255) h
10200 -8850 M
(tions are specified by a few simple statements. The syntax of these statements is embed\255) h
10200 -10050 M
(ded in the comments of the TYPCHK.DEFINITIONS file and is not repeated here.) h
10200 -11850 M
(To facilitate facility\255specific versions of TYPCHK.DEFINITIONS, TYPCHK.COM per\255) h
10200 -13050 M
(forms three steps in trying to locate the TYPCHK.DEFINITIONS file:) h
10200 -14850 M
(1) h
12200 -14850 M
(The current default directory is searched and the file TYPCHK.DEFINITIONS is) h
12200 -16050 M
(opened if found. ) h
10200 -17850 M
(2) h
12200 -17850 M
(If the logical name TYPCHK$DEFINITIONS exists then the file pointed at by this) h
12200 -19050 M
(logical is read.) h
10200 -20850 M
(3) h
12200 -20850 M
(The default master copy of the definition file, not tailored to any specific facility, is) h
12200 -22050 M
(used which is simply hardcoded to be in the following directory: DOCD$:[TOOLS]. To) h
12200 -23250 M
(change the default location of the master copy on your system merely edit the setting) h
12200 -24450 M
(of the DCL symbol MASTER_LOC in TYPCHK.COM.) h
10200 -26450 M
(Once the definition file is located, the rules and options are read and the type checking is) h
10200 -27650 M
(performed. ) h
10200 -29450 M
(The remainder of this section gives a short description of each TYPCHK.DEFINITIONS) h
10200 -30650 M
(statement: ) h
10500 -32450 M
/Symbol F 1000 o f
(\267) h
12000 -32450 M
/NewCenturySchlbk-Roman-ISOLatin1 F 1000 o f
(DEFINE_TYPE \255 This statement defines the strings that identify the data type of an) h
12000 -33650 M
(argument. An example of this statement is:) h
10200 -35300 M
15960 -35300 M
/Courier-ISOLatin1 $
/Courier & P
/Courier-ISOLatin1 F 800 o f
(DEFINE_TYPE) h
21720 -35300 M
27480 -35300 M
(BYTE) h
33240 -35300 M
($B_,$GB_,$AB_,_B_,_GB_,_AB_ ) h
10200 -36300 M
(      ) h
12000 -37650 M
/NewCenturySchlbk-Roman-ISOLatin1 F 1000 o f
(\002) h
13500 -37650 M
(In this DEFINE_TYPE statement example, the BYTE data type is defined as an) h
13500 -38850 M
(argument containing the strings $B_, $GB_, etc. These strings are referred to as) h
13500 -40050 M
(Data Type ID Strings. I have used the data naming conventions suggested by the) h
13500 -41250 M
(IDSM in the master copy of TYPCHK.DEFINITIONS. The usage of most data) h
13500 -42450 M
(types was obvious but some types like TEXT or ADDR \(the address data type\)) h
13500 -43650 M
(were difficult to predict. For example, ADDR generally has been assigned wher\255) h
13500 -44850 M
(ever LONG is used as a 32 bit entity \(ie. in CMPL or CLRL\). But it would be rare) h
13500 -46050 M
(to be using an address field in an arithmetic operation or with a bit manipulation) h
13500 -47250 M
(instruction, so ADDR is not used for such types of instructions. The data types) h
13500 -48450 M
(were defined to minimize pointless noise given OpenVMS conventions. Other sug\255) h
13500 -49650 M
(gested IDSM data types like RECORD, NUM_STRING and VARIABLE were un\255) h
13500 -50850 M
(predictable and were left out. ) h
12000 -52650 M
(\002) h
13500 -52650 M
(If your facility has naming conventions that vary from the IDSM suggested con\255) h
13500 -53850 M
(ventions then the conventions can be setup with the DEFINE_TYPE statement.) h
13500 -55050 M
(This also provides an opportunity to make consistent the naming conventions) h
13500 -56250 M
(within your facility to reduce the false warnings and improve error detection.) h
-5400 14900 T

showpage
$P e

%%Page: 2-2 6
/$P a D
g N
0 79200 T
5400 -75600 T
N
0 G
300 -975 M
39048 -975 M
/AvantGarde-Book-ISOLatin1 $
/AvantGarde-Book & P
/AvantGarde-Book-ISOLatin1 F 900 o f
(       ) h
( TYPCHK.DEFINITIONS) h
(  ) h
/AvantGarde-Demi-ISOLatin1 $
/AvantGarde-Demi & P
/AvantGarde-Demi-ISOLatin1 F 900 o f
( ) h
(2\2552) h
300 -2254 M
-5400 75600 T

5400 -4200 T
N
0 G
12000 -1050 M
/NewCenturySchlbk-Roman-ISOLatin1 $
/NewCenturySchlbk-Roman & P
/NewCenturySchlbk-Roman-ISOLatin1 F 1000 o f
(\002) h
13500 -1050 M
(Note that the following special data types ID strings exist:) h
15700 -2850 M
( x) h
17900 -2850 M
(*NO_CHECK* \255 is a special Data Type ID String that specifies that no) h
17900 -4050 M
(checking is to be done on this data type.) h
15700 -5850 M
( x) h
17900 -5850 M
(*LABEL* \255 is a special Data Type ID String that is defined to be the for\255) h
17900 -7050 M
(mat of a valid MACRO\25532 numeric label. ) h
10500 -8850 M
/Symbol F 1000 o f
(\267) h
12000 -8850 M
/NewCenturySchlbk-Roman-ISOLatin1 F 1000 o f
(DEFINE_OPCODE \255 This statement defines the data type of each argument expected) h
12000 -10050 M
(for each VAX opcode and EVAX builtin. More than one data type for a given argu\255) h
12000 -11250 M
(ment can be specified by separating them with commas and enclosing them in parens.) h
12000 -12450 M
(The object of defining multiple data types for an argument is not to suppress all warn\255) h
12000 -13650 M
(ings. Your goal should be to have enough data types to cover common safe usage and) h
12000 -14850 M
(avoid excessive warnings but still generate enough warnings to catch errors. Thus) h
12000 -16050 M
(getting some warnings on a module is OK and the TYPCHK_DIFF.COM command) h
12000 -17250 M
(file exists to help you detect changes in warnings between different versions of a mod\255) h
12000 -18450 M
(ule. ) h
12000 -19650 M
12000 -20850 M
(Literals can appear frequently in place of expected data types. For example, the) h
12000 -22050 M
(MOVL opcode expects the first argument to be a longword but a common occurrence) h
12000 -23250 M
(is "MOVL     #BDB$C_VALID,R0". Rather than generated excessive warnings on use) h
12000 -24450 M
(of such literals, if the expected data types from the DEFINE_OPCODE statement are) h
12000 -25650 M
(not literal data types then the Type Checker substitutes the following data types: ) h
12000 -26850 M
(CONSTANT, SIZE, MASK. Thus for literal arguments not expected to be literal,) h
12000 -28050 M
(these three data types are the expected data types output on any data type mismatch) h
12000 -29250 M
(warning.) h
12000 -30450 M
12000 -31650 M
(Macros can be type checked as long as the arguments are standard MACRO\25532 argu\255) h
12000 -32850 M
(ments using the DEFINE_OPCODE Statement. The macro name is used in place of) h
12000 -34050 M
(the opcode name. See the example for $REMQHI in the master copy of the definition) h
12000 -35250 M
(file. ) h
12000 -36450 M
12000 -37650 M
(Note that an argument may have an optional 2 character suffix that describes the ac\255) h
12000 -38850 M
(cess type and data size of the argument. The first character is the access type which is) h
12000 -40050 M
(used by the FLAG_LITERAL_WRITE_ADDRS option \(see the DEFINE_OPTION de\255) h
12000 -41250 M
(scription below\) to determine arguments that are used as the address of a write. The) h
12000 -42450 M
(second character is the data size which is used by the Indexing Flags to determine the) h
12000 -43650 M
(size of indexing used on this argument. In the following example, the first argument) h
12000 -44850 M
(is Read\255only and is a data size of Byte, the second argument is Modify \(both read and) h
12000 -46050 M
(written\) and is also a data size of Byte. Valid suffix characters are defined in the defi\255) h
12000 -47250 M
(nition file comments for the DEFINE_OPCODE statement.) h
10200 -48900 M
15960 -48900 M
/Courier-ISOLatin1 $
/Courier & P
/Courier-ISOLatin1 F 800 o f
(DEFINE_OPCODE   BICB2   \(BYTE,MASK,CONSTANT\)\255RB         BYTE\255MB) h
10200 -49900 M
10500 -51250 M
/Symbol F 1000 o f
(\267) h
12000 -51250 M
/NewCenturySchlbk-Roman-ISOLatin1 F 1000 o f
(DEFINE_EXCEPTION \255 You can specify an exception for fields that disobey conven\255) h
12000 -52450 M
(tions but have been determined to be safe, in order to eliminate warnings on these) h
12000 -53650 M
(fields. Any argument containing one of these exception strings will never be the target) h
12000 -54850 M
(of any data type mismatch warning message that triggers as a result of violation of) h
12000 -56050 M
(the checking rules established by the DEFINE_OPCODE statement. An example of) h
12000 -57250 M
(this statement is:) h
21720 -57250 M
10200 -58900 M
15960 -58900 M
/Courier-ISOLatin1 F 800 o f
(DEFINE_EXCEPTION) h
27480 -58900 M
(CTL$GQ_RMS_RUREC_LKSB) h
10200 -59900 M
10500 -61250 M
/Symbol F 1000 o f
(\267) h
12000 -61250 M
/NewCenturySchlbk-Roman-ISOLatin1 F 1000 o f
(DEFINE_TYPE_MODE \255 This statement allows you to specify a field data types that) h
12000 -62450 M
(must or must not be used with certain addressing modes. Addressing modes are hard\255) h
12000 -63650 M
(wired into TYPCHK.COM and currently only LITERAL addressing mode is defined.) h
12000 -64850 M
(Other addressing modes can be added if there are good uses for them. In the master) h
12000 -66050 M
(copy of the definition file, the CONSTANT, SIZE, MASK and VIELD data types must) h
12000 -67250 M
(be used in a literal addressing mode or the argument will be flagged. Also ANY_TYPE) h
12000 -68450 M
(data type must not be a literal. An example of this statement is:) h
-5400 4200 T

showpage
$P e

%%Page: 2-3 7
/$P a D
g N
0 79200 T
5400 -75600 T
N
0 G
300 -975 M
39048 -975 M
/AvantGarde-Book-ISOLatin1 $
/AvantGarde-Book & P
/AvantGarde-Book-ISOLatin1 F 900 o f
(       ) h
( TYPCHK.DEFINITIONS) h
(  ) h
/AvantGarde-Demi-ISOLatin1 $
/AvantGarde-Demi & P
/AvantGarde-Demi-ISOLatin1 F 900 o f
( ) h
(2\2553) h
300 -2254 M
-5400 75600 T

5400 -4200 T
N
0 G
10200 -900 M
15960 -900 M
/Courier-ISOLatin1 $
/Courier & P
/Courier-ISOLatin1 F 800 o f
(DEFINE_TYPE_MODE ) h
27480 -900 M
(CONSTANT) h
33240 -900 M
(LITERAL) h
10200 -1900 M
10500 -3250 M
/Symbol F 1000 o f
(\267) h
12000 -3250 M
/NewCenturySchlbk-Roman-ISOLatin1 $
/NewCenturySchlbk-Roman & P
/NewCenturySchlbk-Roman-ISOLatin1 F 1000 o f
(DEFINE_OPTION \255 Checking rules that have been hardwired into TYPCHK.COM) h
12000 -4450 M
(are selectable as options on the DEFINE_OPTION statement. An example of this ) h
12000 -5650 M
(statement is:) h
10200 -7300 M
15960 -7300 M
/Courier-ISOLatin1 F 800 o f
(DEFINE_OPTION) h
27480 -7300 M
(FLAG_INTEGERS,FLAG_LOCAL,FLAG_INDEXING_MISMATCHES) h
10200 -8300 M
10200 -9650 M
/NewCenturySchlbk-Roman-ISOLatin1 F 1000 o f
(       The following options are currently defined:) h
12000 -11450 M
(\002) h
13500 -11450 M
(FLAG_INTEGERS \255 Flag all integer\255only arguments which are integer values not) h
13500 -12650 M
(preceded by a #\255sign or associated with a register. This is to catch the missing     ) h
13500 -13850 M
(#\255signs on arguments. The flag is selected by default in the master copy of the defi\255) h
13500 -15050 M
(nition file.) h
12000 -16850 M
(\002) h
13500 -16850 M
(FLAG_LOCAL \255 Flag local module symbols used in arguments. Local symbols) h
13500 -18050 M
(often do not follow the naming convention of embedding the data type overtly in) h
13500 -19250 M
(the symbol name. By default in the master copy of the definition file, this option is) h
13500 -20450 M
(selected as it is useful to check field size assumption on these local symbols. How\255) h
13500 -21650 M
(ever there may be facilities where this option results in an excessive number of) h
13500 -22850 M
(warnings. A local symbol is a field name that contains alpha\255numeric or under\255) h
13500 -24050 M
(score characters but no "$". Before checking in a module, at least one pass should) h
13500 -25250 M
(be made with this option selected to verify the usage of these local symbols.) h
12000 -27050 M
(\002) h
13500 -27050 M
(FLAG_INDEXING_MISMATCHES \255 Flag all arguments that use indexing where) h
13500 -28250 M
(the data size used in indexing does not match the data type of the field. The data) h
13500 -29450 M
(size used in indexing is 1\255Byte, 2\255Word, 4\255Longword or Float, 8\255Quadword or D\255) h
13500 -30650 M
(Float, G\255Float and 16\255Octaword or H\255Float. This indexing data size is specific to) h
13500 -31850 M
(each opcode argument. For simple opcodes like MOVL, both arguments use long\255) h
13500 -33050 M
(word indexing. For more complicated opcodes like EXTV, the first argument does) h
13500 -34250 M
(longword indexing, the second and third arguments use byte indexing and the fi\255) h
13500 -35450 M
(nal argument uses longword indexing. ) h
13500 -36650 M
13500 -37850 M
(To catch unintended indexing, the data size for indexing is specified in a suffix for) h
13500 -39050 M
(each argument on the DEFINE_OPCODE statement. The Type Checker data) h
13500 -40250 M
(types that are valid for a given data size are:) h
13500 -41450 M
13500 -42650 M
( ) h
15960 -42650 M
(Data Size) h
21720 -42650 M
27480 -42650 M
(Expected TYPCHK Data Types) h
13500 -43850 M
15960 -43850 M
(\255\255\255\255\255\255\255\255\255\255\255\255\255) h
21720 -43850 M
27480 -43850 M
(\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255) h
13500 -45050 M
15960 -45050 M
(BYTE) h
21720 -45050 M
27480 -45050 M
(BYTE, TEXT) h
39000 -45050 M
13500 -46250 M
15960 -46250 M
(WORD) h
21720 -46250 M
27480 -46250 M
(WORD) h
13500 -47450 M
15960 -47450 M
(LONG) h
21720 -47450 M
27480 -47450 M
(LONG, ADDR, PTR_L) h
13500 -48650 M
15960 -48650 M
(QUAD) h
21720 -48650 M
27480 -48650 M
(QUAD, PTR_Q) h
13500 -49850 M
15960 -49850 M
(OCTA) h
21720 -49850 M
27480 -49850 M
(OCTA) h
13500 -51050 M
13500 -52250 M
(If the data type embedded in a field used in indexing is not an expected data type) h
13500 -53450 M
(then a warning is issued. This option is selected by default in the master copy of) h
13500 -54650 M
(the definition file. Note arguments with an access type of "B"ranch are not flagged) h
13500 -55850 M
(by this option. This was done to reduce noise as indexing on such arguments al\255) h
13500 -57050 M
(ways use byte indexing and aren't usually prone to errors. ) h
12000 -58850 M
(\002) h
13500 -58850 M
(FLAG_NODT_INDEXING \255 Flag all arguments that are using indexing but have) h
13500 -60050 M
(no embedded data type as there is no field name \(ie. \(R1\)[R2] \). This option flags) h
13500 -61250 M
(for manual checking, instances of indexing that can't be automatically type\255) h
13500 -62450 M
(checked. By default, this option is not set in the master copy of the definition file) h
13500 -63650 M
(but one pass should be made with this option selected to verify all indexing. Note) h
13500 -64850 M
(arguments with an access type of "B"ranch are not flagged by this option.) h
12000 -66650 M
(\002) h
13500 -66650 M
(FLAG_UNSIGNED_BRANCHES \255 Flag all unsigned branches \(BGTR, BGEQ,) h
13500 -67850 M
(BLSS, BLEQ\) that follow a byte or word opcode. This option attempts to locate) h
-5400 4200 T

showpage
$P e

%%Page: 2-4 8
/$P a D
g N
0 79200 T
5400 -75600 T
N
0 G
300 -975 M
39048 -975 M
/AvantGarde-Book-ISOLatin1 $
/AvantGarde-Book & P
/AvantGarde-Book-ISOLatin1 F 900 o f
(       ) h
( TYPCHK.DEFINITIONS) h
(  ) h
/AvantGarde-Demi-ISOLatin1 $
/AvantGarde-Demi & P
/AvantGarde-Demi-ISOLatin1 F 900 o f
( ) h
(2\2554) h
300 -2254 M
-5400 75600 T

5400 -4200 T
N
0 G
13500 -1050 M
/NewCenturySchlbk-Roman-ISOLatin1 $
/NewCenturySchlbk-Roman & P
/NewCenturySchlbk-Roman-ISOLatin1 F 1000 o f
(branch opcodes that should be unsigned as they are following an operation on an) h
13500 -2250 M
(unsigned field. A typical example is a size field that is meant to be a full byte or) h
13500 -3450 M
(word or longword. The use of one of the signed branches listed above may yield un\255) h
13500 -4650 M
(intended results when the size field is large enough to set the highest order bit, the) h
13500 -5850 M
(sign bit! Typically overflow of an unsigned field occurs on a byte or word field. Un\255) h
13500 -7050 M
(signed longword or quadword fields could also have this problem but this is more) h
13500 -8250 M
(rare and so these fields were not included to cut down on noise. Note that BEQL) h
13500 -9450 M
(and BNEQ are not involved in the option as the signed and unsigned forms of) h
13500 -10650 M
(these opcodes are identical. This option is selected by default in the master defini\255) h
13500 -11850 M
(tions.) h
12000 -13650 M
(\002) h
13500 -13650 M
(FLAG_LITERAL_WRITE_ADDRS \255 Flag all instructions that write values to a lit\255) h
13500 -14850 M
(eral address which is normally unintended. An argument that is used for writing) h
13500 -16050 M
(is assigned a "W"rite or "M"odify as the access type in an argument suffix on a) h
13500 -17250 M
(DEFINE_OPCODE statement. This option is selected by default in the master) h
13500 -18450 M
(definitions.) h
12000 -20250 M
(\002) h
13500 -20250 M
(FLAG_IMPLICIT_REGISTER_USE \255 Flag all opcodes that implicitly destroy \(or) h
13500 -21450 M
(return information in\) registers other than AP, FP, SP or PC. Verifying that each) h
13500 -22650 M
(destroyed register is properly saved and restored can often prevent a common bug.) h
13500 -23850 M
(The message indicates which registers are destroyed by the opcode in question.) h
13500 -25050 M
(This option is selected by default in the master definitions.) h
12000 -26850 M
(\002) h
13500 -26850 M
(ASSUME_SUPPRESS\255 ASSUME statements can suppress data type mismatch) h
13500 -28050 M
(warnings that result from a violation of the checking rules described in the) h
13500 -29250 M
(DEFINE_OPCODE statements. If this option is selected then any field which is in\255) h
13500 -30450 M
(cluded in a recent ASSUME statement prior to a data type mismatch will have the) h
13500 -31650 M
(warning suppressed. Note no other options or warning messages are affected by) h
13500 -32850 M
(this option. If the option is not selected then ASSUME statements are ignored.) h
13500 -34050 M
(Note only the last five ASSUME statement prior to the mismatch are checked. The) h
13500 -35250 M
(option is not selected by default in the master definitions since ASSUME state\255) h
13500 -36450 M
(ments can contain outdated assumptions. It is a good idea to make at least one) h
13500 -37650 M
(pass with this option not selected before checkin of a new or significantly changed) h
13500 -38850 M
(module to verify all data type mismatches are correctly protected by ASSUME) h
13500 -40050 M
(statements. ) h
12000 -41850 M
(\002) h
13500 -41850 M
(FULL_TYPCHK_FILE \255 If this option is selected then the file produced by) h
13500 -43050 M
(TYPCHK.COM with the embedded warnings will be a complete copy of the origi\255) h
13500 -44250 M
(nal MACRO listing file. Without this option, the created TYPCHK file terminates) h
13500 -45450 M
(after the last instruction omitting the symbol table or Alpha machine code listing.) h
13500 -46650 M
(By default this option is not selected in the master definitions to save disk space.) h
12000 -48450 M
(\002) h
13500 -48450 M
(FLAG_REGISTER_ONLY_ARGS \255 Flags all arguments that are merely registers) h
13500 -49650 M
(without a field name to permit manual checking of all register argument assump\255) h
13500 -50850 M
(tions. Normally selecting this option results in an excessive number of warnings so) h
13500 -52050 M
(this flag is not selected by default in the master copy of the definition file.) h
10200 -54050 M
10200 -55250 M
-5400 4200 T

showpage
$P e

%%Page: 2-5 9
/$P a D
g N
0 79200 T
5400 -75600 T
N
0 G
300 -975 M
39048 -975 M
/AvantGarde-Book-ISOLatin1 $
/AvantGarde-Book & P
/AvantGarde-Book-ISOLatin1 F 900 o f
(       ) h
( TYPCHK.DEFINITIONS) h
(  ) h
/AvantGarde-Demi-ISOLatin1 $
/AvantGarde-Demi & P
/AvantGarde-Demi-ISOLatin1 F 900 o f
( ) h
(2\2555) h
300 -2254 M
-5400 75600 T

5400 -4200 T
N
0 G
10200 -1050 M
/NewCenturySchlbk-Roman-ISOLatin1 $
/NewCenturySchlbk-Roman & P
/NewCenturySchlbk-Roman-ISOLatin1 F 1000 o f
(The default options selected in the master copy of the definition file are meant to be used) h
10200 -2250 M
(by a programmer changing code or creating new code and that wants rigorous type check\255) h
10200 -3450 M
(ing. The default options are:) h
10500 -5250 M
/Symbol F 1000 o f
(\267) h
12000 -5250 M
/NewCenturySchlbk-Roman-ISOLatin1 F 1000 o f
(FLAG_INTEGERS, FLAG_LOCAL, FLAG_INDEXING_MISMATCHES,) h
12000 -6450 M
(FLAG_UNSIGNED_BRANCHES, FLAG_LITERAL_WRITE_ADDRS,) h
12000 -7650 M
(FLAG_IMPLICIT_REGISTER_USE) h
10200 -9650 M
(The only other option a programmer might want to select would be the) h
10200 -10850 M
(FLAG_NODT_INDEXING. Note ASSUME_SUPPRESS is not included so that ASSUME) h
10200 -12050 M
(statements don't hide some data type mismatch. ) h
10200 -13850 M
(The default options selected by a person unfamiliar with this facility but interested in) h
10200 -15050 M
(monitoring quality and catching gross errors would be different. In this situation, one) h
10200 -16250 M
(wants to minimize the number of warnings that required involved investigation and only) h
10200 -17450 M
(flag constructs that can be proofed by a person familiar with MACRO\25532 and some Open\255) h
10200 -18650 M
(VMS conventions. In this case, one might only want to look for data type mismatches not) h
10200 -19850 M
(protected by an ASSUME, literals with missing #\255signs and literals which are  used as) h
10200 -21050 M
(the address of a write. The options for this situation would be:) h
10500 -22850 M
/Symbol F 1000 o f
(\267) h
12000 -22850 M
/NewCenturySchlbk-Roman-ISOLatin1 F 1000 o f
(FLAG_INTEGERS, FLAG_LITERAL_WRITE_ADDRS, ASSUME_SUPPRESS) h
10200 -24850 M
(A run using these two option settings against the approximately 50, 000 MACRO\25532 ar\255) h
10200 -26050 M
(guments in the OpenVMS AXP SYS facility only flagged a small percentage of arguments.) h
10200 -27850 M
15960 -27850 M
21720 -27850 M
27480 -27850 M
(Percentage of Arguments Flagged) h
10500 -29650 M
/Symbol F 1000 o f
(\267) h
12000 -29650 M
/NewCenturySchlbk-Roman-ISOLatin1 F 1000 o f
(Programmer Options) h
27480 -29650 M
(9 %) h
10500 -31450 M
/Symbol F 1000 o f
(\267) h
12000 -31450 M
/NewCenturySchlbk-Roman-ISOLatin1 F 1000 o f
(Monitoring Options) h
21720 -31450 M
27480 -31450 M
(2 %) h
0 -34050 M
/AvantGarde-Demi-ISOLatin1 F 1400 o f
(New Alpha Data Types) h
10200 -35950 M
/NewCenturySchlbk-Roman-ISOLatin1 F 1000 o f
(OpenVMS AXP has introduced new data types for integer and pointer data fields to meet) h
10200 -37150 M
(the needs of Alpha development and to increase portability of OpenVMS code between Al\255) h
10200 -38350 M
(pha and VAX platforms. These data types fall into three categories: Forced, Hardware) h
10200 -39550 M
(and Software.) h
10200 -41350 M
(Forced definitions are integer or pointer fields whose data typed have been forced to be) h
10200 -42550 M
(byte, word, longword or quadword under all environments, ie. to meet the requirements of) h
10200 -43750 M
(a fixed public interface. The following are some of the forced data types strings:) h
10500 -45550 M
/Symbol F 1000 o f
(\267) h
12000 -45550 M
/NewCenturySchlbk-Roman-ISOLatin1 F 1000 o f
($IB_ = Integer Byte, $IW_ = Integer Word, $IL_ = Integer Longword, $IQ_ = Integer) h
12000 -46750 M
(Quadword, $PL_ = Pointer Longword, $PQ_ = Pointer Quadword) h
10200 -48750 M
(The Forced Integer data types have been added to the definitions of the BYTE, WORD,) h
10200 -49950 M
(LONG or QUAD data types. For the Forced Pointer data data types, two data types have) h
10200 -51150 M
(been added PTR_L \(Pointer Longword\) and PTR_Q \(Pointer Quadword\). The Forced) h
10200 -52350 M
(Pointer data types are treated like the ADDR data type and are only allowed on opcodes) h
10200 -53550 M
(that treat the argument as an entire longword or quadword entity. Thus they are not) h
10200 -54750 M
(used with bit manipulation or arithmetic opcodes but are used with CLR or MOV opcodes. ) h
10200 -56550 M
(Hardware definitions are integer or pointer fields whose size is determined by the target) h
10200 -57750 M
(hardware the code will run on. For VAX, the hardware size is 32 bits, for Alpha the hard\255) h
10200 -58950 M
(ware size is 64 bits.) h
10200 -60750 M
(Software definitions are integer or pointer fields whose size is determined by the default) h
10200 -61950 M
(software environment the code will run on. For VAX, the software default is 32 bits and) h
10200 -63150 M
(for Alpha Phase 1 the software default will be 32 bits but for Alpha Phase 2 and Al\255) h
10200 -64350 M
(pha/Ultrix the software default will be 64 bits.) h
10200 -66150 M
(Thus Hardware and Software Integer and Pointer data types fluctuate depending on the) h
10200 -67350 M
(target environment the code is destined for. For example, the Hardware data type on a) h
-5400 4200 T

showpage
$P e

%%Page: 2-6 10
/$P a D
g N
0 79200 T
5400 -75600 T
N
0 G
300 -975 M
39048 -975 M
/AvantGarde-Book-ISOLatin1 $
/AvantGarde-Book & P
/AvantGarde-Book-ISOLatin1 F 900 o f
(       ) h
( TYPCHK.DEFINITIONS) h
(  ) h
/AvantGarde-Demi-ISOLatin1 $
/AvantGarde-Demi & P
/AvantGarde-Demi-ISOLatin1 F 900 o f
( ) h
(2\2556) h
300 -2254 M
-5400 75600 T

5400 -4200 T
N
0 G
10200 -1050 M
/NewCenturySchlbk-Roman-ISOLatin1 $
/NewCenturySchlbk-Roman & P
/NewCenturySchlbk-Roman-ISOLatin1 F 1000 o f
(VAX is 32 bits and the field should be type checked as if it were a longword field \(ie.) h
10200 -2250 M
(MOVL is allowed but MOVQ is an error\). For Alpha, the Hardware data type is 64 bits) h
10200 -3450 M
(and the field should be type checked as a quadword field \(ie. MOVL is an error while) h
10200 -4650 M
(MOVQ is allowed\). For higher\255level languages keeping this field size straight is the job of) h
10200 -5850 M
(the compiler but for MACRO\25532 code the programmer must keep these field size distinc\255) h
10200 -7050 M
(tions straight. To assist you, the Hardware and Software data types that are type checked) h
10200 -8250 M
(based on the target environment. The target environment is determined first, by whether) h
10200 -9450 M
(the MACRO Compiler or VAX MACRO Assembler generated the listing file and secondly) h
10200 -10650 M
(by any architectural definitions file, normally pre\255pended to a Macro Compiler listing file.) h
10200 -12450 M
(Listings files generated by the VAX MACRO Assembler will assume that Hardware and) h
10200 -13650 M
(Software data type size is 32 bits. Listing files generated by the MACRO Compiler will) h
10200 -14850 M
(assume that the Hardware data type size is 64 bits and that the Software data type size) h
10200 -16050 M
(is 32 bits.) h
10200 -17850 M
(The target environment is further qualified by any architectural definitions from the) h
10200 -19050 M
(ARCH_DEFS.MAR. This file is normally pre\255pended to all MACRO Compiler listing files) h
10200 -20250 M
(and contains local symbols that describe the target environment:) h
10500 -22050 M
/Symbol F 1000 o f
(\267) h
12000 -22050 M
/NewCenturySchlbk-Roman-ISOLatin1 F 1000 o f
(EVAX = 1  \(Hardware data type size is 32 bits\)) h
10500 -23850 M
/Symbol F 1000 o f
(\267) h
12000 -23850 M
/NewCenturySchlbk-Roman-ISOLatin1 F 1000 o f
(VAX = 1  \(Hardware data type size is 64 bits\)) h
10500 -25650 M
/Symbol F 1000 o f
(\267) h
12000 -25650 M
/NewCenturySchlbk-Roman-ISOLatin1 F 1000 o f
(ADDRESSBITS = 32 \(Software data type size is 32 bits\)) h
10500 -27450 M
/Symbol F 1000 o f
(\267) h
12000 -27450 M
/NewCenturySchlbk-Roman-ISOLatin1 F 1000 o f
(ADDRESSBITS = 64 \(Software data type size is 64 bits\)) h
10200 -29450 M
(Once the target Hardware and Software environment is determined, the Hardware and) h
10200 -30650 M
(Software data types are used in type checking whenever certain other related data types) h
10200 -31850 M
(are declared legal for the various opcodes in definitions file. For example, 32\255bit Hard\255) h
10200 -33050 M
(ware or Software Integer data types are legal wherever the LONG data type has been) h
10200 -34250 M
(used in a DEFINE_OPCODE Statement in the definitions file. The following table shows) h
10200 -35450 M
(the four data type names added for these Hardware and Software Integer and Pointer) h
10200 -36650 M
(data types and the related data types that trigger the usage of Hardware and Software) h
10200 -37850 M
(data types when type checking in either a 32\255bit or 64\255bit environment: ) h
10200 -39650 M
15960 -39650 M
21720 -39650 M
27480 -39650 M
33240 -39650 M
(32\255Bit ) h
39000 -39650 M
44760 -39650 M
(64\255Bit ) h
10200 -41450 M
15960 -41450 M
21720 -41450 M
27480 -41450 M
33240 -41450 M
(environment) h
44760 -41450 M
(environment) h
10200 -43250 M
15960 -43250 M
21720 -43250 M
27480 -43250 M
33240 -43250 M
(\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255) h
39000 -43250 M
44760 -43250 M
(\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255) h
10500 -45050 M
/Symbol F 1000 o f
(\267) h
12000 -45050 M
/NewCenturySchlbk-Roman-ISOLatin1 F 1000 o f
(INT_S \255 Integer Software data type) h
33240 -45050 M
(LONG) h
39000 -45050 M
44760 -45050 M
(QUAD) h
10500 -46850 M
/Symbol F 1000 o f
(\267) h
12000 -46850 M
/NewCenturySchlbk-Roman-ISOLatin1 F 1000 o f
(INT_H \255 Integer Hardware data type) h
33240 -46850 M
(LONG) h
39000 -46850 M
44760 -46850 M
(QUAD) h
10500 -48650 M
/Symbol F 1000 o f
(\267) h
12000 -48650 M
/NewCenturySchlbk-Roman-ISOLatin1 F 1000 o f
(PTR_S \255 Pointer Software data type) h
33240 -48650 M
(PTR_L) h
39000 -48650 M
44760 -48650 M
(PTR_Q) h
10500 -50450 M
/Symbol F 1000 o f
(\267) h
12000 -50450 M
/NewCenturySchlbk-Roman-ISOLatin1 F 1000 o f
(PTR_H \255 Pointer Hardware data type) h
33240 -50450 M
(PTR_L) h
39000 -50450 M
44760 -50450 M
(PTR_Q) h
-5400 4200 T

showpage
$P e

%%Page: 3-1 11
/$P a D
g N
0 79200 T
N
5778 -14414 M
57222 -14414 L
S
0.00 G J
R
S
50 w
0 c
0 j
2 i
0.00 G k
R
N

5400 -75600 T
N
0 G
300 -975 M
41689 -975 M
/AvantGarde-Book-ISOLatin1 $
/AvantGarde-Book & P
/AvantGarde-Book-ISOLatin1 F 900 o f
(       ) h
( TYPCHK.COM) h
/AvantGarde-Demi-ISOLatin1 $
/AvantGarde-Demi & P
/AvantGarde-Demi-ISOLatin1 F 900 o f
(   ) h
(3\2551) h
300 -2254 M
-5400 75600 T

5400 -11500 T
N
0 G
37260 -1800 M
n 2.222 o f
(3) h
38380 -1800 M
( TYPCHK.COM) h
-5400 11500 T

5400 -14900 T
N
0 G
10200 -1050 M
10200 -2850 M
/NewCenturySchlbk-Roman-ISOLatin1 $
/NewCenturySchlbk-Roman & P
/NewCenturySchlbk-Roman-ISOLatin1 F 1000 o f
(The Type Checker command file, TYPCHK.COM, accepts as input a VAX MACRO listing) h
10200 -4050 M
(file or MACRO Compiler listing file. This command file then locates the definition file and) h
10200 -5250 M
(applies the definitions to the MACRO instructions in the listing file producing a copy of) h
10200 -6450 M
(the listing file with warnings embedded. The file containing the warnings has the same) h
10200 -7650 M
(filename as the listing file but a file extension of ".TYPCHK" . To locate all warnings in) h
10200 -8850 M
(the .TYPCHK file, search for the string that begins all warning messages: "WARN: " . All) h
10200 -10050 M
(MACRO instructions even those resulting from expansions of macros are checked by the) h
10200 -11250 M
(Type Checker.) h
10200 -13050 M
(The following example creates a listing file with warnings called EZDRIVER.TYPCHK) h
10200 -14250 M
(from EZDRIVER.LIS.) h
10200 -15775 M
10200 -16875 M
/Courier-ISOLatin1 $
/Courier & P
/Courier-ISOLatin1 F 900 o f
($ @typchk) h
10200 -17975 M
10200 -19075 M
(Enter VAX or AXP MACRO\25532 Listing File to check: ezdriver) h
10200 -20175 M
10200 -21275 M
(Type Checking File: DUA0:[HOULIHAN]EZDRIVER.LIS;19) h
10200 -22375 M
10200 -23475 M
($ dir *.typchk) h
10200 -24575 M
10200 -25675 M
(Directory DUA0:[HOULIHAN]) h
10200 -26775 M
10200 -27875 M
(EZDRIVER.TYPCHK;1     ) h
10200 -28975 M
10200 -30075 M
(Total of 1 file.) h
10200 -31175 M
10200 -32275 M
($) h
10200 -33375 M
10200 -34750 M
/NewCenturySchlbk-Roman-ISOLatin1 F 1000 o f
(The listing file input must be a single filespec but can contain wildcards. Wildcards would) h
10200 -35950 M
(be used if one wanted to type check all the files in an entire facility for example. A default) h
10200 -37150 M
(file extension of .LIS is supplied if none is specified. The output file\(s\) are always placed) h
10200 -38350 M
(in the default directory. Note that TYPCHK.COM determines whether a VAX MACRO or) h
10200 -39550 M
(MACRO Compiler listing file is input by reading the first page header line of the file and) h
10200 -40750 M
(adjusts automatically to the correct format and architectural dependencies like the num\255) h
10200 -41950 M
(ber of registers, \(for VAX MACRO R0\255R15, for Alpha R0\255R31\). If wildcards are used and) h
10200 -43150 M
(both VAX MACRO and MACRO Compiler listing are included, then the TYPCHK com\255) h
10200 -44350 M
(mand file adjusts automatically to each file's format. If the listing file is not a VAX) h
10200 -45550 M
(MACRO or MACRO Compiler listing file then an error message prints stating the file is) h
10200 -46750 M
(not a Macro listing file. For wildcards, this error does not stop the wildcard searching.) h
10200 -47950 M
(The error prints and the type checker goes onto the next file in the wildcard search. ) h
10200 -49750 M
(TYPCHK.COM must locate the definition file and read in the definitions before type) h
10200 -50950 M
(checking the listing file. Three attempts are made to locate this file:) h
10200 -52750 M
(1) h
12200 -52750 M
(The file TYPCHK.DEFINITIONS is searched for in your local directory and opened if) h
12200 -53950 M
(found.) h
10200 -55750 M
(2) h
12200 -55750 M
(If the logical TYPCHK$DEFINITIONS exists then the file pointed at by this logical is) h
12200 -56950 M
(opened.) h
-5400 14900 T

showpage
$P e

%%Page: 3-2 12
/$P a D
g N
0 79200 T
5400 -75600 T
N
0 G
300 -975 M
41851 -975 M
/AvantGarde-Book-ISOLatin1 $
/AvantGarde-Book & P
/AvantGarde-Book-ISOLatin1 F 900 o f
(       ) h
( TYPCHK.COM) h
(  ) h
/AvantGarde-Demi-ISOLatin1 $
/AvantGarde-Demi & P
/AvantGarde-Demi-ISOLatin1 F 900 o f
( ) h
(3\2552) h
300 -2254 M
-5400 75600 T

5400 -4200 T
N
0 G
10200 -1050 M
/NewCenturySchlbk-Roman-ISOLatin1 $
/NewCenturySchlbk-Roman & P
/NewCenturySchlbk-Roman-ISOLatin1 F 1000 o f
(3) h
12200 -1050 M
(The master copy of the definition file is opened. ) h
10200 -3050 M
(If no definition file can be opened then an error is printed and the type checking is not) h
10200 -4250 M
(performed.) h
10200 -6050 M
(These three mechanisms allow an engineer to override the master copy of the definition) h
10200 -7250 M
(file with facility\255specific definitions. By placing a facility specific definition file in a) h
10200 -8450 M
(facility\255specific local directory from which all type checking is done, the appropriate defi\255) h
10200 -9650 M
(nition file is automatically picked up. This is useful when dealing with multiple facilities) h
10200 -10850 M
(where merely switching to the correct directory picks up the appropriate definition file.) h
10200 -12050 M
(The logical name allows one to point directly to the definition file without restrictions on) h
10200 -13250 M
(where the default directory is currently set. ) h
10200 -15050 M
(Performance of the Type Checker is a function of the size of the module. A 6000 line) h
10200 -16250 M
(source module took about 1 hour in elapsed time to type check on a VAXstation 3100. This) h
10200 -17450 M
(includes the 5 minutes it takes to read in all the definitions. ) h
10200 -19250 M
-5400 4200 T

showpage
$P e

%%Page: 4-1 13
/$P a D
g N
0 79200 T
N
5778 -14414 M
57222 -14414 L
S
0.00 G J
R
S
50 w
0 c
0 j
2 i
0.00 G k
R
N

5400 -75600 T
N
0 G
300 -975 M
39493 -975 M
/AvantGarde-Book-ISOLatin1 $
/AvantGarde-Book & P
/AvantGarde-Book-ISOLatin1 F 900 o f
(       ) h
( TYPCHK_DIFF.COM) h
/AvantGarde-Demi-ISOLatin1 $
/AvantGarde-Demi & P
/AvantGarde-Demi-ISOLatin1 F 900 o f
(   ) h
(4\2551) h
300 -2254 M
-5400 75600 T

5400 -11500 T
N
0 G
32380 -1800 M
n 2.222 o f
(4) h
33500 -1800 M
( TYPCHK_DIFF.COM) h
-5400 11500 T

5400 -14900 T
N
0 G
10200 -1050 M
10200 -2850 M
/NewCenturySchlbk-Roman-ISOLatin1 $
/NewCenturySchlbk-Roman & P
/NewCenturySchlbk-Roman-ISOLatin1 F 1000 o f
(One drawback of type checking is dealing efficiently with a large number of false warn\255) h
10200 -4050 M
(ings on fields that disobey conventions but have been determined to be correct. There is a) h
10200 -5250 M
(tendency to define the checking rules so generally that the effectiveness of type checking) h
10200 -6450 M
(is reduced for the sake of holding the number of warnings to a manageable size.) h
10200 -7650 M
(TYPCHK_DIFF.COM was created to ease the comparison of two TYPCHK files with) h
10200 -8850 M
(warnings embedded. You input the latest TYPCHK file and can compare against a previ\255) h
10200 -10050 M
(ous TYPCHK file of a known state. Using the specialized DIFF provided by this command) h
10200 -11250 M
(file, you can easily detect if new warnings have been found in a changed version of the) h
10200 -12450 M
(module or if warnings for real problems have been eliminated by a change. Thus keeping) h
10200 -13650 M
(previous TYPCHK files around during editing sessions becomes useful. ) h
10200 -15450 M
(In the example below some changes were made to the module EZDRIVER.MAR. You will) h
10200 -16650 M
(notice that multiple versions of EZDRIVER.TYPCHK exist. Before any editing of) h
10200 -17850 M
(EZDRIVER took place, EZDRIVER.TYPCHK.1 was re\255generated from the previous Open\255) h
10200 -19050 M
(VMS version of the driver which was in a known state \(all of it's warnings had been veri\255) h
10200 -20250 M
(fied\). As each version of the driver is created, the TYPCHK file for the most recent version) h
10200 -21450 M
(is checked against the previous version. In the example below, it is assumed that the) h
10200 -22650 M
(TYPCHK command file was run on the latest version of the EZDRIVER to produce) h
10200 -23850 M
(EZDRIVER.TYPCHK;12. The latest version, EZDRIVER.TYPCHK.12, is compared) h
10200 -25050 M
(against an older version 11. Once the NEW TYPCHK file is input, the command file dis\255) h
10200 -26250 M
(plays all previous versions of EZDRIVER.TYPCHK with the size and creation date/time) h
10200 -27450 M
(to simply the selection of an earlier version of the TYPCHK file. ) h
10200 -29250 M
(Depending on the degree of change, TYPCHK_DIFFing the final version against original) h
10200 -30450 M
(version of the module, would assure that no final edits have introduced errors detectable) h
10200 -31650 M
(from newly generated warnings. ) h
10200 -33450 M
10200 -34900 M
/Courier-ISOLatin1 $
/Courier & P
/Courier-ISOLatin1 F 800 o f
($ @typchk_diff) h
10200 -35900 M
10200 -36900 M
(DIFF New and Old .TYPCHK files to determine if warnings eliminated or introduced.) h
10200 -37900 M
10200 -38900 M
10200 -39900 M
(Enter NEW  .TYPCHK File : ezdriver) h
10200 -40900 M
10200 -41900 M
(1\) DUA0:[HOULIHAN]EZDRIVER.TYPCHK;11    994     17\255MAR\2551991 11:32:14.08) h
10200 -42900 M
(2\) DUA0:[HOULIHAN]EZDRIVER.TYPCHK;10    1018    17\255MAR\2551991 08:50:12.87) h
10200 -43900 M
(3\) DUA0:[HOULIHAN]EZDRIVER.TYPCHK;9     1002    16\255MAR\2551991 16:17:43.10) h
10200 -44900 M
(4\) DUA0:[HOULIHAN]EZDRIVER.TYPCHK;8     996     16\255MAR\2551991 15:17:40.71) h
10200 -45900 M
(5\) DUA0:[HOULIHAN]EZDRIVER.TYPCHK;7     996     16\255MAR\2551991 14:17:39.19) h
10200 -46900 M
(6\) DUA0:[HOULIHAN]EZDRIVER.TYPCHK;6     995     16\255MAR\2551991 13:17:37.69) h
10200 -47900 M
(7\) DUA0:[HOULIHAN]EZDRIVER.TYPCHK;5     996     16\255MAR\2551991 12:17:36.14) h
10200 -48900 M
(8\) DUA0:[HOULIHAN]EZDRIVER.TYPCHK;4     996     16\255MAR\2551991 11:17:34.44) h
10200 -49900 M
(9\) DUA0:[HOULIHAN]EZDRIVER.TYPCHK;3     996     16\255MAR\2551991 10:17:32.48) h
10200 -50900 M
(10\) DUA0:[HOULIHAN]EZDRIVER.TYPCHK;2    996     15\255MAR\2551991 12:17:30.50) h
10200 -51900 M
(11\) DUA0:[HOULIHAN]EZDRIVER.TYPCHK;1    993     15\255MAR\2551991 11:17:26.72) h
10200 -52900 M
10200 -53900 M
10200 -54900 M
(Enter OLD .TYPCHK File or List Number [ DUA0:[HOULIHAN]EZDRIVER.TYPCHK;11 ]: ) h
10200 -55900 M
10200 -56900 M
-5400 14900 T

showpage
$P e

%%Page: 4-2 14
/$P a D
g N
0 79200 T
5400 -75600 T
N
0 G
300 -975 M
39655 -975 M
/AvantGarde-Book-ISOLatin1 $
/AvantGarde-Book & P
/AvantGarde-Book-ISOLatin1 F 900 o f
(       ) h
( TYPCHK_DIFF.COM) h
(  ) h
/AvantGarde-Demi-ISOLatin1 $
/AvantGarde-Demi & P
/AvantGarde-Demi-ISOLatin1 F 900 o f
( ) h
(4\2552) h
300 -2254 M
-5400 75600 T

5400 -4200 T
N
0 G
10200 -900 M
/Courier-ISOLatin1 $
/Courier & P
/Courier-ISOLatin1 F 800 o f
(Comparing New File:  DUA0:[HOULIHAN]EZDRIVER.TYPCHK;12) h
10200 -1900 M
(       to Old File:  DUA0:[HOULIHAN]EZDRIVER.TYPCHK;11) h
10200 -2900 M
10200 -3900 M
10200 -4900 M
(WARNINGs are identified by FILENAME of filespec and the line number at end of each) h
10200 -5900 M
(warning line.) h
10200 -6900 M
10200 -7900 M
10200 -8900 M
(************) h
10200 -9900 M
(File DUA0:[HOULIHAN]EZDRIVER_TYPCHK_12.TYPCHK_TEMP1;1) h
10200 -10900 M
(                                               MOVL      R1,XMTPTE\(R6\)) h
44760 -10900 M
50520 -10900 M
10200 -11900 M
(WARN: XMTPTE\(R6\) not LONG,ADDRESS field \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255^            Line: 541) h
10200 -12900 M
(******) h
10200 -13900 M
(File DUA0:[HOULIHAN]EZDRIVER_TYPCHK_11.TYPCHK_TEMP1;1) h
10200 -14900 M
(************) h
10200 -15900 M
(************) h
10200 -16900 M
(File DUA0:[HOULIHAN]EZDRIVER_TYPCHK_12.TYPCHK_TEMP1;1) h
10200 -17900 M
(******) h
10200 -18900 M
(File DUA0:[HOULIHAN]EZDRIVER_TYPCHK_11.TYPCHK_TEMP1;1) h
10200 -19900 M
(                                               CMPW      #^XDFFF,VCRP$L_LAN_LENERR\(R2\)) h
10200 -20900 M
(WARN: VCRP$L_LAN_LENERR\(R2\) not WORD field \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255^  Line: 5241) h
10200 -21900 M
(************) h
10200 -22900 M
10200 -23900 M
(Number of difference sections found: 2) h
10200 -24900 M
(Number of different warnings found: 2) h
10200 -25900 M
10200 -26900 M
10200 -28250 M
/NewCenturySchlbk-Roman-ISOLatin1 $
/NewCenturySchlbk-Roman & P
/NewCenturySchlbk-Roman-ISOLatin1 F 1000 o f
(The inputs to the TYPCHK_DIFF comm file are straightforward. The filespec terminology) h
10200 -29450 M
(used in this section is the standard OpenVMS filespec, ie. ) h
/NewCenturySchlbk-Italic-ISOLatin1 $
/NewCenturySchlbk-Italic & P
/NewCenturySchlbk-Italic-ISOLatin1 F 1000 o f
(filename.extension;version. ) h
/NewCenturySchlbk-Roman-ISOLatin1 F 1000 o f
(The) h
10200 -30650 M
(first input is the most recent \(or NEW\) TYPCHK file that you want DIFFed. Notice in the) h
10200 -31850 M
(preceding example, that the .TYPCHK file extension is provided for you if none is speci\255) h
10200 -33050 M
(fied. Next, a list of previous TYPCHK versions by the same filename are displayed if any) h
10200 -34250 M
(exist. You may then choose from this list by entering a listing number or selecting the) h
10200 -35450 M
(default which is the previous version of the TYPCHK file. You can also input an entirely) h
10200 -36650 M
(different filespec for the OLD TYPCHK file at this point if so desired. The command file) h
10200 -37850 M
(then tells you which files are being compared and then prints the warning differences be\255) h
10200 -39050 M
(tween the two versions.) h
10200 -40850 M
(Note that between versions 12 and 11, many lines of code where added, a simple DIFF of) h
10200 -42050 M
(the TYPCHK files would have produced many differences as line numbers are all differ\255) h
10200 -43250 M
(ent. However the TYPCHK_DIFF command file only compares the text of the warning) h
10200 -44450 M
(and the instruction pointed at by the warning \(minus any text before the opcode and in) h
10200 -45650 M
(any instruction comment\). ) h
10200 -47450 M
(TYPCHK_DIFF uses the following scratch files to accomplish it's task: ) h
10500 -49250 M
/Symbol F 1000 o f
(\267) h
12000 -49250 M
/NewCenturySchlbk-Roman-ISOLatin1 F 1000 o f
(new_typchk_file.TYPCHK_NTEMP) h
10500 -51050 M
/Symbol F 1000 o f
(\267) h
12000 -51050 M
/NewCenturySchlbk-Roman-ISOLatin1 F 1000 o f
(new_typchk_file.TYPCHK_NTEMP1) h
10500 -52850 M
/Symbol F 1000 o f
(\267) h
12000 -52850 M
/NewCenturySchlbk-Roman-ISOLatin1 F 1000 o f
(new_typchk_file.TYPCHK_TEMP2) h
10500 -54650 M
/Symbol F 1000 o f
(\267) h
12000 -54650 M
/NewCenturySchlbk-Roman-ISOLatin1 F 1000 o f
(old_typchk_file.TYPCHK_OTEMP) h
10500 -56450 M
/Symbol F 1000 o f
(\267) h
12000 -56450 M
/NewCenturySchlbk-Roman-ISOLatin1 F 1000 o f
(old_typchk_file.TYPCHK_OTEMP1) h
10200 -58450 M
(These files are all cleaned up on completion. The filenames for these scratch files,) h
10200 -59650 M
(new_typchk_file and old_typchk_file, refer to the two TYPCHK files that are being com\255) h
10200 -60850 M
(pared and consist of the filename, extension and version number for the TYPCHK file as) h
10200 -62050 M
(one string separated by underscores. In the preceding example, the filename of the) h
10200 -63250 M
(filespec reported in the DIFF\255like output identifies the TYPCHK file that contains the) h
10200 -64450 M
(warning \(ie. EZDRIVER_TYPCHK_12 \). Note that new_typchk_file and old_typchk_file) h
10200 -65650 M
(can be the same if the same filename, extension and version are compared in two differ\255) h
10200 -66850 M
(ent directories. In this case the new_typchk_file can be identified by the file extension of) h
10200 -68050 M
(TYPCHK_NTEMP1 and old_typchk_file by the file extension of TYPCHK_OTEMP1. ) h
-5400 4200 T

showpage
$P e

%%Page: 4-3 15
/$P a D
g N
0 79200 T
5400 -75600 T
N
0 G
300 -975 M
39655 -975 M
/AvantGarde-Book-ISOLatin1 $
/AvantGarde-Book & P
/AvantGarde-Book-ISOLatin1 F 900 o f
(       ) h
( TYPCHK_DIFF.COM) h
(  ) h
/AvantGarde-Demi-ISOLatin1 $
/AvantGarde-Demi & P
/AvantGarde-Demi-ISOLatin1 F 900 o f
( ) h
(4\2553) h
300 -2254 M
-5400 75600 T

5400 -4200 T
N
0 G
10200 -1050 M
/NewCenturySchlbk-Roman-ISOLatin1 $
/NewCenturySchlbk-Roman & P
/NewCenturySchlbk-Roman-ISOLatin1 F 1000 o f
(An examination of the DIFF\255like output in the preceding example reveals that a new) h
10200 -2250 M
(warning has been introduced in version 12 by an additional reference using the local sym\255) h
10200 -3450 M
(bol XMTPTE. Also a warning has been eliminated in the most recent version concerning) h
10200 -4650 M
(the incorrect use of a longword field, VCRP$L_LAN_LENERR, in a compare word instruc\255) h
10200 -5850 M
(tion which was replaced by the intended word field. Note that at the end of each "WARN:") h
10200 -7050 M
(line in the DIFF\255like output is the line number of this warning from the TYPCHK listing) h
10200 -8250 M
(file identified by the filename of the previous filespec.) h
10200 -10050 M
(If the number of differences becomes too large then you can send the warning differences) h
10200 -11250 M
(to a text file by merely setting the P1 parameter to any text string on the TYPCHK_DIFF) h
10200 -12450 M
(command file invocation. In the example below, P1 is set to "save" to trigger saving of the) h
10200 -13650 M
(DIFFs in a file. The warning differences are saved in the current default directory in a file) h
10200 -14850 M
(whose filename is the same as the filename of the NEW TYPCHK file specified and whose) h
10200 -16050 M
(extension is .TYPCHK_DIFF \(ie. EZDRIVER.TYPCHK_DIFF in the following example\).) h
10200 -17250 M
(Note that a list number is used for the OLD TYPCHK file question which in this case) h
10200 -18450 M
(merely selects the default filespec.) h
10200 -19900 M
10200 -20900 M
10200 -21900 M
/Courier-ISOLatin1 $
/Courier & P
/Courier-ISOLatin1 F 800 o f
($ @typchk_diff  save) h
10200 -22900 M
10200 -23900 M
(DIFF New and Old .TYPCHK files to determine if warnings eliminated or introduced.) h
10200 -24900 M
10200 -25900 M
10200 -26900 M
(Enter NEW  .TYPCHK File : ezdriver) h
10200 -27900 M
10200 -28900 M
(1\) DUA0:[HOULIHAN]EZDRIVER.TYPCHK;11    994     17\255MAR\2551991 11:32:14.08) h
10200 -29900 M
(2\) DUA0:[HOULIHAN]EZDRIVER.TYPCHK;10    1018    17\255MAR\2551991 08:50:12.87) h
10200 -30900 M
(3\) DUA0:[HOULIHAN]EZDRIVER.TYPCHK;9     1002    16\255MAR\2551991 16:17:43.10) h
10200 -31900 M
(4\) DUA0:[HOULIHAN]EZDRIVER.TYPCHK;8     996     16\255MAR\2551991 15:17:40.71) h
10200 -32900 M
(5\) DUA0:[HOULIHAN]EZDRIVER.TYPCHK;7     996     16\255MAR\2551991 14:17:39.19) h
10200 -33900 M
(6\) DUA0:[HOULIHAN]EZDRIVER.TYPCHK;6     995     16\255MAR\2551991 13:17:37.69) h
10200 -34900 M
(7\) DUA0:[HOULIHAN]EZDRIVER.TYPCHK;5     996     16\255MAR\2551991 12:17:36.14) h
10200 -35900 M
(8\) DUA0:[HOULIHAN]EZDRIVER.TYPCHK;4     996     16\255MAR\2551991 11:17:34.44) h
10200 -36900 M
(9\) DUA0:[HOULIHAN]EZDRIVER.TYPCHK;3     996     16\255MAR\2551991 10:17:32.48) h
10200 -37900 M
(10\) DUA0:[HOULIHAN]EZDRIVER.TYPCHK;2    996     15\255MAR\2551991 12:17:30.50) h
10200 -38900 M
(11\) DUA0:[HOULIHAN]EZDRIVER.TYPCHK;1    993     15\255MAR\2551991 11:17:26.72) h
10200 -39900 M
10200 -40900 M
(Enter OLD .TYPCHK File or List Number [ DUA0:[HOULIHAN]EZDRIVER.TYPCHK;11 ]: 1) h
10200 -41900 M
10200 -42900 M
10200 -43900 M
(Comparing New File:  DUA0:[HOULIHAN]EZDRIVER.TYPCHK;12) h
10200 -44900 M
(       to Old File:  DUA0:[HOULIHAN]EZDRIVER.TYPCHK;11) h
10200 -45900 M
10200 -46900 M
10200 -47900 M
(DIFFs being placed in file: EZDRIVER.TYPCHK_DIFF) h
10200 -48900 M
10200 -49900 M
(SAVOIE\255>ty ezdriver.typchk_diff) h
10200 -50900 M
10200 -51900 M
15960 -51900 M
(TYPCHK_DIFF \255 TYPCHK files differences command file output.) h
10200 -52900 M
10200 -53900 M
10200 -54900 M
(Comparing New File:  DUA0:[HOULIHAN]EZDRIVER.TYPCHK;12) h
10200 -55900 M
(       to Old File:  DUA0:[HOULIHAN]EZDRIVER.TYPCHK;11) h
10200 -56900 M
10200 -57900 M
10200 -58900 M
(WARNINGs are identified by FILENAME of filespec and the line number at end of each) h
10200 -59900 M
(warning line.) h
10200 -60900 M
10200 -61900 M
10200 -62900 M
(************) h
10200 -63900 M
(File DUA0:[HOULIHAN]EZDRIVER_TYPCHK_12.TYPCHK_TEMP1;1) h
10200 -64900 M
(                                               MOVL      R1,XMTPTE\(R6\)) h
44760 -64900 M
50520 -64900 M
10200 -65900 M
(WARN: XMTPTE\(R6\) not LONG,ADDRESS field \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255^            Line: 541) h
10200 -66900 M
(******) h
10200 -67900 M
(File DUA0:[HOULIHAN]EZDRIVER_TYPCHK_11.TYPCHK_TEMP1;1) h
-5400 4200 T

showpage
$P e

%%Page: 4-4 16
/$P a D
g N
0 79200 T
5400 -75600 T
N
0 G
300 -975 M
39655 -975 M
/AvantGarde-Book-ISOLatin1 $
/AvantGarde-Book & P
/AvantGarde-Book-ISOLatin1 F 900 o f
(       ) h
( TYPCHK_DIFF.COM) h
(  ) h
/AvantGarde-Demi-ISOLatin1 $
/AvantGarde-Demi & P
/AvantGarde-Demi-ISOLatin1 F 900 o f
( ) h
(4\2554) h
300 -2254 M
-5400 75600 T

5400 -4200 T
N
0 G
10200 -900 M
/Courier-ISOLatin1 $
/Courier & P
/Courier-ISOLatin1 F 800 o f
(************) h
10200 -1900 M
(************) h
10200 -2900 M
(File DUA0:[HOULIHAN]EZDRIVER_TYPCHK_12.TYPCHK_TEMP1;1) h
10200 -3900 M
(******) h
10200 -4900 M
(File DUA0:[HOULIHAN]EZDRIVER_TYPCHK_11.TYPCHK_TEMP1;1) h
10200 -5900 M
(                                               CMPW      #^XDFFF,VCRP$L_LAN_LENERR\(R2\)) h
10200 -6900 M
(WARN: VCRP$L_LAN_LENERR\(R2\) not WORD field \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255^  Line: 5241) h
10200 -7900 M
(************) h
10200 -8900 M
10200 -9900 M
(Number of difference sections found: 2) h
10200 -10900 M
(Number of different warnings found: 2) h
10200 -11900 M
10200 -12900 M
($) h
-5400 4200 T

showpage
$P e

%%Page: 5-1 17
/$P a D
g N
0 79200 T
N
5778 -14414 M
57222 -14414 L
S
0.00 G J
R
S
50 w
0 c
0 j
2 i
0.00 G k
R
N

5400 -75600 T
N
0 G
300 -975 M
42762 -975 M
/AvantGarde-Book-ISOLatin1 $
/AvantGarde-Book & P
/AvantGarde-Book-ISOLatin1 F 900 o f
(       ) h
( WARNINGS) h
/AvantGarde-Demi-ISOLatin1 $
/AvantGarde-Demi & P
/AvantGarde-Demi-ISOLatin1 F 900 o f
(   ) h
(5\2551) h
300 -2254 M
-5400 75600 T

5400 -11500 T
N
0 G
39540 -1800 M
n 2.222 o f
(5) h
40660 -1800 M
( WARNINGS) h
-5400 11500 T

5400 -14900 T
N
0 G
10200 -1050 M
10200 -2850 M
/NewCenturySchlbk-Roman-ISOLatin1 $
/NewCenturySchlbk-Roman & P
/NewCenturySchlbk-Roman-ISOLatin1 F 1000 o f
(This section describes all the warnings that the Type Checker can issue. The variable) h
10200 -4050 M
(ARGUMENT in the messages below is the text of the argument in question from the list\255) h
10200 -5250 M
(ing file. The following warnings are produced by the Type Checker:) h
10200 -7050 M
10500 -8850 M
/Symbol F 1000 o f
(\267) h
12000 -8850 M
/NewCenturySchlbk-Roman-ISOLatin1 F 1000 o f
(ARGUMENT not used in XXXX addressing mode) h
12000 -10650 M
(\002) h
13500 -10650 M
(The argument is not used in the expected addressing mode, XXXX. The only cur\255) h
13500 -11850 M
(rently defined addressing mode is LITERAL. This warning results from rules sup\255) h
13500 -13050 M
(plied by the DEFINE_TYPE_MODE statement. Currently certain constant data) h
13500 -14250 M
(types must be used in literal addressing mode. This warning is mainly intended to) h
13500 -15450 M
(catch missing #\255signs. Check that the argument in question is a valid use of a con\255) h
13500 -16650 M
(stant data type field in a non\255literal context. ) h
10500 -18450 M
/Symbol F 1000 o f
(\267) h
12000 -18450 M
/NewCenturySchlbk-Roman-ISOLatin1 F 1000 o f
(ARGUMENT unexpected use of XXXX addressing mode) h
12000 -20250 M
(\002) h
13500 -20250 M
(This argument is used with the unexpected addressing mode, XXXX. The only ad\255) h
13500 -21450 M
(dressing mode currently defined is LITERAL. This warning is used to flag literals) h
13500 -22650 M
(being used as the address to read or write information and is intended to catch) h
13500 -23850 M
(situations where an address argument and a literal argument have been switched.) h
13500 -25050 M
(This warning is produced by definitions established with the) h
13500 -26250 M
(DEFINE_TYPE_MODE statement. Check that the argument in question is a valid) h
13500 -27450 M
(use of a literal as an address argument.) h
10500 -29250 M
/Symbol F 1000 o f
(\267) h
12000 -29250 M
/NewCenturySchlbk-Roman-ISOLatin1 F 1000 o f
(ARGUMENT is Integer not used as LITERAL ) h
12000 -31050 M
(\002) h
13500 -31050 M
(The argument is an integer with no #\255sign or register. Integers appearing by them\255) h
13500 -32250 M
(selves are usually errors and this is meant to catch missing #\255signs or $\255signs on) h
13500 -33450 M
(labels \(ie. where 10 should be the label 10$ in the following instruction            ) h
13500 -34650 M
("BBC     #BDB$V_DAT,BDB$W_ADDR\(R5\),10"\). This warning is controlled by the) h
13500 -35850 M
(the FLAG_INTEGERS option. Check that the integer appearing by itself is in\255) h
13500 -37050 M
(tended.) h
10500 -38850 M
/Symbol F 1000 o f
(\267) h
12000 -38850 M
/NewCenturySchlbk-Roman-ISOLatin1 F 1000 o f
(ARGUMENT using XXXX indexing on non\255XXXX field) h
39000 -38850 M
44760 -38850 M
50520 -38850 M
12000 -40050 M
(\( ie.  WARN:  @#^MMG$GL_SPTBASE[R0] using BYTE indexing on non\255BYTE Field\)) h
12000 -41850 M
(\002) h
13500 -41850 M
(The data size for indexing on this argument does not match the size implied by the) h
13500 -43050 M
(data type embedded in the field name. This warning is controlled by the) h
13500 -44250 M
(FLAG_INDEXING_MISMATCHES option. The warning provides the type of in\255) h
13500 -45450 M
(dexing being done, XXXX, which is BYTE, WORD, LONG, QUAD or OCTA. Verify) h
13500 -46650 M
(the data size of the indexing is intended for this field. ) h
10500 -48450 M
/Symbol F 1000 o f
(\267) h
12000 -48450 M
/NewCenturySchlbk-Roman-ISOLatin1 F 1000 o f
(ARGUMENT using XXXX indexing on Unknown Data Type field) h
12000 -50250 M
(\002) h
13500 -50250 M
(The argument is using indexing but no embedded data type exists to check against) h
13500 -51450 M
(the type of indexing being performed \( ie.  \(R0\)[R3] \). This warning is controlled by) h
13500 -52650 M
(the FLAG_NODT_INDEXING option. Verify that type of indexing being per\255) h
13500 -53850 M
(formed, XXXX, is intended for this argument. ) h
10200 -55850 M
10200 -57650 M
-5400 14900 T

showpage
$P e

%%Page: 5-2 18
/$P a D
g N
0 79200 T
5400 -75600 T
N
0 G
300 -975 M
42924 -975 M
/AvantGarde-Book-ISOLatin1 $
/AvantGarde-Book & P
/AvantGarde-Book-ISOLatin1 F 900 o f
(       ) h
( WARNINGS) h
(  ) h
/AvantGarde-Demi-ISOLatin1 $
/AvantGarde-Demi & P
/AvantGarde-Demi-ISOLatin1 F 900 o f
( ) h
(5\2552) h
300 -2254 M
-5400 75600 T

5400 -4200 T
N
0 G
10500 -1050 M
/Symbol F 1000 o f
(\267) h
12000 -1050 M
/NewCenturySchlbk-Roman-ISOLatin1 $
/NewCenturySchlbk-Roman & P
/NewCenturySchlbk-Roman-ISOLatin1 F 1000 o f
(ARGUMENT not XXXX field) h
12000 -2850 M
(\002) h
13500 -2850 M
(The argument is not the expected data type specified, XXXX. Note XXXX may be) h
13500 -4050 M
(more than one data type. This warning is designed to catch data type mismatches.) h
13500 -5250 M
(The warnings result from definitions established with the DEFINE_OPCODE) h
13500 -6450 M
(statement. Note that MACRO ASSUME statements can reduce the frequency of) h
13500 -7650 M
(these data type mismatch warnings, see the ASSUME_SUPPRESS option. Check) h
13500 -8850 M
(that the data type mismatch of the argument is not causing unintended loss or) h
13500 -10050 M
(modification of bits or unintended use or neglect of bits.) h
10500 -11850 M
/Symbol F 1000 o f
(\267) h
12000 -11850 M
/NewCenturySchlbk-Roman-ISOLatin1 F 1000 o f
(ARGUMENT is literal used as address for write) h
12000 -13650 M
(\002) h
13500 -13650 M
(Argument is a literal being used as address of a write. This warning is controlled) h
13500 -14850 M
(by the FLAG_LITERAL_WRITE_ADDRS option. It is normally a bug if a literal is) h
13500 -16050 M
(being used as the address of a write. Write arguments are defined in the) h
13500 -17250 M
(DEFINE_OPCODE statement by "W"rite or "M"odify suffix as an argument's ac\255) h
13500 -18450 M
(cess type. Check that the literal is intended to be used as the address for a write. ) h
10500 -20250 M
/Symbol F 1000 o f
(\267) h
12000 -20250 M
/NewCenturySchlbk-Roman-ISOLatin1 F 1000 o f
(OPCODE instruction, R0\255Rx destroyed) h
33240 -20250 M
39000 -20250 M
44760 -20250 M
50520 -20250 M
12000 -21450 M
(\(ie.   WARN:  MOVC5 instruction, R0\255R5 destroyed \)) h
12000 -23250 M
(\002) h
13500 -23250 M
(This warning flags all opcodes that implicitly destroy or modify registers other the) h
13500 -24450 M
(AP, FP, SP or PC. This warning is output only if the) h
13500 -25650 M
(FLAG_IMPLICIT_REGISTER_USE option is selected. The OPCODE variable is) h
13500 -26850 M
(the opcode involved and the destroyed registers are also named in the warning.) h
13500 -28050 M
(Check that these registers are properly saved and restored over this instruction.) h
13500 -29250 M
(Remember that useful information is sometimes returned in these registers or the) h
13500 -30450 M
(registers may just be scratch registers and so they need not always be saved and) h
13500 -31650 M
(restored.) h
10500 -33450 M
/Symbol F 1000 o f
(\267) h
12000 -33450 M
/NewCenturySchlbk-Roman-ISOLatin1 F 1000 o f
(OPCODE1 needed after OPCODE2 operation ?  ) h
39000 -33450 M
44760 -33450 M
50520 -33450 M
12000 -34650 M
(\(ie.  WARN:  BGTRU needed after CMPW operation ? \)) h
12000 -36450 M
(\002) h
13500 -36450 M
(This warning flags instances of the use of signed branch instructions after an op\255) h
13500 -37650 M
(eration on a unsigned byte or word field where an unsigned branch may be needed.) h
13500 -38850 M
(This warning is only issued if the FLAG_UNSIGNED_BRANCHES option is se\255) h
13500 -40050 M
(lected. OPCODE1 is the unsigned branch opcode that is potentially needed \(BG\255) h
13500 -41250 M
(TRU, BGEQU, BLEQU or BLSSU\) and OPCODE2 is the previous byte or word) h
13500 -42450 M
(opcode. Using OPCODE2, look back in the listing and locate the byte or word op\255) h
13500 -43650 M
(eration that set the VAX condition code and determine if the fields being tested are) h
13500 -44850 M
(unsigned. If unsigned then potentially OPCODE1 is intended.) h
10200 -46850 M
10200 -48650 M
-5400 4200 T

showpage
$P e

%%Page: 6-1 19
/$P a D
g N
0 79200 T
N
5778 -14414 M
57222 -14414 L
S
0.00 G J
R
S
50 w
0 c
0 j
2 i
0.00 G k
R
N

5400 -75600 T
N
0 G
300 -975 M
44255 -975 M
/AvantGarde-Book-ISOLatin1 $
/AvantGarde-Book & P
/AvantGarde-Book-ISOLatin1 F 900 o f
(       ) h
( ERRORS) h
/AvantGarde-Demi-ISOLatin1 $
/AvantGarde-Demi & P
/AvantGarde-Demi-ISOLatin1 F 900 o f
(   ) h
(6\2551) h
300 -2254 M
-5400 75600 T

5400 -11500 T
N
0 G
42980 -1800 M
n 2.222 o f
(6) h
44100 -1800 M
( ERRORS) h
-5400 11500 T

5400 -14900 T
N
0 G
10200 -1050 M
/NewCenturySchlbk-Roman-ISOLatin1 $
/NewCenturySchlbk-Roman & P
/NewCenturySchlbk-Roman-ISOLatin1 F 1000 o f
(The following errors can be produced by the TYPCHK command files:) h
10500 -2850 M
/Symbol F 1000 o f
(\267) h
12000 -2850 M
/NewCenturySchlbk-Roman-ISOLatin1 F 1000 o f
(Error \255 No Definition file \(TYPCHK.DEFINITIONS\) is in the local directory or in the) h
12000 -4050 M
(master directory \(see DCL symbol MASTER_LOC in TYPCHK.COM\), also logical) h
12000 -5250 M
(TYPCHK$DEFINITIONS is not defined.) h
12000 -7050 M
(\002) h
13500 -7050 M
(No TYPCHK Definition file can be found via the expected mechanisms. See the) h
13500 -8250 M
(TYPCHK.DEFINITIONS Section which describes these mechanisms.) h
10500 -10050 M
/Symbol F 1000 o f
(\267) h
12000 -10050 M
/NewCenturySchlbk-Roman-ISOLatin1 F 1000 o f
(Error \255 No such Address Mode Defined: XXXX) h
12000 -11850 M
(\002) h
13500 -11850 M
(An invalid addressing mode, XXXX, was used in a DEFINE_TYPE_MODE state\255) h
13500 -13050 M
(ment in the TYPCHK.DEFINITIONS file. The defined addressing modes are speci\255) h
13500 -14250 M
(fied in the TYPCHK.DEFINITIONS Section.) h
10500 -16050 M
/Symbol F 1000 o f
(\267) h
12000 -16050 M
/NewCenturySchlbk-Roman-ISOLatin1 F 1000 o f
(Error \255 No such Flag: XXXX) h
12000 -17850 M
(\002) h
13500 -17850 M
(An unknown option flag, XXXX, was used in a DEFINE_OPTION statement. The) h
13500 -19050 M
(existing option flags are defined in the TYPCHK.DEFINITIONS Section. Correct) h
13500 -20250 M
(the flag spelling and re\255run the type check.) h
10500 -22050 M
/Symbol F 1000 o f
(\267) h
12000 -22050 M
/NewCenturySchlbk-Roman-ISOLatin1 F 1000 o f
(Error \255 Unbalanced parentheses in a DEFINE_OPCODE statement in Definition File) h
12000 -23250 M
(encountered near line: XXXX) h
12000 -25050 M
(\002) h
13500 -25050 M
(The DEFINE_OPCODE statement allows multiple data types to be specified for a) h
13500 -26250 M
(given argument by enclosing them in parentheses. However these parentheses) h
13500 -27450 M
(cannot span multiple lines of the definition text file. If unbalanced parentheses are) h
13500 -28650 M
(detected then this message will print along with XXXX which is the line or the line) h
13500 -29850 M
(after the line containing the unbalanced parentheses.) h
10500 -31650 M
/Symbol F 1000 o f
(\267) h
12000 -31650 M
/NewCenturySchlbk-Roman-ISOLatin1 F 1000 o f
(Error \255 Invalid Argument Suffix: XXXX) h
12000 -33450 M
(\002) h
13500 -33450 M
(The DEFINE_OPCODE statement argument specified, XXXX, has an invalid suf\255) h
13500 -34650 M
(fix. The suffix can only be two characters, the first character is the access type and) h
13500 -35850 M
(the second character is the data size. The comments for the DEFINE_OPCODE) h
13500 -37050 M
(statement in the definition file describe the valid values for each character of the) h
13500 -38250 M
(suffix.) h
10500 -40050 M
/Symbol F 1000 o f
(\267) h
12000 -40050 M
/NewCenturySchlbk-Roman-ISOLatin1 F 1000 o f
(Error \255 for Opcode XXXX,  Data Type YYYY is not defined.) h
12000 -41850 M
(\002) h
13500 -41850 M
(The DEFINE_OPCODE statement for opcode XXXX is using an unknown data) h
13500 -43050 M
(type YYYY. Define the data type YYYY in a DEFINE_TYPE statement prior to the) h
13500 -44250 M
(DEFINE_OPCODE statement.) h
10500 -46050 M
/Symbol F 1000 o f
(\267) h
12000 -46050 M
/NewCenturySchlbk-Roman-ISOLatin1 F 1000 o f
(Error \255 No such Data Type: XXXX) h
12000 -47850 M
(\002) h
13500 -47850 M
(Data type XXXX was used in a DEFINE_TYPE_MODE statement before being de\255) h
13500 -49050 M
(fined. Define data type XXXX in a DEFINE_TYPE statement prior to the) h
13500 -50250 M
(DEFINE_TYPE_MODE statement.) h
10500 -52050 M
/Symbol F 1000 o f
(\267) h
12000 -52050 M
/NewCenturySchlbk-Roman-ISOLatin1 F 1000 o f
(Error \255 No such File: XXXX) h
12000 -53850 M
(\002) h
13500 -53850 M
(The specified file, XXXX, does not exist or cannot be accessed by you.) h
10200 -55850 M
10200 -57650 M
-5400 14900 T

showpage
$P e

%%Page: 6-2 20
/$P a D
g N
0 79200 T
5400 -75600 T
N
0 G
300 -975 M
44417 -975 M
/AvantGarde-Book-ISOLatin1 $
/AvantGarde-Book & P
/AvantGarde-Book-ISOLatin1 F 900 o f
(       ) h
( ERRORS) h
(  ) h
/AvantGarde-Demi-ISOLatin1 $
/AvantGarde-Demi & P
/AvantGarde-Demi-ISOLatin1 F 900 o f
( ) h
(6\2552) h
300 -2254 M
-5400 75600 T

5400 -4200 T
N
0 G
10500 -1050 M
/Symbol F 1000 o f
(\267) h
12000 -1050 M
/NewCenturySchlbk-Roman-ISOLatin1 $
/NewCenturySchlbk-Roman & P
/NewCenturySchlbk-Roman-ISOLatin1 F 1000 o f
(Error \255 Not a Macro Listing file: XXXX) h
12000 -2850 M
(\002) h
13500 -2850 M
(The specified file, XXXX, is not a VAX MACRO listing file or a MACRO Compiler) h
13500 -4050 M
(listing file. This is determined by examining the first line of the listing file to see if) h
13500 -5250 M
(the listing file was produced by a MACRO compiler or assembler. ) h
10500 -7050 M
/Symbol F 1000 o f
(\267) h
12000 -7050 M
/NewCenturySchlbk-Roman-ISOLatin1 F 1000 o f
(Error \255 No such List Number: XXXX) h
12000 -8850 M
(\002) h
13500 -8850 M
(This error is issued only by the TYPCHK_DIFF command file when an invalid list) h
13500 -10050 M
(number XXXX is entered. The list number is an index into a displayed list of old) h
13500 -11250 M
(TYPCHK files. Re\255enter a valid list number from the list displayed. ) h
10200 -12646 M
-5400 4200 T

showpage
$P e

%%Trailer
$D restore
end % DEC_WRITE_dict
%%Pages: 20
%%DocumentFonts: AvantGarde-Demi
%%+ AvantGarde-Book
%%+ NewCenturySchlbk-Roman
%%+ Symbol
%%+ NewCenturySchlbk-Italic
%%+ Courier
