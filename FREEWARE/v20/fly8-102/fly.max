## The following defines a macro for the Ctrl-a key. This macro is
## automatically executed at program startup.

def ctrl a
	u t 2			## FA16 HUD
	F5			## get closer to the HUD
	u r 1 d n a 0 C Esc	## full radar data
	u 2 0 A Esc		## no aural alarms
	u p l 1 c f s z S Esc	## fancy ladder.
	Esc o 1 s N Esc		## show smoke, no stall

## Example of button usage. Let us define the trigger (button 0) as the
## 'fire' function:

Def Btn 0	F1

## we should use the 'ndb=0' in the stick options so that this button
## will produce a repeating action, so you don't have to press/release
## for each shot. Now let us define the second button as the radar lock
## release:

Def Btn 1	Sp

## If we have 4 buttons then we can use them like this:

Def Btn 2	w		## select next weapon
Def Btn 3	f		## select radar acquisition mode

## If we have a 'hat' then we can use it for power management, like:

Def Btn 4	9		## power up
Def Btn 5	.		## goto AB power
Def Btn 6	3		## power down
Def Btn 7	0 +		## idle power + speed brakes
Def Rls 7	+		## release speed brakes

## Note how button 7 (hat left) engages the speed brakes on press but
## then retracts them on release. You must define this button to have
## a release function 'rel=7'. You may also want buttons 4,5 and 6 to
## have continuous operation, so the options used are: ':ndb=0456:rel=7'.

## In practice it is safe to define ALL buttons for 'release' action
## 'rel=01234567' since undefined keys will be ignores. However it is
## wasteful to make a key continuous ('ndb=...') which is not necessary.

## If you use the WCS-II then you cannot access the buttons (or hat). You
## program these on the WCS-II itself.
