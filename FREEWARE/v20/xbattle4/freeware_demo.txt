You can define XBATTLE symbol via FREEWARE_DEMO.COM procedure

  EXAMPLES

    Here are some example games to give an idea of  the variability of the
    parameters.  The  first example is a  simple symmetrical  game between
    "me" in black on my own display, and  a  white opponent on the display
    "cnsxk:0.0".    The troops will  be   rapidly  exhausted in this small
    skirmish.

      xbattle -black me -white cnsxk:0.0 -armies 4

    The  next example  adds bases,  which  will  produce a much  prolonged
    conflict involving long supply lines between the front and  the bases,

     much like  desert warfare.  One conflict in  this  battle represents a
    skirmish   like the entire  game  of  the  previous  example.  In this
    example black is playing on the display cnsxk:0.0, and white is on the
    system console.  Note that the extension ":0.0" can be omitted.

      xbattle -black cnsxk -white unix -armies 4 -bases 2

    The  next example  is a game  with militia scattered around initially,
    that  have  to race  to  occupy  the  towns  and  link up with   their
    compatriots before they can eliminate  the enemy.   This is a  dynamic
    scenario requiring tactical and strategic skill and fast reflexes.  In
    this example black is playing on  cnsxk:0.0  while white is playing on
    the system console of the remote machine thalamus.bu.edu.

      xbattle -black cnsxk -white thalamus.bu.edu -towns 2 -militia 2 -hills 7

    Here is a favorite around B.U.   where the land  is broken up  by many
    bodies  of water creating isolated islands,  and view  of the enemy is
    restricted  to   nearby   squares, resulting   in   lots of surprises.
    Paratroops can be   used  for reconnaisance by  launching  them   into
    unknown  sectors, and they  must  be  used  in conjunction with  heavy
    artillery barages for airborne assaults from one landmass to the next.
    In this example the color display will show cyan and  red teams, while
    the monochrome monitor will  show white and black  teams respectively.
    The decay  option prevents huge armies from  building up at the end of
    the game, and the -store option is used to store this game to the file
    "battle.xba".

      xbattle -cyanwhite thalamus:0.0 -redblack cnsxk -rbases 5 -sea 8 -guns 4
              -para 4 -horizon 2 -decay 3 -store xbattle.xba

    Now, the previous stored game  is  replayed to the original displays by
    repeating the original command line  except that -store  is changed to
    -replay.   This  is convenient  if  you   have command   line  editing
    facilities.

      xbattle -cyanwhite thalamus:0.0 -redblack cnsxk -rbases 5 -sea 8 -guns 4
              -para 4 -horizon -replay xbattle.xba

    With -replay, all arguments are actually  ignored except the displays,
    so you could achieve exactly the same result with the simpler command

      xbattle -black thalamus:0.0 -black cnsxk -replay

    where the   -black   argument  flags  the subsequent  argument    as a
    displayname,  but  is otherwise  ignored, i.e.  any  color  name would
    suffice.  The filename  for -replay  is omitted,  so that the  default
    file name "xbattle.xba" is used.

    The next example illustrates the use of the options  file, tribal.xbo,
    to set  up a  game  including,  decay, seas, farms,  militia, and many
    other options.

      xbattle -black me -white thalamus -options tribal.xbo

    Options files can also be read in individually for the two players, as
    in the following example...

      xbattle -options game.xbo -black me -white { -options weak.xbo } thalamus

    This results in a biased game where  both black and white  receive the
    options  defined   in game.xbo,   and  white   receives  some specific
    handicaps defined in  weak.xbo.   For example, weak.xbo could define 2
    rbases instead of 5, horizon of 1 instead of 2, and lower movement and
    fighting values.  Since these  options  overwrite existing options  in
    game.xbo, the command line  arguments   may NOT be typed in  arbitrary
    order,  because later options  overwrite  the  earlier options, so the
    global options must  be defined  before they are  overwritten  by  the
    specific options to the white team.
 

  OPTIONS

        [ -options  [<options file>]]
        [ -bases    <number of bases> 4 teams max.]
        [ -rbases   <number of randomly placed bases>]
        [ -armies   <size of initial armies> 4 teams max.]
        [ -militia  <density of random militia [1-10]>]
        [ -towns    <density of towns [1-10]>]
        [ -repeat   no argument- allows command repeat]
        [ -bound    no argument- allows multiple commands]
        [ -march    <delay between marches>]
        [ -erode    <time before erosion>]
        [ -farms    <rate of universal troop production [1-10]>]
        [ -decay    <rate of troop decay [1-10]>]
        [ -fight    <firepower for attack [1-10]>]
        [ -disrupt  no argument- stop movement under fire]
        [ -attack   no argument- attack synchronously with "a" key
        [ -guns     <range of artillery [1-10]>]
        [ -para     <range of paratroops [1-10]>]
        [ -hills    <steepness of hills [1-10]>]
        [ -forest   <thickness of forest [1-10]>]
        [ -sea      <amount of water on gameboard [1-10]>]
        [ -wrap     no argument- sets wrap-around mode]
        [ -seed     <random seed for hills, forest & militia>]
        [ -horizon  [<view range of enemy troops>]]
        [ -hidden   no argument- hides enemy command vectors]
        [ -map      no argument- map features as they appear]
        [ -basemap  no argument- map bases/towns as with terrain]
        [ -localmap no argument- map only local area]
        [ -dig      <cost of terrain digging>]
        [ -fill     <cost of terrain filling>]
        [ -build    <cost of base in full troopsquares>]
        [ -scuttle  no argument- allow base destruction]
        [ -nogrid   no argument- does not display a grid]
        [ -speed    <game speed [1-10]>]
        [ -square   <game square size in pixels>]
        [ -board    <game board size in squares>]
        [ -manpos   no argument- allows manual board placement]
        [ -area     no argument- display troop strength by area
        [ -hex      no argument- use hexagonal game squares
        [ -move     <speed of troop movement [1-10]>]
        [ -reserve  no argument- allow reserves ]
        [ -digin    <dig-in factor [1-10]>]
        [ -store    [<save file>]]
        [ -replay   [<save file>]]
        [ -edit     [<map file>]]
        [ -load     [<map file]]


  RUN-TIME_COMMAND_SUMMARY

    COMMANDS_IN_GAMEBOARD

       LEFT MOUSE:          toggle command vector to move troops
       MIDDLE MOUSE:          clear all and set new command vector
       RIGHT MOUSE:           repeat previous command (with -repeat)
       SHIFT-LEFT MOUSE:    march (with -march) fork march (with -hex)
       SHIFT-MIDDLE MOUSE:  force march (with -march) fork march (with -hex)
       SHIFT-RIGHT MOUSE:   paratroops (with -para)
       CONTROL-RIGHT MOUSE: artillery (with -guns)
       ctrl-'s':              pause game
       ctrl-'q':              resume game
       ctrl-'p':              save game state to map file
       'a':                   attack enemy square (-attack)
       'b':                   build base (-build)
       's':                   scuttle base (-scuttle)
       'f':                   fill terrain (-fill)
       'd':                   dig terrain (-dig)
       'p':                   paratroops (with -para)
       'g':                   artillery (with -guns)
       'z':                   cancel all movement
       {'0'-'9'}:             reserve (-reserve)

  RUN-TIME_COMMAND_SUMMARY

    COMMANDS_IN_TEXT_AREA

       CONTROL-c or CONTROL-q: quit the game
       CONTROL-w: quit game but watch others play on
       CONTROL-g: ring bell on all game displays
       ANY OTHER CHARACTER: append to message string

Sources are available under [.SRC] directory in XBATTLE4.ZIP file.

Patrick Moreau

pmoreau@cena.dgac.fr
moreau_P@decus.decus.fr
