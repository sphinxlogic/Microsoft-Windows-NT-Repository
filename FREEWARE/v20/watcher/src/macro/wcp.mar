

	.TITLE  WCP WCP
	.IDENT  \V1.7\

	.PSECT  $$$COPYRIGHT,NOWRT,NOEXE,  SHR,2

P.AAA:	.ASCII  \Copyright \<169>\ 1993, 1994 MadGoat Software.  All rights reserved.\
							   ;

	.PSECT  $OWN$,NOEXE,2

;COPYRIGHT
U.1:	.ADDRESS P.AAA					   ;
;SHOW_FAB
U.25:	.BLKB   80
;SHOW_RAB
U.26:	.BLKB   68

	.PSECT  $GLOBAL$,NOEXE,2

TRMQUE::.BLKB   8
EXCQUE::.BLKB   8
OVRQUE::.BLKB   8
GLOBALS::
	.BLKB   296
DEFAULTS::
	.BLKB   41
	.BLKB   3
CFG_CHANGED::
	.LONG   0					   ;
CFGFILE::
	.BLKB   8

	.PSECT  $PLIT$,NOWRT,NOEXE,2

P.AAC:	.ASCII  \0 00:05:00.00\<0><0><0>		   ;
P.AAB:	.LONG   17694733				   ;
	.ADDRESS P.AAC					   ;
P.AAE:	.ASCII  \0 00:25:00.00\<0><0><0>		   ;
P.AAD:	.LONG   17694733				   ;
	.ADDRESS P.AAE					   ;
P.AAG:	.ASCII  \0 00:30:00.00\<0><0><0>		   ;
P.AAF:	.LONG   17694733				   ;
	.ADDRESS P.AAG					   ;
P.AAI:	.ASCII  \WCP \					   ;
P.AAH:	.LONG   17694724				   ;
	.ADDRESS P.AAI					   ;
P.AAK:	.ASCII  \FILE\					   ;
P.AAJ:	.LONG   17694724				   ;
	.ADDRESS P.AAK					   ;
P.AAM:	.ASCII  \FILE\					   ;
P.AAL:	.LONG   17694724				   ;
	.ADDRESS P.AAM					   ;
P.AAO:	.ASCII  \WATCHER_CONFIG\<0><0>			   ;
P.AAN:	.LONG   17694734				   ;
	.ADDRESS P.AAO					   ;
P.AAQ:	.ASCII  \CMD\<0>				   ;
P.AAP:	.LONG   17694723				   ;
	.ADDRESS P.AAQ					   ;
P.AAS:	.ASCII  \CMD\<0>				   ;
P.AAR:	.LONG   17694723				   ;
	.ADDRESS P.AAS					   ;
P.AAU:	.ASCII  \WATCHER_CONFIG\<0><0>			   ;
P.AAT:	.LONG   17694734				   ;
	.ADDRESS P.AAU					   ;
P.AAW:	.ASCII  \SYS$DISK:[].WCFG\			   ;
P.AAV:	.LONG   17694736				   ;
	.ADDRESS P.AAW					   ;
P.AAY:	.ASCII  \WCP> \<0><0><0>			   ;
P.AAX:	.LONG   17694725				   ;
	.ADDRESS P.AAY					   ;
P.ABA:	.ASCII  \WCP> \<0><0><0>			   ;
P.AAZ:	.LONG   17694725				   ;
	.ADDRESS P.ABA					   ;

U.27=		    TRMQUE
U.28=		    EXCQUE
U.29=		    OVRQUE
	.EXTRN  GET_CMD, LOAD_CONFIG, SAVE_CONFIG, PARSE_TIMES, ASC_TO_PRV_OR, ASC_TO_OPC_OR, CVT_ASCTOID
	.EXTRN  PARSE_CFGFILE, LIB$GET_FOREIGN, LIB$CVT_DTB, LIB$GETJPI, WCP_CMD_CLD, WCP_CLD, WCP__RECNOTFOUND
	.EXTRN  WCP__IDERR, WCP__UICERR, WCP__NORDCFG, WCP__READCFG, WCP__NOWRTCFG, WCP__WROTECFG
	.EXTRN  CLI$_NOCOMD, WCP__NOOPNOUT, WCP__NOCONTACT, WCP__NOPRIV, SYS$BINTIM, STR$PREFIX, CLI$DCL_PARSE
	.EXTRN  CLI$PRESENT, CLI$_PRESENT, CLI$GET_VALUE, CLI$_NEGATED, STR$COPY_DX, STR$FREE1_DX
	.EXTRN  CLI$DISPATCH, LIB$FREE_VM

	.PSECT  $CODE$,NOWRT,2

U.2:
	.ENTRY  WCP, ^M<R2,R3,R4,R5,R6,R7,R8,R9,R10,R11>   ;WCP, Save R2,R3,R4,R5,R6,R7,R8,R9,R10,R11
	MOVAB   G^CLI$DCL_PARSE, R11			   ;CLI$DCL_PARSE, R11
	MOVAB   G^LIB$GET_FOREIGN, R10			   ;LIB$GET_FOREIGN, R10
	MOVAB   G^SYS$BINTIM, R9			   ;SYS$BINTIM, R9
	MOVAB   G^STR$FREE1_DX, R8			   ;STR$FREE1_DX, R8
	MOVAB   W^P.AAB, R7				   ;P.AAB, R7
	MOVAB   W^CFGFILE, R6				   ;CFGFILE, R6
	SUBL2   #32, SP					   ;#32, SP
	MOVAL   21$, (FP)				   ;21$, (FP)
	MOVL    #34471936, 24(SP)			   ;#34471936, CMD
	CLRL    28(SP)					   ;CMD+4
	MOVL    #34471936, 16(SP)			   ;#34471936, INPFIL
	CLRL    20(SP)					   ;INPFIL+4
	MOVL    #34471936, (R6)				   ;#34471936, CFGFILE
	CLRL    4(R6)					   ;CFGFILE+4
	MOVAB   -368(R6), R0				   ;Q, R0
	MOVL    R0, -368(R6)				   ;R0, Q
	MOVL    R0, -364(R6)				   ;R0, Q+4
	MOVAB   -360(R6), R0				   ;Q, R0
	MOVL    R0, -360(R6)				   ;R0, Q
	MOVL    R0, -356(R6)				   ;R0, Q+4
	MOVAB   -352(R6), R0				   ;Q, R0
	MOVL    R0, -352(R6)				   ;R0, Q
	MOVL    R0, -348(R6)				   ;R0, Q+4
	MOVC5   #0, (SP), #0, #296, -344(R6)		   ;#0, (SP), #0, #296, GLOBALS
	PUSHAB  -340(R6)				   ;GLOBALS+4
	PUSHL   R7					   ;R7
	CALLS   #2, (R9)				   ;#2, SYS$BINTIM
	MOVC3   #8, -340(R6), -56(R6)			   ;#8, GLOBALS+4, GLOBALS+288
	BISB2   #1, -328(R6)				   ;#1, GLOBALS+16
	MOVL    #1, -332(R6)				   ;#1, GLOBALS+12
	MOVC5   #0, (SP), #0, #41, -48(R6)		   ;#0, (SP), #0, #41, DEFAULTS
	PUSHAB  -40(R6)					   ;DEFAULTS+8
	PUSHAB  24(R7)					   ;P.AAD
	CALLS   #2, (R9)				   ;#2, SYS$BINTIM
	PUSHAB  -32(R6)					   ;DEFAULTS+16
	PUSHAB  48(R7)					   ;P.AAF
	CALLS   #2, (R9)				   ;#2, SYS$BINTIM
	BISB2   #44, -24(R6)				   ;#44, DEFAULTS+24
	MOVB    #31, -8(R6)				   ;#31, DEFAULTS+40
	PUSHAB  24(SP)					   ;CMD
	CALLS   #1, (R10)				   ;#1, LIB$GET_FOREIGN
	MOVL    R0, R2					   ;R0, STATUS
	BLBS    R2, 2$					   ;STATUS, 2$
1$:	BRW     6$					   ;6$
2$:	TSTW    24(SP)					   ;CMD
	BEQL    1$					   ;1$
	PUSHAB  60(R7)					   ;P.AAH
	PUSHAB  28(SP)					   ;CMD
	CALLS   #2, G^STR$PREFIX			   ;#2, STR$PREFIX
	PUSHL   R10					   ;R10
	PUSHL   R10					   ;R10
	PUSHAB  W^WCP_CMD_CLD				   ;WCP_CMD_CLD
	PUSHAB  36(SP)					   ;CMD
	CALLS   #4, (R11)				   ;#4, CLI$DCL_PARSE
	PUSHAB  72(R7)					   ;P.AAJ
	CALLS   #1, G^CLI$PRESENT			   ;#1, CLI$PRESENT
	MOVL    R0, R2					   ;R0, STATUS
	CMPL    R2, #CLI$_PRESENT			   ;STATUS, #CLI$_PRESENT
	BNEQ    3$					   ;3$
	PUSHAB  16(SP)					   ;INPFIL
	PUSHAB  84(R7)					   ;P.AAL
	CALLS   #2, G^CLI$GET_VALUE			   ;#2, CLI$GET_VALUE
	BRB     4$					   ;4$
3$:	CMPL    R2, #CLI$_NEGATED			   ;STATUS, #CLI$_NEGATED
	BEQL    4$					   ;4$
	PUSHAB  108(R7)					   ;P.AAN
	PUSHAB  20(SP)					   ;INPFIL
	CALLS   #2, G^STR$COPY_DX			   ;#2, STR$COPY_DX
4$:	PUSHAB  120(R7)					   ;P.AAP
	CALLS   #1, G^CLI$PRESENT			   ;#1, CLI$PRESENT
	CMPL    R0, #CLI$_PRESENT			   ;R0, #CLI$_PRESENT
	BNEQ    5$					   ;5$
	PUSHAB  24(SP)					   ;CMD
	PUSHAB  132(R7)					   ;P.AAR
	CALLS   #2, G^CLI$GET_VALUE			   ;#2, CLI$GET_VALUE
	BRB     7$					   ;7$
5$:	PUSHAB  24(SP)					   ;CMD
	CALLS   #1, (R8)				   ;#1, STR$FREE1_DX
	BRB     7$					   ;7$
6$:	PUSHAB  156(R7)					   ;P.AAT
	PUSHAB  20(SP)					   ;INPFIL
	CALLS   #2, G^STR$COPY_DX			   ;#2, STR$COPY_DX
7$:	TSTW    16(SP)					   ;INPFIL
	BEQL    10$					   ;10$
	PUSHL   R6					   ;R6
	PUSHAB  180(R7)					   ;P.AAV
	PUSHAB  24(SP)					   ;INPFIL
	CALLS   #3, W^LOAD_CONFIG			   ;#3, LOAD_CONFIG
	MOVL    R0, R2					   ;R0, STATUS
	BLBS    R2, 8$					   ;STATUS, 8$
	PUSHL   R2					   ;STATUS
	PUSHAB  20(SP)					   ;INPFIL
	PUSHL   #1					   ;#1
	PUSHL   #WCP__NORDCFG				   ;#WCP__NORDCFG
	CALLS   #4, G^LIB$SIGNAL			   ;#4, LIB$SIGNAL
	BRB     9$					   ;9$
8$:	PUSHL   R6					   ;R6
	PUSHL   #1					   ;#1
	PUSHL   #WCP__READCFG				   ;#WCP__READCFG
	CALLS   #3, G^LIB$SIGNAL			   ;#3, LIB$SIGNAL
9$:	PUSHAB  16(SP)					   ;INPFIL
	CALLS   #1, (R8)				   ;#1, STR$FREE1_DX
10$:	TSTW    24(SP)					   ;CMD
	BEQL    13$					   ;13$
	PUSHAB  196(R7)					   ;P.AAX
	PUSHAB  W^GET_CMD				   ;GET_CMD
	PUSHAB  W^GET_CMD				   ;GET_CMD
	PUSHAB  W^WCP_CLD				   ;WCP_CLD
	PUSHAB  40(SP)					   ;CMD
	CALLS   #5, (R11)				   ;#5, CLI$DCL_PARSE
	MOVL    R0, R2					   ;R0, STATUS
	CMPL    R2, #98938				   ;STATUS, #98938
	BNEQ    11$					   ;11$
	BRW     20$					   ;20$
11$:	BLBS    R2, 12$					   ;STATUS, 12$
	BISL3   #268435456, R2, R0			   ;#268435456, STATUS, R0
	RET     					   ;
12$:	CALLS   #0, G^CLI$DISPATCH			   ;#0, CLI$DISPATCH
	MOVL    R0, R2					   ;R0, STATUS
	CALLS   #0, W^U.4				   ;#0, U.4
	MOVL    R2, R0					   ;STATUS, R0
	RET     					   ;
13$:	PUSHAB  212(R7)					   ;P.AAZ
	PUSHAB  W^GET_CMD				   ;GET_CMD
	PUSHAB  W^GET_CMD				   ;GET_CMD
	PUSHAB  W^WCP_CLD				   ;WCP_CLD
	CLRL    -(SP)					   ;-(SP)
	CALLS   #5, (R11)				   ;#5, CLI$DCL_PARSE
	MOVL    R0, R2					   ;R0, STATUS
	CMPL    R2, #98938				   ;STATUS, #98938
	BNEQ    14$					   ;14$
	CALLS   #0, W^U.4				   ;#0, U.4
	BRB     15$					   ;15$
14$:	BLBC    R2, 16$					   ;STATUS, 16$
	CALLS   #0, G^CLI$DISPATCH			   ;#0, CLI$DISPATCH
15$:	MOVL    R0, R2					   ;R0, STATUS
16$:	CMPL    R2, #98938				   ;STATUS, #98938
	BNEQ    13$					   ;13$
	PUSHAB  24(SP)					   ;CMD
	CALLS   #1, (R8)				   ;#1, STR$FREE1_DX
	PUSHL   R6					   ;R6
	CALLS   #1, (R8)				   ;#1, STR$FREE1_DX
17$:	REMQUE  @-368(R6), 4(SP)			   ;@TRMQUE, TRM
	BVS     18$					   ;18$
	PUSHAB  4(SP)					   ;TRM
	MOVZBL  #206, 4(SP)				   ;#206, 4(SP)
	PUSHAB  4(SP)					   ;4(SP)
	CALLS   #2, G^LIB$FREE_VM			   ;#2, LIB$FREE_VM
	BRB     17$					   ;17$
18$:	REMQUE  @-360(R6), 8(SP)			   ;@EXCQUE, EXC
	BVS     19$					   ;19$
	PUSHAB  8(SP)					   ;EXC
	MOVZWL  #507, 4(SP)				   ;#507, 4(SP)
	PUSHAB  4(SP)					   ;4(SP)
	CALLS   #2, G^LIB$FREE_VM			   ;#2, LIB$FREE_VM
	BRB     18$					   ;18$
19$:	REMQUE  @-352(R6), 12(SP)			   ;@OVRQUE, OVR
	BVS     20$					   ;20$
	PUSHAB  12(SP)					   ;OVR
	MOVZWL  #507, 4(SP)				   ;#507, 4(SP)
	PUSHAB  4(SP)					   ;4(SP)
	CALLS   #2, G^LIB$FREE_VM			   ;#2, LIB$FREE_VM
	BRB     19$					   ;19$
20$:	MOVL    #1, R0					   ;#1, R0
	RET     					   ;
21$:	.WORD   ^M<>					   ;Save nothing
	CLRL    -(SP)					   ;-(SP)
	PUSHL   SP					   ;SP
	MOVQ    4(AP), -(SP)				   ;4(AP), -(SP)
	CALLS   #3, W^U.3				   ;#3, U.3
	RET     					   ;

; Routine Size:  679 bytes,    Routine Base:  $CODE$ + 0000





	.EXTRN  CLI$_ABSENT

U.3:
	.ENTRY  WCP_HANDLER, ^M<>			   ;WCP_HANDLER, Save nothing
	ADDL3   #4, 4(AP), R0				   ;#4, SIG, R0
	CMPL    (R0), #2336				   ;(R0), #2336
	BEQL    1$					   ;1$
	CMPL    (R0), #CLI$_ABSENT			   ;(R0), #CLI$_ABSENT
	BEQL    1$					   ;1$
	CMPL    (R0), #CLI$_NOCOMD			   ;(R0), #CLI$_NOCOMD
	BNEQ    2$					   ;2$
1$:	MOVL    #1, R0					   ;#1, R0
	RET     					   ;
2$:	MOVZWL  #2328, R0				   ;#2328, R0
	RET     					   ;

; Routine Size:  44 bytes,    Routine Base:  $CODE$ + 02A7





	.PSECT  $PLIT$,NOWRT,NOEXE,2

P.ABC:	.ASCII  \Enter file name to save to, or press RETURN to quit without saving:\<0>
							   ;
P.ABB:	.LONG   17694787				   ;
	.ADDRESS P.ABC					   ;
P.ABE:	.ASCII  \_File: \<0>				   ;
P.ABD:	.LONG   17694727				   ;
	.ADDRESS P.ABE					   ;
P.ABG:	.ASCII  \SYS$DISK:[].WCFG\			   ;
P.ABF:	.LONG   17694736				   ;
	.ADDRESS P.ABG					   ;

	.EXTRN  LIB$PUT_OUTPUT

	.PSECT  $CODE$,NOWRT,2

U.4:
	.ENTRY  CMD_EXIT, ^M<R2,R3,R4,R5>		   ;CMD_EXIT, Save R2,R3,R4,R5
	MOVAB   G^LIB$SIGNAL, R5			   ;LIB$SIGNAL, R5
	MOVAB   W^CFGFILE, R4				   ;CFGFILE, R4
	MOVAB   G^STR$FREE1_DX, R3			   ;STR$FREE1_DX, R3
	SUBL2   #16, SP					   ;#16, SP
	BLBS    -4(R4), 1$				   ;CFG_CHANGED, 1$
	BRW     5$					   ;5$
1$:	TSTW    (R4)					   ;CFGFILE
	BNEQ    2$					   ;2$
	PUSHAB  W^P.ABB					   ;P.ABB
	CALLS   #1, G^LIB$PUT_OUTPUT			   ;#1, LIB$PUT_OUTPUT
	PUSHAB  W^P.ABD					   ;P.ABD
	PUSHL   R4					   ;R4
	CALLS   #2, W^GET_CMD				   ;#2, GET_CMD
	MOVL    R0, R2					   ;R0, STATUS
	TSTW    (R4)					   ;CFGFILE
	BEQL    5$					   ;5$
2$:	MOVL    #34471936, 8(SP)			   ;#34471936, RSPEC
	CLRL    12(SP)					   ;RSPEC+4
	MOVL    #34471936, (SP)				   ;#34471936, FSPEC
	CLRL    4(SP)					   ;FSPEC+4
	PUSHL   SP					   ;SP
	PUSHAB  W^P.ABF					   ;P.ABF
	PUSHL   R4					   ;R4
	CALLS   #3, W^PARSE_CFGFILE			   ;#3, PARSE_CFGFILE
	BLBS    R0, 3$					   ;R0, 3$
	PUSHL   R4					   ;R4
	PUSHAB  4(SP)					   ;FSPEC
	CALLS   #2, G^STR$COPY_DX			   ;#2, STR$COPY_DX
3$:	PUSHAB  8(SP)					   ;RSPEC
	PUSHAB  4(SP)					   ;FSPEC
	CALLS   #2, W^SAVE_CONFIG			   ;#2, SAVE_CONFIG
	MOVL    R0, R2					   ;R0, STATUS
	BLBS    R2, 4$					   ;STATUS, 4$
	PUSHL   SP					   ;SP
	PUSHL   #1					   ;#1
	PUSHL   #WCP__NOWRTCFG				   ;#WCP__NOWRTCFG
	CALLS   #3, (R5)				   ;#3, LIB$SIGNAL
	PUSHL   SP					   ;SP
	CALLS   #1, (R3)				   ;#1, STR$FREE1_DX
	MOVL    #1, R0					   ;#1, R0
	RET     					   ;
4$:	PUSHAB  8(SP)					   ;RSPEC
	PUSHL   #1					   ;#1
	PUSHL   #WCP__WROTECFG				   ;#WCP__WROTECFG
	CALLS   #3, (R5)				   ;#3, LIB$SIGNAL
	PUSHL   SP					   ;SP
	CALLS   #1, (R3)				   ;#1, STR$FREE1_DX
	PUSHAB  8(SP)					   ;RSPEC
	CALLS   #1, (R3)				   ;#1, STR$FREE1_DX
5$:	MOVL    #98938, R0				   ;#98938, R0
	RET     					   ;

; Routine Size:  185 bytes,    Routine Base:  $CODE$ + 02D3





	.PSECT  $PLIT$,NOWRT,NOEXE,2

P.ABI:	.ASCII  \Configuration has been changed.  Quit without saving? [No]: \
							   ;
P.ABH:	.LONG   17694780				   ;
	.ADDRESS P.ABI					   ;



	.PSECT  $CODE$,NOWRT,2

U.5:
	.ENTRY  CMD_QUIT, ^M<R2>			   ;CMD_QUIT, Save R2
	SUBL2   #4, SP					   ;#4, SP
	PUSHL   #34471936				   ;#34471936
	CLRL    4(SP)					   ;_D+4
	BLBC    W^CFG_CHANGED, 2$			   ;CFG_CHANGED, 2$
	PUSHAB  W^P.ABH					   ;P.ABH
	PUSHAB  4(SP)					   ;STR
	CALLS   #2, W^GET_CMD				   ;#2, GET_CMD
	MOVL    R0, R2					   ;R0, STATUS
	BLBC    R2, 1$					   ;STATUS, 1$
	TSTW    (SP)					   ;STR
	BEQL    1$					   ;1$
	MOVB    @4(SP), R0				   ;@STR+4, CH
	CMPB    R0, #89					   ;CH, #89
	BEQL    2$					   ;2$
	CMPB    R0, #121				   ;CH, #121
	BEQL    2$					   ;2$
1$:	MOVL    #1, R2					   ;#1, STATUS
	BRB     3$					   ;3$
2$:	MOVL    #98938, R2				   ;#98938, STATUS
3$:	PUSHL   SP					   ;SP
	CALLS   #1, G^STR$FREE1_DX			   ;#1, STR$FREE1_DX
	MOVL    R2, R0					   ;STATUS, R0
	RET     					   ;

; Routine Size:  82 bytes,    Routine Base:  $CODE$ + 038C





	.PSECT  $PLIT$,NOWRT,NOEXE,2

P.ABK:	.ASCII  \HELP_REQUEST\				   ;
P.ABJ:	.LONG   17694732				   ;
	.ADDRESS P.ABK					   ;
P.ABM:	.ASCII  \WCP_HELPLIB\<0>			   ;
P.ABL:	.LONG   17694731				   ;
	.ADDRESS P.ABM					   ;

	.EXTRN  LBR$OUTPUT_HELP

	.PSECT  $CODE$,NOWRT,2

U.6:
	.ENTRY  CMD_HELP, ^M<>				   ;CMD_HELP, Save nothing
	SUBL2   #12, SP					   ;#12, SP
	MOVL    #34471936, 4(SP)			   ;#34471936, _D
	CLRL    8(SP)					   ;_D+4
	PUSHAB  4(SP)					   ;TOPIC
	PUSHAB  W^P.ABJ					   ;P.ABJ
	CALLS   #2, G^CLI$GET_VALUE			   ;#2, CLI$GET_VALUE
	PUSHAB  W^GET_CMD				   ;GET_CMD
	MOVL    #1, 4(SP)				   ;#1, 4(SP)
	PUSHAB  4(SP)					   ;4(SP)
	PUSHAB  W^P.ABL					   ;P.ABL
	PUSHAB  16(SP)					   ;TOPIC
	CLRL    -(SP)					   ;-(SP)
	PUSHAB  G^LIB$PUT_OUTPUT			   ;LIB$PUT_OUTPUT
	CALLS   #6, G^LBR$OUTPUT_HELP			   ;#6, LBR$OUTPUT_HELP
	MOVL    #1, R0					   ;#1, R0
	RET     					   ;

; Routine Size:  67 bytes,    Routine Base:  $CODE$ + 03DE





	.PSECT  $PLIT$,NOWRT,NOEXE,2

P.ABO:	.ASCII  \DELETE\<0><0>				   ;
P.ABN:	.LONG   17694726				   ;
	.ADDRESS P.ABO					   ;
P.ABQ:	.ASCII  \MEASURE\<0>				   ;
P.ABP:	.LONG   17694727				   ;
	.ADDRESS P.ABQ					   ;
P.ABS:	.ASCII  \MEASURE.CPU\<0>			   ;
P.ABR:	.LONG   17694731				   ;
	.ADDRESS P.ABS					   ;
P.ABU:	.ASCII  \MEASURE.CPU\<0>			   ;
P.ABT:	.LONG   17694731				   ;
	.ADDRESS P.ABU					   ;
P.ABW:	.ASCII  \MEASURE.PROCESS_IO\<0><0>		   ;
P.ABV:	.LONG   17694738				   ;
	.ADDRESS P.ABW					   ;
P.ABY:	.ASCII  \MEASURE.PROCESS_IO\<0><0>		   ;
P.ABX:	.LONG   17694738				   ;
	.ADDRESS P.ABY					   ;
P.ACA:	.ASCII  \MEASURE.TERMINAL_IO\<0>		   ;
P.ABZ:	.LONG   17694739				   ;
	.ADDRESS P.ACA					   ;
P.ACC:	.ASCII  \MEASURE.TERMINAL_IO\<0>		   ;
P.ACB:	.LONG   17694739				   ;
	.ADDRESS P.ACC					   ;
P.ACE:	.ASCII  \WARNING\<0>				   ;
P.ACD:	.LONG   17694727				   ;
	.ADDRESS P.ACE					   ;
P.ACG:	.ASCII  \WARNING\<0>				   ;
P.ACF:	.LONG   17694727				   ;
	.ADDRESS P.ACG					   ;
P.ACI:	.ASCII  \LOGOUT\<0><0>				   ;
P.ACH:	.LONG   17694726				   ;
	.ADDRESS P.ACI					   ;
P.ACK:	.ASCII  \LOGOUT\<0><0>				   ;
P.ACJ:	.LONG   17694726				   ;
	.ADDRESS P.ACK					   ;
P.ACM:	.ASCII  \DISCONNECT\<0><0>			   ;
P.ACL:	.LONG   17694730				   ;
	.ADDRESS P.ACM					   ;
P.ACO:	.ASCII  \DISCONNECT\<0><0>			   ;
P.ACN:	.LONG   17694730				   ;
	.ADDRESS P.ACO					   ;
P.ACQ:	.ASCII  \FORCE_EXIT\<0><0>			   ;
P.ACP:	.LONG   17694730				   ;
	.ADDRESS P.ACQ					   ;
P.ACS:	.ASCII  \FORCE_EXIT\<0><0>			   ;
P.ACR:	.LONG   17694730				   ;
	.ADDRESS P.ACS					   ;
P.ACU:	.ASCII  \GROUP\<0><0><0>			   ;
P.ACT:	.LONG   17694725				   ;
	.ADDRESS P.ACU					   ;
P.ACW:	.ASCII  \GROUP\<0><0><0>			   ;
P.ACV:	.LONG   17694725				   ;
	.ADDRESS P.ACW					   ;
P.ACY:	.ASCII  \ACCPORNAM\<0><0><0>			   ;
P.ACX:	.LONG   17694729				   ;
	.ADDRESS P.ACY					   ;
P.ADA:	.ASCII  \ACCPORNAM\<0><0><0>			   ;
P.ACZ:	.LONG   17694729				   ;
	.ADDRESS P.ADA					   ;
P.ADC:	.ASCII  \DEVICE\<0><0>				   ;
P.ADB:	.LONG   17694726				   ;
	.ADDRESS P.ADC					   ;

	.EXTRN  LIB$GET_VM

	.PSECT  $CODE$,NOWRT,2

U.7:
	.ENTRY  CMD_WATCH, ^M<R2,R3,R4,R5,R6,R7,R8,R9,R10,-;CMD_WATCH, Save R2,R3,R4,R5,R6,R7,R8,R9,R10,R11
		R11>					   ;
	MOVAB   G^CLI$GET_VALUE, R11			   ;CLI$GET_VALUE, R11
	MOVL    #CLI$_PRESENT, R10			   ;#CLI$_PRESENT, R10
	MOVAB   W^P.ABN, R9				   ;P.ABN, R9
	MOVAB   G^CLI$PRESENT, R8			   ;CLI$PRESENT, R8
	MOVAB   -232(SP), SP				   ;-232(SP), SP
	MOVL    #34471936, -8(FP)			   ;#34471936, _D
	CLRL    -4(FP)					   ;_D+4
	MOVL    #34471936, -16(FP)			   ;#34471936, _D
	CLRL    -12(FP)					   ;_D+4
	MOVC5   #0, (SP), #0, #206, 8(SP)		   ;#0, (SP), #0, #206, TEMPLATE
	PUSHL   R9					   ;R9
	CALLS   #1, (R8)				   ;#1, CLI$PRESENT
	CLRL    R1					   ;R1
	CMPL    R0, R10					   ;R0, R10
	BNEQ    1$					   ;1$
	INCL    R1					   ;R1
1$:	MOVL    R1, R7					   ;R1, DEL
	BLBC    R7, 2$					   ;DEL, 2$
	BRW     19$					   ;19$
2$:	PUSHAB  16(R9)					   ;P.ABP
	CALLS   #1, (R8)				   ;#1, CLI$PRESENT
	CMPL    R0, R10					   ;R0, R10
	BEQL    3$					   ;3$
	BRW     9$					   ;9$
3$:	PUSHAB  36(R9)					   ;P.ABR
	CALLS   #1, (R8)				   ;#1, CLI$PRESENT
	CLRL    R1					   ;R1
	CMPL    R0, R10					   ;R0, R10
	BNEQ    4$					   ;4$
	INCL    R1					   ;R1
4$:	INSV    R1, #0, #1, 32(SP)			   ;R1, #0, #1, TEMPLATE+24
	BLBC    32(SP), 5$				   ;TEMPLATE+24, 5$
	PUSHAB  -16(FP)					   ;STR
	PUSHAB  56(R9)					   ;P.ABT
	CALLS   #2, (R11)				   ;#2, CLI$GET_VALUE
	BLBC    R0, 5$					   ;R0, 5$
	TSTW    -16(FP)					   ;STR
	BEQL    5$					   ;5$
	PUSHAB  36(SP)					   ;TEMPLATE+28
	PUSHL   -12(FP)					   ;STR+4
	MOVZWL  -16(FP), -(SP)				   ;STR, -(SP)
	CALLS   #3, G^LIB$CVT_DTB			   ;#3, LIB$CVT_DTB
5$:	PUSHAB  84(R9)					   ;P.ABV
	CALLS   #1, (R8)				   ;#1, CLI$PRESENT
	CLRL    R1					   ;R1
	CMPL    R0, R10					   ;R0, R10
	BNEQ    6$					   ;6$
	INCL    R1					   ;R1
6$:	INSV    R1, #1, #1, 32(SP)			   ;R1, #1, #1, TEMPLATE+24
	BBC     #1, 32(SP), 7$				   ;#1, TEMPLATE+24, 7$
	PUSHAB  -16(FP)					   ;STR
	PUSHAB  112(R9)					   ;P.ABX
	CALLS   #2, (R11)				   ;#2, CLI$GET_VALUE
	BLBC    R0, 7$					   ;R0, 7$
	TSTW    -16(FP)					   ;STR
	BEQL    7$					   ;7$
	PUSHAB  40(SP)					   ;TEMPLATE+32
	PUSHL   -12(FP)					   ;STR+4
	MOVZWL  -16(FP), -(SP)				   ;STR, -(SP)
	CALLS   #3, G^LIB$CVT_DTB			   ;#3, LIB$CVT_DTB
7$:	PUSHAB  140(R9)					   ;P.ABZ
	CALLS   #1, (R8)				   ;#1, CLI$PRESENT
	CLRL    R1					   ;R1
	CMPL    R0, R10					   ;R0, R10
	BNEQ    8$					   ;8$
	INCL    R1					   ;R1
8$:	INSV    R1, #2, #1, 32(SP)			   ;R1, #2, #1, TEMPLATE+24
	BBC     #2, 32(SP), 10$				   ;#2, TEMPLATE+24, 10$
	PUSHAB  -16(FP)					   ;STR
	PUSHAB  168(R9)					   ;P.ACB
	CALLS   #2, (R11)				   ;#2, CLI$GET_VALUE
	BLBC    R0, 10$					   ;R0, 10$
	TSTW    -16(FP)					   ;STR
	BEQL    10$					   ;10$
	PUSHAB  44(SP)					   ;TEMPLATE+36
	PUSHL   -12(FP)					   ;STR+4
	MOVZWL  -16(FP), -(SP)				   ;STR, -(SP)
	CALLS   #3, G^LIB$CVT_DTB			   ;#3, LIB$CVT_DTB
	BRB     10$					   ;10$
9$:	EXTZV   #2, #1, W^DEFAULTS+24, R0		   ;#2, #1, DEFAULTS+24, R0
	INSV    R0, #2, #1, 32(SP)			   ;R0, #2, #1, TEMPLATE+24
	MOVQ    W^DEFAULTS+32, 40(SP)			   ;DEFAULTS+32, TEMPLATE+32
	EXTZV   #1, #1, W^DEFAULTS+24, R0		   ;#1, #1, DEFAULTS+24, R0
	INSV    R0, #1, #1, 32(SP)			   ;R0, #1, #1, TEMPLATE+24
	INSV    W^DEFAULTS+24, #0, #1, 32(SP)		   ;DEFAULTS+24, #0, #1, TEMPLATE+24
	MOVL    W^DEFAULTS+28, 36(SP)			   ;DEFAULTS+28, TEMPLATE+28
10$:	PUSHAB  184(R9)					   ;P.ACD
	CALLS   #1, (R8)				   ;#1, CLI$PRESENT
	MOVL    R0, R6					   ;R0, STATUS
	MOVC3   #8, W^DEFAULTS+8, 16(SP)		   ;#8, DEFAULTS+8, TEMPLATE+8
	CMPL    R6, #CLI$_ABSENT			   ;STATUS, #CLI$_ABSENT
	BNEQ    11$					   ;11$
	EXTZV   #3, #1, W^DEFAULTS+24, R0		   ;#3, #1, DEFAULTS+24, R0
	INSV    R0, #4, #1, 32(SP)			   ;R0, #4, #1, TEMPLATE+24
	BRB     13$					   ;13$
11$:	CMPL    R6, #CLI$_NEGATED			   ;STATUS, #CLI$_NEGATED
	BNEQ    12$					   ;12$
	BICB2   #16, 32(SP)				   ;#16, TEMPLATE+24
	BRB     13$					   ;13$
12$:	CMPL    R6, R10					   ;STATUS, R10
	BNEQ    13$					   ;13$
	BISB2   #16, 32(SP)				   ;#16, TEMPLATE+24
	PUSHAB  -16(FP)					   ;STR
	PUSHAB  200(R9)					   ;P.ACF
	CALLS   #2, (R11)				   ;#2, CLI$GET_VALUE
	BLBC    R0, 13$					   ;R0, 13$
	PUSHAB  16(SP)					   ;TEMPLATE+8
	PUSHAB  -16(FP)					   ;STR
	CALLS   #2, G^SYS$BINTIM			   ;#2, SYS$BINTIM
13$:	MOVC3   #8, W^DEFAULTS+16, 24(SP)		   ;#8, DEFAULTS+16, TEMPLATE+16
	EXTZV   #4, #1, W^DEFAULTS+24, R0		   ;#4, #1, DEFAULTS+24, R0
	INSV    R0, #5, #1, 32(SP)			   ;R0, #5, #1, TEMPLATE+24
	EXTZV   #5, #1, W^DEFAULTS+24, R0		   ;#5, #1, DEFAULTS+24, R0
	INSV    R0, #3, #1, 32(SP)			   ;R0, #3, #1, TEMPLATE+24
	EXTZV   #7, #1, W^DEFAULTS+24, R0		   ;#7, #1, DEFAULTS+24, R0
	INSV    R0, #6, #1, 32(SP)			   ;R0, #6, #1, TEMPLATE+24
	PUSHAB  216(R9)					   ;P.ACH
	CALLS   #1, (R8)				   ;#1, CLI$PRESENT
	MOVL    R0, R6					   ;R0, STATUS
	CMPL    R6, #CLI$_ABSENT			   ;STATUS, #CLI$_ABSENT
	BEQL    14$					   ;14$
	CMPL    R6, #CLI$_NEGATED			   ;STATUS, #CLI$_NEGATED
	BEQL    16$					   ;16$
	BISB2   #32, 32(SP)				   ;#32, TEMPLATE+24
	BICB2   #72, 32(SP)				   ;#72, TEMPLATE+24
	PUSHAB  -16(FP)					   ;STR
	PUSHAB  232(R9)					   ;P.ACJ
	BRB     18$					   ;18$
14$:	PUSHAB  252(R9)					   ;P.ACL
	CALLS   #1, (R8)				   ;#1, CLI$PRESENT
	MOVL    R0, R6					   ;R0, STATUS
	CMPL    R6, #CLI$_ABSENT			   ;STATUS, #CLI$_ABSENT
	BEQL    15$					   ;15$
	CMPL    R6, #CLI$_NEGATED			   ;STATUS, #CLI$_NEGATED
	BEQL    16$					   ;16$
	BISB2   #8, 32(SP)				   ;#8, TEMPLATE+24
	BICB2   #96, 32(SP)				   ;#96, TEMPLATE+24
	PUSHAB  -16(FP)					   ;STR
	PUSHAB  272(R9)					   ;P.ACN
	BRB     18$					   ;18$
15$:	PUSHAB  292(R9)					   ;P.ACP
	CALLS   #1, (R8)				   ;#1, CLI$PRESENT
	MOVL    R0, R6					   ;R0, STATUS
	CMPL    R6, #CLI$_NEGATED			   ;STATUS, #CLI$_NEGATED
	BNEQ    17$					   ;17$
16$:	BICB2   #104, 32(SP)				   ;#104, TEMPLATE+24
	BRB     19$					   ;19$
17$:	CMPL    R6, R10					   ;STATUS, R10
	BNEQ    19$					   ;19$
	BISB2   #64, 32(SP)				   ;#64, TEMPLATE+24
	BICB2   #40, 32(SP)				   ;#40, TEMPLATE+24
	PUSHAB  -16(FP)					   ;STR
	PUSHAB  312(R9)					   ;P.ACR
18$:	CALLS   #2, (R11)				   ;#2, CLI$GET_VALUE
	BLBC    R0, 19$					   ;R0, 19$
	PUSHAB  24(SP)					   ;TEMPLATE+16
	PUSHAB  -16(FP)					   ;STR
	CALLS   #2, G^SYS$BINTIM			   ;#2, SYS$BINTIM
19$:	PUSHAB  328(R9)					   ;P.ACT
	CALLS   #1, (R8)				   ;#1, CLI$PRESENT
	CMPL    R0, R10					   ;R0, R10
	BNEQ    21$					   ;21$
	PUSHAB  -16(FP)					   ;STR
	PUSHAB  344(R9)					   ;P.ACV
	CALLS   #2, (R11)				   ;#2, CLI$GET_VALUE
	MOVZWL  -16(FP), R0				   ;STR, R0
	CMPW    R0, #32					   ;R0, #32
	BLEQU   20$					   ;20$
	MOVL    #32, R0					   ;#32, R0
20$:	MOVW    R0, -52(FP)				   ;R0, TEMPLATE+172
	MOVC3   -52(FP), @-12(FP), -50(FP)		   ;TEMPLATE+172, @STR+4, TEMPLATE+174
21$:	PUSHAB  364(R9)					   ;P.ACX
	CALLS   #1, (R8)				   ;#1, CLI$PRESENT
	CMPL    R0, R10					   ;R0, R10
	BNEQ    23$					   ;23$
	PUSHAB  -16(FP)					   ;STR
	PUSHAB  384(R9)					   ;P.ACZ
	CALLS   #2, (R11)				   ;#2, CLI$GET_VALUE
	MOVZWL  -16(FP), R0				   ;STR, R0
	CMPW    R0, #64					   ;R0, #64
	BLEQU   22$					   ;22$
	MOVZBL  #64, R0					   ;#64, R0
22$:	MOVW    R0, 114(SP)				   ;R0, TEMPLATE+106
	MOVC3   114(SP), @-12(FP), 116(SP)		   ;TEMPLATE+106, @STR+4, TEMPLATE+108
	BRB     24$					   ;24$
23$:	MOVW    #1, 114(SP)				   ;#1, TEMPLATE+106
	MOVB    #42, 116(SP)				   ;#42, TEMPLATE+108
24$:	PUSHAB  -8(FP)					   ;DEVNAM
	PUSHAB  400(R9)					   ;P.ADB
	CALLS   #2, (R11)				   ;#2, CLI$GET_VALUE
	MOVL    W^TRMQUE, 4(SP)				   ;TRMQUE, TRM
25$:	MOVL    4(SP), R4				   ;TRM, R4
	MOVAB   W^TRMQUE, R0				   ;TRMQUE, R0
	CMPL    R4, R0					   ;R4, R0
	BEQL    27$					   ;27$
	CMPC5   -8(FP), @-4(FP), #32, 40(R4), 42(R4)	   ;DEVNAM, @DEVNAM+4, #32, 40(R4), 42(R4)
	BNEQ    26$					   ;26$
	CMPC5   106(R4), 108(R4), #0, 114(SP), 116(SP)	   ;106(R4), 108(R4), #0, TEMPLATE+106, TEMPLATE+108
	BNEQ    26$					   ;26$
	MOVL    #1, R6					   ;#1, STATUS
	BRB     28$					   ;28$
26$:	MOVL    (R4), 4(SP)				   ;(R4), TRM
	BRB     25$					   ;25$
27$:	MNEGL   #1, R6					   ;#1, STATUS
28$:	BGEQ    31$					   ;31$
	BLBC    R7, 29$					   ;DEL, 29$
	CLRL    -(SP)					   ;-(SP)
	PUSHL   #WCP__RECNOTFOUND			   ;#WCP__RECNOTFOUND
	CALLS   #2, G^LIB$SIGNAL			   ;#2, LIB$SIGNAL
	PUSHAB  -16(FP)					   ;STR
	CALLS   #1, G^STR$FREE1_DX			   ;#1, STR$FREE1_DX
	PUSHAB  -8(FP)					   ;DEVNAM
	CALLS   #1, G^STR$FREE1_DX			   ;#1, STR$FREE1_DX
	MOVL    #WCP__RECNOTFOUND, R0			   ;#WCP__RECNOTFOUND, R0
	RET     					   ;
29$:	PUSHAB  4(SP)					   ;TRM
	MOVZBL  #206, 4(SP)				   ;#206, 4(SP)
	PUSHAB  4(SP)					   ;4(SP)
	CALLS   #2, G^LIB$GET_VM			   ;#2, LIB$GET_VM
	MOVL    4(SP), R6				   ;TRM, R6
	MOVC3   #198, 16(SP), 8(R6)			   ;#198, TEMPLATE+8, 8(R6)
	MOVZWL  -8(FP), R0				   ;DEVNAM, R0
	CMPW    R0, #64					   ;R0, #64
	BLEQU   30$					   ;30$
	MOVZBL  #64, R0					   ;#64, R0
30$:	MOVW    R0, 40(R6)				   ;R0, 40(R6)
	MOVC3   40(R6), @-4(FP), 42(R6)			   ;40(R6), @DEVNAM+4, 42(R6)
	INSQUE  (R6), @W^TRMQUE+4			   ;(R6), @TRMQUE+4
	MOVL    #1, W^CFG_CHANGED			   ;#1, CFG_CHANGED
	BRB     34$					   ;34$
31$:	MOVL    #1, W^CFG_CHANGED			   ;#1, CFG_CHANGED
	MOVL    4(SP), R6				   ;TRM, R6
	BLBC    R7, 32$					   ;DEL, 32$
	REMQUE  (R6), 4(SP)				   ;(R6), TRM
	BRB     34$					   ;34$
32$:	MOVC3   #198, 16(SP), 8(R6)			   ;#198, TEMPLATE+8, 8(R6)
	MOVZWL  -8(FP), R0				   ;DEVNAM, R0
	CMPW    R0, #64					   ;R0, #64
	BLEQU   33$					   ;33$
	MOVZBL  #64, R0					   ;#64, R0
33$:	MOVW    R0, 40(R6)				   ;R0, 40(R6)
	MOVC3   40(R6), @-4(FP), 42(R6)			   ;40(R6), @DEVNAM+4, 42(R6)
34$:	PUSHAB  -16(FP)					   ;STR
	CALLS   #1, G^STR$FREE1_DX			   ;#1, STR$FREE1_DX
	PUSHAB  -8(FP)					   ;DEVNAM
	CALLS   #1, G^STR$FREE1_DX			   ;#1, STR$FREE1_DX
	MOVL    #1, R0					   ;#1, R0
	RET     					   ;

; Routine Size:  988 bytes,    Routine Base:  $CODE$ + 0421





	.PSECT  $PLIT$,NOWRT,NOEXE,2

P.ADE:	.ASCII  \DELETE\<0><0>				   ;
P.ADD:	.LONG   17694726				   ;
	.ADDRESS P.ADE					   ;
P.ADG:	.ASCII  \PRIVILEGES\<0><0>			   ;
P.ADF:	.LONG   17694730				   ;
	.ADDRESS P.ADG					   ;
P.ADI:	.ASCII  \PRIVILEGES\<0><0>			   ;
P.ADH:	.LONG   17694730				   ;
	.ADDRESS P.ADI					   ;
P.ADK:	.ASCII  \UIC\<0>				   ;
P.ADJ:	.LONG   17694723				   ;
	.ADDRESS P.ADK					   ;
P.ADM:	.ASCII  \UIC\<0>				   ;
P.ADL:	.LONG   17694723				   ;
	.ADDRESS P.ADM					   ;
P.ADO:	.ASCII  \[*,*]\<0><0><0>			   ;
P.ADN:	.LONG   17694725				   ;
	.ADDRESS P.ADO					   ;
P.ADQ:	.ASCII  \TERMINAL\				   ;
P.ADP:	.LONG   17694728				   ;
	.ADDRESS P.ADQ					   ;
P.ADS:	.ASCII  \TERMINAL\				   ;
P.ADR:	.LONG   17694728				   ;
	.ADDRESS P.ADS					   ;
P.ADU:	.ASCII  \ACCPORNAM\<0><0><0>			   ;
P.ADT:	.LONG   17694729				   ;
	.ADDRESS P.ADU					   ;
P.ADW:	.ASCII  \ACCPORNAM\<0><0><0>			   ;
P.ADV:	.LONG   17694729				   ;
	.ADDRESS P.ADW					   ;
P.ADY:	.ASCII  \HOLDING\<0>				   ;
P.ADX:	.LONG   17694727				   ;
	.ADDRESS P.ADY					   ;
P.AEA:	.ASCII  \HOLDING\<0>				   ;
P.ADZ:	.LONG   17694727				   ;
	.ADDRESS P.AEA					   ;
P.AEC:	.ASCII  \DURING\<0><0>				   ;
P.AEB:	.LONG   17694726				   ;
	.ADDRESS P.AEC					   ;
P.AEE:	.ASCII  \DURING\<0><0>				   ;
P.AED:	.LONG   17694726				   ;
	.ADDRESS P.AEE					   ;
P.AEG:	.ASCII  \IMAGE\<0><0><0>			   ;
P.AEF:	.LONG   17694725				   ;
	.ADDRESS P.AEG					   ;
P.AEI:	.ASCII  \IMAGE\<0><0><0>			   ;
P.AEH:	.LONG   17694725				   ;
	.ADDRESS P.AEI					   ;
P.AEK:	.ASCII  \USER\					   ;
P.AEJ:	.LONG   17694724				   ;
	.ADDRESS P.AEK					   ;

	.EXTRN  SYS$ASCTOID

	.PSECT  $CODE$,NOWRT,2

U.8:
	.ENTRY  CMD_EXCLUDE, ^M<R2,R3,R4,R5,R6,R7,R8,R9,-  ;CMD_EXCLUDE, Save R2,R3,R4,R5,R6,R7,R8,R9,R10,R11
		R10,R11>				   ;
	MOVAB   G^CLI$GET_VALUE, R11			   ;CLI$GET_VALUE, R11
	MOVL    #CLI$_PRESENT, R10			   ;#CLI$_PRESENT, R10
	MOVAB   G^CLI$PRESENT, R9			   ;CLI$PRESENT, R9
	MOVAB   W^P.ADD, R8				   ;P.ADD, R8
	MOVAB   -540(SP), SP				   ;-540(SP), SP
	MOVL    #17694720, 16(SP)			   ;#17694720, SSTR
	CLRL    20(SP)					   ;SSTR+4
	PUSHL   R8					   ;R8
	CALLS   #1, (R9)				   ;#1, CLI$PRESENT
	CLRL    R1					   ;R1
	CMPL    R0, R10					   ;R0, R10
	BNEQ    1$					   ;1$
	INCL    R1					   ;R1
1$:	MOVL    R1, R7					   ;R1, DEL
	MOVC5   #0, (SP), #0, #507, 32(SP)		   ;#0, (SP), #0, #507, TEMPLATE
	MOVL    #34471936, 24(SP)			   ;#34471936, _D
	CLRL    28(SP)					   ;_D+4
	PUSHAB  20(R8)					   ;P.ADF
	CALLS   #1, (R9)				   ;#1, CLI$PRESENT
	CMPL    R0, R10					   ;R0, R10
	BNEQ    3$					   ;3$
2$:	PUSHAB  24(SP)					   ;STR
	PUSHAB  40(R8)					   ;P.ADH
	CALLS   #2, (R11)				   ;#2, CLI$GET_VALUE
	BLBC    R0, 3$					   ;R0, 3$
	PUSHAB  40(SP)					   ;TEMPLATE+8
	PUSHAB  28(SP)					   ;STR
	CALLS   #2, W^ASC_TO_PRV_OR			   ;#2, ASC_TO_PRV_OR
	BRB     2$					   ;2$
3$:	PUSHAB  52(R8)					   ;P.ADJ
	CALLS   #1, (R9)				   ;#1, CLI$PRESENT
	CMPL    R0, R10					   ;R0, R10
	BNEQ    5$					   ;5$
	PUSHAB  24(SP)					   ;STR
	PUSHAB  64(R8)					   ;P.ADL
	CALLS   #2, (R11)				   ;#2, CLI$GET_VALUE
	PUSHAB  4(SP)					   ;UIC
	PUSHAB  28(SP)					   ;STR
	CALLS   #2, W^CVT_ASCTOID			   ;#2, CVT_ASCTOID
	MOVL    R0, R6					   ;R0, STATUS
	BLBS    R6, 4$					   ;STATUS, 4$
	PUSHL   R6					   ;STATUS
	PUSHAB  28(SP)					   ;STR
	PUSHL   #1					   ;#1
	PUSHL   #WCP__UICERR				   ;#WCP__UICERR
	CALLS   #4, G^LIB$SIGNAL			   ;#4, LIB$SIGNAL
	PUSHAB  24(SP)					   ;STR
	CALLS   #1, G^STR$FREE1_DX			   ;#1, STR$FREE1_DX
	MOVL    #WCP__UICERR, R0			   ;#WCP__UICERR, R0
	RET     					   ;
4$:	MOVL    4(SP), 64(SP)				   ;UIC, TEMPLATE+32
	BRB     6$					   ;6$
5$:	PUSHAB  8(SP)					   ;UIC
	PUSHAB  80(R8)					   ;P.ADN
	CALLS   #2, W^CVT_ASCTOID			   ;#2, CVT_ASCTOID
	MOVL    R0, R6					   ;R0, STATUS
	MOVL    8(SP), 64(SP)				   ;UIC, TEMPLATE+32
6$:	PUSHAB  96(R8)					   ;P.ADP
	CALLS   #1, (R9)				   ;#1, CLI$PRESENT
	CMPL    R0, R10					   ;R0, R10
	BNEQ    8$					   ;8$
	PUSHAB  24(SP)					   ;STR
	PUSHAB  112(R8)					   ;P.ADR
	CALLS   #2, (R11)				   ;#2, CLI$GET_VALUE
	MOVZWL  24(SP), R0				   ;STR, R0
	CMPW    R0, #64					   ;R0, #64
	BLEQU   7$					   ;7$
	MOVZBL  #64, R0					   ;#64, R0
7$:	MOVW    R0, 150(SP)				   ;R0, TEMPLATE+118
	MOVC3   150(SP), @28(SP), 152(SP)		   ;TEMPLATE+118, @STR+4, TEMPLATE+120
	BRB     9$					   ;9$
8$:	MOVW    #1, 150(SP)				   ;#1, TEMPLATE+118
	MOVB    #42, 152(SP)				   ;#42, TEMPLATE+120
9$:	PUSHAB  132(R8)					   ;P.ADT
	CALLS   #1, (R9)				   ;#1, CLI$PRESENT
	CMPL    R0, R10					   ;R0, R10
	BNEQ    11$					   ;11$
	PUSHAB  24(SP)					   ;STR
	PUSHAB  152(R8)					   ;P.ADV
	CALLS   #2, (R11)				   ;#2, CLI$GET_VALUE
	MOVZWL  24(SP), R0				   ;STR, R0
	CMPW    R0, #64					   ;R0, #64
	BLEQU   10$					   ;10$
	MOVZBL  #64, R0					   ;#64, R0
10$:	MOVW    R0, 216(SP)				   ;R0, TEMPLATE+184
	MOVC3   216(SP), @28(SP), 218(SP)		   ;TEMPLATE+184, @STR+4, TEMPLATE+186
	BRB     12$					   ;12$
11$:	MOVW    #1, 216(SP)				   ;#1, TEMPLATE+184
	MOVB    #42, 218(SP)				   ;#42, TEMPLATE+186
12$:	PUSHAB  168(R8)					   ;P.ADX
	CALLS   #1, (R9)				   ;#1, CLI$PRESENT
	CMPL    R0, R10					   ;R0, R10
	BNEQ    13$					   ;13$
	PUSHAB  24(SP)					   ;STR
	PUSHAB  184(R8)					   ;P.ADZ
	CALLS   #2, (R11)				   ;#2, CLI$GET_VALUE
	CLRL    -(SP)					   ;-(SP)
	PUSHAB  72(SP)					   ;TEMPLATE+36
	PUSHAB  32(SP)					   ;STR
	CALLS   #3, G^SYS$ASCTOID			   ;#3, SYS$ASCTOID
	MOVL    R0, R6					   ;R0, STATUS
	BLBS    R6, 13$					   ;STATUS, 13$
	PUSHL   R6					   ;STATUS
	PUSHAB  28(SP)					   ;STR
	PUSHL   #1					   ;#1
	PUSHL   #WCP__IDERR				   ;#WCP__IDERR
	CALLS   #4, G^LIB$SIGNAL			   ;#4, LIB$SIGNAL
	PUSHAB  24(SP)					   ;STR
	CALLS   #1, G^STR$FREE1_DX			   ;#1, STR$FREE1_DX
	MOVL    #WCP__IDERR, R0				   ;#WCP__IDERR, R0
	RET     					   ;
13$:	PUSHAB  200(R8)					   ;P.AEB
	CALLS   #1, (R9)				   ;#1, CLI$PRESENT
	CMPL    R0, R10					   ;R0, R10
	BNEQ    15$					   ;15$
14$:	PUSHAB  24(SP)					   ;STR
	PUSHAB  216(R8)					   ;P.AED
	CALLS   #2, (R11)				   ;#2, CLI$GET_VALUE
	BLBC    R0, 17$					   ;R0, 17$
	PUSHAB  88(SP)					   ;TEMPLATE+56
	PUSHAB  W^DEFAULTS+40				   ;DEFAULTS+40
	PUSHAB  32(SP)					   ;STR
	CALLS   #3, W^PARSE_TIMES			   ;#3, PARSE_TIMES
	BRB     14$					   ;14$
15$:	CLRL    R0					   ;I
16$:	BISL2   #16777215, 88(SP)[R0]			   ;#16777215, TIMES[I]
	AOBLEQ  #6, R0, 16$				   ;#6, I, 16$
17$:	PUSHAB  232(R8)					   ;P.AEF
	CALLS   #1, (R9)				   ;#1, CLI$PRESENT
	CMPL    R0, R10					   ;R0, R10
	BNEQ    19$					   ;19$
	PUSHAB  24(SP)					   ;STR
	PUSHAB  248(R8)					   ;P.AEH
	CALLS   #2, (R11)				   ;#2, CLI$GET_VALUE
	MOVZWL  24(SP), R0				   ;STR, R0
	CMPW    R0, #255				   ;R0, #255
	BLEQU   18$					   ;18$
	MOVZBL  #255, R0				   ;#255, R0
18$:	MOVW    R0, -258(FP)				   ;R0, TEMPLATE+250
	MOVC3   -258(FP), @28(SP), -256(FP)		   ;TEMPLATE+250, @STR+4, TEMPLATE+252
	BRB     20$					   ;20$
19$:	MOVW    #1, -258(FP)				   ;#1, TEMPLATE+250
	MOVB    #42, -256(FP)				   ;#42, TEMPLATE+252
20$:	PUSHAB  24(SP)					   ;STR
	PUSHAB  260(R8)					   ;P.AEJ
	CALLS   #2, (R11)				   ;#2, CLI$GET_VALUE
	BLBS    R0, 21$					   ;R0, 21$
	BRW     29$					   ;29$
21$:	MOVL    W^EXCQUE, 12(SP)			   ;EXCQUE, EXC
22$:	MOVL    12(SP), R4				   ;EXC, R4
	MOVAB   W^EXCQUE, R0				   ;EXCQUE, R0
	CMPL    R4, R0					   ;R4, R0
	BEQL    24$					   ;24$
	CMPC5   24(SP), @28(SP), #32, 84(R4), 86(R4)	   ;STR, @STR+4, #32, 84(R4), 86(R4)
	BNEQ    23$					   ;23$
	CMPL    64(SP), 32(R4)				   ;TEMPLATE+32, 32(R4)
	BNEQ    23$					   ;23$
	CMPL    68(SP), 36(R4)				   ;TEMPLATE+36, 36(R4)
	BNEQ    23$					   ;23$
	CMPC5   150(SP), 152(SP), #32, 118(R4), 120(R4)    ;TEMPLATE+118, TEMPLATE+120, #32, 118(R4), 120(R4)
	BNEQ    23$					   ;23$
	CMPC5   216(SP), 218(SP), #32, 184(R4), 186(R4)    ;TEMPLATE+184, TEMPLATE+186, #32, 184(R4), 186(R4)
	BNEQ    23$					   ;23$
	CMPC5   -258(FP), -256(FP), #32, 250(R4), 252(R4)  ;TEMPLATE+250, TEMPLATE+252, #32, 250(R4), 252(R4)
	BNEQ    23$					   ;23$
	CMPC3   #28, 88(SP), 56(R4)			   ;#28, TEMPLATE+56, 56(R4)
	BEQL    24$					   ;24$
23$:	MOVL    (R4), 12(SP)				   ;(R4), EXC
	BRB     22$					   ;22$
24$:	BLBC    R7, 26$					   ;DEL, 26$
	MOVAB   W^EXCQUE, R0				   ;EXCQUE, R0
	CMPL    12(SP), R0				   ;EXC, R0
	BNEQ    25$					   ;25$
	PUSHAB  24(SP)					   ;STR
	PUSHL   #1					   ;#1
	PUSHL   #WCP__RECNOTFOUND			   ;#WCP__RECNOTFOUND
	CALLS   #3, G^LIB$SIGNAL			   ;#3, LIB$SIGNAL
	PUSHAB  24(SP)					   ;STR
	CALLS   #1, G^STR$FREE1_DX			   ;#1, STR$FREE1_DX
	MOVL    #WCP__RECNOTFOUND, R0			   ;#WCP__RECNOTFOUND, R0
	RET     					   ;
25$:	REMQUE  @12(SP), 12(SP)				   ;@EXC, EXC
	PUSHAB  12(SP)					   ;EXC
	MOVZWL  #507, 4(SP)				   ;#507, 4(SP)
	PUSHAB  4(SP)					   ;4(SP)
	CALLS   #2, G^LIB$FREE_VM			   ;#2, LIB$FREE_VM
	BRB     27$					   ;27$
26$:	MOVAB   W^EXCQUE, R0				   ;EXCQUE, R0
	CMPL    12(SP), R0				   ;EXC, R0
	BNEQ    28$					   ;28$
	PUSHAB  12(SP)					   ;EXC
	MOVZWL  #507, 4(SP)				   ;#507, 4(SP)
	PUSHAB  4(SP)					   ;4(SP)
	CALLS   #2, G^LIB$GET_VM			   ;#2, LIB$GET_VM
	MOVL    12(SP), R6				   ;EXC, R6
	MOVC3   #507, 32(SP), (R6)			   ;#507, TEMPLATE, (R6)
	MOVW    24(SP), 84(R6)				   ;STR, 84(R6)
	MOVC3   24(SP), @28(SP), 86(R6)			   ;STR, @STR+4, 86(R6)
	INSQUE  (R6), @W^EXCQUE+4			   ;(R6), @EXCQUE+4
27$:	MOVL    #1, W^CFG_CHANGED			   ;#1, CFG_CHANGED
28$:	BRW     20$					   ;20$
29$:	PUSHAB  24(SP)					   ;STR
	CALLS   #1, G^STR$FREE1_DX			   ;#1, STR$FREE1_DX
	MOVL    #1, R0					   ;#1, R0
	RET     					   ;

; Routine Size:  821 bytes,    Routine Base:  $CODE$ + 07FD





	.PSECT  $PLIT$,NOWRT,NOEXE,2

P.AEM:	.ASCII  \DELETE\<0><0>				   ;
P.AEL:	.LONG   17694726				   ;
	.ADDRESS P.AEM					   ;
P.AEO:	.ASCII  \PRIVILEGES\<0><0>			   ;
P.AEN:	.LONG   17694730				   ;
	.ADDRESS P.AEO					   ;
P.AEQ:	.ASCII  \PRIVILEGES\<0><0>			   ;
P.AEP:	.LONG   17694730				   ;
	.ADDRESS P.AEQ					   ;
P.AES:	.ASCII  \UIC\<0>				   ;
P.AER:	.LONG   17694723				   ;
	.ADDRESS P.AES					   ;
P.AEU:	.ASCII  \UIC\<0>				   ;
P.AET:	.LONG   17694723				   ;
	.ADDRESS P.AEU					   ;
P.AEW:	.ASCII  \[*,*]\<0><0><0>			   ;
P.AEV:	.LONG   17694725				   ;
	.ADDRESS P.AEW					   ;
P.AEY:	.ASCII  \TERMINAL\				   ;
P.AEX:	.LONG   17694728				   ;
	.ADDRESS P.AEY					   ;
P.AFA:	.ASCII  \TERMINAL\				   ;
P.AEZ:	.LONG   17694728				   ;
	.ADDRESS P.AFA					   ;
P.AFC:	.ASCII  \ACCPORNAM\<0><0><0>			   ;
P.AFB:	.LONG   17694729				   ;
	.ADDRESS P.AFC					   ;
P.AFE:	.ASCII  \ACCPORNAM\<0><0><0>			   ;
P.AFD:	.LONG   17694729				   ;
	.ADDRESS P.AFE					   ;
P.AFG:	.ASCII  \HOLDING\<0>				   ;
P.AFF:	.LONG   17694727				   ;
	.ADDRESS P.AFG					   ;
P.AFI:	.ASCII  \HOLDING\<0>				   ;
P.AFH:	.LONG   17694727				   ;
	.ADDRESS P.AFI					   ;
P.AFK:	.ASCII  \DURING\<0><0>				   ;
P.AFJ:	.LONG   17694726				   ;
	.ADDRESS P.AFK					   ;
P.AFM:	.ASCII  \DURING\<0><0>				   ;
P.AFL:	.LONG   17694726				   ;
	.ADDRESS P.AFM					   ;
P.AFO:	.ASCII  \IMAGE\<0><0><0>			   ;
P.AFN:	.LONG   17694725				   ;
	.ADDRESS P.AFO					   ;
P.AFQ:	.ASCII  \IMAGE\<0><0><0>			   ;
P.AFP:	.LONG   17694725				   ;
	.ADDRESS P.AFQ					   ;
P.AFS:	.ASCII  \MEASURE\<0>				   ;
P.AFR:	.LONG   17694727				   ;
	.ADDRESS P.AFS					   ;
P.AFU:	.ASCII  \MEASURE.CPU\<0>			   ;
P.AFT:	.LONG   17694731				   ;
	.ADDRESS P.AFU					   ;
P.AFW:	.ASCII  \MEASURE.CPU\<0>			   ;
P.AFV:	.LONG   17694731				   ;
	.ADDRESS P.AFW					   ;
P.AFY:	.ASCII  \MEASURE.PROCESS_IO\<0><0>		   ;
P.AFX:	.LONG   17694738				   ;
	.ADDRESS P.AFY					   ;
P.AGA:	.ASCII  \MEASURE.PROCESS_IO\<0><0>		   ;
P.AFZ:	.LONG   17694738				   ;
	.ADDRESS P.AGA					   ;
P.AGC:	.ASCII  \MEASURE.TERMINAL_IO\<0>		   ;
P.AGB:	.LONG   17694739				   ;
	.ADDRESS P.AGC					   ;
P.AGE:	.ASCII  \MEASURE.TERMINAL_IO\<0>		   ;
P.AGD:	.LONG   17694739				   ;
	.ADDRESS P.AGE					   ;
P.AGG:	.ASCII  \WARNING\<0>				   ;
P.AGF:	.LONG   17694727				   ;
	.ADDRESS P.AGG					   ;
P.AGI:	.ASCII  \WARNING\<0>				   ;
P.AGH:	.LONG   17694727				   ;
	.ADDRESS P.AGI					   ;
P.AGK:	.ASCII  \LOGOUT\<0><0>				   ;
P.AGJ:	.LONG   17694726				   ;
	.ADDRESS P.AGK					   ;
P.AGM:	.ASCII  \LOGOUT\<0><0>				   ;
P.AGL:	.LONG   17694726				   ;
	.ADDRESS P.AGM					   ;
P.AGO:	.ASCII  \DISCONNECT\<0><0>			   ;
P.AGN:	.LONG   17694730				   ;
	.ADDRESS P.AGO					   ;
P.AGQ:	.ASCII  \DISCONNECT\<0><0>			   ;
P.AGP:	.LONG   17694730				   ;
	.ADDRESS P.AGQ					   ;
P.AGS:	.ASCII  \FORCE_EXIT\<0><0>			   ;
P.AGR:	.LONG   17694730				   ;
	.ADDRESS P.AGS					   ;
P.AGU:	.ASCII  \FORCE_EXIT\<0><0>			   ;
P.AGT:	.LONG   17694730				   ;
	.ADDRESS P.AGU					   ;
P.AGW:	.ASCII  \USER\					   ;
P.AGV:	.LONG   17694724				   ;
	.ADDRESS P.AGW					   ;



	.PSECT  $CODE$,NOWRT,2

U.9:
	.ENTRY  CMD_OVERRIDE, ^M<R2,R3,R4,R5,R6,R7,R8,R9,- ;CMD_OVERRIDE, Save R2,R3,R4,R5,R6,R7,R8,R9,R10,R11
		R10,R11>				   ;
	MOVAB   G^CLI$GET_VALUE, R11			   ;CLI$GET_VALUE, R11
	MOVAB   W^P.AEL, R10				   ;P.AEL, R10
	MOVL    #CLI$_PRESENT, R9			   ;#CLI$_PRESENT, R9
	MOVAB   G^CLI$PRESENT, R8			   ;CLI$PRESENT, R8
	MOVAB   -532(SP), SP				   ;-532(SP), SP
	MOVL    #17694720, 8(SP)			   ;#17694720, SSTR
	CLRL    12(SP)					   ;SSTR+4
	PUSHL   R10					   ;R10
	CALLS   #1, (R8)				   ;#1, CLI$PRESENT
	CLRL    R1					   ;R1
	CMPL    R0, R9					   ;R0, R9
	BNEQ    1$					   ;1$
	INCL    R1					   ;R1
1$:	MOVL    R1, R7					   ;R1, DEL
	MOVC5   #0, (SP), #0, #507, 24(SP)		   ;#0, (SP), #0, #507, TEMPLATE
	MOVL    #34471936, 16(SP)			   ;#34471936, _D
	CLRL    20(SP)					   ;_D+4
	PUSHAB  20(R10)					   ;P.AEN
	CALLS   #1, (R8)				   ;#1, CLI$PRESENT
	CMPL    R0, R9					   ;R0, R9
	BNEQ    3$					   ;3$
2$:	PUSHAB  16(SP)					   ;STR
	PUSHAB  40(R10)					   ;P.AEP
	CALLS   #2, (R11)				   ;#2, CLI$GET_VALUE
	BLBC    R0, 3$					   ;R0, 3$
	PUSHAB  32(SP)					   ;TEMPLATE+8
	PUSHAB  20(SP)					   ;STR
	CALLS   #2, W^ASC_TO_PRV_OR			   ;#2, ASC_TO_PRV_OR
	BRB     2$					   ;2$
3$:	PUSHAB  52(R10)					   ;P.AER
	CALLS   #1, (R8)				   ;#1, CLI$PRESENT
	CMPL    R0, R9					   ;R0, R9
	BNEQ    4$					   ;4$
	PUSHAB  16(SP)					   ;STR
	PUSHAB  64(R10)					   ;P.AET
	CALLS   #2, (R11)				   ;#2, CLI$GET_VALUE
	PUSHAB  56(SP)					   ;TEMPLATE+32
	PUSHAB  20(SP)					   ;STR
	CALLS   #2, W^CVT_ASCTOID			   ;#2, CVT_ASCTOID
	MOVL    R0, R6					   ;R0, STATUS
	BLBS    R6, 5$					   ;STATUS, 5$
	PUSHL   R6					   ;STATUS
	PUSHAB  20(SP)					   ;STR
	PUSHL   #1					   ;#1
	PUSHL   #WCP__UICERR				   ;#WCP__UICERR
	CALLS   #4, G^LIB$SIGNAL			   ;#4, LIB$SIGNAL
	PUSHAB  16(SP)					   ;STR
	CALLS   #1, G^STR$FREE1_DX			   ;#1, STR$FREE1_DX
	MOVL    #WCP__UICERR, R0			   ;#WCP__UICERR, R0
	RET     					   ;
4$:	PUSHAB  56(SP)					   ;TEMPLATE+32
	PUSHAB  80(R10)					   ;P.AEV
	CALLS   #2, W^CVT_ASCTOID			   ;#2, CVT_ASCTOID
5$:	PUSHAB  96(R10)					   ;P.AEX
	CALLS   #1, (R8)				   ;#1, CLI$PRESENT
	CMPL    R0, R9					   ;R0, R9
	BNEQ    7$					   ;7$
	PUSHAB  16(SP)					   ;STR
	PUSHAB  112(R10)				   ;P.AEZ
	CALLS   #2, (R11)				   ;#2, CLI$GET_VALUE
	MOVZWL  16(SP), R0				   ;STR, R0
	CMPW    R0, #64					   ;R0, #64
	BLEQU   6$					   ;6$
	MOVZBL  #64, R0					   ;#64, R0
6$:	MOVW    R0, 142(SP)				   ;R0, TEMPLATE+118
	MOVC3   142(SP), @20(SP), 144(SP)		   ;TEMPLATE+118, @STR+4, TEMPLATE+120
	BRB     8$					   ;8$
7$:	MOVW    #1, 142(SP)				   ;#1, TEMPLATE+118
	MOVB    #42, 144(SP)				   ;#42, TEMPLATE+120
8$:	PUSHAB  132(R10)				   ;P.AFB
	CALLS   #1, (R8)				   ;#1, CLI$PRESENT
	CMPL    R0, R9					   ;R0, R9
	BNEQ    10$					   ;10$
	PUSHAB  16(SP)					   ;STR
	PUSHAB  152(R10)				   ;P.AFD
	CALLS   #2, (R11)				   ;#2, CLI$GET_VALUE
	MOVZWL  16(SP), R0				   ;STR, R0
	CMPW    R0, #64					   ;R0, #64
	BLEQU   9$					   ;9$
	MOVZBL  #64, R0					   ;#64, R0
9$:	MOVW    R0, 208(SP)				   ;R0, TEMPLATE+184
	MOVC3   208(SP), @20(SP), 210(SP)		   ;TEMPLATE+184, @STR+4, TEMPLATE+186
	BRB     11$					   ;11$
10$:	MOVW    #1, 208(SP)				   ;#1, TEMPLATE+184
	MOVB    #42, 210(SP)				   ;#42, TEMPLATE+186
11$:	PUSHAB  168(R10)				   ;P.AFF
	CALLS   #1, (R8)				   ;#1, CLI$PRESENT
	CMPL    R0, R9					   ;R0, R9
	BNEQ    12$					   ;12$
	PUSHAB  16(SP)					   ;STR
	PUSHAB  184(R10)				   ;P.AFH
	CALLS   #2, (R11)				   ;#2, CLI$GET_VALUE
	CLRL    -(SP)					   ;-(SP)
	PUSHAB  64(SP)					   ;TEMPLATE+36
	PUSHAB  24(SP)					   ;STR
	CALLS   #3, G^SYS$ASCTOID			   ;#3, SYS$ASCTOID
	MOVL    R0, R6					   ;R0, STATUS
	BLBS    R6, 12$					   ;STATUS, 12$
	PUSHL   R6					   ;STATUS
	PUSHAB  20(SP)					   ;STR
	PUSHL   #1					   ;#1
	PUSHL   #WCP__IDERR				   ;#WCP__IDERR
	CALLS   #4, G^LIB$SIGNAL			   ;#4, LIB$SIGNAL
	PUSHAB  16(SP)					   ;STR
	CALLS   #1, G^STR$FREE1_DX			   ;#1, STR$FREE1_DX
	MOVL    #WCP__IDERR, R0				   ;#WCP__IDERR, R0
	RET     					   ;
12$:	PUSHAB  200(R10)				   ;P.AFJ
	CALLS   #1, (R8)				   ;#1, CLI$PRESENT
	CMPL    R0, R9					   ;R0, R9
	BNEQ    14$					   ;14$
13$:	PUSHAB  16(SP)					   ;STR
	PUSHAB  216(R10)				   ;P.AFL
	CALLS   #2, (R11)				   ;#2, CLI$GET_VALUE
	BLBC    R0, 16$					   ;R0, 16$
	PUSHAB  80(SP)					   ;TEMPLATE+56
	PUSHAB  W^DEFAULTS+40				   ;DEFAULTS+40
	PUSHAB  24(SP)					   ;STR
	CALLS   #3, W^PARSE_TIMES			   ;#3, PARSE_TIMES
	BRB     13$					   ;13$
14$:	CLRL    R0					   ;I
15$:	BISL2   #16777215, 80(SP)[R0]			   ;#16777215, TIMES[I]
	AOBLEQ  #6, R0, 15$				   ;#6, I, 15$
16$:	PUSHAB  232(R10)				   ;P.AFN
	CALLS   #1, (R8)				   ;#1, CLI$PRESENT
	CMPL    R0, R9					   ;R0, R9
	BNEQ    18$					   ;18$
	PUSHAB  16(SP)					   ;STR
	PUSHAB  248(R10)				   ;P.AFP
	CALLS   #2, (R11)				   ;#2, CLI$GET_VALUE
	MOVZWL  16(SP), R0				   ;STR, R0
	CMPW    R0, #255				   ;R0, #255
	BLEQU   17$					   ;17$
	MOVZBL  #255, R0				   ;#255, R0
17$:	MOVW    R0, -258(FP)				   ;R0, TEMPLATE+250
	MOVC3   -258(FP), @20(SP), -256(FP)		   ;TEMPLATE+250, @STR+4, TEMPLATE+252
	BRB     19$					   ;19$
18$:	MOVW    #1, -258(FP)				   ;#1, TEMPLATE+250
	MOVB    #42, -256(FP)				   ;#42, TEMPLATE+252
19$:	PUSHAB  264(R10)				   ;P.AFR
	CALLS   #1, (R8)				   ;#1, CLI$PRESENT
	CLRL    R1					   ;R1
	CMPL    R0, R9					   ;R0, R9
	BNEQ    20$					   ;20$
	INCL    R1					   ;R1
20$:	INSV    R1, #0, #1, 64(SP)			   ;R1, #0, #1, TEMPLATE+40
	BLBS    64(SP), 21$				   ;TEMPLATE+40, 21$
	BRW     27$					   ;27$
21$:	PUSHAB  284(R10)				   ;P.AFT
	CALLS   #1, (R8)				   ;#1, CLI$PRESENT
	CLRL    R1					   ;R1
	CMPL    R0, R9					   ;R0, R9
	BNEQ    22$					   ;22$
	INCL    R1					   ;R1
22$:	INSV    R1, #1, #1, 64(SP)			   ;R1, #1, #1, TEMPLATE+40
	BBC     #1, 64(SP), 23$				   ;#1, TEMPLATE+40, 23$
	PUSHAB  16(SP)					   ;STR
	PUSHAB  304(R10)				   ;P.AFV
	CALLS   #2, (R11)				   ;#2, CLI$GET_VALUE
	BLBC    R0, 23$					   ;R0, 23$
	TSTW    16(SP)					   ;STR
	BEQL    23$					   ;23$
	PUSHAB  68(SP)					   ;TEMPLATE+44
	PUSHL   24(SP)					   ;STR+4
	MOVZWL  24(SP), -(SP)				   ;STR, -(SP)
	CALLS   #3, G^LIB$CVT_DTB			   ;#3, LIB$CVT_DTB
23$:	PUSHAB  332(R10)				   ;P.AFX
	CALLS   #1, (R8)				   ;#1, CLI$PRESENT
	CLRL    R1					   ;R1
	CMPL    R0, R9					   ;R0, R9
	BNEQ    24$					   ;24$
	INCL    R1					   ;R1
24$:	INSV    R1, #2, #1, 64(SP)			   ;R1, #2, #1, TEMPLATE+40
	BBC     #2, 64(SP), 25$				   ;#2, TEMPLATE+40, 25$
	PUSHAB  16(SP)					   ;STR
	PUSHAB  360(R10)				   ;P.AFZ
	CALLS   #2, (R11)				   ;#2, CLI$GET_VALUE
	BLBC    R0, 25$					   ;R0, 25$
	TSTW    16(SP)					   ;STR
	BEQL    25$					   ;25$
	PUSHAB  72(SP)					   ;TEMPLATE+48
	PUSHL   24(SP)					   ;STR+4
	MOVZWL  24(SP), -(SP)				   ;STR, -(SP)
	CALLS   #3, G^LIB$CVT_DTB			   ;#3, LIB$CVT_DTB
25$:	PUSHAB  388(R10)				   ;P.AGB
	CALLS   #1, (R8)				   ;#1, CLI$PRESENT
	CLRL    R1					   ;R1
	CMPL    R0, R9					   ;R0, R9
	BNEQ    26$					   ;26$
	INCL    R1					   ;R1
26$:	INSV    R1, #3, #1, 64(SP)			   ;R1, #3, #1, TEMPLATE+40
	BBC     #3, 64(SP), 27$				   ;#3, TEMPLATE+40, 27$
	PUSHAB  16(SP)					   ;STR
	PUSHAB  416(R10)				   ;P.AGD
	CALLS   #2, (R11)				   ;#2, CLI$GET_VALUE
	BLBC    R0, 27$					   ;R0, 27$
	TSTW    16(SP)					   ;STR
	BEQL    27$					   ;27$
	PUSHAB  76(SP)					   ;TEMPLATE+52
	PUSHL   24(SP)					   ;STR+4
	MOVZWL  24(SP), -(SP)				   ;STR, -(SP)
	CALLS   #3, G^LIB$CVT_DTB			   ;#3, LIB$CVT_DTB
27$:	PUSHAB  432(R10)				   ;P.AGF
	CALLS   #1, (R8)				   ;#1, CLI$PRESENT
	MOVL    R0, R6					   ;R0, STATUS
	CLRL    R0					   ;R0
	CMPL    R6, #CLI$_ABSENT			   ;STATUS, #CLI$_ABSENT
	BEQL    28$					   ;28$
	INCL    R0					   ;R0
28$:	INSV    R0, #4, #1, 64(SP)			   ;R0, #4, #1, TEMPLATE+40
	BBC     #4, 64(SP), 31$				   ;#4, TEMPLATE+40, 31$
	CLRL    R0					   ;R0
	CMPL    R6, R9					   ;STATUS, R9
	BNEQ    29$					   ;29$
	INCL    R0					   ;R0
29$:	INSV    R0, #5, #1, 64(SP)			   ;R0, #5, #1, TEMPLATE+40
	BBC     #5, 64(SP), 31$				   ;#5, TEMPLATE+40, 31$
	PUSHAB  16(SP)					   ;STR
	PUSHAB  448(R10)				   ;P.AGH
	CALLS   #2, (R11)				   ;#2, CLI$GET_VALUE
	BLBC    R0, 30$					   ;R0, 30$
	PUSHAB  40(SP)					   ;TEMPLATE+16
	PUSHAB  20(SP)					   ;STR
	CALLS   #2, G^SYS$BINTIM			   ;#2, SYS$BINTIM
	BRB     31$					   ;31$
30$:	MOVC3   #8, W^DEFAULTS+8, 40(SP)		   ;#8, DEFAULTS+8, TEMPLATE+16
31$:	PUSHAB  464(R10)				   ;P.AGJ
	CALLS   #1, (R8)				   ;#1, CLI$PRESENT
	MOVL    R0, R6					   ;R0, STATUS
	CMPL    R6, #CLI$_ABSENT			   ;STATUS, #CLI$_ABSENT
	BEQL    34$					   ;34$
	BISB2   #64, 64(SP)				   ;#64, TEMPLATE+40
	BICB2   #3, 65(SP)				   ;#3, TEMPLATE+41
	CLRL    R0					   ;R0
	CMPL    R6, R9					   ;STATUS, R9
	BNEQ    32$					   ;32$
	INCL    R0					   ;R0
32$:	INSV    R0, #7, #1, 64(SP)			   ;R0, #7, #1, TEMPLATE+40
	TSTB    64(SP)					   ;TEMPLATE+40
	BLSS    33$					   ;33$
	BRW     40$					   ;40$
33$:	PUSHAB  16(SP)					   ;STR
	PUSHAB  480(R10)				   ;P.AGL
	BRB     38$					   ;38$
34$:	PUSHAB  500(R10)				   ;P.AGN
	CALLS   #1, (R8)				   ;#1, CLI$PRESENT
	MOVL    R0, R6					   ;R0, STATUS
	CMPL    R6, #CLI$_ABSENT			   ;STATUS, #CLI$_ABSENT
	BEQL    36$					   ;36$
	BISB2   #64, 64(SP)				   ;#64, TEMPLATE+40
	BICW2   #640, 64(SP)				   ;#640, TEMPLATE+41
	CLRL    R0					   ;R0
	CMPL    R6, R9					   ;STATUS, R9
	BNEQ    35$					   ;35$
	INCL    R0					   ;R0
35$:	INSV    R0, #0, #1, 65(SP)			   ;R0, #0, #1, TEMPLATE+41
	BLBC    65(SP), 40$				   ;TEMPLATE+41, 40$
	PUSHAB  16(SP)					   ;STR
	PUSHAB  520(R10)				   ;P.AGP
	BRB     38$					   ;38$
36$:	PUSHAB  540(R10)				   ;P.AGR
	CALLS   #1, (R8)				   ;#1, CLI$PRESENT
	MOVL    R0, R6					   ;R0, STATUS
	CMPL    R6, #CLI$_ABSENT			   ;STATUS, #CLI$_ABSENT
	BEQL    40$					   ;40$
	BISB2   #64, 64(SP)				   ;#64, TEMPLATE+40
	BICW2   #384, 64(SP)				   ;#384, TEMPLATE+41
	CLRL    R0					   ;R0
	CMPL    R6, R9					   ;STATUS, R9
	BNEQ    37$					   ;37$
	INCL    R0					   ;R0
37$:	INSV    R0, #1, #1, 65(SP)			   ;R0, #1, #1, TEMPLATE+41
	BBC     #1, 65(SP), 40$				   ;#1, TEMPLATE+41, 40$
	PUSHAB  16(SP)					   ;STR
	PUSHAB  560(R10)				   ;P.AGT
38$:	CALLS   #2, (R11)				   ;#2, CLI$GET_VALUE
	BLBC    R0, 39$					   ;R0, 39$
	PUSHAB  48(SP)					   ;TEMPLATE+24
	PUSHAB  20(SP)					   ;STR
	CALLS   #2, G^SYS$BINTIM			   ;#2, SYS$BINTIM
	BRB     40$					   ;40$
39$:	MOVC3   #8, W^DEFAULTS+16, 48(SP)		   ;#8, DEFAULTS+16, TEMPLATE+24
40$:	PUSHAB  16(SP)					   ;STR
	PUSHAB  572(R10)				   ;P.AGV
	CALLS   #2, (R11)				   ;#2, CLI$GET_VALUE
	BLBS    R0, 41$					   ;R0, 41$
	BRW     49$					   ;49$
41$:	MOVL    W^OVRQUE, 4(SP)				   ;OVRQUE, EXC
42$:	MOVL    4(SP), R4				   ;EXC, R4
	MOVAB   W^OVRQUE, R0				   ;OVRQUE, R0
	CMPL    R4, R0					   ;R4, R0
	BEQL    44$					   ;44$
	CMPC5   16(SP), @20(SP), #32, 84(R4), 86(R4)	   ;STR, @STR+4, #32, 84(R4), 86(R4)
	BNEQ    43$					   ;43$
	CMPL    56(SP), 32(R4)				   ;TEMPLATE+32, 32(R4)
	BNEQ    43$					   ;43$
	CMPL    60(SP), 36(R4)				   ;TEMPLATE+36, 36(R4)
	BNEQ    43$					   ;43$
	CMPC5   142(SP), 144(SP), #32, 118(R4), 120(R4)    ;TEMPLATE+118, TEMPLATE+120, #32, 118(R4), 120(R4)
	BNEQ    43$					   ;43$
	CMPC5   208(SP), 210(SP), #32, 184(R4), 186(R4)    ;TEMPLATE+184, TEMPLATE+186, #32, 184(R4), 186(R4)
	BNEQ    43$					   ;43$
	CMPC5   -258(FP), -256(FP), #32, 250(R4), 252(R4)  ;TEMPLATE+250, TEMPLATE+252, #32, 250(R4), 252(R4)
	BNEQ    43$					   ;43$
	CMPC3   #28, 80(SP), 56(R4)			   ;#28, TEMPLATE+56, 56(R4)
	BEQL    44$					   ;44$
43$:	MOVL    (R4), 4(SP)				   ;(R4), EXC
	BRB     42$					   ;42$
44$:	BLBC    R7, 46$					   ;DEL, 46$
	MOVAB   W^OVRQUE, R0				   ;OVRQUE, R0
	CMPL    4(SP), R0				   ;EXC, R0
	BNEQ    45$					   ;45$
	PUSHAB  16(SP)					   ;STR
	PUSHL   #1					   ;#1
	PUSHL   #WCP__RECNOTFOUND			   ;#WCP__RECNOTFOUND
	CALLS   #3, G^LIB$SIGNAL			   ;#3, LIB$SIGNAL
	PUSHAB  16(SP)					   ;STR
	CALLS   #1, G^STR$FREE1_DX			   ;#1, STR$FREE1_DX
	MOVL    #WCP__RECNOTFOUND, R0			   ;#WCP__RECNOTFOUND, R0
	RET     					   ;
45$:	REMQUE  @4(SP), 4(SP)				   ;@EXC, EXC
	PUSHAB  4(SP)					   ;EXC
	MOVZWL  #507, 4(SP)				   ;#507, 4(SP)
	PUSHAB  4(SP)					   ;4(SP)
	CALLS   #2, G^LIB$FREE_VM			   ;#2, LIB$FREE_VM
	BRB     48$					   ;48$
46$:	MOVAB   W^OVRQUE, R0				   ;OVRQUE, R0
	CMPL    4(SP), R0				   ;EXC, R0
	BNEQ    47$					   ;47$
	PUSHAB  4(SP)					   ;EXC
	MOVZWL  #507, 4(SP)				   ;#507, 4(SP)
	PUSHAB  4(SP)					   ;4(SP)
	CALLS   #2, G^LIB$GET_VM			   ;#2, LIB$GET_VM
	INSQUE  @4(SP), @W^OVRQUE+4			   ;@EXC, @OVRQUE+4
47$:	MOVL    4(SP), R6				   ;EXC, R6
	MOVC3   #499, 32(SP), 8(R6)			   ;#499, TEMPLATE+8, 8(R6)
	MOVW    16(SP), 84(R6)				   ;STR, 84(R6)
	MOVC3   16(SP), @20(SP), 86(R6)			   ;STR, @STR+4, 86(R6)
48$:	MOVL    #1, W^CFG_CHANGED			   ;#1, CFG_CHANGED
	BRW     40$					   ;40$
49$:	PUSHAB  16(SP)					   ;STR
	CALLS   #1, G^STR$FREE1_DX			   ;#1, STR$FREE1_DX
	MOVL    #1, R0					   ;#1, R0
	RET     					   ;

; Routine Size:  1315 bytes,    Routine Base:  $CODE$ + 0B32





	.PSECT  $PLIT$,NOWRT,NOEXE,2

P.AGY:	.ASCII  \INTERVAL\				   ;
P.AGX:	.LONG   17694728				   ;
	.ADDRESS P.AGY					   ;
P.AHA:	.ASCII  \BELL\					   ;
P.AGZ:	.LONG   17694724				   ;
	.ADDRESS P.AHA					   ;
P.AHC:	.ASCII  \NOBELL\<0><0>				   ;
P.AHB:	.LONG   17694726				   ;
	.ADDRESS P.AHC					   ;
P.AHE:	.ASCII  \DEBUG\<0><0><0>			   ;
P.AHD:	.LONG   17694725				   ;
	.ADDRESS P.AHE					   ;
P.AHG:	.ASCII  \NODEBUG\<0>				   ;
P.AHF:	.LONG   17694727				   ;
	.ADDRESS P.AHG					   ;
P.AHI:	.ASCII  \VERIFY\<0><0>				   ;
P.AHH:	.LONG   17694726				   ;
	.ADDRESS P.AHI					   ;
P.AHK:	.ASCII  \NOVERIFY\				   ;
P.AHJ:	.LONG   17694728				   ;
	.ADDRESS P.AHK					   ;
P.AHM:	.ASCII  \DECWINDOWS\<0><0>			   ;
P.AHL:	.LONG   17694730				   ;
	.ADDRESS P.AHM					   ;
P.AHO:	.ASCII  \NODECWINDOWS\				   ;
P.AHN:	.LONG   17694732				   ;
	.ADDRESS P.AHO					   ;
P.AHQ:	.ASCII  \ACTION\<0><0>				   ;
P.AHP:	.LONG   17694726				   ;
	.ADDRESS P.AHQ					   ;
P.AHS:	.ASCII  \NOACTION\				   ;
P.AHR:	.LONG   17694728				   ;
	.ADDRESS P.AHS					   ;
P.AHU:	.ASCII  \INSWAP\<0><0>				   ;
P.AHT:	.LONG   17694726				   ;
	.ADDRESS P.AHU					   ;
P.AHW:	.ASCII  \NOINSWAP\				   ;
P.AHV:	.LONG   17694728				   ;
	.ADDRESS P.AHW					   ;
;OPTIONS
U.39:	.ADDRESS P.AGX, P.AGZ, P.AHB, P.AHD, P.AHF, P.AHH, P.AHJ, P.AHL, P.AHN, P.AHP, P.AHR, P.AHT, P.AHV
							   ;
P.AHY:	.ASCII  \SET_OPT\<0>				   ;
P.AHX:	.LONG   17694727				   ;
	.ADDRESS P.AHY					   ;

	.EXTRN  STR$COPY_R, STR$POSITION

	.PSECT  $CODE$,NOWRT,2

U.10:
	.ENTRY  CMD_SET, ^M<R2,R3,R4,R5>		   ;CMD_SET, Save R2,R3,R4,R5
	MOVAB   G^STR$FREE1_DX, R5			   ;STR$FREE1_DX, R5
	MOVAB   G^STR$COPY_R, R4			   ;STR$COPY_R, R4
	MOVAB   W^GLOBALS+16, R3			   ;GLOBALS+16, R3
	SUBL2   #24, SP					   ;#24, SP
	MOVL    #34471936, 16(SP)			   ;#34471936, _D
	CLRL    20(SP)					   ;_D+4
	MOVL    #34471936, 8(SP)			   ;#34471936, _D
	CLRL    12(SP)					   ;_D+4
	PUSHAB  16(SP)					   ;STR
	PUSHAB  W^P.AHX					   ;P.AHX
	CALLS   #2, G^CLI$GET_VALUE			   ;#2, CLI$GET_VALUE
	LOCC    #61, 16(SP), @20(SP)			   ;#61, STR, @STR+4
	BNEQ    1$					   ;1$
	CLRL    R1					   ;R1
1$:	MOVL    R1, R2					   ;R1, EQSIGN
	BNEQ    2$					   ;2$
	PUSHAB  16(SP)					   ;STR
	PUSHAB  12(SP)					   ;OPT
	CALLS   #2, G^STR$COPY_DX			   ;#2, STR$COPY_DX
	BRB     3$					   ;3$
2$:	SUBW3   20(SP), R2, 4(SP)			   ;STR+4, EQSIGN, OPTLEN
	PUSHL   20(SP)					   ;STR+4
	PUSHAB  8(SP)					   ;OPTLEN
	PUSHAB  16(SP)					   ;OPT
	CALLS   #3, (R4)				   ;#3, STR$COPY_R
	PUSHAB  1(R2)					   ;1(EQSIGN)
	MOVZWL  20(SP), R0				   ;STR, R0
	MOVZWL  8(SP), R1				   ;OPTLEN, R1
	SUBL2   R1, R0					   ;R1, R0
	MOVAB   -1(R0), 4(SP)				   ;-1(R0), 4(SP)
	PUSHAB  4(SP)					   ;4(SP)
	PUSHAB  24(SP)					   ;STR
	CALLS   #3, (R4)				   ;#3, STR$COPY_R
3$:	CLRL    R2					   ;I
4$:	PUSHAB  8(SP)					   ;OPT
	PUSHL   W^U.39[R2]				   ;U.39[I]
	CALLS   #2, G^STR$POSITION			   ;#2, STR$POSITION
	CMPL    R0, #1					   ;R0, #1
	BEQL    5$					   ;5$
	AOBLEQ  #12, R2, 4$				   ;#12, I, 4$
	MNEGL   #1, R2					   ;#1, IDX
5$:	CASEL   R2, #0, #12				   ;IDX, #0, #12
6$:	.WORD   7$-6$,-					   ;7$-6$,-
		8$-6$,-					   ;8$-6$,-
		9$-6$,-					   ;9$-6$,-
		10$-6$,-				   ;10$-6$,-
		11$-6$,-				   ;11$-6$,-
		12$-6$,-				   ;12$-6$,-
		13$-6$,-				   ;13$-6$,-
		14$-6$,-				   ;14$-6$,-
		15$-6$,-				   ;15$-6$,-
		16$-6$,-				   ;16$-6$,-
		17$-6$,-				   ;17$-6$,-
		18$-6$,-				   ;18$-6$,-
		19$-6$					   ;19$-6$
	BRB     21$					   ;21$
7$:	PUSHAB  -12(R3)					   ;GLOBALS+4
	PUSHAB  20(SP)					   ;STR
	CALLS   #2, G^SYS$BINTIM			   ;#2, SYS$BINTIM
	BRB     20$					   ;20$
8$:	BISB2   #4, (R3)				   ;#4, GLOBALS+16
	BRB     20$					   ;20$
9$:	BICB2   #4, (R3)				   ;#4, GLOBALS+16
	BRB     20$					   ;20$
10$:	BISB2   #16, (R3)				   ;#16, GLOBALS+16
	PUSHAB  4(R3)					   ;GLOBALS+20
	PUSHL   24(SP)					   ;STR+4
	MOVZWL  24(SP), -(SP)				   ;STR, -(SP)
	CALLS   #3, G^LIB$CVT_DTB			   ;#3, LIB$CVT_DTB
	TSTL    4(R3)					   ;GLOBALS+20
	BNEQ    20$					   ;20$
	MOVL    #7, 4(R3)				   ;#7, GLOBALS+20
	BRB     20$					   ;20$
11$:	BICB2   #16, (R3)				   ;#16, GLOBALS+16
	BRB     20$					   ;20$
12$:	BISB2   #64, 304(R3)				   ;#64, DEFAULTS+24
	BRB     21$					   ;21$
13$:	BICB2   #64, 304(R3)				   ;#64, DEFAULTS+24
	BRB     21$					   ;21$
14$:	BISB2   #32, (R3)				   ;#32, GLOBALS+16
	BRB     20$					   ;20$
15$:	BICB2   #32, (R3)				   ;#32, GLOBALS+16
	BRB     20$					   ;20$
16$:	BICB2   #128, (R3)				   ;#128, GLOBALS+16
	BRB     20$					   ;20$
17$:	BISB2   #128, (R3)				   ;#128, GLOBALS+16
	BRB     20$					   ;20$
18$:	BICB2   #1, 1(R3)				   ;#1, GLOBALS+17
	BRB     20$					   ;20$
19$:	BISB2   #1, 1(R3)				   ;#1, GLOBALS+17
20$:	MOVL    #1, 324(R3)				   ;#1, CFG_CHANGED
21$:	PUSHAB  16(SP)					   ;STR
	CALLS   #1, (R5)				   ;#1, STR$FREE1_DX
	PUSHAB  8(SP)					   ;OPT
	CALLS   #1, (R5)				   ;#1, STR$FREE1_DX
	MOVL    #1, R0					   ;#1, R0
	RET     					   ;

; Routine Size:  327 bytes,    Routine Base:  $CODE$ + 1055





	.PSECT  $PLIT$,NOWRT,NOEXE,2

P.AIA:	.ASCII  \EVENT_LOG\<0><0><0>			   ;
P.AHZ:	.LONG   17694729				   ;
	.ADDRESS P.AIA					   ;
P.AIC:	.ASCII  \OPERATOR\				   ;
P.AIB:	.LONG   17694728				   ;
	.ADDRESS P.AIC					   ;
P.AIE:	.ASCII  \OPERATOR\				   ;
P.AID:	.LONG   17694728				   ;
	.ADDRESS P.AIE					   ;
P.AIG:	.ASCII  \FILE\					   ;
P.AIF:	.LONG   17694724				   ;
	.ADDRESS P.AIG					   ;
P.AII:	.ASCII  \FILE\					   ;
P.AIH:	.LONG   17694724				   ;
	.ADDRESS P.AII					   ;



	.PSECT  $CODE$,NOWRT,2

U.11:
	.ENTRY  CMD_SET_EVENT, ^M<R2,R3,R4,R5,R6,R7,R8,R9,-;CMD_SET_EVENT, Save R2,R3,R4,R5,R6,R7,R8,R9,R10
		R10>					   ;
	MOVAB   G^CLI$GET_VALUE, R10			   ;CLI$GET_VALUE, R10
	MOVL    #CLI$_PRESENT, R9			   ;#CLI$_PRESENT, R9
	MOVAB   W^P.AHZ, R8				   ;P.AHZ, R8
	MOVAB   G^CLI$PRESENT, R7			   ;CLI$PRESENT, R7
	MOVAB   W^GLOBALS+16, R6			   ;GLOBALS+16, R6
	SUBL2   #8, SP					   ;#8, SP
	CLRL    -4(R6)					   ;GLOBALS+12
	BICB2   #1, (R6)				   ;#1, GLOBALS+16
	CLRW    8(R6)					   ;GLOBALS+24
	BICB2   #2, (R6)				   ;#2, GLOBALS+16
	MOVL    #1, 324(R6)				   ;#1, CFG_CHANGED
	PUSHL   R8					   ;R8
	CALLS   #1, (R7)				   ;#1, CLI$PRESENT
	CMPL    R0, #CLI$_NEGATED			   ;R0, #CLI$_NEGATED
	BEQL    5$					   ;5$
	MOVL    #34471936, (SP)				   ;#34471936, _D
	CLRL    4(SP)					   ;_D+4
	PUSHAB  16(R8)					   ;P.AIB
	CALLS   #1, (R7)				   ;#1, CLI$PRESENT
	CMPL    R0, R9					   ;R0, R9
	BNEQ    2$					   ;2$
	BISB2   #1, (R6)				   ;#1, GLOBALS+16
1$:	PUSHL   SP					   ;SP
	PUSHAB  32(R8)					   ;P.AID
	CALLS   #2, (R10)				   ;#2, CLI$GET_VALUE
	BLBC    R0, 2$					   ;R0, 2$
	PUSHAB  -4(R6)					   ;GLOBALS+12
	PUSHAB  4(SP)					   ;STR
	CALLS   #2, W^ASC_TO_OPC_OR			   ;#2, ASC_TO_OPC_OR
	BRB     1$					   ;1$
2$:	PUSHAB  44(R8)					   ;P.AIF
	CALLS   #1, (R7)				   ;#1, CLI$PRESENT
	CMPL    R0, R9					   ;R0, R9
	BNEQ    4$					   ;4$
	BISB2   #2, (R6)				   ;#2, GLOBALS+16
	PUSHL   SP					   ;SP
	PUSHAB  56(R8)					   ;P.AIH
	CALLS   #2, (R10)				   ;#2, CLI$GET_VALUE
	MOVZWL  (SP), R0				   ;STR, R0
	CMPW    R0, #255				   ;R0, #255
	BLEQU   3$					   ;3$
	MOVZBL  #255, R0				   ;#255, R0
3$:	MOVW    R0, 8(R6)				   ;R0, GLOBALS+24
	MOVC3   8(R6), @4(SP), 10(R6)			   ;GLOBALS+24, @STR+4, GLOBALS+26
4$:	PUSHL   SP					   ;SP
	CALLS   #1, G^STR$FREE1_DX			   ;#1, STR$FREE1_DX
5$:	MOVL    #1, R0					   ;#1, R0
	RET     					   ;

; Routine Size:  175 bytes,    Routine Base:  $CODE$ + 119C





	.PSECT  $PLIT$,NOWRT,NOEXE,2

P.AIK:	.ASCII  \MULTIWARN\<0><0><0>			   ;
P.AIJ:	.LONG   17694729				   ;
	.ADDRESS P.AIK					   ;
P.AIM:	.ASCII  \INTERVAL\				   ;
P.AIL:	.LONG   17694728				   ;
	.ADDRESS P.AIM					   ;
P.AIO:	.ASCII  \INTERVAL\				   ;
P.AIN:	.LONG   17694728				   ;
	.ADDRESS P.AIO					   ;



	.PSECT  $CODE$,NOWRT,2

U.12:
	.ENTRY  CMD_SET_MULTIWARN, ^M<R2,R3,R4,R5,R6,R7>   ;CMD_SET_MULTIWARN, Save R2,R3,R4,R5,R6,R7
	MOVAB   G^CLI$PRESENT, R7			   ;CLI$PRESENT, R7
	MOVAB   W^GLOBALS+16, R6			   ;GLOBALS+16, R6
	SUBL2   #16, SP					   ;#16, SP
	PUSHAB  W^P.AIJ					   ;P.AIJ
	CALLS   #1, (R7)				   ;#1, CLI$PRESENT
	CMPL    R0, #CLI$_NEGATED			   ;R0, #CLI$_NEGATED
	BNEQ    1$					   ;1$
	BBC     #6, (R6), 3$				   ;#6, GLOBALS+16, 3$
	MOVL    #1, 324(R6)				   ;#1, CFG_CHANGED
	BICB2   #64, (R6)				   ;#64, GLOBALS+16
	BRB     3$					   ;3$
1$:	EXTZV   #6, #1, (R6), R0			   ;#6, #1, GLOBALS+16, R0
	BICL2   324(R6), R0				   ;CFG_CHANGED, R0
	MCOML   R0, 324(R6)				   ;R0, CFG_CHANGED
	BISB2   #64, (R6)				   ;#64, GLOBALS+16
	PUSHAB  W^P.AIL					   ;P.AIL
	CALLS   #1, (R7)				   ;#1, CLI$PRESENT
	CMPL    R0, #CLI$_PRESENT			   ;R0, #CLI$_PRESENT
	BNEQ    3$					   ;3$
	MOVL    #34471936, 8(SP)			   ;#34471936, _D
	CLRL    12(SP)					   ;_D+4
	PUSHAB  8(SP)					   ;STR
	PUSHAB  W^P.AIN					   ;P.AIN
	CALLS   #2, G^CLI$GET_VALUE			   ;#2, CLI$GET_VALUE
	PUSHL   SP					   ;SP
	PUSHAB  12(SP)					   ;STR
	CALLS   #2, G^SYS$BINTIM			   ;#2, SYS$BINTIM
	CLRL    R4					   ;R4
	CMPC3   #8, (SP), 272(R6)			   ;#8, TMPQ, GLOBALS+288
	BEQL    2$					   ;2$
	INCL    R4					   ;R4
2$:	BISL2   R4, 324(R6)				   ;R4, CFG_CHANGED
	MOVC3   #8, (SP), 272(R6)			   ;#8, TMPQ, GLOBALS+288
	PUSHAB  8(SP)					   ;STR
	CALLS   #1, G^STR$FREE1_DX			   ;#1, STR$FREE1_DX
3$:	MOVL    #1, R0					   ;#1, R0
	RET     					   ;

; Routine Size:  157 bytes,    Routine Base:  $CODE$ + 124B





	.PSECT  $PLIT$,NOWRT,NOEXE,2

P.AIQ:	.ASCII  \MONDAY\<0><0>				   ;
P.AIP:	.LONG   17694726				   ;
	.ADDRESS P.AIQ					   ;
P.AIS:	.ASCII  \TUESDAY\<0>				   ;
P.AIR:	.LONG   17694727				   ;
	.ADDRESS P.AIS					   ;
P.AIU:	.ASCII  \WEDNESDAY\<0><0><0>			   ;
P.AIT:	.LONG   17694729				   ;
	.ADDRESS P.AIU					   ;
P.AIW:	.ASCII  \THURSDAY\				   ;
P.AIV:	.LONG   17694728				   ;
	.ADDRESS P.AIW					   ;
P.AIY:	.ASCII  \FRIDAY\<0><0>				   ;
P.AIX:	.LONG   17694726				   ;
	.ADDRESS P.AIY					   ;
P.AJA:	.ASCII  \SATURDAY\				   ;
P.AIZ:	.LONG   17694728				   ;
	.ADDRESS P.AJA					   ;
P.AJC:	.ASCII  \SUNDAY\<0><0>				   ;
P.AJB:	.LONG   17694726				   ;
	.ADDRESS P.AJC					   ;
;DAYS
U.44:	.ADDRESS P.AIP, P.AIR, P.AIT, P.AIV, P.AIX, P.AIZ, P.AJB
							   ;
P.AJE:	.ASCII  \PRIMARY\<0>				   ;
P.AJD:	.LONG   17694727				   ;
	.ADDRESS P.AJE					   ;
P.AJG:	.ASCII  \PRIMARY\<0>				   ;
P.AJF:	.LONG   17694727				   ;
	.ADDRESS P.AJG					   ;
P.AJI:	.ASCII  \SECONDARY\<0><0><0>			   ;
P.AJH:	.LONG   17694729				   ;
	.ADDRESS P.AJI					   ;

U.47=		    DEFAULTS+40


	.PSECT  $CODE$,NOWRT,2

U.13:
	.ENTRY  CMD_SET_DAYS, ^M<R2,R3,R4,R5,R6,R7>	   ;CMD_SET_DAYS, Save R2,R3,R4,R5,R6,R7
	MOVAB   W^DEFAULTS+40, R7			   ;DEFAULTS+40, R7
	MOVAB   G^STR$FREE1_DX, R6			   ;STR$FREE1_DX, R6
	MOVAB   G^STR$COPY_DX, R5			   ;STR$COPY_DX, R5
	SUBL2   #12, SP					   ;#12, SP
	MOVL    #34471936, 4(SP)			   ;#34471936, _D
	CLRL    8(SP)					   ;_D+4
	PUSHL   #34471936				   ;#34471936
	CLRL    4(SP)					   ;_D+4
	PUSHAB  W^P.AJD					   ;P.AJD
	CALLS   #1, G^CLI$PRESENT			   ;#1, CLI$PRESENT
	CLRL    R1					   ;R1
	CMPL    R0, #CLI$_PRESENT			   ;R0, #CLI$_PRESENT
	BNEQ    1$					   ;1$
	INCL    R1					   ;R1
1$:	MOVL    R1, R4					   ;R1, PRIME
	BLBC    R4, 2$					   ;PRIME, 2$
	PUSHAB  W^P.AJF					   ;P.AJF
	PUSHAB  4(SP)					   ;QUAL
	CALLS   #2, (R5)				   ;#2, STR$COPY_DX
	CLRB    (R7)					   ;DEFAULTS+40
	BRB     3$					   ;3$
2$:	PUSHAB  W^P.AJH					   ;P.AJH
	PUSHAB  4(SP)					   ;QUAL
	CALLS   #2, (R5)				   ;#2, STR$COPY_DX
	MNEGB   #1, (R7)				   ;#1, DEFAULTS+40
3$:	PUSHAB  8(SP)					   ;STR
	PUSHAB  4(SP)					   ;QUAL
	CALLS   #2, G^CLI$GET_VALUE			   ;#2, CLI$GET_VALUE
	BLBC    R0, 7$					   ;R0, 7$
	CLRL    R2					   ;I
4$:	PUSHAB  8(SP)					   ;STR
	PUSHL   W^U.44[R2]				   ;U.44[I]
	CALLS   #2, G^STR$POSITION			   ;#2, STR$POSITION
	CMPL    R0, #1					   ;R0, #1
	BNEQ    5$					   ;5$
	MOVL    R2, R3					   ;I, DAY
	BRB     6$					   ;6$
5$:	AOBLEQ  #6, R2, 4$				   ;#6, I, 4$
	MNEGL   #1, R3					   ;#1, DAY
6$:	BLSS    3$					   ;3$
	INSV    R4, R3, #1, (R7)			   ;PRIME, DAY, #1, DAYMASK
	BRB     3$					   ;3$
7$:	PUSHAB  8(SP)					   ;STR
	CALLS   #1, (R6)				   ;#1, STR$FREE1_DX
	PUSHL   SP					   ;SP
	CALLS   #1, (R6)				   ;#1, STR$FREE1_DX
	MOVL    #1, R0					   ;#1, R0
	RET     					   ;

; Routine Size:  175 bytes,    Routine Base:  $CODE$ + 12E8





	.PSECT  $PLIT$,NOWRT,NOEXE,2

P.AJK:	.ASCII  \WARNING\<0>				   ;
P.AJJ:	.LONG   17694727				   ;
	.ADDRESS P.AJK					   ;
P.AJM:	.ASCII  \WARNING\<0>				   ;
P.AJL:	.LONG   17694727				   ;
	.ADDRESS P.AJM					   ;
P.AJO:	.ASCII  \0 00:25:00\<0><0>			   ;
P.AJN:	.LONG   17694730				   ;
	.ADDRESS P.AJO					   ;
P.AJQ:	.ASCII  \LOGOUT\<0><0>				   ;
P.AJP:	.LONG   17694726				   ;
	.ADDRESS P.AJQ					   ;
P.AJS:	.ASCII  \LOGOUT\<0><0>				   ;
P.AJR:	.LONG   17694726				   ;
	.ADDRESS P.AJS					   ;
P.AJU:	.ASCII  \0 00:30:00\<0><0>			   ;
P.AJT:	.LONG   17694730				   ;
	.ADDRESS P.AJU					   ;
P.AJW:	.ASCII  \DISCONNECT\<0><0>			   ;
P.AJV:	.LONG   17694730				   ;
	.ADDRESS P.AJW					   ;
P.AJY:	.ASCII  \DISCONNECT\<0><0>			   ;
P.AJX:	.LONG   17694730				   ;
	.ADDRESS P.AJY					   ;
P.AKA:	.ASCII  \0 00:30:00\<0><0>			   ;
P.AJZ:	.LONG   17694730				   ;
	.ADDRESS P.AKA					   ;
P.AKC:	.ASCII  \FORCE_EXIT\<0><0>			   ;
P.AKB:	.LONG   17694730				   ;
	.ADDRESS P.AKC					   ;
P.AKE:	.ASCII  \FORCE_EXIT\<0><0>			   ;
P.AKD:	.LONG   17694730				   ;
	.ADDRESS P.AKE					   ;
P.AKG:	.ASCII  \0 00:30:00\<0><0>			   ;
P.AKF:	.LONG   17694730				   ;
	.ADDRESS P.AKG					   ;
P.AKI:	.ASCII  \MEASURE\<0>				   ;
P.AKH:	.LONG   17694727				   ;
	.ADDRESS P.AKI					   ;
P.AKK:	.ASCII  \MEASURE.CPU\<0>			   ;
P.AKJ:	.LONG   17694731				   ;
	.ADDRESS P.AKK					   ;
P.AKM:	.ASCII  \MEASURE.CPU\<0>			   ;
P.AKL:	.LONG   17694731				   ;
	.ADDRESS P.AKM					   ;
P.AKO:	.ASCII  \MEASURE.PROCESS_IO\<0><0>		   ;
P.AKN:	.LONG   17694738				   ;
	.ADDRESS P.AKO					   ;
P.AKQ:	.ASCII  \MEASURE.PROCESS_IO\<0><0>		   ;
P.AKP:	.LONG   17694738				   ;
	.ADDRESS P.AKQ					   ;
P.AKS:	.ASCII  \MEASURE.TERMINAL_IO\<0>		   ;
P.AKR:	.LONG   17694739				   ;
	.ADDRESS P.AKS					   ;
P.AKU:	.ASCII  \MEASURE.TERMINAL_IO\<0>		   ;
P.AKT:	.LONG   17694739				   ;
	.ADDRESS P.AKU					   ;



	.PSECT  $CODE$,NOWRT,2

U.14:
	.ENTRY  CMD_SET_WATCH, ^M<R2,R3,R4,R5,R6,R7,R8,R9,-;CMD_SET_WATCH, Save R2,R3,R4,R5,R6,R7,R8,R9,R10
		R10>					   ;
	MOVAB   G^LIB$CVT_DTB, R10			   ;LIB$CVT_DTB, R10
	MOVL    #CLI$_NEGATED, R9			   ;#CLI$_NEGATED, R9
	MOVAB   G^SYS$BINTIM, R8			   ;SYS$BINTIM, R8
	MOVAB   G^CLI$GET_VALUE, R7			   ;CLI$GET_VALUE, R7
	MOVL    #CLI$_PRESENT, R6			   ;#CLI$_PRESENT, R6
	MOVAB   G^CLI$PRESENT, R5			   ;CLI$PRESENT, R5
	MOVAB   W^P.AJJ, R4				   ;P.AJJ, R4
	MOVAB   W^DEFAULTS+24, R3			   ;DEFAULTS+24, R3
	SUBL2   #4, SP					   ;#4, SP
	PUSHL   #34471936				   ;#34471936
	CLRL    4(SP)					   ;_D+4
	PUSHL   R4					   ;R4
	CALLS   #1, (R5)				   ;#1, CLI$PRESENT
	MOVL    R0, R2					   ;R0, STATUS
	CMPL    R2, R6					   ;STATUS, R6
	BNEQ    3$					   ;3$
	BISB2   #8, (R3)				   ;#8, DEFAULTS+24
	PUSHL   SP					   ;SP
	PUSHAB  16(R4)					   ;P.AJL
	CALLS   #2, (R7)				   ;#2, CLI$GET_VALUE
	BLBC    R0, 1$					   ;R0, 1$
	PUSHAB  -16(R3)					   ;DEFAULTS+8
	PUSHAB  4(SP)					   ;STR
	BRB     2$					   ;2$
1$:	PUSHAB  -16(R3)					   ;DEFAULTS+8
	PUSHAB  36(R4)					   ;P.AJN
2$:	CALLS   #2, (R8)				   ;#2, SYS$BINTIM
	BRB     4$					   ;4$
3$:	CMPL    R2, R9					   ;STATUS, R9
	BNEQ    4$					   ;4$
	BICB2   #8, (R3)				   ;#8, DEFAULTS+24
4$:	PUSHAB  52(R4)					   ;P.AJP
	CALLS   #1, (R5)				   ;#1, CLI$PRESENT
	MOVL    R0, R2					   ;R0, STATUS
	CMPL    R2, R6					   ;STATUS, R6
	BNEQ    7$					   ;7$
	BISB2   #16, (R3)				   ;#16, DEFAULTS+24
	BICB2   #160, (R3)				   ;#160, DEFAULTS+24
	PUSHL   SP					   ;SP
	PUSHAB  68(R4)					   ;P.AJR
	CALLS   #2, (R7)				   ;#2, CLI$GET_VALUE
	BLBC    R0, 5$					   ;R0, 5$
	PUSHAB  -8(R3)					   ;DEFAULTS+16
	PUSHAB  4(SP)					   ;STR
	BRB     6$					   ;6$
5$:	PUSHAB  -8(R3)					   ;DEFAULTS+16
	PUSHAB  88(R4)					   ;P.AJT
6$:	CALLS   #2, (R8)				   ;#2, SYS$BINTIM
	BRB     8$					   ;8$
7$:	CMPL    R2, R9					   ;STATUS, R9
	BNEQ    8$					   ;8$
	BICB2   #176, (R3)				   ;#176, DEFAULTS+24
8$:	PUSHAB  108(R4)					   ;P.AJV
	CALLS   #1, (R5)				   ;#1, CLI$PRESENT
	MOVL    R0, R2					   ;R0, STATUS
	CMPL    R2, R6					   ;STATUS, R6
	BNEQ    11$					   ;11$
	BISB2   #32, (R3)				   ;#32, DEFAULTS+24
	BICB2   #144, (R3)				   ;#144, DEFAULTS+24
	PUSHL   SP					   ;SP
	PUSHAB  128(R4)					   ;P.AJX
	CALLS   #2, (R7)				   ;#2, CLI$GET_VALUE
	BLBC    R0, 9$					   ;R0, 9$
	PUSHAB  -8(R3)					   ;DEFAULTS+16
	PUSHAB  4(SP)					   ;STR
	BRB     10$					   ;10$
9$:	PUSHAB  -8(R3)					   ;DEFAULTS+16
	PUSHAB  148(R4)					   ;P.AJZ
10$:	CALLS   #2, (R8)				   ;#2, SYS$BINTIM
	BRB     12$					   ;12$
11$:	CMPL    R2, R9					   ;STATUS, R9
	BNEQ    12$					   ;12$
	BICB2   #176, (R3)				   ;#176, DEFAULTS+24
12$:	PUSHAB  168(R4)					   ;P.AKB
	CALLS   #1, (R5)				   ;#1, CLI$PRESENT
	MOVL    R0, R2					   ;R0, STATUS
	CMPL    R2, R6					   ;STATUS, R6
	BNEQ    15$					   ;15$
	BISB2   #128, (R3)				   ;#128, DEFAULTS+24
	BICB2   #48, (R3)				   ;#48, DEFAULTS+24
	PUSHL   SP					   ;SP
	PUSHAB  188(R4)					   ;P.AKD
	CALLS   #2, (R7)				   ;#2, CLI$GET_VALUE
	BLBC    R0, 13$					   ;R0, 13$
	PUSHAB  -8(R3)					   ;DEFAULTS+16
	PUSHAB  4(SP)					   ;STR
	BRB     14$					   ;14$
13$:	PUSHAB  -8(R3)					   ;DEFAULTS+16
	PUSHAB  208(R4)					   ;P.AKF
14$:	CALLS   #2, (R8)				   ;#2, SYS$BINTIM
	BRB     16$					   ;16$
15$:	CMPL    R2, R9					   ;STATUS, R9
	BNEQ    16$					   ;16$
	BICB2   #176, (R3)				   ;#176, DEFAULTS+24
16$:	PUSHAB  224(R4)					   ;P.AKH
	CALLS   #1, (R5)				   ;#1, CLI$PRESENT
	CMPL    R0, R6					   ;R0, R6
	BEQL    17$					   ;17$
	BRW     23$					   ;23$
17$:	CLRQ    8(R3)					   ;DEFAULTS+32
	CLRL    4(R3)					   ;DEFAULTS+28
	BICB2   #7, (R3)				   ;#7, DEFAULTS+24
	PUSHAB  244(R4)					   ;P.AKJ
	CALLS   #1, (R5)				   ;#1, CLI$PRESENT
	CLRL    R1					   ;R1
	CMPL    R0, R6					   ;R0, R6
	BNEQ    18$					   ;18$
	INCL    R1					   ;R1
18$:	INSV    R1, #0, #1, (R3)			   ;R1, #0, #1, DEFAULTS+24
	BLBC    (R3), 19$				   ;DEFAULTS+24, 19$
	PUSHL   SP					   ;SP
	PUSHAB  264(R4)					   ;P.AKL
	CALLS   #2, (R7)				   ;#2, CLI$GET_VALUE
	BLBC    R0, 19$					   ;R0, 19$
	TSTW    (SP)					   ;STR
	BEQL    19$					   ;19$
	PUSHAB  4(R3)					   ;DEFAULTS+28
	PUSHL   8(SP)					   ;STR+4
	MOVZWL  8(SP), -(SP)				   ;STR, -(SP)
	CALLS   #3, (R10)				   ;#3, LIB$CVT_DTB
19$:	PUSHAB  292(R4)					   ;P.AKN
	CALLS   #1, (R5)				   ;#1, CLI$PRESENT
	CLRL    R1					   ;R1
	CMPL    R0, R6					   ;R0, R6
	BNEQ    20$					   ;20$
	INCL    R1					   ;R1
20$:	INSV    R1, #1, #1, (R3)			   ;R1, #1, #1, DEFAULTS+24
	BBC     #1, (R3), 21$				   ;#1, DEFAULTS+24, 21$
	PUSHL   SP					   ;SP
	PUSHAB  320(R4)					   ;P.AKP
	CALLS   #2, (R7)				   ;#2, CLI$GET_VALUE
	BLBC    R0, 21$					   ;R0, 21$
	TSTW    (SP)					   ;STR
	BEQL    21$					   ;21$
	PUSHAB  8(R3)					   ;DEFAULTS+32
	PUSHL   8(SP)					   ;STR+4
	MOVZWL  8(SP), -(SP)				   ;STR, -(SP)
	CALLS   #3, (R10)				   ;#3, LIB$CVT_DTB
21$:	PUSHAB  348(R4)					   ;P.AKR
	CALLS   #1, (R5)				   ;#1, CLI$PRESENT
	CLRL    R1					   ;R1
	CMPL    R0, R6					   ;R0, R6
	BNEQ    22$					   ;22$
	INCL    R1					   ;R1
22$:	INSV    R1, #2, #1, (R3)			   ;R1, #2, #1, DEFAULTS+24
	BBC     #2, (R3), 23$				   ;#2, DEFAULTS+24, 23$
	PUSHL   SP					   ;SP
	PUSHAB  376(R4)					   ;P.AKT
	CALLS   #2, (R7)				   ;#2, CLI$GET_VALUE
	BLBC    R0, 23$					   ;R0, 23$
	TSTW    (SP)					   ;STR
	BEQL    23$					   ;23$
	PUSHAB  12(R3)					   ;DEFAULTS+36
	PUSHL   8(SP)					   ;STR+4
	MOVZWL  8(SP), -(SP)				   ;STR, -(SP)
	CALLS   #3, (R10)				   ;#3, LIB$CVT_DTB
23$:	PUSHL   SP					   ;SP
	CALLS   #1, G^STR$FREE1_DX			   ;#1, STR$FREE1_DX
	MOVL    #1, R0					   ;#1, R0
	RET     					   ;

; Routine Size:  503 bytes,    Routine Base:  $CODE$ + 1397





	.PSECT  $PLIT$,NOWRT,NOEXE,2

P.AKW:	.ASCII  \ALL\<0>				   ;
P.AKV:	.LONG   17694723				   ;
	.ADDRESS P.AKW					   ;
P.AKY:	.ASCII  \DEFAULTS\				   ;
P.AKX:	.LONG   17694728				   ;
	.ADDRESS P.AKY					   ;
P.ALA:	.ASCII  \GLOBALS\<0>				   ;
P.AKZ:	.LONG   17694727				   ;
	.ADDRESS P.ALA					   ;
P.ALC:	.ASCII  \WATCH\<0><0><0>			   ;
P.ALB:	.LONG   17694725				   ;
	.ADDRESS P.ALC					   ;
P.ALE:	.ASCII  \EXCLUDE\<0>				   ;
P.ALD:	.LONG   17694727				   ;
	.ADDRESS P.ALE					   ;
P.ALG:	.ASCII  \OVERRIDE\				   ;
P.ALF:	.LONG   17694728				   ;
	.ADDRESS P.ALG					   ;
P.ALI:	.ASCII  \EVENT_LOG\<0><0><0>			   ;
P.ALH:	.LONG   17694729				   ;
	.ADDRESS P.ALI					   ;
P.ALK:	.ASCII  \INTERVAL\				   ;
P.ALJ:	.LONG   17694728				   ;
	.ADDRESS P.ALK					   ;
P.ALM:	.ASCII  \BELL\					   ;
P.ALL:	.LONG   17694724				   ;
	.ADDRESS P.ALM					   ;
P.ALO:	.ASCII  \DEBUG\<0><0><0>			   ;
P.ALN:	.LONG   17694725				   ;
	.ADDRESS P.ALO					   ;
P.ALQ:	.ASCII  \DAYS\					   ;
P.ALP:	.LONG   17694724				   ;
	.ADDRESS P.ALQ					   ;
P.ALS:	.ASCII  \FILE\					   ;
P.ALR:	.LONG   17694724				   ;
	.ADDRESS P.ALS					   ;
P.ALU:	.ASCII  \DECWINDOWS\<0><0>			   ;
P.ALT:	.LONG   17694730				   ;
	.ADDRESS P.ALU					   ;
P.ALW:	.ASCII  \MULTIWARN\<0><0><0>			   ;
P.ALV:	.LONG   17694729				   ;
	.ADDRESS P.ALW					   ;
P.ALY:	.ASCII  \ACTION\<0><0>				   ;
P.ALX:	.LONG   17694726				   ;
	.ADDRESS P.ALY					   ;
P.AMA:	.ASCII  \INSWAP\<0><0>				   ;
P.ALZ:	.LONG   17694726				   ;
	.ADDRESS P.AMA					   ;
;OPTIONS
U.49:	.ADDRESS P.AKV, P.AKX, P.AKZ, P.ALB, P.ALD, P.ALF, P.ALH, P.ALJ, P.ALL, P.ALN, P.ALP, P.ALR, P.ALT, P.ALV, P.ALX, P.ALZ
							   ;
P.AMC:	.ASCII  \SHOW_OPT\				   ;
P.AMB:	.LONG   17694728				   ;
	.ADDRESS P.AMC					   ;
P.AME:	.ASCII  \COMMAND\<0>				   ;
P.AMD:	.LONG   17694727				   ;
	.ADDRESS P.AME					   ;
P.AMG:	.ASCII  \OUTPUT\<0><0>				   ;
P.AMF:	.LONG   17694726				   ;
	.ADDRESS P.AMG					   ;
P.AMI:	.ASCII  \OUTPUT\<0><0>				   ;
P.AMH:	.LONG   17694726				   ;
	.ADDRESS P.AMI					   ;
P.AMJ:	.ASCII  \SYS$DISK:[].DAT\			   ;
	.BLKB   1
P.AML:	.BLKB   0					   ;
P.AMK:	.LONG   17694720				   ;
	.ADDRESS P.AML					   ;

U.51=		    U.25
U.52=		    U.26
	.EXTRN  SHOW_WATCHES, SHOW_EXCLUDES, SHOW_OVERRIDES, SHOW_EVENT_LOG, SHOW_INTERVAL, SHOW_BELL
	.EXTRN  SHOW_DEBUG, SHOW_WATCH_DEFAULTS, SHOW_DAYS, SHOW_FILE, SHOW_DECW, SHOW_MULTIWARN, SHOW_ACTION
	.EXTRN  SHOW_INSWAP, SYS$CREATE, SYS$CONNECT, SYS$CLOSE

	.PSECT  $CODE$,NOWRT,2

U.15:
	.ENTRY  CMD_SHOW, ^M<R2,R3,R4,R5,R6,R7,R8,R9,R10,- ;CMD_SHOW, Save R2,R3,R4,R5,R6,R7,R8,R9,R10,R11
		R11>					   ;
	MOVAB   W^P.AMB, R11				   ;P.AMB, R11
	MOVAB   W^U.51, R10				   ;U.51, R10
	SUBL2   #4, SP					   ;#4, SP
	PUSHL   #34471936				   ;#34471936
	CLRL    4(SP)					   ;_D+4
	PUSHR   #^M<R11,SP>				   ;#^M<R11,SP>
	CALLS   #2, G^CLI$GET_VALUE			   ;#2, CLI$GET_VALUE
	CLRL    R2					   ;I
1$:	PUSHL   SP					   ;SP
	PUSHL   -72(R11)[R2]				   ;OPTIONS[I]
	CALLS   #2, G^STR$POSITION			   ;#2, STR$POSITION
	CMPL    R0, #1					   ;R0, #1
	BNEQ    2$					   ;2$
	MOVL    R2, R6					   ;I, OPT
	BRB     3$					   ;3$
2$:	AOBLEQ  #15, R2, 1$				   ;#15, I, 1$
	MNEGL   #1, R6					   ;#1, OPT
3$:	PUSHAB  16(R11)					   ;P.AMD
	CALLS   #1, G^CLI$PRESENT			   ;#1, CLI$PRESENT
	CLRL    R1					   ;R1
	CMPL    R0, #CLI$_PRESENT			   ;R0, #CLI$_PRESENT
	BNEQ    4$					   ;4$
	INCL    R1					   ;R1
4$:	MOVL    R1, R8					   ;R1, OUTCMD
	MOVAB   G^LIB$PUT_OUTPUT, R7			   ;LIB$PUT_OUTPUT, OUTRTN
	PUSHAB  32(R11)					   ;P.AMF
	CALLS   #1, G^CLI$PRESENT			   ;#1, CLI$PRESENT
	CMPL    R0, #CLI$_PRESENT			   ;R0, #CLI$_PRESENT
	BNEQ    6$					   ;6$
	PUSHL   SP					   ;SP
	PUSHAB  48(R11)					   ;P.AMH
	CALLS   #2, G^CLI$GET_VALUE			   ;#2, CLI$GET_VALUE
	MOVC5   #0, (SP), #0, #80, (R10)		   ;#0, (SP), #0, #80, $RMS_PTR
	MOVW    #20483, (R10)				   ;#20483, $RMS_PTR
	MOVW    #257, 22(R10)				   ;#257, $RMS_PTR+22
	MOVW    #514, 30(R10)				   ;#514, $RMS_PTR+30
	MOVL    4(SP), 44(R10)				   ;STR+4, $RMS_PTR+44
	MOVAB   56(R11), 48(R10)			   ;P.AMJ, $RMS_PTR+48
	MOVZWL  (SP), R0				   ;STR, R0
	CMPW    R0, #255				   ;R0, #255
	BLEQU   5$					   ;5$
	MOVZBL  #255, R0				   ;#255, R0
5$:	MOVB    R0, 52(R10)				   ;R0, $RMS_PTR+52
	MOVB    #15, 53(R10)				   ;#15, $RMS_PTR+53
	PUSHL   R10					   ;R10
	CALLS   #1, G^SYS$CREATE			   ;#1, SYS$CREATE
	MOVL    R0, R9					   ;R0, STATUS
	BLBC    R9, 8$					   ;STATUS, 8$
	MOVC5   #0, (SP), #0, #68, 80(R10)		   ;#0, (SP), #0, #68, $RMS_PTR
	MOVW    #17409, 80(R10)				   ;#17409, $RMS_PTR
	MOVAB   (R10), 140(R10)				   ;SHOW_FAB, $RMS_PTR+60
	PUSHAB  80(R10)					   ;SHOW_RAB
	CALLS   #1, G^SYS$CONNECT			   ;#1, SYS$CONNECT
	MOVL    R0, R9					   ;R0, STATUS
	BLBC    R9, 7$					   ;STATUS, 7$
	MOVAB   W^U.16, R7				   ;U.16, OUTRTN
6$:	BRB     10$					   ;10$
7$:	PUSHL   92(R10)					   ;SHOW_RAB+12
	BRB     9$					   ;9$
8$:	PUSHL   12(R10)					   ;SHOW_FAB+12
9$:	PUSHL   R9					   ;STATUS
	PUSHAB  8(SP)					   ;STR
	PUSHL   #WCP__NOOPNOUT				   ;#WCP__NOOPNOUT
	CALLS   #4, G^LIB$SIGNAL			   ;#4, LIB$SIGNAL
10$:	MOVAB   G^LIB$PUT_OUTPUT, R0			   ;LIB$PUT_OUTPUT, R0
	CMPL    R7, R0					   ;OUTRTN, R0
	BEQL    11$					   ;11$
	BLBS    R9, 11$					   ;STATUS, 11$
	BRW     40$					   ;40$
11$:	TSTL    R6					   ;OPT
	BEQL    12$					   ;12$
	CMPL    R6, #11					   ;OPT, #11
	BNEQ    13$					   ;13$
12$:	MOVQ    R7, -(SP)				   ;OUTRTN, -(SP)
	CALLS   #2, W^SHOW_FILE				   ;#2, SHOW_FILE
13$:	TSTL    R6					   ;OPT
	BEQL    14$					   ;14$
	CMPL    R6, #3					   ;OPT, #3
	BNEQ    15$					   ;15$
14$:	MOVQ    R7, -(SP)				   ;OUTRTN, -(SP)
	CALLS   #2, W^SHOW_WATCHES			   ;#2, SHOW_WATCHES
15$:	TSTL    R6					   ;OPT
	BEQL    16$					   ;16$
	CMPL    R6, #4					   ;OPT, #4
	BNEQ    17$					   ;17$
16$:	MOVQ    R7, -(SP)				   ;OUTRTN, -(SP)
	CALLS   #2, W^SHOW_EXCLUDES			   ;#2, SHOW_EXCLUDES
17$:	TSTL    R6					   ;OPT
	BEQL    18$					   ;18$
	CMPL    R6, #5					   ;OPT, #5
	BNEQ    19$					   ;19$
18$:	MOVQ    R7, -(SP)				   ;OUTRTN, -(SP)
	CALLS   #2, W^SHOW_OVERRIDES			   ;#2, SHOW_OVERRIDES
19$:	TSTL    R6					   ;OPT
	BEQL    20$					   ;20$
	CMPL    R6, #2					   ;OPT, #2
	BEQL    20$					   ;20$
	CMPL    R6, #6					   ;OPT, #6
	BNEQ    21$					   ;21$
20$:	MOVQ    R7, -(SP)				   ;OUTRTN, -(SP)
	CALLS   #2, W^SHOW_EVENT_LOG			   ;#2, SHOW_EVENT_LOG
21$:	TSTL    R6					   ;OPT
	BEQL    22$					   ;22$
	CMPL    R6, #2					   ;OPT, #2
	BEQL    22$					   ;22$
	CMPL    R6, #7					   ;OPT, #7
	BNEQ    23$					   ;23$
22$:	MOVQ    R7, -(SP)				   ;OUTRTN, -(SP)
	CALLS   #2, W^SHOW_INTERVAL			   ;#2, SHOW_INTERVAL
23$:	TSTL    R6					   ;OPT
	BEQL    24$					   ;24$
	CMPL    R6, #2					   ;OPT, #2
	BEQL    24$					   ;24$
	CMPL    R6, #8					   ;OPT, #8
	BNEQ    25$					   ;25$
24$:	MOVQ    R7, -(SP)				   ;OUTRTN, -(SP)
	CALLS   #2, W^SHOW_BELL				   ;#2, SHOW_BELL
25$:	TSTL    R6					   ;OPT
	BEQL    26$					   ;26$
	CMPL    R6, #2					   ;OPT, #2
	BEQL    26$					   ;26$
	CMPL    R6, #9					   ;OPT, #9
	BNEQ    27$					   ;27$
26$:	MOVQ    R7, -(SP)				   ;OUTRTN, -(SP)
	CALLS   #2, W^SHOW_DEBUG			   ;#2, SHOW_DEBUG
27$:	TSTL    R6					   ;OPT
	BLSS    28$					   ;28$
	CMPL    R6, #1					   ;OPT, #1
	BGTR    28$					   ;28$
	MOVQ    R7, -(SP)				   ;OUTRTN, -(SP)
	CALLS   #2, W^SHOW_WATCH_DEFAULTS		   ;#2, SHOW_WATCH_DEFAULTS
28$:	TSTL    R6					   ;OPT
	BLSS    29$					   ;29$
	CMPL    R6, #1					   ;OPT, #1
	BLEQ    30$					   ;30$
29$:	CMPL    R6, #10					   ;OPT, #10
	BNEQ    31$					   ;31$
30$:	MOVQ    R7, -(SP)				   ;OUTRTN, -(SP)
	CALLS   #2, W^SHOW_DAYS				   ;#2, SHOW_DAYS
31$:	TSTL    R6					   ;OPT
	BEQL    32$					   ;32$
	CMPL    R6, #2					   ;OPT, #2
	BEQL    32$					   ;32$
	CMPL    R6, #12					   ;OPT, #12
	BNEQ    33$					   ;33$
32$:	MOVQ    R7, -(SP)				   ;OUTRTN, -(SP)
	CALLS   #2, W^SHOW_DECW				   ;#2, SHOW_DECW
33$:	TSTL    R6					   ;OPT
	BEQL    34$					   ;34$
	CMPL    R6, #2					   ;OPT, #2
	BEQL    34$					   ;34$
	CMPL    R6, #13					   ;OPT, #13
	BNEQ    35$					   ;35$
34$:	MOVQ    R7, -(SP)				   ;OUTRTN, -(SP)
	CALLS   #2, W^SHOW_MULTIWARN			   ;#2, SHOW_MULTIWARN
35$:	TSTL    R6					   ;OPT
	BEQL    36$					   ;36$
	CMPL    R6, #2					   ;OPT, #2
	BEQL    36$					   ;36$
	CMPL    R6, #14					   ;OPT, #14
	BNEQ    37$					   ;37$
36$:	MOVQ    R7, -(SP)				   ;OUTRTN, -(SP)
	CALLS   #2, W^SHOW_ACTION			   ;#2, SHOW_ACTION
37$:	TSTL    R6					   ;OPT
	BEQL    38$					   ;38$
	CMPL    R6, #2					   ;OPT, #2
	BEQL    38$					   ;38$
	CMPL    R6, #15					   ;OPT, #15
	BNEQ    39$					   ;39$
38$:	MOVQ    R7, -(SP)				   ;OUTRTN, -(SP)
	CALLS   #2, W^SHOW_INSWAP			   ;#2, SHOW_INSWAP
39$:	BLBS    R8, 40$					   ;OUTCMD, 40$
	PUSHAB  72(R11)					   ;P.AMK
	CALLS   #1, (R7)				   ;#1, (OUTRTN)
40$:	MOVAB   W^U.16, R0				   ;U.16, R0
	CMPL    R7, R0					   ;OUTRTN, R0
	BNEQ    41$					   ;41$
	BLBC    R9, 41$					   ;STATUS, 41$
	PUSHL   R10					   ;R10
	CALLS   #1, G^SYS$CLOSE				   ;#1, SYS$CLOSE
41$:	PUSHL   SP					   ;SP
	CALLS   #1, G^STR$FREE1_DX			   ;#1, STR$FREE1_DX
	MOVL    #1, R0					   ;#1, R0
	RET     					   ;

; Routine Size:  617 bytes,    Routine Base:  $CODE$ + 158E





	.EXTRN  SYS$PUT

;ALT_SHOW_OUTPUT
U.16:	.WORD   ^M<>					   ;Save nothing
	MOVL    4(AP), R0				   ;STR_A, R0
	MOVL    4(R0), W^U.26+40			   ;4(R0), U.26+40
	MOVW    (R0), W^U.26+34				   ;(R0), U.26+34
	PUSHAB  W^U.26					   ;U.26
	CALLS   #1, G^SYS$PUT				   ;#1, SYS$PUT
	RET     					   ;

; Routine Size:  29 bytes,    Routine Base:  $CODE$ + 17F7





	.PSECT  $PLIT$,NOWRT,NOEXE,2

P.AMN:	.ASCII  \FILESPEC\				   ;
P.AMM:	.LONG   17694728				   ;
	.ADDRESS P.AMN					   ;
P.AMP:	.ASCII  \FILESPEC\				   ;
P.AMO:	.LONG   17694728				   ;
	.ADDRESS P.AMP					   ;
P.AMR:	.ASCII  \_File: \<0>				   ;
P.AMQ:	.LONG   17694727				   ;
	.ADDRESS P.AMR					   ;



	.PSECT  $CODE$,NOWRT,2

U.17:
	.ENTRY  CMD_SAVE, ^M<R2>			   ;CMD_SAVE, Save R2
	MOVAB   W^CFGFILE, R2				   ;CFGFILE, R2
	SUBL2   #4, SP					   ;#4, SP
	PUSHL   #34471936				   ;#34471936
	CLRL    4(SP)					   ;_D+4
	PUSHAB  W^P.AMM					   ;P.AMM
	CALLS   #1, G^CLI$PRESENT			   ;#1, CLI$PRESENT
	CMPL    R0, #CLI$_PRESENT			   ;R0, #CLI$_PRESENT
	BNEQ    1$					   ;1$
	PUSHL   SP					   ;SP
	PUSHAB  W^P.AMO					   ;P.AMO
	CALLS   #2, G^CLI$GET_VALUE			   ;#2, CLI$GET_VALUE
	BRB     3$					   ;3$
1$:	TSTW    (R2)					   ;CFGFILE
	BEQL    2$					   ;2$
	PUSHL   SP					   ;SP
	CLRL    -(SP)					   ;-(SP)
	PUSHL   R2					   ;R2
	CALLS   #3, W^PARSE_CFGFILE			   ;#3, PARSE_CFGFILE
	BRB     3$					   ;3$
2$:	PUSHAB  W^P.AMQ					   ;P.AMQ
	PUSHAB  4(SP)					   ;FSPEC
	CALLS   #2, W^GET_CMD				   ;#2, GET_CMD
	BLBC    R0, 6$					   ;STATUS, 6$
	TSTW    (SP)					   ;FSPEC
	BEQL    6$					   ;6$
3$:	PUSHL   R2					   ;R2
	PUSHAB  4(SP)					   ;FSPEC
	CALLS   #2, W^SAVE_CONFIG			   ;#2, SAVE_CONFIG
	BLBC    R0, 4$					   ;STATUS, 4$
	CLRL    -4(R2)					   ;CFG_CHANGED
	PUSHL   R2					   ;R2
	PUSHL   #1					   ;#1
	PUSHL   #WCP__WROTECFG				   ;#WCP__WROTECFG
	BRB     5$					   ;5$
4$:	PUSHL   SP					   ;SP
	PUSHL   #1					   ;#1
	PUSHL   #WCP__NOWRTCFG				   ;#WCP__NOWRTCFG
5$:	CALLS   #3, G^LIB$SIGNAL			   ;#3, LIB$SIGNAL
	PUSHL   SP					   ;SP
	CALLS   #1, G^STR$FREE1_DX			   ;#1, STR$FREE1_DX
6$:	MOVL    #1, R0					   ;#1, R0
	RET     					   ;

; Routine Size:  148 bytes,    Routine Base:  $CODE$ + 1814





	.PSECT  $PLIT$,NOWRT,NOEXE,2

P.AMT:	.ASCII  \OPER\					   ;
P.AMS:	.LONG   17694724				   ;
	.ADDRESS P.AMT					   ;
P.AMV:	.ASCII  \WATCHER_MBOX\				   ;
P.AMU:	.LONG   17694732				   ;
	.ADDRESS P.AMV					   ;

	.EXTRN  SYS$ASSIGN, SYS$QIOW, SYS$DASSGN

	.PSECT  $CODE$,NOWRT,2

	.ENTRY  CMD_RESET, ^M<R2>			   ;CMD_RESET, Save R2
	SUBL2   #28, SP					   ;#28, SP
	PUSHAB  12(SP)					   ;PRVMSK
	CLRQ    -(SP)					   ;-(SP)
	MOVZWL  #1024, 12(SP)				   ;#1024, 12(SP)
	PUSHAB  12(SP)					   ;12(SP)
	CALLS   #4, G^LIB$GETJPI			   ;#4, LIB$GETJPI
	BBS     #2, 14(SP), 1$				   ;#2, PRVMSK+2, 1$
	PUSHAB  W^P.AMS					   ;P.AMS
	PUSHL   #1					   ;#1
	PUSHL   #WCP__NOPRIV				   ;#WCP__NOPRIV
	BRB     3$					   ;3$
1$:	CLRQ    -(SP)					   ;-(SP)
	CLRL    -(SP)					   ;-(SP)
	PUSHAB  16(SP)					   ;CHN
	PUSHAB  W^P.AMU					   ;P.AMU
	CALLS   #5, G^SYS$ASSIGN			   ;#5, SYS$ASSIGN
	MOVL    R0, R2					   ;R0, STATUS
	BLBC    R2, 2$					   ;STATUS, 2$
	MOVL    #37, 8(SP)				   ;#37, MSGCODE
	CLRQ    -(SP)					   ;-(SP)
	CLRQ    -(SP)					   ;-(SP)
	PUSHL   #4					   ;#4
	PUSHAB  28(SP)					   ;MSGCODE
	CLRQ    -(SP)					   ;-(SP)
	PUSHAB  52(SP)					   ;IOSB
	MOVZWL  #1136, -(SP)				   ;#1136, -(SP)
	MOVZWL  44(SP), -(SP)				   ;CHN, -(SP)
	CLRL    -(SP)					   ;-(SP)
	CALLS   #12, G^SYS$QIOW				   ;#12, SYS$QIOW
	MOVL    R0, R2					   ;R0, STATUS
	MOVZWL  4(SP), -(SP)				   ;CHN, -(SP)
	CALLS   #1, G^SYS$DASSGN			   ;#1, SYS$DASSGN
	BLBC    R2, 2$					   ;STATUS, 2$
	MOVZWL  20(SP), R2				   ;IOSB, STATUS
	BLBS    R2, 4$					   ;STATUS, 4$
2$:	PUSHL   R2					   ;STATUS
	CLRL    -(SP)					   ;-(SP)
	PUSHL   #WCP__NOCONTACT				   ;#WCP__NOCONTACT
3$:	CALLS   #3, G^LIB$SIGNAL			   ;#3, LIB$SIGNAL
4$:	MOVL    #1, R0					   ;#1, R0
	RET     					   ;

; Routine Size:  150 bytes,    Routine Base:  $CODE$ + 18A8





	.PSECT  $PLIT$,NOWRT,NOEXE,2

P.AMX:	.ASCII  \OPER\					   ;
P.AMW:	.LONG   17694724				   ;
	.ADDRESS P.AMX					   ;
P.AMZ:	.ASCII  \WATCHER_MBOX\				   ;
P.AMY:	.LONG   17694732				   ;
	.ADDRESS P.AMZ					   ;



	.PSECT  $CODE$,NOWRT,2

	.ENTRY  CMD_SHUTDOWN, ^M<R2>			   ;CMD_SHUTDOWN, Save R2
	SUBL2   #28, SP					   ;#28, SP
	PUSHAB  12(SP)					   ;PRVMSK
	CLRQ    -(SP)					   ;-(SP)
	MOVZWL  #1024, 12(SP)				   ;#1024, 12(SP)
	PUSHAB  12(SP)					   ;12(SP)
	CALLS   #4, G^LIB$GETJPI			   ;#4, LIB$GETJPI
	BBS     #2, 14(SP), 1$				   ;#2, PRVMSK+2, 1$
	PUSHAB  W^P.AMW					   ;P.AMW
	PUSHL   #1					   ;#1
	PUSHL   #WCP__NOPRIV				   ;#WCP__NOPRIV
	BRB     3$					   ;3$
1$:	CLRQ    -(SP)					   ;-(SP)
	CLRL    -(SP)					   ;-(SP)
	PUSHAB  16(SP)					   ;CHN
	PUSHAB  W^P.AMY					   ;P.AMY
	CALLS   #5, G^SYS$ASSIGN			   ;#5, SYS$ASSIGN
	MOVL    R0, R2					   ;R0, STATUS
	BLBC    R2, 2$					   ;STATUS, 2$
	MOVZBL  #193, 8(SP)				   ;#193, MSGCODE
	CLRQ    -(SP)					   ;-(SP)
	CLRQ    -(SP)					   ;-(SP)
	PUSHL   #4					   ;#4
	PUSHAB  28(SP)					   ;MSGCODE
	CLRQ    -(SP)					   ;-(SP)
	PUSHAB  52(SP)					   ;IOSB
	MOVZWL  #1136, -(SP)				   ;#1136, -(SP)
	MOVZWL  44(SP), -(SP)				   ;CHN, -(SP)
	CLRL    -(SP)					   ;-(SP)
	CALLS   #12, G^SYS$QIOW				   ;#12, SYS$QIOW
	MOVL    R0, R2					   ;R0, STATUS
	MOVZWL  4(SP), -(SP)				   ;CHN, -(SP)
	CALLS   #1, G^SYS$DASSGN			   ;#1, SYS$DASSGN
	BLBC    R2, 2$					   ;STATUS, 2$
	MOVZWL  20(SP), R2				   ;IOSB, STATUS
	BLBS    R2, 4$					   ;STATUS, 4$
2$:	PUSHL   R2					   ;STATUS
	CLRL    -(SP)					   ;-(SP)
	PUSHL   #WCP__NOCONTACT				   ;#WCP__NOCONTACT
3$:	CALLS   #3, G^LIB$SIGNAL			   ;#3, LIB$SIGNAL
4$:	MOVL    #1, R0					   ;#1, R0
	RET     					   ;

; Routine Size:  151 bytes,    Routine Base:  $CODE$ + 193E






	.EXTRN  LIB$SIGNAL

;				       PSECT SUMMARY
;
;	Name			 Bytes			       Attributes
;
;  $$$COPYRIGHT			       62  NOVEC,NOWRT,  RD ,NOEXE,  SHR,  LCL,  REL,  CON,NOPIC,ALIGN(2)
;  $OWN$			      152  NOVEC,  WRT,  RD ,NOEXE,NOSHR,  LCL,  REL,  CON,NOPIC,ALIGN(2)
;  $GLOBAL$			      376  NOVEC,  WRT,  RD ,NOEXE,NOSHR,  LCL,  REL,  CON,NOPIC,ALIGN(2)
;  $PLIT$			     3252  NOVEC,NOWRT,  RD ,NOEXE,NOSHR,  LCL,  REL,  CON,NOPIC,ALIGN(2)
;  $CODE$			     6613  NOVEC,NOWRT,  RD ,  EXE,NOSHR,  LCL,  REL,  CON,NOPIC,ALIGN(2)




;				Library Statistics
;
;					     -------- Symbols --------	    Pages	Processing
;	File				     Total    Loaded   Percent      Mapped	Time
;
;  SYS$COMMON:[SYSLIB]STARLET.L32;2	     18166        99         0      1063          00:00.1
;  RPI$SRC:[WATCHER]WATCHER.L32;6	       117        99        84        13          00:00.0
;  RPI$SRC:[WATCHER]WCP.L32;7		        46        38        82         8          00:00.0







;					COMMAND QUALIFIERS

;	BLISS/LIST=WCP.MAR/NOOBJ/MACHINE=(OBJ,NOBIN,ASSEM,UNIQUE,NOCOMM)/SOURCE=(NOHEAD,NOSOURCE) WCP.B32

; Compilation Complete

	.END	U.2
