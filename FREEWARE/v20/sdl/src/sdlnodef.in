/********************************************************************************************************************************/
/* Created:  7-NOV-1995 09:43:19 by OpenVMS SDL EV1-49     */
/* Source:  18-MAR-1993 13:13:43 ROOT$:[SDL.TMPSRC]SDLNODEF.SDL;1 */
/********************************************************************************************************************************/
 
/*** MODULE $nodef IDENT EV1-21A ***/
%replace sdl$k_node_rev by 1;
%replace nod$m_value by '10000000000000000000000000000000'b;
%replace nod$m_mask by '01000000000000000000000000000000'b;
%replace nod$m_unsigned by '00100000000000000000000000000000'b;
%replace nod$m_common by '00010000000000000000000000000000'b;
%replace nod$m_global by '00001000000000000000000000000000'b;
%replace nod$m_varying by '00000100000000000000000000000000'b;
%replace nod$m_variable by '00000010000000000000000000000000'b;
%replace nod$m_based by '00000001000000000000000000000000'b;
%replace nod$m_desc by '00000000100000000000000000000000'b;
%replace nod$m_dimen by '00000000010000000000000000000000'b;
%replace nod$m_in by '00000000001000000000000000000000'b;
%replace nod$m_out by '00000000000100000000000000000000'b;
%replace nod$m_bottom by '00000000000010000000000000000000'b;
%replace nod$m_bound by '00000000000001000000000000000000'b;
%replace nod$m_ref by '00000000000000100000000000000000'b;
%replace nod$m_userfill by '00000000000000010000000000000000'b;
%replace nod$m_alias by '00000000000000001000000000000000'b;
%replace nod$m_default by '00000000000000000100000000000000'b;
%replace nod$m_vardim by '00000000000000000010000000000000'b;
%replace nod$m_link by '00000000000000000001000000000000'b;
%replace nod$m_optional by '00000000000000000000100000000000'b;
%replace nod$m_signed by '00000000000000000000010000000000'b;
%replace nod$m_fixed_fldsiz by '00000000000000000000001000000000'b;
%replace nod$m_generated by '00000000000000000000000100000000'b;
%replace nod$m_module by '00000000000000000000000010000000'b;
%replace nod$m_list by '00000000000000000000000001000000'b;
%replace nod$m_rtl_str_desc by '00000000000000000000000000100000'b;
%replace nod$m_complex by '00000000000000000000000000010000'b;
%replace nod$m_typedef by '00000000000000000000000000001000'b;
%replace nod$m_declared by '00000000000000000000000000000100'b;
%replace nod$m_forward by '00000000000000000000000000000010'b;
%replace nod$m_align by '00000000000000000000000000000001'b;
%replace nod$k_nodesize by 346;
 
%replace nod$s_nod$_node by 346;
dcl 1 nod$_node  based,
     2 nod$a_flink pointer,
     2 nod$a_blink pointer,
     2 nod$a_parent pointer,
     2 nod$a_child pointer,
     2 nod$a_comment pointer,
     2 nod$r_info union,
      3 nod$l_typeinfo fixed binary(31),
      3 nod$a_typeinfo pointer,
     2 nod$r_info2 union,
      3 nod$l_typeinfo2 fixed binary(31),
      3 nod$a_typeinfo2 pointer,
      3 nod$a_symtab pointer,
     2 nod$b_type fixed binary(7),
     2 nod$b_boundary fixed binary(7),
     2 nod$w_datatype fixed binary(15),
     2 nod$l_offset fixed binary(31),
     2 nod$r_fldsiz union,
      3 nod$l_fldsiz fixed binary(31),
      3 nod$a_fldsiz pointer,
     2 nod$r_hidim union,
      3 nod$l_hidim fixed binary(31),
      3 nod$a_hidim pointer,
     2 nod$r_lodim union,
      3 nod$l_lodim fixed binary(31),
      3 nod$a_lodim pointer,
     2 nod$r_initial union,
      3 nod$l_initial fixed binary(31),
      3 nod$a_initial pointer,
     2 nod$l_srcline fixed binary(31),
     2 nod$l_nodeid fixed binary(31),
     2 nod$r_flagunion union,
      3 nod$l_flags bit(32) aligned,
      3 nod$l_fixflags fixed binary(31),
      3 nod$r_flagstruc ,
       4 nod$v_value bit(1),
       4 nod$v_mask bit(1),
       4 nod$v_unsigned bit(1),
       4 nod$v_common bit(1),
       4 nod$v_global bit(1),
       4 nod$v_varying bit(1),
       4 nod$v_variable bit(1),
       4 nod$v_based bit(1),
       4 nod$v_desc bit(1),
       4 nod$v_dimen bit(1),
       4 nod$v_in bit(1),
       4 nod$v_out bit(1),
       4 nod$v_bottom bit(1),
       4 nod$v_bound bit(1),
       4 nod$v_ref bit(1),
       4 nod$v_userfill bit(1),
       4 nod$v_alias bit(1),
       4 nod$v_default bit(1),
       4 nod$v_vardim bit(1),
       4 nod$v_link bit(1),
       4 nod$v_optional bit(1),
       4 nod$v_signed bit(1),
       4 nod$v_fixed_fldsiz bit(1),
       4 nod$v_generated bit(1),
       4 nod$v_module bit(1),
       4 nod$v_list bit(1),
       4 nod$v_rtl_str_desc bit(1),
       4 nod$v_complex bit(1),
       4 nod$v_typedef bit(1),
       4 nod$v_declared bit(1),
       4 nod$v_forward bit(1),
       4 nod$v_align bit(1),
     2 nod$r_flags2union union,
      3 nod$l_flags2 bit(32) aligned,
      3 nod$l_fixflags2 fixed binary(31),
      3 nod$r_flags2struc ,
       4 nod$v_has_object bit(1),
       4 nod$v_offset_fixed bit(1),
       4 nod$v_length bit(1),
       4 nod$v_hidim bit(1),
       4 nod$v_lodim bit(1),
       4 nod$v_initial bit(1),
       4 nod$v_base_align bit(1),
       4 nod$v_offset_ref bit(1),
     2 nod$t_naked character(34) varying,
     2 nod$t_name character(34) varying,
     2 nod$t_return_name character(34) varying,
     2 nod$t_prefix character(32) varying,
     2 nod$t_marker character(32) varying,
     2 nod$t_tag character(32) varying,
     2 nod$t_typename character(32) varying,
     2 nod$t_maskstr character(32) varying;
%replace nod$k_rootnode by 1;
%replace nod$k_commnode by 2;
%replace nod$k_constnode by 3;
%replace nod$k_entrynode by 4;
%replace nod$k_itemnode by 5;
%replace nod$k_modulnode by 6;
%replace nod$k_parmnode by 7;
%replace nod$k_dummynode by 8;
%replace nod$k_objnode by 9;
%replace nod$k_headnode by 10;
%replace nod$k_typnode by 11;
%replace nod$k_endnode by 12;
%replace nod$k_condnode by 13;
%replace nod$k_litnode by 14;
%replace nod$k_symbnode by 15;
 
%replace exp$s_exp$node by 16;
dcl 1 exp$node  based,
     2 exp$a_next pointer,
     2 exp$r_union_1 union,
      3 exp$a_ref_node pointer,
      3 exp$a_expr_list pointer,
     2 exp$l_value fixed binary(31),
     2 exp$w_kind fixed binary(15),
     2 exp$w_op fixed binary(15);
%replace minus_op by 1;
%replace add_op by 2;
%replace sub_op by 3;
%replace mul_op by 4;
%replace div_op by 5;
%replace shift_op by 6;
%replace and_op by 7;
%replace or_op by 8;
%replace op_val by 1;
%replace integer_val by 2;
%replace origin_val by 3;
%replace byteoff_val by 4;
%replace bitoff_val by 5;
%replace constant_val by 6;
%replace expr_val by 7;
%replace bitmask_val by 8;
