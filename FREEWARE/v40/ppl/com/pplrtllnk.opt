! PPLRTLLNK.OPT - Linker options file for building PPLRTL.EXE
!
! 1-001 - Original.						CMF 24-NOV-1986
!
! 1-002 - Resolve undefined symbols by requireing LIBDEF.	CMF 16-JAN-1987
!
! 1-003 - Added PPLCREBARR.					CMF 27-JAN-1987
!
! 1-004 - Change name of message file from PPl$MSG to		CMF 16-FEB-1987
!	  PPL$MSGDEF to be consistent with other message
!	  files of the RTL.
!
! 1-005	- Add ppl$event.					DLR 30-JUL-1987
!
! 1-006 - Add ppl$m_nozero, ppl$m_notify_one, ppl$m_spin_wait,	DLR  9-NOV-1987
!	  ppl$k_init_size.
!
! 1-007 - Add ppl$k_abnormal_exit, ppl$k_normal_exit.		DLR 14-DEC-1987
!
! V52-1 - Bumped the minor version ID to 2 to solve potential	WWS 06-JAN-1989
!	  version mismatch problems surrounding PPLRTL.EXE
!	  files which are distributed with VAX C V3.0
!
! V53-1 - The transfer vector is now taken from the obj library WWS 30-Jun-1989
!	- Added modules PPL$Delete and PPL$WorkQ to the library
!	- Added new application creation flags and messages
!	- Added new work queue and object deletion flags and messages
!
! V53-2 - Added ppl$m_noclisym,ppl$m_nolognam,ppl$m_nokeypad,	PJC 25-Aug-1989
!	  ppl$m_notify, ppl$m_nocontrol as flags for ppl$spawn
!	  Commented out ppl$$gl_contect and ppl$$gl_pplsect
!
! V60-1	- Added ppl$m_spin_counted, ppl$m_call_unique,		PJC 20-Jul-1990
!	  and ppl$m_proc_unique.
!
! V70-1 - EVMS/Alpha port: make this a machine specific file.	PJC 12-Nov-1991
!
! V62-1 - Removed workq JSB routines; bumped GSMATCH.		WWS 16-Aug-1994
!	  Also, sync'd image ident string with VAX.
!	  (And deleted a whole bunch of commented out VAX stuff.)
!
!+
! Specify image name and ident.  Note that this is not the same as
! the global section ident given with GSMATCH.  IDENT should change
! each time PPLRTL changes in a released version, such as a maintenance
! update.  GSMATCH should change only when the vector is modified in an
! incompatible (backwards) fashion.
!-

NAME=PPLRTL
IDENT="V62-27-0"
GSMATCH=LEQUAL,1,3

!+
! Define psect required by the AMACRO emulation routines
!-
PSECT = _AMAC$LINKAGE, NOEXE

!+
! Most other RTL components have COLLECT and/or CLUSTER options.
! PPLRTL doesn't (yet) because the link map looks good without them,
! and I don't have the time to verify the effect of putting them in.
!-
!COLLECT=CLUSTER1,psect,psect,...
!COLLECT=CLUSTER2,psect,psect,...

!+
! Specify the entries in the symbol vector
!-

SYMBOL_VECTOR = ( -
	PPL$INITIALIZE			= procedure, -	! 0000 VCALL
	PPL$TERMINATE			= procedure, -	! 0008 VCALL 
	PPL$GET_INDEX			= procedure, -	! 0010 VCALL 
	PPL$UNIQUE_NAME			= procedure, -	! 0018 VCALL 
	PPL$SPAWN			= procedure, -	! 0020 VCALL 
	PPL$CREATE_SEMAPHORE		= procedure, -	! 0028 VCALL 
	PPL$CREATE_SPIN_LOCK		= procedure, -	! 0030 VCALL
	PPL$FIND_OBJECT_ID		= procedure, -	! 0038 VCALL
	PPL$RELEASE_SPIN_LOCK		= procedure, -	! 0040 VCALL 
	PPL$READ_SEMAPHORE		= procedure, -	! 0048 VCALL 
	PPL$SEIZE_SPIN_LOCK		= procedure, -	! 0050 VCALL 
	PPL$CREATE_SHARED_MEMORY	= procedure, -	! 0058 VCALL 
	PPL$DELETE_SHARED_MEMORY	= procedure, -	! 0060 VCALL 
	PPL$FLUSH_SHARED_MEMORY		= procedure, -	! 0068 VCALL 
	PPL$INCREMENT_SEMAPHORE		= procedure, -	! 0070 VCALL 
	PPL$DECREMENT_SEMAPHORE		= procedure, -	! 0078 VCALL 
	PPL$CREATE_VM_ZONE		= procedure, -	! 0080 VCALL 
	PPL$CREATE_BARRIER		= procedure, -	! 0088 VCALL 
	PPL$WAIT_AT_BARRIER		= procedure, -	! 0090 VCALL 
	PPL$INDEX_TO_PID		= procedure, -	! 0098 VCALL 
	PPL$PID_TO_INDEX		= procedure, -	! 00A0 VCALL 
	PPL$STOP			= procedure, -	! 00A8 VCALL 
	PPL$SET_QUORUM			= procedure, -	! 00B0 VCALL 
	PPL$ADJUST_QUORUM		= procedure, -	! 00B8 VCALL 
	PPL$CREATE_EVENT		= procedure, -	! 00C0 VCALL 
	PPL$TRIGGER_EVENT		= procedure, -	! 00C8 VCALL 
	PPL$ENABLE_EVENT_AST		= procedure, -	! 00D0 VCALL 
	PPL$ENABLE_EVENT_SIGNAL		= procedure, -	! 00D8 VCALL 
	PPL$AWAIT_EVENT			= procedure, -	! 00E0 VCALL 
	PPL$READ_EVENT			= procedure, -	! 00E8 VCALL 
	PPL$READ_BARRIER		= procedure, -	! 00F0 VCALL 
	PPL$CREATE_APPLICATION		= procedure, -	! 00F8 VCALL 
	PPL$DELETE_APPLICATION		= procedure, -	! 0100 VCALL 
	PPL$CREATE_WORK_QUEUE		= procedure, -	! 0108 VCALL 
	PPL$DELETE_WORK_QUEUE		= procedure, -	! 0110 VCALL 
	PPL$READ_WORK_QUEUE		= procedure, -	! 0118 VCALL 
	PPL$INSERT_WORK_ITEM		= procedure, -	! 0120 VCALL 
	PPL$REMOVE_WORK_ITEM		= procedure, -	! 0128 VCALL 
	PPL$DELETE_WORK_ITEM		= procedure, -	! 0130 VCALL 
	PPL$DELETE_BARRIER		= procedure, -	! 0138 VCALL 
	PPL$DELETE_EVENT		= procedure, -	! 0140 VCALL 
	PPL$DELETE_SEMAPHORE		= procedure, -	! 0148 VCALL 
	PPL$DELETE_SPIN_LOCK		= procedure, -	! 0150 VCALL 
	PPL$DELETE_VM_ZONE		= procedure, -	! 0158 VCALL 
	PPL$DISABLE_EVENT		= procedure, -	! 0160 VCALL 
	PPL$RESET_EVENT			= procedure, -	! 0168 VCALL 
	PPL$READ_SPIN_LOCK		= procedure, -	! 0170 VCALL 
	PPL$SET_SEMAPHORE_MAXIMUM	= procedure, -	! 0178 VCALL 
	PPL$ADJUST_SEMAPHORE_MAXIMUM	= procedure, -	! 0180 VCALL 
	PPL$DECREMENT_SEMAPHORE_R2	= procedure, -	! 0188 VJSB 
	PPL$INCREMENT_SEMAPHORE_R0	= procedure, -	! 0190 VJSB 
	PPL$WAIT_AT_BARRIER_R2		= procedure, -	! 0198 VJSB 
	SPARE, -					! 01A0 FUTURECALL
	SPARE, -					! 01A8 FUTURECALL
	PPL$SEIZE_SPIN_LOCK_R1		= procedure, -	! 01B0 VJSB 
	PPL$RELEASE_SPIN_LOCK_R0	= procedure, -	! 01B8 VJSB 
 	PPL$$EXPREG			= procedure, -	! 01D8 VCALL
	PPL$K_INIT_SIZE			= data, -	! Default PPL allocation
	PPL$K_ABNORMAL_EXIT		= data, -	! Abnormal_exit event id
	PPL$K_NORMAL_EXIT		= data, -	! Normal_exit event id
	PPL$M_NOZERO			= data, -	! Zero global section
	PPL$M_NOWRT			= data, -	! Read-only section
	PPL$M_FLUSH			= data, -	! Flush the section
	PPL$M_PIC			= data, -	! (Internal use only)
	PPL$M_NOUNI			= data, -	! Don't make unique
	PPL$M_PERM			= data, -	! Permanent sections
	PPL$M_SYSTEM			= data, -	! system sections/locks
	PPL$M_JOINONLY			= data, -	! join existing app
	PPL$M_FORMONLY			= data, -	! Only form a new app
	PPL$M_INIT_SYNCH		= data, -	! Synch sub-proc create
	PPL$M_NODEBUG			= data, -	! run without DEBUG
	PPL$M_STOP_CHILDREN		= data, -	! Abort all subprocesses
	PPL$M_NON_BLOCKING		= data, -	! Don't wait locks/sems
	PPL$M_NOTIFY_ONE		= data, -	! Notify 1 event-waiter
	PPL$M_SPIN_WAIT			= data, -	! Spin rather than $hib
	PPL$M_SPIN_COUNTED		= data, -	! Spin for a count
	PPL$M_ATHEAD			= data, -	! Insert at queue head
	PPL$M_DELETEALL			= data, -	! Delete maching members
	PPL$M_TAILFIRST			= data, -	! Start search at tail
	PPL$M_FROMTAIL			= data, -	! Remove at queue tail
	PPL$M_FORCEDEL			= data, -	! forced del of workq
	PPL$M_NOCLISYM			= data, -	! Don't inherit CLI syms
	PPL$M_NOLOGNAM			= data, -	! Don't inherit logicals
	PPL$M_NOKEYPAD			= data, -	! Inherit keypad setting
	PPL$M_NOTIFY			= data, -	! Broadcast to sys$outp
	PPL$M_NOCONTROL			= data, -	! No cr/line-feed 
	PPL$M_CALL_UNIQUE		= data, -	! Name unique to call
	PPL$M_PROC_UNIQUE		= data, -	! Name unique to process
	PPL$M_NOSAVE_PROC_INFO		= data, -	! Reuse proc blocks
	PPL$M_IGNORE_EXITS		= data, -	! Exit events upon request
	PPL$_FACILITY			= data, -	! Our facility code
	PPL$_ABNORMAL_EXIT		= data, -
	PPL$_APPALREXI			= data, -
	PPL$_ATTUSETWO			= data, -
	PPL$_BADLOGIC			= data, -
	PPL$_BUFOVFL			= data, -
	PPL$_CREATED			= data, -
	PPL$_CREATED_SOME		= data, -
	PPL$_DELETED			= data, -
	PPL$_ELEALREXI			= data, -
	PPL$_ELEINUSE			= data, -
	PPL$_EVENT_OCCURRED		= data, -
	PPL$_EXHNEVCAL			= data, -
	PPL$_EXITSTATUS			= data, -
	PPL$_FORMEDAPP			= data, -
	PPL$_IN_BARRIER_WAIT		= data, -
	PPL$_INCOMPARG			= data, -
	PPL$_INCOMPEXI			= data, -
	PPL$_INSVIRMEM			= data, -
	PPL$_INTDELPRC			= data, -
	PPL$_INTTERMIN			= data, -
	PPL$_INVAPPNAM			= data, -
	PPL$_INVARG			= data, -
	PPL$_INVDESC			= data, -
	PPL$_INVELEID			= data, -
	PPL$_INVELENAM			= data, -
	PPL$_INVELETYP			= data, -
	PPL$_INVNUMCHI			= data, -
	PPL$_INVSEMINI			= data, -
	PPL$_INVSEMMAX			= data, -
	PPL$_JOINEDAPP			= data, -
	PPL$_LOCNOTEST			= data, -
	PPL$_NO_SUCH_PARTY		= data, -
	PPL$_NOINIT			= data, -
	PPL$_NOMATCH			= data, -
	PPL$_NONPIC			= data, -
	PPL$_NOONE_ENABLED		= data, -
	PPL$_NORMAL			= data, -
	PPL$_NORMAL_EXIT		= data, -
	PPL$_NOSECEX			= data, -
	PPL$_NOSUCHAPP			= data, -
	PPL$_NOSUCHELE			= data, -
	PPL$_NOSUCHLOC			= data, -
	PPL$_NOSUCHNAM			= data, -
	PPL$_NOT_AVAILABLE		= data, -
	PPL$_NOTIMP			= data, -
	PPL$_OPENIN			= data, -
	PPL$_OPENOUT			= data, -
	PPL$_SEMALRMAX			= data, -
	PPL$_SEMININON			= data, -
	PPL$_SYSERROR			= data, -
	PPL$_WRONUMARG			= data -
	)
                                         
                              

!+
! Specify modules to be included.  
!-
OBJ$:PPLRTL/INCLUDE=(-
  PPL$ALLOC,-
  PPL$BITS,-
  PPL$CHOOSE,-
  PPL$CREBARR,-
  PPL$CREPROC,-
  PPL$CRESEM,-
  PPL$CRESPINLOCK,-
  PPL$DELETE,-
  PPL$EVENT,-
  PPL$FINDID,-
  PPL$INTERF,-
  PPL$MSGDEF,-
  PPL$NAMES,-
  PPL$RELSPINLOCK,-
  PPL$RETSEMVAL,-
  PPL$SECT,-
  PPL$SEIZESPINLOCK,-
  PPL$SEM,-
  PPL$TELL,-
  PPL$TOP,-
  PPL$UNIQUE,-
!  PPL$UTIL,-
  PPL$VM,-
  PPL$VM_PAGE,-
  PPL$JUMP_CODE,-
  PPL$WORKQ)

shrlib$:lib$msgdef

SYS$LIBRARY:STARLET/INCLUDE=(BLI$CALLG,SYS$SSDEF)

SYS$LIBRARY:LIBOTS.EXE/SHARE

SYS$LIBRARY:LIBRTL.EXE/SHARE

shrLIB$:AMAC$EMULATION_ROUTINES/LIBRARY

SYS$LIBRARY:SYS$PUBLIC_VECTORS.EXE/SHARE

