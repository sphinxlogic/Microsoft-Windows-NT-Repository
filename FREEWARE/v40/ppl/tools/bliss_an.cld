 ! This is the CLD file for the Alpha-NATIVE VMS BLISS compilers.  If you make
 ! changes here, put them into BLISS.CLD.
 !
 !  The options for the 32EN compiler are the same as the 32E compiler.
 !
 !
 !      Date	! Name	! Description
 !_______________!_______!______________________________________________________________
 !  18-Mar-1992	!  AWF	! 5-001 Created from BLISS.CLD Ver 5-013.
 !  15-Jul-1992  !  AWF  ! 5-002 Changed type names to match BLISS.CLD.
 !   1-Dec-1992	!  GES	! 5-003	Changed GRANULARITY to use keywords.
 !  11-Jun-1993	!  GES	! 5-004	Remove extra /LANGUAGE keywords (AO, AW, I)
 !  11-Jun-1993	!  GES	! 5-005	Add /[NO]INITIAL_PSECT
 !  15-Jul-1993	!  GES	! 5-006	Add /CHECK=[NO]SHARE
 !  13-Sep-1993	!  GES	! 5-007	Add /[NO]COUNT
 !  16-Mar-1994	!  GES	! 5-008	Add /INCLUDE, BLISS-64E.
 !  10-Jan-1995	!  GES	! 5-009	Add /ASSUME=SIGNED_LONG
 !  21-Jun-1995	!  GES	! 5-010	Add /TUNE
 !  14-Jul-1995	!  GES	! 5-011	Change /TUNE to /OPT=TUNE; add /ARCHITECTURE.
 !  14-Mar-1996	!  GES	! 5-012	Add /ASSUME=QUAD_LITERALS.
 !  24-Mar-1997	!  GES	! 5-013	Add EV56
 
 ! Keywords for the /NAMES qualifier for non UNIX compilers.
 !
 define type names_opt_non_unix
         keyword UPPERCASE,          nonnegatable,default
         keyword LOWERCASE,          nonnegatable
 
 ! Keywords for the /NAMES qualifier for UNIX compilers.
 !
 define type names_opt_unix
         keyword UPPERCASE,          nonnegatable
         keyword LOWERCASE,          nonnegatable,default
 
 ! Keywords for the /CROSS_REFERENCE qualifier for all compilers.
 !
 define type cross_opt_all
 	keyword MULTIPLE,	negatable
 
 ! Keywords for the /DESIGN qualifier for all compilers.
 !
 define type design_opt_all
 	keyword COMMENTS,	negatable
 	keyword PLACEHOLDERS,	negatable
 
 ! Keywords for the /CHECK qualifier for non GEM compilers.
 !
 define type check_opt_non_gem
 	keyword ALIGNMENT,	negatable
 	keyword FIELD,		negatable, default
 	keyword INITIAL,	negatable, default
 	keyword OPTIMIZE,	negatable, default
 	keyword REDECLARE,	negatable
 	keyword SHARE,		negatable, default
 
 ! Keywords for the /CHECK qualifier for 32 bit gem compilers.
 !
 define type check_opt_gem_32
 	keyword ADDRESS_TAKEN,	negatable
 	keyword ALIGNMENT,	negatable, default
 	keyword ALL
 	keyword NONE
 	keyword FIELD,		negatable, default
 	keyword OPTIMIZE,	negatable, default
 	keyword REDECLARE,	negatable
 	keyword SHARE,		negatable, default
 
 ! Keywords for the /CHECK qualifier for 64 bit gem compilers.
 !
 define type check_opt_gem_64
 	keyword ADDRESS_TAKEN,	negatable
 	keyword ALIGNMENT,	negatable, default
 	keyword ALL
 	keyword NONE
 	keyword FIELD,		negatable, default
 	keyword OPTIMIZE,	negatable, default
 	keyword REDECLARE,	negatable
 	keyword LONGWORD,	negatable
 	keyword SHARE,		negatable, default
 
 ! Keywords for the /DUMP qualifier for for non GEM compilers.
 !
 define type dump_opt_non_gem
 	keyword SYMBOL_TABLE
 	keyword FLOW
 	keyword DELAY
 	keyword TNBIND
 	keyword CODE
 	keyword FINAL
 
 ! Keywords for the /ENVIRONMENT qualifier for BLISS-16.
 !
 define type env_opt16
 	keyword	EIS,		negatable, default
 	keyword	LSI11
 	keyword	ODT
 	keyword	PIC
 	keyword	T11
 
 ! Keywords for the /ENVIRONMENT qualifier for GEM compilers.
 
 define type env_opt_gem
 	keyword FP,		negatable
 
 ! Keywords for the /GRANULARITY qualifier for GEM compilers.
 !
 define type gran_gem
 	keyword BYTE
 	keyword LONGWORD
 	keyword QUADWORD,	default
 
 ! Keywords for the /LANGUAGE qualifier
 
 define type language_opt_all
 	keyword COMMON
 	keyword BLISS16
 	keyword BLISS32
 	keyword BLISS36
 	keyword BLISS32M
 	keyword BLISS32E
 	keyword BLISS64E
 
 ! Keywords for the /MACHINE_CODE_LIST qualifier for BLISS-32V
 !
 define type machine_opt_32v
 	keyword ASSEMBLER,	negatable
 	keyword BINARY,		negatable, default
 	keyword COMMENTARY,	negatable, default
 	keyword OBJECT,		negatable, default
 	keyword SYMBOLIC,	negatable, default
 	keyword UNIQUE_NAMES,	negatable
 
 ! Keywords for the /MACHINE_CODE_LIST qualifier for Bliss-16
 !
 define type machine_opt_16
 	keyword	ABSOLUTE,	negatable		! Only valid for B16
 	keyword ASSEMBLER,	negatable
 	keyword BINARY,		negatable, default
 	keyword COMMENTARY,	negatable, default
 	keyword OBJECT,		negatable, default
 	keyword SYMBOLIC,	negatable, default
 	keyword UNIQUE_NAMES,	negatable
 
 ! Keywords for /ARCHITECTURE and /OPTIMIZE=TUNE for all Alpha compilers.
 !
 define type TUNE_ARCH_OPTIONS
 	keyword GENERIC
 	keyword HOST
 	keyword EV4
 	keyword EV5
 	keyword EV56
 	keyword EV6
 	keyword LPA6
 
 ! Keywords for the /OPTIMIZE qualifier for non GEM compilers.
 !
 define type opt_opt_non_gem
 	keyword LEVEL,		value(required)
 	keyword QUICK,		negatable
 	keyword SAFE,		negatable, default
 	keyword SPEED
 	keyword SPACE,		default
 
 ! Keywords for the /OPTIMIZE qualifier for GEM compilers.
 !
 define type opt_opt_gem
 	keyword LEVEL,		value(required)
 	keyword TUNE,		value(required,type=tune_arch_options)
 
 ! Keywords for the /SOURCE qualifier for non GEM compilers.
 !
 define type src_opt_non_gem
 	keyword EXPAND_MACROS,	negatable
 	keyword HEADER,		negatable, default
 	keyword LIBRARY,	negatable
 	keyword PAGE_SIZE,	value(required)
 	keyword REQUIRE,	negatable
 	keyword SOURCE,		negatable, default
 	keyword TRACE_MACROS,	negatable
 
 ! Keywords for the /SOURCE qualifier for GEM compilers.
 !
 define type src_opt_gem
 	keyword EXPAND_MACROS,	negatable
 	keyword LIBRARY,	negatable
 	keyword PAGE_SIZE,	value(required)
 	keyword REQUIRE,	negatable
 	keyword SOURCE,		negatable, default
 	keyword TRACE_MACROS,	negatable
 
 ! Keywords for the /TERMINAL qualifier for non GEM compilers.
 !
 define type term_opt_non_gem
 	keyword STATISTICS,	negatable
 	keyword ERRORS,		negatable, default
 
 ! Keywords for the /TERMINAL qualifier for GEM compilers.
 !
 define type term_opt_gem
 	keyword ERRORS,		negatable, default
 
 ! Keywords for /ASSUME=BLOCK_ALIGNMENT
 !
 define type block_alignment_options
 	keyword FULLWORD,	default
 	keyword	NATURAL
 
 ! Keywords for the /ASSUME qualifier for 32 bit GEM compilers.
 !
 define type assume_opt_gem_32
         keyword ALIAS,		negatable
 	keyword BLOCK_ALIGNMENT,value(required,type=block_alignment_options)
 
 ! Keywords for the /ASSUME qualifier for 64 bit GEM compilers.
 !
 define type assume_opt_gem_64
         keyword ALIAS,		negatable
 	keyword LONG_DEFAULT,	negatable
 	keyword BLOCK_ALIGNMENT,value(required,type=block_alignment_options)
 	keyword QUAD_LITERALS,	negatable, default
 	keyword REF_LONG,	negatable
 	keyword SIGNED_LONG,	negatable
 
 
 !++
 !
 ! Definition of the BLISS command syntax
 !
 !--
 
 define verb BLISS
 	image BLISS32EN,
 
 	parameter p1,		label=file,
 				prompt="File",
 				value(required,type=$infile,list)
 
 	! dummy qualifier in case they say BLISS/A32
 	!
 	qualifier A32,		placement=global, nonnegatable, default
 
 	qualifier A64,		placement=global,
 				nonnegatable,
 				syntax=bliss64e
 
 	! Output file qualifiers.
 	!
 	qualifier ANALYSIS_DATA,
 				placement=positional,
 				value(type=$outfile)
 
 	qualifier DIAGNOSTICS	placement=positional,
 				value(type=$outfile)
 
 	qualifier LIBRARY,	placement=positional,
 				value(type=$outfile)
 
 	qualifier LIST,		placement=positional,
 				value(type=$outfile),
 				batch
 
 	qualifier OBJECT,	placement=positional,
 				value(type=$outfile),
 				default
 
 	qualifier INCLUDE,	placement=positional,
 				value(list),
 				nonnegatable
 
 	! Yes/No qualifiers.
 
 	qualifier CODE,		placement=positional,
 				default
 
 	qualifier COUNT,	placement=positional
 
 	qualifier INITIAL_PSECT,placement=positional,
 				default
 
 	qualifier MACHINE_CODE,
 				placement=positional,
 				default
 
         qualifier DEBUG,        placement=positional
 
 	qualifier TRACEBACK,	placement=positional,
 				default
 
 	qualifier TIE,		placement=positional
 
 	! Numeric value qualifiers.
 
 	qualifier ERROR_LIMIT,	placement=positional,
 				value(default=1)
 
 	qualifier VARIANT,	placement=positional,
 				value(default=1),
 				nonnegatable
 
 	qualifier SYNTAX_LEVEL,	placement=positional,
 				value(default=2),
 				nonnegatable
 
 
 	! Keyword list qualifiers.
 
 	qualifier CHECK,	placement=positional,
 				value(required,list,type=check_opt_gem_32),
 				nonnegatable,
 				default
 
 	qualifier CROSS_REFERENCE,
 				placement=positional,
 				value(list,type=cross_opt_all)
 
 	qualifier ENVIRONMENT,
 				placement=positional,
 				value(list,type=env_opt_gem),
 				nonnegatable
 
 	qualifier GRANULARITY,	placement=positional,
 				value(type=gran_gem),
 				nonnegatable
 
 	qualifier LANGUAGE,	placement=positional,
 				value(required,list,type=language_opt_all),
 				nonnegatable
 
 	qualifier OPTIMIZE,	placement=positional,
 				value(list,type=opt_opt_gem),
 				default
 
 	qualifier SOURCE_LIST,	placement=positional,
 				value(required,list,type=src_opt_gem),
 				nonnegatable,
 				default
 
 	qualifier TERMINAL,	placement=positional,
 				value(required,list,type=term_opt_gem),
 				nonnegatable,
 				default
 
 	qualifier ARCHITECTURE,	placement=positional,
 				value(required,type=tune_arch_options),
 				nonnegatable
 
         qualifier ASSUME,       placement=global,
                                 value(list,type=assume_opt_gem_32),
                                 nonnegatable
 
 
         qualifier NAMES,        placement=positional,
                                 value(type=names_opt_non_unix),
                                 nonnegatable,
                                 default
 
 	! Developer-only qualifiers
 
 	qualifier BREAKPOINTS,	label=gem_breakpoints,
 				placement=global,
 				value(list,required)
 
 	qualifier GEMDEBUG,	label=gem_debug,
 				placement=global
 
 	qualifier DUMPS,	label=gem_dumps,
 				placement=global,
 				value(list,required)
 
 	qualifier SWITCHES,	label=gem_switches,
 				placement=global,
 				value(list,required)
 
 	qualifier GEMTRACEPOINTS,label=gem_tracepoints,
 				placement=global,
 				value(list,required)
 
 	disallow LIBRARY AND OBJECT
 
 !++
 !
 ! Definition of the BLISS-64E command syntax
 !
 !--
 
 define syntax BLISS64E
 	image BLISS64EN
 
 	! dummy qualifier in case they say BLISS/A64/A64
 	!
 	qualifier A64,		placement=global, nonnegatable, default
 
 	! Output file qualifiers.
 	!
 	qualifier ANALYSIS_DATA,
 				placement=positional,
 				value(type=$outfile)
 
 	qualifier DIAGNOSTICS	placement=positional,
 				value(type=$outfile)
 
 	qualifier LIBRARY,	placement=positional,
 				value(type=$outfile)
 
 	qualifier LIST,		placement=positional,
 				value(type=$outfile),
 				batch
 
 	qualifier OBJECT,	placement=positional,
 				value(type=$outfile),
 				default
 
 	qualifier INCLUDE,	placement=positional,
 				value(list),
 				nonnegatable
 
 	! Yes/No qualifiers.
 
 	qualifier CODE,		placement=positional,
 				default
 
 	qualifier COUNT,	placement=positional
 
 	qualifier INITIAL_PSECT,placement=positional,
 				default
 
 	qualifier MACHINE_CODE,
 				placement=positional,
 				default
 
         qualifier DEBUG,        placement=positional
 
 	qualifier TRACEBACK,	placement=positional,
 				default
 
 	qualifier TIE,		placement=positional
 
 	! Numeric value qualifiers.
 
 	qualifier ERROR_LIMIT,	placement=positional,
 				value(default=1)
 
 	qualifier VARIANT,	placement=positional,
 				value(default=1),
 				nonnegatable
 
 	qualifier SYNTAX_LEVEL,	placement=positional,
 				value(default=2),
 				nonnegatable
 
 
 	! Keyword list qualifiers.
 
 	qualifier CHECK,	placement=positional,
 				value(required,list,type=check_opt_gem_64),
 				nonnegatable,
 				default
 
 	qualifier CROSS_REFERENCE,
 				placement=positional,
 				value(list,type=cross_opt_all)
 
 	qualifier ENVIRONMENT,
 				placement=positional,
 				value(list,type=env_opt_gem),
 				nonnegatable
 
 	qualifier GRANULARITY,	placement=positional,
 				value(type=gran_gem),
 				nonnegatable
 
 	qualifier LANGUAGE,	placement=positional,
 				value(required,list,type=language_opt_all),
 				nonnegatable
 
 	qualifier OPTIMIZE,	placement=positional,
 				value(list,type=opt_opt_gem),
 				default
 
 	qualifier SOURCE_LIST,	placement=positional,
 				value(required,list,type=src_opt_gem),
 				nonnegatable,
 				default
 
 	qualifier TERMINAL,	placement=positional,
 				value(required,list,type=term_opt_gem)
 				nonnegatable,
 				default
 
 	qualifier ARCHITECTURE,	placement=positional,
 				value(required,type=tune_arch_options),
 				nonnegatable
 
         qualifier ASSUME,       placement=global,
                                 value(list,type=assume_opt_gem_64),
                                 nonnegatable,
 				default
 
         qualifier NAMES,        placement=positional,
                                 value(type=names_opt_non_unix),
                                 nonnegatable,
                                 default
 
 	! Developer-only qualifiers
 
 	qualifier BREAKPOINTS,	label=gem_breakpoints,
 				placement=global,
 				value(list,required)
 
 	qualifier GEMDEBUG,	label=gem_debug,
 				placement=global
 
 	qualifier DUMPS,	label=gem_dumps,
 				placement=global,
 				value(list,required)
 
 	qualifier SWITCHES,	label=gem_switches,
 				placement=global,
 				value(list,required)
 
 	qualifier GEMTRACEPOINTS,label=gem_tracepoints,
 				placement=global,
 				value(list,required)
 
 	disallow LIBRARY AND OBJECT
 
