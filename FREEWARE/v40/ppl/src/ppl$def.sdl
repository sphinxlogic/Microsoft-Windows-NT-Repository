MODULE PPL$DEF;

/* Definitions for RTL Parallel Processing Facility - PPL
{****************************************************************************
{*									    *
{*  COPYRIGHT (c) 1987 BY						    *
{*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
{*  ALL RIGHTS RESERVED.						    *
{* 									    *
{*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
{*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
{*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
{*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
{*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
{*  TRANSFERRED.							    *
{* 									    *
{*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
{*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
{*  CORPORATION.							    *
{* 									    *
{*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
{*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
{* 									    *
{*									    *
{****************************************************************************

{ Edit history:
{
{ 1-001 - Original.						DLR 17-AUG-1987
{
{ V53-001 - Added flags for HICKORY and beyond...		WWS 30-Aug-1989
{
{ V60-001 - Add new flags for create application		PJC 30-Aug-1993
{



/*
/* Pre-defined event ids.
/*

#start = -2;
		{ Decrement this start value by the number of new defs you
		{ add.  Always add new defs at the front of this one, so that
		{ existing values don't change and no one has to recompile.
constant
    (
    ABNORMAL_EXIT,	/* abnormal participant termination
    NORMAL_EXIT		/* normal participant termination
    )
	equals #start increment 1 prefix PPL$;



/*
/* Shared memory options flags.
/*

aggregate mem_options structure prefix PPL$;
    NOZERO		bitfield mask;		/* not demand-zero
    NOWRT		bitfield mask;		/* read-only
    FLUSH		bitfield mask;		/* write to disk
    NOUNI		bitfield mask;		/* non-unique name not requested
    mopt_spare		bitfield mask length 32-^;	/* extra bits
end mem_options;



/*
/* Processing options flags.
/*

aggregate proc_options structure prefix PPL$;
    INIT_SYNCH		bitfield mask;	/* parent blocks until children init
    NODEBUG		bitfield mask;	/* disable DEBUG
    STOP_CHILDREN	bitfield mask;	/* stop children of terminating process
    NON_BLOCKING	bitfield mask;	/* don't block if semaphore unavailable
    NOTIFY_ONE		bitfield mask;	/* notify only one enabler for event
    SPIN_WAIT		bitfield mask;	/* spin rather than $HIBER
    FORMONLY		bitfield mask;  /* Only form (do not join) a new appl.
    JOINONLY		bitfield mask;  /* Only join (do not form) a new appl.
    PERM		bitfield mask;	/* Create a permanent application
    SYSTEM		bitfield mask;	/* Create a system-wide application
    DELETEALL		bitfield mask;  /* Delete all corresponding work items
    TAILFIRST		bitfield mask;  /* Delete from tail of queue
    ATHEAD		bitfield mask;  /* Insert at the head of queue
    FROMTAIL		bitfield mask;  /* Remove from tail of queue
    FORCEDEL		bitfield mask;  /* Force deletion of work queue
    NOCLISYM		bitfield mask;  /* Do not inherit parent's CLI symbols
    NOLOGNAM		bitfield mask;  /* Do not inherit parent's logicals
    NOKEYPAD		bitfield mask;  /* Inherit parent's keypad state & defs
    NOTIFY		bitfield mask;  /* Broadcast message on child terminate
    NOCONTROL		bitfield mask;  /* No carriage control prefix on prompt
    CALL_UNIQUE		bitfield mask;	/* Request call unique name
    PROC_UNIQUE		bitfield mask;	/* Request process unique name
    SPIN_COUNTED	bitfield mask;	/* Spin for counted period before hiber
    NOSAVE_PROC_INFO	bitfield mask;
    IGNORE_EXITS	bitfield mask;
    popt_spare		bitfield mask length 32-^;	/* extra bits
end proc_options;


END_MODULE PPL$DEF;
