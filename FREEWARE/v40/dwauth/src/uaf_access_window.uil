!module	authorize_access_window
!	version		= 'X1.0'
!	names		= case_insensitive

! Strings defined for the access restriction lists.  These strings represent
! hourly increments for a 24 hour day.

value
	uaf$t_hour_list			: string_table	(' 00:00 - 01:00 ',
							 ' 01:00 - 02:00 ',
							 ' 02:00 - 03:00 ',
							 ' 03:00 - 04:00 ',
							 ' 04:00 - 05:00 ',
							 ' 05:00 - 06:00 ',
							 ' 06:00 - 07:00 ',
							 ' 07:00 - 08:00 ',
							 ' 08:00 - 09:00 ',
							 ' 09:00 - 10:00 ',
							 ' 10:00 - 11:00 ',
							 ' 11:00 - 12:00 ',
							 ' 12:00 - 13:00 ',
							 ' 13:00 - 14:00 ',
							 ' 14:00 - 15:00 ',
							 ' 15:00 - 16:00 ',
							 ' 16:00 - 17:00 ',
							 ' 17:00 - 18:00 ',
							 ' 18:00 - 19:00 ',
							 ' 19:00 - 20:00 ',
							 ' 20:00 - 21:00 ',
							 ' 21:00 - 22:00 ',
							 ' 22:00 - 23:00 ',
							 ' 23:00 - 00:00 ');

! Strings for the access restriction dialog box.

	uaf$t_pri_access_restriction_title	: compound_string	("Authorization entry primary access restrictions");
	uaf$t_pri_access_ok			: compound_string	("OK");
	uaf$t_pri_access_cancel			: compound_string	("Cancel");
	uaf$t_sec_access_restriction_title	: compound_string	("Authorization entry secondary access restrictions");
	uaf$t_sec_access_ok			: compound_string	("OK");
	uaf$t_sec_access_cancel			: compound_string	("Cancel");
	uaf$t_local_access			: compound_string	("Local Access:");
	uaf$t_batch_access			: compound_string	("Batch Access:");
	uaf$t_dialup_access			: compound_string	("Dialup Access:");
	uaf$t_remote_access			: compound_string	("Remote Access:");
	uaf$t_network_access			: compound_string	("Network Access:");

! Define the primary access restriction display.

object	pri_access_restriction_window	: XmFormDialog
		{arguments	{XmNdialogTitle		= uaf$t_pri_access_restriction_title;
				 XmNcancelButton	= pri_access_cancel_button;
				 XmNdefaultButton	= pri_access_ok_button;
				 XmNunitType		= XmPIXELS;
				 XmNautoUnmanage	= false;
				 XmNdefaultPosition	= false;
				 };
		 controls	{XmLabel		pri_access_local_label;
				 XmScrolledWindow	pri_access_local;
				 XmLabel		pri_access_batch_label;
				 XmScrolledWindow	pri_access_batch;
				 XmLabel		pri_access_dialup_label;
				 XmScrolledWindow	pri_access_dialup;
				 XmLabel		pri_access_remote_label;
				 XmScrolledWindow	pri_access_remote;
				 XmLabel		pri_access_network_label;
				 XmScrolledWindow	pri_access_network;

				 XmPushButton	pri_access_ok_button;
				 XmPushButton	pri_access_cancel_button;
				 };
		};

object	pri_access_local_label	: XmLabel
		{arguments	{XmNlabelString		= uaf$t_local_access;
				 XmNtopAttachment	= XmATTACH_FORM;
				 XmNtopOffset		= uaf$c_top_offset;
				 XmNleftAttachment	= XmATTACH_FORM;
				 XmNleftOffset		= uaf$c_left_offset;
				 }; };
object	pri_access_local		: XmScrolledWindow
		{arguments	{XmNtopAttachment	= XmATTACH_WIDGET;
				 XmNtopOffset		= uaf$c_topbot_widget_offset;
				 XmNtopWidget		= XmLabel pri_access_local_label;
				 XmNbottomAttachment	= XmATTACH_WIDGET;
				 XmNbottomOffset	= uaf$c_bottom_offset;
				 XmNbottomWidget	= XmPushButton pri_access_ok_button;
				 XmNleftAttachment	= XmATTACH_FORM;
				 XmNleftOffset		= uaf$c_left_offset;
				 XmNscrollingPolicy	= XmCONSTANT;
				 XmNscrollBarDisplayPolicy	= XmSTATIC;
				 XmNvisualPolicy	= XmVARIABLE;
				 };
		 controls	{XmList			pri_access_local_list; };
		 };
object	pri_access_local_list	: XmList
		{arguments	{XmNvisibleItemCount	= 12;
				 XmNitems		= uaf$t_hour_list;
				 XmNautomaticSelection	= false;
				 XmNselectionPolicy	= XmMULTIPLE_SELECT;
				 };
		 callbacks	{MrmNcreateCallback		= procedure create_proc (uaf$c_access_pri_local_list);
				 XmNmultipleSelectionCallback	= procedure list_proc (uaf$c_access_pri_local_list); };
		 };

object	pri_access_batch_label	: XmLabel
		{arguments	{XmNlabelString		= uaf$t_batch_access;
				 XmNtopAttachment	= XmATTACH_FORM;
				 XmNtopOffset		= uaf$c_top_offset;
				 XmNleftAttachment	= XmATTACH_WIDGET;
				 XmNleftOffset		= uaf$c_left_offset;
				 XmNleftWidget		= XmScrolledWindow pri_access_local;
				 }; };
object	pri_access_batch		: XmScrolledWindow
		{arguments	{XmNtopAttachment	= XmATTACH_WIDGET;
				 XmNtopOffset		= uaf$c_topbot_widget_offset;
				 XmNtopWidget		= XmLabel pri_access_batch_label;
				 XmNbottomAttachment	= XmATTACH_WIDGET;
				 XmNbottomOffset	= uaf$c_bottom_offset;
				 XmNbottomWidget	= XmPushButton pri_access_ok_button;
				 XmNleftAttachment	= XmATTACH_WIDGET;
				 XmNleftOffset		= uaf$c_left_offset;
				 XmNleftWidget		= XmScrolledWindow pri_access_local;
				 XmNscrollingPolicy	= XmCONSTANT;
				 XmNscrollBarDisplayPolicy	= XmSTATIC;
				 XmNvisualPolicy	= XmVARIABLE;
				 };
		 controls	{XmList			pri_access_batch_list; };
		 };
object	pri_access_batch_list	: XmList
		{arguments	{XmNvisibleItemCount	= 12;
				 XmNitems		= uaf$t_hour_list;
				 XmNautomaticSelection	= false;
				 XmNselectionPolicy	= XmMULTIPLE_SELECT;
				 };
		 callbacks	{MrmNcreateCallback		= procedure create_proc (uaf$c_access_pri_batch_list);
				 XmNmultipleSelectionCallback	= procedure list_proc (uaf$c_access_pri_batch_list); };
		 };

object	pri_access_dialup_label	: XmLabel
		{arguments	{XmNlabelString		= uaf$t_dialup_access;
				 XmNtopAttachment	= XmATTACH_FORM;
				 XmNtopOffset		= uaf$c_top_offset;
				 XmNleftAttachment	= XmATTACH_WIDGET;
				 XmNleftOffset		= uaf$c_left_offset;
				 XmNleftWidget		= XmScrolledWindow pri_access_batch;
				 }; };
object	pri_access_dialup		: XmScrolledWindow
		{arguments	{XmNtopAttachment	= XmATTACH_WIDGET;
				 XmNtopOffset		= uaf$c_topbot_widget_offset;
				 XmNtopWidget		= XmLabel pri_access_dialup_label;
				 XmNbottomAttachment	= XmATTACH_WIDGET;
				 XmNbottomOffset	= uaf$c_bottom_offset;
				 XmNbottomWidget	= XmPushButton pri_access_ok_button;
				 XmNleftAttachment	= XmATTACH_WIDGET;
				 XmNleftOffset		= uaf$c_left_offset;
				 XmNleftWidget		= XmScrolledWindow pri_access_batch;
				 XmNscrollingPolicy	= XmCONSTANT;
				 XmNscrollBarDisplayPolicy	= XmSTATIC;
				 XmNvisualPolicy	= XmVARIABLE;
				 };
		 controls	{XmList			pri_access_dialup_list; };
		 };
object	pri_access_dialup_list	: XmList
		{arguments	{XmNvisibleItemCount	= 12;
				 XmNitems		= uaf$t_hour_list;
				 XmNautomaticSelection	= false;
				 XmNselectionPolicy	= XmMULTIPLE_SELECT;
				 };
		 callbacks	{MrmNcreateCallback		= procedure create_proc (uaf$c_access_pri_dialup_list);
				 XmNmultipleSelectionCallback	= procedure list_proc (uaf$c_access_pri_dialup_list); };
		 };

object	pri_access_remote_label	: XmLabel
		{arguments	{XmNlabelString		= uaf$t_remote_access;
				 XmNtopAttachment	= XmATTACH_FORM;
				 XmNtopOffset		= uaf$c_top_offset;
				 XmNleftAttachment	= XmATTACH_WIDGET;
				 XmNleftOffset		= uaf$c_left_offset;
				 XmNleftWidget		= XmScrolledWindow pri_access_dialup;
				 }; };
object	pri_access_remote		: XmScrolledWindow
		{arguments	{XmNtopAttachment	= XmATTACH_WIDGET;
				 XmNtopOffset		= uaf$c_topbot_widget_offset;
				 XmNtopWidget		= XmLabel pri_access_remote_label;
				 XmNbottomAttachment	= XmATTACH_WIDGET;
				 XmNbottomOffset	= uaf$c_bottom_offset;
				 XmNbottomWidget	= XmPushButton pri_access_ok_button;
				 XmNleftAttachment	= XmATTACH_WIDGET;
				 XmNleftOffset		= uaf$c_left_offset;
				 XmNleftWidget		= XmScrolledWindow pri_access_dialup;
				 XmNscrollingPolicy	= XmCONSTANT;
				 XmNscrollBarDisplayPolicy	= XmSTATIC;
				 XmNvisualPolicy	= XmVARIABLE;
				 };
		 controls	{XmList			pri_access_remote_list; };
		 };
object	pri_access_remote_list	: XmList
		{arguments	{XmNvisibleItemCount	= 12;
				 XmNitems		= uaf$t_hour_list;
				 XmNautomaticSelection	= false;
				 XmNselectionPolicy	= XmMULTIPLE_SELECT;
				 };
		 callbacks	{MrmNcreateCallback		= procedure create_proc (uaf$c_access_pri_remote_list);
				 XmNmultipleSelectionCallback	= procedure list_proc (uaf$c_access_pri_remote_list); };
		 };

object	pri_access_network_label	: XmLabel
		{arguments	{XmNlabelString		= uaf$t_network_access;
				 XmNtopAttachment	= XmATTACH_FORM;
				 XmNtopOffset		= uaf$c_top_offset;
				 XmNleftAttachment	= XmATTACH_WIDGET;
				 XmNleftOffset		= uaf$c_left_offset;
				 XmNleftWidget		= XmScrolledWindow pri_access_remote;
				 }; };
object	pri_access_network		: XmScrolledWindow
		{arguments	{XmNtopAttachment	= XmATTACH_WIDGET;
				 XmNtopOffset		= uaf$c_topbot_widget_offset;
				 XmNtopWidget		= XmLabel pri_access_network_label;
				 XmNbottomAttachment	= XmATTACH_WIDGET;
				 XmNbottomOffset	= uaf$c_bottom_offset;
				 XmNbottomWidget	= XmPushButton pri_access_ok_button;
				 XmNrightAttachment	= XmATTACH_FORM;
				 XmNrightOffset		= uaf$c_right_offset;
				 XmNleftAttachment	= XmATTACH_WIDGET;
				 XmNleftOffset		= uaf$c_left_offset;
				 XmNleftWidget		= XmScrolledWindow pri_access_remote;
				 XmNscrollingPolicy	= XmCONSTANT;
				 XmNscrollBarDisplayPolicy	= XmSTATIC;
				 XmNvisualPolicy	= XmVARIABLE;
				 };
		 controls	{XmList			pri_access_network_list; };
		 };
object	pri_access_network_list	: XmList
		{arguments	{XmNvisibleItemCount	= 10;
				 XmNitems		= uaf$t_hour_list;
				 XmNautomaticSelection	= false;
				 XmNselectionPolicy	= XmMULTIPLE_SELECT;
				 };
		 callbacks	{MrmNcreateCallback		= procedure create_proc (uaf$c_access_pri_network_list);
				 XmNmultipleSelectionCallback	= procedure list_proc (uaf$c_access_pri_network_list); };
		 };

! Define the secondary access restriction display.

object	sec_access_restriction_window	: XmFormDialog
		{arguments	{XmNdialogTitle		= uaf$t_sec_access_restriction_title;
				 XmNcancelButton	= sec_access_cancel_button;
				 XmNdefaultButton	= sec_access_ok_button;
				 XmNunitType		= XmPIXELS;
				 XmNautoUnmanage	= false;
				 XmNdefaultPosition	= false;
				 };
		 controls	{XmLabel		sec_access_local_label;
				 XmScrolledWindow	sec_access_local;
				 XmLabel		sec_access_batch_label;
				 XmScrolledWindow	sec_access_batch;
				 XmLabel		sec_access_dialup_label;
				 XmScrolledWindow	sec_access_dialup;
				 XmLabel		sec_access_remote_label;
				 XmScrolledWindow	sec_access_remote;
				 XmLabel		sec_access_network_label;
				 XmScrolledWindow	sec_access_network;

				 XmPushButton	sec_access_ok_button;
				 XmPushButton	sec_access_cancel_button;
				 };
		};

object	sec_access_local_label	: XmLabel
		{arguments	{XmNlabelString		= uaf$t_local_access;
				 XmNtopAttachment	= XmATTACH_FORM;
				 XmNtopOffset		= uaf$c_top_offset;
				 XmNleftAttachment	= XmATTACH_FORM;
				 XmNleftOffset		= uaf$c_left_offset;
				 }; };
object	sec_access_local		: XmScrolledWindow
		{arguments	{XmNtopAttachment	= XmATTACH_WIDGET;
				 XmNtopOffset		= uaf$c_topbot_widget_offset;
				 XmNtopWidget		= XmLabel sec_access_local_label;
				 XmNbottomAttachment	= XmATTACH_WIDGET;
				 XmNbottomOffset	= uaf$c_bottom_offset;
				 XmNbottomWidget	= XmPushButton sec_access_ok_button;
				 XmNleftAttachment	= XmATTACH_FORM;
				 XmNleftOffset		= uaf$c_left_offset;
				 XmNscrollingPolicy	= XmCONSTANT;
				 XmNscrollBarDisplayPolicy	= XmSTATIC;
				 XmNvisualPolicy	= XmVARIABLE;
				 };
		 controls	{XmList			sec_access_local_list; };
		 };
object	sec_access_local_list	: XmList
		{arguments	{XmNvisibleItemCount	= 12;
				 XmNitems		= uaf$t_hour_list;
				 XmNautomaticSelection	= false;
				 XmNselectionPolicy	= XmMULTIPLE_SELECT;
				 };
		 callbacks	{MrmNcreateCallback		= procedure create_proc (uaf$c_access_sec_local_list);
				 XmNmultipleSelectionCallback	= procedure list_proc (uaf$c_access_sec_local_list); };
		 };

object	sec_access_batch_label	: XmLabel
		{arguments	{XmNlabelString		= uaf$t_batch_access;
				 XmNtopAttachment	= XmATTACH_FORM;
				 XmNtopOffset		= uaf$c_top_offset;
				 XmNleftAttachment	= XmATTACH_WIDGET;
				 XmNleftOffset		= uaf$c_left_offset;
				 XmNleftWidget		= XmScrolledWindow sec_access_local;
				 }; };
object	sec_access_batch		: XmScrolledWindow
		{arguments	{XmNtopAttachment	= XmATTACH_WIDGET;
				 XmNtopOffset		= uaf$c_topbot_widget_offset;
				 XmNtopWidget		= XmLabel sec_access_batch_label;
				 XmNbottomAttachment	= XmATTACH_WIDGET;
				 XmNbottomOffset	= uaf$c_bottom_offset;
				 XmNbottomWidget	= XmPushButton sec_access_ok_button;
				 XmNleftAttachment	= XmATTACH_WIDGET;
				 XmNleftOffset		= uaf$c_left_offset;
				 XmNleftWidget		= XmScrolledWindow sec_access_local;
				 XmNscrollingPolicy	= XmCONSTANT;
				 XmNscrollBarDisplayPolicy	= XmSTATIC;
				 XmNvisualPolicy	= XmVARIABLE;
				 };
		 controls	{XmList			sec_access_batch_list; };
		 };
object	sec_access_batch_list	: XmList
		{arguments	{XmNvisibleItemCount	= 12;
				 XmNitems		= uaf$t_hour_list;
				 XmNautomaticSelection	= false;
				 XmNselectionPolicy	= XmMULTIPLE_SELECT;
				 };
		 callbacks	{MrmNcreateCallback		= procedure create_proc (uaf$c_access_sec_batch_list);
				 XmNmultipleSelectionCallback	= procedure list_proc (uaf$c_access_sec_batch_list); };
		 };

object	sec_access_dialup_label	: XmLabel
		{arguments	{XmNlabelString		= uaf$t_dialup_access;
				 XmNtopAttachment	= XmATTACH_FORM;
				 XmNtopOffset		= uaf$c_top_offset;
				 XmNleftAttachment	= XmATTACH_WIDGET;
				 XmNleftOffset		= uaf$c_left_offset;
				 XmNleftWidget		= XmScrolledWindow sec_access_batch;
				 }; };
object	sec_access_dialup		: XmScrolledWindow
		{arguments	{XmNtopAttachment	= XmATTACH_WIDGET;
				 XmNtopOffset		= uaf$c_topbot_widget_offset;
				 XmNtopWidget		= XmLabel sec_access_dialup_label;
				 XmNbottomAttachment	= XmATTACH_WIDGET;
				 XmNbottomOffset	= uaf$c_bottom_offset;
				 XmNbottomWidget	= XmPushButton sec_access_ok_button;
				 XmNleftAttachment	= XmATTACH_WIDGET;
				 XmNleftOffset		= uaf$c_left_offset;
				 XmNleftWidget		= XmScrolledWindow sec_access_batch;
				 XmNscrollingPolicy	= XmCONSTANT;
				 XmNscrollBarDisplayPolicy	= XmSTATIC;
				 XmNvisualPolicy	= XmVARIABLE;
				 };
		 controls	{XmList			sec_access_dialup_list; };
		 };
object	sec_access_dialup_list	: XmList
		{arguments	{XmNvisibleItemCount	= 12;
				 XmNitems		= uaf$t_hour_list;
				 XmNautomaticSelection	= false;
				 XmNselectionPolicy	= XmMULTIPLE_SELECT;
				 };
		 callbacks	{MrmNcreateCallback		= procedure create_proc (uaf$c_access_sec_dialup_list);
				 XmNmultipleSelectionCallback	= procedure list_proc (uaf$c_access_sec_dialup_list); };
		 };

object	sec_access_remote_label	: XmLabel
		{arguments	{XmNlabelString		= uaf$t_remote_access;
				 XmNtopAttachment	= XmATTACH_FORM;
				 XmNtopOffset		= uaf$c_top_offset;
				 XmNleftAttachment	= XmATTACH_WIDGET;
				 XmNleftOffset		= uaf$c_left_offset;
				 XmNleftWidget		= XmScrolledWindow sec_access_dialup;
				 }; };
object	sec_access_remote		: XmScrolledWindow
		{arguments	{XmNtopAttachment	= XmATTACH_WIDGET;
				 XmNtopOffset		= uaf$c_topbot_widget_offset;
				 XmNtopWidget		= XmLabel sec_access_remote_label;
				 XmNbottomAttachment	= XmATTACH_WIDGET;
				 XmNbottomOffset	= uaf$c_bottom_offset;
				 XmNbottomWidget	= XmPushButton sec_access_ok_button;
				 XmNleftAttachment	= XmATTACH_WIDGET;
				 XmNleftOffset		= uaf$c_left_offset;
				 XmNleftWidget		= XmScrolledWindow sec_access_dialup;
				 XmNscrollingPolicy	= XmCONSTANT;
				 XmNscrollBarDisplayPolicy	= XmSTATIC;
				 XmNvisualPolicy	= XmVARIABLE;
				 };
		 controls	{XmList			sec_access_remote_list; };
		 };
object	sec_access_remote_list	: XmList
		{arguments	{XmNvisibleItemCount	= 12;
				 XmNitems		= uaf$t_hour_list;
				 XmNautomaticSelection	= false;
				 XmNselectionPolicy	= XmMULTIPLE_SELECT;
				 };
		 callbacks	{MrmNcreateCallback		= procedure create_proc (uaf$c_access_sec_remote_list);
				 XmNmultipleSelectionCallback	= procedure list_proc (uaf$c_access_sec_remote_list); };
		 };

object	sec_access_network_label	: XmLabel
		{arguments	{XmNlabelString		= uaf$t_network_access;
				 XmNtopAttachment	= XmATTACH_FORM;
				 XmNtopOffset		= uaf$c_top_offset;
				 XmNleftAttachment	= XmATTACH_WIDGET;
				 XmNleftOffset		= uaf$c_left_offset;
				 XmNleftWidget		= XmScrolledWindow sec_access_remote;
				 }; };
object	sec_access_network		: XmScrolledWindow
		{arguments	{XmNtopAttachment	= XmATTACH_WIDGET;
				 XmNtopOffset		= uaf$c_topbot_widget_offset;
				 XmNtopWidget		= XmLabel sec_access_network_label;
				 XmNbottomAttachment	= XmATTACH_WIDGET;
				 XmNbottomOffset	= uaf$c_bottom_offset;
				 XmNbottomWidget	= XmPushButton sec_access_ok_button;
				 XmNrightAttachment	= XmATTACH_FORM;
				 XmNrightOffset		= uaf$c_right_offset;
				 XmNleftAttachment	= XmATTACH_WIDGET;
				 XmNleftOffset		= uaf$c_left_offset;
				 XmNleftWidget		= XmScrolledWindow sec_access_remote;
				 XmNscrollingPolicy	= XmCONSTANT;
				 XmNscrollBarDisplayPolicy	= XmSTATIC;
				 XmNvisualPolicy	= XmVARIABLE;
				 };
		 controls	{XmList			sec_access_network_list; };
		 };
object	sec_access_network_list	: XmList
		{arguments	{XmNvisibleItemCount	= 10;
				 XmNitems		= uaf$t_hour_list;
				 XmNautomaticSelection	= false;
				 XmNselectionPolicy	= XmMULTIPLE_SELECT;
				 };
		 callbacks	{MrmNcreateCallback		= procedure create_proc (uaf$c_access_sec_network_list);
				 XmNmultipleSelectionCallback	= procedure list_proc (uaf$c_access_sec_network_list); };
		 };

! Define the objects for the access restriction window push buttons.

object	pri_access_ok_button	: XmPushButton
		{arguments	{XmNlabelString		= uaf$t_pri_access_ok;
				 XmNbottomAttachment	= XmATTACH_FORM;
				 XmNbottomOffset	= uaf$c_bottom_offset;
				 XmNleftAttachment	= XmATTACH_FORM;
				 XmNleftOffset		= uaf$c_left_offset;
				 };
		 callbacks	{XmNactivateCallback	= procedure activate_proc (uaf$c_access_pri_ok); };
		 };
object	pri_access_cancel_button	: XmPushButton
		{arguments	{XmNlabelString		= uaf$t_pri_access_cancel;
				 XmNbottomAttachment	= XmATTACH_FORM;
				 XmNbottomOffset	= uaf$c_bottom_offset;
				 XmNleftAttachment	= XmATTACH_WIDGET;
				 XmNleftOffset		= uaf$c_left_offset;
				 XmNleftWidget		= XmPushButton pri_access_ok_button;
				 };
		 callbacks	{XmNactivateCallback	= procedure activate_proc (uaf$c_access_pri_cancel); };
		 };

object	sec_access_ok_button	: XmPushButton
		{arguments	{XmNlabelString		= uaf$t_sec_access_ok;
				 XmNbottomAttachment	= XmATTACH_FORM;
				 XmNbottomOffset	= uaf$c_bottom_offset;
				 XmNleftAttachment	= XmATTACH_FORM;
				 XmNleftOffset		= uaf$c_left_offset;
				 };
		 callbacks	{XmNactivateCallback	= procedure activate_proc (uaf$c_access_sec_ok); };
		 };
object	sec_access_cancel_button	: XmPushButton
		{arguments	{XmNlabelString		= uaf$t_sec_access_cancel;
				 XmNbottomAttachment	= XmATTACH_FORM;
				 XmNbottomOffset	= uaf$c_bottom_offset;
				 XmNleftAttachment	= XmATTACH_WIDGET;
				 XmNleftOffset		= uaf$c_left_offset;
				 XmNleftWidget		= XmPushButton sec_access_ok_button;
				 };
		 callbacks	{XmNactivateCallback	= procedure activate_proc (uaf$c_access_sec_cancel); };
		 };
