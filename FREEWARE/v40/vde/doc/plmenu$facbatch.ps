%!PS-Adobe-3.0
%%Title: PLMENU$FACBATCH
%%Creator: DECdocument  V3.2N
%%Copyright: 1994-1997 Touch Technologies, Inc.
%%+All Rights Reserved.
%%CreationDate: Fri Dec 11 1998 17:49:05
%%For: SHOFFMAN    
%%BoundingBox: (atend)
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Orientation: Portrait
%%Pages: (atend)
%%PageOrder: Ascend
%%DocumentFonts: (atend) 
%%DocumentNeededFonts: (atend) 
%%DocumentProcSets: Underlay Color5044
%%DocumentSuppliedProcSets: Underlay Color5044
%%DocumentProcessColors: (atend)
%%DocumentCustomColors: (atend)
%%EndComments
%+++TTI changes : added ROTB back in
%+++            : added 1000 ROTB = begin special code example
%+++            : added 1001 ROTB = end special code example
%+++            : added 1002 ROTB = digital logo
%
%%BeginResource: procset Underlay
%%CreationDate: (2/10/92)
%
% In VAX DOCUMENT V2.1-1, simple EPSF files up to 65,000 bytes long
% may be an underlay. Define the EPSF as a PostScript proceedure
% called /UNDERLAY and prefix to DOCUMENT's PS output  For example:.
% /UNDERLAY ( EPSF code here ) cvx def
%
% To create a "DRAFT" underlay change /UNDERLAY* to /UNDERLAY
/UNDERLAY* (
  /Note (DRAFT) def
  /NoteSize 120 def
  /NoteFont /Helvetica findfont NoteSize scalefont def
  /Note where { pop Note length 0 gt {
    /NoteWidth NoteFont setfont Note stringwidth pop def
    PaperWidth 36 mul PaperHeight 36 mul moveto
    PaperHeight PaperWidth atan rotate
    NoteWidth -2 div NoteSize .729 mul -2 div rmoveto 
    Note true charpath .075 setseparationgray fill
  }if  }if
) cvx def
%%EndResource
%
%%BeginResource: procset Color5044
%%CreationDate: (1/21/91)
%%Version:1.0 3
%Implementation of Adobe 5044 color specification
%/ndf allows command override during color separation
/Color5044Dict 100 dict def
Color5044Dict begin
/bdf {bind def} def
/ndf
  {1 index where
    {pop pop pop
    }
    {dup xcheck
      {bind} if
    def
    }
    ifelse
  } bdf
/setcmykcolor
  {1 exch sub
  3 
    {dup 5 -1 roll sub 0 2 copy lt
      {exch} if
    pop exch
    } repeat
  pop setrgbcolor
  }ndf
/setcmykcoloroverprint
  {4
    {dup -1 eq
      {pop 0} if
      4 1 roll
    } repeat
  setcmykcolor
  } ndf
/findcmykcustomcolor
  {5 /packedarray where
    {pop packedarray
    }
    {array astore readonly
    }
    ifelse
  } ndf
/setcustomcolor
  {exch aload pop pop
  4
    {4 index mul 4 1 roll
    } repeat
  setcmykcolor pop
  } ndf
/setseparationgray
  {1 exch sub systemdict /setgray get exec
  } ndf
/setoverprint {pop} ndf
/currentoverprint false ndf
%CMYK multi-proc colorimage
/colorimage
  {4 ne
    {(\nUnsupported number of colors for colorimage.\n) print flush quit
    } if
  not
    {(\nSingle procedure form  colorimage unsupported.\n) print flush quit
    } if
  save 20 dict begin /&saveobj exch def
  /&Kproc exch def /&Yproc exch def /&Mproc exch def /&Cproc exch def
    {&Cproc &Mproc &Yproc &Kproc
    /&K exch def /&Y exch def /&M exch def /&C exch def
    0 1 &K length 1 sub
      {/&i exch def
      &K &i 255
      &C &i get 30 mul
      &M &i get 59 mul add
      &Y &i get 11 mul add
      &K &i get 100 mul add
      100 idiv
      dup 255 gt
        {pop 255} if
      sub put
      } for
    &K
    } image
  &saveobj end restore
  } ndf
/customcolorimage
  {pop systemdict /image get exec
  } ndf
/separationimage
  {systemdict /image get exec
  } ndf
end
%%EndResource
Color5044Dict begin
%
/DEC_DVC$dict 300 dict def
DEC_DVC$dict begin
%
/DVC$PSJob save def
%
mark		% CREATE ISOLatin1Encoding if not there already
/ISOLatin1Encoding
  8#000 1 8#054 {StandardEncoding exch get} for 
  /minus
  8#056 1 8#217 {StandardEncoding exch get} for 
  /dotlessi 
  8#301 1 8#317 {StandardEncoding exch get} for 
  /space /exclamdown /cent /sterling /currency /yen /brokenbar /section 
  /dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen 
  /registered /macron /degree /plusminus /twosuperior /threesuperior /acute 
  /mu /paragraph /periodcentered /cedilla /onesuperior /ordmasculine 
  /guillemotright /onequarter /onehalf /threequarters /questiondown /Agrave 
  /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla /Egrave /Eacute 
  /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis /Eth /Ntilde 
  /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply /Oslash /Ugrave 
  /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls /agrave /aacute 
  /acircumflex /atilde /adieresis /aring /ae /ccedilla /egrave /eacute 
  /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis /eth /ntilde
  /ograve /oacute /ocircumflex /otilde /odieresis /divide /oslash /ugrave 
  /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis 
  /ISOLatin1Encoding where not {256 array astore def} if 
cleartomark
%
/DOCPSE ISOLatin1Encoding 256 array copy def
mark						% CREATE DOCPSE ENCODING
  8#055 /hyphen
  8#201 /bullet    8#202 /emdash     8#203 /endash    8#204 /dagger
  8#205 /daggerdbl 8#206 /registered 8#207 /trademark %8#210 /Delta
  8#211 /fi        8#212 /fl         8#213 /OE        8#214 /oe
  8#215 /Ydieresis
  counttomark -1 bitshift			% DIVIDE BY 2
  {DOCPSE 3 1 roll put} repeat			% STACK NOW CONTAINS MARK
cleartomark
%
/ReENCODE {		% /basefont /newfont encoding ReENCODE
    /newencoding exch def	%ARG: NAME OF ENCODING VECTOR
    /newfontname exch def	%ARG: NEW NAME FOR FONT AFTER RE-ENCODING
    findfont
    /basefontdict exch def	%ARG: NAME OF FONT TO BE RE-ENCODED
    basefontdict maxlength dict begin	%CREATE AND OPEN NEW DICT
	basefontdict {		%COPY ENTRIES FROM BASE FONT DICT TO NEW ONE
	    1 index /FID ne {
		def		%IF NOT THE ONE WE'RE ENCODING, JUST COPY PTRS
	    } { %else
		pop pop		%IGNORE FID AND ENCODING FOR ONE WE'RE ENCODING
	    } ifelse
	} forall
	/FontName newfontname def	%DEFINE NEW NAME 
	/Encoding newencoding def	%DEFINE NEW ENCODING VECTOR
	newfontname currentdict definefont	%TURN IT INTO A PS FONT
	pop			%IGNORE MODIFIED DICT RETURNED BY DEFINEFONT
    end
}def
%
/cvsstr 64 string def
/tempmatrix matrix def
%
% Exit page (temporarily) to add fonts/characters.
/XP { }def
% 
% Resume page
/RP {/ExampleState 0 def} def		% RESUME PAGE
/ExampleState 0 def
%
% End Page: EP
/EP {DVC$PSPage restore}def
%
% Purge fonts to reclaim VM
/PF {
  currentoverprint
  currentrgbcolor
  EP			%Does restore
  PageSetup     %Does save
  setrgbcolor
  setoverprint
}def
%
% ABBREVIATIONS 
/S /show load def
/SV /save load def
/RST /restore load def
%
/Yadjust {Ymax exch sub} def
%
/SXY {		% (x,y) POSITION ABSOLUTE, JUST SET Xpos & Ypos, DON'T MOVE
  Yadjust  /Ypos exch def /Xpos exch def
} def
%
/XY {						% (x,y) POSITION ABSOLUTE
  Yadjust moveto
} def
%
/X {						% (x,0) POSITION ABSOLUTE
  currentpoint exch pop moveto
} def
%
/Y {						% (0,y) POSITION ABSOLUTE 
  currentpoint pop exch Yadjust moveto
} def
%
/xy {						% (x,y) POSITION RELATIVE
  neg rmoveto
} def
%
/x {						% (x,0) POSITION RELATIVE
  0 rmoveto
} def
%
/y {						% (0,y) POSITION RELATIVE
  0 exch neg rmoveto
} def
%
/R {						% Draw a rectangle
  /ht exch def  /wd exch def   gsave
  currentpoint  newpath  moveto
  0 ht rlineto  wd 0 rlineto
  0 ht neg rlineto  wd neg 0 rlineto
  closepath fill grestore wd 0 rmoveto
}def
%
%Setup Page Media:  <paper-height> <paper-width> PM
/PM {
  /Xmax exch Resolution mul def
  /Ymax exch Resolution mul def
  /UNDERLAY where {
    pop
    /eps_save save def		% save before EPSF underlay
    Resolution 72 div dup scale % Revert coords to points
    count array astore /DVCstack exch def % save op stack
    /dict_count countdictstack def % # of dicts
    userdict begin		% default dict
    /showpage {}def		% disable showpage
    0 setgray
      {UNDERLAY} stopped {(Error executing /UNDERLAY)== quit}if
    countdictstack dict_count sub {end} repeat % clean up dict stack
    clear DVCstack aload pop	% restore op stack
    eps_save restore		% restore after EPSF
  }if
  PageSetup
}def
%
%Setup page coordinates
/PageSetup
{
%  /DVC$PSPage {save} def % ++cjb: fix VME bug
  /DVC$PSPage save def
  PortraitMode not {PaperWidth 0 translate  90 rotate} if
  /Xpos 0 def
  /Ypos 0 def
}def
%
% Begin EPS file: <xoffset> <yoffset> SPB
/SPB {
  Yadjust transform		% convert from DVC to device coords
  EP				% page-level restore
  /eps_save save def		% save before EPSF
  Resolution 72 div dup scale 	% Revert coords to points
  itransform			% convert position back to points  
  translate			% set position for EPSF
  PortraitMode not {90 rotate} if % rotate for EPSF
  count array astore /DVCstack exch def	% save op stack
  /dict_count countdictstack def % # of dicts
  userdict begin		% default dict
  /showpage {}def		% disable showpage
  0 setgray
}def
%
% End EPS file
/SPE {
  countdictstack dict_count sub {end} repeat % clean up dict stack
  clear DVCstack aload pop	% restore op stack
  eps_save restore		% restore after EPSF
  PageSetup			% restore DVC coords
}def
%
% Print-Page Routine: <Page #> PP
/PP {
  gsave
  showpage
  grestore
}def
%
/DMF {		%  /font-name <point-size> DMF
  exch findfont exch scalefont setfont
}def
%
/concatnam {	%  /abcd (xxx) concatnam  ==> /abcdxxx
  /xxx exch def
  /namstr exch cvsstr cvs def
  /newnam namstr length xxx length add string def
  newnam 0 namstr putinterval
  newnam namstr length xxx putinterval
  newnam cvn 
}def
%
/strip {	%  /abcdef 2 strip ==> /cdef
  /num exch def  /nam exch def
  /namstr nam cvsstr cvs def
  /newlen namstr length num sub def
  namstr num newlen getinterval  cvn
}def
%		ROUTINES TO HANDLE PACKING/UNPACKING NUMBERS
/PackHW {	% <target> <pos> <num> PackHW --> <new target>
  /num exch def  /pos exch def  /target exch def
  num 16#0000FFFF and 1 pos sub 16 mul bitshift  target or
}def
/PackByte {	% <target> <pos> <num> PackByte --> <new target>
  /num exch def  /pos exch def  /target exch def
  num 16#000000FF and 3 pos sub 8 mul bitshift   target or
}def
/UnpkHW {	%  <pos> <num> UnpkHW --> <unpacked value>
  /num exch def  /pos exch def
  num 1 pos sub -16 mul bitshift 16#0000FFFF and
  dup 16#00007FFF gt {16#00010000 sub} if
}def
/UnpkByte {	%  <pos> <num> UnpkByte --> <unpacked value>
  /num exch def  /pos exch def
  num 3 pos sub -8 mul bitshift 16#000000FF and
  dup 16#0000007F gt {16#00000100 sub} if
}def
%
/ps-scalefont {
    % FOR PS FONTS, LOOK AT SIZE REQUESTED.  IF IT HAS A DECIMAL REMAINDER
    % EQUIVALENT TO .001-.009 POINTS (I.E., .050-.450 VAXDOC UNITS), THAT'S 
    % A FLAG TO STRETCH IT VERTICALLY BY ADDING 1-9 EXTRA POINTS TO THE 
    % VERTICAL SCALING.
                % save requested size - as entered and as integer
    dup /x-size exch def cvi /x-int exch def
                % calc decimal remainder, mul x 1000, round
    x-size x-int sub 1000 mul round cvi /remainder exch def
                % see how we scale...
    remainder 50 lt remainder 450 gt or {
                % scale isomorphically
        /ystretch 0 def
        x-size scalefont
    } {
                % scale anamorphically
        /ystretch remainder def
        x-int ystretch add /y-size exch def
        [x-int 0 0 y-size 0 0] makefont
    } ifelse
}def
%
/DPSF {		% /procname size /fontname DPSF
    findfont exch ps-scalefont [ exch /setfont cvx ] cvx def
}def
%
/PXLBuildCharDict 17 dict def
/CMEncodingArray 256 array def
0 1 255 {CMEncodingArray exch dup cvsstr cvs cvn put} for
/RasterConvert {RasterScaleFactor div}def
/TransformBBox {
  aload pop
  /BB-ury exch def  /BB-urx exch def  /BB-lly exch def  /BB-llx exch def
  [ BB-llx RasterConvert BB-lly RasterConvert 
    BB-urx RasterConvert BB-ury RasterConvert ]
}def
/RunLengthToRasters {
  % none yet
}def
/GenerateRasters {			% GENERATE RASTERS FOR "IMAGEMASK"
  rasters  runlength 1 eq {RunLengthToRasters} if
}def
%
/int-dict-name {int (-dict) concatnam}def
/int-dict {int (-dict) concatnam cvx load}def
%
/DefinePXLFont {
	%  <int-font-name><ext-font-name><pt-sz(pix)><PXL mag><num-chars>...
	%  ...[llx lly urx ury]<newfont-fg>DefinePXLFont
  /newfont exch def  /bb exch def      /num exch def  /psz exch def
  /dsz exch def      /pxlmag exch def  /ext exch def  /int exch def
  /fnam ext (-) concatnam pxlmag cvsstr cvs concatnam def
  newfont not {
    int-dict-name 13 dict def
    int-dict begin
      /FontType 3 def  /FontMatrix [ 1 dsz div 0 0 1 dsz div 0 0 ] def
      /FontBBox bb TransformBBox def  /Encoding CMEncodingArray def
      /CharDict 1 dict def  CharDict begin  /Char-Info num array def  end
      /BuildChar {
        PXLBuildCharDict begin
          /char exch def  /fontdict exch def
          fontdict /CharDict get /Char-Info get char get aload pop
          /rasters exch def  /PackedWord1 exch def
          0 PackedWord1 UnpkHW 16#7FFF ne {
	    /PackedWord2 exch def  /wx 0 PackedWord1 UnpkHW def
            /rows 2 PackedWord1 UnpkByte def  /cols 3 PackedWord1 UnpkByte def
            /llx 0 PackedWord2 UnpkByte def   /lly 1 PackedWord2 UnpkByte def
            /urx 2 PackedWord2 UnpkByte def   /ury 3 PackedWord2 UnpkByte def
	  }{ %else
	    /PackedWord2 exch def  /PackedWord3 exch def /PackedWord4 exch def
            /wx 1 PackedWord1 UnpkHW def    /rows 0 PackedWord2 UnpkHW def
            /cols 1 PackedWord2 UnpkHW def  /llx 0 PackedWord3 UnpkHW def
            /lly 1 PackedWord3 UnpkHW def   /urx 0 PackedWord4 UnpkHW def
            /ury 1 PackedWord4 UnpkHW def
          } ifelse
          rows 0 lt {
	    /rows rows neg def /runlength 1 def
	  }{ %else
	    /runlength 0 def
	  } ifelse
          wx 0
          llx RasterConvert lly RasterConvert 
          urx RasterConvert ury RasterConvert setcachedevice
          rows 0 ne {
	    gsave
	      cols rows true  RasterScaleFactor 
              0 0 RasterScaleFactor neg llx .5 add neg ury .5 add 
              tempmatrix astore  GenerateRasters imagemask
            grestore
          } if
        end
      }def
    end
    fnam int-dict definefont pop 
  } if 
  int-dict-name fnam findfont psz scalefont def
  currentdict int [ int-dict /setfont cvx ] cvx put
}def 
/PXLF { true  DefinePXLFont}def	% SIGNAL THAT FONT ALREADY LOADED
/PXLNF {false  DefinePXLFont}def	% SIGNAL THAT FONT NOT ALREADY LOADED
%
/PXLC {	% <int-font-name><code><wx><llx><lly><urx><ury>...
	% ...<rows><cols><runlength><rasters>PXLC
  /rasters exch def  /runlength exch def  /cols exch def  /rows exch def
  /ury exch def      /urx exch def        /lly exch def   /llx exch def
  /wx exch def       /code exch def       /int exch def
  % SEE IF LONG OR SHORT FORMAT IS REQUIRED
  true cols CKSZ rows CKSZ ury CKSZ urx CKSZ lly CKSZ llx CKSZ 
  TackRunLengthToRows {
    int-dict /CharDict get /Char-Info get code 
    [ 0 0 llx PackByte 1 lly PackByte 2 urx PackByte 3 ury PackByte
      0 0 wx PackHW 2 rows PackByte 3 cols PackByte rasters ] put
  }{ %else
    int-dict /CharDict get /Char-Info get code 
    [ 0 0 urx PackHW 1 ury PackHW   0 0 llx PackHW 1 lly PackHW
      0 0 rows PackHW 1 cols PackHW 0 0 16#7FFF PackHW 1 wx PackHW rasters ] put
  } ifelse
}def
%
/CKSZ {abs 127 le and}def
/TackRunLengthToRows {runlength 0 ne {/rows rows neg def} if}def
%
/PLOTC {
  % <wx><dsz><psz><llx><lly><urx><ury><rows><cols><runlength><rasters>PLOTC
  /rasters exch def  /runlength exch def  /cols exch def  /rows exch def
  /ury exch def      /urx exch def        /lly exch def   /llx exch def
  /psz exch def      /dsz exch def        /wx exch def
  % "PLOT" A CHARACTER'S RASTER PATTERN
  rows 0 ne {
    gsave
      currentpoint translate  psz dsz div dup scale
      cols rows true  RasterScaleFactor 0 0 RasterScaleFactor 
      neg llx .5 add neg ury .5 add  tempmatrix astore
      GenerateRasters imagemask
    grestore
  } if
  wx x
}def
%
% set color routine: Color# SC
/SC {ColorPalette exch get 1.0 setcustomcolor}bind def
%
%
%  Procedures for implementing the "rotate <theta>" special:
%  <theta> ROTB -
%        - ROTE -

%+++ TTI changes to allow .screen escape sequence
% 1000 ROTB -> start screen
% 1001 ROTB -> end screen
% 1002 ROTB -> Digital logo

/codexindent 590 def

/ROTB {
  dup 1000 eq {
    % 1000 ROTB - start code example
    pop /ExampleState 0 def
    /S {
      dup (.screen) eq {
      % start screen example
% pjf fix 7-4-92 : first line after .screen was indented improperly
        currentpoint /ExampleY exch def /ExampleX exch def
        1 setgray show 0 setgray
        /S {
          /ExampleName exch def /ExampleState 1 def
          codexindent 0 translate codexindent 0 rmoveto
          1 setgray ExampleName show 0 setgray
          /S /show load def
          /FONT104 /F104 load def
          % replace the tilde with a space
          currentfont F102 currentfont begin
            /Encoding load        % - encoding
            % save the old encoding for the tilde
            dup 126 get exch      % - e126 encoding
            dup 32 get 126 exch put % - e126
          end
          % stick tilde encoding in a variable
          /ExampleTilde exch def
          FONT104 currentfont /F104DICT exch def setfont
          /F104 {
            /S {
              currentfont /F104DICT load eq {
                dup length 240 mul /w exch def
                gsave 0 -100 rmoveto currentpoint
                newpath moveto w 0 rlineto 0 440
                rlineto w neg 0 rlineto closepath fill grestore
                1 setgray show 0 setgray
              } {
                /S /show load def S
              } ifelse
            } def
            FONT104
          } def
        } def
      } {
      % regular code example
        show /S /show load def
      } ifelse
    } def
  } { dup 1001 eq {
    % 1001 ROTB - end code example
    pop
    ExampleState 1 eq {
      currentpoint ExampleY exch sub 600 sub /ylength exch def pop
      /xlength 19200 1.25 mul def /radius 1000 def
      gsave ExampleX ExampleY translate
      240 -400 translate .8 1 scale 50 setlinewidth
      /Helvetica findfont 250 scalefont setfont
      ExampleName (-) eq { /ExampleName () def } if
      ExampleName stringwidth pop
      xlength exch sub -250 radius sub ylength sub moveto
        gsave 1.25 1 scale ExampleName show grestore
      newpath radius neg 0 moveto
      0 ylength neg radius 180 270 arc
      xlength ylength neg radius 270 0 arc
      xlength 0 radius 0 90 arc
      0 0 radius 90 180 arc
      closepath stroke grestore
      /ExampleState 0 def
      /F104 /FONT104 load def
      /S /show load def
      % replace tilde encoding, so it doesn't show up as space anymore
      currentfont F102 currentfont begin
        /Encoding load 126 ExampleTilde put
      end setfont
      codexindent neg 0 translate codexindent neg 0 rmoveto
    } if
  } { dup 1002 eq {
    pop
    gsave (-) stringwidth pop neg 0 rmoveto 
    /Helvetica findfont 450 scalefont setfont
    [(d) (i) (g) (i) (t) (a) (l)] {
      currentpoint currentpoint newpath moveto
      0 -200 rmoveto 300 0 rlineto 0 730 rlineto -300 0 rlineto 0 -730 rlineto
      fill moveto gsave
      dup stringwidth pop 300 exch sub 2 div 0 rmoveto
      1 setgray show 0 setgray grestore
      350 0 rmoveto
    } forall
    0 375 rmoveto
    /Helvetica findfont 200 scalefont setfont (TM) show
    grestore
  } {
    % other - do rotation
    XP
    gsave
    Xpos Ypos translate
    rotate % using <theta> from the stack
    Xpos neg Ypos neg translate
    RP
  } ifelse } ifelse } ifelse
} def

/ROTE {XP grestore RP} def
/F104 { } def

%%EndProlog


%%BeginSetup
/PxlResolution 300 def
/Resolution 3600 def
/RasterScaleFactor PxlResolution Resolution div def
/PortraitMode true def
/PaperWidth 8.500 def
/PaperHeight 11.000 def
72 Resolution div dup scale

%>  Postamble of file VDED$:[VDE.VDEDOC]PLMENU$FACBATCH.DVI_PS.
% DefineFont:F151 Category:10 Pointsize:10
/NewCenturySchlbk-Roman /NewCenturySchlbk-Roman@DOCPSE DOCPSE ReENCODE
/F151 500.0 /NewCenturySchlbk-Roman@DOCPSE DPSF
% DefineFont:F36 Category:10 Pointsize:10
/Helvetica-Bold /Helvetica-Bold@DOCPSE DOCPSE ReENCODE
/F36 500.0 /Helvetica-Bold@DOCPSE DPSF
% DefineFont:F35 Category:10 Pointsize:10
/Helvetica-Oblique /Helvetica-Oblique@DOCPSE DOCPSE ReENCODE
/F35 500.0 /Helvetica-Oblique@DOCPSE DPSF
% DefineFont:F34 Category:10 Pointsize:10
/Helvetica /Helvetica@DOCPSE DOCPSE ReENCODE
/F34 500.0 /Helvetica@DOCPSE DPSF
% DefineFont:F28 Category:10 Pointsize:12
/F28 600.0 /Helvetica-Bold@DOCPSE DPSF
% DefineFont:F25 Category:10 Pointsize:14
/Helvetica-BoldOblique /Helvetica-BoldOblique@DOCPSE DOCPSE ReENCODE
/F25 700.0 /Helvetica-BoldOblique@DOCPSE DPSF
% DefineFont:F24 Category:10 Pointsize:14
/F24 700.0 /Helvetica-Bold@DOCPSE DPSF
% DefineFont:F23 Category:10 Pointsize:14
/F23 700.0 /Helvetica-Oblique@DOCPSE DPSF
% DefineFont:F20 Category:10 Pointsize:18
/F20 900.0 /Helvetica-Bold@DOCPSE DPSF

%Spot color array for this job
/ColorPalette [
0.0 0.0 0.0 1.0 (BLACK) findcmykcustomcolor
] def

%%EndSetup
%
%%Page: (I) 1
%%PageFonts: (atend)
%%PageProcessColors: (atend)
%%PageCustomColors: (atend)
PaperHeight PaperWidth PM 0 0 XY
0 SC 10773 10524 XY F20(F)S -49 x(ACBA)S -65 x(TCH)S 10773 13214 XY
F36(July)S 167 x(1991)S 10773 14409 XY F34(The)S 172 x(Facility)S 171 x
(Batch)S 173 x(utility)S 171 x(\(F)S -27 x(ACBA)S -36 x(TCH\))S 171 x
(is)S 171 x(used)S 172 x(to)S 172 x(submit)S 172 x(a)S 172 x(batch)S
172 x(job)S 171 x(for)S 172 x(each)S 10773 X 598 y(CMS)S 166 x(library)S
165 x(that)S 167 x(meets)S 166 x(the)S 167 x(selection)S 165 x(criteria.)S
10773 X 897 y(Software)S 167 x(V)S -27 x(ersion:)S 249 x(F)S -27 x(ACBA)S
-37 x(TCH)S 166 x(V)S -27 x(ersion)S 165 x(X0.1)S
EP PP
%%PageTrailer
%%PageFonts: Helvetica-Bold Helvetica
%%PageProcessColors:
%%PageCustomColors: (BLACK)
%
%%Page: (II) 2
%DEC_EDMS_BlankPage
PP
%%PageTrailer
%%PageFonts:
%%PageProcessColors:
%%PageCustomColors:
%
%%Page: (1) 3
%%PageFonts: (atend)
%%PageProcessColors: (atend)
%%PageCustomColors: (atend)
PaperHeight PaperWidth PM 0 0 XY
0 SC 24474 1807 XY F24(F)S -38 x(ACBA)S -54 x(TCH)S 5094 4546 XY 23160 48 R
5094 5543 XY F20(F)S -49 x(ACBA)S -65 x(TCH\202)S(Submit)S 359 x(batc)S
-2 x(h)S 359 x(job)S 358 x(for)S 358 x(each)S 357 x(facility)S 10773 7037 XY
F34(Activates)S 186 x(the)S 185 x(F)S -27 x(ACBA)S -36 x(TCH)S 185 x
(utility)S -38 x(.)S 288 x(The)S 185 x(F)S -27 x(ACBA)S -36 x(TCH)S
184 x(utility)S 185 x(is)S 185 x(run)S 185 x(from)S 185 x(DCL.)S 10773 X
598 y(Submits)S 190 x(a)S 190 x(batch)S 191 x(job)S 189 x(against)S
190 x(each)S 190 x(CMS)S 190 x(library)S 189 x(that)S 191 x(meets)S
191 x(the)S 190 x(selection)S 10773 X 598 y(criteria.)S 5094 9428 XY
23160 204 R 5094 10446 XY F24(FORMA)S -53 x(T)S 10773 X(F)S -38 x(ACB)S
-2 x(A)S -52 x(TCH)S 697 x F23(library-spe)S -2 x(c)S 166 x(command-\211l)S
-2 x(e)S 10773 X 797 y 17484 48 R 10773 11841 XY F36(Command)S 166 x
(Quali\211)S 2 x(ers)S 18544 X(Defaults)S 10773 X 697 y F35(/AFT)S 2 x
(ER)S 18544 X(None.)S 10773 X 598 y(/HOLD)S 18544 X(None.)S 10773 X
598 y(/[NO]LOG)S 18544 X(/NOLOG)S 10773 X 597 y(/OUTPUT_DIR)S 18544 X
(/OUTPUT_DIR=sys$login)S 10773 X 598 y(/POST_JOBNAME)S 18544 X(None.)S
10773 X 598 y(/PREFI)S 2 x(X_JOBNAME)S 18544 X(None.)S 10773 X 598 y
(/PROCESS)S 18544 X(/PROCESS=\212agfree)S 10773 X 597 y(/P4)S 18544 X
(None.)S 10773 X 598 y(/P5)S 18544 X(None.)S 10773 X 598 y(/P6)S 18544 X
(None.)S 10773 X 598 y(/P7)S 18544 X(None.)S 10773 X 598 y(/P8)S 18544 X
(None.)S 10773 X 597 y(/QUEUE)S 18544 X(/QUEUE=sys$batch)S 10773 X 797 y
17484 96 R 5094 21435 XY F28(prompts)S 10773 X -42 y F151(LIB_SPEC:)S
16153 X(library-spec)S 10773 X 597 y(COMMAND_FILE:)S 16153 X(command-\211le)S
5094 23186 XY 23160 204 R 5094 24004 XY F24(DESCRIPTION)S 10773 X -155 y
F151(The)S 174 x(F)S -37 x(ACBA)S -29 x(TCH)S 173 x(utility)S 173 x
(is)S 173 x(used)S 172 x(to)S 173 x(submit)S 173 x(a)S 173 x(job)S 173 x
(to)S 173 x(a)S 173 x(batch)S 173 x(queue)S 173 x(for)S 173 x(each)S
10773 X 597 y(CMS)S 171 x(library)S 171 x(that)S 171 x(meets)S 170 x
(the)S 171 x(selection)S 171 x(criteria.)S 259 x(The)S 171 x(job)S 172 x
(submitted)S 170 x(for)S 171 x(each)S 10773 X 598 y(library)S 186 x
(will)S 184 x(consist)S 185 x(of)S 185 x(a)S 185 x(user)S 185 x(written)S
185 x(procedure)S 186 x(that)S 185 x(will)S 184 x(have)S 186 x(speci\211c)S
10773 X 598 y(information)S 189 x(passed)S 188 x(to)S 188 x(it.)S 294 x
(The)S 189 x(information)S 189 x(will)S 188 x(be)S 188 x(passed)S 188 x
(to)S 188 x(the)S 189 x(user)S 10773 X 598 y(written)S 166 x(procedure)S
167 x(via)S 166 x(the)S 166 x(P1-P8)S 167 x(parameters.)S 5094 27435 XY
23160 204 R 5094 28254 XY F24(P)S -51 x(ARA)S -2 x(METERS)S 849 x -22 y
F25(library-spec)S 10773 X 548 y F151(Speci\211es)S 194 x(the)S 193 x
(CMS)S 193 x(library)S 194 x(that)S 194 x(is)S 193 x(to)S 193 x(be)S
194 x(acted)S 193 x(on.)S 305 x(This)S 194 x(speci\211cation)S 10773 X
548 y(can)S 191 x(contain)S 192 x(wildcards,)S 196 x(but)S 191 x(it)S
190 x(must)S 190 x(be)S 191 x(a)S 191 x(valid)S 191 x(CMS)S 190 x(library)S
191 x(directory)S 10773 X 548 y(speci\211cation)S 199 x(\(i.e.)S 314 x
(VMS$:[YELLOW_TEST)S -47 x(.CMS]\).)S 199 x(An)S 198 x(example)S 198 x
(of)S 198 x(a)S 10773 X 548 y(wildcarded)S 183 x(speci\211cation)S 185 x
(would)S 183 x(be:)S 285 x(VMS$:[Y*.CMS].)S 185 x(This)S 184 x(speci\211cation)S
10773 X 548 y(would)S 166 x(process)S 166 x(all)S 165 x(libraries)S
166 x(that)S 166 x(start)S 165 x(with)S 166 x(the)S 166 x(letter)S 166 x
("Y".)S 10773 32068 XY F25(command-\211le)S 10773 X 598 y F151(Speci\211es)S
177 x(the)S 176 x(name)S 177 x(of)S 176 x(the)S 177 x(user)S 177 x(written)S
176 x(command)S 176 x(procedure)S 178 x(that)S 176 x(is)S 176 x(to)S
176 x(be)S 10773 X 548 y(submitted)S 165 x(for)S 167 x(each)S 166 x
(library)S 167 x(that)S 166 x(meets)S 165 x(the)S 166 x(selection)S
166 x(criteria.)S 27981 36925 XY F36(1)S
EP PP
%%PageTrailer
%%PageFonts: Helvetica-Bold Helvetica
%%+ Helvetica-Oblique NewCenturySchlbk-Roman
%%+ Helvetica-BoldOblique
%%PageProcessColors:
%%PageCustomColors: (BLACK)
%
%%Page: (2) 4
%%PageFonts: (atend)
%%PageProcessColors: (atend)
%%PageCustomColors: (atend)
PaperHeight PaperWidth PM 0 0 XY
0 SC 5094 1807 XY F24(F)S -38 x(ACBA)S -53 x(TCH)S 5094 4696 XY 23160 204 R
5094 5515 XY(COMMAN)S -2 x(D)S 5094 X 797 y(QUALIFIERS)S 10773 X -819 y
F25(/AFTER=time)S 10773 X 548 y F151(Requests)S 176 x(that)S 176 x(the)S
177 x(job)S 177 x(be)S 177 x(held)S 177 x(until)S 177 x(after)S 177 x
(a)S 176 x(speci\211c)S 177 x(time.)S 271 x(If)S 176 x(the)S 177 x(speci\211ed)S
10773 X 548 y(time)S 173 x(has)S 173 x(already)S 173 x(been)S 174 x
(passed,)S 174 x(the)S 174 x(job)S 173 x(is)S 173 x(processed)S 172 x
(immediately)S -55 x(.T)S -12 x(ime)S 173 x(can)S 10773 X 548 y(be)S
181 x(speci\211ed)S 182 x(as)S 181 x(either)S 181 x(an)S 182 x(absolute)S
181 x(time)S 181 x(or)S 181 x(as)S 181 x(a)S 182 x(combination)S 181 x
(of)S 181 x(absolute)S 10773 X 548 y(and)S 176 x(delta)S 174 x(times.)S
267 x(See)S 175 x(the)S 176 x(VMS)S 175 x(DCL)S 174 x(CONCEPTS)S 174 x
(MANUAL)S 175 x(for)S 175 x(complete)S 10773 X 548 y(information)S 166 x
(on)S 167 x(specifying)S 167 x(time)S 165 x(values.)S 10773 9329 XY
F25(/HOLD)S 10773 X 597 y F151(Controls)S 201 x(whether)S 202 x(or)S
202 x(not)S 202 x(the)S 201 x(job)S 202 x(is)S 201 x(made)S 202 x(available)S
201 x(for)S 202 x(immediate)S 10773 X 548 y(processing.)S 314 x(The)S
199 x(/HOLD)S 198 x(quali\211er)S 198 x(holds)S 198 x(the)S 198 x(job)S
199 x(until)S 198 x(it)S 198 x(is)S 198 x(released)S 10773 X 548 y(by)S
188 x(the)S 187 x(/NOHOLD)S 187 x(quali\211er)S 188 x(or)S 187 x(by)S
188 x(the)S 187 x(/RELEASE)S 186 x(quali\211er)S 188 x(of)S 187 x(the)S
188 x(SET)S 10773 X 548 y(QUEUE/ENTR)S -20 x(Y)S 166 x(command.)S 10773 12666 XY
F25(/[NO]LOG)S 10773 X 598 y F151(Speci\211es)S 173 x(that)S 173 x(the)S
174 x(user)S 173 x(wants)S 173 x(to)S 173 x(see)S 173 x(messages)S 172 x
(from)S 173 x(the)S 174 x(utility)S 173 x(pertaining)S 10773 X 548 y
(to)S 166 x(the)S 166 x(libraries)S 166 x(being)S 167 x(processed)S
165 x(or)S 167 x(skipped.)S 10773 14908 XY F25(OUTPUT_D)S -2 x(IR=directory)S
10773 X 597 y F151(Speci\211es)S 168 x(where)S 169 x(the)S 168 x(log)S
169 x(\211les)S 169 x(are)S 168 x(to)S 168 x(be)S 169 x(put.)S 254 x
(The)S 169 x(default)S 168 x(is)S 168 x(to)S 168 x(put)S 169 x(all)S
168 x(the)S 168 x(log)S 10773 X 548 y(\211les)S 166 x(in)S 166 x(SYS$LOGIN.)S
10773 17149 XY F25(/POST_JOBN)S -2 x(AME=character-string)S 10773 X
598 y F151(This)S 173 x(quali\211er)S 173 x(is)S 173 x(much)S 173 x
(like)S 173 x(the)S 173 x(/PREFIX_JOBNAME)S 171 x(qualifer)S -36 x(,)S
174 x(except)S 174 x(that)S 10773 X 548 y(the)S 166 x(character)S 167 x
(string)S 167 x(entered)S 166 x(for)S 166 x(this)S 166 x(quali\211er)S
167 x(is)S 165 x(appended)S 166 x(to)S 166 x(the)S 166 x(job)S 167 x
(name.)S 10773 19391 XY F25(/PREFIX_JOB)S -2 x(NAME=character-string)S
10773 X 598 y F151(Speci\211es)S 182 x(the)S 181 x(ascii)S 181 x(character)S
182 x(string)S 182 x(that)S 182 x(is)S 181 x(to)S 181 x(be)S 181 x(place)S
182 x(at)S 181 x(the)S 182 x(beginning)S 10773 X 547 y(of)S 179 x(the)S
180 x(job)S 179 x(name.)S 276 x(By)S 180 x(default)S 179 x(the)S 179 x
(job)S 180 x(name)S 179 x(will)S 179 x(be)S 179 x(the)S 179 x(name)S
180 x(of)S 179 x(the)S 179 x(CMS)S 10773 X 548 y(facility)S 168 x(that)S
168 x(is)S 167 x(being)S 168 x(process.)S 253 x(In)S 168 x(the)S 168 x
(case)S 168 x(of)S 167 x(VMS$:[YELLOW_TEST)S -46 x(.CMS],)S 10773 X
548 y(the)S 167 x(job)S 167 x(name)S 167 x(would)S 167 x(be)S 167 x
("YELLOW_TEST".)S 250 x(If)S 166 x(a)S 167 x(pre\211x)S 168 x(of)S 167 x
("ABC)S -2 x(_")S 167 x(is)S 166 x(entered,)S 10773 X 548 y(then)S 167 x
(the)S 166 x(job)S 166 x(name)S 167 x(would)S 165 x(be)S 167 x("ABC)S
-2 x(_YELLOW_TEST".)S 10773 23276 XY F25(/PROCESS=\(attribute[,attribute,...]\))S
10773 X 598 y F151(The)S 185 x(PROCE)S -2 x(SS)S 184 x(quali\211er)S
185 x(is)S 183 x(used)S 184 x(to)S 184 x(de\211ne)S 184 x(the)S 184 x
(selection)S 184 x(criteria)S 184 x(for)S 184 x(the)S 10773 X 548 y
(libraries)S 174 x(that)S 174 x(are)S 174 x(to)S 174 x(be)S 174 x(processed.)S
266 x(Some)S 174 x(libraries)S 173 x(have)S 175 x(special)S 174 x(attributes)S
10773 X 548 y(associated)S 173 x(with)S 174 x(them,)S 177 x(VMSCMS$NO_PROP)S
-38 x(AGA)S -29 x(TE.FLAG)S 175 x(is)S 174 x(an)S 174 x(example)S 10773 X
548 y(of)S 179 x(an)S 179 x(attribute.)S 275 x(This)S 179 x(attribute)S
178 x(indicates)S 179 x(that)S 179 x(this)S 178 x(library)S 179 x(is)S
179 x(not)S 179 x(to)S 179 x(have)S 10773 X 548 y(any)S 169 x(code)S
169 x(propagation)S 169 x(performed)S 168 x(within)S 169 x(it.)S 254 x
(The)S 169 x(process)S 168 x(quali\211er)S 169 x(is)S 168 x(used)S 168 x
(to)S 10773 X 548 y(selectively)S 176 x(process)S 176 x(or)S 176 x(skip)S
175 x(libraries)S 176 x(marked)S 176 x(with)S 175 x(certain)S 176 x
(attributes.)S 268 x(The)S 10773 X 548 y(list)S 165 x(of)S 166 x(acceptable)S
166 x(attributes)S 166 x(is:)S 10773 X 896 y(\201)S 595 x([NO]ALL)S
165 x(-)S 166 x(process)S 166 x(all)S 166 x(libraries)S 165 x(no)S 167 x
(matter)S 165 x(what)S 166 x(attribute)S 166 x(it)S 166 x(may)S 166 x
(have)S 10773 X 897 y(\201)S 595 x([NO]AR)S -2 x(CHIVEDF)S -38 x(ACILITY)S
165 x(-)S 166 x(process)S 165 x(all)S 166 x(archived)S 167 x(libraries)S
10773 X 897 y(\201)S 595 x([NO]FLAGFRE)S -2 x(E)S 166 x(-)S 166 x(process)S
166 x(libraries)S 165 x(with)S 166 x(not)S 166 x(attributes)S 10773 X
896 y(\201)S 595 x([NO]NOPR)S -2 x(OP)S -37 x(AGA)S -28 x(TE)S 166 x
(-)S 166 x(process)S 165 x(libraries)S 166 x(marked)S 166 x(no)S 167 x
(propagate)S 10773 32093 XY F25(/P4=text)S 166 x(\267\267\267)S 166 x
(/P8=text)S 10773 X 598 y F151(All)S 175 x(the)S 176 x(/Pn)S 177 x(quali\211ers)S
175 x(accept)S 176 x(alphanumeric)S 177 x(strings.)S 268 x(These)S 176 x
(strings)S 176 x(can)S 176 x(be)S 10773 X 548 y(quoted)S 181 x(strings)S
181 x(containing)S 182 x(spaces,)S 185 x(or)S 181 x(simpe)S 181 x(one)S
181 x(word)S 181 x(strings.)S 279 x(The)S 182 x(data)S 10773 X 548 y
(accepted)S 175 x(for)S 175 x(each)S 175 x(parameter)S 175 x(quali\211er)S
175 x(is)S 175 x(passed)S 174 x(directly)S 175 x(to)S 175 x(the)S 175 x
(procedure)S 10773 X 548 y(submitted.)S 285 x(If)S 183 x(a)S 184 x(user)S
184 x(enters)S 184 x(/P4=TEST)S 184 x(on)S 184 x(the)S 185 x(command)S
184 x(line,)S 189 x(then)S 184 x(the)S 10773 X 548 y(user)S 181 x(would)S
181 x(be)S 181 x(able)S 181 x(to)S 181 x(do)S 180 x(a)S 181 x("SHOW)S
180 x(SYMBOL)S 180 x(P4")S 181 x(command)S 181 x(within)S 181 x(the)S
10773 X 548 y(procedure)S 167 x(submitted)S 165 x(and)S 167 x(see)S
165 x(the)S 167 x(string)S 166 x("TEST".)S 5094 36925 XY F36(2)S
EP PP
%%PageTrailer
%%PageFonts: Helvetica-Bold Helvetica-BoldOblique
%%+ NewCenturySchlbk-Roman
%%PageProcessColors:
%%PageCustomColors: (BLACK)
%
%%Page: (3) 5
%%PageFonts: (atend)
%%PageProcessColors: (atend)
%%PageCustomColors: (atend)
PaperHeight PaperWidth PM 0 0 XY
0 SC 24474 1807 XY F24(F)S -38 x(ACBA)S -54 x(TCH)S 10773 5022 XY F25
(/QUEUE=queue-name)S 10773 X 598 y F151(Identi\211es)S 170 x(the)S 170 x
(batch)S 171 x(queue)S 171 x(on)S 170 x(which)S 171 x(the)S 170 x(job)S
171 x(is)S 169 x(entered.)S 258 x(The)S 171 x(default)S 170 x(queue)S
10773 X 547 y(is)S 166 x(SYS$BA)S -29 x(TCH.)S 27981 36925 XY F36(3)S
EP PP
%%PageTrailer
%%PageFonts: Helvetica-Bold Helvetica-BoldOblique
%%+ NewCenturySchlbk-Roman
%%PageProcessColors:
%%PageCustomColors: (BLACK)
%
%%Page: (4) 6
%DEC_EDMS_BlankPage
PP
%%PageTrailer
%%PageFonts:
%%PageProcessColors:
%%PageCustomColors:
%
%%Trailer
%%Pages: 6
%%BoundingBox: 0 0 612 792
%%DocumentFonts: NewCenturySchlbk-Roman
%%+ Helvetica-Bold Helvetica-Oblique
%%+ Helvetica Helvetica-BoldOblique
%%DocumentNeededFonts: NewCenturySchlbk-Roman
%%+ Helvetica-Bold Helvetica-Oblique
%%+ Helvetica Helvetica-BoldOblique
%%DocumentProcessColors:
%%DocumentCustomColors: (BLACK)
%%CMYKCustomColor: 0.0 0.0 0.0 1.0 (BLACK)
%
DVC$PSJob restore
end %DEC_DVC$dict
end %Color5044Dict
%
%%EOF
