%!PS-Adobe-3.0
%%Title: VDE_QUICK_REF
%%Creator: DECdocument  V3.2N
%%Copyright: 1994-1997 Touch Technologies, Inc.
%%+All Rights Reserved.
%%CreationDate: Fri Dec 11 1998 17:41:04
%%For: SHOFFMAN    
%%BoundingBox: (atend)
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Orientation: Portrait
%%Pages: (atend)
%%PageOrder: Ascend
%%DocumentFonts: (atend) 
%%DocumentNeededFonts: (atend) 
%%DocumentProcSets: Underlay Color5044
%%DocumentSuppliedProcSets: Underlay Color5044
%%DocumentProcessColors: (atend)
%%DocumentCustomColors: (atend)
%%EndComments
%+++TTI changes : added ROTB back in
%+++            : added 1000 ROTB = begin special code example
%+++            : added 1001 ROTB = end special code example
%+++            : added 1002 ROTB = digital logo
%
%%BeginResource: procset Underlay
%%CreationDate: (2/10/92)
%
% In VAX DOCUMENT V2.1-1, simple EPSF files up to 65,000 bytes long
% may be an underlay. Define the EPSF as a PostScript proceedure
% called /UNDERLAY and prefix to DOCUMENT's PS output  For example:.
% /UNDERLAY ( EPSF code here ) cvx def
%
% To create a "DRAFT" underlay change /UNDERLAY* to /UNDERLAY
/UNDERLAY* (
  /Note (DRAFT) def
  /NoteSize 120 def
  /NoteFont /Helvetica findfont NoteSize scalefont def
  /Note where { pop Note length 0 gt {
    /NoteWidth NoteFont setfont Note stringwidth pop def
    PaperWidth 36 mul PaperHeight 36 mul moveto
    PaperHeight PaperWidth atan rotate
    NoteWidth -2 div NoteSize .729 mul -2 div rmoveto 
    Note true charpath .075 setseparationgray fill
  }if  }if
) cvx def
%%EndResource
%
%%BeginResource: procset Color5044
%%CreationDate: (1/21/91)
%%Version:1.0 3
%Implementation of Adobe 5044 color specification
%/ndf allows command override during color separation
/Color5044Dict 100 dict def
Color5044Dict begin
/bdf {bind def} def
/ndf
  {1 index where
    {pop pop pop
    }
    {dup xcheck
      {bind} if
    def
    }
    ifelse
  } bdf
/setcmykcolor
  {1 exch sub
  3 
    {dup 5 -1 roll sub 0 2 copy lt
      {exch} if
    pop exch
    } repeat
  pop setrgbcolor
  }ndf
/setcmykcoloroverprint
  {4
    {dup -1 eq
      {pop 0} if
      4 1 roll
    } repeat
  setcmykcolor
  } ndf
/findcmykcustomcolor
  {5 /packedarray where
    {pop packedarray
    }
    {array astore readonly
    }
    ifelse
  } ndf
/setcustomcolor
  {exch aload pop pop
  4
    {4 index mul 4 1 roll
    } repeat
  setcmykcolor pop
  } ndf
/setseparationgray
  {1 exch sub systemdict /setgray get exec
  } ndf
/setoverprint {pop} ndf
/currentoverprint false ndf
%CMYK multi-proc colorimage
/colorimage
  {4 ne
    {(\nUnsupported number of colors for colorimage.\n) print flush quit
    } if
  not
    {(\nSingle procedure form  colorimage unsupported.\n) print flush quit
    } if
  save 20 dict begin /&saveobj exch def
  /&Kproc exch def /&Yproc exch def /&Mproc exch def /&Cproc exch def
    {&Cproc &Mproc &Yproc &Kproc
    /&K exch def /&Y exch def /&M exch def /&C exch def
    0 1 &K length 1 sub
      {/&i exch def
      &K &i 255
      &C &i get 30 mul
      &M &i get 59 mul add
      &Y &i get 11 mul add
      &K &i get 100 mul add
      100 idiv
      dup 255 gt
        {pop 255} if
      sub put
      } for
    &K
    } image
  &saveobj end restore
  } ndf
/customcolorimage
  {pop systemdict /image get exec
  } ndf
/separationimage
  {systemdict /image get exec
  } ndf
end
%%EndResource
Color5044Dict begin
%
/DEC_DVC$dict 300 dict def
DEC_DVC$dict begin
%
/DVC$PSJob save def
%
mark		% CREATE ISOLatin1Encoding if not there already
/ISOLatin1Encoding
  8#000 1 8#054 {StandardEncoding exch get} for 
  /minus
  8#056 1 8#217 {StandardEncoding exch get} for 
  /dotlessi 
  8#301 1 8#317 {StandardEncoding exch get} for 
  /space /exclamdown /cent /sterling /currency /yen /brokenbar /section 
  /dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen 
  /registered /macron /degree /plusminus /twosuperior /threesuperior /acute 
  /mu /paragraph /periodcentered /cedilla /onesuperior /ordmasculine 
  /guillemotright /onequarter /onehalf /threequarters /questiondown /Agrave 
  /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla /Egrave /Eacute 
  /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis /Eth /Ntilde 
  /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply /Oslash /Ugrave 
  /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls /agrave /aacute 
  /acircumflex /atilde /adieresis /aring /ae /ccedilla /egrave /eacute 
  /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis /eth /ntilde
  /ograve /oacute /ocircumflex /otilde /odieresis /divide /oslash /ugrave 
  /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis 
  /ISOLatin1Encoding where not {256 array astore def} if 
cleartomark
%
/DOCPSE ISOLatin1Encoding 256 array copy def
mark						% CREATE DOCPSE ENCODING
  8#055 /hyphen
  8#201 /bullet    8#202 /emdash     8#203 /endash    8#204 /dagger
  8#205 /daggerdbl 8#206 /registered 8#207 /trademark %8#210 /Delta
  8#211 /fi        8#212 /fl         8#213 /OE        8#214 /oe
  8#215 /Ydieresis
  counttomark -1 bitshift			% DIVIDE BY 2
  {DOCPSE 3 1 roll put} repeat			% STACK NOW CONTAINS MARK
cleartomark
%
/ReENCODE {		% /basefont /newfont encoding ReENCODE
    /newencoding exch def	%ARG: NAME OF ENCODING VECTOR
    /newfontname exch def	%ARG: NEW NAME FOR FONT AFTER RE-ENCODING
    findfont
    /basefontdict exch def	%ARG: NAME OF FONT TO BE RE-ENCODED
    basefontdict maxlength dict begin	%CREATE AND OPEN NEW DICT
	basefontdict {		%COPY ENTRIES FROM BASE FONT DICT TO NEW ONE
	    1 index /FID ne {
		def		%IF NOT THE ONE WE'RE ENCODING, JUST COPY PTRS
	    } { %else
		pop pop		%IGNORE FID AND ENCODING FOR ONE WE'RE ENCODING
	    } ifelse
	} forall
	/FontName newfontname def	%DEFINE NEW NAME 
	/Encoding newencoding def	%DEFINE NEW ENCODING VECTOR
	newfontname currentdict definefont	%TURN IT INTO A PS FONT
	pop			%IGNORE MODIFIED DICT RETURNED BY DEFINEFONT
    end
}def
%
/cvsstr 64 string def
/tempmatrix matrix def
%
% Exit page (temporarily) to add fonts/characters.
/XP { }def
% 
% Resume page
/RP {/ExampleState 0 def} def		% RESUME PAGE
/ExampleState 0 def
%
% End Page: EP
/EP {DVC$PSPage restore}def
%
% Purge fonts to reclaim VM
/PF {
  currentoverprint
  currentrgbcolor
  EP			%Does restore
  PageSetup     %Does save
  setrgbcolor
  setoverprint
}def
%
% ABBREVIATIONS 
/S /show load def
/SV /save load def
/RST /restore load def
%
/Yadjust {Ymax exch sub} def
%
/SXY {		% (x,y) POSITION ABSOLUTE, JUST SET Xpos & Ypos, DON'T MOVE
  Yadjust  /Ypos exch def /Xpos exch def
} def
%
/XY {						% (x,y) POSITION ABSOLUTE
  Yadjust moveto
} def
%
/X {						% (x,0) POSITION ABSOLUTE
  currentpoint exch pop moveto
} def
%
/Y {						% (0,y) POSITION ABSOLUTE 
  currentpoint pop exch Yadjust moveto
} def
%
/xy {						% (x,y) POSITION RELATIVE
  neg rmoveto
} def
%
/x {						% (x,0) POSITION RELATIVE
  0 rmoveto
} def
%
/y {						% (0,y) POSITION RELATIVE
  0 exch neg rmoveto
} def
%
/R {						% Draw a rectangle
  /ht exch def  /wd exch def   gsave
  currentpoint  newpath  moveto
  0 ht rlineto  wd 0 rlineto
  0 ht neg rlineto  wd neg 0 rlineto
  closepath fill grestore wd 0 rmoveto
}def
%
%Setup Page Media:  <paper-height> <paper-width> PM
/PM {
  /Xmax exch Resolution mul def
  /Ymax exch Resolution mul def
  /UNDERLAY where {
    pop
    /eps_save save def		% save before EPSF underlay
    Resolution 72 div dup scale % Revert coords to points
    count array astore /DVCstack exch def % save op stack
    /dict_count countdictstack def % # of dicts
    userdict begin		% default dict
    /showpage {}def		% disable showpage
    0 setgray
      {UNDERLAY} stopped {(Error executing /UNDERLAY)== quit}if
    countdictstack dict_count sub {end} repeat % clean up dict stack
    clear DVCstack aload pop	% restore op stack
    eps_save restore		% restore after EPSF
  }if
  PageSetup
}def
%
%Setup page coordinates
/PageSetup
{
%  /DVC$PSPage {save} def % ++cjb: fix VME bug
  /DVC$PSPage save def
  PortraitMode not {PaperWidth 0 translate  90 rotate} if
  /Xpos 0 def
  /Ypos 0 def
}def
%
% Begin EPS file: <xoffset> <yoffset> SPB
/SPB {
  Yadjust transform		% convert from DVC to device coords
  EP				% page-level restore
  /eps_save save def		% save before EPSF
  Resolution 72 div dup scale 	% Revert coords to points
  itransform			% convert position back to points  
  translate			% set position for EPSF
  PortraitMode not {90 rotate} if % rotate for EPSF
  count array astore /DVCstack exch def	% save op stack
  /dict_count countdictstack def % # of dicts
  userdict begin		% default dict
  /showpage {}def		% disable showpage
  0 setgray
}def
%
% End EPS file
/SPE {
  countdictstack dict_count sub {end} repeat % clean up dict stack
  clear DVCstack aload pop	% restore op stack
  eps_save restore		% restore after EPSF
  PageSetup			% restore DVC coords
}def
%
% Print-Page Routine: <Page #> PP
/PP {
  gsave
  showpage
  grestore
}def
%
/DMF {		%  /font-name <point-size> DMF
  exch findfont exch scalefont setfont
}def
%
/concatnam {	%  /abcd (xxx) concatnam  ==> /abcdxxx
  /xxx exch def
  /namstr exch cvsstr cvs def
  /newnam namstr length xxx length add string def
  newnam 0 namstr putinterval
  newnam namstr length xxx putinterval
  newnam cvn 
}def
%
/strip {	%  /abcdef 2 strip ==> /cdef
  /num exch def  /nam exch def
  /namstr nam cvsstr cvs def
  /newlen namstr length num sub def
  namstr num newlen getinterval  cvn
}def
%		ROUTINES TO HANDLE PACKING/UNPACKING NUMBERS
/PackHW {	% <target> <pos> <num> PackHW --> <new target>
  /num exch def  /pos exch def  /target exch def
  num 16#0000FFFF and 1 pos sub 16 mul bitshift  target or
}def
/PackByte {	% <target> <pos> <num> PackByte --> <new target>
  /num exch def  /pos exch def  /target exch def
  num 16#000000FF and 3 pos sub 8 mul bitshift   target or
}def
/UnpkHW {	%  <pos> <num> UnpkHW --> <unpacked value>
  /num exch def  /pos exch def
  num 1 pos sub -16 mul bitshift 16#0000FFFF and
  dup 16#00007FFF gt {16#00010000 sub} if
}def
/UnpkByte {	%  <pos> <num> UnpkByte --> <unpacked value>
  /num exch def  /pos exch def
  num 3 pos sub -8 mul bitshift 16#000000FF and
  dup 16#0000007F gt {16#00000100 sub} if
}def
%
/ps-scalefont {
    % FOR PS FONTS, LOOK AT SIZE REQUESTED.  IF IT HAS A DECIMAL REMAINDER
    % EQUIVALENT TO .001-.009 POINTS (I.E., .050-.450 VAXDOC UNITS), THAT'S 
    % A FLAG TO STRETCH IT VERTICALLY BY ADDING 1-9 EXTRA POINTS TO THE 
    % VERTICAL SCALING.
                % save requested size - as entered and as integer
    dup /x-size exch def cvi /x-int exch def
                % calc decimal remainder, mul x 1000, round
    x-size x-int sub 1000 mul round cvi /remainder exch def
                % see how we scale...
    remainder 50 lt remainder 450 gt or {
                % scale isomorphically
        /ystretch 0 def
        x-size scalefont
    } {
                % scale anamorphically
        /ystretch remainder def
        x-int ystretch add /y-size exch def
        [x-int 0 0 y-size 0 0] makefont
    } ifelse
}def
%
/DPSF {		% /procname size /fontname DPSF
    findfont exch ps-scalefont [ exch /setfont cvx ] cvx def
}def
%
/PXLBuildCharDict 17 dict def
/CMEncodingArray 256 array def
0 1 255 {CMEncodingArray exch dup cvsstr cvs cvn put} for
/RasterConvert {RasterScaleFactor div}def
/TransformBBox {
  aload pop
  /BB-ury exch def  /BB-urx exch def  /BB-lly exch def  /BB-llx exch def
  [ BB-llx RasterConvert BB-lly RasterConvert 
    BB-urx RasterConvert BB-ury RasterConvert ]
}def
/RunLengthToRasters {
  % none yet
}def
/GenerateRasters {			% GENERATE RASTERS FOR "IMAGEMASK"
  rasters  runlength 1 eq {RunLengthToRasters} if
}def
%
/int-dict-name {int (-dict) concatnam}def
/int-dict {int (-dict) concatnam cvx load}def
%
/DefinePXLFont {
	%  <int-font-name><ext-font-name><pt-sz(pix)><PXL mag><num-chars>...
	%  ...[llx lly urx ury]<newfont-fg>DefinePXLFont
  /newfont exch def  /bb exch def      /num exch def  /psz exch def
  /dsz exch def      /pxlmag exch def  /ext exch def  /int exch def
  /fnam ext (-) concatnam pxlmag cvsstr cvs concatnam def
  newfont not {
    int-dict-name 13 dict def
    int-dict begin
      /FontType 3 def  /FontMatrix [ 1 dsz div 0 0 1 dsz div 0 0 ] def
      /FontBBox bb TransformBBox def  /Encoding CMEncodingArray def
      /CharDict 1 dict def  CharDict begin  /Char-Info num array def  end
      /BuildChar {
        PXLBuildCharDict begin
          /char exch def  /fontdict exch def
          fontdict /CharDict get /Char-Info get char get aload pop
          /rasters exch def  /PackedWord1 exch def
          0 PackedWord1 UnpkHW 16#7FFF ne {
	    /PackedWord2 exch def  /wx 0 PackedWord1 UnpkHW def
            /rows 2 PackedWord1 UnpkByte def  /cols 3 PackedWord1 UnpkByte def
            /llx 0 PackedWord2 UnpkByte def   /lly 1 PackedWord2 UnpkByte def
            /urx 2 PackedWord2 UnpkByte def   /ury 3 PackedWord2 UnpkByte def
	  }{ %else
	    /PackedWord2 exch def  /PackedWord3 exch def /PackedWord4 exch def
            /wx 1 PackedWord1 UnpkHW def    /rows 0 PackedWord2 UnpkHW def
            /cols 1 PackedWord2 UnpkHW def  /llx 0 PackedWord3 UnpkHW def
            /lly 1 PackedWord3 UnpkHW def   /urx 0 PackedWord4 UnpkHW def
            /ury 1 PackedWord4 UnpkHW def
          } ifelse
          rows 0 lt {
	    /rows rows neg def /runlength 1 def
	  }{ %else
	    /runlength 0 def
	  } ifelse
          wx 0
          llx RasterConvert lly RasterConvert 
          urx RasterConvert ury RasterConvert setcachedevice
          rows 0 ne {
	    gsave
	      cols rows true  RasterScaleFactor 
              0 0 RasterScaleFactor neg llx .5 add neg ury .5 add 
              tempmatrix astore  GenerateRasters imagemask
            grestore
          } if
        end
      }def
    end
    fnam int-dict definefont pop 
  } if 
  int-dict-name fnam findfont psz scalefont def
  currentdict int [ int-dict /setfont cvx ] cvx put
}def 
/PXLF { true  DefinePXLFont}def	% SIGNAL THAT FONT ALREADY LOADED
/PXLNF {false  DefinePXLFont}def	% SIGNAL THAT FONT NOT ALREADY LOADED
%
/PXLC {	% <int-font-name><code><wx><llx><lly><urx><ury>...
	% ...<rows><cols><runlength><rasters>PXLC
  /rasters exch def  /runlength exch def  /cols exch def  /rows exch def
  /ury exch def      /urx exch def        /lly exch def   /llx exch def
  /wx exch def       /code exch def       /int exch def
  % SEE IF LONG OR SHORT FORMAT IS REQUIRED
  true cols CKSZ rows CKSZ ury CKSZ urx CKSZ lly CKSZ llx CKSZ 
  TackRunLengthToRows {
    int-dict /CharDict get /Char-Info get code 
    [ 0 0 llx PackByte 1 lly PackByte 2 urx PackByte 3 ury PackByte
      0 0 wx PackHW 2 rows PackByte 3 cols PackByte rasters ] put
  }{ %else
    int-dict /CharDict get /Char-Info get code 
    [ 0 0 urx PackHW 1 ury PackHW   0 0 llx PackHW 1 lly PackHW
      0 0 rows PackHW 1 cols PackHW 0 0 16#7FFF PackHW 1 wx PackHW rasters ] put
  } ifelse
}def
%
/CKSZ {abs 127 le and}def
/TackRunLengthToRows {runlength 0 ne {/rows rows neg def} if}def
%
/PLOTC {
  % <wx><dsz><psz><llx><lly><urx><ury><rows><cols><runlength><rasters>PLOTC
  /rasters exch def  /runlength exch def  /cols exch def  /rows exch def
  /ury exch def      /urx exch def        /lly exch def   /llx exch def
  /psz exch def      /dsz exch def        /wx exch def
  % "PLOT" A CHARACTER'S RASTER PATTERN
  rows 0 ne {
    gsave
      currentpoint translate  psz dsz div dup scale
      cols rows true  RasterScaleFactor 0 0 RasterScaleFactor 
      neg llx .5 add neg ury .5 add  tempmatrix astore
      GenerateRasters imagemask
    grestore
  } if
  wx x
}def
%
% set color routine: Color# SC
/SC {ColorPalette exch get 1.0 setcustomcolor}bind def
%
%
%  Procedures for implementing the "rotate <theta>" special:
%  <theta> ROTB -
%        - ROTE -

%+++ TTI changes to allow .screen escape sequence
% 1000 ROTB -> start screen
% 1001 ROTB -> end screen
% 1002 ROTB -> Digital logo

/codexindent 590 def

/ROTB {
  dup 1000 eq {
    % 1000 ROTB - start code example
    pop /ExampleState 0 def
    /S {
      dup (.screen) eq {
      % start screen example
% pjf fix 7-4-92 : first line after .screen was indented improperly
        currentpoint /ExampleY exch def /ExampleX exch def
        1 setgray show 0 setgray
        /S {
          /ExampleName exch def /ExampleState 1 def
          codexindent 0 translate codexindent 0 rmoveto
          1 setgray ExampleName show 0 setgray
          /S /show load def
          /FONT104 /F104 load def
          % replace the tilde with a space
          currentfont F102 currentfont begin
            /Encoding load        % - encoding
            % save the old encoding for the tilde
            dup 126 get exch      % - e126 encoding
            dup 32 get 126 exch put % - e126
          end
          % stick tilde encoding in a variable
          /ExampleTilde exch def
          FONT104 currentfont /F104DICT exch def setfont
          /F104 {
            /S {
              currentfont /F104DICT load eq {
                dup length 240 mul /w exch def
                gsave 0 -100 rmoveto currentpoint
                newpath moveto w 0 rlineto 0 440
                rlineto w neg 0 rlineto closepath fill grestore
                1 setgray show 0 setgray
              } {
                /S /show load def S
              } ifelse
            } def
            FONT104
          } def
        } def
      } {
      % regular code example
        show /S /show load def
      } ifelse
    } def
  } { dup 1001 eq {
    % 1001 ROTB - end code example
    pop
    ExampleState 1 eq {
      currentpoint ExampleY exch sub 600 sub /ylength exch def pop
      /xlength 19200 1.25 mul def /radius 1000 def
      gsave ExampleX ExampleY translate
      240 -400 translate .8 1 scale 50 setlinewidth
      /Helvetica findfont 250 scalefont setfont
      ExampleName (-) eq { /ExampleName () def } if
      ExampleName stringwidth pop
      xlength exch sub -250 radius sub ylength sub moveto
        gsave 1.25 1 scale ExampleName show grestore
      newpath radius neg 0 moveto
      0 ylength neg radius 180 270 arc
      xlength ylength neg radius 270 0 arc
      xlength 0 radius 0 90 arc
      0 0 radius 90 180 arc
      closepath stroke grestore
      /ExampleState 0 def
      /F104 /FONT104 load def
      /S /show load def
      % replace tilde encoding, so it doesn't show up as space anymore
      currentfont F102 currentfont begin
        /Encoding load 126 ExampleTilde put
      end setfont
      codexindent neg 0 translate codexindent neg 0 rmoveto
    } if
  } { dup 1002 eq {
    pop
    gsave (-) stringwidth pop neg 0 rmoveto 
    /Helvetica findfont 450 scalefont setfont
    [(d) (i) (g) (i) (t) (a) (l)] {
      currentpoint currentpoint newpath moveto
      0 -200 rmoveto 300 0 rlineto 0 730 rlineto -300 0 rlineto 0 -730 rlineto
      fill moveto gsave
      dup stringwidth pop 300 exch sub 2 div 0 rmoveto
      1 setgray show 0 setgray grestore
      350 0 rmoveto
    } forall
    0 375 rmoveto
    /Helvetica findfont 200 scalefont setfont (TM) show
    grestore
  } {
    % other - do rotation
    XP
    gsave
    Xpos Ypos translate
    rotate % using <theta> from the stack
    Xpos neg Ypos neg translate
    RP
  } ifelse } ifelse } ifelse
} def

/ROTE {XP grestore RP} def
/F104 { } def

%%EndProlog


%%BeginSetup
/PxlResolution 300 def
/Resolution 3600 def
/RasterScaleFactor PxlResolution Resolution div def
/PortraitMode true def
/PaperWidth 8.500 def
/PaperHeight 11.000 def
72 Resolution div dup scale

%>  Postamble of file VDED$:[VDE.VDEDOC]VDE_QUICK_REF.DVI_PS.
% DefineFont:F48 Category:10 Pointsize:6
/Helvetica-Bold /Helvetica-Bold@DOCPSE DOCPSE ReENCODE
/F48 300.0 /Helvetica-Bold@DOCPSE DPSF
% DefineFont:F46 Category:10 Pointsize:6
/Helvetica /Helvetica@DOCPSE DOCPSE ReENCODE
/F46 300.0 /Helvetica@DOCPSE DPSF
% DefineFont:F42 Category:10 Pointsize:8
/F42 400.0 /Helvetica@DOCPSE DPSF
% DefineFont:F40 Category:10 Pointsize:9
/F40 450.0 /Helvetica-Bold@DOCPSE DPSF
% DefineFont:F38 Category:10 Pointsize:9
/F38 450.0 /Helvetica@DOCPSE DPSF
% DefineFont:F36 Category:10 Pointsize:10
/F36 500.0 /Helvetica-Bold@DOCPSE DPSF
% DefineFont:F24 Category:10 Pointsize:14
/F24 700.0 /Helvetica-Bold@DOCPSE DPSF

%Spot color array for this job
/ColorPalette [
0.0 0.0 0.0 1.0 (BLACK) findcmykcustomcolor
] def

%%EndSetup
%
%%Page: (1) 1
%%PageFonts: (atend)
%%PageProcessColors: (atend)
%%PageCustomColors: (atend)
PaperHeight PaperWidth PM 0 0 XY
0 SC 5328 2325 XY F24(OpenVMS)S 246 x(Development)S 246 x(Environment)S
247 x(Quick)S 246 x(Reference)S 245 x(Guide)S 3899 3670 XY 23316 48 R
11798 4268 XY F40(VDE)S 164 x(V)S -25 x(ersion)S 166 x(1.5-0,)S 168 x
(December)S 166 x(1997)S 3899 X 299 y 23316 48 R 5144 5264 XY F38(The)S
150 x(VDE)S 149 x(utilit)S -2 x(y)S 150 x(maintains)S 14957 X(VDE)S
150 x(is)S 149 x(expected)S 150 x(to)S 150 x(be)S 150 x(included)S 150 x
(on)S 150 x(an)S 150 x(OpenVMS)S 5144 X 548 y(source)S 151 x(code)S
150 x(control)S 150 x(libraries.)S 14957 X(Freeware)S 151 x(CD-ROM)S
149 x(V4.0.)S 199 x(For)S 150 x(the)S 150 x(current)S 14957 X 548 y
(freeware)S 151 x(CD-ROM,)S 148 x(see)S 151 x(http://)S -2 x(www)S -25 x
(.openvms.digital.com/.)S 3899 7456 XY F40(INVOKI)S -2 x(NG)S 149 x
(THE)S 149 x(VDE)S 150 x(UTILI)S -2 x(TY)S 150 x(A)S -34 x(T)S 150 x
(DCL)S 148 x(LEVEL)S 5144 X 548 y F38($)S 150 x(VDE)S 10227 X($)S 149 x
(VDE)S 149 x(vde-c)S 2 x(ommand)S 2 x(;)S 149 x(vde-comm)S 2 x(and)S
21433 X($)S 150 x(HELP)S 149 x(VDE)S 5144 X 548 y(VDE>)S 99 x(vde-c)S
2 x(ommand)S 10227 X($)S 149 x(VDE/KEPT/LIBRAR)S -9 x(Y=vde-lib-name)S
21433 X($)S 150 x(HELP)S 149 x(VSC)S 5144 X 548 y(VDE>)S 149 x(EXIT)S
10227 X($)S 149 x(VDE/INTERF)S -26 x(ACE=DECWIN)S -2 x(DOWS)S 21433 X
(VDE>)S 149 x(HELP)S 3899 10196 XY F40(FETCHIN)S -2 x(G,)S 149 x(RESER)S
-8 x(VING)S 148 x(AND)S 149 x(REPLACI)S -2 x(NG)S 149 x(MODULES)S 5144 X
548 y F38(FETCH)S 149 x(/STREAM=stream)S 150 x([fac]mod.typ)S 8482 X
548 y(/GENERA)S -35 x(TION=3a2b1)S 14957 X(/OUTPUT=\211lespec)S 21433 X
(/STREAM=stream)S 5144 12387 XY(RESER)S -8 x(VE)S 149 x(/STREAM=stream)S
150 x([fac]mod.typ)S 150 x("remark")S 8482 X 548 y(/IDEN)S -2 x(TIFICA)S
-34 x(TION=res-id)S 14957 X(/OUTPUT=\211lespec)S 21433 X(/QUEUE)S 8482 X
548 y(/NOC)S -2 x(ONCURREN)S -2 x(T)S 14957 X(/OVERRIDE=)S -2 x(CONCURR)S
-2 x(ENT)S 560 x(/REMARK="string")S 8482 X 548 y(/NOPRO)S -2 x(P)S -33 x
(AGA)S -33 x(TE)S 14957 X(/PROP)S -34 x(AGA)S -33 x(TE=stream)S 21433 X
(/SESSION=session)S 5144 15127 XY(REPLACE)S 149 x(/STREAM=stream)S 150 x
([fac]mod.typ)S 150 x("remar)S 2 x(k")S 8482 X 548 y(/FOLD=f)S -2 x
(old-id)S 14957 X(/NOINFOR)S -2 x(MA)S -32 x(TION)S 21433 X(/REPLACEMENT=repl-name)S
8482 X 548 y(/IDEN)S -2 x(TIFICA)S -34 x(TION=res-id)S 14957 X(/PROP)S
-34 x(AGA)S -33 x(TE=stream)S 21433 X(/REVIEWER=\(user)S -25 x(,...\))S
8482 X 548 y(/INFO)S -2 x(RMA)S -33 x(TION=\211lespec)S 14957 X(/NOPROP)S
-34 x(AGA)S -33 x(TE)S 21433 X(/STREAM=stream)S 8482 X 548 y(/INPU)S
-2 x(T=\211lespec)S 14957 X(/REMARK="string")S 21433 X(/SESSION=session)S
8482 X 548 y(/NOTE=n.)S -2 x(m)S 14957 X(/SCT=\211lespec)S 21433 X(/REASON=reasoncode)S
5144 18963 XY(UNRESER)S -9 x(VE)S 149 x(/STREAM=stream)S 151 x([fac]mod.typ)S
8482 X 548 y(/IDEN)S -2 x(TIFICA)S -34 x(TION=res-id)S 14957 X(/STREAM=stream)S
5144 X 548 y(CREA)S -34 x(TE)S 150 x(MODULE)S 149 x([fac]mod.typ)S 5144 X
548 y(DELETE)S 150 x(MODULE)S 149 x([fac]mod.typ)S 3899 21702 XY F40
(DISPLA)S -42 x(YING)S 148 x(INFORMA)S -34 x(TION)S -190 y F46(1)S 5144 X
738 y F38(SHOW)S 149 x(F)S -24 x(ACILITI)S -2 x(TY)S 150 x(fac-name)S
5144 X 548 y(SHOW)S 149 x(FOLD)S 149 x([fac]mod.typ)S 8482 X 548 y(/IDEN)S
-2 x(TIFICA)S -34 x(TION=f)S -2 x(old-id)S 14957 X(/STREAM=stream)S
5144 24442 XY(SHOW)S 149 x(GENERA)S -34 x(TION)S 149 x([fac]mod.typ;n)S
8482 X 548 y(/BEFORE=date-ti)S -2 x(me)S 14957 X(/IF_DIFFEREN)S -2 x
(T=stream)S 21433 X(/STREAM=stream)S 8482 X 548 y(/SINC)S -2 x(E=date-time)S
14957 X(/IF_SAME=stream)S 21433 X(/TREE)S 8482 X 548 y(/GENERA)S -35 x
(TION=3a2)S 14957 X(/ST)S -33 x(A)S -33 x(TISTIC)S -2 x(S=\(...\))S
21433 X(/USERNAME=user)S 5144 X 548 y(DIFFERENC)S -2 x(ES)S 150 x([fac]mod.typ;n)S
149 x([fac]mod.typ;n)S 5144 X 548 y(DIFFERENC)S -2 x(ES)S 150 x([fac]mod.typ;n)S
8482 X 548 y(/GENERA)S -35 x(TION=3a2)S 14957 X(/OUTPUT=\211lespec)S
21433 X(/STREAM=stream)S 5144 28826 XY(SHOW)S 149 x(MODULE)S 150 x([fac]mod.typ)S
5144 X 548 y(SHOW)S 149 x(REPLACEMENT)S 150 x(repl-name)S 8482 X 548 y
(/ACCEPTED)S 14957 X(/NOT_REVIEWED)S 21433 X(/STREAM=stream)S 8482 X
548 y(/REJECTED)S 14957 X(/BEFORE=date-time)S 21433 X(/REVIEWER=user)S
8482 X 548 y(/IN_REVI)S -2 x(EW)S 14957 X(/SINCE=date-time)S 21433 X
(/USERNAME=user)S 3899 X 547 y 23316 48 R 3899 32031 XY F46(1)S 25 x
140 y F42(All)S 134 x(SHOW)S 132 x(commands)S 132 x(accept)S 131 x(/BRIEF)S
-44 x(,)S 132 x(/FULL,)S 132 x(and)S 132 x(/T)S -7 x(OT)S -29 x(AL;)S
132 x(some)S 132 x(accept)S 132 x(/OUTPUT=\211lespec)S 26934 35573 XY
F36(1)S
EP PP
%%PageTrailer
%%PageFonts: Helvetica-Bold Helvetica
%%PageProcessColors:
%%PageCustomColors: (BLACK)
%
%%Page: (2) 2
%%PageFonts: (atend)
%%PageProcessColors: (atend)
%%PageCustomColors: (atend)
PaperHeight PaperWidth PM 0 0 XY
0 SC 3899 1850 XY 23316 48 R 11798 2448 XY F40(VDE)S 164 x(V)S -25 x
(ersion)S 166 x(1.5-0,)S 168 x(December)S 166 x(1997)S 3899 X 298 y
23316 48 R 3899 3294 XY(DISPLA)S -42 x(YING)S 148 x(INFORMA)S -34 x
(TION)S -190 y F48(1)S 24 x 190 y F40(,)S 149 x(cont.)S 5144 X 548 y
F38(SHOW)S 149 x(RESER)S -8 x(V)S -33 x(A)S -34 x(TION)S 149 x([fac]mod.typ)S
8482 X 548 y(/BEFORE=date-ti)S -2 x(me)S 14957 X(/SESSION=session)S
21433 X(/SINCE=date-ti)S -2 x(me)S 8482 X 548 y(/STREAM=stream)S 14957 X
(/USERNAME=user)S 5144 X 548 y(SHOW)S 149 x(STREAM)S 150 x(stream)S
8482 X 548 y(/OPEN)S 14957 X(/CLOSED)S 21433 X(/SUCCESSOR)S 5144 X 548 y
(SHOW)S 149 x(USER)S 149 x(user)S 3899 7678 XY F40(CANCELL)S -2 x(ING)S
149 x(FOLD)S 149 x(RECORD)S -2 x(S)S 5144 X 548 y F38(CANCEL)S 149 x
(FOLD)S 149 x(/STREAM=stream)S 150 x([fac]mod.typ)S 8482 X 548 y(/IDEN)S
-2 x(TIFICA)S -34 x(TION=f)S -2 x(old-id)S 14957 X(/STREAM=stream)S
5144 X 548 y(REPLACE)S 149 x(/FOLD)S 149 x(/STREAM=stream)S 150 x([fac]mod.typ)S
150 x("remark)S 2 x(")S 3899 10418 XY F40(REVIEWING)S 148 x(REPLACEMENTS)S
5144 X 548 y F38(REVIEW)S 149 x(REPLACEMENT)S 150 x(repl-name)S 8482 X
548 y(NEXT)S 10674 X(BACK)S 12892 X(CURRENT)S 16081 X(FIRST)S 18373 X
(LAST)S 20491 X(DIRECT)S -9 x(OR)S -9 x(Y)S 24112 X(EXIT)S 8482 X 548 y
(SELECT)S 149 x([fac]mod.typ)S 14957 X(ACCEPT)S 149 x("rema)S 2 x(rk")S
21433 X(REJECT)S 149 x("remar)S 2 x(k")S 5144 X 547 y(ACCEPT)S 149 x
(REPLACEMENT)S 149 x(repl-nam)S 2 x(e)S 150 x("remark")S 5144 X 548 y
(REJECT)S 149 x(REPLACEMENT)S 149 x(repl-na)S 2 x(me)S 150 x("remark)S
2 x(")S 3899 14253 XY F40(PROJECT)S 149 x(LEADER)S 148 x(OPERA)S -34 x
(TIONS)S 5144 X 548 y F38(PERFORM)S 149 x(REPLACEMENT)S 150 x(repl-name)S
151 x(/STREAM=stream)S 5144 X 548 y(CANCEL)S 149 x(REPLACEMENT)S 149 x
(repl-nam)S 2 x(e)S 150 x(/STREAM=stream)S 5144 16445 XY(INSER)S -9 x
(T)S 150 x(GENERA)S -34 x(TION)S 148 x([fac]mod.typ)S 150 x(/STREAM=orig-stream)S
150 x(dest-stream)S 8482 X 548 y(/GENERA)S -35 x(TION=3a2)S 14957 X
(/STREAM=stream)S 5144 18089 XY(MODIFY)S 149 x(GENERA)S -34 x(TION)S
149 x([fac]mod.typ)S 149 x(/[NO]O)S -2 x(BSOLETE)S 5144 X 548 y(REMOVE)S
150 x(GENERA)S -34 x(TION)S 148 x([fac]mod.typ)S 150 x(/STREAM=stream)S
5144 X 548 y(DELETE)S 150 x(GENERA)S -34 x(TION)S 148 x([fac]mod.typ)S
150 x(/STREAM=stream)S 5144 20281 XY(CREA)S -34 x(TE)S 150 x(STREAM)S
149 x(stream)S 151 x(/P)S -34 x(ARENT=stream)S 150 x(/CMS_CLASS)S 150 x
(/REMARK="string")S 5144 X 548 y(MODIFY)S 149 x(STREAM)S 150 x(stream)S
8482 X 548 y(/REVIEWER=)S -2 x(\(user)S -23 x(,...\))S 14957 X(/SUCCESSOR=)S
-2 x(stream)S 21433 X(/OPEN)S 8482 X 548 y(/NOR)S -2 x(EVIEWER=\(user)S
-23 x(,..)S -2 x(.\))S 14957 X(/OWNER=user)S 21433 X(/FROZEN)S 8482 X
547 y(/NOTI)S -2 x(FY=\(user)S -23 x(,...)S -2 x(\))S 14957 X(/NAME=new-nam)S
2 x(e)S 21433 X(/CLOSED)S 8482 X 548 y(/NON)S -2 x(OTIFY=\(user)S -24 x
(,...\))S 14957 X(/REMARK="string")S 21433 X(/DELETE)S 5144 X 548 y
(POPULA)S -33 x(TE)S 149 x(STREAM)S 150 x(stream)S 150 x(/FROM_STREAM=stream)S
3899 24664 XY F40(LIBRA)S -2 x(R)S -16 x(Y)S 149 x(MAINTENANC)S -2 x
(E)S 150 x(COMMANDS)S 5144 X 548 y F38(CREA)S -34 x(TE)S 150 x(USER)S
149 x(user)S 5144 X 548 y(MODIFY)S 149 x(USER)S 149 x(user)S 5144 X
548 y(CREA)S -34 x(TE)S 150 x(LIBRAR)S -9 x(Y)S 150 x(lib-name)S 5144 X
548 y(MODIFY)S 149 x(LIBRAR)S -9 x(Y)S 150 x(lib-name)S 3899 27952 XY
F40(CONVENI)S -2 x(ENCE)S 149 x(FEA)S -33 x(TURES)S 5144 X 548 y F38
(@\211lespec)S 8482 X(SET)S 149 x(F)S -25 x(ACILITY)S 14957 X(DEFINE/KEY)S
21433 X(SET)S 149 x(LOG)S 5144 X 548 y(HELP)S 8482 X(SET)S 149 x(STREAM)S
14957 X(SET)S 150 x(KEY)S 21433 X(CANCEL)S 149 x(LOG)S 5144 X 548 y
(SP)S -33 x(A)S -16 x(WN)S 8482 X(SHOW)S 149 x(DEF)S -25 x(AUL)S -33 x
(TS)S 14957 X(SHOW)S 150 x(KEY)S 21433 X(SET)S 149 x(VERIFY)S 5144 X
548 y(A)S -33 x(TT)S -33 x(ACH)S 8482 X(SET)S 149 x(EDIT)S -9 x(OR)S
14957 X(DEFINE/CO)S -2 x(MMAND)S 21433 X(CANCEL)S 149 x(VERIFY)S 5144 X
548 y(SET)S 150 x(PRIV)S 8482 X(SHOW)S 149 x(EDIT)S -9 x(OR)S 14957 X
(SHOW)S 150 x(SYMBOL)S 21433 X(EXIT)S 149 x(/KEPT_PROCESS)S 3899 X 548 y
23316 48 R 3899 31705 XY F46(1)S 25 x 141 y F42(All)S 134 x(SHOW)S 132 x
(commands)S 132 x(accept)S 131 x(/BRIEF)S -44 x(,)S 132 x(/FULL,)S 132 x
(and)S 132 x(/T)S -7 x(OT)S -29 x(AL;)S 132 x(some)S 132 x(accept)S
132 x(/OUTPUT=\211lespec)S 3899 X 386 y 23316 48 R 3899 35573 XY F36
(2)S
EP PP
%%PageTrailer
%%PageFonts: Helvetica-Bold Helvetica
%%PageProcessColors:
%%PageCustomColors: (BLACK)
%
%%Trailer
%%Pages: 2
%%BoundingBox: 0 0 612 792
%%DocumentFonts: Helvetica-Bold Helvetica
%%DocumentNeededFonts: Helvetica-Bold
%%+ Helvetica
%%DocumentProcessColors:
%%DocumentCustomColors: (BLACK)
%%CMYKCustomColor: 0.0 0.0 0.0 1.0 (BLACK)
%
DVC$PSJob restore
end %DEC_DVC$dict
end %Color5044Dict
%
%%EOF
