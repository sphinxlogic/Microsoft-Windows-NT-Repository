%!PS-Adobe-3.0
%%Title: PLMENU$FACCOMP
%%Creator: DECdocument  V3.2N
%%Copyright: 1994-1997 Touch Technologies, Inc.
%%+All Rights Reserved.
%%CreationDate: Fri Dec 11 1998 17:49:18
%%For: SHOFFMAN    
%%BoundingBox: (atend)
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Orientation: Portrait
%%Pages: (atend)
%%PageOrder: Ascend
%%DocumentFonts: (atend) 
%%DocumentNeededFonts: (atend) 
%%DocumentProcSets: Underlay Color5044
%%DocumentSuppliedProcSets: Underlay Color5044
%%DocumentProcessColors: (atend)
%%DocumentCustomColors: (atend)
%%EndComments
%+++TTI changes : added ROTB back in
%+++            : added 1000 ROTB = begin special code example
%+++            : added 1001 ROTB = end special code example
%+++            : added 1002 ROTB = digital logo
%
%%BeginResource: procset Underlay
%%CreationDate: (2/10/92)
%
% In VAX DOCUMENT V2.1-1, simple EPSF files up to 65,000 bytes long
% may be an underlay. Define the EPSF as a PostScript proceedure
% called /UNDERLAY and prefix to DOCUMENT's PS output  For example:.
% /UNDERLAY ( EPSF code here ) cvx def
%
% To create a "DRAFT" underlay change /UNDERLAY* to /UNDERLAY
/UNDERLAY* (
  /Note (DRAFT) def
  /NoteSize 120 def
  /NoteFont /Helvetica findfont NoteSize scalefont def
  /Note where { pop Note length 0 gt {
    /NoteWidth NoteFont setfont Note stringwidth pop def
    PaperWidth 36 mul PaperHeight 36 mul moveto
    PaperHeight PaperWidth atan rotate
    NoteWidth -2 div NoteSize .729 mul -2 div rmoveto 
    Note true charpath .075 setseparationgray fill
  }if  }if
) cvx def
%%EndResource
%
%%BeginResource: procset Color5044
%%CreationDate: (1/21/91)
%%Version:1.0 3
%Implementation of Adobe 5044 color specification
%/ndf allows command override during color separation
/Color5044Dict 100 dict def
Color5044Dict begin
/bdf {bind def} def
/ndf
  {1 index where
    {pop pop pop
    }
    {dup xcheck
      {bind} if
    def
    }
    ifelse
  } bdf
/setcmykcolor
  {1 exch sub
  3 
    {dup 5 -1 roll sub 0 2 copy lt
      {exch} if
    pop exch
    } repeat
  pop setrgbcolor
  }ndf
/setcmykcoloroverprint
  {4
    {dup -1 eq
      {pop 0} if
      4 1 roll
    } repeat
  setcmykcolor
  } ndf
/findcmykcustomcolor
  {5 /packedarray where
    {pop packedarray
    }
    {array astore readonly
    }
    ifelse
  } ndf
/setcustomcolor
  {exch aload pop pop
  4
    {4 index mul 4 1 roll
    } repeat
  setcmykcolor pop
  } ndf
/setseparationgray
  {1 exch sub systemdict /setgray get exec
  } ndf
/setoverprint {pop} ndf
/currentoverprint false ndf
%CMYK multi-proc colorimage
/colorimage
  {4 ne
    {(\nUnsupported number of colors for colorimage.\n) print flush quit
    } if
  not
    {(\nSingle procedure form  colorimage unsupported.\n) print flush quit
    } if
  save 20 dict begin /&saveobj exch def
  /&Kproc exch def /&Yproc exch def /&Mproc exch def /&Cproc exch def
    {&Cproc &Mproc &Yproc &Kproc
    /&K exch def /&Y exch def /&M exch def /&C exch def
    0 1 &K length 1 sub
      {/&i exch def
      &K &i 255
      &C &i get 30 mul
      &M &i get 59 mul add
      &Y &i get 11 mul add
      &K &i get 100 mul add
      100 idiv
      dup 255 gt
        {pop 255} if
      sub put
      } for
    &K
    } image
  &saveobj end restore
  } ndf
/customcolorimage
  {pop systemdict /image get exec
  } ndf
/separationimage
  {systemdict /image get exec
  } ndf
end
%%EndResource
Color5044Dict begin
%
/DEC_DVC$dict 300 dict def
DEC_DVC$dict begin
%
/DVC$PSJob save def
%
mark		% CREATE ISOLatin1Encoding if not there already
/ISOLatin1Encoding
  8#000 1 8#054 {StandardEncoding exch get} for 
  /minus
  8#056 1 8#217 {StandardEncoding exch get} for 
  /dotlessi 
  8#301 1 8#317 {StandardEncoding exch get} for 
  /space /exclamdown /cent /sterling /currency /yen /brokenbar /section 
  /dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen 
  /registered /macron /degree /plusminus /twosuperior /threesuperior /acute 
  /mu /paragraph /periodcentered /cedilla /onesuperior /ordmasculine 
  /guillemotright /onequarter /onehalf /threequarters /questiondown /Agrave 
  /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla /Egrave /Eacute 
  /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis /Eth /Ntilde 
  /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply /Oslash /Ugrave 
  /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls /agrave /aacute 
  /acircumflex /atilde /adieresis /aring /ae /ccedilla /egrave /eacute 
  /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis /eth /ntilde
  /ograve /oacute /ocircumflex /otilde /odieresis /divide /oslash /ugrave 
  /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis 
  /ISOLatin1Encoding where not {256 array astore def} if 
cleartomark
%
/DOCPSE ISOLatin1Encoding 256 array copy def
mark						% CREATE DOCPSE ENCODING
  8#055 /hyphen
  8#201 /bullet    8#202 /emdash     8#203 /endash    8#204 /dagger
  8#205 /daggerdbl 8#206 /registered 8#207 /trademark %8#210 /Delta
  8#211 /fi        8#212 /fl         8#213 /OE        8#214 /oe
  8#215 /Ydieresis
  counttomark -1 bitshift			% DIVIDE BY 2
  {DOCPSE 3 1 roll put} repeat			% STACK NOW CONTAINS MARK
cleartomark
%
/ReENCODE {		% /basefont /newfont encoding ReENCODE
    /newencoding exch def	%ARG: NAME OF ENCODING VECTOR
    /newfontname exch def	%ARG: NEW NAME FOR FONT AFTER RE-ENCODING
    findfont
    /basefontdict exch def	%ARG: NAME OF FONT TO BE RE-ENCODED
    basefontdict maxlength dict begin	%CREATE AND OPEN NEW DICT
	basefontdict {		%COPY ENTRIES FROM BASE FONT DICT TO NEW ONE
	    1 index /FID ne {
		def		%IF NOT THE ONE WE'RE ENCODING, JUST COPY PTRS
	    } { %else
		pop pop		%IGNORE FID AND ENCODING FOR ONE WE'RE ENCODING
	    } ifelse
	} forall
	/FontName newfontname def	%DEFINE NEW NAME 
	/Encoding newencoding def	%DEFINE NEW ENCODING VECTOR
	newfontname currentdict definefont	%TURN IT INTO A PS FONT
	pop			%IGNORE MODIFIED DICT RETURNED BY DEFINEFONT
    end
}def
%
/cvsstr 64 string def
/tempmatrix matrix def
%
% Exit page (temporarily) to add fonts/characters.
/XP { }def
% 
% Resume page
/RP {/ExampleState 0 def} def		% RESUME PAGE
/ExampleState 0 def
%
% End Page: EP
/EP {DVC$PSPage restore}def
%
% Purge fonts to reclaim VM
/PF {
  currentoverprint
  currentrgbcolor
  EP			%Does restore
  PageSetup     %Does save
  setrgbcolor
  setoverprint
}def
%
% ABBREVIATIONS 
/S /show load def
/SV /save load def
/RST /restore load def
%
/Yadjust {Ymax exch sub} def
%
/SXY {		% (x,y) POSITION ABSOLUTE, JUST SET Xpos & Ypos, DON'T MOVE
  Yadjust  /Ypos exch def /Xpos exch def
} def
%
/XY {						% (x,y) POSITION ABSOLUTE
  Yadjust moveto
} def
%
/X {						% (x,0) POSITION ABSOLUTE
  currentpoint exch pop moveto
} def
%
/Y {						% (0,y) POSITION ABSOLUTE 
  currentpoint pop exch Yadjust moveto
} def
%
/xy {						% (x,y) POSITION RELATIVE
  neg rmoveto
} def
%
/x {						% (x,0) POSITION RELATIVE
  0 rmoveto
} def
%
/y {						% (0,y) POSITION RELATIVE
  0 exch neg rmoveto
} def
%
/R {						% Draw a rectangle
  /ht exch def  /wd exch def   gsave
  currentpoint  newpath  moveto
  0 ht rlineto  wd 0 rlineto
  0 ht neg rlineto  wd neg 0 rlineto
  closepath fill grestore wd 0 rmoveto
}def
%
%Setup Page Media:  <paper-height> <paper-width> PM
/PM {
  /Xmax exch Resolution mul def
  /Ymax exch Resolution mul def
  /UNDERLAY where {
    pop
    /eps_save save def		% save before EPSF underlay
    Resolution 72 div dup scale % Revert coords to points
    count array astore /DVCstack exch def % save op stack
    /dict_count countdictstack def % # of dicts
    userdict begin		% default dict
    /showpage {}def		% disable showpage
    0 setgray
      {UNDERLAY} stopped {(Error executing /UNDERLAY)== quit}if
    countdictstack dict_count sub {end} repeat % clean up dict stack
    clear DVCstack aload pop	% restore op stack
    eps_save restore		% restore after EPSF
  }if
  PageSetup
}def
%
%Setup page coordinates
/PageSetup
{
%  /DVC$PSPage {save} def % ++cjb: fix VME bug
  /DVC$PSPage save def
  PortraitMode not {PaperWidth 0 translate  90 rotate} if
  /Xpos 0 def
  /Ypos 0 def
}def
%
% Begin EPS file: <xoffset> <yoffset> SPB
/SPB {
  Yadjust transform		% convert from DVC to device coords
  EP				% page-level restore
  /eps_save save def		% save before EPSF
  Resolution 72 div dup scale 	% Revert coords to points
  itransform			% convert position back to points  
  translate			% set position for EPSF
  PortraitMode not {90 rotate} if % rotate for EPSF
  count array astore /DVCstack exch def	% save op stack
  /dict_count countdictstack def % # of dicts
  userdict begin		% default dict
  /showpage {}def		% disable showpage
  0 setgray
}def
%
% End EPS file
/SPE {
  countdictstack dict_count sub {end} repeat % clean up dict stack
  clear DVCstack aload pop	% restore op stack
  eps_save restore		% restore after EPSF
  PageSetup			% restore DVC coords
}def
%
% Print-Page Routine: <Page #> PP
/PP {
  gsave
  showpage
  grestore
}def
%
/DMF {		%  /font-name <point-size> DMF
  exch findfont exch scalefont setfont
}def
%
/concatnam {	%  /abcd (xxx) concatnam  ==> /abcdxxx
  /xxx exch def
  /namstr exch cvsstr cvs def
  /newnam namstr length xxx length add string def
  newnam 0 namstr putinterval
  newnam namstr length xxx putinterval
  newnam cvn 
}def
%
/strip {	%  /abcdef 2 strip ==> /cdef
  /num exch def  /nam exch def
  /namstr nam cvsstr cvs def
  /newlen namstr length num sub def
  namstr num newlen getinterval  cvn
}def
%		ROUTINES TO HANDLE PACKING/UNPACKING NUMBERS
/PackHW {	% <target> <pos> <num> PackHW --> <new target>
  /num exch def  /pos exch def  /target exch def
  num 16#0000FFFF and 1 pos sub 16 mul bitshift  target or
}def
/PackByte {	% <target> <pos> <num> PackByte --> <new target>
  /num exch def  /pos exch def  /target exch def
  num 16#000000FF and 3 pos sub 8 mul bitshift   target or
}def
/UnpkHW {	%  <pos> <num> UnpkHW --> <unpacked value>
  /num exch def  /pos exch def
  num 1 pos sub -16 mul bitshift 16#0000FFFF and
  dup 16#00007FFF gt {16#00010000 sub} if
}def
/UnpkByte {	%  <pos> <num> UnpkByte --> <unpacked value>
  /num exch def  /pos exch def
  num 3 pos sub -8 mul bitshift 16#000000FF and
  dup 16#0000007F gt {16#00000100 sub} if
}def
%
/ps-scalefont {
    % FOR PS FONTS, LOOK AT SIZE REQUESTED.  IF IT HAS A DECIMAL REMAINDER
    % EQUIVALENT TO .001-.009 POINTS (I.E., .050-.450 VAXDOC UNITS), THAT'S 
    % A FLAG TO STRETCH IT VERTICALLY BY ADDING 1-9 EXTRA POINTS TO THE 
    % VERTICAL SCALING.
                % save requested size - as entered and as integer
    dup /x-size exch def cvi /x-int exch def
                % calc decimal remainder, mul x 1000, round
    x-size x-int sub 1000 mul round cvi /remainder exch def
                % see how we scale...
    remainder 50 lt remainder 450 gt or {
                % scale isomorphically
        /ystretch 0 def
        x-size scalefont
    } {
                % scale anamorphically
        /ystretch remainder def
        x-int ystretch add /y-size exch def
        [x-int 0 0 y-size 0 0] makefont
    } ifelse
}def
%
/DPSF {		% /procname size /fontname DPSF
    findfont exch ps-scalefont [ exch /setfont cvx ] cvx def
}def
%
/PXLBuildCharDict 17 dict def
/CMEncodingArray 256 array def
0 1 255 {CMEncodingArray exch dup cvsstr cvs cvn put} for
/RasterConvert {RasterScaleFactor div}def
/TransformBBox {
  aload pop
  /BB-ury exch def  /BB-urx exch def  /BB-lly exch def  /BB-llx exch def
  [ BB-llx RasterConvert BB-lly RasterConvert 
    BB-urx RasterConvert BB-ury RasterConvert ]
}def
/RunLengthToRasters {
  % none yet
}def
/GenerateRasters {			% GENERATE RASTERS FOR "IMAGEMASK"
  rasters  runlength 1 eq {RunLengthToRasters} if
}def
%
/int-dict-name {int (-dict) concatnam}def
/int-dict {int (-dict) concatnam cvx load}def
%
/DefinePXLFont {
	%  <int-font-name><ext-font-name><pt-sz(pix)><PXL mag><num-chars>...
	%  ...[llx lly urx ury]<newfont-fg>DefinePXLFont
  /newfont exch def  /bb exch def      /num exch def  /psz exch def
  /dsz exch def      /pxlmag exch def  /ext exch def  /int exch def
  /fnam ext (-) concatnam pxlmag cvsstr cvs concatnam def
  newfont not {
    int-dict-name 13 dict def
    int-dict begin
      /FontType 3 def  /FontMatrix [ 1 dsz div 0 0 1 dsz div 0 0 ] def
      /FontBBox bb TransformBBox def  /Encoding CMEncodingArray def
      /CharDict 1 dict def  CharDict begin  /Char-Info num array def  end
      /BuildChar {
        PXLBuildCharDict begin
          /char exch def  /fontdict exch def
          fontdict /CharDict get /Char-Info get char get aload pop
          /rasters exch def  /PackedWord1 exch def
          0 PackedWord1 UnpkHW 16#7FFF ne {
	    /PackedWord2 exch def  /wx 0 PackedWord1 UnpkHW def
            /rows 2 PackedWord1 UnpkByte def  /cols 3 PackedWord1 UnpkByte def
            /llx 0 PackedWord2 UnpkByte def   /lly 1 PackedWord2 UnpkByte def
            /urx 2 PackedWord2 UnpkByte def   /ury 3 PackedWord2 UnpkByte def
	  }{ %else
	    /PackedWord2 exch def  /PackedWord3 exch def /PackedWord4 exch def
            /wx 1 PackedWord1 UnpkHW def    /rows 0 PackedWord2 UnpkHW def
            /cols 1 PackedWord2 UnpkHW def  /llx 0 PackedWord3 UnpkHW def
            /lly 1 PackedWord3 UnpkHW def   /urx 0 PackedWord4 UnpkHW def
            /ury 1 PackedWord4 UnpkHW def
          } ifelse
          rows 0 lt {
	    /rows rows neg def /runlength 1 def
	  }{ %else
	    /runlength 0 def
	  } ifelse
          wx 0
          llx RasterConvert lly RasterConvert 
          urx RasterConvert ury RasterConvert setcachedevice
          rows 0 ne {
	    gsave
	      cols rows true  RasterScaleFactor 
              0 0 RasterScaleFactor neg llx .5 add neg ury .5 add 
              tempmatrix astore  GenerateRasters imagemask
            grestore
          } if
        end
      }def
    end
    fnam int-dict definefont pop 
  } if 
  int-dict-name fnam findfont psz scalefont def
  currentdict int [ int-dict /setfont cvx ] cvx put
}def 
/PXLF { true  DefinePXLFont}def	% SIGNAL THAT FONT ALREADY LOADED
/PXLNF {false  DefinePXLFont}def	% SIGNAL THAT FONT NOT ALREADY LOADED
%
/PXLC {	% <int-font-name><code><wx><llx><lly><urx><ury>...
	% ...<rows><cols><runlength><rasters>PXLC
  /rasters exch def  /runlength exch def  /cols exch def  /rows exch def
  /ury exch def      /urx exch def        /lly exch def   /llx exch def
  /wx exch def       /code exch def       /int exch def
  % SEE IF LONG OR SHORT FORMAT IS REQUIRED
  true cols CKSZ rows CKSZ ury CKSZ urx CKSZ lly CKSZ llx CKSZ 
  TackRunLengthToRows {
    int-dict /CharDict get /Char-Info get code 
    [ 0 0 llx PackByte 1 lly PackByte 2 urx PackByte 3 ury PackByte
      0 0 wx PackHW 2 rows PackByte 3 cols PackByte rasters ] put
  }{ %else
    int-dict /CharDict get /Char-Info get code 
    [ 0 0 urx PackHW 1 ury PackHW   0 0 llx PackHW 1 lly PackHW
      0 0 rows PackHW 1 cols PackHW 0 0 16#7FFF PackHW 1 wx PackHW rasters ] put
  } ifelse
}def
%
/CKSZ {abs 127 le and}def
/TackRunLengthToRows {runlength 0 ne {/rows rows neg def} if}def
%
/PLOTC {
  % <wx><dsz><psz><llx><lly><urx><ury><rows><cols><runlength><rasters>PLOTC
  /rasters exch def  /runlength exch def  /cols exch def  /rows exch def
  /ury exch def      /urx exch def        /lly exch def   /llx exch def
  /psz exch def      /dsz exch def        /wx exch def
  % "PLOT" A CHARACTER'S RASTER PATTERN
  rows 0 ne {
    gsave
      currentpoint translate  psz dsz div dup scale
      cols rows true  RasterScaleFactor 0 0 RasterScaleFactor 
      neg llx .5 add neg ury .5 add  tempmatrix astore
      GenerateRasters imagemask
    grestore
  } if
  wx x
}def
%
% set color routine: Color# SC
/SC {ColorPalette exch get 1.0 setcustomcolor}bind def
%
%
%  Procedures for implementing the "rotate <theta>" special:
%  <theta> ROTB -
%        - ROTE -

%+++ TTI changes to allow .screen escape sequence
% 1000 ROTB -> start screen
% 1001 ROTB -> end screen
% 1002 ROTB -> Digital logo

/codexindent 590 def

/ROTB {
  dup 1000 eq {
    % 1000 ROTB - start code example
    pop /ExampleState 0 def
    /S {
      dup (.screen) eq {
      % start screen example
% pjf fix 7-4-92 : first line after .screen was indented improperly
        currentpoint /ExampleY exch def /ExampleX exch def
        1 setgray show 0 setgray
        /S {
          /ExampleName exch def /ExampleState 1 def
          codexindent 0 translate codexindent 0 rmoveto
          1 setgray ExampleName show 0 setgray
          /S /show load def
          /FONT104 /F104 load def
          % replace the tilde with a space
          currentfont F102 currentfont begin
            /Encoding load        % - encoding
            % save the old encoding for the tilde
            dup 126 get exch      % - e126 encoding
            dup 32 get 126 exch put % - e126
          end
          % stick tilde encoding in a variable
          /ExampleTilde exch def
          FONT104 currentfont /F104DICT exch def setfont
          /F104 {
            /S {
              currentfont /F104DICT load eq {
                dup length 240 mul /w exch def
                gsave 0 -100 rmoveto currentpoint
                newpath moveto w 0 rlineto 0 440
                rlineto w neg 0 rlineto closepath fill grestore
                1 setgray show 0 setgray
              } {
                /S /show load def S
              } ifelse
            } def
            FONT104
          } def
        } def
      } {
      % regular code example
        show /S /show load def
      } ifelse
    } def
  } { dup 1001 eq {
    % 1001 ROTB - end code example
    pop
    ExampleState 1 eq {
      currentpoint ExampleY exch sub 600 sub /ylength exch def pop
      /xlength 19200 1.25 mul def /radius 1000 def
      gsave ExampleX ExampleY translate
      240 -400 translate .8 1 scale 50 setlinewidth
      /Helvetica findfont 250 scalefont setfont
      ExampleName (-) eq { /ExampleName () def } if
      ExampleName stringwidth pop
      xlength exch sub -250 radius sub ylength sub moveto
        gsave 1.25 1 scale ExampleName show grestore
      newpath radius neg 0 moveto
      0 ylength neg radius 180 270 arc
      xlength ylength neg radius 270 0 arc
      xlength 0 radius 0 90 arc
      0 0 radius 90 180 arc
      closepath stroke grestore
      /ExampleState 0 def
      /F104 /FONT104 load def
      /S /show load def
      % replace tilde encoding, so it doesn't show up as space anymore
      currentfont F102 currentfont begin
        /Encoding load 126 ExampleTilde put
      end setfont
      codexindent neg 0 translate codexindent neg 0 rmoveto
    } if
  } { dup 1002 eq {
    pop
    gsave (-) stringwidth pop neg 0 rmoveto 
    /Helvetica findfont 450 scalefont setfont
    [(d) (i) (g) (i) (t) (a) (l)] {
      currentpoint currentpoint newpath moveto
      0 -200 rmoveto 300 0 rlineto 0 730 rlineto -300 0 rlineto 0 -730 rlineto
      fill moveto gsave
      dup stringwidth pop 300 exch sub 2 div 0 rmoveto
      1 setgray show 0 setgray grestore
      350 0 rmoveto
    } forall
    0 375 rmoveto
    /Helvetica findfont 200 scalefont setfont (TM) show
    grestore
  } {
    % other - do rotation
    XP
    gsave
    Xpos Ypos translate
    rotate % using <theta> from the stack
    Xpos neg Ypos neg translate
    RP
  } ifelse } ifelse } ifelse
} def

/ROTE {XP grestore RP} def
/F104 { } def

%%EndProlog


%%BeginSetup
/PxlResolution 300 def
/Resolution 3600 def
/RasterScaleFactor PxlResolution Resolution div def
/PortraitMode true def
/PaperWidth 8.500 def
/PaperHeight 11.000 def
72 Resolution div dup scale

%>  Postamble of file VDED$:[VDE.VDEDOC]PLMENU$FACCOMP.DVI_PS.
% DefineFont:F202 Category:15 Pointsize:9
% DownloadPSFont
%!PS-Adobe-2.0
%%Title: Jinete Reverse Number Font, v1.1
%%Creator: Mark DeVries, DEC
%%CreationDate: 1-Aug-90
%%DocumentNeededFonts: Helvetica
%%DocumentSuppliedFonts: Jinete
%%EndComments

%%BeginFont: Jinete
18 dict begin
    /FontName /Jinete def

    /FontInfo 10 dict dup begin
	/version (1.0, 3-Mar-88) readonly def
	/FullName (Jinete Reverse Number Font) readonly def
	/Notice (Copyright 1988, Digital Equipment Corporation.) readonly def
    end
    readonly def

    /FontBBox [ 0 -75 1000 -75 add ] def

    /Encoding [
	48 { /.notdef } repeat
	/rx0 /rx1 /rx2 /rx3 /rx4 /rx5 /rx6 /rx7 /rx8 /rx9
	198 { /.notdef } repeat
    ] def

    /FontMatrix [ .001 0 0 .001 0 0 ] def
    /FontType 3 def

    % Note: The numbers for scaling and translation in BuildChar are determined
    % from selection of Helvetica as the BaseFont. Changing the base font will
    % require changing those numbers.
    %   Digit height = .732 X .9 = .659
    %   Digit width =  .556 X .9 = .500

    /BaseFont /Helvetica findfont 900 scalefont def

    /str (         ) def
    /BuildChar {
	exch begin
	    Encoding exch get			% the digit name
	    str cvs
	    (x) search {
		exch pop cvx exec		% Call either r, c, b, m, or e.
	    } {%else
		pop
	    } ifelse
	end
    } bind def

    /r {					% (digit) `r' --
	556 0 setcharwidth

	0 -170 translate
	0 0 moveto
	556 0 rlineto  0 1000 rlineto -556 0 rlineto 0 -1000 rlineto
        /DEC$EDMS_SEPARATE_COLORS where
          { pop DEC$EDMS_SEPARATE_COLORS 0 eq  { 0 } { 1 } ifelse setgray }
          { 0 setgray } ifelse fill

	BaseFont setfont
	1 setgray

	% The baseline is (1000-digitht)/2 = 170
	% The x offset is (556-digitwd)/2 = 28

	28 170 moveto
	show
    } bind def
    FontName currentdict
end
definefont pop
%%EndFont
% EndDownloadPSFont
/F202 450.0 /Jinete DPSF
% DefineFont:F151 Category:10 Pointsize:10
/NewCenturySchlbk-Roman /NewCenturySchlbk-Roman@DOCPSE DOCPSE ReENCODE
/F151 500.0 /NewCenturySchlbk-Roman@DOCPSE DPSF
% DefineFont:F102 Category:10 Pointsize:8
/Courier /Courier@DOCPSE DOCPSE ReENCODE
/F102 400.0 /Courier@DOCPSE DPSF
% DefineFont:F36 Category:10 Pointsize:10
/Helvetica-Bold /Helvetica-Bold@DOCPSE DOCPSE ReENCODE
/F36 500.0 /Helvetica-Bold@DOCPSE DPSF
% DefineFont:F35 Category:10 Pointsize:10
/Helvetica-Oblique /Helvetica-Oblique@DOCPSE DOCPSE ReENCODE
/F35 500.0 /Helvetica-Oblique@DOCPSE DPSF
% DefineFont:F34 Category:10 Pointsize:10
/Helvetica /Helvetica@DOCPSE DOCPSE ReENCODE
/F34 500.0 /Helvetica@DOCPSE DPSF
% DefineFont:F28 Category:10 Pointsize:12
/F28 600.0 /Helvetica-Bold@DOCPSE DPSF
% DefineFont:F25 Category:10 Pointsize:14
/Helvetica-BoldOblique /Helvetica-BoldOblique@DOCPSE DOCPSE ReENCODE
/F25 700.0 /Helvetica-BoldOblique@DOCPSE DPSF
% DefineFont:F24 Category:10 Pointsize:14
/F24 700.0 /Helvetica-Bold@DOCPSE DPSF
% DefineFont:F23 Category:10 Pointsize:14
/F23 700.0 /Helvetica-Oblique@DOCPSE DPSF
% DefineFont:F20 Category:10 Pointsize:18
/F20 900.0 /Helvetica-Bold@DOCPSE DPSF

%Spot color array for this job
/ColorPalette [
0.0 0.0 0.0 1.0 (BLACK) findcmykcustomcolor
0.0 0.0 0.0 1.0 (USERTAGCOLOR) findcmykcustomcolor
] def

%%EndSetup
%
%%Page: (I) 1
%%PageFonts: (atend)
%%PageProcessColors: (atend)
%%PageCustomColors: (atend)
PaperHeight PaperWidth PM 0 0 XY
0 SC 10773 10524 XY F20(F)S -49 x(ACCOMP)S 10773 13214 XY F36(April)S
167 x(1992)S 10773 14409 XY F34(The)S 182 x(facilities)S 181 x(comparison)S
181 x(utility)S 182 x(\(F)S -27 x(ACCOMP\))S 180 x(is)S 182 x(used)S
181 x(to)S 183 x(compare)S 181 x(the)S 182 x(CMS)S 10773 X 598 y(class)S
166 x(contents)S 167 x(and)S 166 x(the)S 166 x(VDE)S 166 x(stream)S
167 x(contents)S 167 x(for)S 166 x(a)S 166 x(development)S 166 x(stream/class.)S
10773 X 897 y(Software)S 167 x(V)S -27 x(ersion:)S 249 x(F)S -27 x(ACCOMP)S
165 x(V)S -27 x(ersion)S 165 x(X1.0)S
EP PP
%%PageTrailer
%%PageFonts: Helvetica-Bold Helvetica
%%PageProcessColors:
%%PageCustomColors: (BLACK)
%
%%Page: (II) 2
%DEC_EDMS_BlankPage
PP
%%PageTrailer
%%PageFonts:
%%PageProcessColors:
%%PageCustomColors:
%
%%Page: (1) 3
%%PageFonts: (atend)
%%PageProcessColors: (atend)
%%PageCustomColors: (atend)
PaperHeight PaperWidth PM 0 0 XY
0 SC 24771 1807 XY F24(F)S -39 x(ACCO)S -2 x(MP)S 5094 4546 XY 23160 48 R
5094 5543 XY F20(F)S -49 x(ACCOMP\202)S(Facility)S 358 x(Compare)S 10773 7037 XY
F34(Activates)S 190 x(the)S 190 x(F)S -27 x(ACCOMP)S 189 x(utility)S
-37 x(.)S 296 x(The)S 190 x(F)S -27 x(ACCOMP)S 189 x(utility)S 189 x
(is)S 189 x(run)S 189 x(from)S 190 x(DCL.)S 10773 X 598 y(F)S -27 x
(ACCOMP)S 165 x(comparse)S 166 x(the)S 167 x(VDE)S 166 x(view)S 165 x
(of)S 167 x(the)S 166 x(librari)S -2 x(es)S 167 x(with)S 165 x(the)S
167 x(CMS)S 166 x(view)S -29 x(.)S 5094 8830 XY 23160 204 R 5094 9848 XY
F24(FORMA)S -53 x(T)S 10773 X(F)S -38 x(ACC)S -2 x(OMP)S 697 x F23(library-spec)S
165 x(stream)S 10773 X 797 y 17484 48 R 10773 11243 XY F36(Command)S
166 x(Quali\211)S 2 x(ers)S 18544 X(Defaults)S 10773 X 697 y F35(/[NO]LOG)S
18544 X(/LOG)S 10773 X 598 y(/OUTPUT=\211le-spec)S 18544 X(None.)S 10773 X
598 y(/PROCESS)S 18544 X(/PROCESS=\212agfree)S 10773 X 797 y 17484 96 R
5094 14860 XY F28(prompts)S 10773 X -43 y F151(LIB_SPEC:)S 16153 X(library-spec)S
10773 X 598 y(STREAM:)S 16153 X(stream)S 5094 16610 XY 23160 204 R 5094 17429 XY
F24(DESCRIPTION)S 10773 X -156 y F151(The)S 169 x(F)S -36 x(ACCO)S -2 x
(MP)S 169 x(command)S 169 x(activates)S 169 x(the)S 169 x(utility)S
168 x(from)S 169 x(DCL)S 168 x(and)S 169 x(then)S 169 x(acts)S 169 x
(on)S 10773 X 598 y(the)S 164 x(set)S 163 x(of)S 163 x(speci\211ed)S
164 x(libraries.)S 249 x(The)S 165 x(utility)S 163 x(uses)S 164 x(the)S
163 x(logical)S 164 x(VDE$LIBRA)S -2 x(R)S -19 x(Y)S 164 x(to)S 10773 X
598 y(locate)S 166 x(the)S 166 x(VDE)S 165 x(database)S 165 x(to)S 166 x
(process.)S 10773 X 896 y(The)S 168 x(F)S -37 x(ACCOMP)S 166 x(utility)S
167 x(produces)S 168 x(a)S 167 x(report)S 167 x(of)S 167 x(generation)S
168 x(differences)S 167 x(between)S 10773 X 598 y(the)S 184 x(CMS)S
184 x(representation)S 184 x(of)S 184 x(a)S 184 x(stream)S 184 x(and)S
184 x(the)S 184 x(VDE)S 183 x(representation)S 184 x(of)S 184 x(a)S
10773 X 598 y(stream.)S 276 x(The)S 181 x(report)S 180 x(can)S 180 x
(be)S 179 x(printed)S 180 x(to)S 180 x(the)S 180 x(log)S 180 x(\211le)S
180 x(or)S 180 x(can)S 180 x(be)S 180 x(printed)S 179 x(to)S 180 x(a)S
10773 X 598 y(user)S 166 x(speci\211ed)S 166 x(text)S 167 x(\211le.)S
10773 X 896 y(The)S 173 x(utility)S 173 x(veri\211es)S 173 x(that)S
173 x(the)S 173 x(stream)S 172 x(to)S 172 x(compare)S 173 x(exists)S
172 x(in)S 173 x(the)S 173 x(VDE)S 171 x(library)S -54 x(.)S 10773 X
598 y(If)S 171 x(the)S 171 x(stream)S 171 x(is)S 170 x(not)S 172 x(present)S
171 x(in)S 171 x(the)S 172 x(VDE)S 170 x(library)S 171 x(the)S 172 x
(utility)S 171 x(will)S 170 x(terminate.)S 10773 X 598 y(If)S 181 x
(the)S 181 x(stream)S 181 x(is)S 181 x(present)S 181 x(in)S 182 x(the)S
181 x(VDE)S 180 x(library)S -54 x(,)S 185 x(each)S 182 x(facility)S
181 x(matching)S 183 x(the)S 10773 X 598 y(library)S 167 x(speci\211cation)S
166 x(parameter)S 166 x(is)S 166 x(processed.)S 10773 X 896 y(If)S 186 x
(the)S 186 x(CMS)S 185 x(class)S 185 x(corresponding)S 187 x(to)S 186 x
(the)S 186 x(stream)S 185 x(name)S 186 x(is)S 186 x(not)S 186 x(found)S
186 x(in)S 186 x(a)S 10773 X 598 y(facility)S 170 x(CMS)S 169 x(library)S
-55 x(,)S 171 x(a)S 170 x(warning)S 170 x(message)S 169 x(is)S 169 x
(displayed.)S 257 x(A)S 169 x(warning)S 170 x(message)S 10773 X 598 y
(is)S 176 x(displayed)S 176 x(if)S 175 x(the)S 177 x(facility)S 176 x
(is)S 175 x(not)S 177 x(found)S 176 x(in)S 176 x(the)S 177 x(VDE)S 175 x
(database.)S 268 x(Processing)S 10773 X 598 y(continues)S 167 x(in)S
166 x(both)S 166 x(of)S 166 x(these)S 166 x(cases.)S 10773 X 896 y(The)S
173 x(utility)S 172 x(will)S 171 x(return)S 172 x(the)S 172 x(highe)S
2 x(st)S 171 x(severity)S 172 x(error)S 173 x(encountered)S 173 x(as)S
171 x(the)S 172 x(\211nal)S 10773 X 598 y(completion)S 171 x(status.)S
259 x(For)S 171 x(example,)S 173 x(the)S 171 x(library)S 172 x(speci\211cation)S
171 x(VMS$:[A*.CMS])S 10773 X 598 y(may)S 177 x(result)S 176 x(in)S
177 x(ten)S 176 x(CMS)S 177 x(libraries)S 176 x(to)S 176 x(compare.)S
271 x(All)S 175 x(ten)S 177 x(of)S 176 x(the)S 177 x(CMS)S 176 x(library)S
10773 X 597 y(and)S 168 x(VDE)S 167 x(stream)S 167 x(contents)S 168 x
(must)S 167 x(match)S 168 x(for)S 168 x(a)S 167 x(success)S 168 x(status.)S
252 x(If)S 167 x(one)S 168 x(or)S 168 x(more)S 10773 X 598 y(of)S 155 x
(the)S 155 x(facilities)S 154 x(in)S 155 x(the)S 155 x(set)S 154 x(exhibit)S
155 x(a)S 155 x(difference,)S 158 x(then)S 155 x(a)S 155 x(warning)S
156 x(return)S 155 x(status)S 10773 X 598 y(results.)S 5094 31620 XY
23160 204 R 5094 32438 XY F24(P)S -51 x(ARA)S -2 x(METERS)S 849 x -21 y
F25(library-spec)S 10773 X 547 y F151(Speci\211es)S 194 x(the)S 193 x
(CMS)S 193 x(library)S 194 x(that)S 194 x(is)S 193 x(to)S 193 x(be)S
194 x(acted)S 193 x(on.)S 305 x(This)S 194 x(speci\211cation)S 10773 X
548 y(can)S 191 x(contain)S 192 x(wildcards,)S 196 x(but)S 191 x(it)S
190 x(must)S 190 x(be)S 191 x(a)S 191 x(valid)S 191 x(CMS)S 190 x(library)S
191 x(directory)S 10773 X 548 y(speci\211cation)S 199 x(\(i.e.)S 314 x
(VMS$:[YELLOW_TEST)S -47 x(.CMS]\).)S 199 x(An)S 198 x(example)S 198 x
(of)S 198 x(a)S 10773 X 548 y(wildcarded)S 183 x(speci\211cation)S 185 x
(would)S 183 x(be:)S 285 x(VMS$:[Y*.CMS].)S 185 x(This)S 184 x(speci\211cation)S
10773 X 548 y(would)S 166 x(process)S 166 x(all)S 165 x(libraries)S
166 x(that)S 166 x(start)S 165 x(with)S 166 x(the)S 166 x(letter)S 166 x
("Y".)S 27981 36925 XY F36(1)S
EP PP
%%PageTrailer
%%PageFonts: Helvetica-Bold Helvetica
%%+ Helvetica-Oblique NewCenturySchlbk-Roman
%%+ Helvetica-BoldOblique
%%PageProcessColors:
%%PageCustomColors: (BLACK)
%
%%Page: (2) 4
%%PageFonts: (atend)
%%PageProcessColors: (atend)
%%PageCustomColors: (atend)
PaperHeight PaperWidth PM 0 0 XY
0 SC 5094 1807 XY F24(F)S -38 x(ACCO)S -2 x(MP)S 10773 4977 XY F25(stream)S
10773 X 598 y F151(Speci\211es)S 166 x(the)S 166 x(CMS)S 166 x(class/VDE)S
165 x(stream)S 165 x(name)S 166 x(to)S 166 x(be)S 166 x(compared.)S
5094 6771 XY 23160 204 R 5094 7589 XY F24(COMMAN)S -2 x(D)S 5094 X 797 y
(QUALIFIERS)S 10773 X -797 y F25(/[NO]LOG)S 10773 X 548 y F151(Speci\211es)S
177 x(that)S 178 x(the)S 177 x(F)S -36 x(ACCO)S -2 x(MP)S 178 x(utility)S
178 x(should)S 177 x(display)S 178 x(a)S 177 x(message)S 177 x(for)S
177 x(every)S 10773 X 548 y(CMS)S 166 x(LIBRAR)S -20 x(Y)S 166 x(that)S
166 x(is)S 165 x(processed.)S 10773 9781 XY F25(/OUTPUT=\211le-spec)S
-2 x(i\211cation)S 10773 X 598 y F151(Speci\211es)S 166 x(the)S 166 x
(name)S 167 x(of)S 166 x(a)S 166 x(\211le)S 166 x(that)S 166 x(is)S
165 x(to)S 166 x(contain)S 167 x(all)S 166 x(the)S 166 x(output.)S 10773 X
897 y(Note:)S 256 x(error)S 170 x(messages)S 169 x(and)S 169 x(informational)S
169 x(messages)S 169 x(will)S 169 x(not)S 169 x(be)S 169 x(put)S 170 x
(into)S 169 x(the)S 10773 X 548 y(output)S 166 x(\211le.)S 10773 12919 XY
F25(/PROCESS=\(attribute[,attribute,...]\))S 10773 X 598 y F151(The)S
193 x(PROCESS)S 192 x(quali\211er)S 193 x(is)S 192 x(used)S 193 x(to)S
192 x(identify)S 193 x(what)S 193 x(libraries)S 192 x(are)S 193 x(to)S
193 x(be)S 10773 X 548 y(processed.)S 272 x(Some)S 178 x(libraries)S
177 x(have)S 178 x(special)S 178 x(attributes)S 176 x(associated)S 177 x
(with)S 177 x(them,)S 10773 X 548 y(VMSCMS$NO_PROP)S -38 x(AGA)S -29 x
(TE.FLAG)S 178 x(is)S 178 x(an)S 178 x(example)S 179 x(of)S 177 x(an)S
179 x(attribute.)S 273 x(This)S 10773 X 548 y(attribute)S 177 x(indicates)S
177 x(that)S 177 x(this)S 177 x(library)S 177 x(is)S 177 x(not)S 177 x
(to)S 177 x(have)S 178 x(any)S 178 x(code)S 177 x(propagation)S 10773 X
548 y(performed)S 179 x(within)S 178 x(it.)S 273 x(The)S 179 x(process)S
178 x(quali\211er)S 179 x(is)S 178 x(used)S 179 x(to)S 178 x(selectively)S
178 x(process)S 10773 X 548 y(or)S 181 x(skip)S 180 x(libraries)S 181 x
(marked)S 181 x(with)S 180 x(certain)S 181 x(attributes.)S 278 x(The)S
181 x(list)S 180 x(of)S 181 x(acceptable)S 10773 X 548 y(attributes)S
166 x(is:)S 10773 X 896 y(\201)S 595 x([NO]ALL)S 165 x(-)S 166 x(process)S
166 x(all)S 166 x(libraries)S 165 x(no)S 167 x(matter)S 165 x(what)S
166 x(attribute)S 166 x(it)S 166 x(may)S 166 x(have)S 10773 X 897 y
(\201)S 595 x([NO]AR)S -2 x(CHIVEDF)S -38 x(ACILITY)S 165 x(-)S 166 x
(process)S 165 x(all)S 166 x(archived)S 167 x(libraries)S 10773 X 897 y
(\201)S 595 x([NO]FLAGFRE)S -2 x(E)S 166 x(-)S 166 x(process)S 166 x
(libraries)S 165 x(with)S 166 x(not)S 166 x(attributes)S 10773 X 896 y
(\201)S 595 x([NO]NOPR)S -2 x(OP)S -37 x(AGA)S -28 x(TE)S 166 x(-)S
166 x(process)S 165 x(libraries)S 166 x(marked)S 166 x(no)S 167 x(propagate)S
5094 21587 XY 23160 204 R 5094 22406 XY F24(EXAMPLES)S 5094 23437 XY
F202(1)S 6290 X 250 y F102($>)S 1 SC 239 x(@VMSCMS$:SET_)S 2 x(VDE_LIBRARY)S
240 x(VMS)S 0 SC 6290 X 448 y($>)S 1 SC 239 x(SET)S 240 x(COMMAND)S
239 x(VMSCMS$:FA)S 2 x(CCOMP)S 0 SC 6290 X 449 y($>)S 1 SC 239 x(faccomp/log/p)S
2 x(rocess=ALL)S 240 x(vms$:[A*.cms])S 240 x(V5.5)S 0 SC 6290 X 448 y
(%FAC-I-USEVDELIB)S 2 x(,)S 239 x(Using)S 239 x(VDE)S 240 x(library)S
240 x(VSC$DBROOT)S 6290 X 448 y(%FAC-I-PROC,)S 240 x(Processing)S 240 x
(library)S 240 x(VMS$:[AAA_VDE)S 2 x(_TEST.CMS])S 6290 X 449 y(Date:)S
718 x(9-APR-1992)S 240 x(08:58)S 6290 X 747 y(VDE)S 239 x(to)S 240 x
(CMS)S 239 x(generation)S 240 x(comparison)S 240 x(for)S 240 x(stream)S
239 x(V5.5)S 7725 X 448 y(Library:)S 239 x(VMS$:[AAA_)S 2 x(VDE_TEST.CMS])S
6290 X 747 y(Module)S 240 x(Name)S 10594 X(CMS)S 14659 X(VDE)S 6290 X
449 y(----------------)S 2 x(-------------------)S 2 x(---)S 6290 X
448 y(A.REQ)S 14898 X(1)S 5094 36925 XY F36(2)S
EP PP
%%PageTrailer
%%PageFonts: Helvetica-Bold Helvetica-BoldOblique
%%+ NewCenturySchlbk-Roman Jinete Courier
%%PageProcessColors:
%%PageCustomColors: (BLACK)
%%+ (USERTAGCOLOR)
%
%%Page: (3) 5
%%PageFonts: (atend)
%%PageProcessColors: (atend)
%%PageCustomColors: (atend)
PaperHeight PaperWidth PM 0 0 XY
0 SC 24771 1807 XY F24(F)S -39 x(ACCO)S -2 x(MP)S 6290 4766 XY F102
(%FAC-W-DIFFER,)S 240 x(VDE)S 240 x(and)S 239 x(CMS)S 240 x(differ)S
239 x(for)S 240 x(stream)S 240 x(V5.5)S 239 x(in)S 239 x(VMS$:[AAA_V)S
2 x(DE_TEST.CMS])S 6290 X 448 y(%FAC-I-PROC,)S 240 x(Processing)S 240 x
(library)S 240 x(VMS$:[ACC.CMS)S 2 x(])S 6290 X 448 y(%FAC-S-EQUAL,)S
240 x(VDE)S 240 x(and)S 239 x(CMS)S 240 x(are)S 239 x(equal)S 240 x
(for)S 239 x(stream)S 240 x(V5.5)S 239 x(in)S 240 x(VMS$:[ACC.CMS])S
6290 X 449 y(%FAC-I-PROC,)S 240 x(Processing)S 240 x(library)S 240 x
(VMS$:[ACLEDT.)S 2 x(CMS])S 6290 X 448 y(%FAC-S-EQUAL,)S 240 x(VDE)S
240 x(and)S 239 x(CMS)S 240 x(are)S 239 x(equal)S 240 x(for)S 239 x
(stream)S 240 x(V5.5)S 239 x(in)S 240 x(VMS$:[ACLEDT.CMS])S 6290 X 448 y
(%FAC-I-PROC,)S 240 x(Processing)S 240 x(library)S 240 x(VMS$:[ADARTL.)S
2 x(CMS])S 6290 X 449 y(%FAC-S-EQUAL,)S 240 x(VDE)S 240 x(and)S 239 x
(CMS)S 240 x(are)S 239 x(equal)S 240 x(for)S 239 x(stream)S 240 x(V5.5)S
239 x(in)S 240 x(VMS$:[ADARTL.CMS])S 6290 X 448 y(%FAC-I-PROC,)S 240 x
(Processing)S 240 x(library)S 240 x(VMS$:[AMBER.C)S 2 x(MS])S 6290 X
448 y(%FAC-S-EQUAL,)S 240 x(VDE)S 240 x(and)S 239 x(CMS)S 240 x(are)S
239 x(equal)S 240 x(for)S 239 x(stream)S 240 x(V5.5)S 239 x(in)S 240 x
(VMS$:[AMBER.CMS])S 6290 X 448 y(%FAC-I-PROC,)S 240 x(Processing)S 240 x
(library)S 240 x(VMS$:[ANALYZ.)S 2 x(CMS])S 6290 X 449 y(%FAC-S-EQUAL,)S
240 x(VDE)S 240 x(and)S 239 x(CMS)S 240 x(are)S 239 x(equal)S 240 x
(for)S 239 x(stream)S 240 x(V5.5)S 239 x(in)S 240 x(VMS$:[ANALYZ.CMS])S
6290 X 448 y(%FAC-I-PROC,)S 240 x(Processing)S 240 x(library)S 240 x
(VMS$:[AQUARIU)S 2 x(S.CMS])S 6290 X 448 y(%FAC-S-EQUAL,)S 240 x(VDE)S
240 x(and)S 239 x(CMS)S 240 x(are)S 239 x(equal)S 240 x(for)S 239 x
(stream)S 240 x(V5.5)S 239 x(in)S 240 x(VMS$:[AQUARIUS.CMS])S 6290 X
449 y(%FAC-I-PROC,)S 240 x(Processing)S 240 x(library)S 240 x(VMS$:[AUDSRV.)S
2 x(CMS])S 6290 X 448 y(%FAC-S-EQUAL,)S 240 x(VDE)S 240 x(and)S 239 x
(CMS)S 240 x(are)S 239 x(equal)S 240 x(for)S 239 x(stream)S 240 x(V5.5)S
239 x(in)S 240 x(VMS$:[AUDSRV.CMS])S 6290 X 448 y($show)S 240 x(symbol)S
239 x($status)S 6768 X 449 y($STATUS)S 240 x(==)S 239 x("%X18178060")S
6290 X 448 y($>)S 10773 14280 XY F151(The)S 173 x(user)S 172 x(\211rst)S
171 x(sets)S 171 x(the)S 172 x(value)S 173 x(of)S 171 x(the)S 172 x
(logical)S 173 x(VDE)S -2 x($LIBRAR)S -20 x(Y)S 172 x(to)S 172 x(point)S
171 x(to)S 172 x(the)S 10773 X 598 y(VMS)S 176 x(product)S 177 x(database)S
176 x(by)S 177 x(executing)S 178 x(the)S 177 x(SET_VDE_LIB)S -2 x(RAR)S
-19 x(Y)S 176 x(command)S 10773 X 597 y(procedure.)S 265 x(The)S 174 x
(user)S 173 x(then)S 174 x(adds)S 172 x(the)S 173 x(F)S -36 x(ACCO)S
-2 x(MP)S 174 x(command)S 173 x(to)S 173 x(their)S 174 x(process)S 10773 X
598 y(command)S 179 x(table.)S 275 x(In)S 179 x(this)S 178 x(example,)S
183 x(the)S 179 x(CMS)S 179 x(class)S 178 x(contents)S 179 x(and)S 179 x
(the)S 179 x(VDE)S 10773 X 598 y(stream)S 166 x(contents)S 167 x(for)S
167 x(stream)S 166 x(V5.5)S 167 x(are)S 167 x(compared)S 167 x(for)S
167 x(facilities)S 166 x(beginning)S 168 x(with)S 10773 X 598 y(the)S
175 x(letter)S 175 x("a".)S 266 x(The)S 176 x(output)S 175 x(quali\211er)S
175 x(is)S 175 x(not)S 175 x(used)S 174 x(so)S 175 x(any)S 175 x(differences)S
175 x(will)S 174 x(be)S 10773 X 598 y(written)S 176 x(to)S 176 x(SYS$OUTPUT)S
-46 x(.)S 177 x(The)S 177 x(process)S 176 x(quali\211er)S 178 x(keyword)S
177 x(ALL)S 176 x(is)S 176 x(used)S 177 x(to)S 10773 X 597 y(process)S
166 x(archived)S 167 x(and)S 166 x(nopropagate)S 167 x(facilities.)S
10773 X 897 y(There)S 174 x(is)S 172 x(a)S 172 x(stream)S 172 x(difference)S
173 x(encounted)S 174 x(in)S 172 x(this)S 173 x(example.)S 262 x(In)S
173 x(facility)S 172 x(AAA_)S 10773 X 598 y(VDE_TEST)S 173 x(there)S
174 x(is)S 174 x(a)S 174 x(module,)S 176 x(A.REQ)S 173 x(which)S 175 x
(exists)S 173 x(in)S 174 x(the)S 174 x(VDE)S 173 x(database)S 10773 X
597 y(but)S 186 x(is)S 185 x(not)S 185 x(present)S 186 x(in)S 185 x
(the)S 186 x(CMS)S 185 x(library)S -54 x(.)S 288 x(The)S 186 x(return)S
186 x(status,)S 190 x(X18178060)S 10773 X 598 y(equates)S 163 x(to)S
163 x(F)S -37 x(AC-W)S -19 x(-DIFFER,)S 162 x(which)S 164 x(was)S 162 x
(the)S 163 x(warning)S 164 x(condition)S 164 x(encountered.)S 5094 22177 XY
F202(2)S 6290 X -56 y F102($>)S 1 SC 239 x(faccomp/nolog)S 241 x(vms$:[sys.cms])S
240 x(V5.5)S 0 SC 6290 X 448 y(%FAC-I-USEVDELIB)S 2 x(,)S 239 x(Using)S
239 x(VDE)S 240 x(library)S 240 x(VSC$DBROOT)S 6290 X 448 y(Date:)S
718 x(9-APR-1992)S 240 x(09:27)S 6290 X 747 y(VDE)S 239 x(to)S 240 x
(CMS)S 239 x(generation)S 240 x(comparison)S 240 x(for)S 240 x(stream)S
239 x(V5.5)S 9398 X 449 y(Library:)S 240 x(VMS$:[SYS.CMS)S 2 x(])S 6290 X
448 y(Module)S 240 x(Name)S 10594 X(CMS)S 14419 X(VDE)S 6290 X 448 y
(----------------)S 2 x(-------------------)S 2 x(---)S 6290 X 449 y
(BASE_LEVEL.MAR)S 10594 X(55)S 14419 X(15)S 6290 X 448 y(%FAC-W-DIFFER,)S
240 x(VDE)S 240 x(and)S 239 x(CMS)S 240 x(differ)S 239 x(for)S 240 x
(stream)S 240 x(V5.5)S 239 x(in)S 239 x(VMS$:[SYS.C)S 2 x(MS])S 6290 X
448 y($>)S 10773 27451 XY F151(In)S 158 x(this)S 157 x(example,)S 161 x
(the)S 158 x(NOLOG)S 156 x(quali\211er)S 159 x(is)S 157 x(used)S 158 x
(which)S 158 x(suppresses)S 157 x(the)S 158 x(%F)S -37 x(AC-)S 10773 X
597 y(I-PROC)S 171 x(message.)S 262 x(The)S 173 x(generation)S 174 x
(of)S 172 x(module)S 173 x(BASE)S -2 x(_LEVEL.MAR)S 172 x(in)S 173 x
(VDE)S 10773 X 598 y(and)S 170 x(CMS)S 169 x(differs.)S 255 x(The)S
170 x(%F)S -37 x(AC-W)S -19 x(-DIFFER)S 168 x(message)S 169 x(indicates)S
169 x(that)S 169 x(VDE)S 168 x(and)S 10773 X 598 y(CMS)S 166 x(differ)S
166 x(for)S 166 x(stream)S 165 x(V5.5)S 166 x(in)S 167 x(the)S 166 x
(SYS)S 165 x(facility)S -55 x(.)S 5094 30267 XY F202(3)S 6290 X -57 y
F102($>)S 1 SC 239 x(faccomp/log)S 240 x(vms$:[vms0)S 2 x(54*.cms])S
239 x(V5.5)S 0 SC 6290 X 449 y(%FAC-I-USEVDELIB)S 2 x(,)S 239 x(Using)S
239 x(VDE)S 240 x(library)S 240 x(VSC$DBROOT)S 6290 X 448 y(%FAC-I-SKPNOPROP)S
2 x(,)S 239 x(Library)S 240 x(VMS$:[VMS054-2R.CMS)S 2 x(])S 239 x(marked)S
240 x(NOPROPAGATE,)S 240 x(skipping)S 240 x(it)S 6290 X 448 y(%FAC-I-SKPARCH,)S
241 x(Library)S 239 x(VMS$:[VMS05)S 2 x(4-3.CMS])S 239 x(marked)S 240 x
(ARCHIVED,)S 240 x(skipping)S 240 x(it)S 6290 X 448 y(%FAC-I-SKPNOPROP)S
2 x(,)S 239 x(Library)S 240 x(VMS$:[VMS054-2R.CMS)S 2 x(])S 239 x(marked)S
240 x(NOPROPAGATE,)S 240 x(skipping)S 240 x(it)S 6290 X 449 y($>)S 10773 33448 XY
F151(This)S 182 x(example)S 181 x(shows)S 181 x(the)S 181 x(messages)S
181 x(displayed)S 181 x(when)S 182 x(a)S 181 x(facility)S 181 x(is)S
181 x(marked)S 10773 X 598 y(archived)S 175 x(or)S 174 x(marked)S 174 x
(nopropagate)S 174 x(and)S 174 x(the)S 174 x(/process)S 173 x(quali\211er)S
175 x(is)S 173 x(not)S 174 x(used)S 173 x(to)S 10773 X 598 y(include)S
167 x(these)S 166 x(facilities.)S 27981 36925 XY F36(3)S
EP PP
%%PageTrailer
%%PageFonts: Helvetica-Bold Courier
%%+ NewCenturySchlbk-Roman Jinete
%%PageProcessColors:
%%PageCustomColors: (BLACK)
%%+ (USERTAGCOLOR)
%
%%Page: (4) 6
%DEC_EDMS_BlankPage
PP
%%PageTrailer
%%PageFonts:
%%PageProcessColors:
%%PageCustomColors:
%
%%Trailer
%%Pages: 6
%%BoundingBox: 0 0 612 792
%%DocumentFonts: Jinete NewCenturySchlbk-Roman
%%+ Courier Helvetica-Bold Helvetica-Oblique
%%+ Helvetica Helvetica-BoldOblique
%%DocumentNeededFonts: NewCenturySchlbk-Roman
%%+ Courier Helvetica-Bold Helvetica-Oblique
%%+ Helvetica Helvetica-BoldOblique
%%DocumentProcessColors:
%%DocumentCustomColors: (BLACK)
%%+ (USERTAGCOLOR)
%%CMYKCustomColor: 0.0 0.0 0.0 1.0 (BLACK)
%%+ 0.0 0.0 0.0 1.0 (USERTAGCOLOR)
%
DVC$PSJob restore
end %DEC_DVC$dict
end %Color5044Dict
%
%%EOF
