.; $Id: db.rno,v 1.3 1995/10/27 13:25:39 tom Exp $
.; This is the help-file for FLIST.  The following variants are possible:
.;
.;	PAGED - format for document
.;	FILE - run with normal RUNOFF options
.;	LIB - run with RUNOFF/NOUNDERLINE/VARIANT=LIB
.;
.if paged
.req "d0.req"
.else paged
.npa.nhd.dix.fl bold
.endif paged
.rm 77
.if lib
.lm0;1 FLIST - Directory Editor
.else lib
.if file
.lm0;^&FLIST_ -_ Directory_ Editor\&
.else file
.lm0;^*FLIST - Directory Editor\*
.endif file
.endif lib
.lm 2.b
FLIST (directory management system/file-list)
permits the user to sort directories, examine files, delete
rename or alter the protection code on files,
all via a dynamic display.
.b
Format:
.b
	FLIST [_*._*;_*]
.rm -2.ts 17,31,45
.; 19,35,51

.x /AFTER qualifier
.if lib
.lm0;2 /AFTER#############
.br.lm1
.else lib
.b2.lm0;^*Options:\*
.lm2
.lm +15
.b.i-15;/AFTER	
.nsp
.endif lib
/AFTER=time
.sk1
Same as /SINCE.
.sk1
Selects only those files that are dated after the specified time.
.sk1
You must specify an absolute time.
See  Section 2.5 in the VAX/VMS  DCL Dictionary
(or  access  the  HELP topic SPECIFY) for  complete  information  on
specifying  time  values.
You  can  also  use the  keywords  TODAY, TOMORROW, and YESTERDAY.
.;
.x /ALL qualifier
.if lib
.lm0;2 /ALL#(D)###########
.br.lm1
.else lib
.b.i-15;/ALL (D)	
.nsp
.endif lib
Read directory entries for all filenames, even if insufficient privilege.
.;
.x /BACKUP qualifier
.if lib
.lm0;2 /BACKUP############
.br.lm1
.else lib
.b.i-15;/BACKUP	
.nsp
.endif lib
Selects files according to the dates of  their  most  recent  backup.
This qualifier is relevant only when used with the /BEFORE or /SINCE
qualifier.  Use  of  the  /BACKUP  qualifier  is  incompatible  with
/CREATED, /EXPIRED, and /MODIFIED.  /CREATED is the default.
.sk1
/BACKUP implicitly sets /DBACKUP.
.;
.x /BEFORE qualifier
.if lib
.lm0;2 /BEFORE############
.br.lm1
.else lib
.b.i-15;/BEFORE	
.nsp
.endif lib
/BEFORE=time
.sk1
Selects only those files that are dated before the specified time.
.sk1
You must specify an absolute time.
See  Section 2.5 in the VAX/VMS  DCL Dictionary
(or  access  the  HELP topic SPECIFY) for  complete  information  on
specifying  time  values.
You  can  also  use the  keywords  TODAY, TOMORROW, and YESTERDAY.
.;
.x /COMMAND qualifier
.if lib
.lm0;2 /COMMAND###########
.br.lm1
.else lib
.b.i-15;/COMMAND	
.nsp
.endif lib
Read commands from the specified file
(default FLIST.CMD in your login directory).
On end-of-file, resume interactively.
.;
.x /CREATED qualifier
.if lib
.lm0;2 /CREATED###########
.br.lm1
.else lib
.b.i-15;/CREATED	
.nsp
.endif lib
Selects files based on their date of  creation.   This  qualifier  is
relevant  only  when used with the /BEFORE or /SINCE qualifier.  Use
of the /CREATED qualifier is incompatible  with  /BACKUP,  /EXPIRED,
and /MODIFIED.  /CREATED is the default.
.;
.x /DBACKUP qualifier
.if lib
.lm0;2 /DBACKUP###########
.br.lm1
.else lib
.b.i-15;/DBACKUP	
.nsp
.endif lib
Show backup dates instead of creation dates
.;
.x /DREVISED qualifier
.if lib
.lm0;2 /DREVISED##########
.br.lm1
.else lib
.b.i-15;/DREVISED	
.nsp
.endif lib
Show file revision dates instead of creation dates
.;
.x /FAST qualifier
.if lib
.lm0;2 /FAST##############
.br.lm1
.else lib
.b.i-15;/FAST	
.nsp
.endif lib
Suppress all fields other than the filename (_*3 faster)
.;
.x /LOG qualifier
.if lib
.lm0;2 /LOG###############
.br.lm1
.else lib
.b.i-15;/LOG	
.nsp
.endif lib
Record commands, informational- and error- messages in a log-file
(default FLIST.LOG in your login directory).
.;
.x /MODIFIED qualifier
.if lib
.lm0;2 /MODIFIED##########
.br.lm1
.else lib
.b.i-15;/MODIFIED	
.nsp
.endif lib
Selects files  according  to  the  dates  on  which  they  were  last
modified.
This  qualifier  is  relevant  only  when  used with the
/BEFORE or /SINCE qualifier.  Use  of  the  /MODIFIED  qualifier  is
incompatible  with /BACKUP, /CREATED, and /EXPIRED.  /CREATED is the
default.
.sk1
/MODIFIED implicitly sets /DREVISED
.;
.x /NOALL qualifier
.if lib
.lm0;2 /NOALL#############
.br.lm1
.else lib
.b.i-15;/NOALL	
.nsp
.endif lib
Suppress filename if no privilege for other data
.;
.x /NODATE qualifier
.if lib
.lm0;2 /NODATE############
.br.lm1
.else lib
.b.i-15;/NODATE	
.nsp
.endif lib
Suppress creation-date+time
.;
.if lib
.lm0;2 /NOFAST#(D)########
.br.lm1
.else lib
.b.i-15;/NOFAST	
.nsp
.endif lib
Open each file to obtain auxiliary information (e.g., date, size).
.;
.x /NOOWNER qualifier
.if lib
.lm0;2 /NOOWNER###########
.br.lm1
.else lib
.b.i-15;/NOOWNER	
.nsp
.endif lib
Suppress display of owner code
.;
.x /NOPROTECTION qualifier
.if lib
.lm0;2 /NOPROTECTION######
.br.lm1
.else lib
.b.i-15;/NOPROTECTION	
.nsp
.endif lib
Suppress display of protection mask
.;
.x /NOSIZE qualifier
.if lib
.lm0;2 /NOSIZE############
.br.lm1
.else lib
.b.i-15;/NOSIZE	
.nsp
.endif lib
Suppress allocation (size) data
.;
.x /NOVERSIONS qualifier
.if lib
.lm0;2 /NOVERSIONS########
.br.lm1
.else lib
.b.i-15;/NOVERSIONS	
.nsp
.endif lib
Show only highest version of each file
.;
.x /SINCE qualifier
.if lib
.lm0;2 /SINCE#############
.br.lm1
.else lib
.b.i-15;/SINCE	
.nsp
.endif lib
/SINCE=time
.sk1
Selects only those files that are dated after the specified time.
.sk1
You must specify an absolute time.
See  Section 2.5 in the VAX/VMS  DCL Dictionary
(or  access  the  HELP topic SPECIFY) for  complete  information  on
specifying  time  values.
You  can  also  use the  keywords  TODAY, TOMORROW, and YESTERDAY.

.if lib
.lm0;2 Commands###########
.else lib
.b2
.lm0;^*Commands:\*
.endif lib
.lm2.b
FLIST's commands are listed below
(capital letters indicate the allowable abbreviation).
.lm2.b
Main	Alternate	Description
.lm2.br.rpt 73 "-"
.lm +29
.x HELP, show command summary
.x ?HELP, show command summary
.i-29;Help	?help	Show this helpfile.
.x QUIT
.x Key assignments>CTRL/Z, quit
.x CTRL/Z, quit
.i-29;Quit	CTRL/Z	Quit the current directory level.
A numeric argument causes FLIST to quit that many times
.x SHELL
.x Spawned subprocesses>SHELL
.i-29;SHell		Spawn DECShell process, return to FLIST on LOGOFF
.x SPAWN
.x Spawned subprocesses>SPAWN
.i-29;SPawn		Spawn new process, return to FLIST on LOGOFF
.lm2.br.rpt 73 "-"
.c;(The following use arguments; most imply the current entry)
.lm2.br.rpt 73 "-"
.lm +29
.x File management>APPEND
.x APPEND
.x Spawned subprocesses>APPEND
.i-29;APpend		Append the current file to the argument
.x File management>COPY
.x COPY
.x Spawned subprocesses>COPY
.i-29;COpy		Copy the current file to the argument
.x File management>CREATE
.x CREATE
.x Spawned subprocesses>CREATE
.i-29;CReate		Create the specified file or directory
.x File management>DELETE
.x DELETE
.i-29;DELete		Delete the current file
.x File management>EDIT
.x EDIT
.x Spawned subprocesses>EDIT
.i-29;Edit		Edit (if file), else enter new directory level.
.x Searching>FIND
.x FIND
.i-29;Find		Search for the filename specified as argument
.x Display commands>INSPECT
.x INSPECT
.i-29;Inspect		Inspect files, showing source-format.
.x Browsing>BROWSE
.x BROWSE
.i-29;Browse		Run BROWSE to display the current file.
.x Searching>NEXT
.x NEXT
.x Searching>CTRL/N, NEXT
.x Key assignments>CTRL/N, NEXT
.x CTRL/N, NEXT
.i-29;Next	CTRL/N	Search for next occurrence of filename.
.x Searching>NFIND
.x NFIND
.i-29;NFind		Search for entry not matching pattern.
.x File management>PRINT
.x PRINT
.x Spawned subprocesses>PRINT
.i-29;PRint		Enqueue the file to be printed
.x File management>PROTECT
.x PROTECT, change protection
.x Key assignments>CTRL/P, protection edit
.x CTRL/P, protection edit
.i-29;PROtect	CTRL/P	Enter protection-code edit
.x File management>PURGE
.x PURGE
.i-29;PURge		Delete lower versions of the current file
.x File management>RENAME
.x RENAME
.i-29;REName		Rename the current file (requires arguments)
.x SUBMIT
.x Spawned subprocesses>SUBMIT
.i-29;Submit		Submit the current file as a BATCH job.
.x Browsing>VIEW
.x VIEW
.x Spawned subprocesses>VIEW
.i-29;View		EDIT/READONLY
.lm2.br.rpt 73 "-"

.if lib
.lm0;2 Direction##########
.else lib
.b2
.lm0;^*Direction:\*
.endif lib
.lm2.b
/FORWARD and /BACKWARD set the current-direction flag, used by /PAGE
to determine the direction of scrolling.
Each of these commands accepts a single argument: number of lines.
If no argument is given, the amount of scrolling is one screen.

.if lib
.lm0;2 Display############
.else lib
.b2.lm0;^*Display:\*
.endif lib
.lm2.b
.x Display commands
The only fixed-fields in FLIST's display format are the filename, filetype and
version.
The pathname for the current-file is automatically displayed in the
summary line.
The "/d"-commands alter the DATE-field to alternate formats to
permit different date-sorting.  The "/columns" command permits the user to set
the display to any combination of fields for which FLIST has read the data:
.lm2.b
.lm2.br.rpt 73 "-"
.lm +29
.x DATE-toggle>/DCREATED
.x /DCREATED, toggle DATE to CREATED
.i-29;/Dcreated		Toggle date-display to CREATED
.x DATE-toggle>/DBACKUP
.x /DBACKUP, toggle DATE to BACKUP
.i-29;/DBackup		Toggle date-display to BACKUP
.x DATE-toggle>/DREVISED
.x /DREVISED, toggle DATE to REVISED
.i-29;/DRevised		Toggle date-display to REVISED
.x DATE-toggle>/DSHORT
.x Date format>/DSHORT
.x /DSHORT, set short date format
.i-29;/DShort		Set date to short-format
.x DATE-toggle>/DLONG
.x Date format>/DLONG
.x /DLONG, set long date format
.i-29;/DLong		Show date in long (day-of-week) format
.lm2.br.rpt 73 "-"
.lm +29
.x Display commands>/COLUMNS
.x /COLUMNS, set column-list
.x Column-list>/COLUMNS
.i-29;/Columns		(see keyword list)
.x Column-rotation>/CLEFT
.x /CLEFT, rotate column-list
.i-29;/CLeft		Rotates list to the left
.x Column-rotation>/CRIGHT
.x /CRIGHT, rotate column-list
.i-29;/CRight		Rotates list to the right
.x Column-width>/CWIDTH
.x /CWIDTH, set column width
.i-29;/CWIDTH		Set name.type column width
.x Display commands>/TIMES
.x /TIMES, reset timer
.i-29;/TImes		Display, reset elapsed, actual CPU times
.lm2.br.rpt 73 "-"
.;
.if lib
.lm0;3 Keywords
.else lib
.b2.lm4;^*Keywords:\*
.endif lib
.b.lm2.rm -2
.x Column keywords
.x Column keywords>ALLOC
.x Column keywords>BACKUP
.x Column keywords>CREATED
.x Column keywords>DATE
.x Column keywords>EXPIRED
.x Column keywords>FORMAT
.x Column keywords>ID
.x Column keywords>LENGTH
.x Column keywords>MASK
.x Column keywords>OWNER
.x Column keywords>PATH
.x Column keywords>REVISED
.x Column keywords>SIZE
.x Column keywords>XAB
Column keywords include:  ALLOC,  BACKUP,  CREATED,  DATE, EXPIRED, FORMAT,
ID, LENGTH, MASK, OWNER,
PATH, REVISED, SIZE, USER and XAB (record attributes).
For example, the standard
display is:
.b.c;/columns size date mask
.b
Only the first character of each keyword need be given.  If an asterisk  "_*"
is given, the entire prior list is entered.
This provides a convenient  means to append to the list.
.rm+2
.;
.if lib
.lm0;3 Width
.else lib
.b2.lm4;^*Width:\*
.endif lib
.b.lm2.rm-2
FLIST normally sets the displayed width of the filename and filetype to
the maximum of any file in the list, so that all names and types will fall
into columns.
Under VMS 4.x, name- and type-components may be quite long
(39 characters each).
The resulting display may not fit well on your terminal.
You may override the column-width by the /CWIDTH command:
.b;.i4;/CWIDTH n.t
.b;for example
.b.i4;/CWIDTH 9.3
.b;If you do not give an argument, FLIST resets the display to its default
state; either "n" or "t" may be defaulted.
.rm+2

.if lib
.lm0;2 Hierarchy##########
.else lib
.b2.lm0;^*Hierarchy:\*
.endif lib
.lm2.b
.x Display hierarchy
FLIST permits you to enter up to eight display levels (counting the original
invocation).
FLIST assumes a new level if you EDIT a directory, if your EDIT command
implies a wildcard (e.g., inexplicit version number), or if you explicitly
edit a directory which is not in the current display list.
Column settings are inherited as you enter a new level, and restored
as you exit.
.b
On entry to a new level, the date-selection options are reset
(i.e., "_/BEFORE" and "_/SINCE").
You may use the date-selection options in your initial EDIT-directory
call on a new level.

.if lib
.lm0;2 Keypad#############
.else lib
.b2.lm0;^*Keypad:\*
.endif lib
.lm2.b
The keypad functions provided by FLIST are, where possible, analogous to  the
ones of the EDT editor.  Those indicated in "{...}" differ from the functions
afforded by typing the command directly:
.lm +10
.b.i -5
{recall} - retrieves the prior command text.
The "-" (non-keypad) itself does only a one-level recall.
The command history stores up to 30 levels.
Once in command-edit, up/down arrows may be used to select  a
previous command-string.
.b.i -5
/mark and /nomark - select/deselect a file entry for successive fixed-point
sorting.
.lm -10
.if paged
.tp24
.endif paged
.b.ts 17,45
Key	(Without GOLD)	(With GOLD)
.lm2.br.rpt 73 "-"
.x Key assignments>PF1, GOLD
.x PF1, GOLD
.br;PF1	{GOLD}	{GOLD}
.x Key assignments>PF2, HELP
.x PF2, HELP
.br;PF2	HELP	HELP
.x Key assignments>PF3>NEXT
.x PF3>NEXT
.x Key assignments>PF3>FIND (GOLD)
.x PF3>FIND (GOLD)
.br;PF3	NEXT	FIND
.x Key assignments>PF4>column-rotation
.x PF4>column-rotation
.br;PF4	/CLEFT	/CRIGHT
.x Key assignments>Keypad#0>sort by NAME
.x Keypad#0>sort by NAME
.br;0	/SNAME	/RNAME
.x Key assignments>Keypad#1, sort by TYPE
.x Keypad#1, sort by TYPE
.br;1	/STYPE	/RTYPE
.x Key assignments>Keypad#2>sort by DATE
.x Keypad#2>sort by DATE
.br;2	/SDATE	/RDATE
.x Key assignments>Keypad#3, sort by SIZE
.x Keypad#3, sort by SIZE
.br;3	/SSIZE	/RSIZE
.x Key assignments>Keypad#4>scroll forward
.x Keypad#4>scroll forward
.x Key assignments>Keypad#4>scroll to end (GOLD)
.x Keypad#4>scroll to end (GOLD)
.br;4	/FORWARD#0	/END
.x Key assignments>Keypad#5>scroll backward
.x Keypad#5>scroll backward
.x Key assignments>Keypad#5>scroll to top (GOLD)
.x Keypad#5>scroll to top (GOLD)
.br;5	/BACKWARD#0	/TOP
.x Key assignments>Keypad#6>display timer
.x Keypad#6>display timer
.x Key assignments>Keypad#6>reset timer (GOLD)
.x Keypad#6>reset timer (GOLD)
.br;6	?TIMES	/TIMES
.x Key assignments>Keypad#7>EDIT
.x Keypad#7>EDIT
.x Key assignments>Keypad#7>VIEW (GOLD)
.x Keypad#7>VIEW (GOLD)
.br;7	EDIT	VIEW
.x Key assignments>Keypad#8, scroll up or down
.x Keypad#8, scroll up or down
.br;8	/PAGE	{}
.x Key assignments>Keypad#9, BROWSE
.x Keypad#9, BROWSE
.br;9	BROWSE	BROWSE/O:3/M
.x Key assignments>Keypad#"-", recall
.x Keypad#"-", recall
.br;_-	{recall}	{recall}
.br;_,	?MEMORY	{}
.x Key assignments>Keypad#".", Fixed-point sorting
.x Keypad#".", Fixed-point sorting
.br;_.	/MARK	/NOMARK
.br;ENTER	{return}	{return}
.lm2.br.rpt 73 "-"

.if lib
.lm0;2 Line-editing#######
.else lib
.b2.lm0;^*Line-editing:\*
.endif lib
.lm2.b.ts 17,31,45
.x Line editing
Any non-editing command may be given to FLIST by typing the abbreviation (with
printable characters) next to the file.
These commands are terminated with an ENTER or RETURN.
.x Key assignments>Return key>enter command
.x Return key>enter command
.x Key assignments>ENTER key>enter command
.x ENTER key>enter command
All printing characters are echoed (and highlighted, if  the
terminal permits).
The input command may be edited:
.lm2.b
Key	(also)	Operation
.lm2.br.rpt 73 "-"
.lm +29
.i-29;{printing}		Insert printing characters at the cursor.
.x Key assignments>Backspace key>move to beginning of line
.x Backspace key>move to beginning of line
.x Key assignments>Keypad#0>move to beginning of line
.x Keypad#0>move to beginning of line
.i-29;{backspace}	{keypad-0}	Move to the beginning of the input line.
.x Key assignments>CTRL/E>move to end of line
.x CTRL/E>move to end of line
.x Key assignments>Keypad#2>move to end of line
.x Keypad#2>move to end of line
.i-29;CTRL/E	{keypad-2}	Move to the end of the input line.
.x Key assignments>CTRL/D, move cursor left
.x CTRL/D, move cursor left
.x Key assignments>Left-arrow, move cursor left
.x Left-arrow, move cursor left
.i-29;CTRL/D	{left-arrow}	Move the cursor left one column
.x Key assignments>CTRL/F>move cursor right
.x CTRL/F>move cursor right
.x Key assignments>Right-arrow, move cursor right
.x Right-arrow, move cursor right
.i-29;CTRL/F	{right-arrow}	Move the cursor right one column
.x Key assignments>Delete key, delete a character
.x Delete key, delete a character
.i-29;{delete}		Delete the character before the cursor point.
.x Key assignments>Line-feed key, delete a word
.x Line-feed key, delete a word
.i-29;{line-feed}		Delete the "word" before the cursor point
.x Key assignments>ENTER key>enter command
.x ENTER key>enter command
.x Key assignments>Return key>enter command
.x Return key>enter command
.i-29;ENTER	{return}	Complete the command, issue it.
.x Key assignments>CTRL/U, abort command
.x CTRL/U, abort command
.x Key assignments>CTRL/X, abort command
.x CTRL/X, abort command
.i-29;CTRL/U	CTRL/X	Abort the command.
.lm2.br.rpt 73 "-"

.if lib
.lm0;2 Pathname###########
.else lib
.b2.lm0;^*Pathname:\*
.endif lib
.lm2.b
.x Pathname
.x Working directory
As you move your cursor up or down through the display list, FLIST
sets the default directory to match that of the current file.
The default directory's name is shown in the status line.
.b
You need not specify the pathname (device+directory) of files which
are in the default directory while performing operations upon them.
Furthermore, if your command implicitly affects only files within the
display list (e.g., FIND), then if you do not specify a pathname,
then FLIST treats it as a wildcard ("_*_:").
.b
Commands which are not limited to operating upon the current contents
of the display list (e.g., EDIT, COPY, RENAME) do not use this
implicit-wildcard for the pathname.

.if lib
.lm0;2 Protection#########
.else lib
.b2.lm0;^*Protection:\*
.endif lib
.lm2.b
.x Protection edit
.x PROTECT, change protection
.x Key assignments>CTRL/P, protection edit
.x CTRL/P, protection edit
Protection edit-mode is entered either by typing  PROtect  or  CTRL/P.  If the
first (i.e., no arguments), the changes made  in  the  edit will  be saved for
last-command retrieval.
.b
Protection  fields  are edited using the following commands, aimed at the flag
at the current cursor position:
.lm2.b
Key	(also)	Operation
.lm2.br.rpt 73 "-"
.lm +29
.x Key assignments>Up-arrow>enable protection
.x Up-arrow>enable protection
.i-29;{up-arrow}		Enable the flag
.x Key assignments>Down-arrow>disable protection
.x Down-arrow>disable protection
.i-29;down-arrow}		Disable the flag
.x Key assignments>Left-arrow, move cursor left
.x Left-arrow, move cursor left
.x Key assignments>CTRL/D, move cursor left
.x CTRL/D, move cursor left
.i-29;{left-arrow}	CTRL/D	Move left
.x Key assignments>Right-arrow, move cursor right
.x Right-arrow, move cursor right
.x Key assignments>CTRL/F>move cursor right
.x CTRL/F>move cursor right
.i-29;{right-arrow}	CTRL/F	Move right
.x Key assignments>"Y", copy protection-level code
.x "Y", copy protection-level code
.i-29;y	Y	Enable the entire group (for command-copy)
.x Key assignments>"N", don't copy protection code
.x "N", don't copy protection code
.i-29;n	N	Disable the entire group
.x Key assignments>",", move to next protection-level
.x ",", move to next protection-level
.i-29;,		Move to next group
.x Key assignments>Return key>enter command
.x Return key>enter command
.x Key assignments>ENTER key>enter command
.x ENTER key>enter command
.i-29;ENTER	{return}	Complete the command, change protection
.x Key assignments>CTRL/U, abort command
.x CTRL/U, abort command
.x Key assignments>CTRL/X, abort command
.x CTRL/X, abort command
.i-29;CTRL/U	CTRL/X	Abort the command
.x Key assignments>"?", HELP (immediate in protection edit)
.x "?", HELP (immediate in protection edit)
.x Key assignments>PF2, HELP
.x PF2, HELP
.i-29;?	PF2	Help-display
.lm2.br.rpt 73 "-"

.if lib
.lm0;2 Refresh############
.else lib
.b2
.lm0;^*Refresh:\*
.endif lib
.lm2.b
The following commands are used to update the FLIST database/display-list:
.b
Main	Alternate	Description
.lm2.br.rpt 73 "-"
.lm +29
.x Read-list>READ
.x READ
.i-29;Read		Re-read directory (or if argument, new entries)
.x Read-list>UPDATE
.x UPDATE
.i-29;Update		Re-read directory, forcing database update
.x Display list>VERIFY
.x VERIFY
.x Key assignments>CTRL/V, verify
.x CTRL/V, verify
.i-29;VErify	CTRL/V	Scan to remove files other programs deleted
.lm2.br.rpt 73 "-"
.lm +29
.x Read-list>CTRL/R, reread line
.x Key assignments>CTRL/R, reread line
.x CTRL/R, reread line
.i-29;	CTRL/R	Re-read/refresh current line
.x Refresh display
.x Key assignments>CTRL/W, refresh display
.x CTRL/W, refresh display
.i-29;	CTRL/W	Refresh screen-display
.y Files>SNAPSHOT.CRT>see Screen dump
.x Screen dump>CTRL/K
.x Key assignments>CTRL/K, screen dump
.x CTRL/K, screen dump
.i-29;	CTRL/K	Dump a copy of screen to SNAPSHOT.CRT
.lm2.br.rpt 73 "-"
.lm +29
.x Display commands>/HOLD
.i-29;/HOLd		Prompt after all spawned commands (e.g., EDIT)
.x Display commands>/NOHOLD
.i-29;/NOHold		No prompt after spawned commands (default)
.lm2.br.rpt 73 "-"

.if lib
.lm0;2 Scrolling##########
.else lib
.b2
.lm0;^*Scrolling:\*
.endif lib
.lm2.b
Main	Alternate	Description
.lm2.br.rpt 73 "-"
.lm +29
.x Scrolling commands>/TOP, scroll to top
.x /TOP, scroll to top
.x Key assignments>CTRL/T, scroll to top
.x CTRL/T, scroll to top
.i-29;/TOP	CTRL/T	Move (scrolling) to the top of the list.
.x Scrolling commands>/END, scroll to end
.x /END, scroll to end
.x Key assignments>CTRL/E>scroll to end
.x CTRL/E>scroll to end
.i-29;/END	CTRL/E	Move (scrolling) to the end of the list.
.x Scrolling commands>/FORWARD, scroll forward
.x /FORWARD, scroll forward
.x Key assignments>CTRL/F>scroll forward
.x CTRL/F>scroll forward
.i-29;/Forward	CTRL/F	Scroll forward one screen.
.x Scrolling commands>/BACKWARD, scroll backward
.x /BACKWARD, scroll backward
.x Key assignments>CTRL/B, scroll backward
.x CTRL/B, scroll backward
.i-29;/Backward	CTRL/B	Scroll backward one screen.
.x Scrolling commands>/FORWARD, scroll forward
.x /PAGE, scroll one screen
.i-29;/Page		Scroll one screen (direction: /F or /B)
.x Scrolling commands>/HOME
.x /HOME
.i-29;/Home		Move to the top of the screen.
.x Scrolling commands>/MIDDLE
.x /MIDDLE
.i-29;/Middle		Move to the middle of the screen.
.x Scrolling commands>/LOW
.x /LOW
.i-29;/Low		Move to last file entry on current screen.
.x Scrolling commands>Backspace key, move up
.x Key assignments>Backspace key>move up
.x Backspace key>move up
.x Scrolling commands>Up-arrow, move up
.x Key assignments>Up-arrow>move up
.x Up-arrow>move up
.i-29;{backspace}	{up-arrow}	Move to previous line.
.x Scrolling commands>Return key, move down
.x Key assignments>Return key>move down
.x Return key>move down
.x Scrolling commands>ENTER key, move down
.x Key assignments>ENTER key>move down
.x ENTER key>move down
.x Scrolling commands>Down-arrow, move down
.x Key assignments>Down-arrow>move down
.x Down-arrow>move down
.i-29;{return}	{down-arrow}	Move to next line (also ENTER)
.x Scrolling commands>Number
.x Number-scrolling
.i-29;{number}		Move to specified index in file list (trailing sign
permitted for relative movement).
.x Scrolling commands>Slash
.x Slash-scrolling
.i-29;/		Scroll to put current line to top of screen.
.lm2.br.rpt 73 "-"

.if lib
.lm0;2 Sorting############
.else lib
.b2
.lm0;^*Sorting:\*
.endif lib
.lm2.b
.x Sorting commands
Name-fields are sorted in increasing order, while numbers (including dates)
are sorted in decreasing order.
The "/r" sorts reverse this.
A  single  file
may be set as a "fixed-point" during the sort (either by the keypad ".", or  by
another "/" before the sort command, e.g., "//sn").  If fixed-point, then after
sorting the cursor is returned to the selected file.
.lm2.b
Normal	Reverse	Description
.lm2.br.rpt 73 "-"
.lm +29
.x Sorting commands>/SPATH, sort by PATH
.x /SPATH, sort by PATH
.x Sorting commands>/RPATH, sort by PATH
.x /RPATH, sort by PATH
.i-29;/SPath	/RPath	Sort by PATH name, then name, type, version.
.x Sorting commands>/SNAME, sort by NAME
.x /SNAME, sort by NAME
.x Sorting commands>/RNAME, sort by NAME
.x /RNAME, sort by NAME
.i-29;/Sname	/Rname	Sort by file NAME, then path, etc.
.x Sorting commands>/STYPE, sort by TYPE
.x /STYPE, sort by TYPE
.x Sorting commands>/RTYPE, sort by TYPE
.x /RTYPE, sort by TYPE
.i-29;/SType	/RType	Sort by file TYPE, then path, name, etc.
.x Sorting commands>/SVERSION, sort by VERSION
.x /SVERSION, sort by VERSION
.x Sorting commands>/RVERSION, sort by VERSION
.x /RVERSION, sort by VERSION
.i-29;/SVersion	/RVersion	Sort by VERSION
.lm2.br.rpt 73 "-"
.lm+29
.x Sorting commands>/SALLOC, sort by allocation
.x /SALLOC, sort by allocation
.x Sorting commands>/RALLOC, sort by allocation
.x /RALLOC, sort by allocation
.i-29;/SAlloc	/RAlloc	Sort by ALLOCated size
.x Sorting commands>/SBACKUP, sort by BACKUP date
.x /SBACKUP, sort by BACKUP date
.x Sorting commands>/RBACKUP, sort by BACKUP date
.x /RBACKUP, sort by BACKUP date
.i-29;/SBackup	/RBackup	Sort by BACKUP date
.x Sorting commands>/SCREATED, sort by CREATED date
.x /SCREATED, sort by CREATED date
.x Sorting commands>/RCREATED, sort by CREATED date
.x /RCREATED, sort by CREATED date
.i-29;/SCreated	/RCreated	Sort by CREATED date
.x Sorting commands>/SDATE, sort by DATE
.x /SDATE, sort by DATE
.x Sorting commands>/RDATE, sort by DATE
.x /RDATE, sort by DATE
.i-29;/SDate	/RDate	Sort by DATE
.x Sorting commands>/SEXPIRED, sort by EXPIRED date
.x /SEXPIRED, sort by EXPIRED date
.x Sorting commands>/REXPIRED, sort by EXPIRED date
.x /REXPIRED, sort by EXPIRED date
.i-29;/SExpired	/RExpired	Sort by EXPIRED date
.x Sorting commands>/SFORMAT, sort by format
.x /SFORMAT, sort by format
.x Sorting commands>/RFORMAT, sort by format
.x /RFORMAT, sort by format
.i-29;/SFormat	/RFormat	Sort by FORMAT (of file)
.x Sorting commands>/SHOUR, sort by hour of DATE
.x /SHOUR, sort by hour of DATE
.x Sorting commands>/RHOUR, sort by hour of DATE
.x /RHOUR, sort by hour of DATE
.i-29;/SHour	/RHour	Sort by HOUR (of current "/D" mode)
.x Sorting commands>/SID, sort by file-id
.x /SID, sort by file-id
.x Sorting commands>/RID, sort by file-id
.x /RID, sort by file-id
.i-29;/SId	/RId	Sort by file-id
.x Sorting commands>/SLENGTH, sort by record-length
.x /SLENGTH, sort by record-length
.x Sorting commands>/RLENGTH, sort by record-length
.x /RLENGTH, sort by record-length
.i-29;/SLength	/RLength	Sort by record-length
.x Sorting commands>/SMASK, sort by protection mask
.x /SMASK, sort by protection mask
.x Sorting commands>/RMASK, sort by protection mask
.x /RMASK, sort by protection mask
.i-29;/SMask	/RMask	Sort by protection MASK
.x Sorting commands>/SOWNER, sort by owner
.x /SOWNER, sort by owner
.x Sorting commands>/ROWNER, sort by owner
.x /ROWNER, sort by owner
.i-29;/SOwner	/ROwner	Sort by OWNER
.x Sorting commands>/SREVISED, sort by REVISED date
.x /SREVISED, sort by REVISED date
.x Sorting commands>/RREVISED, sort by REVISED date
.x /RREVISED, sort by REVISED date
.i-29;/SRevised	/RRevised	Sort by REVISED date
.x Sorting commands>/SSIZE, sort by SIZE
.x /SSIZE, sort by SIZE
.x Sorting commands>/RSIZE, sort by SIZE
.x /RSIZE, sort by SIZE
.i-29;/SSize	/RSize	Sort by SIZE
.x Sorting commands>/SUSER, sort by file owner's user name
.x /SUSER, sort by file owner's user name
.x Sorting commands>/RUSER, sort by file owner's user name
.x /RUSER, sort by file owner's user name
.i-29;/SUser	/RUser	Sort by file owner's user name
.x Sorting commands>/SWEEK, sort by DATE's weekday
.x /SWEEK, sort by DATE's weekday
.x Sorting commands>/RWEEK, sort by DATE's weekday
.x /RWEEK, sort by DATE's weekday
.i-29;/SWeek	/RWeek	Sort by day of WEEK
.x Sorting commands>/SXAB, sort by extra attributes
.x /SXAB, sort by extra attributes
.x Sorting commands>/RXAB, sort by extra attributes
.x /RXAB, sort by extra attributes
.i-29;/SXab	/RXab	Sort by record attributes
.lm2.br.rpt 73 "-"
.lm+29
.x Sorting commands>/MARK, latch fixed-point
.x /MARK, latch fixed-point
.x Fixed-point sorting>/MARK
.i-29;/MARk		Select the current file as a fixed point.
.x Sorting commands>/NOMARK, unlatch fixed-point
.x /NOMARK, unlatch fixed-point
.x Fixed-point sorting>/NOMARK
.i-29;/NOMark		Deselect the fix-point file.
.lm2.br.rpt 73 "-"

.if lib
.lm0;2 Status#############
.else lib
.b2.lm0;^*Status:\*
.endif lib
.lm2.b
.x Status commands
The following commands display status information known to FLIST, which is not
easily determinable by other methods:
.lm2.b
.lm2.br.rpt 73 "-"
.lm +15
.i -15
.x Status commands>?COLUMNS, show column-list
.x ?COLUMNS, show column-list
?Columns	Shows the display-columns names (cf: "/columns").
.i -15
.x Status commands>?DATE, show current date
.x ?DATE, show current date
?Date	Shows the current date and time.
.i -15
.x Status commands>?FIND, show search-target
.x ?HELP, show search target
?Find	Shows the current target of NEXT
.i -15
.x Status commands>?HELP, show command summary
.x ?HELP, show command summary
?help	Shows the help-file for FLIST.
.i -15
.x Status commands>?LEVEL, show display level
.x ?LEVEL, show display level
?Level	Shows the current nesting-level of FLIST (cf: QUIT).
.i-15
.x Status commands>?MEMORY, show dynamic memory usage
.x ?MEMORY, show dynamic memory usage
?Memory	Shows the amount of dynamic memory allocated by FLIST.
.;	i -15
.;	x Status commands>?QUOTA, show user's disk quota
.;	x ?QUOTA, show user's disk quota
.;	?Quota	Shows the user's disk quota.
.i-15
.x Status commands>?READ, show read-list and options
.x ?READ, show read-list and options
?Read	Shows the read-list and current option settings.
.i -15
.x Status commands>?SIZE, show blocks in display list
.x ?SIZE, show blocks in display list
?Size	Shows the total block-count of files in the list.
.i -15
.x Status commands>?TIMES, show timer
.x ?TIMES, show timer
?Times	Shows elapsed, actual CPU times, amount of I/O.
.i -15
.x Status commands>?VERSION, show FLIST version
.x ?VERSION, show FLIST version
?Version	Shows the version and build-date of FLIST.
.lm2.br.rpt 73 "-"

.if lib
.lm0;2 Substitution#######
.else lib
.b2.lm0;^*Substitution:\*
.endif lib
.lm2.b
.x Command substitution
.y Order of arguments>see Command substitution
The text of a visible command is directed to the current-file entry.  In most
cases, the order of arguments is unambiguous:
.b.lm +8
DELETE	- no arguments, simply delete the current-file
.br
RENAME	- one argument, the new-file name
.b.lm -8
In some commands, the order must be specified more precisely
(e.g., COPY, APPEND).
FLIST uses the "/O" and "/" tokens to accomplish this.
.x Command substitution>"/",##substitute after name
.x "/", substitute after name
The first occurrence of the "/" token in the argument list
causes the current filename
to be implicitly placed at that point, and all succeeding text after it.
The filename is normally placed at the end of the command.
.x Command substitution>"/O", omit substitution
.x "/O", omit substitution
The "/O" prefix,  on the other hand,  causes the  current  filename
to be omitted from the command
string expansion (unless a "/" token is used).
.b
Components of the current filename may be copied by the user in  substitution
performed by FLIST when executing a command.  For example, if the file  entry
is DBC4:[DICKEY]FLIST.EXE;34,
.b.lm +8
.x Command substitution>"/P", substitute PATH
.x "/P", substitute PATH
.br;/P##substitutes the path, "DBC4:[DICKEY]"
.x Command substitution>"/N", substitute NAME
.x "/N", substitute NAME
.br;/N##substitutes the name, "FLIST"
.x Command substitution>"/T", substitute TYPE
.x "/T", substitute TYPE
.br;/T##substitutes the type, "EXE"
.x Command substitution>"/V", substitute VERSION
.x "/V", substitute VERSION
.br;/V##substitutes the version, "34"
.b.lm -8
The "." and ";" punctuation must be supplied by the user if a filename is to
be constructed by substitution, e.g., "/N./T".
