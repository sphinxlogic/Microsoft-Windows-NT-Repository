

	.library	/sys$login:peb/
	.library	/sys$library:lib/
        $notesdef
	$NOTESMSGDEF
	NOTEITEMS



	.entry	start,0

; open our notebook

        pushaw  null				; no output item list
        pushaw  notebook_in			; input item list
        pushal  notebook_file_cont		; returned file context
        calls   #3,G^Notes$notefile_begin	; do it
        check   r0,error			; on error exit


; start notes access

	pushaw  null				; no output item list
	pushaw	book_in				; input item list
	pushal	notebook_cont			; returned note context
	calls	#3,g^notes$entry_begin		; do it
	check	r0,error


; update our entry

	pushaw	ent_out				; entry output item list
	pushaw	ent_in				; entry input item list
	pushal	notebook_cont			; note context
	calls	#3,g^notes$entry_update
	check	r0,error



; tell us the unseen est


	movl	#100,out
	$fao_s	ctrstr=ctr,outbuf=out,outlen=out,-
		p1=unseen_est
	pushaq	out
	calls	#1,g^lib$put_output



error:	ret


; output item list for notes$entry_update

ent_out:	.word	4				; length of 4
		.word	notes$k_entry_unseen_est	; return unseen est
		.long	unseen_est			; where to return it to
		.long	0
;
		.long	0


; input item list for notes$entry_update (two items.. the second
; one provides a default of NOTES$LIBRARY:*.NOTE for this operation

ent_in:		.word	7				; length of 7
		.word	notes$k_entry_name		; entry name
		.long	entry_name			; location of entry name	
		.long	0
;
		.word   default_name_len		; length of default
		.word   notes$k_notefile_default_name	;
		.long   default_name
                .long   0
;
		.long	0




; input intem list for Notes$notefile_begin

notebook_in:	.word   note_spec_len			; notebook is NOTES$NOTEBOOK
                .word   notes$k_notefile_file_name
                .long   note_spec
                .long   0
;
		.word	notebook_def_len		; provide default
		.word	notes$k_notefile_default_name	; location and type
		.long	notebook_def_spec
		.long	0
;
		.long	0





; input item list for notes$entry_begin
; pass in the file context generated by Notes$notefile_begin

book_in:	.word	4
		.word	notes$k_notefile_context
		.long	notebook_file_cont
		.long	0
;
		.long	0



notebook_cont:		.blkl	1
notebook_file_cont:	.blkl	1
null:			.blkl	20
unseen_est:		.blkl	1


; some ascii strings.. and lengths 

default_name:   	.ascii  /Notes$library:.Note/	; string
default_name_len =. - default_name			; length as symbol

entry_name:		.ascii	/CARS_UK/		; string

note_spec:		.ascii	/notes$notebook/	; string
note_spec_len = . - note_spec				; length as symbol

notebook_def_spec:	.ascii	/SYS$LOGIN:notes$notebook.NOTE/	; string
notebook_def_len = . - notebook_def_spec			; length as symbol


; for use by FAO

out:	.long	100
	.long	out+8
	.blkb	100

ctr:	.ascid	/Unseen estimate is !UL/


	.end	start
