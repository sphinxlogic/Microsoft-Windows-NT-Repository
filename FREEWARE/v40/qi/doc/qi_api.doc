
QI_API.DOC

The QI_API module defines a non-network interface to the nameserver.

Calling sequence:

    QI_COMMAND  context, command, results

    context is an opaque pointer passed by reference.  The context
    pointer must initially be zero.

    command is a character string passed by descriptor.

    results is an array passed by descriptor.  The array
    contains string descriptors.  The array pointer must initially
    be zero.


    The API routine performs the following:

    1. If context is null, a context is created.
    2. If result is non-null, the results are deallocated.
    3. If the command is non-null, the command is executed.
    4. If the command is null, the context is deallocated.

    QI_COMMAND returns an integer status:

    SS$_ACCVIO if any of the arguments are missing.
    SS$_NODATA if there are problems initializing the context.
    SS$_NORMAL if the command executes.  You will need to parse the
        result strings to find the status of the command itself.

    See APITEST.C for an example of the API.

    The option file API.OPT expects that QI_API.EXE is found via the
    logical name CSO_APISHR.  I suggest that you define a this logical
    name /SYSTEM /EXECUTIVE_MODE at startup.

