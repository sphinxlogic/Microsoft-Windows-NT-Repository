Changes since 0.97-14
   0. Many small architectural changes.
   
   1. Thanks to Andy Harper (A.HARPER@kcl.ac.uk) for work on DCL make files
      for VMS.

   2. Under Unix, ~ is stripped off filename extension before determining
      the mode.
      
   3. rgrep change: -B option may be used to skip binary files.  These files
      are defined to be any file with a null character in the first 32 bytes
      of the file.
      
   4. Folding mode and selective display if jed is compiled with line
      attribute support.  This adds about 4 bytes of overhead per buffer
      line.  As a result, I do not recommend it for systems with no virtual
      memory (DOS).  The 32 bit DOS executable (jed386.exe) does come
      with folding support.  wjed.exe and jed.exe do not provide
      folding support because they are 16 bit executables.
      
      To enable folding mode, you must set the variable Fold_Mode_Ok
      to  non-zero value in your jedrc file.  See doc/fold.txt for
      more information.
      
      `set_color ("...", "blue", "white");' may be used to set the
      color of the "..." hidden line indicator.

   5. Line marks added.  See online documentation `create_line_mark'.
      This is a user mark that has a color associated with it.  A line
      that has a line mark will be displayed using this color.

   6. A buffer-local facility has been added.  See documentation on
      the new intrinsic functions:
      
          create_blocal_var
	  get_blocal_var
	  set_blocal_var
	  define_blocal_var
      
      for more information.
      
   7. If asynchronous subprocess support is enabled, jed will compile
      in the background.
      
   8. Mouse interface completely re-written to be more functional.
      New intrinsics include:
      
          mouse_set_default_hook
	  mouse_set_current_window
	  mouse_map_buttons
	  
      Double and Triple clicking is now supported in XJed.
      
   9. Several new intrinsics including:
   
          usleep
	  is_visible_mark

  10. More sophisticated syntax highlighting added by Simon Tatham
      <sgt20@cam.ac.uk>.  His approach based on regular
      expressions is available if jed is compiled with
      JED_HAS_DFA_SYNTAX defined (see src/features.h).  See
      jed/doc/dfa.txt for more information.
      
  11. slang_mode mode line changed from "SL" to "SLang".  This makes
      it more consistent with other modes.

  12. Mark Olesen's sendmail and mail-alias slang packages have been
      integrated into jed.  The sendmail interface replaces the old
      interface on Unix systems.  See sendmail.sl for more information.

  13. I have tried to unify the various makefiles for pc systems.
      There are simply too many compilers and too many incompatable
      make programs for DOS/WINDOWS/OS2 systems and about every other week I
      would receive a new makefile from someone that works with X
      version of make using compiler version Y.  The problem with this is that
      I simply cannot maintain that many makefiles.  See
      jed/src/mkfiles/README for my proposed solution.

Changes since 0.97-13
   0. Some intrinsic functions have been renamed:
        whatmode --> what_mode
        setmode --> set_mode

   1. New functions:
       
        verror, vmessage  : These take a variable number of arguments in
	  vinsert              Sprintf style
	_stk_roll         : rolls the stack
	strchop, strchopr : Chops up a string into substrings
	del_eol           : delete to end of line
	del_through_eol   : delete through end of line
	pop_mark_0        : equiv to pop_mark(0)
	pop_mark_1        : equiv to pop_mark(1)
	go_left_1         : equiv to go_left(1)
	go_right_1        : equiv to go_right (1)
	ffind_char        : like ffind but search for char
	bfind_char        :  
	fsearch_char      :
	bsearch_char      :
	bol_bsearch_char  :
	bol_fsearch_char  :
	
      For details, see the online documentation.

   2. narrow_to_region, widen_region:  These are similar to the functions
      `narrow' and `widen' except that these actually delimit editing to a
      region.
      
   3. undo now has redo.  See doc/undo.txt.  This is due to Dan Nelsen
      <dhn@qedinc.com>.
   
   4. In C and SLang modes, the TAB key also adjusts the indentation of
      preprocessor directives.  The variable C_Preprocess_Indent controls
      the amount of indentation.  By default, it is 1.

   5. XJed specific: the resource names have been changed to conform more
      closely with other programs.  In particular, XJed must be changed to
      xjed in your .Xdefaults file because XJed now uses the XTerm class.

   6. Emacs-like insert/copy-to register operations added.  The actual
      functions are called `reg_insert_register' (Ctrl-X G) and
      `reg_copy_to_register' (Ctrl-X X).  These functions are not available
      on 16 bit systems.

   7. Experimental java mode. (Marko Teittinen <marko@tekamah.com>)

Changes since 0.97-12
   0. Misc bug fixes.  Nothing major.

   1. New intrinsic variable:  REPLACE_PRESERVE_CASE.  If non-zero, replace
      functions will attempt to match the case of the new string with the
      replaced one.  This only happens if the two strings have the same
      length.

   2. Maximum keyword length for syntax highlighting has been raised from 16
      characters to 20 characters.
    
   3. C-mode improvements
   4. Big news for wjed users: Luchesar Ionkov seems to have fixed the
      subprocess support under Windows.  There have also been a few other
      wjed bug fixes.
   5. jed's mailer now works properly with mailx.  Someday I need to
      integrate Eric's sendmail patches.

Changes since 0.97-11
   1. Xjed was rejecting command line arguments-- now fixed.
   2. Repeat factor now works for `@' type keybindings (macros).
   3. New mousex.sl (jed running in an Xterm--- NOT Xjed).
   4. Misc bug fixes.
   5. More improvements to Windows jed (wjed), specifically pull down menus
      and shell commands are available.  Again, this is due to Luchesar
      Ionkov.

         Note: Under MSWINDOWS, os.sl loads a different file (mswmouse.sl)
	 to define mouse actions more suitable to a 2 button mouse.  I
	 suspect that this file should be modified to make the mouse behave
	 more like other Windows programs. e.g., drag mouse to define a
	 region then click a menu item to act on the region.  Any
	 volunteers?

Changes since 0.97-10

   0. MS-Windows version of jed now available.  This is called `wjed.exe'.
      Right now, it is rather primative with no support for menus or shell
      interaction.  Of course the mouse works with the middle button
      simulated by the alt key (see jed/doc/mouse.txt).  Thanks to
      lionkov@sf.cit.bg (Luchesar Ionkov)) for the patches.  (He also sent
      me patches for shell interaction but they would not compile under BCC
      3.1).

   1. There were many complaints about change number 4 in 0.97-6:

           4. XJed: Now when the meta (alt) key is used in
	   conjunction with a non-alphanumeric key such as `{',
	   the character is simply returned. If this creates a
	   backward compatibility problem or appears too
	   restrictive, please let me know.

      Apparantly, this is too restrictive so I have removed the restriction.
      Email me for for a simple way around this lifting of the restriction.
   2. Directories with names ending in ~ were not getting expanded properly.
   3. Slang Version 0.99-19 is now required.  This implements the new
      intrinsic function `strcompress'.
   4. QNX support added.
   5. Support for an alternate set of keywords added.  The C-mode defines some
      of these keywords such as `exit', `malloc', `strlen', etc...  Use
      something like:
      
          set_color ("keyword1", "green", "white");
	  
      to set the colors for this set.
   6. A couple of MSDOS jed bugs found.  One affects the keyboard and the
      other fix corrects a bad regular expression when compiling using bcc.
    
   7. idl mode enhanced with indentation.

Changes since 0.97-9
   1. Small bug in cmode.sl dealing with C++ style comments at first line of
      buffer corrected.
   2. Syntax highlighting problem fixed.
   3. Is shell.sl finally fixed under MSDOS?  I think so.
   4. Tiny change to mutekeys.sl.
   5. jed -secure args....   will run jed in secure mode.  This means that
      access to the shell will be denied.
   6. Tiny bug affecting slang_mode corrected.  (Very rare case).
   7. First attempt at a brief mode.  If you want to try it out, add:
       () = evalfile ("brief");
      to your jed.rc file.  Currently this file is only for MSDOS and OS2.
   8. Better EDT support for jed386.exe.  You will need GOLD.COM which is a
      TSR that maps the Numlock key to GOLD.  
   9. Low level keyboard interface for OS/2 and MSDOS re-written.  Let me
      know if there are any inconsistencies.  I have been unable to test it 
      under OS/2.
  10. Is dired fixed for OS/2??
  11. bibtex mode added (Author: Carsten Tinggaard Nielsen,
      tinggard@iesd.auc.dk)

Changes since 0.97-8
   1. html syntax highlighting mode added.
   2. New functions: _autoload and _add_completion.  See function
      documentation.  Briefly, these permit slightly faster loading.
   3. Typos corrected in shell.sl, emacs.sl, and dired.sl.
   4. Small correction for file name expansion under VMS.
   5. Ran purify on source code and fixed about two bad memory references.
   6. new nroff mode
   
Changes since 0.97-7
   1. The F1-F12 keys may now be used with jed386.exe and edt.sl.  See
      jed/doc/jed_faq.txt for more on EDT mode and jed386.exe.
   2. The `untab' function has been fixed.  I broke it in 0.97-7 (see below).
   3. Somewhat nasty bug fixed that affected jed386.exe.
   4. Unix and VMS: If the environment variable `COLORTERM' is defined, jed
      will automatically set the variable USE_ANSI_COLORS to a non-zero value.
      This feature is only available when compiled against slang version
      0.99-14.  Patches have also been sent in to the maintainer of the
      color xterm `rxvt' to automatically set this variable.  Incidently, if
      you are using `color_xterm', I suggest that you try out `rxvt'.
   5. New dired.sl and shell.sl courtesy of olesen@weber.me.queensu.ca (Mark Olesen) 
   
Changes since 0.97-6
  -1. Mouse support added to OS/2 version.  (Thanks to John Burnell.   
      <johnb@whio.grace.cri.nz>)

   0. ``Expansion hook'' added.  This hook is called upon TAB completion to
      preprocess the file before completion.  The default definition of this
      function expands environment variables when the variable is preceeded
      by a dollar sign, e.g., $HOME.  This function has not been defined for
      VMS since VMS already has this feature built in.

      Under Unix, this function also expands ~name to the login directory of
      the user `name'.  The expansion only takes place when the TAB key is
      pressed.
      
      The new intrinsic: set_expansion_hook may be used to change the hook.
      
   1. Under Unix, the function `get_passwd_info' may be used to return
      information about a specified user such as login dir, shell, etc...
      
   2. TeX mode highlighting fixes:
        a. words containing accents now handled properly
	b. The TeX special characters `&_^#' are now colored as `operators'.
	c. Braces `{}' are colored as delimiters.

   3. A prefix argument to the `untab' function will cause spaces to be
      converted into tabs.
      
   4. Page up/down commands modified slightly to give appear more intuitive.
   
   5. Misc bug fixes including:
       a. Parenthesis matching now works when `(` is also a comment delimiter.
       
   6. Pasting using the mouse has changed slightly.  Previously, text would
      be pasted at the position of the mouse.  Now, it is pasted at the
      position of the cursor.  This seems more intuitive.
      
      In addition, the editing position is restored to what it was before
      dragging text into the cutbuffer.  Again, this is more intuitive and
      more closely follows the Xterm usage.
      
   7. In C-mode, a if a line is preceeded by a line that ends with \, it is
      indented to the first column.  This is useful for continuation lines.
   8. Better native support for SunOS keyboards (pageup/down/home/end).
   9. The function `shell_cmd' has been changed to return the exit code of the
      subprocess.  Previously, it returned nothing.
  10. idl mode added.  Actually, only syntax highlighting is defined.  This 
      mode takes effect on .pro files.

Changes since 0.97-5
   0. New routines for adding keywords.  These include:
   
        add_keyword, define_keywords
	
      See shmode.sl for an example.  Basically, this file implements syntax
      highlighting for Unix sh and csh files.
      
   1. Bug fixed in filename completion.
   2. Kevin Humphreys auctex-for-jed package has been integrated into the
      source.  Thanks Kevin.
   3. Popular combinations of slang functions have been combined to create
      new functions.  These include:
   
         bol (); skip_white ();    ------------------> bol_skip_white ();
	 down (1);                 ------------------> down_1 ();
	 go_down (1);              ------------------> go_down_1 ();
	 up (1);                   ------------------> up_1 ();
	 go_up (1);                ------------------> go_up_1 ();
	 
      These load twice as fast and use half as much memory.  If I make them
      into intrinsics, they will execute twice as fast.  Jed slang
      programmers are encouraged to use these.
      
   4. XJed: Now when the meta (alt) key is used in conjunction with a
      non-alphanumeric key such as `{', the character is simply returned.
      If this creates a backward compatibility problem or appears too
      restrictive, please let me know.
      
   5. XJed: XJed now will never read a file from stdin.  This means that the
      *stdin* buffer will nolonger appear when it is started from a menu by
      the window manager.
      
Changes since 0.97-4a

   0. A COMPLETE rewrite of all the indentation routines.  The new routines 
      are much more customizable through the use of syntax tables.  Now, the
      C mode is completely written in S-Lang.  
      
         New features: 
	 
	    * Now much easier to add support for new languages.
	    * ESC-q will format a comment if it is in the canonical form:
	       /*
	        *  This is a C comment in
		*  the canonical form
		*  Notice how each line
		*  begins with a `*'.
		*/
	    * `goto_match' now works in both directions.
	    * New C-mode functions: 
	        c_end_of_function : ESC Ctrl-E
	        c_top_of_function : ESC Ctrl-A
	        c_mark_function :   ESC Ctrl-H
      

   1. The function `whatline' has been renamed to `what_line' for consistency 
      with other names.
      
   2. New function: translate_region.  This function is capable of modifying 
      all characters in a region according to a lookup table.  This is useful
      for converting buffers between various character sets.  See the new
      version of jed/lib/rot13.sl for an example of its usage.
      
   3. New functionality: yank-pop.  This is implemented in jed/lib/yankpop.sl.
      Unfortunately this is not available on 16bit systems.  This means if you
      use jed.exe you cannot use it.  However, jed386.exe is a 32bit
      executable so it is available.
      
      If you do not know what yank-pop is already, do not worry too much.
      You should not notice its presence.  However, if you do, hopefully you
      will welcome jed's emulation of it.  This was added to improve the
      emacs emulation.  See jed/doc/yankpop.txt for a simple discussion.

   4. New intrinsic variable _jed_version added.  This variable is an integer
      that represents the version number.  For 0.97-5, it has the value 9705.
      For 0.97-11, it will have the value 9711 and so on.
      
   5. A bug in jed386.exe was corrected.  This bug was responsible for
      some keyboard lockups.
      
Changes since 0.97-4
   1. Intrinsic function documentation improved.
   2. Source code should now compiled without specifying VAX compatability
      on ALPHA/AXP systems running OpenVMS.  Use the deccmake.com files to
      create jed & slang.


Changes since 0.97-3
   1.  New intrinsic functions:
         set_color_object: Associate a foreground/background color pair with
	    an integer, e.g., set_color_object (31, "green", "red");
	 set_column_colors: Allows one to display the columns of a buffer in
	    different colors.  For example:
	    
	       set_color_object (31, "green", "white");
	       set_color_object (32, "red", "white");
	       set_column_colors (31, 1, 40);
	       set_column_colors (32, 41, 80);
	    
	    Display columns 1 to 40 in green/white and columns 41 to 80 in
	    red on white.  This operates on a buffer by buffer basis does
	    not work when there is syntax highlighting already associated
	    with the buffer.
	    
	    This function is only useful when the buffer consists of data
	    organized in columns, e.g., columns of numbers, dired mode,
	    rmail mode, etc...
	    
	 str_replace: replace substrings in strings

   2.  In XJed, set_color("normal", "foreground-color", "background-color"),
       now works.  This means it is nolonger necessary to mess with
       .Xdefaults to set the background color. 

   3.  Small problem with expansion of symbolic links fixed.
   4.  It is now possible to set the color used for messages and errors.
       This is accomplished by using, e.g.,
       
            set_color ("message", "blue", "white");
            set_color ("error", "red", "white");

   5.  A problem with info failing under VMS has been fixed.
   
Changes since 0.97-2

   1.  GPM mouse support under Linux.  This provides jed with complete mouse
       support (dragging, etc...) under the Linux console (See mouse.txt).
       
   2.  Mouse support under MSDOS.  Read doc/mouse.txt for information.
   
   3.  Fixed a keymap problem in Xjed (specifically for Ctrl-_ and Function
       keys).

Changes since 0.97-1

   1.  `:' key now overwrites instead of inserts in overwrite mode
   2.  Fixed tiny problem with indentation of preprocessor lines when 
       the colon is pressed.
   3.  Corrected the omission of the closing `"' in abbrmisc.sl.
   4.  Problem with replace_across_buffer_files corrected.
   5.  If a file is edited for which one does not have write permission,
       the buffer is made read-only.
   6.  Termcap nolonger used.  JED is now exclusively terminfo.
   
Changes since 0.97-0

   1.  Fixed Xjed problem of cutting and pasting with other X applications.
   
This file documents changes and new features found in JED
Changes since 0.96-2:

  -20. A bug introduced by `-18' beow that prevented searches from working
       properly when using a macro has been fixed.
       
  -19. `dired' modified such that ^K nolonger runs the function
       `dired_kill_line'.  Instead, one must do:
       
           define dired_hook ()
	   {
	     local_unsetkey ("^K");
	     local_setkey ("dired_kill_line", "^K");
	   }
	 
	See jed.rc where this is performed.

  -18. RETURN key may be used to continue searches.  Also, matches are
       highlighted.  

  -17. Variable `No_Backups' added to control whether or not JED is to
       create backup files.
       
  -16. Command line argument parsing modified (in site.sl) to make it easier 
       to write non-interactive scripts, e.g.,
       
          jed -script my-script.sl file1 file2 ...
	  
       Basically, `-script' simply loads the next argument (my_script.sl).
       It is up to the script file to interpret the remaining arguments.
       See doc/script.txt for more info.

  -15. Trivial modification that allow JED to become a GNU-info reader 
       by using: 
  
         `alias info jed -f info_reader'    (Unix csh)
	 $ info :== jed -f info_reader      (VMS)

  -14. A VMS bug fixed.  Specifically, the getkey AST is now disabled while
       the main thread is accessing the keyboard buffer.

  -13. NEW abbrev mode.  This is a major rewrite of the old abbrev mode.  See
       jed/doc/abbrev.txt for details.

  -12. `read_string_with_completion' added to read a string in the mini buffer
       using a list of strings for completion.

  -11. Major change in S-Lang library removes the need for functions such as
       `free_array'.  As a result, this function has been removed.
       
  -10. abbrev mode.  This differs from `dabbrev' in the sense that you can
       define global and local abbreviations and use them.  The function
       `toggle_abbrev' may be used to turn the mode on/off.  See abbrev.sl
       for details.
       
   -9. mousex.sl package adds mouse routines to any terminal using the XTerm
       client mouse protocol.  Such terminals include the Linux console
       running selection as well as XTerm itself.  Note: this could be made
       available across a dialup line from a PC using MS-Kermit, Procomm,
       etc... if someone would write the appropriate mouse TSR.

   -8. Added `tex_ldots' binding that converts three `.' to \ldots.  
   
   -7. `replace_across_buffer_files' added.  This function allows the user
        to replace a string across all buffers attached to a file.  It is 
	interactive.
       
   -6. Book marks added: `bkmrk_goto_mark' and `bkmrk_set_mark'
       These functions allow the user to set up to 10 bookmarks (0-9)
       and return to a previously set book mark from any buffer.
       These marks are implemented using new jed intrinsics:
       
          `user_mark_buffer'  : returns buffer name associtated with mark 
	  `goto_user_mark'    : goto position specified by mark
	  `create_user_mark'  : returns a mark at the current position
	  
   -5. Automatic detection of ``non-native'' line endings.  On Unix, if a 
       file is read in with ^Ms at the end of lines, it is flagged such that
       writing out the file will preserve the line ending attributes.  A `C' 
       will appear on the status line to indicate this fact.  On DOS, etc...
       if a file is read in without the ^M, it is flagged and an `L' will
       appear on the status line.  Use the function `toggle_crmode'
       to change the attribute.
       
   -4A. New ways added to facilitate associating modes with files:
   
         a.  add_mode_for_extension ("c", "c++");
	     This asscoiates c_mode with a file named something.c++.
	 b.  If top line of file contains something like: -*- mode -*-
	
       Note that in both cases the mode argument must omit the `_mode' part
       of the name.  In fact, all modes now have names that end in `_mode'.
       
   -4B. `fortran' and `dcl' have been renamed `fortran_mode' and `dcl_mode'.

   -3. C mode indenting improved.
   -2. Writing to terminal under VMS SIGNIFICANTLY improved.  Basically I
	just bypassed the VAXC buffered stdio routines in favor of my own.
	This might improve performance for Unix systems as well.
   -1. Emacs style completion added-- press tab to show completions, press
        space to cycle through them.  Note that pressing PageUp/Down keys
	will scroll the completion buffer from the minibuffer.
    0. Bug fixes
    1. Massive restructuring.  Keymaps, Searching, and Terminal I/O moved to
	S-Lang. 
    2. color syntax highlighting in FORTRAN, TeX, and C modes.
    3. TeX mode enhanced--- more to come.
    4. ``menu'' bar can now be hidden-- see jed.rc.
    5. More hooks: c_mode_hook, tex_mode_hook, text_mode_hook, wrap_hook
    6. Better documentation on hooks (see doc/hooks.txt).
    7. showkey binding changed to `Ctrl-H k'.  Also rectangle commands are
       now bound in emacs.sl to emacs bindings.
    8. Mute (Dead or accent) key support added.  See jed.rc
    9. gzipped info file support added for MSDOS
   10. Alt key processing for X-Windows fixed.
   11. Significant additions to dired, e.g, `~' flags all backup files.
   12. Visible bell add to systems that support it (Xjed, pc and OS/2,
       Linux, etc...).

Changes since 0.96-1:

    1. bug fix regarding regular expressions
    2. Indentation of data statment in fortran mode fixed.
    3  Documentation is improving....
    4. dabbrev mode added (ESC / expands current word based on other
         words in the buffer.)
    5. Now possible to control Xjed syntax highlighting from .Xdefaults file.
    6. Improvements to S-Lang ==> improvements to JED
    7. rmail.sl: added `Rmail_Dont_Reply_To' variable to suppress unwanted
         CCs.  For example, I have:
	 
       variable Rmail_Dont_Reply_To = 
      "davis@amy,davis@pacific.mps.ohio-state.edu,davis@amy.tch.harvard.edu";
	 
       in my .jedrc file.

Changes since 0.96-0:

    1. set_color_escape_sequence function added to exploit JED's ability
       to do color syntax highighting on more exotic color terminals.
    2. Preprocessor lines can now be highlighted.  See jed.rc as well as
       doc/syntax.txt for details.
    3. Tiny bug fixes:
        * bug in info.sl found caused by info file that do not end with a 
	   newline character
	* isearch.sl is again able to repeat isearch backwards by pressing ^R.
	   This bug was introduced in 0.96-0.
	* EDT special insert now works.
	* Archive bit now set when JED creates a new file on MSDOS (only 
	   jed.exe had this problem--- not jed386.exe)
    4. Support for CRAY added.
    5. If JED is started without a filename specified, the brief message will
       be displayed warning the user that the scratch buffer will not be
       saved.
    6. On MSDOS, rgrep.exe (recursive grep) is now distributed.  ON Unix,
       simply do `make rgrep' to get a recursive highlighting grep.
       
   Highlights of Major changes for 0.96:
   
    1. OS/2 versions available!!
    2. Color syntax highlighting in C mode.
    3. Much improved indentation for C code.
    4. Improved Fortran mode
    5. Up to 20% faster loading 
    6. jed386.exe distributed with DOS version and runs
        in a Windows DOS box (provides up to 256 Megs of Virtual memory)

Changes since 0.95-8b:
   
    0. JED now compiles and runs under OS/2!
    
       OS/2 executables are zipped in the pc distribution.  See install.pc
       for more information.

       [ I would like to acknowledge John Burnell (johnb@huia.grace.cri.nz)
	 for his work on the OS/2 port.  In addition, I am very grateful to
	 Darrel Hankerson (hankedr@mail.auburn.edu), who is responsible for
	 the Microsoft C and emx/gcc versions, as well Dominik Wujastyk
	 (ucgadkw@ucl.ac.uk) for his contribution to the OS/2 version. ]


    1. re_fsearch and re_bsearch functions have been changed to return
       1 + the length of the match, if a match was found, or return 0 if no
       match was found.  For example, `re_fsearch("$")' matches the end of a
       line which, strictly speaking, is a match with 0 length.
       
    2. Use `jed -l preparse' to pre-parse the .sl files for faster loading.
       `jed -l preprocess' is now obsolete.  Again, read install.*.

Changes since 0.95-7b:

    1. Color syntax highlighting added to C mode.  It is possible to
       separately color keywords, strings, numbers, delimeters, comments,
       and operators.  This even works on VMS and Unix systems when using
       character based color terminals such as NCSA telnet, MS-Kermit, 
       etc...  See doc/color.txt and doc/syntax.txt for more information.
       
    2. byte compiling changed to allow preprocessing only.  Simply
       preprocessing is recommended on systems where more than one type of
       JED executable will share the same set of *.slc library files (e.g.,
       Unix where both JED and XJed might be running).  Simply do:
       
          jed -batch -l preprocess.sl
	  
       On MSDOS systems with only one version of jed.exe running, use:
       
          jed -batch -l bytecomp.sl
	  

Changes since 0.95-6b:

    1. It is now possible to display 24 hour time on the status line.
       Earlier versions were capable of displaying on AM/PM format.

    2. -tmp command line switch added.  This means that the current buffer
       is to not be autosaved or backed up.  This is suitable when JED is
       used as an editor for elm, etc...
       
    3. DJGPP version fixed so that JED can read embedded ^M characters and
       ^Z characters while in text mode.  Of course the ^M is striped if it
       preceeds a line feed character.
       
    4. Improved fortran mode.  The fortran mode is the first mode that I ever
       wrote for JED using S-Lang.  Since then, I have had alot of experience
       with S-Lang and recently I found myself programming FORTRAN again, so
       I rewrote it.  Do `Ctrl-H f fortran' for details.
       
Changes since 0.95-5b:

    0. XJED now compiles as a DECWindows executable under VMS.
    
    1. The interactive replace function has been renamed to `replace_cmd' and
       is now implemented in S-lang. It can now search/replace across lines.
       For most users, this change should be transparent.
       
    2. New functions: 
    
          set_buffer_no_backup ()
          set_buffer_no_autosave ()
    
    3. XJed mouse changes:

          Clicking on a window status line causes a different behavior.
	  Specifically:

                left:  switch to next buffer   
		middle:  split the window
		right:  delete the window

          For example, one can quickly move from one buffer to the next by
	  simply clicking on the status line with the left mouse button.

    4. XJed can nor distinguish shifted and control function keys.  This
       enables one to bind Shift arrow keys and Control arrow keys to
       different functions.
     
    5. Improved indenting in C-mode.
    6. New variables added:
    
          Default_Mode: default mode for a file of unknown extension.
	  Startup_With_File: if non-zero, JED will prompt for a filename
	     if none was specified on the command line.
    
    
Changes since 0.95b for 0.95-5b.

    1. Bug fixes:
         rectangular cut and paste (when cutting single char region from
	    empty line)
	 minor color problem fixed when scrolling on color terminals
	 edt_line function fixed  (kp0 key)
	 minor rmail mode changes
	 backward RE-search fix.
	 info mode bug fixed that deals with multiple word node names
	 typo in menu.sl corrrected. The type was causing a STACK_UNDERFLOW
	    error to be generated.
	 parenthesis blinking bug fixed that manifested itself when
	    inserting a parenthesis on a line that was automatically
	    horizontally panned.

    2. RETURN now selects menu item in info mode.
    3. Now possible to search/replace strings that span multiple lines.

    4. In XJed, it is now possible to distinguish between Shift and Control
         function and arrow keys.  Also, every function key now returns
	 something (use the function x_set_keysym to change what a function
	 returns) 

    5. In XJed, clicking on the status line of a window now switches to a
	 new buffer for that window.  This makes it possible to conveniently
	 cycle through all buffers.
	 
    6. rgrep flag now added so that directory links may be followed.  Rgrep
         is a recursive, highlightin grep that is distributed with JED.  See
	 doc/rgrep.doc for more information.

    7. The search forward/backwad commands are now S-Lang functions which
	 means that they may be changed easily.
	 
    8. New function for PC versions (DJGPP too!): find_binary_file.
         This function will prompt for a filename and find it in binary
	 mode.  A binary mode file is indicated by a `Z' status line flag.
	 This means that when the file is saved, it will be saved in binary
	 mode as well.  This function provides a transparent way to edit
	 binary files under DOS.
	 
    9. JED now understands 8 bit control sequences generated by terminals in
         8 bit mode such as DEC VTXXX.  This is particularly relevant when
	 using JED on VMS.

Changes for version 0.95 (since 0.94-2)

    0. JED distribution is different.  If you have built JED in the past,
       please read the install files because things have changed.
    1. Support for column numbers on status line (set LINENUMBERS = 2)
    2. X-Terminal (and DECWindows) version (make xjed).  See doc/xjed.doc
    3. Elm like read/write mail (see rmail.txt-- this is considered ALPHA,
        by default it is not enabled.)
    4. Additional support for Color terminals (allow different colors for
        modelines, regions, etc...)
    5. MUCH Improved support for colors on PC versions (looks MUCH nicer,
         see how it is used in jed.rc)
    6. By popular demand, a new function `describe_bindings'  is available
         that dumps the keybindings for the current keymap.
    7. New variable Stratup_With_File can be set to prompt user for
         a filename if none is specified on the command line.
    8. VMS: A convenient new interface to VMSHELP is now available.  This
         overcomes most of the shortcomings of the VMS HELP command.  
	 It is bound to Ctrl-H M.
    9. search_forward + search_backward can now search for strings spanning
         multiple lines.  Also, looking_at can see across multiple lines.

Also see changes listed in the next section.

*********  Important **************

The S-Lang preprocessing conditional compilation declarations have changed.
Now, constructs such as:

#ifdef UNIX
  ..
#else
  ..
#endif

are used.  This means  that you may have to edit you personal jed.rc file.
Instead, I encourage you to simply copy the jed.rc file shipped with this
version and add your own extensions to it.

************************************
New changes SINCE 0.94-0:

    1. New buffer flags:  no backup and no autosave
    2. #ifdef #else #endif preprocessing
    3. skip_chars, bskip_chars changed.  Now, say, `skip_chars("^a-z")' will
         skip ALL characters EXCEPT in range `a-z'.
    4. Default EDT binding of TAB changed to `indent_line'.  See jed.rc
         to change it back.
    5. `occur' function now uses regular expression searches.
    6. Special `linux.sl' file for Linux systems.  See `install.unx'.
    7. New intrinsics: buffer_visible, pop2buf_whatbuf, bury_buffer,
                       regexp_nth_match,
    8. `window_info' intrinsic modified to take a parameter.
    9. `search_file' intrinsic modified for regular expression search.
   10. New support for saving and reusing keyboard macros.  This feature
       has not been exploited yet!
   11. By popluar request:  Highlighting only occurs in the CURRENT window.
   12. Miscellaneous bug fixes.
   
There are also some new S-Lang builtin intrinsic functions:

    1. string_match: preforms RE match on a string
    2. string_match_nth: returns information about previous match
    3. Unix specific intrinsics:
    
          unix_kill  :  sends a signal to a process
	  unix_ctime :  converts a time value to a string representation
	  stat_file  :  performs `stat' on a given file.
	  lstat_file :  like stat but returns information about a link
	  stat_struct:  returns information from previous stat call.
	  chown      :  change owner/group of a file
	  chmod      :  change protections of file.
	  
    4. It is now possible to perform assignments in variable declaration
       statements:
       
          variable i = 10, y = 20.87;
	  
    5. && and || are now flagged as errors.
    
******************************    
New since 0.94-0 : ------------------------------------------------------------

PageUP/Down functions scroll other window if called from the minibuffer.

Some defaults changed in jed.rc:  Display line numbers on the status line
  is now the default.

Regular expression matching (search/replace):
     re_search_forward, re_search_backward, query_replace_match
    
New S-Lang intrinsics include:

     prefix_argument()  : returns value of prefix argument.
     set_status_line(format, flag) : enables user to customize status line
     re_fsearch, re_bsearch, replace_match  : regular expression intrinsics
     getpid  : returns process pid

New user variables:

DISPLAY_TIME  if non-zero, allows %t processing in status line format.
ALT_CHAR   (ibmpc only) enables Alt-key processing.  Specifically, setting
           this to 27 (Ascii 27) causes ALT-X to generate ESCAPE-X, etc...
	   
C_BRA_NEWLINE if non-zero, insert a newline before inserting '{' in C-mode.
           This was the default in previous versions but it now user
	   selectable.

------------------------------------------------------------------------------
New features in 0.94-0

0.94-0 does not really add any new functionality to 0.93.  However, there is a
major change:  S-Lang is now very C-Like.  (It can still be programmed as
RPN though, see e.g., info.sl)  By C-like, I mean that you can write S-Lang
functions that look like:

    define sum(a, b)    % sum integers from a to b
    {
      variable s, i;
      
      s = 0;
      for (i = a; i <= b; i++) s += i;
      return (s);
    }
    
S-Lang has not lost any functionality, rather, its new syntax makes it more
accessable to others.

The new philosophy is that JED is an editor which just happens to embed
S-Lang as its extension language.  Actually, this has always been the
philosophy but not it is even more clear cut.  To compile the new JED (0.94)
you will need to pick up /pub/slang/slang.tar.Z as well.  This is the S-Lang
interpreter code to be compiled as a library and linked in with JED.

The only other ``major'' changes are:

  1. do_while construct added:
  
     do { stuff... } while (expression);
     
  2. `defined?' replaced by `is_defined'.
  3. Temporary global variables $0, $1, ... $9 added for convenience and
     clarity.
  4. Comment delimeter changed from `;' to `%'.
  5. Arrays are indexed from 0 not 1.
  6. \??? is now Octal ??? NOT decimal ???.  \d??? is decimal.
  7. Sprintf added to intrinsics (formats strings)
     
In addition, you should ``bytecompile'' the .sl files after installing the
new version of jed.  It is this simple:

    jed -batch -l bytecomp.sl

