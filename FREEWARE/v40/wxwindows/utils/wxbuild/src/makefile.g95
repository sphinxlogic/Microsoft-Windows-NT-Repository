# Makefile for UNIX wxBuilder
# Valid targets: xview, motif or hp. These should produce
# the executables wxbuild_ol, wxbuild_motif and wxbuild_hp respectively.

WXDIR = ../../..

# All common UNIX compiler flags and options are now in
# this central makefile.
include $(WXDIR)/src/makeg95.env

WXBUILDDIR = ..

PROLOGDIR = $(WXDIR)/utils/prologio
PROLOGINC = $(PROLOGDIR)/src

RCPARSDIR = $(WXDIR)/utils/rcparser
RCPARSINC = $(RCPARSDIR)/src

DIBDIR    = $(WXDIR)/utils/dib
DIBINC    = $(DIBDIR)

IMAGEDIR = #$(WXDIR)/utils/image
IMAGEINC = #$(IMAGEDIR)/src
IMAGELIB = #$(IMAGEDIR)/lib/libimage$(GUISUFFIX).a

TREEDIR = $(WXDIR)/utils/wxtree
TREEINC = $(TREEDIR)/src
TREELIB = $(TREEDIR)/lib/libwxtree$(GUISUFFIX).a

OBJECTS = $(OBJDIR)/wxbuild.$(OBJSUFF) $(OBJDIR)/bapp.$(OBJSUFF) $(OBJDIR)/bmenu.$(OBJSUFF) $(OBJDIR)/bframe.$(OBJSUFF) $(OBJDIR)/bsubwin.$(OBJSUFF) \
 $(OBJDIR)/bgencpp.$(OBJSUFF) $(OBJDIR)/namegen.$(OBJSUFF) $(OBJDIR)/bitem1.$(OBJSUFF) $(OBJDIR)/bitem2.$(OBJSUFF) $(OBJDIR)/bwin.$(OBJSUFF) $(OBJDIR)/btoolbar.$(OBJSUFF) \
 $(OBJDIR)/bactions.$(OBJSUFF) $(OBJDIR)/btree.$(OBJSUFF) $(OBJDIR)/bgdi.$(OBJSUFF) $(OBJDIR)/rcload.$(OBJSUFF)

INC = $(COMPPATHS) -I$(WXDIR)/include/msw -I$(WXDIR)/include/base -I$(DIBINC) -I$(RCPARSINC) -I$(PROLOGINC) -I$(TREEINC) #-I$(IMAGEINC)

XVIEWLDLIBS = -lwxtree_ol -lwx_ol -lxview -lolgx -lX11 -lm $(COMPLIBS)
MOTIFLDLIBS = -lwxtree_motif -lwx_motif -lXm -lXt -lX11 -lm $(COMPLIBS)
#HPLDLIBS = -lwxtree_hp -lwx_hp -lXm -lXt -lX11 -lm $(HPCOMPLIBS)
# Default
#LDLIBS=$(XVIEWLDLIBS)

CPPFLAGS = $(XINCLUDE) $(INC) $(OPTIONS) $(GUI) -DDEBUG='$(DEBUG)' $(DEBUGFLAGS) $(WARN) $(OPT)
LOCAL_FLAGS = -L$(WXDIR)/lib -L$(TREEDIR)/lib -L$(RCPARSDIR)/lib #-L$(IMAGEDIR)/lib

all:	$(OBJDIR) wxbuild$(GUISUFFIX)

$(OBJDIR):
	mkdir $(OBJDIR)

bwin.h: bactions.h

$(OBJDIR)/bapp.$(OBJSUFF): bapp.$(SRCSUFF) bapp.h wxbuild.h bmenu.h bsubwin.h bframe.h namegen.h bwin.h bactions.h btree.h
	$(CC) -c $(CPPFLAGS) -o $@ bapp.$(SRCSUFF)

$(OBJDIR)/wxbuild.$(OBJSUFF): wxbuild.$(SRCSUFF) wxbuild.h bapp.h bmenu.h bsubwin.h bframe.h namegen.h bwin.h\
  rcload.h
	$(CC) -c $(CPPFLAGS) -o $@ wxbuild.$(SRCSUFF)

$(OBJDIR)/bmenu.$(OBJSUFF): bmenu.$(SRCSUFF) wxbuild.h bapp.h bmenu.h bframe.h namegen.h bwin.h
	$(CC) -c $(CPPFLAGS) -o $@ bmenu.$(SRCSUFF)

$(OBJDIR)/bframe.$(OBJSUFF): bframe.$(SRCSUFF) wxbuild.h bapp.h bmenu.h bframe.h bsubwin.h namegen.h bwin.h bactions.h
	$(CC) -c $(CPPFLAGS) -o $@ bframe.$(SRCSUFF)

$(OBJDIR)/bsubwin.$(OBJSUFF): bsubwin.$(SRCSUFF) wxbuild.h bapp.h bsubwin.h bframe.h namegen.h bwin.h
	$(CC) -c $(CPPFLAGS) -o $@ bsubwin.$(SRCSUFF)

$(OBJDIR)/bitem1.$(OBJSUFF): bitem1.$(SRCSUFF) wxbuild.h bapp.h bsubwin.h bframe.h namegen.h bitem.h bwin.h bactions.h
	$(CC) -c $(CPPFLAGS) -o $@ bitem1.$(SRCSUFF)

$(OBJDIR)/bitem2.$(OBJSUFF): bitem2.$(SRCSUFF) wxbuild.h bapp.h bsubwin.h bframe.h namegen.h bitem.h bwin.h bactions.h
	$(CC) -c $(CPPFLAGS) -o $@ bitem2.$(SRCSUFF)

$(OBJDIR)/bwin.$(OBJSUFF): bwin.$(SRCSUFF) wxbuild.h bwin.h bactions.h bactions.h
	$(CC) -c $(CPPFLAGS) -o $@ bwin.$(SRCSUFF)

$(OBJDIR)/btoolbar.$(OBJSUFF): btoolbar.$(SRCSUFF) wxbuild.h bwin.h
	$(CC) -c $(CPPFLAGS) -o $@ btoolbar.$(SRCSUFF)

$(OBJDIR)/bgencpp.$(OBJSUFF): bgencpp.$(SRCSUFF) wxbuild.h bapp.h bframe.h bgencpp.h namegen.h bwin.h
	$(CC) -c $(CPPFLAGS) -o $@ bgencpp.$(SRCSUFF)

$(OBJDIR)/namegen.$(OBJSUFF): namegen.$(SRCSUFF) namegen.h
	$(CC) -c $(CPPFLAGS) -o $@ namegen.$(SRCSUFF)

$(OBJDIR)/bactions.$(OBJSUFF): bactions.$(SRCSUFF) bactions.h wxbuild.h bwin.h
	$(CC) -c $(CPPFLAGS) -o $@ bactions.$(SRCSUFF)

$(OBJDIR)/bgdi.$(OBJSUFF): bgdi.$(SRCSUFF) bgdi.h wxbuild.h bwin.h
	$(CC) -c $(CPPFLAGS) -o $@ bgdi.$(SRCSUFF)

$(OBJDIR)/btree.$(OBJSUFF): btree.$(SRCSUFF) btree.h bwin.h wxbuild.h bapp.h
	$(CC) -c $(CPPFLAGS) -o $@ btree.$(SRCSUFF)

$(OBJDIR)/rcload.$(OBJSUFF): rcload.$(SRCSUFF) rcload.h
	$(CC) -c $(CPPFLAGS) -o $@ rcload.$(SRCSUFF)


wxbuild$(GUISUFFIX):	$(OBJECTS) wxbuild.$(RSCSUFF) $(WXLIB) $(TREELIB)
	$(CC) $(LOCAL_FLAGS) $(LDFLAGS) -o wxbuild$(GUISUFFIX)$(EXESUFF) wxbuild.$(RSCSUFF) $(OBJECTS) -lrcparser $(LDLIBS) -lwxtree 

wx:
	cd $(WXDIR)/src/x; $(MAKE) -f makefile.unx

HTMLDIR=/home/hardy/html/wx/manuals
docs:	ps xlp txt
ps:	$(WXBUILDDIR)/docs/wxbuild.ps
txt:	$(WXBUILDDIR)/docs/wxbuild.txt
xlp:	$(WXBUILDDIR)/docs/wxbuild.xlp
html:	$(HTMLDIR)/wxbuild/wxbuild_contents.html

$(WXBUILDDIR)/docs/wxbuild.xlp:	$(WXBUILDDIR)/docs/wxbuild.tex
	cd ../docs; tex2rtf wxbuild.tex tmp.xlp -twice -xlp
	sed -e "s/WXHELPCONTENTS/wxBuilder Manual/g" < $(WXBUILDDIR)/docs/tmp.xlp > $(WXBUILDDIR)/docs/wxbuild.xlp
	/bin/rm -f $(WXBUILDDIR)/docs/tmp.xlp

$(WXBUILDDIR)/docs/wxbuild.dvi:	$(WXBUILDDIR)/docs/wxbuild.tex
	cd ../docs; latex wxbuild; latex wxbuild; makeindex wxbuild; latex wxbuild

$(WXBUILDDIR)/docs/wxbuild.ps:	$(WXBUILDDIR)/docs/wxbuild.dvi
	cd ../docs; dvips -f -r < wxbuild.dvi > wxbuild.ps

$(WXBUILDDIR)/docs/wxbuild.txt:	$(WXBUILDDIR)/docs/wxbuild.dvi
	cd $(WXBUILDDIR)/docs; dvi2tty wxbuild.dvi > wxbuild.txt

$(HTMLDIR)/wxbuild/wxbuild_contents.html:	$(WXBUILDDIR)/docs/wxbuild.tex
	cd ../docs; tex2rtf wxbuild.tex $(HTMLDIR)/wxbuild/wxbuild.html -twice -html

wxbuild.res:    wxbuild.rc

clean:
	rm -f $(OBJDIR)/*.$(OBJSUFF) test$(GUISUFFIX) wxbuild$(GUISUFFIX).exe core *.res *.rsc



