# Makefile generated by imake - do not edit!
# $XConsortium: imake.c,v 1.65 91/07/25 17:50:17 rws Exp $
#
# The cpp used on this machine replaces all newlines and multiple tabs and
# spaces in a macro expansion with a single space.  Imake tries to compensate
# for this, but is not always successful.
#

#
# (c) Copyright 1989, 1990, 1991, 1992 OPEN SOFTWARE FOUNDATION, INC.
# ALL RIGHTS RESERVED
#
#
# Motif Release 1.2
#
#   $RCSfile: Imake.tmpl,v $ $Revision: 11.2 $ $Date: 1994/07/25 16:55:13 $

# -------------------------------------------------------------------------
# Makefile generated from "Imake.tmpl" and </tmp/IIf.a06030>
# $XConsortium: Imake.tmpl,v 1.139 91/09/16 08:52:48 rws Exp $
#
# Platform-specific parameters may be set in the appropriate <vendor>.cf
# configuration files.  Site-specific parameters should be set in the file
# site.def.  Full rebuilds are recommended if any parameters are changed.
#
# If your C preprocessor does not define any unique symbols, you will need
# to set BOOTSTRAPCFLAGS when rebuilding imake (usually when doing
# "make World" the first time).
#

# -------------------------------------------------------------------------
# site-specific configuration parameters that need to come before
# the platform-specific parameters - edit site.def to change

# site:  $XConsortium: site.def,v 1.2 91/07/30 20:26:44 rws Exp $

# -------------------------------------------------------------------------
# platform-specific configuration parameters - edit sun.cf to change

# platform:  $XConsortium: sun.cf,v 1.72.1.1 92/03/18 13:13:37 rws Exp $

# operating system:  SunOS 4.1.1

# $XConsortium: sunLib.rules,v 1.7 91/12/20 11:19:47 rws Exp $

.c.o:
	$(CC) -c $(CFLAGS) $*.c

# -------------------------------------------------------------------------
# site-specific configuration parameters that go after
# the platform-specific parameters - edit site.def to change

# site:  $XConsortium: site.def,v 1.2 91/07/30 20:26:44 rws Exp $

            SHELL = /bin/sh

              TOP = .
      CURRENT_DIR = .

               AR = ar clq
  BOOTSTRAPCFLAGS =
               CC = gcc -fstrength-reduce -fpcc-struct-return
               AS = as

         COMPRESS = compress
              CPP = /lib/cpp $(STD_CPP_DEFINES)
    PREPROCESSCMD = gcc -fstrength-reduce -fpcc-struct-return -E $(STD_CPP_DEFINES)
          INSTALL = install
               LD = ld
             LINT = lint
      LINTLIBFLAG = -C
         LINTOPTS = -axz
               LN = ln -s
             MAKE = make
               MV = mv
               CP = cp

           RANLIB = ranlib
  RANLIBINSTFLAGS =

               RM = rm -f
            TROFF = psroff
         MSMACROS = -ms
              TBL = tbl
              EQN = eqn
     STD_INCLUDES =
  STD_CPP_DEFINES =
      STD_DEFINES =
 EXTRA_LOAD_FLAGS = -B/usr/bin/
  EXTRA_LIBRARIES =
             TAGS = ctags

    SHAREDCODEDEF = -DSHAREDCODE
         SHLIBDEF = -DSUNSHLIB

    PROTO_DEFINES =

     INSTPGMFLAGS =

     INSTBINFLAGS = -m 0755
     INSTUIDFLAGS = -m 4755
     INSTLIBFLAGS = -m 0644
     INSTINCFLAGS = -m 0444
     INSTMANFLAGS = -m 0444
     INSTDATFLAGS = -m 0444
    INSTKMEMFLAGS = -g kmem -m 2755

      PROJECTROOT = /usr/X11

     TOP_INCLUDES = -I$(INCROOT)

      CDEBUGFLAGS = -O
        CCOPTIONS =

      ALLINCLUDES = $(INCLUDES) $(EXTRA_INCLUDES) $(TOP_INCLUDES) $(STD_INCLUDES)
       ALLDEFINES = $(ALLINCLUDES) $(STD_DEFINES) $(EXTRA_DEFINES) $(PROTO_DEFINES) $(DEFINES)
           CFLAGS = $(CDEBUGFLAGS) $(CCOPTIONS) $(ALLDEFINES)
        LINTFLAGS = $(LINTOPTS) -DLINT $(ALLDEFINES)

           LDLIBS = $(SYS_LIBRARIES) $(EXTRA_LIBRARIES)

        LDOPTIONS = $(CDEBUGFLAGS) $(CCOPTIONS) $(LOCAL_LDFLAGS) -L$(USRLIBDIR)

   LDCOMBINEFLAGS = -X -r
      DEPENDFLAGS =

        MACROFILE = sun.cf
           RM_CMD = $(RM) *.CKP *.ln *.BAK *.bak *.o core errs ,* *~ *.a .emacs_* tags TAGS make.log MakeOut

    IMAKE_DEFINES =

         IRULESRC = $(CONFIGDIR)
        IMAKE_CMD = $(IMAKE) -DUseInstalled -I$(IRULESRC) $(IMAKE_DEFINES)

     ICONFIGFILES = $(IRULESRC)/Imake.tmpl $(IRULESRC)/Imake.rules \
			$(IRULESRC)/Project.tmpl $(IRULESRC)/site.def \
			$(IRULESRC)/$(MACROFILE) $(EXTRA_ICONFIGFILES)

# -------------------------------------------------------------------------
# X Window System Build Parameters
# $XConsortium: Project.tmpl,v 1.138 91/09/10 09:02:12 rws Exp $

# -------------------------------------------------------------------------
# X Window System make variables; this need to be coordinated with rules

          PATHSEP = /
        USRLIBDIR = /usr/X11/lib
           BINDIR = /usr/X11/bin
          INCROOT = /usr/X11/include
     BUILDINCROOT = $(TOP)
      BUILDINCDIR = $(BUILDINCROOT)/X11
      BUILDINCTOP = ..
           INCDIR = $(INCROOT)/X11
           ADMDIR = /usr/adm
           LIBDIR = $(USRLIBDIR)/X11
        CONFIGDIR = /usr/X11/lib/X11/config
       LINTLIBDIR = $(USRLIBDIR)/lint

          FONTDIR = $(LIBDIR)/fonts
         XINITDIR = $(LIBDIR)/xinit
           XDMDIR = $(LIBDIR)/xdm
           TWMDIR = $(LIBDIR)/twm
          MANPATH = /usr/X11/man
    MANSOURCEPATH = $(MANPATH)/man
        MANSUFFIX = n
     LIBMANSUFFIX = 3
           MANDIR = $(MANSOURCEPATH)$(MANSUFFIX)
        LIBMANDIR = $(MANSOURCEPATH)$(LIBMANSUFFIX)
           NLSDIR = $(LIBDIR)/nls
        PEXAPIDIR = $(LIBDIR)/PEX
      XAPPLOADDIR = $(LIBDIR)/app-defaults
       FONTCFLAGS = -t

     INSTAPPFLAGS = $(INSTDATFLAGS)

            IMAKE = imake
           DEPEND = makedepend
              RGB = rgb

            FONTC = bdftopcf

        MKFONTDIR = mkfontdir
        MKDIRHIER = /bin/sh $(BINDIR)/mkdirhier

        CONFIGSRC = $(TOP)/config
       DOCUTILSRC = $(TOP)/doc/util
        CLIENTSRC = $(TOP)/clients
          DEMOSRC = $(TOP)/demos
           LIBSRC = $(TOP)/lib
          FONTSRC = $(TOP)/fonts
       INCLUDESRC = $(TOP)/X11
        SERVERSRC = $(TOP)/server
          UTILSRC = $(TOP)/util
        SCRIPTSRC = $(UTILSRC)/scripts
       EXAMPLESRC = $(TOP)/examples
       CONTRIBSRC = $(TOP)/../contrib
           DOCSRC = $(TOP)/doc
           RGBSRC = $(TOP)/rgb
        DEPENDSRC = $(UTILSRC)/makedepend
         IMAKESRC = $(CONFIGSRC)
         XAUTHSRC = $(LIBSRC)/Xau
          XLIBSRC = $(LIBSRC)/X
           XMUSRC = $(LIBSRC)/Xmu
       TOOLKITSRC = $(LIBSRC)/Xt
       AWIDGETSRC = $(LIBSRC)/Xaw
       OLDXLIBSRC = $(LIBSRC)/oldX
      XDMCPLIBSRC = $(LIBSRC)/Xdmcp
      BDFTOSNFSRC = $(FONTSRC)/bdftosnf
      BDFTOSNFSRC = $(FONTSRC)/clients/bdftosnf
      BDFTOPCFSRC = $(FONTSRC)/clients/bdftopcf
     MKFONTDIRSRC = $(FONTSRC)/clients/mkfontdir
         FSLIBSRC = $(FONTSRC)/lib/fs
    FONTSERVERSRC = $(FONTSRC)/server
     EXTENSIONSRC = $(TOP)/extensions
         XILIBSRC = $(EXTENSIONSRC)/lib/xinput
      PHIGSLIBSRC = $(EXTENSIONSRC)/lib/PEX

# $XConsortium: sunLib.tmpl,v 1.14.1.2 92/11/11 09:55:02 rws Exp $

SHLIBLDFLAGS = -assert pure-text
PICFLAGS = -pic

  DEPEXTENSIONLIB =
     EXTENSIONLIB = -lXext

          DEPXLIB = $(DEPEXTENSIONLIB)
             XLIB = $(EXTENSIONLIB) -lX11

        DEPXMULIB = $(USRLIBDIR)/libXmu.sa.$(SOXMUREV)
       XMULIBONLY = -lXmu
           XMULIB = -lXmu

       DEPOLDXLIB =
          OLDXLIB = -loldX

      DEPXTOOLLIB = $(USRLIBDIR)/libXt.sa.$(SOXTREV)
         XTOOLLIB = -lXt

        DEPXAWLIB = $(USRLIBDIR)/libXaw.sa.$(SOXAWREV)
           XAWLIB = -lXaw

        DEPXILIB =
           XILIB = -lXi

        SOXLIBREV = 4.10
          SOXTREV = 4.10
         SOXAWREV = 5.0
        SOOLDXREV = 4.10
         SOXMUREV = 4.10
        SOXEXTREV = 4.10
      SOXINPUTREV = 4.10

      DEPXAUTHLIB = $(USRLIBDIR)/libXau.a
         XAUTHLIB =  -lXau
      DEPXDMCPLIB = $(USRLIBDIR)/libXdmcp.a
         XDMCPLIB =  -lXdmcp

        DEPPHIGSLIB = $(USRLIBDIR)/libphigs.a
           PHIGSLIB =  -lphigs

       DEPXBSDLIB = $(USRLIBDIR)/libXbsd.a
          XBSDLIB =  -lXbsd

 LINTEXTENSIONLIB = $(LINTLIBDIR)/llib-lXext.ln
         LINTXLIB = $(LINTLIBDIR)/llib-lX11.ln
          LINTXMU = $(LINTLIBDIR)/llib-lXmu.ln
        LINTXTOOL = $(LINTLIBDIR)/llib-lXt.ln
          LINTXAW = $(LINTLIBDIR)/llib-lXaw.ln
           LINTXI = $(LINTLIBDIR)/llib-lXi.ln
        LINTPHIGS = $(LINTLIBDIR)/llib-lphigs.ln

          DEPLIBS = $(DEPXAWLIB) $(DEPXMULIB) $(DEPXTOOLLIB) $(DEPXLIB)

         DEPLIBS1 = $(DEPLIBS)
         DEPLIBS2 = $(DEPLIBS)
         DEPLIBS3 = $(DEPLIBS)

#   $RCSfile: Motif.tmpl.ixi.install,v $ $Revision: 11.3 $ $Date: 1995/01/05 11:31:06 $

          SOXMREV = 1.2
          SODTREV = 1
         SOMRMREV = 1.2
         SOUILREV = 1.2
     SOACOMMONREV = 1.2
      SOSCRIPTREV = 1.2
        SOUTILREV = 1.2
      SOCREATEREV = 1.2
      SOVISUALREV = 1.2
       SOSYNTHREV = 1.2
     SOMCOMMONREV = 1.2

              XTOP = $(TOP)
              MTOP = $(TOP)
     XBUILDINCROOT = $(XTOP)
      XBUILDINCDIR = $(XBUILDINCROOT)/X11

         CLIENTSRC = $(XTOP)/clients
           DEMOSRC = $(XTOP)/demos
            LIBSRC = $(XTOP)/lib
           FONTSRC = $(XTOP)/fonts
        INCLUDESRC = $(XTOP)/X11
         SERVERSRC = $(XTOP)/server
           UTILSRC = $(XTOP)/util
        EXAMPLESRC = $(XTOP)/examples
            DOCSRC = $(XTOP)/doc
            RGBSRC = $(XTOP)/rgb
      EXTENSIONSRC = $(XTOP)/extensions

      TOP_INCLUDES = -I$(INCROOT)

      UIL_INCLUDES = -I$(USRINCDIR)/uil

      USRINCDIR = /usr/X11/include
         UIDDIR = $(LIBDIR)/uid
        TESTSRC = $(MTOP)/tests
        TESTLIB = $(TESTSRC)/lib
  GENERALSRCLIB = $(TESTSRC)/General/lib
  GENERALSRCBIN = $(TESTSRC)/General/bin
   MANUALSRCLIB = $(TESTSRC)/Manual/lib
   MANUALSRCBIN = $(TESTSRC)/Manual/bin
     AUTOSRCLIB = $(TESTSRC)/Auto/lib
     AUTOSRCBIN = $(TESTSRC)/Auto/bin
       COMMONPP = $(GENERALSRCBIN)/Commonpp
         GENRUN = $(GENERALSRCBIN)/Genrun
         MANRUN = $(GENERALSRCBIN)/Manrun

     TESTCOMSRC = $(MANUALSRCLIB)/Common

    MTOOLKITSRC = $(TOOLKITSRC)
    MINCLUDESRC = $(MTOP)/X11
        MLIBSRC = $(MTOP)/lib
     MCLIENTSRC = $(MTOP)/clients
       MDEMOSRC = $(MTOP)/demos
     MWIDGETSRC = $(MLIBSRC)/Xm
   MRESOURCESRC = $(MLIBSRC)/Mrm
         UILSRC = $(MCLIENTSRC)/uil

            UIL = uil
         DEPUIL = $(BINDIR)/uil

   XMEXTRA_LIBS =

DEPXMLIB =
XMLIB =   -lXm

DEPDTLIB =
DTLIB =   -lDtWidget

DEPMRESOURCELIB =
MRESOURCELIB =   -lMrm

DEPUILLIB =
UILLIB =   -lUil

DEPTESTCOMLIB =
TESTCOMLIB =   -lCommon

  LINTMRESOURCE = $(MRESOURCESRC)/libMrm.a
LINTXMWIDGETLIB = $(MWIDGETSRC)/llib-l/Xm.ln
     LINTXMTOOL = $(MTOOLKITSRC)/llib-lXt.ln
     LINTUILLIB = $(UILSRC)/llib-lUil.ln

      YACCFLAGS =
       UILFLAGS =

         RM_CMD = $(RM) *.CKP *.ln *.BAK *.bak *.o core errs ,* *~ *.a .emacs_* tags TAGS make.log MakeOut  *.Dat

    STD_DEFINES =

        DEPLIBS = $(DEPXMLIB) $(DEPXTOOLLIB) $(DEPXLIB) $(DEPDTLIB)

        DEPLIBS1 = $(DEPLIBS)
        DEPLIBS2 = $(DEPLIBS)
        DEPLIBS3 = $(DEPLIBS)

# -------------------------------------------------------------------------
# Imake rules for building libraries, programs, scripts, and data files
# rules:  $XConsortium: Imake.rules,v 1.123 91/09/16 20:12:16 rws Exp $

#   $RCSfile: Motif.rules,v $ $Revision: 11.1 $ $Date: 1994/07/12 16:46:02 $

# -------------------------------------------------------------------------
# start of Imakefile

# =====================================================================
# Imakefile - XBoing Version 2.4 - 29th Sep 1995 - jck@catt.rmit.edu.au
# =====================================================================

# =====================================================================
#
# $Id: Imakefile,v 1.1.1.1 1994/12/16 01:36:48 jck Exp $
# $Source: /usr5/legends/jck/xb/master/xboing/Imakefile,v $
# $Revision: 1.1.1.1 $
# $Date: 1994/12/16 01:36:48 $
#
# $Log: Imakefile,v $
# Revision 1.1.1.1  1994/12/16  01:36:48  jck
# The XBoing distribution requires configuration management. This is why the
# cvs utility is being used. This is the initial import of all source etc..
#
#
# =====================================================================

# This is the directory where the highscore, level & sound data will be
# placed. Default will be the current directory.

    XBOING_DIR = .

# These are some defines that must be set. Some may be overwritten in the
# machine arch section.

    XPMLIB 				= -L/usr/X11/lib -lXpm
    XPMINCLUDE 			= -I/usr/X11/include/X11
    XBOINGINCLUDE 		= -I./include
    LEVEL_INSTALL_DIR 	= $(XBOING_DIR)/levels
    SOUNDS_DIR 			= $(XBOING_DIR)/sounds
    BACKUP_DIR 			= $(XBOING_DIR)/../backups
    HIGH_SCORE_FILE 	= $(XBOING_DIR)/.xboing.scr
    AUDIO_AVAILABLE 	= False
    AUDIO_SRC 			= audio/NOaudio.c
    AUDIO_INCLUDE 		=
    AUDIO_LIB 			=
	CDEBUGFLAGS         = -g

# Uncomment this if you want to use ANY of the AUDIO sound systems

# Uncomment this if you want to use RPLAY sound system
# #define USE_RPLAY

# Uncomment this if you want to use NetAudio sound system
# #define USE_NETAUDIO

# Below are the special defines for different machine archs.

    AUDIO_AVAILABLE	= True
    AUDIO_SRC 		= audio/SUNaudio.c

    AUDIO_INCLUDE 	= -I/usr/demo/SOUND/multimedia
    AUDIO_LIB 		= -L/usr/demo/SOUND -laudio

# Define USE_RPLAY near start for rplay to be used for the sound system

# Define USE_NETAUDIO near start for netaudio to be used for sound.
# You must set the AUDIO_INCLUDE and AUDIO_LIB to point to netaudio src.

    EXTRA_INCLS = $(XBOINGINCLUDE) $(XPMINCLUDE) $(AUDIO_INCLUDE)

# Please take the comment out from the USE_FLOCK bit if you want to use the
# flock() system call for locking instead of the lockf() system call.
# Also if you don't want any file locking then uncomment and add the \ to
# the -DNO_LOCKING define.
# Put the NEED_USLEEP define in if it is need by your system because it
# hasn't a usleep() function.

    DEFINES = $(EXTRA_INCLS) \
        -DHIGH_SCORE_FILE=\"$(HIGH_SCORE_FILE)\" \
        -DAUDIO_FILE=\"$(AUDIO_SRC)\" \
        -DLEVEL_INSTALL_DIR=\"$(LEVEL_INSTALL_DIR)\" \
        -DAUDIO_AVAILABLE=\"$(AUDIO_AVAILABLE)\" \
        -DSOUNDS_DIR=\"$(SOUNDS_DIR)\" \
        -DREADMEP_FILE=\"$(XBOING_DIR)/docs/problems.doc\"
#   -DUSE_FLOCK=\"True\" \
#   -DNEED_USLEEP=\"True\" \
#   -DNO_LOCKING=\"True\"

    LOCAL_LIBRARIES = $(AUDIO_LIB) $(XPMLIB) $(XLIB) -lm

# ========================================================================
# Please don't change anything below this point - no need really - I hope.
# ========================================================================

    DEPLIBS = $(DEPXLIB)

    SRCS1 =	version.c main.c score.c error.c \
        ball.c blocks.c init.c stage.c level.c \
        paddle.c mess.c intro.c bonus.c sfx.c \
        highscore.c misc.c inst.c gun.c keys.c \
        audio.c special.c presents.c demo.c file.c \
		preview.c dialogue.c eyedude.c editor.c \
		keysedit.c

    OBJS1 =	version.o main.o score.o error.o \
        ball.o blocks.o init.o stage.o level.o \
        paddle.o mess.o intro.o bonus.o sfx.o \
        highscore.o misc.o inst.o gun.o keys.o \
        audio.o special.o presents.o demo.o file.o \
		preview.o dialogue.o eyedude.o editor.o \
		keysedit.o

    PROGRAMS = xboing

all::	audio.c $(PROGRAMS)
	@$(RM) version.c
# strip $(PROGRAMS)

version.c:
	@sh ./version.sh $(PROGRAMS)

audio.c::  $(AUDIO_SRC)
	$(RM) $@
	$(LN) $? $@

depend:: version.c audio.c

 OBJS = $(OBJS1) $(OBJS2) $(OBJS3)
 SRCS = $(SRCS1) $(SRCS2) $(SRCS3)

all:: $(PROGRAMS)

$(PROGRAMS): $(OBJS1) $(DEPLIBS1)
	$(RM) $@
	$(CC) -o $@ $(LDOPTIONS) $(OBJS1)  $(LOCAL_LIBRARIES) $(LDLIBS)   $(EXTRA_LOAD_FLAGS)

install:: $(PROGRAMS)
	@if [ -d $(DESTDIR)$(BINDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(BINDIR)); fi
	$(INSTALL) -c $(INSTPGMFLAGS)  $(PROGRAMS) $(DESTDIR)$(BINDIR)

install.man:: $(PROGRAMS).man
	@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) $(PROGRAMS).man $(DESTDIR)$(MANDIR)/$(PROGRAMS).$(MANSUFFIX)

saber_$(PROGRAMS):: $(SRCS1)
	# load $(ALLDEFINES) $(SRCS1)  $(LOCAL_LIBRARIES) $(SYS_LIBRARIES) $(EXTRA_LIBRARIES)

osaber_$(PROGRAMS):: $(OBJS1)
	# load $(ALLDEFINES) $(OBJS1)  $(LOCAL_LIBRARIES) $(SYS_LIBRARIES) $(EXTRA_LIBRARIES)

depend::
	$(DEPEND) $(DEPENDFLAGS) -s "# DO NOT DELETE" -- $(ALLDEFINES) -- $(SRCS)

lint:
	$(LINT) $(LINTFLAGS) $(SRCS) $(LINTLIBS)
lint1:
	$(LINT) $(LINTFLAGS) $(FILE) $(LINTLIBS)

clean::
	$(RM) $(PROGRAMS)

install:: $(PROGRAMS)
	@echo "XBoing directory is " $(XBOING_DIR)
	@:
	@echo "Creating directory " $(XBOING_DIR)
	@if [ ! -d $(XBOING_DIR) ]; then mkdir $(XBOING_DIR); fi
	$(INSTALL) -c $(INSTDATFLAGS) docs/problems.doc $(XBOING_DIR)
	@:
	@echo "Creating directory " $(LEVEL_INSTALL_DIR)
	@if [ ! -d $(LEVEL_INSTALL_DIR) ]; then mkdir $(LEVEL_INSTALL_DIR); fi
	@:
	@echo "Copying level data into directory " $(LEVEL_INSTALL_DIR)
	@cd ./levels; set -x; for file in *.data; do			\
		$(INSTALL) -c $(INSTDATFLAGS) $$file $(LEVEL_INSTALL_DIR);\
	done
	@:
	@if [ "$(AUDIO_AVAILABLE)" = "True" ]; 				\
	 then								\
		echo "Creating directory " $(SOUNDS_DIR); 		\
		if [ ! -d $(SOUNDS_DIR) ]; then mkdir $(SOUNDS_DIR); fi;\
		echo "Copying sound files into directory " $(SOUNDS_DIR);\
		cd ./sounds; set -x; for file in *.au; do		\
		    $(INSTALL) -c $(INSTDATFLAGS) $$file $(SOUNDS_DIR);	\
		done;							\
	 fi
	@:
	@echo "Creating a highscore file " $(HIGH_SCORE_FILE)
	@touch $(HIGH_SCORE_FILE);
	@chmod a+rw $(HIGH_SCORE_FILE);

# I use this for my daily backup of my code.

backup:
	@make clean
	@:
	@if [ -z "$(BACKUP_DIR)" ]; then \
		echo "*** BACKUP_DIR undefined."; exit 1; fi
	@:
	@if [ ! -d $(BACKUP_DIR) ]; then set -x; $(MKDIRHIER) $(BACKUP_DIR); fi
	@:
	tar cvf - * | gzip -v > $(BACKUP_DIR)/`date '+xboing%d-%h-%y'`.tgz

# End of the XBoing Imakefile

# -------------------------------------------------------------------------
# common rules for all Makefiles - do not edit

emptyrule::

clean::
	$(RM_CMD) "#"*

Makefile::
	-@if [ -f Makefile ]; then set -x; \
	$(RM) Makefile.bak; $(MV) Makefile Makefile.bak; \
	else exit 0; fi
	$(IMAKE_CMD) -DTOPDIR=$(TOP) -DCURDIR=$(CURRENT_DIR)

tags::
	$(TAGS) -w *.[ch]
	$(TAGS) -xw *.[ch] > TAGS

saber:
	# load $(ALLDEFINES) $(SRCS)

osaber:
	# load $(ALLDEFINES) $(OBJS)

# -------------------------------------------------------------------------
# empty rules for directories that do not have SUBDIRS - do not edit

install::
	@echo "install in $(CURRENT_DIR) done"

install.man::
	@echo "install.man in $(CURRENT_DIR) done"

Makefiles::

includes::

# -------------------------------------------------------------------------
# dependencies generated by makedepend

