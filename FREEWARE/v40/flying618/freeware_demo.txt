OpenVMS VAX & AXP port of Flying V 6.18              August 1995
=======================================


Building on VAX:
---------------
Use COMPILE.COM and LINK.COM procedures if you want to rebuild Flying
on VAX architecture. You need GCC compiler (tested with GCC V 2.5.8).
LINK.COM automagically tests if you have Motif 1.1 or Motif 1.2

Building on AXP:
---------------
Use COMPILE_AXP.COM and LINK_AXP.COM procedures if you want to rebuild Flying
on AXP architecture. You need DEC C++ compiler (tested with DEC C++ V 1.3A)


Executables provided:
--------------------

linked on VAX VMS 5.5-2 and AXP VMS 6.1

Using:
-----

You can define FLYING_DIR logical name to point the directory where balls
pixmaps for deluxe pool are stored (if not, they are calculated at run time,
but it may be long ....). 

A VMS help file (FLYING.HLP) is provided.


You can run FLYING via FREEWARE_DEMO.COM procedure

Sources are available under [.SRC] directory in FLYING-618.ZIP file
Patrick Moreau

Command-line options:

usage: flying <options>
options:
    select game:
       -snooker      Snooker      (xsnooker)
       -pool         Pool-Billard (xpool)
       -pool9        9-ball Pool
       -cannon       Karambolage  (xcannon)
       -carrom       Carrom       (xcarrom)
       -hockey       Air-Hockey   (xhockey)
       -curling      Curling      (xcurling)
       -ft <n>       table size in feet [6...9]
       -deluxe       special version of pool (default)
       -tv           normal version of pool with TV-balls
       -[red|green|blue] select billard table color
       -nohints      turn off hint arrows
       -demo         demonstration (no pockets)
       -presets      show preset variables
    X11 options:
       -size <n>     window size
       -root         full screen (default)
       -no_override  don't let the pseudo-root be of OverrideRedirect
       -no_grabs     never grab the server
       -display      ouput-display (def: $DISPLAY)
       -in1          input-display (def: = output-display)
       -in2          alternate input-display
       -mode <n>     select update mode 1/2/3 with default 2
       -chkmode      run a benchmark with the 3 update modes
       -sound        clicks when hitting balls
    for time measurements:
       -frames <n>   limit update to <n> frames per sec (def: full speed)
       -time <n>     stop after n seconds
       -maxspeed     jump from collision to collision (asynchronous)
 

pmoreau@cena.dgac.fr
moreau_P@decus.decus.fr
