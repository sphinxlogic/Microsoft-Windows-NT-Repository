%!PS-Adobe-3.0
%%Title: 426601A
%%Creator: VAX DOCUMENT V2.1-1
%%Copyright: 1986,1987,1988,1989,1990,1991 DIGITAL EQUIPMENT CORPORATION.
%%+All Rights Reserved.
%%CreationDate: Tue Nov  2 1993 14:09:23
%%For: N_ADAMS     
%%BoundingBox: (atend)
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Orientation: Portrait
%%Pages: (atend)
%%PageOrder: Ascend
%%DocumentFonts: (atend) 
%%DocumentNeededFonts: (atend) 
%%DocumentProcSets: Underlay Color5044
%%DocumentSuppliedProcSets: Underlay Color5044
%%DocumentProcessColors: (atend)
%%DocumentCustomColors: (atend)
%%EndComments
%
%%BeginResource: procset Underlay
%%CreationDate: (2/10/92)
%
% In VAX DOCUMENT V2.1-1, simple EPSF files up to 65,000 bytes long
% may be an underlay. Define the EPSF as a PostScript proceedure
% called /UNDERLAY and prefix to DOCUMENT's PS output  For example:.
% /UNDERLAY ( EPSF code here ) cvx def
%
% To create a "Preliminary" underlay change /UNDERLAY* to /UNDERLAY
/UNDERLAY* (
  /Note (Preliminary) def
  /NoteSize 120 def
  /NoteFont /Helvetica findfont NoteSize scalefont def
  /Note where { pop Note length 0 gt {
    /NoteWidth NoteFont setfont Note stringwidth pop def
    PaperWidth 36 mul PaperHeight 36 mul moveto
    PaperHeight PaperWidth atan rotate
    NoteWidth -2 div NoteSize .729 mul -2 div rmoveto 
    Note true charpath .075 setseparationgray fill
  }if  }if
) cvx def
%%EndResource
%
%%BeginResource: procset Color5044
%%CreationDate: (1/21/91)
%%Version:1.0 3
%Implementation of Adobe 5044 color specification
%/ndf allows command override during color separation
/Color5044Dict 100 dict def
Color5044Dict begin
/bdf {bind def} def
/ndf
  {1 index where
    {pop pop pop
    }
    {dup xcheck
      {bind} if
    def
    }
    ifelse
  } bdf
/setcmykcolor
  {1 exch sub
  3 
    {dup 5 -1 roll sub 0 2 copy lt
      {exch} if
    pop exch
    } repeat
  pop setrgbcolor
  }ndf
/setcmykcoloroverprint
  {4
    {dup -1 eq
      {pop 0} if
      4 1 roll
    } repeat
  setcmykcolor
  } ndf
/findcmykcustomcolor
  {5 /packedarray where
    {pop packedarray
    }
    {array astore readonly
    }
    ifelse
  } ndf
/setcustomcolor
  {exch aload pop pop
  4
    {4 index mul 4 1 roll
    } repeat
  setcmykcolor pop
  } ndf
/setseparationgray
  {1 exch sub systemdict /setgray get exec
  } ndf
/setoverprint {pop} ndf
/currentoverprint false ndf
%CMYK multi-proc colorimage
/colorimage
  {4 ne
    {(\nUnsupported number of colors for colorimage.\n) print flush quit
    } if
  not
    {(\nSingle procedure form  colorimage unsupported.\n) print flush quit
    } if
  save 20 dict begin /&saveobj exch def
  /&Kproc exch def /&Yproc exch def /&Mproc exch def /&Cproc exch def
    {&Cproc &Mproc &Yproc &Kproc
    /&K exch def /&Y exch def /&M exch def /&C exch def
    0 1 &K length 1 sub
      {/&i exch def
      &K &i 255
      &C &i get 30 mul
      &M &i get 59 mul add
      &Y &i get 11 mul add
      &K &i get 100 mul add
      100 idiv
      dup 255 gt
        {pop 255} if
      sub put
      } for
    &K
    } image
  &saveobj end restore
  } ndf
/customcolorimage
  {pop systemdict /image get exec
  } ndf
/separationimage
  {systemdict /image get exec
  } ndf
end
%%EndResource
Color5044Dict begin
%
/DEC_DVC$dict 300 dict def
DEC_DVC$dict begin
%
/DVC$PSJob save def
%
/DOCPSE ISOLatin1Encoding 256 array copy def
mark						% CREATE DOCPSE ENCODING
  8#055 /hyphen
  8#201 /bullet    8#202 /emdash     8#203 /endash    8#204 /dagger
  8#205 /daggerdbl 8#206 /registered 8#207 /trademark %8#210 /Delta
  8#211 /fi        8#212 /fl         8#213 /OE        8#214 /oe
  8#215 /Ydieresis
  counttomark -1 bitshift			% DIVIDE BY 2
  {DOCPSE 3 1 roll put} repeat			% STACK NOW CONTAINS MARK
cleartomark
%
/ReENCODE {		% /basefont /newfont encoding ReENCODE
    /newencoding exch def	%ARG: NAME OF ENCODING VECTOR
    /newfontname exch def	%ARG: NEW NAME FOR FONT AFTER RE-ENCODING
    findfont
    /basefontdict exch def	%ARG: NAME OF FONT TO BE RE-ENCODED
    basefontdict maxlength dict begin	%CREATE AND OPEN NEW DICT
	basefontdict {		%COPY ENTRIES FROM BASE FONT DICT TO NEW ONE
	    1 index /FID ne {
		def		%IF NOT THE ONE WE'RE ENCODING, JUST COPY PTRS
	    } { %else
		pop pop		%IGNORE FID AND ENCODING FOR ONE WE'RE ENCODING
	    } ifelse
	} forall
	/FontName newfontname def	%DEFINE NEW NAME 
	/Encoding newencoding def	%DEFINE NEW ENCODING VECTOR
	newfontname currentdict definefont	%TURN IT INTO A PS FONT
	pop			%IGNORE MODIFIED DICT RETURNED BY DEFINEFONT
    end
}def
%
/cvsstr 64 string def
/tempmatrix matrix def
%
% Exit page (temporarily) to add fonts/characters.
/XP { }def
% 
% Resume page
/RP { }def
%
% End Page: EP
/EP {DVC$PSPage restore}def
%
% Purge fonts to reclaim VM
/PF {
  currentoverprint
  currentrgbcolor
  EP			%Does restore
  PageSetup     %Does save
  setrgbcolor
  setoverprint
}def
%
% ABBREVIATIONS 
/S /show load def
/SV /save load def
/RST /restore load def
%
/Yadjust {Ymax exch sub} def
%
/XY {						% (x,y) POSITION ABSOLUTE
  Yadjust moveto
} def
%
/X {						% (x,0) POSITION ABSOLUTE
  currentpoint exch pop moveto
} def
%
/Y {						% (0,y) POSITION ABSOLUTE 
  currentpoint pop exch Yadjust moveto
} def
%
/xy {						% (x,y) POSITION RELATIVE
  neg rmoveto
} def
%
/x {						% (x,0) POSITION RELATIVE
  0 rmoveto
} def
%
/y {						% (0,y) POSITION RELATIVE
  0 exch neg rmoveto
} def
%
/R {						% Draw a rectangle
  /ht exch def  /wd exch def   gsave
  currentpoint  newpath  moveto
  0 ht rlineto  wd 0 rlineto
  0 ht neg rlineto  wd neg 0 rlineto
  closepath fill grestore wd 0 rmoveto
}def
%
%Setup Page Media:  <paper-height> <paper-width> PM
/PM {
  /Xmax exch Resolution mul def
  /Ymax exch Resolution mul def
  /UNDERLAY where {
    pop
    /eps_save save def		% save before EPSF underlay
    Resolution 72 div dup scale % Revert coords to points
    count array astore /DVCstack exch def % save op stack
    /dict_count countdictstack def % # of dicts
    userdict begin		% default dict
    /showpage {}def		% disable showpage
    0 setgray
      {UNDERLAY} stopped {(Error executing /UNDERLAY)== quit}if
    countdictstack dict_count sub {end} repeat % clean up dict stack
    clear DVCstack aload pop	% restore op stack
    eps_save restore		% restore after EPSF
  }if
  PageSetup
}def
%
%Setup page coordinates
/PageSetup
{
  /DVC$PSPage save def
  PortraitMode not {PaperWidth 0 translate  90 rotate} if
  /Xpos 0 def
  /Ypos 0 def
}def
%
% Begin EPS file: <xoffset> <yoffset> SPB
/SPB {
  Yadjust transform		% convert from DVC to device coords
  EP				% page-level restore
  /eps_save save def		% save before EPSF
  Resolution 72 div dup scale 	% Revert coords to points
  itransform			% convert position back to points  
  translate			% set position for EPSF
  PortraitMode not {90 rotate} if % rotate for EPSF
  count array astore /DVCstack exch def	% save op stack
  /dict_count countdictstack def % # of dicts
  userdict begin		% default dict
  /showpage {}def		% disable showpage
  0 setgray
}def
%
% End EPS file
/SPE {
  countdictstack dict_count sub {end} repeat % clean up dict stack
  clear DVCstack aload pop	% restore op stack
  eps_save restore		% restore after EPSF
  PageSetup			% restore DVC coords
}def
%
% Print-Page Routine: <Page #> PP
/PP {
  gsave
  showpage
  grestore
}def
%
/DMF {		%  /font-name <point-size> DMF
  exch findfont exch scalefont setfont
}def
%
/concatnam {	%  /abcd (xxx) concatnam  ==> /abcdxxx
  /xxx exch def
  /namstr exch cvsstr cvs def
  /newnam namstr length xxx length add string def
  newnam 0 namstr putinterval
  newnam namstr length xxx putinterval
  newnam cvn 
}def
%
/strip {	%  /abcdef 2 strip ==> /cdef
  /num exch def  /nam exch def
  /namstr nam cvsstr cvs def
  /newlen namstr length num sub def
  namstr num newlen getinterval  cvn
}def
%		ROUTINES TO HANDLE PACKING/UNPACKING NUMBERS
/PackHW {	% <target> <pos> <num> PackHW --> <new target>
  /num exch def  /pos exch def  /target exch def
  num 16#0000FFFF and 1 pos sub 16 mul bitshift  target or
}def
/PackByte {	% <target> <pos> <num> PackByte --> <new target>
  /num exch def  /pos exch def  /target exch def
  num 16#000000FF and 3 pos sub 8 mul bitshift   target or
}def
/UnpkHW {	%  <pos> <num> UnpkHW --> <unpacked value>
  /num exch def  /pos exch def
  num 1 pos sub -16 mul bitshift 16#0000FFFF and
  dup 16#00007FFF gt {16#00010000 sub} if
}def
/UnpkByte {	%  <pos> <num> UnpkByte --> <unpacked value>
  /num exch def  /pos exch def
  num 3 pos sub -8 mul bitshift 16#000000FF and
  dup 16#0000007F gt {16#00000100 sub} if
}def
%
/ps-scalefont {
    % FOR PS FONTS, LOOK AT SIZE REQUESTED.  IF IT HAS A DECIMAL REMAINDER
    % EQUIVALENT TO .001-.009 POINTS (I.E., .050-.450 VAXDOC UNITS), THAT'S 
    % A FLAG TO STRETCH IT VERTICALLY BY ADDING 1-9 EXTRA POINTS TO THE 
    % VERTICAL SCALING.
                % save requested size - as entered and as integer
    dup /x-size exch def cvi /x-int exch def
                % calc decimal remainder, mul x 1000, round
    x-size x-int sub 1000 mul round cvi /remainder exch def
                % see how we scale...
    remainder 50 lt remainder 450 gt or {
                % scale isomorphically
        /ystretch 0 def
        x-size scalefont
    } {
                % scale anamorphically
        /ystretch remainder def
        x-int ystretch add /y-size exch def
        [x-int 0 0 y-size 0 0] makefont
    } ifelse
}def
%
/DPSF {		% /procname size /fontname DPSF
    findfont exch ps-scalefont [ exch /setfont cvx ] cvx def
}def
%
/PXLBuildCharDict 17 dict def
/CMEncodingArray 256 array def
0 1 255 {CMEncodingArray exch dup cvsstr cvs cvn put} for
/RasterConvert {RasterScaleFactor div}def
/TransformBBox {
  aload pop
  /BB-ury exch def  /BB-urx exch def  /BB-lly exch def  /BB-llx exch def
  [ BB-llx RasterConvert BB-lly RasterConvert 
    BB-urx RasterConvert BB-ury RasterConvert ]
}def
/RunLengthToRasters {
  % none yet
}def
/GenerateRasters {			% GENERATE RASTERS FOR "IMAGEMASK"
  rasters  runlength 1 eq {RunLengthToRasters} if
}def
%
/int-dict-name {int (-dict) concatnam}def
/int-dict {int (-dict) concatnam cvx load}def
%
/DefinePXLFont {
	%  <int-font-name><ext-font-name><pt-sz(pix)><PXL mag><num-chars>...
	%  ...[llx lly urx ury]<newfont-fg>DefinePXLFont
  /newfont exch def  /bb exch def      /num exch def  /psz exch def
  /dsz exch def      /pxlmag exch def  /ext exch def  /int exch def
  /fnam ext (-) concatnam pxlmag cvsstr cvs concatnam def
  newfont not {
    int-dict-name 13 dict def
    int-dict begin
      /FontType 3 def  /FontMatrix [ 1 dsz div 0 0 1 dsz div 0 0 ] def
      /FontBBox bb TransformBBox def  /Encoding CMEncodingArray def
      /CharDict 1 dict def  CharDict begin  /Char-Info num array def  end
      /BuildChar {
        PXLBuildCharDict begin
          /char exch def  /fontdict exch def
          fontdict /CharDict get /Char-Info get char get aload pop
          /rasters exch def  /PackedWord1 exch def
          0 PackedWord1 UnpkHW 16#7FFF ne {
	    /PackedWord2 exch def  /wx 0 PackedWord1 UnpkHW def
            /rows 2 PackedWord1 UnpkByte def  /cols 3 PackedWord1 UnpkByte def
            /llx 0 PackedWord2 UnpkByte def   /lly 1 PackedWord2 UnpkByte def
            /urx 2 PackedWord2 UnpkByte def   /ury 3 PackedWord2 UnpkByte def
	  }{ %else
	    /PackedWord2 exch def  /PackedWord3 exch def /PackedWord4 exch def
            /wx 1 PackedWord1 UnpkHW def    /rows 0 PackedWord2 UnpkHW def
            /cols 1 PackedWord2 UnpkHW def  /llx 0 PackedWord3 UnpkHW def
            /lly 1 PackedWord3 UnpkHW def   /urx 0 PackedWord4 UnpkHW def
            /ury 1 PackedWord4 UnpkHW def
          } ifelse
          rows 0 lt {
	    /rows rows neg def /runlength 1 def
	  }{ %else
	    /runlength 0 def
	  } ifelse
          wx 0
          llx RasterConvert lly RasterConvert 
          urx RasterConvert ury RasterConvert setcachedevice
          rows 0 ne {
	    gsave
	      cols rows true  RasterScaleFactor 
              0 0 RasterScaleFactor neg llx .5 add neg ury .5 add 
              tempmatrix astore  GenerateRasters imagemask
            grestore
          } if
        end
      }def
    end
    fnam int-dict definefont pop 
  } if 
  int-dict-name fnam findfont psz scalefont def
  currentdict int [ int-dict /setfont cvx ] cvx put
}def 
/PXLF { true  DefinePXLFont}def	% SIGNAL THAT FONT ALREADY LOADED
/PXLNF {false  DefinePXLFont}def	% SIGNAL THAT FONT NOT ALREADY LOADED
%
/PXLC {	% <int-font-name><code><wx><llx><lly><urx><ury>...
	% ...<rows><cols><runlength><rasters>PXLC
  /rasters exch def  /runlength exch def  /cols exch def  /rows exch def
  /ury exch def      /urx exch def        /lly exch def   /llx exch def
  /wx exch def       /code exch def       /int exch def
  % SEE IF LONG OR SHORT FORMAT IS REQUIRED
  true cols CKSZ rows CKSZ ury CKSZ urx CKSZ lly CKSZ llx CKSZ 
  TackRunLengthToRows {
    int-dict /CharDict get /Char-Info get code 
    [ 0 0 llx PackByte 1 lly PackByte 2 urx PackByte 3 ury PackByte
      0 0 wx PackHW 2 rows PackByte 3 cols PackByte rasters ] put
  }{ %else
    int-dict /CharDict get /Char-Info get code 
    [ 0 0 urx PackHW 1 ury PackHW   0 0 llx PackHW 1 lly PackHW
      0 0 rows PackHW 1 cols PackHW 0 0 16#7FFF PackHW 1 wx PackHW rasters ] put
  } ifelse
}def
%
/CKSZ {abs 127 le and}def
/TackRunLengthToRows {runlength 0 ne {/rows rows neg def} if}def
%
/PLOTC {
  % <wx><dsz><psz><llx><lly><urx><ury><rows><cols><runlength><rasters>PLOTC
  /rasters exch def  /runlength exch def  /cols exch def  /rows exch def
  /ury exch def      /urx exch def        /lly exch def   /llx exch def
  /psz exch def      /dsz exch def        /wx exch def
  % "PLOT" A CHARACTER'S RASTER PATTERN
  rows 0 ne {
    gsave
      currentpoint translate  psz dsz div dup scale
      cols rows true  RasterScaleFactor 0 0 RasterScaleFactor 
      neg llx .5 add neg ury .5 add  tempmatrix astore
      GenerateRasters imagemask
    grestore
  } if
  wx x
}def
%
% set color routine: Color# SC
/SC {ColorPalette exch get 1.0 setcustomcolor}bind def
%
%%EndProlog


%%BeginSetup
/PxlResolution 300 def
/Resolution 3600 def
/RasterScaleFactor PxlResolution Resolution div def
/PortraitMode true def
/PaperWidth 8.500 def
/PaperHeight 11.000 def
72 Resolution div dup scale

%>  Postamble of file USER$663:[N_ADAMS]426601A.DVI_PS.
% DefineFont:F207 Category:15 Pointsize:24
% DownloadPSFont
%!PS-Adobe-2.0
%%Title: PostScript Digital Logo Font, v1.1
%%Creator: Ned Batchelder
%%CreationDate: 9-Nov-87
%%DocumentFonts: Symbol
%%DocumentSuppliedFonts: DigitalLogo
%%EndComments
%
%		    DIGITAL INTERNAL USE ONLY
% 
% INTRODUCTION:
% This rendition of the Digital logo was prepared by Ned Batchelder using 
% Adobe Illustrator and hand manipulation of the resulting PostScript code.
% Photographic masters of the logo were obtained from David Comberg in the
% Graphic Design Group. Additional consultation was provided by Elliot
% Hendrickson, one of the original designers of the logo.
% 
% USE:
% This file defines a new PostScript font, called /DigitalLogo. It consists
% of three characters. (d) is the entire Digital logo, (t) is a small
% trademark symbol, and (T) is a large trademark symbol. The font is designed
% so that the argument to scalefont is the height of the logo. There is no
% extra white space around the logo at all. The trademarks are designed to be
% shown right after the logo, and they align themselves. The only correct
% strings to show with this font are (d), (dt), and (dT). There is an entry
% (named GapWidth) in the font dictionary which gives the unscaled width of
% the gap between the blocks. This distance is given because it is used as a
% unit to determine how much space to leave around the logo.
% 
% HISTORY:
% The logo was designed in 1957 by Elliot Hendrickson, who was then working
% as an independent designer. He was contracted by DEC to do a brochure, and
% DEC wanted a logo to accompany it. The logo up to then had been the letters
% DEC in blocks the shape of the plug-in cards that DEC had been producing.
% Elliot re-worked the logo, incorporating letters which were hand-drawn for 
% the purpose by Arthur Hover(?). The logo has been maintained since then in 
% conventional technology, ie, film masters. There was at least one reworking 
% of the logo at some point.
% 
% The masters I received had a number of interesting features. The boxes were
% not all the same width, and there seemed to be no logic to which boxes were
% wider. The 'g' was the narrowest, and the 'i' and 'l' were second widest.
% Also, the two 'i's were not exactly the same shape. On ten-inch masters,
% (one box to an 8=x11 sheet), the boxes were not rectangles, but were very
% slightly tapered in wierd ways. I assume that the tapering is the result of
% too many reproductions, but the difference in widths may have been
% deliberate at some time. Elliot reports that when he drew it, all boxes
% were the same width. I have retained the different widths in my version,
% since the experts I had at hand did not seem to think I should make them
% uniform.
% 
% Please feel free to use this logo, but keep in mind the following:
% 
% 1. This code is for INTERNAL USE ONLY.
% 2. I am not entirely happy with the final shapes of the letters, and am
% hoping to improve them. Please allow for future updates to this code.
% 3. Only use this logo within the guidelines of the Corporate Identity
% program. If you use this font precisely as is, you can't get in much
% trouble. Don't take the shapes and do strange things with them. 
% In particular, the Identity states that the logo is a one-color logo: The
% letters are actually holes in the blocks, through which the background can
% be seen. Do not modify this code so that the letters are always white.
% 
% Edit history:
% 
% 21-Sep-87 nmb	    Created as a standalone file with demo.
%  6-Nov-87 nmb	    Converted to font form.
%  9-Nov-87 nmb	    Removed // uses for compatibility with LW Classics
%

%%BeginFont: DigitalLogo
10 dict begin

/FontInfo 3 dict def
FontInfo begin
    /Notice
(The Digital logo is a registered trademark of Digital Equipment Corporation.)
    def
    /FullName (Digital logo) def
    /version (1.1) def
    end

/FontType 3 def				% This is a user-defined font
/FontMatrix matrix def			% Use an identity transform
/FontBBox [ 0 0 3.383 1 ] def		% Logo itself is biggest
/GapWidth .070 def			% The width of the gap between boxes

/Encoding 256 array def
0 1 255 { Encoding exch /.notdef put } bind for

Encoding
dup (d) 0 get /DEC-logo put		% (d) gives logo
dup (t) 0 get /smalltrademark put	% (t) gives small trademark
    (T) 0 get /largetrademark put	% (T) gives large trademark

/Work 15 dict def			% for doing work in font.

/BuildChar {
    exch begin				% Use the font dictionary
	Work begin
	    Encoding exch get		% Look up the character name
	    load			% Pull out the procedure
	    exec			% Run it.
	    end				% Work
	end				% fontdict
    } bind def

Work begin

/.notdef {} def

%
% - `DEC-logo' -
%
% Images a DEC logo with the lower left corner at the current origin, with a
% height of one unit, in the current color.
% 

/m /moveto load def
/l /lineto load def
/c /curveto load def

/DEC-logo {
    3.383 0 0 0 3.383 1 setcachedevice
    {	% D
	% d counter
	.2930 .3513 m
	.2932 .3217 .2587 .2758 .2167 .2757 c
	.1719 .2759 .1280 .3165 .1280 .3977 c
	.1280 .4801 .1718 .5225 .2153 .5227 c
	.2587 .5225 .2932 .4760 .2930 .4407 c
	closepath
	% d outside
	.2953 .5787 m
	.2953 .7600 l
	.3843 .7600 l
	.3843 .1960 l
	.2923 .1960 l
	.2923 .2220 l
	.2848 .2144 .2531 .1813 .1990 .1813 c
	.1426 .1812 .0417 .2282 .0417 .3977 c
	.0417 .5414 .1171 .6157 .2067 .6157 c
	.2399 .6157 .2725 .6039 .2953 .5787 c
	closepath
	% d box
	.432 0.0 m
	.432 1.0 l
	.000 1.0 l
	.000 0.0 l
	closepath
	} exec
    {	% I
	% i box
	.927 0.0 m
	.927 1.0 l
	.502 1.0 l
	.502 0.0 l
	closepath
	% i body
	.6695 .196 m
	.6695 .600 l
	.7595 .600 l
	.7595 .196 l
	closepath
	% i dot
	.6695 .655 m
	.6695 .755 l
	.7595 .755 l
	.7595 .655 l
	closepath
	} exec
    {	% G
	% g counter
	1.2813 .4478 m
	1.2813 .4837 1.2409 .5208 1.2035 .5208 c
	1.1713 .5208 1.1215 .5003 1.1215 .4084 c
	1.1215 .3105 1.1827 .2962 1.2030 .2962 c
	1.2433 .2962 1.2813 .3239 1.2813 .3667 c
	closepath
	% g box
	0.997 1.0 m
	1.415 1.0 l
	1.415 0.0 l
	0.997 0.0 l
	closepath
	% g outside
	1.2822 .5609 m
	1.2729 .5742 1.2424 .6044 1.1988 .6044 c
	1.1311 .6043 1.0367 .5652 1.0367 .3955 c
	1.0368 .2617 1.1437 .2168 1.1876 .2168 c
	1.2350 .2167 1.2702 .2443 1.2798 .2547 c
	1.2798 .2126 l
	1.2798 .1815 1.2479 .1511 1.1945 .1511 c
	1.1485 .1512 1.1437 .1807 1.1437 .1953 c
	1.0497 .1953 l
	1.0497 .1486 1.0798 .0804 1.1888 .0803 c
	1.2864 .0803 1.3186 .1176 1.3325 .1316 c
	1.3442 .1434 1.3617 .1758 1.3617 .2017 c
	1.3617 .6 l
	1.2823 .6 l
	closepath
	} exec
    {	% I
	% i box
	1.910 0.0 m
	1.910 1.0 l
	1.485 1.0 l
	1.485 0.0 l
	closepath
	% i body
	1.6525 .196 m
	1.6525 .6 l
	1.7425 .6 l
	1.7425 .196 l
	closepath
	% i dot
	1.6525 .655 m
	1.6525 .755 l
	1.7425 .755 l
	1.7425 .655 l
	closepath
	} exec
    {	% T
	% t
	2.2128 .7525 m
	2.1305 .7525 l
	2.1305 .6071 l
	2.0874 .6071 l
	2.0874 .5396 l
	2.1305 .5396 l
	2.1305 .2852 l
	2.1305 .2367 2.1554 .1986 2.2248 .1987 c
	2.2573 .1987 2.2560 .1985 2.2842 .2034 c
	2.2842 .2874 l
	2.2658 .2842 2.2601 .2829 2.2511 .2832 c
	2.2338 .2837 2.2128 .2898 2.2128 .3206 c
	2.2128 .5395 l
	2.2780 .5395 l
	2.2780 .6071 l
	2.2128 .6071 l
	closepath
	% t box
	2.404 0.0 m
	1.980 0.0 l
	1.980 1.0 l
	2.404 1.0 l
	closepath
	} exec
    {	% A
	% a box
	2.474 0.0 m
	2.474 1.0 l
	2.888 1.0 l
	2.888 0.0 l
	closepath
	% a outside
	2.5439 .4728 m
	2.6210 .4728 l
	2.6210 .5138 2.6422 .5353 2.6826 .5353 c
	2.7470 .5354 2.7449 .5067 2.7448 .4708 c
	2.7050 .4553 2.7087 .4557 2.6480 .4419 c
	2.5709 .4241 2.5237 .3911 2.5236 .3112 c
	2.5237 .2331 2.5793 .1914 2.6420 .1915 c
	2.7048 .1914 2.7178 .2117 2.7438 .2290 c
	2.7438 .1978 l
	2.8422 .1978 l
	2.8190 .2352 2.8251 .2425 2.8249 .2706 c
	2.8250 .2926 2.8249 .5080 2.8249 .5080 c
	2.8250 .5507 2.8028 .5768 2.7883 .5855 c
	2.7521 .6071 2.7074 .6097 2.6826 .6098 c
	2.5945 .6096 2.5438 .5653 2.5439 .4728 c
	closepath
	% a counter
	2.7448 .3946 m
	2.7448 .3401 l
	2.7448 .3152 2.7145 .2670 2.6550 .2669 c
	2.6260 .2668 2.6098 .2883 2.6097 .3162 c
	2.6098 .3442 2.6335 .3657 2.6536 .3697 c
	2.6745 .3739 2.7226 .3862 2.7448 .3946 c
	closepath
	} exec
    {	% L
	% l box
	3.383 0.0 m
	3.383 1.0 l
	2.958 1.0 l
	2.958 0.0 l
	closepath
	% l
	3.1255 .196 m
	3.1255 .765 l
	3.2155 .765 l
	3.2155 .196 l
	closepath
	} exec
    fill
    } bind def

%
% % pct `trademark' --
%
% Borrow the sans-serif trademark symbol from /Symbol. AFM file says:
%	C 228 ; WX 786 ; N trademarksans ; B 5 293 725 673 ;
% We scale it down to pct percent of the height of the logo and superscript 
% it some, and voila!
%

/trademark {
    /s exch .380 div def
    /w s .725 mul .070 add def
    /u 1 .673 s mul sub def
    w 0 0 u w 1 setcachedevice
    /Symbol findfont s scalefont setfont
    .070 u m					% Superscript it
    (\344) show
    } bind def

% 
% These are two different trademarks (just different sizes).
%

/smalltrademark { .15 trademark } def
/largetrademark { .25 trademark } def

end						% Work dictionary

currentdict					% Get the font dict
end						% Close it up
/DigitalLogo exch definefont pop		% Define the font.

%%EndFont
% EndDownloadPSFont
/F207 1200.0 /DigitalLogo DPSF
% DefineFont:F42 Category:10 Pointsize:8
/Helvetica /Helvetica@DOCPSE DOCPSE ReENCODE
/F42 400.0 /Helvetica@DOCPSE DPSF
% DefineFont:F40 Category:10 Pointsize:9
/Helvetica-Bold /Helvetica-Bold@DOCPSE DOCPSE ReENCODE
/F40 450.0 /Helvetica-Bold@DOCPSE DPSF
% DefineFont:F39 Category:10 Pointsize:9
/Helvetica-Oblique /Helvetica-Oblique@DOCPSE DOCPSE ReENCODE
/F39 450.0 /Helvetica-Oblique@DOCPSE DPSF
% DefineFont:F38 Category:10 Pointsize:9
/F38 450.0 /Helvetica@DOCPSE DPSF
% DefineFont:F36 Category:10 Pointsize:10
/F36 500.0 /Helvetica-Bold@DOCPSE DPSF
% DefineFont:F16 Category:10 Pointsize:24
/F16 1200.0 /Helvetica-Bold@DOCPSE DPSF

%Spot color array for this job
/ColorPalette [
0.0 0.0 0.0 1.0 (BLACK) findcmykcustomcolor
] def

%%EndSetup
%
%%Page: (1) 1
%%PageFonts: (atend)
%%PageProcessColors: (atend)
%%PageCustomColors: (atend)
PaperHeight PaperWidth PM 0 0 XY
0 SC 3600 5443 XY F16(System)S 3600 6688 XY(Supp)S 2 x(ort)S 3600 7934 XY
(Addend)S 2 x(um)S 3600 X 747 y 23316 204 R 3600 X 199 y 23316 96 R
3600 9654 XY F36(PRODUC)S -2 x(T)S 167 x(NAME:)S 597 x(MACRO)S -2 x
(-64)S 166 x(Assembler)S 166 x(V)S -27 x(ersion)S 167 x(1.1)S 23258 X
(SSA)S 166 x(42.66.01-A)S 8459 X 548 y(for)S 166 x(OpenVMS)S 167 x(AXP)S
166 x(Systems)S 3600 11910 XY F40(HARDW)S -26 x(ARE)S 149 x(REQUIREMENTS)S
3600 X 897 y F39(Processo)S 2 x(rs)S 149 x(Suppo)S 2 x(rted)S 3600 14052 XY
F42(Alpha)S 132 x(AXP:)S 7187 X(DEC)S 132 x(300)S -2 x(0)S 133 x(Mode)S
-2 x(l)S 134 x(400)S 131 x(AXP)S 132 x(W)S -7 x(orkstation,)S 7187 X
498 y(DEC)S 132 x(300)S -2 x(0)S 133 x(Mode)S -2 x(l)S 134 x(400)S 131 x
(AXP)S 132 x(Server)S -23 x(,)S 7187 X 498 y(DEC)S 132 x(300)S -2 x
(0)S 133 x(Mode)S -2 x(l)S 134 x(500)S 131 x(AXP)S 132 x(W)S -7 x(orkstation,)S
7187 X 498 y(DEC)S 132 x(300)S -2 x(0)S 133 x(Mode)S -2 x(l)S 134 x
(500)S 131 x(AXP)S 132 x(Server)S 7187 16543 XY(DEC)S 132 x(400)S -2 x
(0)S 133 x(Mode)S -2 x(l)S 134 x(610)S 131 x(AXP)S 132 x(System)S 7187 17539 XY
(DEC)S 132 x(700)S -2 x(0)S 133 x(Mode)S -2 x(l)S 134 x(610)S 131 x
(AXP)S 132 x(System)S 7187 18535 XY(DEC)S 132 x(100)S -2 x(00)S 132 x
(Model)S 132 x(610)S 132 x(AXP)S 132 x(System)S 3600 X 897 y F39(Disk)S
149 x(Space)S 150 x(Requireme)S 2 x(nts)S 149 x(\(Block)S 150 x(Cluster)S
149 x(Size)S 150 x(=)S 149 x(1\))S 3600 20677 XY F42(Disk)S 134 x(space)S
132 x(req)S -2 x(uired)S 132 x(for)S 132 x(installation:)S 11670 X(14,0)S
-2 x(00)S 132 x(blocks)S 11670 X 498 y(\(7.0)S 131 x(Mbytes\))S 3600 22171 XY
(Disk)S 134 x(space)S 132 x(req)S -2 x(uired)S 132 x(for)S 132 x(use)S
132 x(\(perma)S -2 x(nent\))S -2 x(:)S 718 x(12,0)S -2 x(00)S 132 x
(blocks)S 11670 X 499 y(\(6.2)S 131 x(Mbytes\))S 3600 X 896 y F38(These)S
202 x(counts)S 203 x(refer)S 202 x(to)S 201 x(the)S 202 x(disk)S 202 x
(space)S 202 x(require)S 2 x(d)S 201 x(on)S 202 x(the)S 3600 X 548 y
(system)S 189 x(disk.)S 316 x(The)S 189 x(sizes)S 189 x(are)S 189 x
(appro)S 2 x(ximate;)S 208 x(actual)S 188 x(sizes)S 3600 X 548 y(may)S
134 x(vary)S 135 x(depending)S 135 x(on)S 134 x(the)S 133 x(user)S 18 x
(')S -9 x(s)S 134 x(system)S 134 x(environm)S 2 x(ent,)S 3600 X 548 y
(con\211gur)S 2 x(ation,)S 149 x(and)S 150 x(software)S 150 x(options.)S
3600 26704 XY F40(SOFTW)S -25 x(ARE)S 149 x(REQUIREMENTS)S 3600 27850 XY
F38(\201)S 441 x(OpenVMS)S 150 x(AXP)S 150 x(Operating)S 150 x(System)S
150 x(V1.5)S 150 x(or)S 150 x(later)S 3600 X 897 y F39(OpenVMS)S 151 x
(T)S -42 x(ailoring)S 3600 X 896 y F38(The)S 228 x(followi)S -2 x(ng)S
228 x(OpenVMS)S 228 x(classes)S 228 x(are)S 228 x(require)S 2 x(d)S
227 x(for)S 228 x(full)S 3600 X 548 y(functionality)S 149 x(of)S 149 x
(this)S 149 x(layered)S 150 x(produ)S 2 x(ct:)S 3600 X 897 y(\201)S
441 x(OpenVMS)S 150 x(Required)S 151 x(Saveset)S 3600 X 897 y(For)S
174 x(more)S 176 x(information)S 174 x(on)S 174 x(OpenVMS)S 175 x(classes)S
175 x(and)S 175 x(tailor-)S 3600 X 548 y(ing,)S 133 x(refer)S 131 x
(to)S 129 x(the)S 130 x(OpenVMS)S 131 x(AXP)S 130 x(Operating)S 130 x
(System)S 131 x(Soft-)S 3600 X 548 y(ware)S 150 x(Product)S 150 x(Description)S
150 x(\(SPD)S 149 x(41.87.xx\).)S 15854 11910 XY F40(OPTIONAL)S 148 x
(SOFTW)S -25 x(ARE)S 15854 X 897 y F38(DECset)S 149 x(for)S 150 x(OpenVMS)S
150 x(AXP)S -58 x(,)S 149 x(Release)S 150 x(1)S -33 x(1)S 150 x(or)S
150 x(later)S 15854 14301 XY F40(DOCUMENT)S -34 x(A)S -34 x(TION)S 149 x
(REQUIR)S -2 x(EMENTS)S 15854 X 897 y F38(The)S 169 x F39(Alpha)S 169 x
(Architecture)S 170 x(Reference)S 170 x(Manual)S F38(,)S 174 x(order)S
170 x(num-)S 15854 X 548 y(ber)S 204 x(EY)S -42 x(-L520)S 2 x(E-DP)S
-58 x(,)S 202 x(describes)S 204 x(the)S 203 x(Alpha)S 203 x(AXP)S 203 x
(Architec-)S 15854 X 547 y(ture)S 125 x(and)S 125 x(the)S 124 x(instruction)S
124 x(set)S 124 x(used)S 125 x(by)S 125 x(MACRO-64)S 124 x(Assem-)S
15854 X 548 y(bler)S -24 x(.)S 211 x(This)S 154 x(information)S 154 x
(is)S 153 x F39(not)S 154 x F38(provided)S 155 x(in)S 153 x(the)S 154 x
(online)S 154 x(doc-)S 15854 X 548 y(umentation.)S 15854 18884 XY F40
(GROWTH)S 149 x(CONSI)S -2 x(DERA)S -34 x(TIONS)S 15854 X 896 y F38
(The)S 184 x(minimum)S 185 x(hardware)S 2 x(/software)S 183 x(requirem)S
2 x(ents)S 184 x(for)S 184 x(any)S 15854 X 548 y(future)S 159 x(version)S
159 x(of)S 158 x(this)S 158 x(product)S 159 x(may)S 159 x(be)S 159 x
(dif)S -9 x(ferent)S 159 x(from)S 158 x(the)S 15854 X 548 y(requirem)S
2 x(ents)S 149 x(for)S 150 x(the)S 150 x(current)S 150 x(version.)S
15854 22371 XY F40(ORDERIN)S -2 x(G)S 149 x(INFORMA)S -34 x(TION)S 15854 X
896 y F38(This)S 218 x(product)S 218 x(is)S 218 x(available)S 217 x
(only)S 218 x(on)S 218 x(the)S 218 x(Digital)S 216 x(CDROM)S 15854 X
548 y(Software)S 253 x(Library)S 253 x(for)S 253 x(OpenVMS)S 254 x(AXP)S
252 x(Systems,)S 279 x(order)S 15854 X 548 y(numbe)S 2 x(r)S 149 x(QA-03XAA-H8.)S
15854 X 897 y(Software)S 150 x(Licenses:)S 200 x(QL-MWP)S -33 x(A*-**)S
16452 X 548 y(\(Persona)S 2 x(l)S 149 x(Use\):)S 199 x(QL-MWP)S -32 x
(AA-2B)S 15854 X 548 y(Software)S 150 x(Documentation:)S 199 x(QA-MWP)S
-32 x(A*-GZ)S 15854 X 548 y(Software)S 150 x(Product)S 150 x(Services:)S
200 x(QT)S -25 x(-MWP)S -33 x(A*-*)S 2 x(*)S 15854 X 896 y(*)S 424 x
(Denotes)S 152 x(variant)S 153 x(\211elds.)S 207 x(For)S 153 x(additional)S
152 x(information)S 152 x(on)S 16452 X 548 y(available)S 165 x(licenses,)S
169 x(services,)S 169 x(and)S 166 x(media,)S 170 x(refer)S 165 x(to)S
165 x(the)S 16452 X 548 y(appropr)S 2 x(iate)S 149 x(price)S 150 x(book.)S
15854 X 897 y(The)S 108 x(above)S 108 x(information)S 107 x(is)S 107 x
(valid)S 107 x(at)S 107 x(time)S 107 x(of)S 107 x(release.)S 186 x(Please)S
15854 X 548 y(contact)S 169 x(your)S 170 x(local)S 168 x(Digital)S 167 x
(of)S -8 x(\211ce)S 169 x(for)S 169 x(the)S 169 x(most)S 169 x(up-to-da)S
2 x(te)S 15854 X 548 y(information.)S 15854 X 896 y(\251)S 221 x(1993)S
221 x(Digital)S 219 x(Equipment)S 221 x(Corpora)S 2 x(tion.)S 411 x
(All)S 219 x(rights)S 221 x(re-)S 15854 X 548 y(served.)S 15854 33579 XY
F42(\207)S 498 x(The)S 145 x(DIGIT)S -30 x(AL)S 145 x(Logo)S -2 x(,)S
149 x(Alpha)S 145 x(AXP)S -52 x(,)S 145 x(AXP)S -52 x(,)S 145 x(DEC,)S
145 x(DECset,)S 16751 X 498 y(Digital,)S 138 x(and)S 136 x(OpenVMS)S
137 x(are)S 137 x(trad)S -2 x(emarks)S 138 x(of)S 137 x(Digital)S 138 x
(Equip-)S 16751 X 498 y(ment)S 131 x(Corpor)S -2 x(ation.)S 23574 38446 XY
F40(November)S 150 x(1993)S 13021 X 422 y F207(dt)S
EP PP
%%PageTrailer
%%PageFonts: Helvetica-Bold Helvetica-Oblique
%%+ Helvetica DigitalLogo
%%PageProcessColors:
%%PageCustomColors: (BLACK)
%
%%Trailer
%%Pages: 1
%%BoundingBox: 0 0 612 792
%%DocumentFonts: DigitalLogo Helvetica
%%+ Helvetica-Bold Helvetica-Oblique
%%DocumentNeededFonts: Helvetica Helvetica-Bold
%%+ Helvetica-Oblique
%%DocumentProcessColors:
%%DocumentCustomColors: (BLACK)
%%CMYKCustomColor: 0.0 0.0 0.0 1.0 (BLACK)
%
DVC$PSJob restore
end %DEC_DVC$dict
end %Color5044Dict
%
%%EOF

