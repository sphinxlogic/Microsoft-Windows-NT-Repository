	.TITLE	RESET_PSRUPD
	.IDENT /V05-001/
;	© 2000 P. Beaudoin
;  This software is supplied as is and the usual warranty
;  is implied - none. You may use, abuse, modify or
;  or ignore this software as you see fit but are
;  encouraged to give credit, as is good practice
;  when stealing with permission
; 
; Modifications:
; 05-001 PB	29-apr-1997	(re)recreation
;++ 
;1 RESET_PSRUPD
; Sets all records to update in db selected by PID
;--


	.LIBRARY	/SYS$LIBRARY:LIB.MLB/
	.LIBRARY	/EMU5_LIB:EMU5.MLB/
	$SSDEF		; System Services
        $NMADEF         ; Network Management
	EMUSNMPDEF
	EMUSYSDEF
	EMURLTDEF
	EMUCTRLDEF
	EMUPSRDEF
	EMUCNTDEF
	EMUCMIPDEF
	EMUDBDEF
	EMUDN4DEF
	EMUIPCDEF
	EMUMOPDEF
	EMUMSGDEF
	EMUCTPDEF
	.PSECT	RESET_PSRUPD_D,WRT,NOEXE,PIC,SHR,QUAD

DBTBL:
; Ordering in this table is important - the order in which they
; appear is the order in which the PID was assigned
		.BLKB	SYS_MAP_C_MAPSIZ 	; 0 = invalid
		.BLKB	SYS_MAP_C_MAPSIZ        ; = listener (no db)
;
                .QUAD	0
		.LONG	SYS_PID_C_PSRDN4
		.LONG	PSR_DN4_W_ADDR
		.LONG	0			; Lock ID
		.LONG	0			; Spare/align
		.ADDRESS EMU_DN4DB
		.ADDRESS EMU_PSRDN4
;
                .QUAD	0
		.LONG	SYS_PID_C_PSRDN5
		.LONG	PSR_DN5_B20_ADDR
		.LONG	0			; Lock ID
		.LONG	0			; Spare/align
		.ADDRESS EMU_DN5DB
		.ADDRESS EMU_PSRDN5
;
                .QUAD	0
		.LONG	SYS_PID_C_PSRSCS
		.LONG	PSR_SCS_EA_ADDR
		.LONG	0			; Lock ID
		.LONG	0			; Spare/align
		.ADDRESS EMU_SCSDB
		.ADDRESS EMU_PSRSCS
;
                .QUAD	0
		.LONG	SYS_PID_C_PSRLAT
		.LONG	PSR_LAT_EA_ADDR
		.LONG	0			; Lock ID
		.LONG	0			; Spare/align
		.ADDRESS EMU_LATDB
		.ADDRESS EMU_PSRLAT
;
                .QUAD	0
		.LONG	SYS_PID_C_PSRMOP
		.LONG	PSR_MOP_EA_ADDR
		.LONG	0			; Lock ID
		.LONG	0			; Spare/align
		.ADDRESS EMU_MOPDB
		.ADDRESS EMU_PSRMOP
;
                .QUAD	0
		.LONG	SYS_PID_C_PSRIP
		.LONG	PSR_IP_L_ADDR
		.LONG	0			; Lock ID
		.LONG	0			; Spare/align
		.ADDRESS EMU_IPDB
		.ADDRESS EMU_PSRIP
;
                .QUAD	0
		.LONG	SYS_PID_C_PSRIPX
		.LONG	PSR_IPX_L_NET
		.LONG	0			; Lock ID
		.LONG	0			; Spare/align
		.ADDRESS EMU_IPXDB
		.ADDRESS EMU_PSRIPX
;

		.BLKB	SYS_MAP_C_MAPSIZ 	; 9 = DNS
		.BLKB	SYS_MAP_C_MAPSIZ 	; 10 = DTS
		.BLKB	SYS_MAP_C_MAPSIZ 	; 11 = ARP
;
                .QUAD	0
		.LONG	SYS_PID_C_PSRETH
		.LONG	PSR_ETH_EA_ADDR 
		.LONG	0			; Lock ID
		.LONG	0			; Spare/align
		.ADDRESS EMU_ETHDB
		.ADDRESS EMU_PSRETH
;
		.BLKB	SYS_MAP_C_MAPSIZ 	; 13 = unassigned  

                .QUAD	0
		.LONG	SYS_PID_C_PSRBRD
		.LONG	PSR_BRD_EA_ADDR 
		.LONG	0			; Lock ID
		.LONG	0			; Spare/align
		.ADDRESS EMU_BRDDB
		.ADDRESS EMU_PSRBRD
;
		.BLKB	SYS_MAP_C_MAPSIZ 	; 15 = unassigned  
		.BLKB	SYS_MAP_C_MAPSIZ 	; 16 = unassigned  
;
                .QUAD	0
		.LONG	SYS_PID_C_NAMER
		.LONG	NAM_DB_AS_NAME
		.LONG	0			; Lock ID
		.LONG	0			; Spare/align
		.ADDRESS EMU_NAMERDB
		.ADDRESS EMU_NAMER

MAPRELATER:
                .QUAD	0
		.LONG	SYS_PID_C_RELATER
		.LONG	0
		.LONG	0			; Lock ID
		.LONG	0			; Spare/align
		.ADDRESS EMU_RELATERDB
		.ADDRESS EMU_RELATER

DBTBL_DESC:	.LONG 	.-DBTBL
		.ADDRESS  DBTBL
PIDNO:		.LONG	0
INPT_LEN:	.LONG	0
KB_BUF:		.LONG	80

KB_DES:		.LONG	 .-KB_BUF
		.ADDRESS   KB_BUF

; Lock Names
EMU_IPDB:	
		.ASCID	\EMU_IPDB\            ; Lock name
EMU_IPXDB:	
		.ASCID	\EMU_IPXDB\            ; Lock name
EMU_MOPDB:	
		.ASCID	\EMU_MOPDB\            ; Lock name
EMU_BRDDB:	
		.ASCID	\EMU_BRDDB\            ; Lock name
EMU_SCSDB:	
		.ASCID	\EMU_SCSDB\            ; Lock name
EMU_DN5DB:	
		.ASCID	\EMU_DN5DB\            ; Lock name
EMU_DN4DB:	
		.ASCID	\EMU_DN4DB\            ; Lock name
EMU_LATDB:	
		.ASCID	\EMU_LATDB\            ; Lock name
EMU_ETHDB:	
		.ASCID	\EMU_ETHDB\            ; Lock name
EMU_NAMERDB:		
		.ASCID	/EMU_NAMERDB/	; DB Lock name 
EMU_RELATERDB:		
		.ASCID	/EMU_RELATERDB/	; DB Lock name 
; Section names
EMU_RPTSEC:	.ASCID	/EMU_RPTSEC/
EMU_RELATER:
		.ASCID	/EMU_RELATER/
EMU_PSRIP:
		.ASCID	/EMU_PSRIP/
EMU_PSRIPX:
		.ASCID	/EMU_PSRIPX/
EMU_PSRMOP:
		.ASCID	/EMU_PSRMOP/
EMU_PSRBRD:
		.ASCID	/EMU_PSRBRD/
EMU_NAMER:
		.ASCID	/EMU_NAMER/
EMU_PSRSCS:	
		.ASCID	\EMU_PSRSCS\  		; Section name
EMU_PSRDN5:	
		.ASCID	\EMU_PSRDN5\  		; Section name
EMU_PSRDN4:	
		.ASCID	\EMU_PSRDN4\  		; Section name
EMU_PSRLAT:	
		.ASCID	\EMU_PSRLAT\  		; Section name
EMU_PSRETH:	
		.ASCID	\EMU_PSRETH\  		; Section name
EMU_ERPT:	
		.ASCID	\EMU_ERPT\		; Temp report section

PROMPT:		.ASCID	/Enter PID for DB to force update: /

	.PSECT	CODE NOWRT,EXE,QUAD

	.CALL_ENTRY	MAX_ARGS=1, HOME_ARGS=TRUE, -
			INPUT=<R2,R3,R4,R5,R6,R7,R8,R9,R10,R11>, -
			PRESERVE=<R2,R3,R4,R5,R6,R7,R8,R9,R10,R11>, -
			LABEL=RESET_PSRUPD

1$:
	PUSHAL	INPT_LEN
	PUSHAL	PROMPT
	PUSHAL	KB_DES
	CALLS	#3,G^LIB$GET_INPUT
	BLBS	R0,2$
	RET
2$:
	CVTWL	INPT_LEN,KB_DES		; Reset Len
	PUSHAL	PIDNO			; Output
	PUSHAL	KB_DES			; Input
	CALLS	#2,G^OTS$CVT_TU_L	; Convert to Bin
	BLBC	R0,1$			; On error try again
;
	MOVAL	DBTBL,R9	
	MULL	#SYS_MAP_C_MAPSIZ,PIDNO
	ADDL	PIDNO,R9
	TSTL	SYS_MAP_L_PID(R9)		; Valid DB?
	BEQL	1$				; Br if no PID



	PUSHL	R9				; Map structure
        CALLS	#1,G^MAPLVB_DB  
	BLBS	R0,10$
	RET
10$:
	MOVL	SYS_MAP_Q_ADDR(R9),R11				; Top of table
	MOVL	COM_DBHDR_L_RECSIZE(R11),R7		; SIZE 
	ADDL3	R7,R11,R6                               ; 1SR ENTRY
	MOVL	COM_DBHDR_L_ENTRIES(R11),R11		; Entries
	BNEQU	20$					
	BRW	1000$				; br if None
20$:
; Set update bit
	BISL	#SYS_COM_M_UPDATE,COM_HDR_L_SYSCTL(R6)	
100$:
	ADDL	R7,R6			; Next entry 
	SOBGTR	R11,20$
; Unmap
	PUSHL	R9				; Map structure
        CALLS	#1,G^UNMAPLVB_DB  
1000$:
        MOVL	#SS$_NORMAL,R0
	RET

 	.END	RESET_PSRUPD
