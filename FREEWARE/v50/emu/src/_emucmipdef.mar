; 	.TITLE	EMUCMIPDEF        
;	.IDENT /V01-001/
;	© 2000 P. Beaudoin
;  This software is supplied as is and the usual warranty
;  is implied - none. You may use, abuse, modify or
;  or ignore this software as you see fit but are
;  encouraged to give credit, as is good practice
;  when stealing with permission
; 
	.MACRO	EMUCMIPDEF,$GBL
	$DEFINI	EMUCMIPDEF,$GBL
; Data types
$EQU	CMIP_ASN1_SEQ   	48  	; Sequence
$EQU	CMIP_ASN1_INT   	2       ; int
$EQU	CMIP_ASN1_BITS    	3       ; Bit str
$EQU	CMIP_ASN1_STR    	4       ; octet str
$EQU	CMIP_ASN1_NULL		5       ; Null
$EQU	CMIP_ASN1_OBJID		6       ; Object ID
$EQU	CMIP_ASN1_IPADDR	64      ; IP Address
$EQU	CMIP_ASN1_COUNT 	65      ; Counter
$EQU	CMIP_ASN1_GUAGE  	66      ; Guage
$EQU	CMIP_ASN1_TIMET  	67      ; TimeTics
$EQU	CMIP_ASN1_OPAQ  	68      ; Opaque
$EQU	CMIP_ASN1_NSAP  	69      ; NSAP addreess
$EQU	CMIP_ASN1_CTR64  	70      ; 64 Bit counter
$EQU	CMIP_ASN1_UI32  	71      ; Unsigned 32 bit counter
; Constants
$EQU	CMIP_PDU_INVOKE		161     ; Invoke PDU
$EQU	CMIP_PDU_RESPONSE	162     ; Response
$EQU	CMIP_PDU_ERROR		163     ; Error
$EQU	CMIP_PDU_REJECT		164     ; Reject
$EQU	CMIP_OPR_EVENT		0       ; Event report
$EQU	CMIP_OPR_LREPLY		2       ; Linked Reply
$EQU	CMIP_OPR_GET		3       ; Get request
$EQU	CMIP_OPR_SET		5       ; SET request
$EQU	CMIP_OPR_ACTION		7       ; Action request
$EQU	CMIP_OPR_ADD		16      ; ADD request
$EQU	CMIP_OPR_REMOVE		17      ; Remove request
$EQU	CMIP_TAG_ENTINST	163     ; Entity instance
$EQU	CMIP_TAG_ATTRID		166     ; attribute ID (list)
$EQU	CMIP_TAG_INSTLIS	171     ; Instance list
$EQU	CMIP_TAG_CTXSPC		128     ; Context specific (start of param)
; Attrubute specifiers:
$EQU	CMIP_ATS_C_ALL		0       ; All attributes
$EQU	CMIP_ATS_C_ID		1       ; All Identifiers
$EQU	CMIP_ATS_C_STATUS	2       ; All status
$EQU	CMIP_ATS_C_COUNT	3       ; All count
$EQU	CMIP_ATS_C_CHAR		4       ; All char

;ASN.1 Parser symbols
$EQU	ASN_PAT_C_TLEN  	 0  	; Length of tag field
$EQU	ASN_PAT_C_TVAL  	 4      ; Value of tag 
$EQU	ASN_PAT_C_LLEN  	 8      ; Length of Length field
$EQU	ASN_PAT_C_LVAL  	 12     ; Value of length
$EQU	ASN_PAT_C_NEXT  	 16     ; Distance to next tag
; ASN1 Tag Values
$EQU	ASN_TAG_V_CONST		  5	; Set if tag is constructed
; **THIS TABLE MUST STAY IN SEQUENCE WITH DB_FAC_DN5_xxx (_EMUDBDEF)**
; Any additions here MUST be also added to functbl in CONFIGMON
$EQU	GD5_FCN_C_DN5_NODE		65536+10
$EQU	GD5_FCN_C_DN5_ALIAS		65536+11
$EQU	GD5_FCN_C_DN5_ALIASPORT		65536+12
$EQU	GD5_FCN_C_DN5_CSMACD		65536+13
$EQU	GD5_FCN_C_DN5_CSMACDPORT	65536+14
$EQU	GD5_FCN_C_DN5_CSMACDSTN		65536+15
$EQU	GD5_FCN_C_DN5_DDCMP		65536+16
$EQU	GD5_FCN_C_DN5_DDCMP_LNK		65536+17
$EQU	GD5_FCN_C_DN5_DDCMP_LNKSTN	65536+18
$EQU	GD5_FCN_C_DN5_DDCMP_PORT	65536+19
$EQU	GD5_FCN_C_DN5_DEVICE		65536+20
$EQU	GD5_FCN_C_DN5_DEVICE_UNIT	65536+21
$EQU	GD5_FCN_C_DN5_DNS		65536+22
$EQU	GD5_FCN_C_DN5_DNS_SERV		65536+23
$EQU	GD5_FCN_C_DN5_DNS_SERV_CH	65536+24
$EQU	GD5_FCN_C_DN5_DNS_CLRK		65536+25
$EQU	GD5_FCN_C_DN5_DNS_CLRK_KNS	65536+26
$EQU	GD5_FCN_C_DN5_DNS_CLRK_RCH	65536+27
$EQU	GD5_FCN_C_DN5_DNS_CLRK_MNS	65536+28
$EQU	GD5_FCN_C_DN5_DTS		65536+29
$EQU	GD5_FCN_C_DN5_DTS_GBLSRV	65536+30
$EQU	GD5_FCN_C_DN5_DTS_LOCSRV	65536+31
$EQU	GD5_FCN_C_DN5_EVD		65536+32
$EQU	GD5_FCN_C_DN5_EVD_OS		65536+33
$EQU	GD5_FCN_C_DN5_EVD_REL		65536+34
$EQU	GD5_FCN_C_DN5_EVD_RECLOG	65536+35
$EQU	GD5_FCN_C_DN5_EVD_SNK		65536+36
$EQU	GD5_FCN_C_DN5_EVD_SNKIS		65536+37
$EQU	GD5_FCN_C_DN5_FRAME		65536+38
$EQU	GD5_FCN_C_DN5_FRAME_LINK	65536+39
$EQU	GD5_FCN_C_DN5_FRAME_PORT	65536+40
$EQU	GD5_FCN_C_DN5_HDLC		65536+41
$EQU	GD5_FCN_C_DN5_HDCL_LNK		65536+42
$EQU	GD5_FCN_C_DN5_HDLC_LNKLS	65536+43
$EQU	GD5_FCN_C_DN5_HDLC_PORT		65536+44
$EQU	GD5_FCN_C_DN5_LAPB		65536+45
$EQU	GD5_FCN_C_DN5_LAPB_LINK		65536+46
$EQU	GD5_FCN_C_DN5_LAPB_PORT		65536+47
$EQU	GD5_FCN_C_DN5_LLC2		65536+48
$EQU	GD5_FCN_C_DN5_LLC2_PORT		65536+49
$EQU	GD5_FCN_C_DN5_LLC2_SAP		65536+50
$EQU	GD5_FCN_C_DN5_LLC2_SAPLNK	65536+51
$EQU	GD5_FCN_C_DN5_LOOPBACK		65536+52
$EQU	GD5_FCN_C_DN5_MODEM		65536+53
$EQU	GD5_FCN_C_DN5_MODEM_PORT	65536+54
$EQU	GD5_FCN_C_DN5_MODEM_LINE	65536+55
$EQU	GD5_FCN_C_DN5_MOP		65536+56
$EQU	GD5_FCN_C_DN5_MOP_CIRC		65536+57
$EQU	GD5_FCN_C_DN5_MOP_CIRCOP	65536+58
$EQU	GD5_FCN_C_DN5_MOP_CIRCSTN	65536+59
$EQU	GD5_FCN_C_DN5_MOP_CLIENT	65536+60
$EQU	GD5_FCN_C_DN5_NSP		65536+61
$EQU	GD5_FCN_C_DN5_NSP_LNSAP		65536+62
$EQU	GD5_FCN_C_DN5_NSP_RNSAP		65536+63
$EQU	GD5_FCN_C_DN5_NSP_PORT		65536+64
$EQU	GD5_FCN_C_DN5_OSIT		65536+65
$EQU	GD5_FCN_C_DN5_OSIT_APP		65536+66
$EQU	GD5_FCN_C_DN5_OSIT_LNSAP	65536+67
$EQU	GD5_FCN_C_DN5_OSIT_RNSAP	65536+68
$EQU	GD5_FCN_C_DN5_OSIT_PORT		65536+69
$EQU	GD5_FCN_C_DN5_TEMPL		65536+70
$EQU	GD5_FCN_C_DN5_RTN		65536+71
$EQU	GD5_FCN_C_DN5_RTN_CIRC		65536+72
$EQU	GD5_FCN_C_DN5_RTN_CRICADJ	65536+73
$EQU	GD5_FCN_C_DN5_RTN_CIRCIPAT	65536+74
$EQU	GD5_FCN_C_DN5_RTN_CIRCIPAJ	65536+75
$EQU	GD5_FCN_C_DN5_RTN_CIRCIPRA	65536+76
$EQU	GD5_FCN_C_DN5_RTN_CIRCRA	65536+77
$EQU	GD5_FCN_C_DN5_RTN_DESTAREA	65536+78
$EQU	GD5_FCN_C_DN5_RTN_DESNNODE	65536+79
$EQU	GD5_FCN_C_DN5_RTN_EGPGRP	65536+80
$EQU	GD5_FCN_C_DN5_RTN_EGPNEI	65536+81
$EQU	GD5_FCN_C_DN5_RTN_IPDA		65536+82
$EQU	GD5_FCN_C_DN5_RTN_PERNEI	65536+83
$EQU	GD5_FCN_C_DN5_RTN_PORT		65536+84
$EQU	GD5_FCN_C_DN5_SC		65536+85
$EQU	GD5_FCN_C_DN5_SC_APP   		65536+86
$EQU	GD5_FCN_C_DN5_SC_PORT		65536+87
$EQU	GD5_FCN_C_DN5_SC_TOWMAINT	65536+88
$EQU	GD5_FCN_C_DN5_SC_TRASVC		65536+89
$EQU	GD5_FCN_C_DN5_X25A		65536+90
$EQU	GD5_FCN_C_DN5_X25A_APP		65536+91
$EQU	GD5_FCN_C_DN5_X25A_DTECLASS	65536+92
$EQU	GD5_FCN_C_DN5_X25A_FILT		65536+93
$EQU	GD5_FCN_C_DN5_X25A_PORT		65536+94
$EQU	GD5_FCN_C_DN5_X25A_SECDTE	65536+95
$EQU	GD5_FCN_C_DN5_X25A_REMDTE	65536+96
$EQU	GD5_FCN_C_DN5_X25A_RA		65536+97
$EQU	GD5_FCN_C_DN5_X25A_SECFILT	65536+98
$EQU	GD5_FCN_C_DN5_X25A_TEMPL	65536+99
$EQU	GD5_FCN_C_DN5_X25C		65536+100
$EQU	GD5_FCN_C_DN5_X25P		65536+101
$EQU	GD5_FCN_C_DN5_X25P_DTE		65536+102
$EQU	GD5_FCN_C_DN5_X25P_DTEPVC	65536+103
$EQU	GD5_FCN_C_DN5_X25P_GRP		65536+104
$EQU	GD5_FCN_C_DN5_FDDI		65536+105
$EQU	GD5_FCN_C_DN5_FDDI_STN		65536+106
$EQU	GD5_FCN_C_DN5_FDDI_PORT		65536+107
$EQU	GD5_FCN_C_DN5_MAXFUNC 		65536+107

                                                                          
; Dec defined tags
;Application_wide
$EQU	Null				0	; - Null entity class 
$EQU	CML_TAG_APP_BOOLEAN     	1	;
$EQU	CML_TAG_APP_UNSIGNEDINT16	2	
$EQU	CML_TAG_APP_UNSIGNEDINT32	3	
$EQU	CML_TAG_APP_UNSIGNEDINT64	4	
$EQU	CML_TAG_APP_SIGNEDINT16		5	
$EQU	CML_TAG_APP_SIGNEDINT32		6	
$EQU	CML_TAG_APP_SIGNEDINT64		7	
$EQU	CML_TAG_APP_OCTET		8	
$EQU	CML_TAG_APP_OCTETSTRING		9	
$EQU	CML_TAG_APP_ENUMERATION		10	
$EQU	CML_TAG_APP_NULL		11	
$EQU	CML_TAG_APP_NUMERICSTRING	12	
$EQU	CML_TAG_APP_BITSET		13	
$EQU	CML_TAG_APP_RECORD		14	
$EQU	CML_TAG_APP_SEQUENCE		15	
$EQU	CML_TAG_APP_CHARABSTIME 	16	
$EQU	CML_TAG_APP_BINABSTINE  	17	
$EQU	CML_TAG_APP_CHARRELTIME 	18	
$EQU	CML_TAG_APP_BINRELTIME  	19	
$EQU	CML_TAG_APP_LATIN       	20  ; (printable string)	
$EQU	CML_TAG_APP_SET			21	
$EQU	CML_TAG_APP_UNSIGNEDINT8	22	
$EQU	CML_TAG_APP_SIGNEDINT8		23	
$EQU	CML_TAG_APP_SIMPLENAME  	26	
$EQU	CML_TAG_APP_FULLNAME    	27	
$EQU	CML_TAG_APP_UID 		28  ; 16 bytes  	
$EQU    CML_TAG_APP_KNOWN       	29  ;	- implict null - wildcard
$EQU    CML_TAG_APP_ENTITYNAME    	30  ;	- sequence of objid		
$EQU    CML_TAG_APP_LOCALENTITYNAME     31  ;  Same	
$EQU    CML_TAG_APP_DEFAULT             32  ; implicit null	
$EQU    CML_TAG_APP_VERSIONNUMBER       33  ;4 bytes (Status(V) maj,min,ECO)
$EQU    CML_TAG_APP_ID                  34  ; - LAN addr	
$EQU    CML_TAG_APP_DTEADDR             35	
$EQU    CML_TAG_APP_FILESPEC            36	
$EQU    CML_TAG_APP_NSAPADDR            37	
$EQU    CML_TAG_APP_NETENTTITLE         38	
$EQU    CML_TAG_APP_AREAADDR            39	
$EQU    CML_TAG_APP_OCTETSTRING         4 	
$EQU    CML_TAG_APP_COUNTER16           40	
$EQU    CML_TAG_APP_COUNTER32           41	
$EQU    CML_TAG_APP_COUNTER64           42	
$EQU    CML_TAG_APP_ADDRPREFIX          43	
$EQU    CML_TAG_APP_TOWERSET            44	
$EQU    CML_TAG_APP_ENDUSERSEPC         45	
$EQU    CML_TAG_APP_TRANSPORTSEL        46	
$EQU    CML_TAG_APP_PHASEIVNAME         47	
$EQU    CML_TAG_APP_PHASIVADDR          48	
$EQU    CML_TAG_APP_IMPLEMENTATION      49 ;    - set of component		
$EQU    CML_TAG_APP_VERSIONEDITNUMBER   50 ;- seq		
$EQU    CML_TAG_APP_COMPONENTNAME       51 ; component name,version	
$EQU    CML_TAG_APP_DNSTIMSTAMP         52 ;  -14 bytes	
$EQU    CML_TAG_APP_ENTITYCLASS         53 ;	- obj id		
$EQU    CML_TAG_APP_BITSTRING          	54	
$EQU    CML_TAG_APP_FLOOR               55 ; - {protocol(protocolId), addr }
$EQU    CML_TAG_APP_PROTOCOLTOWER       56 ; set of floor (55)	
$EQU    CML_TAG_APP_ENTITYCLASSEVENT    57	
$EQU    CML_TAG_APP_ENTITYINSTEVENT     58	
$EQU    CML_TAG_APP_SUBRANGE            59	
$EQU    CML_TAG_APP_RANGE               60	
$EQU    CML_TAG_APP_CMIPMESSAGE         61	
$EQU    CML_TAG_APP_IPADDRESS           62	
$EQU    CML_TAG_APP_ID802_SNAP          63	
$EQU    CML_TAG_APP_IDENETV2_TYPE       64	
$EQU    CML_TAG_APP_FDDITIMER           65	
$EQU    CML_TAG_APP_ENETPROTTYPE        66	
$EQU    CML_TAG_APP_WILDCARD            127	
; Protocol Identifier [Application 55] 
$EQU	CML_TAG_PID_NULL                00  ;Reserved 	
$EQU	CML_TAG_PID_OSIOBJECTIDENTIFIER 00  ; xx	
$EQU	CML_TAG_PID_RESERVED            01	
$EQU	CML_TAG_PID_RES_SESSCONTAPPLICA 01	;xx	
$EQU	CML_TAG_PID_DNASESSIONCONTROLV2 02	
$EQU	CML_TAG_PID_DNASESSIONCONTROLV3 03	
$EQU	CML_TAG_PID_NSP                 04	
$EQU	CML_TAG_PID_ISO8073             05  ;(CONS)	
$EQU	CML_TAG_PID_OSINETWORK          06	
$EQU	CML_TAG_PID_TCP                 07	
$EQU	CML_TAG_PID_TCPWELLKNOWNPORTS   07	;xx	
$EQU	CML_TAG_PID_UDP                 08	
$EQU	CML_TAG_PID_UDPWELLKNOWNPORTS   08	;xx	
$EQU	CML_TAG_PID_IP                  09	
$EQU	CML_TAG_PID_CONNMODENCS         10	;(OSF)
$EQU	CML_TAG_PID_CLNSMODENCS         11	;(OSF)	
$EQU	CML_TAG_PID_NDR                 12 	;(OSF) 	
$EQU	CML_TAG_PID_SCA                 13  	;(LAVC) 	
$EQU	CML_TAG_PID_NCSNIDL             13	;xx	
$EQU	CML_TAG_PID_ISO8602             14	; (CLNS)  
$EQU	CML_TAG_PID_RESERVED            15	
$EQU	CML_TAG_PID_NAMEDPIPES          16	;(Microsoft) 	
$EQU	CML_TAG_PID_NETBIOS             17	;(Microsoft) 	
$EQU	CML_TAG_PID_NETBEUI             18	;(Microsoft) 	
$EQU	CML_TAG_PID_SPX                 19	;(Netware)
$EQU	CML_TAG_PID_IPX                 20	;(Netware)
; EMU Applications
; CSMACD Counters
$EQU	CSMACDCNT_C_SIZE                240	;Size of return block 
$EQU	CSMACDCNT_C_MAXNAME		15	; Max size of name
$EQU	CSMACDCNT_AC_NAME 		0	; .ascic ent name (16 bytes)
$EQU	CSMACDCNT_Q_TIME 		16	; System time when executed
$EQU	CSMACDCNT_Q_OCTREC		24	; CMIP Param 82
$EQU	CSMACDCNT_Q_OCTSEN		32	; CMIP Param 83
$EQU	CSMACDCNT_Q_PDUREC		40	; CMIP Param 84
$EQU	CSMACDCNT_Q_PDUSEN		48	; CMIP Param 85
$EQU	CSMACDCNT_Q_MCOCTREC		56	; CMIP Param 86
$EQU	CSMACDCNT_Q_MCOCTSEN		64	; CMIP Param 87
$EQU	CSMACDCNT_Q_MCPDUSREC		72	; CMIP Param 88
$EQU	CSMACDCNT_Q_MCPDUSENT		80	; CMIP Param 89
$EQU	CSMACDCNT_Q_DEFFERED		88	; CMIP Param 90
$EQU	CSMACDCNT_Q_1COLLISION		96	; CMIP Param 91
$EQU	CSMACDCNT_Q_MULTCOLLISION	104	; CMIP Param 92
$EQU	CSMACDCNT_Q_EXCCOLLISION	112	; CMIP Param 93
$EQU	CSMACDCNT_Q_CARRIERCHECK	120	; CMIP Param 94
$EQU	CSMACDCNT_Q_LATECOLLISION	128	; CMIP Param 95
$EQU	CSMACDCNT_Q_COLLCHECKFAIL	136	; CMIP Param 96
$EQU	CSMACDCNT_Q_FRAMECHECKERR	144	; CMIP Param 97
$EQU	CSMACDCNT_Q_FRAMESIZEERR	152	; CMIP Param 98
$EQU	CSMACDCNT_Q_SENDATLENERR	160	; CMIP Param 99
$EQU	CSMACDCNT_Q_ALIGNMENTERR	168	; CMIP Param 100
$EQU	CSMACDCNT_Q_FRAMETOOLONG	176	; CMIP Param 101
$EQU	CSMACDCNT_Q_RECDATLENERR	184	; CMIP Param 102
$EQU	CSMACDCNT_Q_UNRECDEST		192	; CMIP Param 103
$EQU	CSMACDCNT_Q_UNRECMCDEST		200	; CMIP Param 104
$EQU	CSMACDCNT_Q_DATAOVERRUN		208	; CMIP Param 105
$EQU	CSMACDCNT_Q_UNAVAILSTATIONBUF	216	; CMIP Param 106
$EQU	CSMACDCNT_Q_UNAVAILUSERBUFF	224	; CMIP Param 107
$EQU	CSMACDCNT_Q_STATIONFAILURES	232	; CMIP Param 108
; Routines in EMU_CMIP                 
; CMIP Header parse
$EQU	ECP_CHP_C_SIZE			512	; Recommended outp size
$EQU	ECP_CHP_Q_ENT 			0	; Specific part of entity class
$EQU	ECP_CHP_L_HEDLEN		8	; Total len of header
$EQU	ECP_CHP_AC_NAME			12	; Entity name (if found)
; Extract primatives from CMIP param
$EQU	ECP_XTP_L_PARAM			0	; Decoded param number
$EQU	ECP_XTP_L_NUMP			4	; Number of primatives found
$EQU	ECP_XTP_C_1STSLOT		8	; 1st tag slot
; for each primative:
$EQU	ECP_XTP_L_TAG 			0	; Tag. Made up of:
$EQU	ECP_XTP_W_TCLAS			0	; Tag class
$EQU	ECP_XTP_W_TVAL 			2	; Decoded Value
$EQU	ECP_XTP_L_DLEN			4	; Len of following data
$EQU	ECP_XTP_C_DVAL			8	; ASN1 coded value (stripped)
; In case of SINGLE primative found:
$EQU	ECP_XTP1_L_TAG 			8	; Tag. Made up of:
$EQU	ECP_XTP1_W_TCLAS		8	; Tag class
$EQU	ECP_XTP1_W_TVAL 		10	; Decoded Value
$EQU	ECP_XTP1_L_DLEN	 		12	; Len of floowing data
$EQU	ECP_XTP1_C_DVAL			16	; ASN1 coded value (stripped)
; Extract param from CMIP block
$EQU	ECP_XTPM_L_LEN			0	; Len of 1 param
$EQU	ECP_XTPM_L_PARAM		4	; Decoded param number
$EQU	ECP_XTPM_L_NUMP			8	; Number of primatives found
$EQU	ECP_XTPM_C_1STSLOT		12	; 1st tag slot
; for each primative:
$EQU	ECP_XTPM_L_TAG 			0	; Tag. Made up of:
$EQU	ECP_XTPM_W_TCLAS		0	; Tag class
$EQU	ECP_XTPM_W_TVAL 		2	; Decoded Value
$EQU	ECP_XTPM_L_DLEN			4	; Len of following data
$EQU	ECP_XTPM_C_DVAL			8	; ASN1 coded value (stripped)
; In case of SINGLE primative found:
$EQU	ECP_XTPM1_L_TAG 		12	; Tag. Made up of:
$EQU	ECP_XTPM1_W_TCLAS		12	; Tag class
$EQU	ECP_XTPM1_W_TVAL 		14	; Decoded Value
$EQU	ECP_XTPM1_L_DLEN	 	16	; Len of floowing data
$EQU	ECP_XTPM1_C_DVAL		20	; ASN1 coded value (stripped)


; Make table 
$EQU	ECP_MKT_C_SIZE			16 	; Len 1 entry
$EQU	ECP_MKT_L_PARAM			0	; Param number
$EQU	ECP_MKT_L_SIZE                  4	; Size of outp field
$EQU	ECP_MKT_L_FMT			8	; Format symbol (below)
$EQU	ECP_MKT_L_OUTP			12	; Offset to outp field
; Make table symbols
$EQU	ECP_MKT_C_ASIS			0	; No format
$EQU	ECP_MKT_C_ASCIC			1	; Return ascic
$EQU	ECP_MKT_C_LONG			2	; 
$EQU	ECP_MKT_C_LONGR			3	; Long byte reversed
$EQU	ECP_MKT_C_EA			4	; .QUAD ethernet addr
$EQU	ECP_MKT_C_QUAD                  5
$EQU	ECP_MKT_C_QUADR			6	; Quad reversed
$EQU	ECP_MKT_C_NAME			7	; .ascic simple or full name
;
$EQU	ECP_GPR_L_TLEN 			0       ; Total len of data
$EQU	ECP_GPR_L_PARAM			4       ; CMIP Param number
$EQU	ECP_GPR_L_PCNT			8	; Count of primatives
$EQU	ECP_GPR_C_PLST			12	; Start of primatives
; For each primative:
$EQU	ECP_GPR_W_TCLAS			0	; Tag class
$EQU	ECP_GPR_W_TVAL			2	; Tag Value
$EQU	ECP_GPR_L_PLEN			4	; Len of this primative
$EQU	ECP_GPR_C_PDATA			8	; Primative data
; 1st primative:
$EQU	ECP_GPR_1ST_W_TCLAS		12	; Tag class
$EQU	ECP_GPR_1ST_W_TVAL		14	; Tag Value
$EQU	ECP_GPR_1ST_L_PLEN		16	; Len of this primative
; Get DN5 Adjacencies - outp format
$EQU	DN5ADJ_C_BLKSIZ			60	; Len of 1 adjacency
$EQU	DN5ADJ_B32_CIRC			0	; Circuit name
$EQU	DN5ADJ_B24_NET			32	; NET of adjacency (OSI addr)
$EQU	DN5ADJ_L_TYPE			56	; Node type
; Node types
$EQU	CML_TAG_NODTYP_C_PVE		0	; Phase V end
$EQU	CML_TAG_NODTYP_C_NDN		1	; Non DNA router
$EQU	CML_TAG_NODTYP_C_PVR		2	; Phase V router
$EQU	CML_TAG_NODTYP_C_PV1		3	; Phase V L1
$EQU	CML_TAG_NODTYP_C_PV2		4	; Phase V L2
$EQU	CML_TAG_NODTYP_C_PIVE		5	; Phase IV  end
$EQU	CML_TAG_NODTYP_C_PIV1		6	; Phase IV L1
$EQU	CML_TAG_NODTYP_C_PIV2		7	; Phase IV L2
$EQU	CML_TAG_NODTYP_C_PIVR		8	; Phase IV Router




	$DEFEND	EMUCMIPDEF,$GBL,DEF
	.ENDM
