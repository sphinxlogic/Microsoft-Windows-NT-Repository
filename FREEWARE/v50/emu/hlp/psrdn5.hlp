1 PSRDN5
 This routine will receive all multicast messages on protocol
 FE. The messages are in common format with each type assigned
 a number. Following messages are defined:
 Type		Name        		
 1		Error report          
 2		End node hello
 4 		Router helo
 6		Redirect
 15		LAN L1 Router to router hello
 16		LAN L2 Router to router hello
 17		Pt to Pt router to router hello      *
 18		Link state packet - L1
 20		Link state packet - L2
 23		XID
 24		Complete Seq Numbers - L1
 25		Complete Seq Numbers - L2
 26		Partial Seq Numbers - L1
 27		Partial Seq Numbers - L2
 28		Data packet	                     *
 * = we don't expect these frames
2 PSRDN5_CHECK_ALIAS
 Routine to check for the existance of an alias address.
 The ID portion of the NETs address (p2) is compared to the
 Ethernet source. If the NETs starts with AA-00-04-00 and it matches the
 ethernet source then NORMAL is returned. Otherwise SS$_IDMISMATCH is 
 returned. Neither param is written.
3 Inputs
  .address of ethernet source. This the address this frame was received from.
  .address of NETs. This is a counted string OSI address.
3 Outputs
  None
3 Returns
  SS$_NORMAL		Address is not alias
  SS$_IDMISMATCH       Address is alias
2 PSRDN5_CHECK_ENTRY
 Routine to check and (possibly) update a record.
3 Fields_written
3 Inputs
  Record	.address of rec to check
3 Outputs
 relater frame
 Alert if routing type changed
2 MAP_DN5DB   
 Routine to create and initialise the DN5 db. This is a standard routine
 that any DB creator execxutes on it's own DB:
	Acquire exclusive lock on this database. 
		Fatal error if not granted.
	Open file - if file not opened used hardcoded defaults.
	Create section. Fatal error ir we did not CREATE.
	Initalise with either file contents or defaults
	Write section size (in pages) to LVB
	Convert lock to CW
	That's it!
