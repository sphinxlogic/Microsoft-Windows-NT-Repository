	.TITLE	TST_GETDN5ADJ  
	.IDENT /V01-001/
;
	.LIBRARY	"EMU5_LIB:EMU5.MLB"
	EMUCMIPDEF
	EMUDBDEF
	EMUPSRDEF
	EMUSYSDEF
	EMUCMIPDEF
	$TRMDEF		; Terminal Modifiers
	$DSCDEF		; Declare DSC sysmbols
	$SMGDEF		; Declare SMG symbols
	$IODEF
	$SSDEF
	$SECDEF				; Global Section 
	.PSECT	DATA WRT,NOEXE,QUAD

; returned addresses
CONTROL_A:		.QUAD
DN5MAPS:
                .QUAD	0
		.LONG	SYS_PID_C_PSRDN5
		.LONG	PSR_DN5_B20_ADDR
		.LONG	0			; Lock ID
		.LONG	0			; Spare/align
		.ADDRESS EMU_DN5DB
		.ADDRESS EMU_PSRDN5


COUNTERS_A:		.QUAD
DADDR:			.QUAD
CRCDESC:		.QUAD	0
CRCINIT:		.LONG	0
CRCPOLY:		.LONG  ^O120001
CRCTBL:			.BLKL	16	
FNAME:		.BLKB	512
FNAME_D:	.LONG	.-FNAME
		.ADDRESS  FNAME



KEY_BUF:
PROTO:		.LONG
BOXID:		.LONG
TBL:		.LONG
PARAM:		.LONG
INSTANCE:	.LONG
HIORD:		.BYTE	^XAA,^X00,^X04,^X00	; Hi order of decnet address
DECID:		.BYTE	^X2B,^X0C,^X02,^X87     ; Hi order of DEC Id
NSAP_BUF:	.BLKB	64
NSAP_DESC:	.LONG	.-NSAP_BUF
		.ADDRESS  NSAP_BUF
FAOBUF:		.BLKL	132
FAODESC:
FAOLEN:		.LONG	.-FAOBUF
		.ADDRESS  FAOBUF
FAOLIST:	.BLKL	64
FAOSTR:		.BLKB	64
FAOSTR_D:	.LONG	.-FAOSTR 		; Dynamic
		.ADDRESS  FAOSTR
DN4TYP:		.WORD	^X0360
PROMPT:		.ASCID	/ Internal DECnet IV (<CR> to test all) :/
ADJ:		.ASCID	/ !AC  !AS !UL/
CLI:		.ASCID	/ Client            = (!UL) !UL !UL !AC/
EUSER:		.ASCID	/ End User          = (!UL) !UL !UL !AC/
PROX:		.ASCID	/ Proxy             = (!UL) !UL !UL !UL/
IPROX:		.ASCID	/ Incoming proxy    = (!UL) !UL !UL !UL/
MAXI:		.ASCID	/ Max Instance      = (!UL) !UL !UL !UL/
IMAGE:		.ASCID	/ Image             = (!UL) !UL !UL !AC/
USER:		.ASCID	/ User 	            = (!UL) !UL !UL !AC/
RESPMSG:      	.ASCID	/ !2UL.!4UL Status = !XL /
FAOAC:		.ASCII	/!AC./
FAOUB:		.ASCII	/!UB./
FAOSEP:		.ASCII	/./
PRM_HEAD:	.ASCID	/ CMIP Param = !UL, Primitives = !UL/
TITLE:		.ASCID	/ Class  Tag   Len       Data /
ADATA:		.ASCID	/ !4<!UL!>  !4<!UL!>  !4<!UL!>   !AD/ 
DATA:		.ASCID	/ !4<!UL!>  !4<!UL!>  !4<!UL!>   !XL !XL !XL !XL/ 
;
EMU_DN5DB:	
		.ASCID	\EMU_DN5DB\            ; Lock name
EMU_PSRDN5:	
		.ASCID	\EMU_PSRDN5\  		; Section name

PRCR01:		.BYTE	^XE1,^XCA
	.ALIGN	LONG



; Return packet
	.ALIGN	LONG
COUNT:		.LONG	0
CONTEXT:	.LONG	0
RETURN:	 	.BLKB	8192		
RETURN_D:       .LONG	.-RETURN
		.ADDRESS  RETURN
RETURN2:	 .BLKB	8192		
RETURN2_D:       .LONG	.-RETURN2
		.ADDRESS  RETURN2
;
; Virtual Display Parameters
;
VD_DISP:	.LONG		; Virtual Display ID
VD_ROWS: 	.LONG 48
VD_COLS: 	.LONG 132
;
; Pasteboard Paramenters
;
PB_BOARD:	.LONG 		; Pasteboard ID
PB_COL:		.LONG	1      
PB_ROW:		.LONG 	1
;
; Virtual Keyboard Parameters
;
KB_BOARD:	.LONG           ; Virtual Keyboard ID
KB_BUF:		.BLKB	80	; Input buffer
KB_DES:		.LONG	.-KB_BUF
		.ADDRESS KB_BUF
BYTCNT:		.WORD		; Input Byte counter
OSITYP: 	.WORD   ^XFE00
; Misc SMG ...
CMDCOL:		.LONG	1
CMDROW:		.LONG	1
CURCOL:		.LONG   1
CURROW:		.LONG   3
UPCASE:         .LONG   TRM$M_TM_CVTLOW         ;Convert lower to upper case
TIMEOUT:	.LONG	15
CHARCNT:	.LONG	15
FIRSTFLG:	.LONG	0
CURSOR_FLAGS:	.LONG	<SMG$M_CURSOR_OFF!SMG$M_SCROLL_JUMP>
RESCNT:		.LONG	0
INPT:		.LONG	0
INADR:		.LONG	0		

	.PSECT	CODE	EXE,NOWRT,LONG
;	.ENTRY	TST_GETDN5ADJ,^M<>
	.CALL_ENTRY	MAX_ARGS=12, HOME_ARGS=TRUE, -
			INPUT=<R2,R3,R4,R5,R6,R7,R8,R9,R10,R11>, -
			PRESERVE=<R2,R3,R4,R5,R6,R7,R8,R9,R10,R11>, -
			LABEL=TST_GETDN5ADJ
; Command interface MBX. Define LNM$TEMPORARY_MAILBOX = LNM$SYSTEM
; make all temporary things in the system logical name table
	calls	#0, g^asn_tempmbx_system
	bsbw	sca_error_chk		; 
;

; Build Initial Display
	
	BSBW	CREATE_ENVIRONMENT
; Create CRC table for later input to CRC generation
	PUSHAL	CRCTBL
	PUSHAL	CRCPOLY		;  16 bit 
	CALLS	#2,G^LIB$CRC_TABLE
;	
; Create and Map to sections 
	PUSHAL	COUNTERS_A
	CALLS	#1,G^MAP_COUNTERS
	BSBW	SCA_ERROR_CHK
	pushal	control_a		; Control section return addresses
	calls	#1, g^map_control	; Create and map control section
	BSBW	SCA_error_chk		; check errors
	PUSHAL	DN5MAPS				; Map structure
        CALLS	#1,G^MAPLVB_DB  

	BSBW	SCA_ERROR_CHK		;
; Get either input addr or all:
1$:
	PUSHAL	VD_DISP                 ; Output display
	CLRL	-(SP)                   ; Blank 
	PUSHAL	BYTCNT                  ; Bytes to display
	CLRL	-(SP)                   ; Blank 
	CLRL	-(SP)                   ; Blank 
	PUSHAL	UPCASE                  ; Make input UPCASE 
	CLRL	-(SP)                   ; Blank 
	PUSHAL	PROMPT                      ; Output DSC
	PUSHAL	KB_DES                  ; Input buf
	PUSHAL	KB_BOARD                ; Input ID
	CALLS	#10,G^SMG$READ_STRING
	BLBC	R0,5$			; Ignore any error
	TSTW	BYTCNT			; any Input?
	BEQL	5$

	PUSHAL	INADR
	PUSHAL	KB_BUF
	MOVZWL	BYTCNT,-(SP)
	CALLS	#3,G^LIB$CVT_HTB
	BLBC	R0,1$
        MOVAL	INPT,R10
	BRW	60$
5$:


	MOVL	DN5MAPS,R11		; Top of table
	ADDL3	#PSR_DN5_C_RECSIZE,R11,R6		; 1st entry 
	MOVL	COM_DBHDR_L_ENTRIES(R11),R11		; Entries
	BNEQU	10$					
	RET
10$:
	BBC	#SYS_COM_V_DELETE,COM_HDR_L_SYSCTL(R6),20$ ; Br if not deleted
	BRW	40$
; Deternmine if this address is a candidate.
; if the last 7 digits of the address match :
; AA-00-04-00-xx-xx-21 (xx = dont care)
; then select this addr
20$:
       	SUBL3	#7,COM_HDR_L_LEN(R6),R1	; Offset to last 7
	ADDL3	#PSR_DN5_B20_ADDR,R6,R10         ; Addr
	ADDL	R1,R10				; 
	CMPL	(R10),HIORD
	BEQLU	60$
	BRW	40$
30$:
45$:
	CLRL	RESCNT				; Response count flag
	TSTW	BYTCNT
	BEQL	40$
	RET
40$:
	ADDL	#PSR_DN5_C_RECSIZE,R6		; Next entry
	SOBGTR	R11,10$
        RET
50$:	
	CLRL	CONTEXT
60$:
        MOVL	#8192,RETURN_D
	PUSHAL	COUNT
	PUSHAL	RETURN_D               	; Output block
	MOVZWL	4(R10),-(SP)             ; Node number
	CALLS	#3,G^GETDN5ADJ

	MOVL	R0,R8                  ; Save return
	MOVL	#132,FAODESC
	MOVZWL	4(R10),DADDR
	EDIV    #1024,DADDR,R2,R3
	PUSHL	R0			; Return
	PUSHL	R3
	PUSHL	R2
	PUSHAL	FAODESC
	PUSHAL	FAODESC
	PUSHAL	RESPMSG
	CALLS	#6,G^SYS$FAO
	BLBS	R0,70$
	RET
70$:
	BSBW	PRINT
	BRW	80$
	TSTL	RESCNT
	BEQL	75$  			; SKip if 1st entry does not ans
	addl	#4,r9
	BRW	40$
75$:	BRW	45$
80$:
	TSTL	COUNT
	BEQL	90$
	MOVAL	RETURN,R7
85$:
; xlate the NSAP
	MOVL	#64,NSAP_DESC
	ADDL3	#DN5ADJ_B24_NET,R7,R1
	PUSHAL	NSAP_DESC
	ADDL3 	#1,R1,-(SP)
	MOVZBL	(R1),-(SP)
	CALLS	#3,G^XLATE_NSAP

	
	



	MOVL	#132,FAODESC
	PUSHL	DN5ADJ_L_TYPE(R7)
	PUSHAL	NSAP_DESC
	ADDL3	#DN5ADJ_B32_CIRC,R7,-(SP)
        PUSHAL	FAODESC
	PUSHAL	FAODESC
	PUSHAL	ADJ
	CALLS	#6,G^SYS$FAO
	BSBW	PRINT
	ADDL	#DN5ADJ_C_BLKSIZ,R7
	SOBGTR	COUNT,85$	
90$:
	BRW	45$
; Print subroutines
;
PRINT:
	.JSB_ENTRY	INPUT=<R2,R3,R4,R5,R6,R7,R8,R9,R10,R11>, -
			OUTPUT=<R2,R3,R4,R5,R6,R7,R8,R9,R10,R11>
		PUSHAL	FAODESC
		PUSHAL	VD_DISP
		CALLS	#2,G^SMG$PUT_LINE
		BSBW	SCA_ERROR_CHK
		RSB

PRINTH:		
		PUSHL	R1			; Addr of .ascid in R1
		PUSHAL	VD_DISP
		CALLS	#2,G^SMG$PUT_LINE
		BSBW	SCA_ERROR_CHK
		RSB
;

CREATE_ENVIRONMENT:
	.JSB_ENTRY	INPUT=<R2,R3,R4,R5,R6,R7,R8,R9,R10,R11>, -
			OUTPUT=<R2,R3,R4,R5,R6,R7,R8,R9,R10,R11>

;
; Create Virtual Display
;
CR_DISP:
	CLRL	-(SP)
	PUSHAL	VD_DISP
	PUSHAL	VD_COLS
        PUSHAL	VD_ROWS
	CALLS	#4,G^SMG$CREATE_VIRTUAL_DISPLAY
	BSBW	SCA_ERROR_CHK
;
; Create Pasteboard
;
	PUSHAL	PB_BOARD
	CALLS	#1,G^SMG$CREATE_PASTEBOARD
	BSBW	SCA_ERROR_CHK
;
; Enable Unsolocited Input
;
;	PUSHAL	GET_INPUT                        ; AST Routine
;	PUSHAL	PB_BOARD                         ; PB ID
;	CALLS	#2,G^SMG$ENABLE_UNSOLICITED_INPUT
;	BSBW	SCA_ERROR_CHK

;
; Create Virtual Keyboard
;
	PUSHAL	KB_BOARD
	CALLS	#1,G^SMG$CREATE_VIRTUAL_KEYBOARD
	BSBW	SCA_ERROR_CHK
;
; Associate the pasteboard and Virtual Display
;
	PUSHAL	PB_COL		;Column
	PUSHAL	PB_ROW		;Row
	PUSHAL	PB_BOARD
	PUSHAL	VD_DISP
	CALLS	#4,G^SMG$PASTE_VIRTUAL_DISPLAY
	BSBW	SCA_ERROR_CHK
;
	pushal	cursor_flags                    ; Turn cursor off
	pushal	PB_BOARD
	calls	#2, g^smg$set_cursor_mode
	RSB
SCA_ERROR_CHK:
	.JSB_ENTRY	INPUT=<R2,R3,R4,R5,R6,R7,R8,R9,R10,R11>, -
			OUTPUT=<R2,R3,R4,R5,R6,R7,R8,R9,R10,R11>

	BLBC	R0,10$
	RSB
10$:
	$EXIT_S	R0


	.CALL_ENTRY	MAX_ARGS=1, -
			HOME_ARGS=TRUE, - 
			INPUT=<R2,R3,R4,R5,R6,R7,R8,R9,R10,R11>, -
			PRESERVE=<R2,R3,R4,R5,R6,R7,R8,R9,R10,R11>, -
			LABEL=TST_DISPLAY_PRIMITIVES
;++
;2 DISPLAY_PRIMITIVES
; Routine to log results from GETOSI (which see)
; to file. Called when debug options set.
;3 Inputs
;  .addr of desc pointing to GETOSI outp block
;3 Outputs
;  Formatted records written to screen.
;--   

; Display results from get_osi
	MOVQ	@4(AP),R6		; Input desc
	ADDL3	R6,R7,R9		; Last addr
; Header
1$:
	MOVL	#132,FAODESC
	PUSHL	8(R7)                   ; Number of primitives
	PUSHL	4(R7)                	; Param
	PUSHAL	FAODESC
	PUSHAL	FAODESC
	PUSHAL	PRM_HEAD
	CALLS	#5,G^SYS$FAO
	BSBW	PRINT
	MOVL	8(R7),R11		; Loop control
	BGTR	10$
	MOVL	#SS$_NORMAL,R0
	RET
10$:
	ADDL	#12,R7			; 1st entry
20$:
; display each primitive as:
;	Class	Tag	Len	Data (either formatted or 1st 16 bytes)
; Attempt to format
	CASEW	(R7),#0,#3		; Select processing routine for class
30$:                             
	.WORD	1000$-30$                         
	.WORD	2000$-30$                         
	.WORD	3000$-30$                         
	.WORD	4000$-30$                         
	MOVL	#SS$_DATACHECK,R0        ; Screwed up
	RET
1000$:					; Universal
	CASEW	2(R7),#0,#7		; Select processing for universal tag
1010$:                             
	.WORD	1100$-1010$                         
	.WORD	1200$-1010$                         
	.WORD	1300$-1010$                         
	.WORD	1400$-1010$                         
	.WORD	1500$-1010$                         
	.WORD	1600$-1010$                         
	.WORD	1700$-1010$                         
	.WORD	1800$-1010$  
	BRW	10000$			; No formatter                       
		
; FOrmat routines for universal tags
1100$:
	BRW	10000$			; Boolean - Use default format
1200$:
	
1300$:
1400$:
1500$:
1600$:
1700$:
1800$:
       BRW	10000$
2000$:					 ; Application
; Format routines for Application tags
	CASEW	2(R7),#0,#66		; Select processing for universal tag
2900$:
	.WORD	2100$-2900$	; Null - Null entity class 
	.WORD	2101$-2900$	; BOOLEAN
	.WORD	2102$-2900$	; UNSIGNEDINT16	
	.WORD	2103$-2900$	; UNSIGNEDINT32	
	.WORD	2104$-2900$	; UNSIGNEDINT64	
	.WORD	2105$-2900$	; SIGNEDINT16	
	.WORD	2106$-2900$	; SIGNEDINT32	
	.WORD	2107$-2900$	; SIGNEDINT64	
	.WORD	2108$-2900$	; OCTET	
	.WORD	2109$-2900$	; OCTETSTRING	
	.WORD	21010$-2900$	; ENUMERATION	
	.WORD	21011$-2900$	; NULL	
	.WORD	21012$-2900$	; NUMERICSTRING	
	.WORD	21013$-2900$	; BITSET	
	.WORD	21014$-2900$	; RECORD	
	.WORD	21015$-2900$	; SEQUENCE	
	.WORD	21016$-2900$	; char abstime
	.WORD	21017$-2900$	; bin abstine
	.WORD	21018$-2900$	; char reltime
	.WORD	21019$-2900$	; bin reltime
	.WORD	21020$-2900$	; latin (printable string)
	.WORD	21021$-2900$	; SET	
	.WORD	21022$-2900$	; UNSIGNEDINT8
	.WORD	21023$-2900$	; SIGNEDINT8	
	.WORD	21024$-2900$	; Unassigned	
	.WORD	21025$-2900$	; Unassigned	
	.WORD	21026$-2900$	; simple name
	.WORD	21027$-2900$	; full name
	.WORD	21028$-2900$	; UID -16 bytes
	.WORD	21029$-2900$	; known			- implict null - wildcard
	.WORD	21030$-2900$	; entity name    		- sequence of objid
	.WORD	21031$-2900$	; local entity name	-   "
	.WORD	21032$-2900$	; default - implicit null
	.WORD	21033$-2900$	; version number		- 4 bytes (Status(V) maj,min,ECO)
	.WORD	21034$-2900$	; ID			- LAN addr
	.WORD	21035$-2900$	; DTE addr
	.WORD	21036$-2900$	; file spec
	.WORD	21037$-2900$	; NSAP addr
	.WORD	21038$-2900$	; NET Ent Title
	.WORD	21039$-2900$	; area addr
	.WORD	21040$-2900$	; counter16
	.WORD	21041$-2900$	; counter32
	.WORD	21042$-2900$	; counter64
	.WORD	21043$-2900$	; addr prefix
	.WORD	21044$-2900$	; Towerset
	.WORD	21045$-2900$	; endusersepc
	.WORD	21046$-2900$	; transport selector
	.WORD	21047$-2900$	; phaseIV name
	.WORD	21048$-2900$	; PhasIV addr
	.WORD	21049$-2900$	; implementation          - set of component
	.WORD	21050$-2900$	; version edit number	- seq
	.WORD	21051$-2900$	; component name          - record containing component name, version
	.WORD	21052$-2900$	; DNS timstamp            -14 bytes
	.WORD	21053$-2900$	; entity class 		- obj id
	.WORD	21054$-2900$	; bit string
	.WORD	21055$-2900$	; floor	 - seq of {protocol(protocolIdentifier), addr } see prottabl
	.WORD	21056$-2900$	; Protocol tower   set of floor (55)
	.WORD	21057$-2900$	; EVENTCLASS	
	.WORD	21058$-2900$	; EVENTINSTANCE	
	.WORD	21059$-2900$	; SUBRANGE	
	.WORD	21060$-2900$	; RANGE	
	.WORD	21061$-2900$	; CMIPMESSAGE	
	.WORD	21062$-2900$	; IPADDRESS	
	.WORD	21063$-2900$	; ID802_SNAP	
	.WORD	21064$-2900$	; IDENETV2_TYPE	
	.WORD	21065$-2900$	; FDDITIMER	
	.WORD	21066$-2900$	; EnetProtType
        BRW	10000$		; No formatter

2100$:				; Null - Null entity class 
2101$:				; BOOLEAN
2102$:				; UNSIGNEDINT16	
2103$:				; UNSIGNEDINT32	
2104$:				; UNSIGNEDINT64	
2105$:				; SIGNEDINT16	
2106$:				; SIGNEDINT32	
2107$:				; SIGNEDINT64	
2108$:				; OCTET	
2109$:				; OCTETSTRING	
21010$:				; ENUMERATION	
21011$:				; NULL	
21012$:				; NUMERICSTRING	
21013$:				; BITSET	
21014$:				; RECORD	
21015$:				; SEQUENCE	
21016$:				; char abstime
21017$:				; bin abstine
21018$:				; char reltime
21019$:				; bin reltime
	BRW	10000$
21020$:				; latin (printable string)
	ADDL3	#8,R7,R1	; Addr of string
	MOVL	4(R7),R0   	; Len of string
	BRW	30000$

21021$:				; SET	
21022$:				; UNSIGNEDINT8
21023$:				; SIGNEDINT8	
21024$:				; Unassigned	
21025$:				; Unassigned	
	BRW	10000$
21026$:				; simple name
	ADDL3	#10,R7,R1	; Addr of string
	MOVZBL	9(R7),R0   	; Len of string
	BRW	30000$
	

21027$:				; full name
	MOVL	#512,FNAME_D
	PUSHAL	FNAME_D		; Write string here
	ADDL3	#6,R7,-(SP)	; Xtracted param
	CALLS	#2,G^CMIP_XTRFULLNAME
	MOVL	FNAME_D,R0	; Len
	MOVL	FNAME_D+4,R1	; ADDR
	BRW	30000$

; 
21028$:				; UID -16 bytes
21029$:				; known			- implict null - wildcard
21030$:				; entity name    		- sequence of objid
21031$:				; local entity name	-   "
21032$:				; default - implicit null
21033$:				; version number		- 4 bytes (Status(V) maj,min,ECO)
21034$:				; ID			- LAN addr
21035$:				; DTE addr
21036$:				; file spec
21037$:				; NSAP addr
21038$:				; NET Ent Title
21039$:				; area addr
21040$:				; counter16
21041$:				; counter32
21042$:				; counter64
21043$:				; addr prefix
21044$:				; Towerset
21045$:				; endusersepc
21046$:				; transport selector
21047$:				; phaseIV name
21048$:				; PhasIV addr
21049$:				; implementation          - set of component
21050$:				; version edit number	- seq
21051$:				; component name          - record containing component name, version
21052$:				; DNS timstamp            -14 bytes
21053$:				; entity class 		- obj id
21054$:				; bit string
21055$:				; floor	 - seq of {protocol(protocolIdentifier), addr } see prottabl
21056$:				; Protocol tower   set of floor (55)
21057$:				; EVENTCLASS	
21058$:				; EVENTINSTANCE	
21059$:				; SUBRANGE	
21060$:				; RANGE	
21061$:				; CMIPMESSAGE	
21062$:				; IPADDRESS	
21063$:				; ID802_SNAP	
21064$:				; IDENETV2_TYPE	
21065$:				; FDDITIMER	
21066$:				; EnetProtType
	BRW	10000$




3000$:                                   ; Context specific
4000$:                                   ; Private



10000$:

	MOVL	#132,FAODESC
	PUSHL	8(R7)		; Data
	PUSHL	12(R7)
	PUSHL	16(R7)
	PUSHL	20(R7)
	PUSHL	4(R7)   	; Len
	MOVZWL	2(R7),-(SP)     ; Tag
	MOVZWL	(R7),-(SP)      ; Class
	PUSHAL	FAODESC
	PUSHAL	FAODESC
	PUSHAL	DATA
	CALLS	#10,G^SYS$FAO
	BSBW	PRINT
20000$:
	ADDL	4(R7),R7
	ADDL	#8,R7
	SOBGTR	R11,20020$
	CMPL	R7,R9
	BLSS	20010$
	MOVL	#SS$_NORMAL,R0
	RET
20010$:
	BRW	1$
20020$:
	BRW	20$
30000$:
	MOVL	#132,FAODESC
	PUSHL	R1		; Addr of string
	PUSHL	R0		; Len of string
	PUSHL	4(R7)   	; Len
	MOVZWL	2(R7),-(SP)     ; Tag
	MOVZWL	(R7),-(SP)      ; Class
	PUSHAL	FAODESC
	PUSHAL	FAODESC
	PUSHAL	ADATA
	CALLS	#8,G^SYS$FAO
	BSBW	PRINT
	BRW	20000$



	.END	TST_GETDN5ADJ


