<chapter>(Installation\instal)

<p> <X>(installation)   
<list>(numbered)
<le>Create the root directory for the EMU system. This can be on any
    disk at any level. The system resides in various directories under
    this to a level of 3 max so make sure you do not create the root
    at a depth greater than 4.
<line>
    $CREATE/DIR disk:[emu]
<le>The files created in the next section will consume about 75,000 blocks of
disk space. The running system will (very dependant on the size of your network)
will consume a further 50,000 - 100,000 blocks. 
<le>Set default to this directory and backup the saveset:
<line>
    $BACKUP/LO Tape:[...]*.*;*
<le>Edit [.SRC]EMU_LOGICALS.COM  and replace the first executable line
    with the device and directory you created in step 1. Remember to
    include the final '.' in the directory spec as this will become a
    rooted logical. 
<le>Execute EMU_LOGICALS.COM:
<x>(EMU_LOGICALS.COM)
<line>
    $ @[.SRC]EMU_LOGICALS
<le>Ensure you got the expected effect:
<line>
    $SHO LOG EMU*
<line>
    You should see a list of directories under the directory you created
    in step 1.
<line>
    $DIR EMU5_SRC:
<line>
    You should see a list of .MAR files 
<le>All being well set default to EMU5_SRC: and execute BUILD:
<x>(BUILD.COM)
<line>
    @BUILD
<line>
    Answer 'YES' to the question 'Compile all subroutines (YES/n)'
<le>The system will then build the necessary libraries
<le>A number of warning messages will be displayed during compilation. 
    These can be ignored as long as the process continues to completion. 
<le>When finished (Maybe 20 min or so) answer 'YES' to the question 
<line>
    Compile all programs? (YES/n)
<line>
    This will build the system on the current version of VMS on the
    current architecture.
<le>A number of warning messages will be displayed during compilation. 
    These can be ignored as long as the process continues. 
<le>All EMU processes run under the system account. Ensure this
    account has the required quotas. A copy of one that works appears
    at the end of this list. 
<le>Ensure LAT, DECnet and UCX are all started.
<le>Ensure LATCP can see all services:
<line>
    $MCR LATCP SET NODE/USER=ENA=0-255
<line>
    The LAT processor will see all LAT devices on the net but updates
    from the local (VMS created) database. If the above is not done,
    EMU will likely find LAT nodes that VMS knows nothing about. 
<le>Finally, start the system:
<line>
<X>(START_EMU.COM)
    @EMU_SRC:START_EMU
<line>
    You may clear the databases and start fresh each time you start
    the system by answering 'y' and confirming this to the prompts.
    For excessive safety, on the first startup, do this.
<line>
    You may clear the log files on each startup. Generally a good idea
    (after review). There is no mechanism to control the size of these
    files automatically and while generally well behaved can, on
    occasion become churlish.
<endlist>
    Following is a snapshot for a system account that EMU works with.
    The most important quota is BYTLM. The listener enables
    promiscuous mode and saves as many frames as possible in the
    driver. This requires a LOT of BYTLM. There are undoutably more 
    optimum settings for the others.
<X>(System Account quotas)
<line>
Username: SYSTEM                           Owner:  SYSTEM MANAGER
<line>
Account:  SYSTEM                           UIC:    [1,4] ([SYSTEM])
<line>
CLI:      DCL                              Tables: DCLTABLES
<line>
Default:  SYS$SYSROOT:[SYSMGR]
<line>
LGICMD:
<line>
Flags:  DefCLI
<line>
Primary days:   Mon Tue Wed Thu Fri
<line>
Secondary days:                     Sat Sun
<line>
No access restrictions
<line>
Expiration:            (none)    Pwdminimum:  8   Login Fails:     1
<line>
Pwdlifetime:         30 00:00    Pwdchange:      (pre-expired)
<line>
Last Login: 16-AUG-2000 13:46 (interactive), 26-OCT-2000 11:00 (non-interactive)
<line>
Maxjobs:         0  Fillm:       250  Bytlm:       400000
<line>
Maxacctjobs:     0  Shrfillm:      0  Pbytlm:           0
<line>
Maxdetach:       0  BIOlm:       150  JTquota:       4096
<line>
Prclm:           0  DIOlm:       150  WSdef:         2048
<line>
Prio:            4  ASTlm:       250  WSquo:         6400
<line>
Queprio:         0  TQElm:        20  WSextent:     32000
<line>
CPU:        (none)  Enqlm:      2000  Pgflquo:     150000
<line>
Authorized Privileges:
<line>
  ACNT         ALLSPOOL     ALTPRI       AUDIT        BUGCHK       BYPASS
<line>
  CMEXEC       CMKRNL       DIAGNOSE     DOWNGRADE    EXQUOTA      GROUP
<line>
  GRPNAM       GRPPRV       IMPERSONATE  IMPORT       LOG_IO       MOUNT
<line>
  NETMBX       OPER         PFNMAP       PHY_IO       PRMCEB       PRMGBL
<line>
  PRMMBX       PSWAPM       READALL      SECURITY     SETPRV       SHARE
<line>
  SHMEM        SYSGBL       SYSLCK       SYSNAM       SYSPRV       TMPMBX
<line>
  UPGRADE      VOLPRO       WORLD
<line>
Default Privileges:
<line>
  ACNT         ALLSPOOL     ALTPRI       AUDIT        BUGCHK       BYPASS
<line>
  CMEXEC       CMKRNL       DIAGNOSE     DOWNGRADE    EXQUOTA      GROUP
<line>
  GRPNAM       GRPPRV       IMPERSONATE  IMPORT       LOG_IO       MOUNT
<line>
  NETMBX       OPER         PFNMAP       PHY_IO       PRMCEB       PRMGBL
<line>
  PRMMBX       PSWAPM       READALL      SECURITY     SETPRV       SHARE
<line>
  SHMEM        SYSGBL       SYSLCK       SYSNAM       SYSPRV       TMPMBX
<line>
  UPGRADE      VOLPRO       WORLD

         
<p>
    Note: EMU enables promiscuous mode on the local Ethernet device
    and attempts to read every packet on the cable. In most
    environments this causes very high I/O on the system and often
    results in significant impact on the node. It is strongly
    advised to run it on a standalone, dedicated VMS system. 
    Any valid VMS system with a working copy of UCX is adequate.
    	
