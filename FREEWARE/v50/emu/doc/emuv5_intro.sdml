<chapter>(Introduction\intro)
<p>    
    Ethernet monitoring and documentation system is intended to
    achieve two major goals: Document and Monitor the network.
    <x>(System goals)
<p>    
    <x>(System Functions)
    
    In it's simplest form, the system listens to the LAN, receives all 
    packets and passes selected packets to protocol specific routines 
    which extract information specific to that protocol. This is used to 
    build an internal database which in turn drives the monitor and 
    documenting functions.  More specifically:
<list>(unnumbered)
<le>    	   Document:
<list>(unnumbered)
<le>        		For all addresses:
<list>(unnumbered)
<le>    	Protocols in use by address
<le>        	Manufacturer
<endlist>
<le>    	For selected protocols:
<list>(unnumbered)
<le>           Node name(s)  
<le>           Higher layer address(es)  
<le>           Functions address will respond to  
<le>           Protocol specific data useful for Monitoring and documenting  
<endlist>
<endlist>
    	
<le>    	    Monitor:
<list>(unnumbered)
<le>    		 Provide alert system 
<le>    		 Monitor param and status changes  
<le>        	         Collect and monitor counter data (as available)
<endlist>
<endlist>
<p>    
<x>(Future incarnation)
    In this version (5) it is intended to move the system towards a wide
    area system where the information gathered locally directs the
    system to collect information about devices not on the local LAN.
    As topologies evolve, it is clear that a system restricted to the
    local LAN will be less useful.
<head2>(Main Features)
<x>(Features\bold)
    The two main features of this system are it's ability to build and 
    provide a database of current network devices, it's ability to listen 
    to and understand the real time activity of individual protocols
    and report problems quickly and in context. 
<p>    
    This system (working title is EMU) is a client/server arrangement 
    with the server providing database and alert information to the 
    client. 
<p>    
     
    The system is plug and play: On the server side, the user simply 
    starts the system and it starts listening and building the
    database.  There is little interaction at this level although a
    programming  interface may be provided. On the client side the
    system starts up and  listens for server broadcasts. The
    information displayed is mainly  raw alerts accompanied by
    addition information from other protocols  running on the same
    address and current counter data. The actual  presentation is not
    yet defined but it is thought that it will be a  mixture of text
    and graphics under windows. See the Client Description for detail.

<p>    
<x>(System extensions)
    The system is extensible. It is not possible for any single tool to 
    provide necessary information on every known protocol. A standard 
    interface is defined to allow any number of protocol routines to be 
    present and tools are provided to aid in interface to the system. 
    These tools will be published and made available to users. 
    The current version processes MOP, LAT, LAVC, IP, DECnet,OSI, IP,
    IPX/SPX, Ethernet and STP (bridge)
<p>    
<x>(Autogen)
    The system is self maintaining. To the degree possible/practical, the 
    system provides extensive feedback loops and is aware of bottlenecks 
    in itself. Simple counter data is maintained by each major routine 
    and is made available to a system monitor that can reset base 
    parameters used to start the system. Think about AUTOGEN, what is 
    does and what it could/should be.
<p>    


    EMU can operate primarily as a passive device in which there are no
    special  requirements for any node on the network to be included
    for  monitoring and documentation purposes. In future, node server
    processes may be available and when run on the client will add 
    significant functionality. It is intended that this be optional.
     
    <p>     
    <x>(Customer Network - Effect on) 
     EMU now requires both a DECnet and IP address and must integrate
    into the customer's addressing schemes. Also, with the
    addition of Counter processing, and SNMP and NML access, EMU adds
    data to the customer net. The amount of data is somewhat
    controllable and easily estimated should this be necessary.
    <p>    
    <x>(UCX) 
    <x>(TCPIP Services) 
    In addition to VMS and DECnet software, EMU now requires UCX (AKA TCPIP
    Services) software to operate fully. 
<p>
    It is intended that this product address a critical lack in 
    other products seen:
<list>(unnumbered)
<le>

    It is common for any single network device to utilise multiple
    protocols in it's normal operations and this trend is expected to
    expand greatly in the near future. No product seen or heard to
    date has the ability to make the relationship between multiple
    protocols and single stations and use this information to enhance
    management functionality. This is a central objective of this
    system.
<le>

    All  tools out there assume that the customer already understands,
    to varying degrees, both the content of the network and what
    constitutes 'proper' operation. This is an unsafe assumption that
    this system does not make. It finds all the devices and monitors
    them , building over time, a simple profile of what normal
    operation is for any device. It then reports changes and anomalies.

<le>    

    In addition to the assumption above, many tools require that the
    customer manually enter this lack of knowledge into the system,
    defining the devices, possible errors, actions to take and so on.
    EMU is self-configuring both in finding stations and the protocols they
    they are using, and in determining normal operation of the attached
    network. There is no user configuration required to provide full function 
    although interfaces are supplied if the user wants to name items, group
    items together or selectively monitor components. A comprehensive
    reporting package is inherit.
<le>
<x>(SNMP)
    Many tools, particularly SNMP based ones use polling almost
    exclusively to gather data and determine status. At this writing,
    more than 80% of the information known to the EMU system is
    gathered by passive listening. EMU does not contribute to the
    loaded network problem while attempting to solve it.
<endlist>
    <p> 
     
    In the longer term, it is intended that the system become a sort of
    'system service', providing a dynamically updated network information
    on request from any client. The client can also set up a window into the 
    server to receive current alerts and initiate specific monitoring
    functions.
<x>(non-goals)
        
            This product is not intended to be 'yet another Ethernet 
        monitor'.It does not count or record traffic volumes beyond those     
        counts that are necessary to monitor a specific protocol. Neither     
        does it display top talkers and listeners and it has only     
        rudimentary ability to show the traffic relationships between     
        protocols. Those types of monitors can be classed as Level 2     
        devices in that it is at that level that they read and analyse     
        data. This is a layer 3 monitor in that it uses layer 3 (and     
        above in some cases) data to determine protocol activity. It's     
        primary purpose is to provide an up to date picture of the     
        network that network and system managers can use to determine 
        the presence and state of protocols on the net and use this 
        information to monitor the net and automatically load any other 
        monitoring tool with current information.
              
