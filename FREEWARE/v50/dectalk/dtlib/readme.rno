.no autosubtitle .style headers 3,0,0
.nhd.uc.ps 58,80.lm 0.rm 72
#
.s 4
.c ;DECtalk Support Library
.s
.c ;Martin Minow
.c ;Digital Equipment Corporation
.c ;Terminals and Workstations
.c ;146 Main St.  MLO3-3/U8
.c ;Maynard, MA, 01754
.s 2
.f
.s 2.c ;Abstract
.s
The DECtalk support library contains an extensive collection of
subroutines, written in C, that should simplify application
development.  It includes subroutines to carry out DECtalk specific
functions, such as answering the phone, as well as low-level
operating-system specific functions, such as generating and parsing
escape sequences. 
.s
Several simple application programs are also provided, including
the DECtalk telephone demonstration program and a "spoken fortune
cookie" program.  There are also sample programs written in
Basic-Plus and COBOL for RSTS/E.
.s
All source modules are provided, including several operating-specific
libraries also distributed with Decus C (11-SP-18).  The Vax
distribution contains source files and executable code, while the
PDP-11 distribution contains only source modules.  Unix installations
should obtain the PDP-11 distribution and make their own
arrangements for tape file format translation.
.ifnot abstract
.s 2.c ;Distribution Kit Contents
.s
The library is distributed in two formats:  DOS-11 (FLX) format
for PDP-11's and Unix systems, and BACKUP format for Vax/VMS.
The distribution is organized as follows:
.lm +24
.p -24
Directory	P,PN
.p -24
[DTLIB]		[4,1]	Command files, documentation, and (on the VMS
backup distribution) executable images and dompiled libraries. 
.p -24
[DTLIB.SOURCE]	[4,1]	The DECtalk library sources.
.p -24
[DTLIB.COBOL]	[4,3]	A sample application written in RSTS/E COBOL,
including escape-sequence parsing routines.  There are also some
low-level macro routines to read and write bytes on RSTS/E. 
.p -24
[DTLIB.COOKIE]	[4,4]	The "fortune cookie" demo sources and
command files.
.p -24
[DTLIB.DEMO]	[4,5]	The "phone demo" sources, some songs, and
and "demo manager" command files for VMS and P/OS (native toolkit).
.p -24
[DTLIB.RSTSLB]	[4,6]	Subroutines (called from C) which allow direct
access to RSTS/E executive services. This directory is also distributed
with Decus C. 
.p -24
[DTLIB.RSXLIB]	[4,7]	Subroutines (called from C) which allow direct
access to RSX-11M executive services on RSX-11M, RSX-11M-PLUS, and
P/OS (using the native toolkit). 
.lm -24
.s 2.c ;Getting on the Air
.s
On VMS, you should copy all files to an appropriate directory.
Executable files and libraries are in the top-level directory;
source files are in sub-directories.  This may be done by
the following sequence of commands:
.s.nf
    $ create/directory [.dtlib]
    $ set default [.dtlib]
    $! Allocate the magtape with the DECtalk distribution
    $ allocate mfXX:
    $ backup mfXX:dtlib.bck [...]
.s.f
The [.DTLIB]BUILD.COM command file rebuilds the library.  Note,
however, that you will need to edit it if you do not have the Decus C
utilities installed.  (The command file that creates the documentation
must also be modified.)
.s
On the PDP-11, the FLX or PIP utility should be used to copy appropriate
source directories to disk.  You can then invoke the appropriate .CMD
file (after any necessary modification) to build the library. Note that
you must also build operating-system specific libraries for RSTS/E,
RSX-11M, and/or P/OS.  Also note that the software has only been
compiled and tested using Decus C.
.s
On Unix, you will have to use your ingenuity to copy the source kit
to disk. (The Decus C distribution contains a FLX.C program that
understands how to read these tapes.)  The DTLIB.MAK file is then
used to build the library and sample program:
.s
	make -f dtlib.mak demo
.s 2.c ;Basic-Plus and COBOL Application Skeletons
.s
For the benefit of those uninterested in the C language routines,
a revised -- and slightly simplified -- library is contained in
the SAMPLE.BAS program.  This runs on RSTS/E systems under Basic-Plus:
it has not been tested on Basic-Plus 2.  The Basic-Plus library
was subsequently used as a guide in creating an application skeleton
in COBOL (for RSTS/E).  Both programs are similar in function
to the demo.c program described in the library user's manual.
.s
Note that, to understand the logic of the COBOL program, you
will need to refer to the Basic-Plus program.
.endif abstract
