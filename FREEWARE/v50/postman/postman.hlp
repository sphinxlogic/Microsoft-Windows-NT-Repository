1 POSTMAN
The Postman utility allows you to manage incoming electronic mail.
You can establish, change or remove:

  - a vacation message
  - multiple forwarding addresses
  - multiple reject and accept filters based on "From", "To"
    and "Subject" lines

               ***    Postman uses PMDF's DELIVER system.   ***
               *** If you wish to control DELIVER yourself, ***
               ***    you should NOT use this utility.      ***

To use Postman:

  $ POSTMAN  [parameter]

2 Filtering
There are two types of filters: Accept and Reject.  Both work together to
allow you to automatically select incoming messages to receive or to discard
completely as if the message had never been received.  Accept filters are
applied before reject filters.  Since, reject filters cause messages to be
discarded, by also specifying accept filters, you can allow specific subsets
of messages which might normally be rejected to be received.  For example,
you may want all mail from "hotmail.com" to be rejected, except if it comes
from "hilary@hotmail.com".  To do this, implement a reject filter on the
"From" line which is "*@hotmail.com", and an accept filter on the "From"
line which is "hilary@hotmail.com".  (Quotation marks are not necessary.)

You do not need to use accept filters if you are not using reject filters.
By default, all mail is accepted unless reject filters exist.

You can, however, use accept filters to automatically file a message in a
given mail folder or mail file.  Simply specify the folder name and an
optional mail file name (space separated) at the "Dest" prompt.

You can use the asterisk ("*") as a wildcard in filter specifications
to indicate zero or more unknown characters.  Examples:

  - to match either "dot", "dont" or "donut", you could specify "do*t"
  - to filter all mail with "free offer" in the subject, specify
    "*free offer*"
  - to filter all mail from "hotmail.com", specify "*@hotmail.com"

To specify filters, you must specify the "From:", "To:" and "Subject:"
lines.  Leave the line BLANK if you do not wish to filter that particular
type of line.  Leave ALL lines BLANK to terminate input of filters.

2 Forwarding
Forwarding allows you to send a copy of a message to another person.
You may establish as many forwarding addresses as you wish - each one
will receive a copy of the message.

2 Vacation
A vacation message can be used to automatically notify a person who has
sent you mail that you are on vacation, or simply to indicate to the
sender that you have received the mail.

You may choose to have the vacation message sent each and every time
you receive a message, or only sent once for all messages received
from each unique sender, for the duration of the vacation message
being enabled.

For versions of PMDF 5.1 and later, messages from mailing lists will not
receive the vacation message.

2 Parameters
Postman can take a number of optional parameters.  You can specify any
number of parameters in any order, but if you specify DEBUG, it must
either be the last parameter or be specified with a null filename ("")
to use the default filename, or with an alternate filename.

You may specify the following parameters:

  BRIEF			- specify this to not show lengthy explanatory text

  DELETE_ON_ERROR	- specify this to DELETE message header and body
			  files which, by default, remain if PMDF's DELIVER
			  fails during processing.

  DEBUG [filename]	- specify this to produce a logfile from each DELIVER
			  job that runs.  This can be useful to determine the
			  cause of problems with DELIVER's processing.
			  An optional filename can be specified which will
			  override the default filename which is DELIVER.LOG.
			  ** NOTE ** that the file *always* resides in your
			  login directory (SYS$LOGIN) - do *not* specify a
			  directory specification!

  FOLDERS		- Enable the specification of destination mail folders
			  on Accept filters to allow automatic filing of
			  messages.  If Postman finds folders already
			  specified in your MAIL.DELIVERY file, folders are
			  automatically enabled.

2 Author
The author of Postman is

    Jonathan Ridler,
    Information Technology Services,
    The University of Melbourne,
    Parkville, Victoria, AUSTRALIA, 3052.

    Email: jonathan@unimelb.edu.au

Postman is written entirely in DCL and has been tested on OpenVMS Alpha v6.2
and v7.1, and OpenVMS VAX v6.1.

Suggestions, comments, criticisms, bug reports, bug fixes ... all welcome.

2 Installation
To install Postman:

  1. Edit the DCL command procedure to change the symbol "postie" to point
     to *your* SITE-SPECIFIC name of the procedure.
  2. Put the procedure in that location.
  3. $ postman :== @directory:POSTMAN	! ... and away you go!

2 Version
The current version of Postman is v2.9 (06-Oct-1999).
