Majordomo address:	# Majordomo@FooBar.COM
Majordomo-Owner address:# Majordomo-Owner@FooBar.COM
List Name:		# ListName
Is resend used:		# yes
List posting address:	# ListName@FooBar.COM
List request address:	# ListName-Request@FooBar.COM
List password:		# whatever
Digest list name:	# ListName-digest
Digest list password:	# whatever

Your mailing list has been established.  It is being served by an
automated mailing list manager that responds to commands emailed to
the "Majordomo address" listed above.  This message has all the details
of how to manage your list remotely using Majordomo.  If you have any
questions, refer them to the Majordomo-Owner address listed above.

There's a lot of info here, so please read this completely and
carefully, and save it for future reference.  If you have any questions,
you should send them to the Majordomo-Owner address above.

Your list-owner password is shown above.  Keep track of this; you'll
need it later.  Instructions for changing your password are below.

As soon as possible, please issue a "newinfo" command for your
list (see below) to create the file that someone will receive when
they join or ask about your list.

You can issue a "who" command for your list to see who's already on your
list.  You may or may not already be subscribed to your own list.

================
The Gory Details
================

Your mailing list is managed by an automated mailing list management
program called Majordomo.  Majordomo should free you from dealing
with most of the administrivia usually associated with running mailing
lists (adding users, dropping users, etc.).

To submit something to your list, you (or anybody else) should simply
mail it to the list posting address shown at the top of this file.

If somebody sends something to list request address shown above (which
is the traditional Internet way of being added to a mailing list), they'll
get back a message telling them how to use Majordomo for routine requests,
and how to contact you if they need to speak to a human being.

To be added to your list, a user simply sends a message of the form

    subscribe your-list-name

by email to the Majordomo address shown above.

Majordomo understands several commands, and is not limited to a
single command per message (it will process commands until reaching
end-of-message or the command "end").  The command "help" will tell
you about all the other commands.

Actually, it won't tell you about _all_ the other commands that 
Majordomo understands.  There are several commands there for use by
list owners such as yourself, which are not advertised to the public.
All of these commands are password-protected on a list-by-list basis,
but anyone with a valid list/password combination can invoke these
commands.  This is not exactly high-tech security, but it's more
intended to keep annoyance to a minimum than to be foolproof. 

The "documented" commands which Majordomo understands and which are
for everyone to use are:

    subscribe <list> [<address>]
    unsubscribe <list> [<address>]
    which [<address>]
    who <list>
    info <list>
    index <list>
    get <list>
    lists
    help
    end

You can get detailed explanations of all of these by asking for "help"
from Majordomo.

The "undocumented" commands for use by list owners are:

    approve <passwd> {subscribe|unsubscribe} <list> [<address>]
	This is so that you can approve subscription or unsubscription
	actions that need approval by the list owner.  Note that this
	is just a standard "subscribe" or "unsubscribe" command prefixed
	with "approve <password>" (where you substitute the password for
	your list, which is listed above, for "<password>").

    passwd <list> <old_passwd> <new_passwd>
	This is so you can change the password for your list, if you desire.

    newinfo <list> <password>
	This is so that you can replace the information file that people
	get when they do "info <list>" or "subscribe <list>".  It reads
	everything after the "newinfo" command to end-of-message or the
	word "EOF" on a line by itself as the new info for the list.

    config <list> <password>

        retrieve a self-documenting configuration file for
        the list <list>.  The <password> can be the password
        contained in the file <listname>.passwd or the
        admin_password in the configuration file.

    newconfig <list> <password>
   	Validates and installs a new configuration file.  It reads
	everything after the "newconfig" command to end-of-message or
	the word "EOF" on a line by itself as the new info for the
	list.  The config file is expected to be a complete config
	file as returned by "config".  Incremental changing of the
	config file is not yet supported.  As soon as the config file
	is validated and installed its settings are available for
	use. This is useful to remember if you have multiple commands
	in your mail message since they will be subject to the
	settings of the new config file.  If there is an error in the
	config file (incorrect value...), the config file will not be
	accepted and the error message identifying the problem line(s)
	will be returned to the sender.  Note that only the error
	messages are returned to the sender not the entire config
	file, so it would be a good idea to keep a copy of your
	outgoing email message.


    writeconfig <list> <password> 
        Write a new config file in standard form. Writeconfig forces a
	rewrite of the config file with all comments and default
	values in place. It is useful to use after an upgrade of
	majordomo since it will add the new keywords for people to
	change. It also updates the documentation in the file if that
	has changed.

	   
    mkdigest <digest list name> <password>
	Generate a digest.

Configuring Your List
=====================

You should retrieve the configuration file for your list. To do this,
send an email message to the majordomo address listed at the top of
this form. The contents of this message should be:

	config <List name> <List password>

Where <ListName> <List password> are given at the top of the form. You
will receive a config file that can be used to change the operation of
your list. If the information at the top of this form shows that
resend is being used, you want to configure the majordomo and resend
subsystems. Otherwise you only have to configure those items that are
associated with the majordomo system.

The configuration file is meant to be self documenting. Once you have
completed all of the changes to the config file, You should use the
newconfig command (described above) to put a new configuration file in
place.

If you have a digest version of your list, you should retrieve the
config file for the digest as well using:

	config <Digest List Name> <Digest list password>

and configure the parameters for the digest and majordomo subsystems.


Regular Expressions
===================

In order to make majordomo do all of its tricks, a rudimentary
knowledge of perl style regular expressions is needed. A regular
expression is a concise way of expressing a pattern in a series of
characters. The full power of regular expressions can make some
difficult tasks quite easy, but we will only brush the surface here.

Here is a sample regular expression:

  /cs\.umb\.edu/

This matches the following strings:

	cs.umb.edu
	foo.cs.umb.edu
	user@foo.cs.umb.edu
	users%foo.cs.umb.edu@greatcircle.com

Basically any string that contains "cs.umb.edu" will be matched by the
above regular expression. One thing you may note, is that the periods
are preceded with a backslash. The reason for this is that the period
has a special meaning in a regular expression. In order to get the
period to represent itself, its special meaning is turned off with a
'\'. Let's try a more difficult regular expression:

	/rouilj@.*cs\.umb\.edu/

This matches:

	rouilj@cs.umb.edu
	rouilj@terminus.cs.umb.edu
	arouilj@terminus.cs.umb.edu@greatcircle.com

but it doesn't match

	rouilj@umb.edu
	brent@cs.umb.edu

The two characters '.*' means "0 or more characters," so any string that
has "rouilj@" followed by 0 or more characters followed by
"cs.umb.edu" will be matched. Each character in the '.*' string has a
special meaning. The period represents any character, while the *
means zero or more. When put together, '.*' represents zero or more of
any character.

There are two more characters that match the start and
end of a string. Let's consider:

	/^rouilj@.*cs\.umb\.edu$/

This matches

	rouilj@cs.umb.edu
	rouilj@terminus.cs.umb.edu

but it doesn't match

	arouilj@terminus.cs.umb.edu@greatcircle.com

for two reasons. The '^' symbol just after the starting '/' matches
the beginning of the string. Since "arouilj..." doesn't start with
'r', the match fails. The '$' sign just before the final '/' says that
the string must end after "cs.umb.edu" Since "....com" doesn't match
"cs.umb.edu", the match fails in a second way. In perl style regular
expressions, the special meaning of any symbol can be eliminated by
preceeding the symbol with a '\' as was done with the periods above.

The regular expression:

        /.*/

matches everything, but:

        /.\*rouilj/

matches "*rouilj" with any character before the * (e.g. "a*rouilj",
"s*rouilj", ".*rouilj". If there is no character before the *,
(e.g. just "*rouilj") then the match will fail.

To be on the safe side put a '\' in front of any
characters in the regular expressions that are not numbers or letters.
In order to put a '/' into the regular expression, the same rule
holds: precede it with a '\'. Thus:

        /\/CO\=US/

matches "/CO=US" and may be a useful regular expression to those of you who
need to deal
with X.400 addresses.

Approval
========

When Majordomo requests your approval for something, it sends you a
message that includes a template of the approval message; if you concur,
you simply need to replace "PASSWORD" in the template with your list
password, and send the template line back to Majordomo.

The requests for approval that Majordomo generates all start with
"APPROVE" in the "Subject:" line.  

You aren't limited to approving only things to Majordomo requests
approval for.  You can approve any "subscribe" or "unsubscribe" request,
regardless of whether Majordomo has requested this approval, with an
"approve" command.  Thus, you can subscribe or unsubscribe people from
your list without them having to send anything to Majordomo; just
send an appropriate "approve PASSWORD subscribe LIST ADDRESS" or
"approve PASSWORD unsubscribe LIST ADDRESS" command off to Majordomo.

If you read your mail on a UNIX system and have "perl" available (try
"perl -v" and see if it tells you about perl; if it gives you a
"command not found" message instead, then you don't have perl on your
machine), there is a program called "approve" available to automate the
approval process; contact your Majordomo-Owner at the address listed
above for a copy of the program.

Bounced Messages
================

Majordomo may bounce certain messages that people attempt to post to
your mailing list.  These messages may be bounced because they appear
to be administrative requests (i.e., someone mailed a request to subscribe
or unsubscribe to the posting address rather than to Majordomo or to the
-request address), because they are too long, or for any of a number of
other reasons.

Majordomo will forward these messages to you in another message whose
subject line begins with the word "BOUNCE"; the subject line will also
indicate the name of the list the message was bounced from (in case you
manage more than one list) and the reason the message was bounced.

If you decide that the message is OK and should not have been bounced,
then you can cause Majordomo to post it anyway by sending the message
back to the posting address (NOT to the Majordomo address) with a special
"Approved: password" header.  To do this, follow these instructions:

    1)  Save the original message (the body of the message you received
	from Majordomo) in a file.

    2)  Edit the file to insert a line that says "Approved: password" (where
	"password" is the password for your list) at the top, before the
	original message.

    3)  Send this edited file back to the posting address for your list (NOT
	to Majordomo).

This time around, Majordomo will notice the "Approved:" line and check it
against your list password.  If it matches, Majordomo will strip off the
header of your message and the "Approved:" line (leaving just the original
message), and send the original message on through.

The "approve" program mentioned above in the section on approving Majordomo
requests can also approve bounced messages for posting.  You just save the
whole message from Majordomo in a file, and say "approve file" (or pipe
the message to the "approve" program as standard input), and the "approve"
program does the rest.

Moderation
==========

If your list is moderated, (the moderate parameter in the config
file is yes) then messages without an "Approved:" line are bounced,
just as described above.  To cause them to be posted to the list, you
add a valid "Approved:" line and send them back, just as described
above.

Again, if you're able to use it, the "approve" program automates all this.

If you have any questions about all of this, send them to the Majordomo-Owner
address shown at the top of this file.

$Header: /sources/cvsrepos/majordomo/Doc/list-owner-info,v 1.4 1994/03/14 18:10:49 rouilj Exp $
