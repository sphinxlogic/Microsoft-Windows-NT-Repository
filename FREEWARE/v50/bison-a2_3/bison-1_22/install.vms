This is a generic INSTALL file for utilities distributions.
If this package does not come with, e.g., installable documentation or
data files, please ignore the references to them below.

To compile this package:

1.  Configure the package for your system.  In the directory that this
file is in, type `@configure'.

The `configure' shell script attempts to guess correct values for
various system-dependent variables used during compilation, and
creates the command procedures necessary to build and install this
package.  In some packages it creates a C header file containing
system-dependent definitions.  It also creates a file `config.status'
that you can run in the future to recreate the current configuration.

Running `configure.com' takes a minute or two (or even more on a slow
VAX).  While it is running, it prints some messages that tell what it
is doing.

To compile the package in a different directory from the one
containing the source code, `set default' to the directory where you
want the object files and executables to go and `@SRCDEV:[SRCDIR]configure',
where SRCDEV and SRCDIR are the device and the directory that contains
the source code.  `configure.com' automatically checks for the source
code in the directory that `configure.com' is in and in `[-]'.  If
for some reason `configure.com' is not in the source code directory
that you are configuring, then it will report that it can't find the
source code.  In that case, run `configure.com' with the option
`--srcdir=SRCDEV:[SRCDIR]'.

By default, the command `@install' will install the package's files in
`sys$sysdevice:[gnu.bin]', `sys$sysdevice:[gnu.help]', etc.  You
can specify an installation prefix other than `sys$sysdevice:[gnu]'
by giving `configure.com' the option `--prefix=PATH'.

You can specify separate installation prefixes for
architecture-specific files and architecture-independent files.  If you
give `configure.com' the option `--exec-prefix=PATH', the package will
use PATH as the prefix for installing programs and libraries.  Data
files and documentation will still use the regular prefix.  Normally,
all files are installed using the same prefix.

Some packages pay attention to `--with-PACKAGE' options to
`configure.com', where PACKAGE is something like `gnu-as' or `x' (for
the X Window System).  The README should mention any `--with-' options
that the package recognizes.

`configure.com' ignores any other arguments that you give it.

On systems that require unusual options for compilation or linking
that the package's `configure.com' script does not know about, you can
give `configure.com' initial values for variables by setting them in
DCL.  For example:

     $ CC="gcc/standard=portable"
     $ LIBS="public:[libs]weird.olb/lib"
     $ @configure

Here are the `mms' variables that you might want to override with
DCL variables when running `configure.com'.

For these variables, any value given in DCL overrides the value
that `configure' would choose:

 - Variable: CC
     C compiler program.  The default is `cc'.

 - Variable: INSTALL
     Program to use to install files.  The default
     `copy/prot=(s:rwed,o:rwed,g:re,w:re)'

For these variables, any value given in DCL is added to the value
that `configure' chooses:

 - Variable: DEFS
     Configuration options, in the form `"foo","bar",...'.  Do not use
     this variable in packages that create a configuration header file.
     The value of this variable will be used when compiling, so the
     above value would result in something like this:

        $ cc/define=("foo","bar",...)

 - Variable: LIBS
     Libraries to link with, in the form
     `dev:[dir]lib1/lib dev:[dir]lib2_shr/share ...'.  The value of this
     variable will eventually end up in an option file, which is used
     during linking.

If you need to do unusual things to compile the package, we encourage
you to figure out how `configure.com' could check whether to do them, and
mail diffs or instructions to the address given in the README so we
can include them in the next release.

2.  Type `@install' to install programs, data files, and documentation.

The file `configure.com_in' is used to create `configure.com' by a
program called `autoconf'.  You only need it if you want to regenerate
`configure.com' using a newer version of `autoconf'.
