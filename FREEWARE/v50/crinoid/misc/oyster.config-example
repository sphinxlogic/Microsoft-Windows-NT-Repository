#
#   this is an example OYSTER.CONFIG
#   main commands are "preload" modules
#           set error logging file, level, debug flags (same as Perl -Dxx)
#
#   note that PGPLOT requires setup in the user's LOGIN.COM (logicals need set)
#
preload PGPLOT
preload Digest::MD5
#
errlog  oyster.log       # log file (in sys$login dir, by default)
LogLevel 3               # log level, 1=critical...5=babble
MaxLogfileSize    8000   # create new logfile if old one is too big (size in bytes)
MaxLogfileVersions  5    # purge logfile versions /keep=...
#debug m                # Perl debug flags  (e.g.,  $Perl -Dm )
#NoDescend              # only look for scripts in main dir, not subdirs
Suffixes    .pl .cgi .  # only allow NAME.pl NAME.cgi  NAME. scripts
#HomeDir  disk:[dir]    # chdir to HomeDir before running script
#MaxRunTime 100         # max time a script can run, in seconds
#addINC    mydisk:[dir] # push onto @INC used by scripts

#-----------depreciated, use Static_ENV instead ------------
#addENV      DBDIR      # import logical DBDIR into script %ENV
#-----------removed, do not use
#ExportENV   TZ         # export script %ENV TZ to process logical



# several different flavors of ENV import/export, each takes a list of
# logical names.  Note that TZ is set Dynamic by Oyster.

#Static_ENV     DBDIR   # import logical from %ENV, value set at script invokation
                        # changes not propagated to logicals

#Dynamic_ENV    PGPLOT_GIF_WIDTH PGPLOT_GIF_HEIGHT  # import logical from %ENV, can read/write logical
                                                    # but value reset when script finishes

#Persistant_ENV MYSTUFF # like Dynamic_ENV but changes persist after script finishes



#--------------------------------------------------------------------------

#ErrorHTML   disk:[dir]errorpage.html    # use this for error messages from OYSTER.

#
#   for the ErrorHTML file: just write standard HTML, but the following
#   two sequences will be substituted:
#
#   <!--#error-->   ->  text of error message
#   <!--#script-->  ->  name of script
#
#   The filename you give for ErrorHTML can be either VMS- or Unix-style
#   but must be readable by the account running the CGI.
#
