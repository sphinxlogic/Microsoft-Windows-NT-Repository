$ if f$getsyi("hw_model") .le. 1023
$ then
$! Vax
$   on warning then goto nodecc
$   if p1 .eqs. "LINK" then goto linkv
$   cc/list=ld/machine/standard=vaxc ld
$   goto next
$nodecc:
$   cc/list=ld/machine ld
$next:
$   on warning then continue
$   message/list ldmsg
$   macro/obj=lddriver/lis=lddriver_vax lddriver_vax
$linkv:
$   link/notrace/map ld,ldmsg,sys$input/opt
sys$library:vaxcrtl.exe/share
ident="V6.3"
$   link/map lddriver,sys$input/option
base=0
$   link/sym/share/noexe lddriver,sys$input/option
universal=*
$ else
$!Alpha
$   if p1 .eqs. "LINK" then goto linka
$   cc/list=ld/machine/nomember_alignment/standard=vaxc ld
$   message/list ldmsg
$   macro/machine/warning=noinfo/obj=lddriver/list=lddriver_alpha -
	 lddriver_alpha
$linka:
$   link/notrace/map ld,ldmsg,sys$input/opt
ident="Alpha V6.3"
$   link/alpha/userlib=proc/native_only/bpage=14/section/replace-
        /nodemand_zero/notraceback/sysexe/nosysshr-
        /share=sys$lddriver.exe-           ! Driver image
        /symbol=sys$lddriver.stb-          ! Symbol table
        /map=sys$lddriver.map/full/cross - ! Map listing
                sys$input:/options
!
!   Define symbol table for SDA using all global symbols, not just
!   universal ones
! 
SYMBOL_TABLE=GLOBALS
!
!   This cluster is used to control the order of symbol resolution.  All
!   psects must be collected off of this cluster so that it generates
!   no image sections.
!
CLUSTER=VMSDRIVER,,,-
        !
        !   Start with the driver module
        !
        LDDRIVER.OBJ,-
        !
        !   Next process the private interfaces.  (Only include BUGCHECK_CODES if
        !   used by the driver module).  The /LIB qualifier causes the linker to 
        !   resolve references in the driver module to DRIVER$INI_xxx routines
        !   (which are defined in the module DRIVER_TABLE_INIT).
        !
        SYS$LIBRARY:VMS$VOLATILE_PRIVATE_INTERFACES/INCLUDE=(BUGCHECK_CODES)/LIB,-
        !
        !   Explicitly include routines for the initialization section - there
        !   will be no outstanding references to cause this to happen when STARLET
        !   is searched automatically.
        !
        SYS$LIBRARY:STARLET/INCLUDE:(SYS$DRIVER_INIT,SYS$DOINIT)

!
!   Use the COLLECT statement to implicitly declare the NONPAGED_EXECUTE_PSECTS
!   cluster.  Mark the cluster with the RESIDENT attribute so that the image 
!   section produced is nonpaged.  Collect only the code psect into the cluster.
!
COLLECT=NONPAGED_EXECUTE_PSECTS/ATTRIBUTES=RESIDENT,-
        $CODE$

!
!   Coerce the psect attributes on the different data psects to that they 
!   all match.  This will force NONPAGED_READWRITE_PSECTS cluster to yield only
!   one image section.   
!
PSECT_ATTR=$LINK$,WRT
PSECT_ATTR=$INITIAL$,WRT
PSECT_ATTR=$LITERAL$,NOPIC,NOSHR,WRT
PSECT_ATTR=$READONLY$,NOPIC,NOSHR,WRT
PSECT_ATTR=$$$105_PROLOGUE,NOPIC
PSECT_ATTR=$$$110_DATA,NOPIC
PSECT_ATTR=$$$110_LD_DATA,NOPIC,WRT
PSECT_ATTR=$$$115_LINKAGE,WRT

!
!   Use a COLLECT statement to implicitly declare the NONPAGED_DATA_PSECTS
!   cluster.  Mark the cluster with the RESIDENT attribute so that the image 
!   section produced is nonpaged.  Collect all the data psects into the cluster.
!
COLLECT=NONPAGED_READWRITE_PSECTS/ATTRIBUTES=RESIDENT,-
        !
        !   Psect generated by BLISS modules
        !
        $PLIT$,-
        $INITIAL$,-
        $GLOBAL$,-
        $OWN$,-
        !
        !   Psects generated by DRIVER_TABLES
        !
        $$$105_PROLOGUE,-
        $$$110_DATA,-
        $$$110_LD_DATA,-
        $$$115_LINKAGE,-
        !
        !   Standard Psects generated by all languages,
        !   including the high level language driver module
        !
        $BSS$,-
        $DATA$,-
        $LINK$,-
        $LITERAL$,-
        $READONLY$

!
!   Coerce the program section attributes for initialization code so 
!   that code and data  will be combined into a single image section.  
!   
PSECT_ATTR=EXEC$INIT_CODE,NOSHR

!
!   Use a COLLECT statement to implicitly declare the INITIALIZATION_PSECTS
!   cluster.  Mark the cluster with the INITIALIZATION_CODE attribute so that the image 
!   section produced is identified as INITIALCOD.
!
!   These program sections have special names so that when the linker sorts them 
!   alphabetically they will fall in the order: initialization vector table, code, 
!   linkage, build table vector.  The order in which they are collected does not affect
!   their order in the image section.
!
!   This is the only place where code and data should reside in the
!   same section.
!
!   NOTE: The linker will attach the fixup vectors to this cluster.  This is expected.
!
COLLECT=INITIALIZATION_PSECTS/ATTRIBUTES=INITIALIZATION_CODE,-
        EXEC$INIT_000,-
        EXEC$INIT_001,-
        EXEC$INIT_002,-
        EXEC$INIT_CODE,-
        EXEC$INIT_LINKAGE,-
        EXEC$INIT_SSTBL_000,-
        EXEC$INIT_SSTBL_001,-
        EXEC$INIT_SSTBL_002
$ endif
