/* SIGNAL.ADJ */

/*
** "signal.h" adjustment file for 'dcc'.
** Created 19990201 by Yves Noyelle (Yves.Noyelle@supelec.fr)
** Amended 20010216 by Yves Noyelle
**
** Undertested version
*/

#ifndef __SIGNAL_ADJ
#define __SIGNAL_ADJ

#ifdef bool
#  undef bool
typedef unsigned int bool /*~AddedObj*/;
#endif

#define __Z7IPU(x) extern int x /*~PseudoVoid*/ /*~Utility*/;

__Z7IPU(	raise		(int, ...))
__Z7IPU(	raise		(int))
#if !(defined(pid_t) || cdefined(pid_t)) && \
					 (defined(__pid_t) || cdefined(__pid_t))
#  define pid_t __pid_t
#  define __Z6PID
#endif
__Z7IPU(	kill 		(pid_t , int))
__Z7IPU(	killpg 		(pid_t, int))
__Z7IPU(	sigaction	(int, const struct sigaction *, struct
								   sigaction *))
__Z7IPU(	sigemptyset	(sigset_t *))
__Z7IPU(	sigfillset	(sigset_t *))
__Z7IPU(	sigaddset	(sigset_t *, int))
__Z7IPU(	sigdelset	(sigset_t *, int))
extern bool	sigismember	(const sigset_t *, int);
__Z7IPU(	sigpending	(sigset_t *))
extern int	sigwaitinfo	(const sigset_t *, siginfo_t *) /*~Utility*/;
__Z7IPU(	sigtimedwait	(const sigset_t *, siginfo_t *, const struct
								    timespec *))
__Z7IPU(	sigqueue	(pid_t, int, const union sigval))
#ifdef __Z6PID
#  undef pid_t
#  undef __Z6PID
#endif

__Z7IPU(	sigvec		(int, struct sigvec *, struct sigvec *))
__Z7IPU(	sigpause	(int))
__Z7IPU(	sigreturn	(struct sigcontext *))
__Z7IPU(	sigblock	(int))
__Z7IPU(	sigsetmask	(int))
__Z7IPU(	sigstack	(struct sigstack *, struct sigstack *))
__Z7IPU(	siginterrupt	(int, int))
__Z7IPU(	sighold		(int))
__Z7IPU(	sigrelse	(int))
__Z7IPU(	sigignore	(int))
__Z7IPU(	sigaltstack	(const stack_t *, stack_t *))
__Z7IPU(	sigsendset	(const procset_t *, int))
__Z7IPU(	sigsend		(idtype_t, id_t, int))
extern void	(*ssignal	(int, void (*)(int))) (int) /*~PseudoVoid*/;
__Z7IPU(	gsignal		(int))
extern void	(*ssignal_r	(int, void (*) (int), void (*[])(int))) (int)
								/*~PseudoVoid*/;
__Z7IPU(	gsignal_r	(int, void (*[])(int)))

#undef __Z7IPU

#endif /* __SIGNAL_ADJ */

/* End SIGNAL.ADJ */
