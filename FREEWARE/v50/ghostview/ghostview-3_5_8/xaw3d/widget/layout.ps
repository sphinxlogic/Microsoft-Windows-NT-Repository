%!PS-Adobe-1.0
%%BoundingBox: 0 0 612 792
%%Pages: 10 1
%%DocumentFonts: Times-Roman
%%+ Times-Italic
%%+ Courier
%%+ Times-BoldItalic
%%+ Symbol
%%+ Times-Bold
%%CreationDate: 2 Mar 93
%%Title: The Layout Widget
%%EndComments
%
% FrameMaker PostScript Prolog 3.0, for use with FrameMaker 3.0
% Copyright (c) 1986,87,89,90,91 by Frame Technology Corporation.
% All rights reserved.
%
/FMversion (3.0) def 
% Set up Color vs. Black-and-White
	/FMPrintInColor systemdict /colorimage known
		systemdict /currentcolortransfer known or def
% Uncomment this line to force b&w on color printer
%   /FMPrintInColor false def
/FrameDict 195 dict def 
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if
% The readline in 23.0 doesn't recognize cr's as nl's on AppleTalk
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
% Some PS machines read past the CR, so keep the following 3 lines together!
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} def
	} if
/FMVERSION {
	FMversion ne {
		/Times-Roman findfont 18 scalefont setfont
		100 100 moveto
		(FrameMaker version does not match postscript_prolog!)
		dup =
		show showpage
		} if
	} def 
/FMLOCAL {
	FrameDict begin
	0 def 
	end 
	} def 
	/gstring FMLOCAL
	/gfile FMLOCAL
	/gindex FMLOCAL
	/orgxfer FMLOCAL
	/orgproc FMLOCAL
	/organgle FMLOCAL
	/orgfreq FMLOCAL
	/yscale FMLOCAL
	/xscale FMLOCAL
	/manualfeed FMLOCAL
	/paperheight FMLOCAL
	/paperwidth FMLOCAL
/FMDOCUMENT { 
	array /FMfonts exch def 
	/#copies exch def
	FrameDict begin
	0 ne dup {setmanualfeed} if
	/manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	/yscale exch def
	/xscale exch def
	currenttransfer cvlit /orgxfer exch def
	currentscreen cvlit /orgproc exch def
	/organgle exch def /orgfreq exch def
	setpapername 
	manualfeed {true} {papersize} ifelse 
	{manualpapersize} {false} ifelse 
	{desperatepapersize} if
	end 
	} def 
	/pagesave FMLOCAL
	/orgmatrix FMLOCAL
	/landscape FMLOCAL
/FMBEGINPAGE { 
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne def
	landscape { 
		90 rotate 0 exch neg translate pop 
		}
		{pop pop}
		ifelse
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
	} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 
	showpage
	} def 
/FMFONTDEFINE { 
	FrameDict begin
	findfont 
	ReEncode 
	1 index exch 
	definefont 
	FMfonts 3 1 roll 
	put
	end 
	} def 
/FMFILLS {
	FrameDict begin
	array /fillvals exch def
	end 
	} def 
/FMFILL {
	FrameDict begin
	 fillvals 3 1 roll put
	end 
	} def 
/FMNORMALIZEGRAPHICS { 
	newpath
	0.0 0.0 moveto
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray 
	} bind def
	/fx FMLOCAL
	/fy FMLOCAL
	/fh FMLOCAL
	/fw FMLOCAL
	/llx FMLOCAL
	/lly FMLOCAL
	/urx FMLOCAL
	/ury FMLOCAL
/FMBEGINEPSF { 
	end 
	/FMEPSF save def 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fy translate 
	rotate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	} bind def
/FMENDEPSF {
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/setmanualfeed {
%%BeginFeature *ManualFeed True
	 statusdict /manualfeed true put
%%EndFeature
	} def
/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} def
	/papersizedict FMLOCAL
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} def
/papersize {
	papersizedict begin
		/Letter {lettertray letter} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray 11x17} def
		/Ledger {ledgertray ledger} def
		/Legal {legaltray legal} def
		/Statement {statementtray statement} def
		/Executive {executivetray executive} def
		/A3 {a3tray a3} def
		/A4 {a4tray a4} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray b4} def
		/B5 {b5tray b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	/FMdicttop countdictstack 1 add def 
	statusdict begin stopped end 
	countdictstack -1 FMdicttop {pop end} for 
	} def
/manualpapersize {
	papersizedict begin
		/Letter {letter} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} def
/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped pop 
		end
		} if
	} def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/dmatrix matrix def
/dpi    72 0 dmatrix defaultmatrix dtransform
    dup mul exch   dup mul add   sqrt def
/freq dpi 18.75 div 8 div round dup 0 eq {pop 1} if 8 mul dpi exch div def
/sangle 1 0 dmatrix defaultmatrix dtransform exch atan def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/ReEncode { 
	dup 
	length 
	dict begin 
	{
	1 index /FID ne 
		{def} 
		{pop pop} ifelse 
	} forall 
	0 eq {/Encoding DiacriticEncoding def} if 
	currentdict 
	end 
	} bind def
/graymode true def
	/bwidth FMLOCAL
	/bpside FMLOCAL
	/bstring FMLOCAL
	/onbits FMLOCAL
	/offbits FMLOCAL
	/xindex FMLOCAL
	/yindex FMLOCAL
	/x FMLOCAL
	/y FMLOCAL
/setpattern {
	 /bwidth  exch def
	 /bpside  exch def
	 /bstring exch def
	 /onbits 0 def  /offbits 0 def
	 freq sangle landscape {90 add} if 
		{/y exch def
		 /x exch def
		 /xindex x 1 add 2 div bpside mul cvi def
		 /yindex y 1 add 2 div bpside mul cvi def
		 bstring yindex bwidth mul xindex 8 idiv add get
		 1 7 xindex 8 mod sub bitshift and 0 ne
		 {/onbits  onbits  1 add def 1}
		 {/offbits offbits 1 add def 0}
		 ifelse
		}
		setscreen
	 {} settransfer
	 offbits offbits onbits add div FMsetgray
	/graymode false def
	} bind def
/grayness {
	FMsetgray
	graymode not {
		/graymode true def
		orgxfer cvx settransfer
		orgfreq organgle orgproc cvx setscreen
		} if
	} bind def
	/HUE FMLOCAL
	/SAT FMLOCAL
	/BRIGHT FMLOCAL
	/Colors FMLOCAL
FMPrintInColor 
	
	{
	/HUE 0 def
	/SAT 0 def
	/BRIGHT 0 def
	% array of arrays Hue and Sat values for the separations [HUE BRIGHT]
	/Colors   
	[[0    0  ]    % black
	 [0    0  ]    % white
	 [0.00 1.0]    % red
	 [0.37 1.0]    % green
	 [0.60 1.0]    % blue
	 [0.50 1.0]    % cyan
	 [0.83 1.0]    % magenta
	 [0.16 1.0]    % comment / yellow
	 ] def
      
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUECOLOR } def
	/BEGINBITMAPCOLORc { 
		BITMAPTRUECOLORc } def
	/K { 
		Colors exch get dup
		0 get /HUE exch store 
		1 get /BRIGHT exch store
		  HUE 0 eq BRIGHT 0 eq and
			{1.0 SAT sub setgray}
			{HUE SAT BRIGHT sethsbcolor} 
		  ifelse
		} def
	/FMsetgray { 
		/SAT exch 1.0 exch sub store 
		  HUE 0 eq BRIGHT 0 eq and
			{1.0 SAT sub setgray}
			{HUE SAT BRIGHT sethsbcolor} 
		  ifelse
		} bind def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUEGRAY } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUEGRAYc } def
	/FMsetgray {setgray} bind def
	/K { 
		pop
		} def
	}
ifelse
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z {
	setlinecap
	} bind def
	/fillvals FMLOCAL
/X { 
	fillvals exch get
	dup type /stringtype eq
	{8 1 setpattern} 
	{grayness}
	ifelse
	} bind def
/V { 
	gsave eofill grestore
	} bind def
/N { 
	stroke
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
	/n FMLOCAL
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
	/x1 FMLOCAL
	/x2 FMLOCAL
	/y1 FMLOCAL
	/y2 FMLOCAL
	/rad FMLOCAL
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
/RR { 
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	newpath
	x1 y1 rad add moveto
	x1 y2 x2 y2 rad arcto
	x2 y2 x2 y1 rad arcto
	x2 y1 x1 y1 rad arcto
	x1 y1 x1 y2 rad arcto
	closepath
	16 {pop} repeat
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	} bind def
	/FMpointsize FMLOCAL
/F { 
	FMfonts exch get
	FMpointsize scalefont
	setfont
	} bind def
/Q { 
	/FMpointsize exch def
	F 
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne {-1 1 scale} if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath fill
	grestore
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	stroke
	grestore
	} bind def
	/x FMLOCAL
	/y FMLOCAL
	/w FMLOCAL
	/h FMLOCAL
	/xx FMLOCAL
	/yy FMLOCAL
	/ww FMLOCAL
	/hh FMLOCAL
	/FMsaveobject FMLOCAL
	/FMoptop FMLOCAL
	/FMdicttop FMLOCAL
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 4 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
	/str FMLOCAL
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
	/sl FMLOCAL
	/val FMLOCAL
	/ws FMLOCAL
	/im FMLOCAL
	/bs FMLOCAL
	/cs FMLOCAL
	/len FMLOCAL
	/pos FMLOCAL
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
	/h FMLOCAL
	/w FMLOCAL
	/d FMLOCAL
	/lb FMLOCAL
	/bitmapsave FMLOCAL
	/is FMLOCAL
	/cf FMLOCAL
/wbytes { 
	dup 
	8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
	/r exch def
	/d exch def
	gsave
	translate rotate scale /h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	r                    
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/r exch def
	/d exch def
	gsave
	translate rotate scale /h exch def /w exch def
	/bitmapsave save def 
	r                    
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} image
	bitmapsave restore 
	grestore
	} bind def
	/proc1 FMLOCAL
	/proc2 FMLOCAL
	/newproc FMLOCAL
/Fmcc {
    /proc2 exch cvlit def
    /proc1 exch cvlit def
    /newproc proc1 length proc2 length add array def
    newproc 0 proc1 putinterval
    newproc proc1 length proc2 putinterval
    newproc cvx
} bind def
/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def
	/gryt FMLOCAL
	/blut FMLOCAL
	/grnt FMLOCAL
	/redt FMLOCAL
	/indx FMLOCAL
	/cynu FMLOCAL
	/magu FMLOCAL
	/yelu FMLOCAL
	/k FMLOCAL
	/u FMLOCAL
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/k cynu magu min yelu min def
		/u k currentundercolorremoval exec def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 k currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
	/tran FMLOCAL
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch Fmcc settransfer
} bind def
/BITMAPCOLOR { 
	/d 8 def
	gsave
	translate rotate scale /h exch def /w exch def
	/bitmapsave save def 
	colorsetup
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} {is} {is} true 3 colorimage 
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/d 8 def
	gsave
	translate rotate scale /h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	colorsetup
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} {is} {is} true 3 colorimage
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLORc { 
        gsave
        translate rotate scale /h exch def /w exch def
        /bitmapsave save def 
        
        /is w string def
        
        ws 0 w getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {ip} {gip} {bip} true 3 colorimage
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUECOLOR { 
        gsave
        translate rotate scale /h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop } 
        { cf gis readhexstring pop } 
        { cf bis readhexstring pop } 
        true 3 colorimage 
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUEGRAYc { 
        gsave
        translate rotate scale /h exch def /w exch def
        /bitmapsave save def 
        
        /is w string def
        
        ws 0 w getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {ip gip bip w gray} image
        bitmapsave restore 
        grestore
        } bind def
/ww FMLOCAL
/r FMLOCAL
/g FMLOCAL
/b FMLOCAL
/i FMLOCAL
/gray { 
        /ww exch def
        /b exch def
        /g exch def
        /r exch def
        0 1 ww 1 sub { /i exch def r i get .299 mul g i get .587 mul
			b i get .114 mul add add r i 3 -1 roll floor cvi put } for
        r
        } bind def
/BITMAPTRUEGRAY { 
        gsave
        translate rotate scale /h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop 
          cf gis readhexstring pop 
          cf bis readhexstring pop w gray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
	/ALDsave FMLOCAL
	/ALDmatrix matrix def ALDmatrix currentmatrix pop
/StartALD {
	/ALDsave save def
	 savematrix
	 ALDmatrix setmatrix
	} bind def
/InALD {
	 restorematrix
	} bind def
/DoneALD {
	 ALDsave restore
	} bind def
%%EndProlog
%%BeginSetup
(3.0) FMVERSION
1 1 612 792 0 1 15 FMDOCUMENT
0 0 /Times-Roman FMFONTDEFINE
1 0 /Times-Italic FMFONTDEFINE
2 0 /Courier FMFONTDEFINE
3 0 /Times-BoldItalic FMFONTDEFINE
4 1 /Symbol FMFONTDEFINE
5 0 /Times-Bold FMFONTDEFINE
32 FMFILLS
0 0 FMFILL
1 .1 FMFILL
2 .3 FMFILL
3 .5 FMFILL
4 .7 FMFILL
5 .9 FMFILL
6 .97 FMFILL
7 1 FMFILL
8 <0f1e3c78f0e1c387> FMFILL
9 <0f87c3e1f0783c1e> FMFILL
10 <cccccccccccccccc> FMFILL
11 <ffff0000ffff0000> FMFILL
12 <8142241818244281> FMFILL
13 <03060c183060c081> FMFILL
14 <8040201008040201> FMFILL
16 1 FMFILL
17 .9 FMFILL
18 .7 FMFILL
19 .5 FMFILL
20 .3 FMFILL
21 .1 FMFILL
22 0.03 FMFILL
23 0 FMFILL
24 <f0e1c3870f1e3c78> FMFILL
25 <f0783c1e0f87c3e1> FMFILL
26 <3333333333333333> FMFILL
27 <0000ffff0000ffff> FMFILL
28 <7ebddbe7e7dbbd7e> FMFILL
29 <fcf9f3e7cf9f3f7e> FMFILL
30 <7fbfdfeff7fbfdfe> FMFILL
%%EndSetup
%%Page: "1" 1
%%BeginPaperSize: Letter
%%EndPaperSize
612 792 0 FMBEGINPAGE
0 12 Q
0 X
0 K
(Page  1) 504.69 28 T
1 24 Q
(The Layout Widget) 221.92 652 T
1 18 Q
(A Hierarchical Constraint Based Widget) 159.08 600 T
1 14 Q
(Keith Packard) 262.64 543.07 T
1 11 Q
(\240) 343.87 548.67 T
1 18 Q
(Abstract) 72 484.4 T
0 12 Q
0.77 (The X Toolkit) 72 460.4 P
2 F
1.86 ([Swick90]) 145.95 460.4 P
0 F
0.77 ( geometry management process is extremely flexible and powerful;) 210.71 460.4 P
-0.16 (however the existing composite widget classes make it difficult for the application developer both) 72 445.9 P
-0.63 (to simply design an application layout, and even more important, to make the layout work in a wide) 72 431.4 P
(variety of environments.) 72 416.9 T
0.75 0.5 (The Layout widget class is described which uses a stretch/shrink model similar to) 72 393.4 B
0.45 -0.7 (T) 517.76 393.4 B
0 14 Q
0.35 -1.6 (E) 524.39 388.9 B
0 12 Q
0.75 0.5 (X) 531.34 393.4 B
2 F
0.05 ([Knuth84]) 72 378.9 P
0 F
0.02 (to constrain the layout of an application in a manner which allows the geometry of) 144.01 378.9 P
0.5 (the children to respect the desires of the application designer, while adapting to its environment,) 72 364.4 P
0.33 (both in terms of the changing geometry allocated to the widget, and to the changing needs of the) 72 349.9 P
0.75 0.05 (child widgets. The specification of the child layout is entirely contained in a resource which is) 72 335.4 B
(interpreted at run time.) 72 320.9 T
1 18 Q
(Introduction) 72 278.4 T
1 14 Q
(History) 72 245.07 T
0 12 Q
-0.37 (Over a year ago, I was rewriting the user interface of a game program \050xmille\051 to use the X Toolkit) 72 222.4 P
1.38 (and Athena widget set instead of the original X10 based user interface. When it came time to) 72 207.9 P
0.21 (construct a widget tree which could represent the layout of the various widgets, I started with the) 72 193.4 P
-0.53 (Athena composite widgets \050Paned, Box, and Form\051 and tried to come up with a general mechanism) 72 178.9 P
-0.19 (which would automatically choose the correct size for the application, regardless of the fonts used) 72 164.4 P
(and also allow the application to be resized in a useful manner.) 72 149.9 T
72 118.17 540 132.57 C
72 118.17 540 132.57 R
7 X
0 K
V
72 123.57 252 123.57 2 L
V
0.5 H
2 Z
0 X
N
0 0 612 792 C
1 8 Q
0 X
0 K
-0.21 (\240) 72 112.83 P
1 10 Q
-0.27 (Keith Packard \050) 76 108.83 P
3 F
-0.27 (keithp@ncd.com) 139.31 108.83 P
1 F
-0.27 (\051 has been a member of the Network Computing Devices engineering staff since last) 207.87 108.83 P
0.16 (June. Prior to that, he was the senior staff member at the X Consortium. He has worked with and participated in the) 72 96.33 P
(design of much of the X Window System since early days of the X Consortium.) 72 83.83 T
FMENDPAGE
%%EndPage: "1" 2
%%Page: "2" 2
612 792 0 FMBEGINPAGE
0 12 Q
0 X
0 K
(Page  2) 504.69 28 T
-0.29 (After a few hours of frustration, it became clear that no combination of the existing widgets would) 72 712 P
-0.09 (do what I wanted. I gave up the project and went on to other things. In the back of my mind, I had) 72 697.5 P
0.81 (an idea that a new composite widget class which could solve the xmille problem would also be) 72 683 P
0.29 (generally useful for a wide variety of layout problems, so I started to design what would become) 72 668.5 P
(the Layout widget.) 72 654 T
-0.56 (What I wanted was a general 2D layout system which would take into consideration both some sort) 72 630.5 P
0.19 (of abstract geometrical description of the layout along with the sizes of the child widgets and \324do) 72 616 P
(the right thing\325 to produce a reasonable presentation on the screen.) 72 601.5 T
1 14 Q
(Goals) 72 568.67 T
0 12 Q
(The Layout widget tries to meet the following goals:) 72 546 T
(\245) 90 525.5 T
(Flexible.) 108 525.5 T
0.29 ( The widget should be usable in every situation to which it might be applied. This relates both to) 72 502 P
1.44 (how the external system constrains the space available to the widget as well as how the child) 72 487.5 P
-0.08 (widgets relate to their parent. For example, the user should be able to use a different font resource) 72 473 P
1.31 (and have the parent widget adapt automatically and reasonably, giving the child widgets more) 72 458.5 P
-0.16 (space as needed. An application should be able to be run in an extremely limited amount of space,) 72 444 P
-0.69 (and yet still provide useful information to the user. Widgets containing more important information) 72 429.5 P
(should be given more space than others.) 72 415 T
(\245) 90 394.5 T
(Easy to use.) 108 394.5 T
2.03 (Constructing the widget layout should be straightforward and intuitive. The constraint model) 72 371 P
1.3 (should be easily understood by all developers. Some flexibility in what layouts were available) 72 356.5 P
(could be limited in order to make the system substantially easier to use.) 72 342 T
(\245) 90 321.5 T
(Readily modifiable) 108 321.5 T
3.15 (When developing the user interface, the layout should be quickly modifiable to allow the) 72 298 P
2.25 (programmer to try alternative layouts without extensive work. In fact, by placing the layout) 72 283.5 P
-0.72 (description in a resource attached to the widget, even the end user can adjust the layout as necessary) 72 269 P
2.14 (to work in different environments. This allows the user to reconstruct the appearance of the) 72 254.5 P
(application.) 72 240 T
(\245) 90 219.5 T
(Predictable.) 108 219.5 T
-0.29 (In every situation to which the layout could be subjected, the results on the screen should be easily) 72 196 P
-0.13 (predicted from the layout description. If the results on the screen surprise the developer, just think) 72 181.5 P
-0.65 (what they\325re going to do to the user. The developer is not going to run the application in all possible) 72 167 P
0.98 (environments. Therefore, they should be able to create a layout description which can run with) 72 152.5 P
(almost any limitations.) 72 138 T
FMENDPAGE
%%EndPage: "2" 3
%%Page: "3" 3
612 792 0 FMBEGINPAGE
0 12 Q
0 X
0 K
(Page  3) 504.69 28 T
1 18 Q
(Solution) 72 708 T
1 14 Q
(Introduction) 72 674.67 T
0 12 Q
-0.04 (The design of the Layout widget was a long process; several iterations were required to transform) 72 652 P
0.22 (the idea of a general 2D layout system into something which is actually useful. I will go over the) 72 637.5 P
-0.05 (basic requirements of any solution and how those requirements meet the goals stated above. Then) 72 623 P
0.37 (I will discuss the constraint system and how a hierarchical approach is useful. Finally I will give) 72 608.5 P
(some complete working examples.) 72 594 T
1 14 Q
(Requirements of the solution) 72 561.17 T
0 12 Q
(These follow directly from the goals of the project.) 72 538.5 T
(\245) 90 518 T
(Constraint based.) 108 518 T
-0.26 (This requirement follows from goals of flexibility and predictability. A constraint based system, if) 72 494.5 P
1.56 (correctly specified, can be modeled easily by the programmer and will automatically adapt to) 72 480 P
-0.31 (changing circumstances. By always constructing the layout based on the constraints, the results on) 72 465.5 P
(the screen are be predictable.) 72 451 T
(\245) 90 430.5 T
(Hierarchical) 108 430.5 T
-0.6 (This means that sets of child widgets are grouped together and treated as a composite object \050which) 72 407 P
0.4 (can be grouped with other objects etc.\051. This allows the user interface to be constructed in larger) 72 392.5 P
(pieces, making the interactions the developer has to understand limited to a single level.) 72 378 T
(\245) 90 357.5 T
(Respect child widget geometry) 108 357.5 T
0.96 (When a child widget requests a change it its geometry, the request should be honored as far as) 72 334 P
1.02 (possible. This allows the geometry to reflect not only the desires of the developer, but also the) 72 319.5 P
(requirements for each widget.) 72 305 T
(\245) 90 284.5 T
(Be useful for almost all 2D layouts) 108 284.5 T
-0.13 (Where this doesn\325t conflict with the goal of usability, the system should be designed to provide as) 72 261 P
(much flexibility in describing the layout as possible.) 72 246.5 T
1 14 Q
(The Pieces of the System) 72 213.67 T
0 12 Q
3.28 (The Layout widget consists of several cooperating ideas. First, the layout is be described) 72 191 P
3 (hierarchically. Next constraints are associated with each object. Finally, the constraints are) 72 176.5 P
(propagated up the hierarchy to produce the desired layout.) 72 162 T
1 14 Q
(Hierarchical construction) 72 129.17 T
0 12 Q
0.94 (The Layout widget composes objects into boxes stacking them either vertically or horizontally.) 72 106.5 P
-0.04 (These boxes can then be composed along with other objects into other boxes. At the top level, the) 72 92 P
0.27 (Layout widget contains a single box. To specify the layout for a window, the proposed geometry) 72 77.5 P
FMENDPAGE
%%EndPage: "3" 4
%%Page: "4" 4
612 792 0 FMBEGINPAGE
0 12 Q
0 X
0 K
(Page  4) 504.69 28 T
0.18 (is first broken down into boxes. Figure 1 shows an example of a simple dialog box which fits the) 72 712 P
(hierarchical layout system quite nicely. Dashed lines indicate how the dialog can be broken down) 72 697.5 T
(into boxes, each box containing objects aligned either vertically or horizontally.) 72 683 T
1 F
(Figure 1: Example Dialog Box) 231.72 510.5 T
0 F
(The hierarchy of these boxes is specified as:) 72 487 T
(Vertical Box containing:) 108 466.5 T
(Label Widget) 144 452 T
(Text Insertion Field) 144 437.5 T
(Horizontal Box containing:) 144 423 T
(Button 1) 180 408.5 T
(Button 2) 180 394 T
1.33 (By specifying the layout hierarchically, the problem of how to position objects relative to one) 72 370.5 P
(another has been reduced to a problem of how to arrange objects next to one another in a box.) 72 356 T
-0.1 (This system is in contrast to a constraint system using a flat topology, where every child widget is) 72 332.5 P
0.33 (treated at the same level and is placed in the constraint system individually. In such a system the) 72 318 P
(above layout might be described as follows:) 72 303.5 T
(Top of the Label is bound to the top of the composite widget) 108 268.5 T
(Left edge of the Label is bound to the left side of the composite widget) 108 254 T
(Right edge of the Label is bound to the right edge of the composite widget) 108 239.5 T
(Bottom of the Label is bound to the top of the Text Insertion Field) 108 225 T
(Left edge of the Text Insertion Field is bound to the left side of the composite widget) 108 210.5 T
(Right edge of the Text Insertion Field is bound to the right side of the composite widget) 108 196 T
(Bottom of the Text Insertion Field is bound to the top of Button 1) 108 181.5 T
(Bottom of the Text Insertion Field is bound to the top of Button 2) 108 167 T
(Bottom of Button 1 is bound to the bottom of the composite widget) 108 152.5 T
(Bottom of Button 2 is bound to the bottom of the composite widget) 108 138 T
(Left edge of Button 1 is bound to the left side of the composite widget) 108 123.5 T
(Right edge of Button 1 is bound to the left edge of Button 2) 108 109 T
(Right edge of Button 2 is bound to the right side of the composite widget) 108 94.5 T
72 72 540 720 C
163.12 527 448.88 655.5 C
167.62 528.5 446.62 650 R
7 X
0 K
V
0.5 H
2 Z
0 X
N
0 12 Q
(Label Widget) 194.62 623 T
194.62 582.5 325.12 605 R
7 X
V
0 X
N
(Text Insertion Field) 203.62 587 T
194.62 537.5 262.12 564.5 13.5 RR
7 X
V
0 X
N
(Button 1) 208.12 546.5 T
338.62 537.5 410.62 564.5 13.5 RR
7 X
V
0 X
N
(Button 2) 352.12 546.5 T
167.62 614 446.62 614 2 L
2 X
V
8 X
N
167.62 573.5 446.62 573.5 2 L
N
298.12 573.5 298.12 528.5 2 L
N
72 72 540 720 C
0 0 612 792 C
FMENDPAGE
%%EndPage: "4" 5
%%Page: "5" 5
612 792 0 FMBEGINPAGE
0 12 Q
0 X
0 K
(Page  5) 504.69 28 T
-0.29 (Unless some structure is given to these constraints, the number grows quickly with the complexity) 72 712 P
1.23 (of the layout. However, a non-hierarchical systems could also solve many problems which the) 72 697.5 P
(Layout widget does not address. A layout like:) 72 683 T
1 F
(Figure 2: An example of something Layout doesn\325t do) 176.42 493 T
0 F
0.96 (cannot be described using a hierarchy of horizontal and vertical boxes. As such layouts are not) 72 469.5 P
-0.02 (really all that useful, and the ability to combine objects together into composite objects makes the) 72 455 P
-0.25 (problem of describing the layout significantly easier, I decided to forgo the flat layout in lieu of an) 72 440.5 P
(easier to use system.) 72 426 T
1 14 Q
(The Layout Constraint System) 72 393.17 T
0 12 Q
-0.51 (A Constraint system consists of a collection of statements \050constraints\051 about the relations between) 72 370.5 P
0.66 (the objects to be laid out which should be all made simultaneously true, whenever possible. For) 72 356 P
2.74 (example, referring to Figure 1 above, the following constraints could be used to guide the) 72 341.5 P
(positioning of the objects:) 72 327 T
(\245) 90 306.5 T
(The Label, the Text Insertion Field and Button 2should be left aligned.) 108 306.5 T
(\245) 90 286 T
0.35 (Those elements should be spaced about the same distance from the left edge as the Label) 108 286 P
(is tall.) 108 271.5 T
(\245) 90 251 T
-0.28 (Button 2 should be spaced from the right edge the same amount as Button 1 is spaced from) 108 251 P
(the left edge) 108 236.5 T
(\245) 90 216 T
(The buttons should be spaced about three times as far apart as they are from each edge.) 108 216 T
(\245) 90 195.5 T
0.2 (The Text Insertion Field shouldn\325t shrink below a \324reasonable\325 size; however it should be) 108 195.5 P
(given as much space as it needs; even if the dialog box must get larger.) 108 181 T
(\245) 90 160.5 T
-0.61 (The vertical spacing between all of the various fields should be about the same as the height) 108 160.5 P
(of the Label.) 108 146 T
-0.35 (Given this description of the constraints desired, a system for describing them is needed. There are) 72 122.5 P
(several options, the one Layout uses is derived from the TeX \324Boxes and Glue\325 model.) 72 108 T
72 72 540 720 C
205.59 509.5 406.41 655.5 C
205.59 516 403.59 651 R
0.5 H
2 Z
0 X
0 K
N
210.09 601.5 331.59 646.5 R
N
336.09 561 399.09 646.5 R
N
273.09 520.5 399.09 556.5 R
N
210.09 520.5 268.59 597 R
N
0 12 Q
(Text Insertion Field) 219.09 615 T
(Label) 349.59 601.5 T
(Button 1) 214.59 556.5 T
(Button 2) 300.09 534 T
72 72 540 720 C
0 0 612 792 C
FMENDPAGE
%%EndPage: "5" 6
%%Page: "6" 6
612 792 0 FMBEGINPAGE
0 12 Q
0 X
0 K
(Page  6) 504.69 28 T
1 F
(The Layout model) 72 712 T
0 F
(In the Layout constraint system, the objects grouped into a box have three attributes) 72 689 T
(\245) 90 668.5 T
(Natural size) 108 668.5 T
2.01 (This is the size which this object would like to be. For widgets, this is the size reported by) 72 645 P
(XtQueryGeometry.) 72 630.5 T
(\245) 90 610 T
(Stretch) 108 610 T
( This is a value which indicates the willingness of this object to grow beyond the its natural size.) 72 586.5 T
(\245) 90 566 T
(Shrink) 108 566 T
-0.74 ( This is a value which indicates the willingness of this object to become smaller than its natural size.) 72 542.5 P
0.64 (Both stretch and shrink can be additionally attributed with an order of \324infinity\325. This works the) 72 519 P
0.2 (same way infinity works with TeX glue\321a value of one order of infinity is larger than any value) 72 504.5 P
0.36 (of any smaller order of infinity \050e.g. 1) 72 490 P
4 F
0.36 (\245) 259.39 490 P
0 10 Q
0.3 (2) 267.95 494.8 P
0 12 Q
0.36 ( > 1000) 272.94 490 P
4 F
0.36 (\245) 313.76 490 P
0 10 Q
0.3 (1) 322.31 494.8 P
0 12 Q
0.36 (\051. Each object has a natural size, stretch and) 327.31 490 P
2.38 (shrink in both dimensions. Shrink values of order zero are a special case; they indicate the) 72 475.5 P
0.37 (maximum amount that an object can be shrunk by. The Layout widget will not reduce the object) 72 461 P
(by more than this amount.) 72 446.5 T
-0.44 (Boxes are composed along either a vertical or horizontal axis. All of the objects in a box are placed) 72 423 P
0.2 (along this axis. Once the size of a box is determined, the size and placement of the objects inside) 72 408.5 P
-0.09 (it can be computed. Normal to the axis of the box, each object is placed at the edge of the box and) 72 394 P
0.15 (made as large as the box. Along the axis of the box, each object is given a piece of the difference) 72 379.5 P
-0.4 (between the actual size of the box and the natural size of the box. When) 72 365 P
-0.4 ( has a smaller) 475.59 365 P
-0.6 (order of infinity than) 72 350.5 P
-0.6 (, the object is left in its natural size. Otherwise, if the box is smaller) 224.22 350.5 P
(than its natural size, each object is shrunk in proportion to its shrink value:) 72 336 T
-0.24 (Similarly, when the box is larger than its natural size, each object with stretch of the same order of) 72 240.5 P
(infinity as the stretch value of the box is resized in the ratio:) 72 226 T
(These equations are intended to be identical to the TeX model.) 72 130.5 T
413.67 358.37 475.59 374.2 C
1 12 Q
0 X
0 K
(S) 414.67 365 T
(h) 421.38 365 T
(r) 428.08 365 T
(i) 433.45 365 T
(n) 437.49 365 T
(k) 444.19 365 T
1 9 Q
(o) 449.98 361.22 T
(b) 455 361.22 T
(j) 460.03 361.22 T
(e) 463.05 361.22 T
(c) 467.58 361.22 T
(t) 472.1 361.22 T
0 0 612 792 C
172.88 343.87 224.22 359.7 C
1 12 Q
0 X
0 K
(S) 173.88 350.5 T
(h) 180.58 350.5 T
(r) 187.28 350.5 T
(i) 192.66 350.5 T
(n) 196.7 350.5 T
(k) 203.4 350.5 T
1 9 Q
(b) 209.18 346.72 T
(o) 214.21 346.72 T
(x) 219.23 346.72 T
0 0 612 792 C
72 72 540 720 C
78 260 534 332 C
1 12 Q
0 X
0 K
(S) 137.45 293.5 T
(i) 144.15 293.5 T
(z) 148.19 293.5 T
(e) 153.57 293.5 T
1 9 Q
(o) 159.35 289.72 T
(b) 164.38 289.72 T
(j) 169.4 289.72 T
(e) 172.43 289.72 T
(c) 176.95 289.72 T
(t) 181.47 289.72 T
1 12 Q
(N) 202.55 293.5 T
(a) 211.25 293.5 T
(t) 217.96 293.5 T
(u) 222 293.5 T
(r) 228.7 293.5 T
(a) 234.07 293.5 T
(l) 240.77 293.5 T
1 9 Q
(o) 244.57 289.72 T
(b) 249.59 289.72 T
(j) 254.62 289.72 T
(e) 257.64 289.72 T
(c) 262.16 289.72 T
(t) 266.68 289.72 T
1 12 Q
(S) 282.77 303.72 T
(h) 289.47 303.72 T
(r) 296.17 303.72 T
(i) 301.54 303.72 T
(n) 305.58 303.72 T
(k) 312.29 303.72 T
1 9 Q
(o) 318.07 299.94 T
(b) 323.1 299.94 T
(j) 328.12 299.94 T
(e) 331.15 299.94 T
(c) 335.67 299.94 T
(t) 340.18 299.94 T
1 12 Q
(S) 288.05 285.89 T
(h) 294.76 285.89 T
(r) 301.46 285.89 T
(i) 306.83 285.89 T
(n) 310.87 285.89 T
(k) 317.57 285.89 T
1 9 Q
(b) 323.36 282.11 T
(o) 328.38 282.11 T
(x) 333.4 282.11 T
1 12 Q
(N) 363.37 293.5 T
(a) 372.07 293.5 T
(t) 378.78 293.5 T
(u) 382.82 293.5 T
(r) 389.52 293.5 T
(a) 394.89 293.5 T
(l) 401.59 293.5 T
1 9 Q
(b) 405.39 289.72 T
(o) 410.41 289.72 T
(x) 415.43 289.72 T
1 12 Q
(S) 432.01 293.5 T
(i) 438.71 293.5 T
(z) 442.75 293.5 T
(e) 448.12 293.5 T
1 9 Q
(b) 453.91 289.72 T
(o) 458.93 289.72 T
(x) 463.96 289.72 T
4 12 Q
(-) 422.43 293.5 T
(\050) 358.27 293.5 T
(\051) 468.55 293.5 T
(\264) 346.68 293.5 T
(-) 272.18 293.5 T
(=) 189.96 293.5 T
282.77 296.09 342.43 296.09 2 L
0.33 H
0 Z
N
72 72 540 720 C
0 0 612 792 C
72 72 540 720 C
78 150 534 222 C
1 12 Q
0 X
0 K
(S) 138.18 183.5 T
(i) 144.89 183.5 T
(z) 148.93 183.5 T
(e) 154.3 183.5 T
1 9 Q
(o) 160.08 179.72 T
(b) 165.11 179.72 T
(j) 170.13 179.72 T
(e) 173.16 179.72 T
(c) 177.68 179.72 T
(t) 182.2 179.72 T
1 12 Q
(N) 203.28 183.5 T
(a) 211.99 183.5 T
(t) 218.69 183.5 T
(u) 222.73 183.5 T
(r) 229.43 183.5 T
(a) 234.8 183.5 T
(l) 241.51 183.5 T
1 9 Q
(o) 245.3 179.72 T
(b) 250.32 179.72 T
(j) 255.35 179.72 T
(e) 258.38 179.72 T
(c) 262.89 179.72 T
(t) 267.42 179.72 T
1 12 Q
(S) 283.5 193.72 T
(t) 290.2 193.72 T
(r) 294.24 193.72 T
(e) 299.61 193.72 T
(t) 305.64 193.72 T
(c) 309.68 193.72 T
(h) 315.71 193.72 T
1 9 Q
(o) 322.17 189.94 T
(b) 327.2 189.94 T
(j) 332.22 189.94 T
(e) 335.25 189.94 T
(c) 339.77 189.94 T
(t) 344.29 189.94 T
1 12 Q
(S) 283.5 175.89 T
(t) 290.2 175.89 T
(r) 294.24 175.89 T
(e) 299.61 175.89 T
(t) 305.64 175.89 T
(c) 309.68 175.89 T
(h) 315.71 175.89 T
1 9 Q
(o) 322.17 172.11 T
(b) 327.2 172.11 T
(j) 332.22 172.11 T
(e) 335.25 172.11 T
(c) 339.77 172.11 T
(t) 344.29 172.11 T
1 12 Q
(S) 367.47 183.5 T
(i) 374.17 183.5 T
(z) 378.21 183.5 T
(e) 383.58 183.5 T
1 9 Q
(b) 389.37 179.72 T
(o) 394.39 179.72 T
(x) 399.42 179.72 T
1 12 Q
(N) 411.16 183.5 T
4 F
(-) 404.11 183.5 T
1 F
(a) 419.86 183.5 T
(t) 426.57 183.5 T
(u) 430.61 183.5 T
(r) 437.31 183.5 T
(a) 442.68 183.5 T
(l) 449.38 183.5 T
1 9 Q
(b) 453.18 179.72 T
(o) 458.2 179.72 T
(x) 463.23 179.72 T
4 12 Q
(\050) 362.37 183.5 T
(\051) 467.82 183.5 T
(\264) 350.78 183.5 T
(+) 272.91 183.5 T
(=) 190.7 183.5 T
283.5 186.09 346.53 186.09 2 L
0.33 H
0 Z
N
72 72 540 720 C
0 0 612 792 C
FMENDPAGE
%%EndPage: "6" 7
%%Page: "7" 7
612 792 0 FMBEGINPAGE
0 12 Q
0 X
0 K
(Page  7) 504.69 28 T
1 14 Q
(Inherited Stretch and Shrink) 72 710.67 T
0 12 Q
(Insanity is hereditary: you get it from your kids.) 72 688 T
1.2 (In a similar fashion, boxes inherit their natural size, stretch and shrink values from the objects) 72 664.5 P
(contained in them. An alternative method which was tested and discarded had explicit stretch and) 72 650 T
0.78 (shrink values for these composite objects. This was not reasonable because it forced the user to) 72 635.5 P
-0.08 (generate many more values for the objects, and it meant that the attributes of the primitive objects) 72 621 P
0.49 (could be overridden by the attributes of the composite objects above them in the tree. It is much) 72 606.5 P
1.02 (easier to have the Layout widget compute \324reasonable\325 values for the composite boxes and use) 72 592 P
-0.24 (them instead. Some trouble was taken over the development of the mechanism for inheriting these) 72 577.5 P
(values.) 72 563 T
(Along the axis of the box, the simplest model also turns out to work exceedingly well:) 72 539.5 T
(\245) 90 519 T
(The natural size is the total of the natural sizes of the objects.) 108 519 T
(\245) 90 498.5 T
(The stretch is the sum of the child objects stretch values.) 108 498.5 T
(\245) 90 478 T
(The shrink is the sum of the child objects shrink values.) 108 478 T
-0.58 (The sum of stretch and shrink values is complicated by the notion of infinity: the sum of two values) 72 454.5 P
1 F
0.34 (a) 72 440 P
0 F
0.34 (and) 81.33 440 P
1 F
0.34 (b) 101.98 440 P
0 F
0.34 (has order of the maximum of the orders of) 111.31 440 P
1 F
0.34 (a) 320.5 440 P
0 F
0.34 (and) 329.83 440 P
1 F
0.34 ( b) 347.15 440 P
0 F
0.34 (. If) 356.48 440 P
1 F
0.34 (a) 374.13 440 P
0 F
0.34 (and) 383.46 440 P
1 F
0.34 (b) 404.11 440 P
0 F
0.34 ( are of the same order then) 410.11 440 P
-0.23 (the base value is the sum of the base values of) 72 425.5 P
1 F
-0.23 (a) 293.62 425.5 P
0 F
-0.23 (and) 302.39 425.5 P
1 F
-0.23 (b.) 322.47 425.5 P
0 F
-0.23 (Otherwise, it is the base value of the one of) 334.24 425.5 P
(larger order.) 72 411 T
0.19 (Normal to the axis of the box, things are different and no obvious method jumps out. Because all) 72 387.5 P
0.22 (of the objects in the box are expanded to the size of the box along this dimension, the constraints) 72 373 P
1.12 (for the box must take all of the objects into account. The attributes are designed to respect the) 72 358.5 P
0.48 (requests of the most rigid child object; this will automatically satisfy the constraints of all of the) 72 344 P
(other objects.) 72 329.5 T
(\245) 90 309 T
0.62 (The natural size is the natural size of the object with the smallest order of infinity for its) 108 309 P
0.86 (shrink attribute. If more than one object qualifies, the largest natural size is used. Either) 108 294.5 P
0.52 (stretch or shrink could have been chosen here, but shrinking a box usually requires more) 108 280 P
(care than stretching.) 108 265.5 T
(\245) 90 245 T
(The stretch is the minimum of all of the stretch values.) 108 245 T
(\245) 90 224.5 T
-0.6 (The shrink value is essentially the minimum of the shrink values. However, if the minimum) 108 224.5 P
0.57 (shrink order is zero, then the shrink value is the natural size of the box minus the largest) 108 210 P
0.13 (minimum size of objects of shrink order zero. This seems complicated, but the effect is to) 108 195.5 P
0.53 (honor the special semantics for shrink of order zero by not shrinking any object by more) 108 181 P
(than its shrink value.) 108 166.5 T
-0.25 (The minimum of stretch and shrink values is also complicated by infinite values. The minimum of) 72 143 P
-0.12 (two values) 72 128.5 P
1 F
-0.12 (a) 126.38 128.5 P
0 F
-0.12 (and) 135.26 128.5 P
1 F
-0.12 (b) 155.45 128.5 P
0 F
-0.12 (is the value with minimal order, unless they have the same order in which case) 164.32 128.5 P
(it is the value with a smaller base value.) 72 114 T
FMENDPAGE
%%EndPage: "7" 8
%%Page: "8" 8
612 792 0 FMBEGINPAGE
0 12 Q
0 X
0 K
(Page  8) 504.69 28 T
1 14 Q
(Glue) 72 710.67 T
0 12 Q
0.39 (The above discussion leaves out one piece of the puzzle: how to space widgets so that they have) 72 688 P
-0.1 (blank areas between them. Glue is just another object which can be composed in a box along with) 72 673.5 P
0.48 (other boxes and widgets. It has the three attributes of natural size, stretch and shrink; however it) 72 659 P
0.63 (only has these attributes for the axis of the box in which it resides. Along the other axis, glue is) 72 644.5 P
(simply ignored.) 72 630 T
1 14 Q
(The Layout Language) 72 597.17 T
0 12 Q
1.41 (Instead of using the Xt constraint mechanism, which attaches constraint resources to the child) 72 574.5 P
-0.08 (widgets, the Layout widget has a single resource which describes the geometry of the entire set of) 72 560 P
1.38 (widgets. This is because describing the hierarchy is most clearly done in a single place, using) 72 545.5 P
3.05 (indentation or some other syntactic sugar to clearly indicate the structure, and placing the) 72 531 P
1.75 (constraints separate from the hierarchy makes it difficult to associate the two. This is a BNF) 72 516.5 P
(representation of the major elements of this language:) 72 502 T
(Box) 108 481.5 T
(:==) 180 481.5 T
5 F
(vertical) 216 481.5 T
({) 257.63 481.5 T
0 F
( Objects) 262.36 481.5 T
5 F
(}) 304.99 481.5 T
0 F
(:==) 180 467 T
5 F
(horizontal) 216 467 T
({) 271.64 467 T
0 F
( Objects) 276.36 467 T
5 F
(}) 319 467 T
0 F
(Object) 108 452.5 T
(:==) 180 452.5 T
(Box) 216 452.5 T
(:==) 180 438 T
(Widget) 216 438 T
(:==) 180 423.5 T
(Glue) 216 423.5 T
(:==) 180 409 T
(Variable) 216 409 T
(Widget) 108 394.5 T
(:==) 180 394.5 T
1 F
(widget-name) 216 394.5 T
5 F
(< +) 280.96 394.5 T
0 F
(Value) 300.62 394.5 T
5 F
(-) 332.26 394.5 T
0 F
( Value) 336.26 394.5 T
5 F
(* +) 370.89 394.5 T
0 F
( Value) 386.73 394.5 T
5 F
(-) 421.36 394.5 T
0 F
( Value) 425.36 394.5 T
5 F
(>) 459.99 394.5 T
0 F
(Glue) 108 380 T
(:==) 180 380 T
(Expression) 216 380 T
5 F
(< +) 272.3 380 T
0 F
(Value) 291.97 380 T
5 F
(-) 323.61 380 T
0 F
(Value >) 330.6 380 T
(Variable) 108 365.5 T
(:==) 180 365.5 T
1 F
(variable-name) 216 365.5 T
5 F
(=) 288.94 365.5 T
0 F
(Expression) 298.78 365.5 T
(Value) 108 351 T
(:==) 180 351 T
(Expression) 216 351 T
5 F
(inff*) 272.3 351 T
0 F
-0.46 (The constraints on a widget are expressed as < + horizontal-stretch - horizontal-shrink * + vertical-) 72 327.5 P
0.51 (stretch -vertical-shrink >, while those for glue are simply < +stretch -shrink >, the orientation of) 72 313 P
-0.17 (the glue being inherited from the box it is contained in. When a stretch or shrink value, along with) 72 298.5 P
0.89 (the + or - character is not specified, it is taken as zero. For example, < +inf * -10 > specifies a) 72 284 P
-0.33 (widget constraint of 1, infinity order 1 horizontal stretch, 0 horizontal shrink, 0 vertical stretch and) 72 269.5 P
(-10 infinity order 0 shrink.) 72 255 T
-0.63 (The order of infinity for a particular value is the number of) 72 231.5 P
5 F
-0.63 (f) 350.22 231.5 P
0 F
-0.63 ( characters in the) 354.22 231.5 P
5 F
-0.63 (inf) 436.29 231.5 P
0 F
-0.63 ( following the base) 450.28 231.5 P
-0.16 (value. For example,) 72 217 P
2 F
-0.37 (1inff) 169.8 217 P
0 F
-0.16 ( has order 2. Expressions are simple arithmetic \050) 205.78 217 P
2 F
-0.37 (+) 436.04 217 P
0 F
-0.16 (,) 443.23 217 P
2 F
-0.37 (-) 449.07 217 P
0 F
-0.16 (,) 456.27 217 P
2 F
-0.37 (*) 462.11 217 P
0 F
-0.16 (,) 469.31 217 P
2 F
-0.37 (/) 475.15 217 P
0 F
-0.16 (\051 along with) 482.35 217 P
(some special syntax:) 72 202.5 T
(Expression) 108 182 T
(:==) 180 182 T
(Expression) 216 182 T
1 F
(binary-op \050+, -, *, /\051) 272.3 182 T
0 F
(Expression) 372.99 182 T
(:==) 180 167.5 T
5 F
(width) 216 167.5 T
1 F
(widget-name) 248.32 167.5 T
0 F
(:==) 180 153 T
5 F
(height) 216 153 T
1 F
(widget-name) 250.99 153 T
0 F
(:==) 180 138.5 T
(Expression) 216 138.5 T
5 F
(% of) 272.3 138.5 T
0 F
(Expression) 300.28 138.5 T
(:==) 180 124 T
(Expression) 216 124 T
5 F
(%) 272.3 124 T
0 F
(:==) 180 109.5 T
5 F
($) 216 109.5 T
1 F
(variable-name) 224.99 109.5 T
FMENDPAGE
%%EndPage: "8" 9
%%Page: "9" 9
612 792 0 FMBEGINPAGE
0 12 Q
0 X
0 K
(Page  9) 504.69 28 T
5 F
-0 (Width) 72 712 P
0 F
-0 ( and) 104.66 712 P
5 F
-0 (height) 127.97 712 P
0 F
-0 ( return the size of the named widget in the indicated direction.) 159.96 712 P
5 F
-0 (% of) 460.72 712 P
0 F
-0 (is a simple) 488.7 712 P
0.71 (shorthand for a / b * 100, while a) 72 697.5 P
5 F
0.71 (%) 240.31 697.5 P
0 F
0.71 ( standing alone returns that part of the size of the object to) 252.3 697.5 P
(which the constraint applies.) 72 683 T
-0.52 (Variables are a simple short hand for repetitive typing. Assign an expression to a variable, and then) 72 659.5 P
-0.2 (use that variable in a Value and the expression will be evaluated in the context of where that value) 72 645 P
(is used \050which doesn\325t really matter, except for the) 72 630.5 T
5 F
(%) 318.48 630.5 T
0 F
( operator\051.) 330.47 630.5 T
1 14 Q
(A complete example) 72 597.67 T
0 12 Q
1.9 (Looking back to Figure 1, the complete layout description for that widget which follows the) 72 575 P
(constraints given above would be:) 72 560.5 T
(vertical {) 108 540 T
(space = height label) 144 525.5 T
($space < +inf -100% >) 144 511 T
(horizontal {) 144 496.5 T
($space < -100% >) 180 482 T
(label) 180 467.5 T
($space < +inf -100% >) 180 453 T
(}) 144 438.5 T
($space < +inf -100% >) 144 424 T
(horizontal {) 144 409.5 T
($space < -100% >) 180 395 T
(textInsertionField) 180 380.5 T
($space < +inf -100% >) 180 366 T
(}) 144 351.5 T
($space < +inf -100% >) 144 337 T
(horizontal {) 144 322.5 T
($space < -100% >) 180 308 T
(button1) 180 293.5 T
(\0503 * $space\051 < +inf -100% >) 180 279 T
(button2) 180 264.5 T
($space < -100% >) 180 250 T
(}) 144 235.5 T
($space < +inf -100% >) 144 221 T
(}) 108 206.5 T
1.02 (Note how some additional boxes were added to space the textInsertionField and label from the) 72 183 P
(edges of the dialog. This same layout could be described in many other ways.) 72 168.5 T
0.18 (When this dialog box is resized by the user, the vertical white space between the various fields is) 72 145 P
0.74 (resized evenly, and the buttons gravitate to the edges of the dialog. When the textInsertionField) 72 130.5 P
(requests more space, the dialog box will try to become larger.) 72 116 T
FMENDPAGE
%%EndPage: "9" 10
%%Page: "10" 10
612 792 0 FMBEGINPAGE
0 12 Q
0 X
0 K
(Page  10) 498.7 28 T
1 18 Q
(Summary) 72 708 T
0 12 Q
0.1 (The original problem of how to layout the xmille program has been resolved; xmille now runs on) 72 684 P
1.51 (everything from a 1280x1024 NCD terminal to a 640x480 PC; and even when the fonts used) 72 669.5 P
-0.33 (internally are made larger \050to accommodate a visually impaired colleague\051, the layout continues to) 72 655 P
(function well.) 72 640.5 T
0.29 (The original goals of the project have been met, and the resulting Layout system is simple to use) 72 617 P
-0.73 (and powerful enough to solve a wide variety of user interface problems. Instead of spending several) 72 602.5 P
-0.03 (hours trying different combinations of composite widgets; simply starting with the Layout widget) 72 588 P
(and trying different specifications makes the development of new applications extremely rapid.) 72 573.5 T
-0.24 (The Layout widget is not restricted to use with the Athena widgets; it can be integrated with Motif) 72 550 P
2.42 (or OLIT applications. It is available via anonymous FTP along with a collection of sample) 72 535.5 P
(programs which use it from export.lcs.mit.edu as Layout.tar.Z.) 72 521 T
1 18 Q
(References) 72 478.5 T
2 12 Q
([Knuth84]) 72 454.5 T
0 F
2.01 (Donald E. Knuth,) 180 454.5 P
1 F
2.01 (The) 273.63 454.5 P
-0 -3 (T) 296.62 454.5 B
1 14 Q
1.4 -1.4 (E) 300.29 450 B
1 12 Q
2.01 (XBook) 307.44 454.5 P
0 F
2.01 (, Addison Wesley Publishing Company,) 339.41 454.5 P
(1984.) 180 440 T
2 F
([Swick90]) 72 416.5 T
0 F
1.25 (Paul Ascente and Ralph Swick,) 180 416.5 P
1 F
1.25 (X Window System Toolkit) 340.17 416.5 P
0 F
1.25 (, Digital Press,) 466.86 416.5 P
(1990.) 180 402 T
2 F
([Scheifler92]) 72 378.5 T
0 F
1.42 (Robert W. Scheifler and James Gettys,) 180 378.5 P
1 F
1.42 (X Window System) 377.73 378.5 P
0 F
1.42 (, Digital Press,) 466.52 378.5 P
(1992.) 180 364 T
FMENDPAGE
%%EndPage: "10" 11
%%Trailer
                                                                                                
