For this cdrom, I tested/updated using accounts provided by Charles
Sandman and Jerry Leslie (VAX with OpenVMS 6.1), as well as the DECUS server
eisner.decus.org (Alpha with OpenVMS 7.2-1).  There are executables for
those configurations.

For other system configurations, to build tin, you'll need a C compiler
(we've tested with DEC-C).  It's nice but not essential to have
MMS (or its clone, MMK).  You also need the BYACC port and SOCKETSHR.

To build, I set the default directory to [.tin-1-4-4.src] and ran

	mmk /macro=(VAX=1,DECC=1,"DEBUG"=1,SOCKETSHR_STATIC=1)

which linked SOCKETSHR statically with TIN, and made an executable which
can also write debug-output, e.g.,

	TIN -"D2"

for very-verbose traces in your home directory.

Documentation:
-------------
	There is a Unix-style manual page in the sources.
	More useful, there is a builtin help-screen (press '?').

Running the program:
-------------------

	You don't have to install the program to run it.  TIN can run
	from the build directory.  You must define a foreign command to
	run TIN (otherwise it won't get command-line arguments).

	Since this is built with SOCKETSHR, you need a "services" file.
	I have tested with the one from SOCKETSHR's sources, defining
	a logical SOCKETSHR_SERVICES to point to this file, e.g.,

		$ define/system SOCKETSHR_SERVICES mydev:[mydir]services.dat

	(See README.TXT in SOCKETSHR for related details).

Installing:
----------
        You can install the executable for TIN in the directory where
        you normally install user programs or tools.  Define (e.g., in
        your LOGIN.COM) the foreign command to point to it, e.g.,

                $ TIN :== "$ SYS$LOGIN:TIN.EXE"

        if you put it in your home directory (not tidy, but workable).

--

Thomas Dickey <dickey@herndon4.his.com>
