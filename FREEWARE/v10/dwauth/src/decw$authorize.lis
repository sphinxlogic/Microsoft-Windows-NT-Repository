
Motif Uil Compiler V1.1-000 	22-NOV-1993 11:29:56.26		 Page 1
Module: authorize 	 Version: X1.0
 
    1 (0)	module	authorize
    2 (0)		version		= 'X1.0'
    3 (0)	!	names		= case_insensitive
    4 (0)	
    5 (0)	procedure
    6 (0)		toggle_proc	(integer);
    7 (0)		activate_proc	(integer);
    8 (0)		create_proc	(integer);
    9 (0)		scale_proc	(integer);
   10 (0)		list_proc	(integer);
   11 (0)		show_hide_proc	(integer);
   12 (0)		pull_proc	(integer);
   13 (0)	
   14 (0)	include file 'sys$disk:[]uafuidef';
    1 (1)	! ********************************************************************************************************************************
    2 (1)	!  Created  1-NOV-1993 13:00:46 by VAX-11 SDL T3.2-8      Source: 16-JUN-1993 11:29:24 UAFUIDEF.SDL;52 
    3 (1)	! ********************************************************************************************************************************
    4 (1)	 
    5 (1)	! Module UAFUI
    6 (1)	! Define the constants associated with the file menu items.
    7 (1)	value uaf$c_ctl_menu_base : 1;
    8 (1)	value uaf$c_ctl_open : 1;                               ! Open a new file
    9 (1)	value uaf$c_ctl_refresh : 2;                            ! Refresh current (open) file
   10 (1)	value uaf$c_ctl_quit : 3;                               ! Exit from the utility
   11 (1)	value uaf$c_ctl_max_code : 4;                           ! Last entry + 1
   12 (1)	! Define the constants associated with the command menu items.
   13 (1)	value uaf$c_cmd_menu_base : 10;
   14 (1)	value uaf$c_cmd_list : 10;                              ! List entries to a file
   15 (1)	value uaf$c_cmd_print : 11;                             ! Print entries
   16 (1)	value uaf$c_cmd_modify_template : 12;                   ! Modify new account template
   17 (1)	value uaf$c_cmd_max_code : 13;                          ! Last entry + 1
   18 (1)	! Define the constants associated with the help menu items.
   19 (1)	value uaf$c_hlp_menu_base : 20;
   20 (1)	value uaf$c_hlp_overview : 20;                          ! Provide an overview of the utility
   21 (1)	value uaf$c_hlp_about : 21;                             ! Provide feature level help
   22 (1)	value uaf$c_hlp_max_code : 22;                          ! Last entry + 1
   23 (1)	! Define the constants associated with the file selection items.
   24 (1)	value uaf$c_file_window_base : 25;
   25 (1)	value uaf$c_file_open_file : 25;                        ! Open an authorization file
   26 (1)	value uaf$c_file_select : 26;                           ! Select new list of authorization files
   27 (1)	value uaf$c_file_cancel : 27;                           ! Cancel file selection
   28 (1)	value uaf$c_file_max_code : 28;                         ! Last entry + 1
   29 (1)	! Define the constants associated with the main window widgets.
   30 (1)	value uaf$c_main_window_base : 30;
   31 (1)	value uaf$c_main_create : 30;                           ! Pushbutton - Create a new authorization entry
   32 (1)	value uaf$c_main_modify : 31;                           ! Pushbutton - Modify an existing authorization entry
   33 (1)	value uaf$c_main_delete : 32;                           ! Pushbutton - Delete an existing authorization entry
   34 (1)	value uaf$c_main_reset : 33;                            ! Pushbutton - Reset to initial state
   35 (1)	value uaf$c_main_select : 34;                           ! Pushbutton - Select entries using filter value
   36 (1)	value uaf$c_main_spare_1 : 35;                          ! Spare
   37 (1)	value uaf$c_main_spare_2 : 36;                          ! Spare
   38 (1)	value uaf$c_main_spare_3 : 37;                          ! Spare
   39 (1)	value uaf$c_main_spare_4 : 38;                          ! Spare
   40 (1)	value uaf$c_main_spare_5 : 39;                          ! Spare
   41 (1)	value uaf$c_main_filter : 40;                           ! Simpletext - Entry filter value
   42 (1)	value uaf$c_main_username : 41;                         ! Simpletext - Current username value
   43 (1)	value uaf$c_main_spare_6 : 42;                          ! Spare

Motif Uil Compiler V1.1-000 	22-NOV-1993 11:29:56.26		 Page 2
Module: authorize 	 Version: X1.0
 
   44 (1)	value uaf$c_main_spare_7 : 43;                          ! Spare
   45 (1)	value uaf$c_main_spare_8 : 44;                          ! Spare
   46 (1)	value uaf$c_main_spare_9 : 45;                          ! Spare
   47 (1)	value uaf$c_main_spare_10 : 46;                         ! Spare
   48 (1)	value uaf$c_main_user_list : 47;                        ! List - Available authorization entries using filter
   49 (1)	value uaf$c_main_group_list : 48;                       ! List - Available group authorization entries
   50 (1)	value uaf$c_main_identifiers : 49;                      ! Pushbutton - Alter account identifiers
   51 (1)	value uaf$c_main_max_code : 50;                         ! Last entry + 1
   52 (1)	! Define the constants associated with the authorization entry window widgets.
   53 (1)	value uaf$c_entry_window_base : 60;
   54 (1)	value uaf$c_entry_ok_previous : 60;                     ! Pushbutton - Select previous entry and change current
   55 (1)	value uaf$c_entry_ok : 61;                              ! Pushbutton - Accept authorization entry changes
   56 (1)	value uaf$c_entry_ok_next : 62;                         ! Pushbutton - Select next entry and change current
   57 (1)	value uaf$c_entry_cancel : 63;                          ! Pushbutton - Abort authorization changes
   58 (1)	value uaf$c_entry_rename : 64;                          ! Pushbutton - Take new username and rename original entry
   59 (1)	value uaf$c_entry_copy : 65;                            ! Pushbutton - Take new username and copy original entry
   60 (1)	value uaf$c_entry_select_previous : 66;                 ! Pushbutton - Select previous entry and don't change current
   61 (1)	value uaf$c_entry_select : 67;                          ! Pushbutton - Select next entry and don't change current
   62 (1)	value uaf$c_entry_select_next : 68;                     ! Pushbutton - Select next entry and don't change current
   63 (1)	value uaf$c_entry_apply_template : 69;                  ! Pushbutton - Apply template changes to current
   64 (1)	value uaf$c_entry_spare_1 : 70;                         ! Spare
   65 (1)	value uaf$c_entry_spare_2 : 71;                         ! Spare
   66 (1)	value uaf$c_entry_spare_3 : 72;                         ! Spare
   67 (1)	value uaf$c_entry_spare_4 : 73;                         ! Spare
   68 (1)	value uaf$c_entry_spare_5 : 74;                         ! Spare
   69 (1)	value uaf$c_entry_username : 75;                        ! Simpletext - username
   70 (1)	value uaf$c_entry_owner : 76;                           ! Simpletext - account owner
   71 (1)	value uaf$c_entry_account : 77;                         ! Simpletext - account name
   72 (1)	value uaf$c_entry_uic : 78;                             ! Simpletext - UIC
   73 (1)	value uaf$c_entry_cli : 79;                             ! Simpletext - CLI name
   74 (1)	value uaf$c_entry_clitable : 80;                        ! Simpletext - CLITABLE name
   75 (1)	value uaf$c_entry_default : 81;                         ! Simpletext - default login device and directory
   76 (1)	value uaf$c_entry_lgicmd : 82;                          ! Simpletext - login command file
   77 (1)	value uaf$c_entry_maxjobs : 83;                         ! Simpletext - maximum number of jobs
   78 (1)	value uaf$c_entry_maxacctjobs : 84;                     ! Simpletext - maximum jobs for account
   79 (1)	value uaf$c_entry_maxdetach : 85;                       ! Simpletext - maximum detached jobs
   80 (1)	value uaf$c_entry_prclm : 86;                           ! Simpletext - process/subprocess limit
   81 (1)	value uaf$c_entry_prio : 87;                            ! Simpletext - process priority
   82 (1)	value uaf$c_entry_queprio : 88;                         ! Simpletext - queue priority
   83 (1)	value uaf$c_entry_cpu : 89;                             ! Simpletext - CPU time limit
   84 (1)	value uaf$c_entry_bytlm : 90;                           ! Simpletext - byte count limit
   85 (1)	value uaf$c_entry_fillm : 91;                           ! Simpletext - open file limit
   86 (1)	value uaf$c_entry_shrfillm : 92;                        ! Simpletext - shared file limit
   87 (1)	value uaf$c_entry_biolm : 93;                           ! Simpletext - buffered I/O limit
   88 (1)	value uaf$c_entry_diolm : 94;                           ! Simpletext - direct I/O limit
   89 (1)	value uaf$c_entry_wsdef : 95;                           ! Simpletext - working set default
   90 (1)	value uaf$c_entry_wsquo : 96;                           ! Simpletext - working set quota
   91 (1)	value uaf$c_entry_wsextent : 97;                        ! Simpletext - working set extent
   92 (1)	value uaf$c_entry_pgflquo : 98;                         ! Simpletext - page file quota
   93 (1)	value uaf$c_entry_astlm : 99;                           ! Simpletext - AST limit
   94 (1)	value uaf$c_entry_tqelm : 100;                          ! Simpletext - TQE limit
   95 (1)	value uaf$c_entry_enqlm : 101;                          ! Simpletext - ENQ limit
   96 (1)	value uaf$c_entry_jtquota : 102;                        ! Simpletext - job table quota
   97 (1)	value uaf$c_entry_expiration : 103;                     ! Simpletext - account expiration
   98 (1)	value uaf$c_entry_lastlogin_i : 104;                    ! Simpletext - last interactive login
   99 (1)	value uaf$c_entry_lastlogin_n : 105;                    ! Simpletext - last non-interactive login
  100 (1)	value uaf$c_entry_pwd_date : 106;                       ! Simpletext - primary password change date

Motif Uil Compiler V1.1-000 	22-NOV-1993 11:29:56.26		 Page 3
Module: authorize 	 Version: X1.0
 
  101 (1)	value uaf$c_entry_pwd_length : 107;                     ! Simpletext - password minimum length
  102 (1)	value uaf$c_entry_pwd_lifetime : 108;                   ! Simpletext - password lifetime
  103 (1)	value uaf$c_entry_pwd2_date : 109;                      ! Simpletext - secondary password change date
  104 (1)	value uaf$c_entry_pbytlm : 110;                         ! Simpletext - physical byte limit
  105 (1)	value uaf$c_entry_logfails : 111;                       ! Simpletext - login failure count
  106 (1)	value uaf$c_entry_login_flag_list : 112;                ! List - login flags
  107 (1)	value uaf$c_entry_auth_priv_list : 113;                 ! List - authorized privileges
  108 (1)	value uaf$c_entry_def_priv_list : 114;                  ! List - default privileges
  109 (1)	value uaf$c_entry_primeday_list : 115;                  ! List - primary days
  110 (1)	value uaf$c_entry_password : 116;                       ! Simpletext - primary password
  111 (1)	value uaf$c_entry_password2 : 117;                      ! Simpletext - Secondary password
  112 (1)	value uaf$c_entry_access_primary : 118;                 ! Pushbutton - Account primary access restrictions
  113 (1)	value uaf$c_entry_access_secondary : 119;               ! Pushbutton - Account secondary access restrictions
  114 (1)	value uaf$c_entry_spare_6 : 120;                        ! Spare
  115 (1)	value uaf$c_entry_spare_7 : 121;                        ! Spare
  116 (1)	value uaf$c_entry_spare_8 : 122;                        ! Spare
  117 (1)	value uaf$c_entry_spare_9 : 123;                        ! Spare
  118 (1)	value uaf$c_entry_spare_10 : 124;                       ! Spare
  119 (1)	value uaf$c_entry_max_code : 125;                       ! Last entry + 1
  120 (1)	! Define the constants associated with the authorization entry access
  121 (1)	! restriction window widgets.
  122 (1)	value uaf$c_entry_access_base : 550;
  123 (1)	value uaf$c_access_pri_ok : 550;                        ! Pushbutton - Accept primary access restriction changes
  124 (1)	value uaf$c_access_pri_cancel : 551;                    ! Pushbutton - Abort primary access restriction changes
  125 (1)	value uaf$c_access_spare_1 : 552;                       ! Spare
  126 (1)	value uaf$c_access_spare_2 : 553;                       ! Spare
  127 (1)	value uaf$c_access_spare_3 : 554;                       ! Spare
  128 (1)	value uaf$c_access_pri_local_list : 555;                ! List - primary local access restrictions
  129 (1)	value uaf$c_access_pri_batch_list : 556;                ! List - primary batch access restrictions
  130 (1)	value uaf$c_access_pri_dialup_list : 557;               ! List - primary dialup access restrictions
  131 (1)	value uaf$c_access_pri_remote_list : 558;               ! List - primary remote access restrictions
  132 (1)	value uaf$c_access_pri_network_list : 559;              ! List - primary network access restrictions
  133 (1)	value uaf$c_access_spare_4 : 560;                       ! Spare
  134 (1)	value uaf$c_access_spare_5 : 561;                       ! Spare
  135 (1)	value uaf$c_access_sec_ok : 562;                        ! Pushbutton - Accept secondary access restriction changes
  136 (1)	value uaf$c_access_sec_cancel : 563;                    ! Pushbutton - Abort secondary access restriction changes
  137 (1)	value uaf$c_access_spare_6 : 564;                       ! Spare
  138 (1)	value uaf$c_access_spare_7 : 565;                       ! Spare
  139 (1)	value uaf$c_access_spare_8 : 566;                       ! Spare
  140 (1)	value uaf$c_access_sec_local_list : 567;                ! List - secondary local access restrictions
  141 (1)	value uaf$c_access_sec_batch_list : 568;                ! List - secondary batch access restrictions
  142 (1)	value uaf$c_access_sec_dialup_list : 569;               ! List - secondary dialup access restrictions
  143 (1)	value uaf$c_access_sec_remote_list : 570;               ! List - secondary remote access restrictions
  144 (1)	value uaf$c_access_sec_network_list : 571;              ! List - secondary network access restrictions
  145 (1)	value uaf$c_access_spare_9 : 572;                       ! Spare
  146 (1)	value uaf$c_access_spare_10 : 573;                      ! Spare
  147 (1)	value uaf$c_access_max_code : 574;                      ! Last entry + 1
  148 (1)	! Define the constants associated with the authorization entry identifier
  149 (1)	! window widgets.
  150 (1)	value uaf$c_identifier_base : 650;
  151 (1)	value uaf$c_identifier_ok : 650;                        ! Pushbutton - Accept identifier changes
  152 (1)	value uaf$c_identifier_cancel : 651;                    ! Pushbutton - Abort identifier changes
  153 (1)	value uaf$c_identifier_grant : 652;                     ! Pushbutton - Grant identifier
  154 (1)	value uaf$c_identifier_modify : 653;                    ! Pushbutton - Modify identifier attributes
  155 (1)	value uaf$c_identifier_remove : 654;                    ! Pushbutton - Remove identifier
  156 (1)	value uaf$c_identifier_system : 655;                    ! Pushbutton - System identifiers
  157 (1)	value uaf$c_identifier_spare_2 : 656;                   ! Spare

Motif Uil Compiler V1.1-000 	22-NOV-1993 11:29:56.26		 Page 4
Module: authorize 	 Version: X1.0
 
  158 (1)	value uaf$c_identifier_spare_3 : 657;                   ! Spare
  159 (1)	value uaf$c_identifier_spare_4 : 658;                   ! Spare
  160 (1)	value uaf$c_identifier_spare_5 : 659;                   ! Spare
  161 (1)	value uaf$c_identifier_name : 660;                      ! Simpletext - Identifier name
  162 (1)	value uaf$c_identifier_list : 661;                      ! List - entry identifiers held
  163 (1)	value uaf$c_identifier_attrib_list : 662;               ! List - identifier attributes
  164 (1)	value uaf$c_identifier_spare_6 : 663;                   ! Spare
  165 (1)	value uaf$c_identifier_spare_7 : 664;                   ! Spare
  166 (1)	value uaf$c_identifier_spare_8 : 665;                   ! Spare
  167 (1)	value uaf$c_identifier_spare_9 : 666;                   ! Spare
  168 (1)	value uaf$c_identifier_spare_10 : 667;                  ! Spare
  169 (1)	value uaf$c_system_identifier_cancel : 668;             ! Pushbutton - remove system identifier list
  170 (1)	value uaf$c_system_identifier_spare_1 : 669;            ! Spare
  171 (1)	value uaf$c_system_identifier_spare_2 : 670;            ! Spare
  172 (1)	value uaf$c_system_identifier_spare_3 : 671;            ! Spare
  173 (1)	value uaf$c_system_identifier_list : 672;               ! List - all identifiers defined
  174 (1)	value uaf$c_system_identifier_spare_4 : 673;            ! Spare
  175 (1)	value uaf$c_system_identifier_spare_5 : 674;            ! Spare
  176 (1)	value uaf$c_identifier_max_code : 675;                  ! Last entry + 1
  177 (1)	value uaf$c_max_widget_code : 675;
   15 (0)	
   16 (0)	! Define the offsets and (percentage) positions used for attachment.
   17 (0)	
   18 (0)		uaf$c_bottom_offset		: 5;			! Basic offset to bottom of the window
   19 (0)		uaf$c_labval_widget_offset	: 2;			! Offset between label and value widgets
   20 (0)		uaf$c_left_offset		: 5;			! Basic offset to left side of the window
   21 (0)		uaf$c_right_offset		: 5;			! Basic offset to right of the window
   22 (0)		uaf$c_top_offset		: 5;			! Basic offset to top of the window
   23 (0)		uaf$c_topbot_widget_offset	: 2;			! Offset (top/bottom) between two widgets
   24 (0)	
   25 (0)		uaf$c_2col_left			: 0;			! (Percentage) offset to left hand column of 2 columns
   26 (0)		uaf$c_2col_left_with_lab	: 20;			! (Percentage) offset to left hand (labeled) column of 2 columns
   27 (0)		uaf$c_2col_right		: 50;			! (Percentage) offset to right hand column of 2 columns
   28 (0)		uaf$c_2col_right_with_lab	: 70;			! (Percentage) offset to right hand (labeled) column of 2 columns
   29 (0)		uaf$c_4col_column_1		: 0;			! (Percentage) offset to first column of 4 columns
   30 (0)		uaf$c_4col_column_1_with_lab	: 12;			! (Percentage) offset to first (labeled) column of 4 columns
   31 (0)		uaf$c_4col_column_2		: 25;			! (Percentage) offset to second column of 4 columns
   32 (0)		uaf$c_4col_column_2_with_lab	: 36;			! (Percentage) offset to second (labeled) column of 4 columns
   33 (0)		uaf$c_4col_column_3		: 50;			! (Percentage) offset to third column of 4 columns
   34 (0)		uaf$c_4col_column_3_with_lab	: 60;			! (Percentage) offset to third (labeled) column of 4 columns
   35 (0)		uaf$c_4col_column_4		: 75;			! (Percentage) offset to fourth column of 4 columns
   36 (0)		uaf$c_4col_column_4_with_lab	: 84;			! (Percentage) offset to fourth (labeled) column of 4 columns
   37 (0)		uaf$c_5col_column_1		: 0;			! (Percentage) offset to first column of 5 columns
   38 (0)		uaf$c_5col_column_2		: 20;			! (Percentage) offset to second column of 5 columns
   39 (0)		uaf$c_5col_column_3		: 40;			! (Percentage) offset to third column of 5 columns
   40 (0)		uaf$c_5col_column_4		: 60;			! (Percentage) offset to fourth column of 5 columns
   41 (0)		uaf$c_5col_column_5		: 80;			! (Percentage) offset to fifth column of 5 columns
   42 (0)		uaf$c_3col_left			: 0;			! (Percentage) offset to left column of 3 columns
   43 (0)		uaf$c_3col_middle		: 33;			! (Percentage) offset to middle column of 3 columns
   44 (0)		uaf$c_3col_right		: 66;			! (Percentage) offset to right column of 3 columns
   45 (0)	
   46 (0)	! Define some (very) common field widths.
   47 (0)	
   48 (0)		uaf$c_username_cols		: 12;			! Size (in characters) of username field

Motif Uil Compiler V1.1-000 	22-NOV-1993 11:29:56.26		 Page 5
Module: authorize 	 Version: X1.0
 
   49 (0)	 
   50 (0)	include file 'sys$disk:[]uaf_main_window';
    1 (2)	!module	authorize_main_window
    2 (2)	!	version		= 'X1.0'
    3 (2)	!	names		= case_insensitive
    4 (2)	
    5 (2)	! Constants used to define sizes of some of the various fields in the main
    6 (2)	! window.
    7 (2)	
    8 (2)	value
    9 (2)		uaf$c_filter_cols	: 12;			! Size (in characters) of the filter field
   10 (2)	
   11 (2)	! Strings associated with the various menus and menu entries.  These determine
   12 (2)	! the text displayed.
   13 (2)	
   14 (2)	value
   15 (2)		uaf$t_authorize					: compound_string	("Authorization Maintanance Utility");
   16 (2)		uaf$t_file					: compound_string	("File");
   17 (2)		uaf$t_ctl_open					: compound_string	("Open");
   18 (2)		uaf$t_ctl_refresh				: compound_string	("Refresh");
   19 (2)		uaf$t_ctl_quit					: compound_string	("Quit");
   20 (2)		uaf$t_commands					: compound_string	("Commands");
   21 (2)		uaf$t_cmd_list					: compound_string	("List");
   22 (2)		uaf$t_cmd_print					: compound_string	("Print");
   23 (2)		uaf$t_cmd_modify_template			: compound_string	("Modify template");
   24 (2)		uaf$t_help					: compound_string	("Help");
   25 (2)		uaf$t_hlp_overview				: compound_string	("Overview");
   26 (2)		uaf$t_hlp_about					: compound_string	("About");
   27 (2)	
   28 (2)	! Various main window text strings.
   29 (2)	
   30 (2)		uaf$t_main_filter				: compound_string	("Filter");
   31 (2)		uaf$t_main_select				: compound_string	("Select");
   32 (2)		uaf$t_main_username				: compound_string	("Username");
   33 (2)		uaf$t_selected_users				: compound_string	("Selected Usernames");
   34 (2)		uaf$t_group_default_users			: compound_string	("Group Default Usernames");
   35 (2)	
   36 (2)		uaf$t_main_create				: compound_string	("Create");
   37 (2)		uaf$t_main_modify				: compound_string	("Modify");
   38 (2)		uaf$t_main_delete				: compound_string	("Delete");
   39 (2)		uaf$t_main_identifiers				: compound_string	("Identifiers");
   40 (2)		uaf$t_main_reset				: compound_string	("Reset");

Motif Uil Compiler V1.1-000 	22-NOV-1993 11:29:56.26		 Page 6
Module: authorize 	 Version: X1.0
 
   41 (2)	 
   42 (2)	! Define the main window object and menu bar.
   43 (2)	
   44 (2)	object	mainwindow		: XmMainWindow
   45 (2)			{controls	{XmMenuBar	MenuBar;
   46 (2)					 XmForm		get_entry;
   47 (2)					 };
   48 (2)			 };
   49 (2)	object	MenuBar			: XmMenuBar
   50 (2)			{arguments	{XmNorientation		= XmHORIZONTAL;
   51 (2)					 XmNspacing		= 15;
   52 (2)					 XmNmenuHelpWidget	= XmCascadeButton help_menu_entry;
   53 (2)					 };
   54 (2)			 controls	{XmCascadeButton	file_menu_entry;
   55 (2)					 XmCascadeButton	commands_menu_entry;
   56 (2)					 };
   57 (2)			 };

Motif Uil Compiler V1.1-000 	22-NOV-1993 11:29:56.26		 Page 7
Module: authorize 	 Version: X1.0
 
   58 (2)	 
   59 (2)	! Define the layout of the main window work area.
   60 (2)	
   61 (2)	object	get_entry		: XmForm
   62 (2)			{controls	{XmLabel		main_filter_label;
   63 (2)					 XmText			main_filter_value;
   64 (2)					 XmPushButton		select_usernames;
   65 (2)					 XmLabel		main_username_label;
   66 (2)					 XmText			main_username_value;
   67 (2)					 XmLabel		user_list_label;
   68 (2)					 XmScrolledWindow	user_name_window;
   69 (2)					 XmLabel		group_list_label;
   70 (2)					 XmScrolledWindow	group_name_window;
   71 (2)					 XmPushButton		main_create_entry;
   72 (2)					 XmPushButton		main_modify_entry;
   73 (2)					 XmPushButton		main_delete_entry;
   74 (2)					 XmPushButton		main_identifiers;
   75 (2)					 XmPushButton		main_reset_entry;
   76 (2)					 }; };

Motif Uil Compiler V1.1-000 	22-NOV-1993 11:29:56.26		 Page 8
Module: authorize 	 Version: X1.0
 
   77 (2)	 
   78 (2)	! Define the objects needed to obtain the username filter string.
   79 (2)	
   80 (2)	object	main_filter_label	: XmLabel
   81 (2)			{arguments	{XmNlabelString		= uaf$t_main_filter;
   82 (2)					 XmNtopAttachment	= XmATTACH_FORM;
   83 (2)					 XmNtopOffset		= uaf$c_top_offset;
   84 (2)					 XmNrightAttachment	= XmATTACH_WIDGET;
   85 (2)					 XmNrightOffset		= uaf$c_labval_widget_offset;
   86 (2)					 XmNrightWidget		= XmText main_filter_value;
   87 (2)					 }; };
   88 (2)	object	main_filter_value	: XmText
   89 (2)			{arguments	{XmNmaxLength		= uaf$s_username;
   90 (2)					 XmNtopAttachment	= XmATTACH_FORM;
   91 (2)					 XmNtopOffset		= uaf$c_top_offset;
   92 (2)					 XmNrightAttachment	= XmATTACH_WIDGET;
   93 (2)					 XmNrightOffset		= uaf$c_right_offset;
   94 (2)					 XmNrightWidget		= XmPushButton select_usernames;
   95 (2)					 XmNleftAttachment	= XmATTACH_POSITION;
   96 (2)					 XmNleftPosition	= uaf$c_2col_left_with_lab;
   97 (2)					 XmNcolumns		= uaf$c_filter_cols;
   98 (2)					 XmNrows		= 1;
   99 (2)					 XmNmarginHeight	= 0;
  100 (2)					 XmNresizeHeight	= false;
  101 (2)					 };
  102 (2)			 callbacks	{MrmNcreateCallback	= procedure create_proc (uaf$c_main_filter); };
  103 (2)			 };

Motif Uil Compiler V1.1-000 	22-NOV-1993 11:29:56.26		 Page 9
Module: authorize 	 Version: X1.0
 
  104 (2)	 
  105 (2)	! This push button is used to apply the filter string to obtain a new list of
  106 (2)	! user names.
  107 (2)	
  108 (2)	object	select_usernames	: XmPushButton
  109 (2)			{arguments	{XmNlabelString		= uaf$t_main_select;
  110 (2)					 XmNtopAttachment	= XmATTACH_FORM;
  111 (2)					 XmNtopOffset		= uaf$c_top_offset;
  112 (2)					 XmNleftAttachment	= XmATTACH_POSITION;
  113 (2)					 XmNleftPosition	= uaf$c_2col_right;
  114 (2)					 };
  115 (2)			 callbacks	{XmNactivateCallback	= procedure activate_proc (uaf$c_main_select); };
  116 (2)			 };
  117 (2)	
  118 (2)	! Define the objects needed to obtain the username string.
  119 (2)	
  120 (2)	object	main_username_label	: XmLabel
  121 (2)			{arguments	{XmNlabelString		= uaf$t_main_username;
  122 (2)					 XmNtopAttachment	= XmATTACH_WIDGET;
  123 (2)					 XmNtopOffset		= uaf$c_top_offset;
  124 (2)					 XmNtopWidget		= XmText main_filter_value;
  125 (2)					 XmNrightAttachment	= XmATTACH_WIDGET;
  126 (2)					 XmNrightOffset		= uaf$c_labval_widget_offset;
  127 (2)					 XmNrightWidget		= XmText main_username_value;
  128 (2)					 }; };
  129 (2)	object	main_username_value	: XmText
  130 (2)			{arguments	{XmNmaxLength		= uaf$s_username;
  131 (2)					 XmNtopAttachment	= XmATTACH_WIDGET;
  132 (2)					 XmNtopOffset		= uaf$c_top_offset;
  133 (2)					 XmNtopWidget		= XmText main_filter_value;
  134 (2)					 XmNrightAttachment	= XmATTACH_WIDGET;
  135 (2)					 XmNrightOffset		= uaf$c_right_offset;
  136 (2)					 XmNrightWidget		= XmPushButton select_usernames;
  137 (2)					 XmNleftAttachment	= XmATTACH_POSITION;
  138 (2)					 XmNleftPosition	= uaf$c_2col_left_with_lab;
  139 (2)					 XmNcolumns		= uaf$c_username_cols;
  140 (2)					 XmNrows		= 1;
  141 (2)					 XmNmarginHeight	= 0;
  142 (2)					 XmNresizeHeight	= false;
  143 (2)					 };
  144 (2)			 callbacks	{MrmNcreateCallback	= procedure create_proc (uaf$c_main_username); };
  145 (2)			 };

Motif Uil Compiler V1.1-000 	22-NOV-1993 11:29:56.26		 Page 10
Module: authorize 	 Version: X1.0
 
  146 (2)	 
  147 (2)	! Define the objects for the list of selected usernames.
  148 (2)	
  149 (2)	object	user_list_label		: XmLabel
  150 (2)			{arguments	{XmNlabelString		= uaf$t_selected_users;
  151 (2)					 XmNtopAttachment	= XmATTACH_WIDGET;
  152 (2)					 XmNtopOffset		= uaf$c_top_offset;
  153 (2)					 XmNtopWidget		= XmLabel main_username_label;
  154 (2)					 XmNleftAttachment	= XmATTACH_FORM;
  155 (2)					 XmNleftOffset		= uaf$c_left_offset;
  156 (2)					 }; };
  157 (2)	object	user_name_window	: XmScrolledWindow
  158 (2)			{arguments	{XmNtopAttachment	= XmATTACH_WIDGET;
  159 (2)					 XmNtopOffset		= uaf$c_top_offset;
  160 (2)					 XmNtopWidget		= XmLabel user_list_label;
  161 (2)					 XmNbottomAttachment	= XmATTACH_WIDGET;
  162 (2)					 XmNbottomOffset	= uaf$c_bottom_offset;
  163 (2)					 XmNbottomWidget	= XmPushButton main_create_entry;
  164 (2)					 XmNrightAttachment	= XmATTACH_WIDGET;
  165 (2)					 XmNrightOffset		= uaf$c_right_offset;
  166 (2)					 XmNrightWidget		= XmScrolledWindow group_name_window;
  167 (2)					 XmNleftAttachment	= XmATTACH_POSITION;
  168 (2)					 XmNleftOffset		= uaf$c_2col_left;
  169 (2)					 };
  170 (2)			 controls	{XmList		user_name_list; };
  171 (2)			 };
  172 (2)	object	user_name_list		: XmList
  173 (2)			{arguments	{XmNvisibleItemCount	= 10;
  174 (2)					 XmNautomaticSelection	= false;
  175 (2)					 XmNselectionPolicy	= XmSINGLE_SELECT;
  176 (2)					 };
  177 (2)			 callbacks	{MrmNcreateCallback		= procedure create_proc (uaf$c_main_user_list);
  178 (2)					 XmNsingleSelectionCallback	= procedure list_proc (uaf$c_main_user_list);
  179 (2)					 XmNdefaultActionCallback	= procedure list_proc (uaf$c_main_user_list);
  180 (2)					 };
  181 (2)			 };

Motif Uil Compiler V1.1-000 	22-NOV-1993 11:29:56.26		 Page 11
Module: authorize 	 Version: X1.0
 
  182 (2)	 
  183 (2)	! Define the objects for the list of default groups.
  184 (2)	
  185 (2)	object	group_list_label	: XmLabel
  186 (2)			{arguments	{XmNlabelString		= uaf$t_group_default_users;
  187 (2)					 XmNtopAttachment	= XmATTACH_WIDGET;
  188 (2)					 XmNtopOffset		= uaf$c_top_offset;
  189 (2)					 XmNtopWidget		= XmLabel main_username_label;
  190 (2)					 XmNleftAttachment	= XmATTACH_POSITION;
  191 (2)					 XmNleftPosition	= uaf$c_2col_right;
  192 (2)					 }; };
  193 (2)	object	group_name_window	: XmScrolledWindow
  194 (2)			{arguments	{XmNtopAttachment	= XmATTACH_WIDGET;
  195 (2)					 XmNtopOffset		= uaf$c_top_offset;
  196 (2)					 XmNtopWidget		= XmLabel group_list_label;
  197 (2)					 XmNbottomAttachment	= XmATTACH_WIDGET;
  198 (2)					 XmNbottomOffset	= uaf$c_bottom_offset;
  199 (2)					 XmNbottomWidget	= XmPushButton main_create_entry;
  200 (2)					 XmNrightAttachment	= XmATTACH_FORM;
  201 (2)					 XmNrightOffset		= uaf$c_right_offset;
  202 (2)					 XmNleftAttachment	= XmATTACH_POSITION;
  203 (2)					 XmNleftPosition	= uaf$c_2col_right;
  204 (2)					 };
  205 (2)			 controls	{XmList		group_name_list; };
  206 (2)			 };
  207 (2)	object	group_name_list		: XmList
  208 (2)			{arguments	{XmNvisibleItemCount	= 10;
  209 (2)					 XmNautomaticSelection	= false;
  210 (2)					 XmNselectionPolicy	= XmSINGLE_SELECT;
  211 (2)					 };
  212 (2)			 callbacks	{MrmNcreateCallback		= procedure create_proc (uaf$c_main_group_list);
  213 (2)					 XmNsingleSelectionCallback	= procedure list_proc (uaf$c_main_group_list);
  214 (2)					 XmNdefaultActionCallback	= procedure list_proc (uaf$c_main_group_list);
  215 (2)					 };
  216 (2)			 };

Motif Uil Compiler V1.1-000 	22-NOV-1993 11:29:56.26		 Page 12
Module: authorize 	 Version: X1.0
 
  217 (2)	 
  218 (2)	! Define the main window push button objects.
  219 (2)	
  220 (2)	object	main_create_entry	: XmPushButton
  221 (2)			{arguments	{XmNlabelString		= uaf$t_main_create;
  222 (2)					 XmNbottomAttachment	= XmATTACH_FORM;
  223 (2)					 XmNbottomOffset	= uaf$c_bottom_offset;
  224 (2)					 XmNleftAttachment	= XmATTACH_FORM;
  225 (2)					 XmNleftOffset		= uaf$c_left_offset;
  226 (2)					 };
  227 (2)			 callbacks	{XmNactivateCallback	= procedure activate_proc (uaf$c_main_create); };
  228 (2)			 };
  229 (2)	object	main_modify_entry	: XmPushButton
  230 (2)			{arguments	{XmNlabelString		= uaf$t_main_modify;
  231 (2)					 XmNbottomAttachment	= XmATTACH_FORM;
  232 (2)					 XmNbottomOffset	= uaf$c_bottom_offset;
  233 (2)					 XmNleftAttachment	= XmATTACH_WIDGET;
  234 (2)					 XmNleftOffset		= uaf$c_left_offset;
  235 (2)					 XmNleftWidget		= XmPushButton main_create_entry;
  236 (2)					 };
  237 (2)			 callbacks	{MrmNcreateCallback	= procedure create_proc (uaf$c_main_modify);
  238 (2)					 XmNactivateCallback	= procedure activate_proc (uaf$c_main_modify); };
  239 (2)			 };
  240 (2)	object	main_delete_entry	: XmPushButton
  241 (2)			{arguments	{XmNlabelString		= uaf$t_main_delete;
  242 (2)					 XmNbottomAttachment	= XmATTACH_FORM;
  243 (2)					 XmNbottomOffset	= uaf$c_bottom_offset;
  244 (2)					 XmNleftAttachment	= XmATTACH_WIDGET;
  245 (2)					 XmNleftOffset		= uaf$c_left_offset;
  246 (2)					 XmNleftWidget		= XmPushButton main_modify_entry;
  247 (2)					 };
  248 (2)			 callbacks	{XmNactivateCallback	= procedure activate_proc (uaf$c_main_delete); };
  249 (2)			 };
  250 (2)	object	main_identifiers	: XmPushButton
  251 (2)			{arguments	{XmNlabelString		= uaf$t_main_identifiers;
  252 (2)					 XmNbottomAttachment	= XmATTACH_FORM;
  253 (2)					 XmNbottomOffset	= uaf$c_bottom_offset;
  254 (2)					 XmNleftAttachment	= XmATTACH_WIDGET;
  255 (2)					 XmNleftOffset		= uaf$c_left_offset;
  256 (2)					 XmNleftWidget		= XmPushButton main_delete_entry;
  257 (2)					 };
  258 (2)			 callbacks	{XmNactivateCallback	= procedure activate_proc (uaf$c_main_identifiers); };
  259 (2)			 };
  260 (2)	object	main_reset_entry	: XmPushButton
  261 (2)			{arguments	{XmNlabelString		= uaf$t_main_reset;
  262 (2)					 XmNbottomAttachment	= XmATTACH_FORM;
  263 (2)					 XmNbottomOffset	= uaf$c_bottom_offset;
  264 (2)					 XmNrightAttachment	= XmATTACH_FORM;
  265 (2)					 XmNrightOffset		= uaf$c_right_offset;
  266 (2)					 };
  267 (2)			 callbacks	{XmNactivateCallback	= procedure activate_proc (uaf$c_main_reset); };
  268 (2)			 };

Motif Uil Compiler V1.1-000 	22-NOV-1993 11:29:56.26		 Page 13
Module: authorize 	 Version: X1.0
 
  269 (2)	 
  270 (2)	! Define the objects which exist within the menu bar.
  271 (2)	
  272 (2)	object	file_menu_entry		: XmCascadeButton
  273 (2)			{arguments	{XmNlabelString	= uaf$t_file; };
  274 (2)			 controls	{XmPulldownMenu	file_menu; };
  275 (2)			 };
  276 (2)	object	file_menu		: XmPulldownMenu
  277 (2)			{controls	{XmSeparator {};
  278 (2)					 XmPushButton	open_button;
  279 (2)					 XmPushButton	refresh_button;
  280 (2)					 XmPushButton	quit_button;
  281 (2)					 };
  282 (2)			 };
  283 (2)	
  284 (2)	object	commands_menu_entry	: XmCascadeButton
  285 (2)			{arguments	{XmNlabelString	= uaf$t_commands; };
  286 (2)			 controls	{XmPulldownMenu	commands_menu; };
  287 (2)			 };
  288 (2)	object	commands_menu		: XmPulldownMenu
  289 (2)			{controls	{XmPushButton	list_button;
  290 (2)					 XmPushButton	print_button;
  291 (2)					 XmPushButton	modify_template_button;
  292 (2)					 };
  293 (2)			 };
  294 (2)	
  295 (2)	object	help_menu_entry		: XmCascadeButton
  296 (2)			{arguments	{XmNlabelString	= uaf$t_help; };
  297 (2)			 controls	{XmPulldownMenu	help_menu; };
  298 (2)			 };
  299 (2)	object	help_menu		: XmPulldownMenu
  300 (2)			{controls	{XmPushButton	about_button;
  301 (2)					 XmPushButton	overview_button;
  302 (2)					 };
  303 (2)			 };

Motif Uil Compiler V1.1-000 	22-NOV-1993 11:29:56.26		 Page 14
Module: authorize 	 Version: X1.0
 
  304 (2)	 
  305 (2)	! Define the file menu objects.
  306 (2)	
  307 (2)	object	open_button		: XmPushButton
  308 (2)			{arguments	{XmNlabelString		= uaf$t_ctl_open; };
  309 (2)			 callbacks	{MrmNcreateCallback	= procedure create_proc (uaf$c_ctl_open);
  310 (2)					 XmNactivateCallback	= procedure activate_proc (uaf$c_ctl_open); };
  311 (2)			 };
  312 (2)	object	refresh_button		: XmPushButton
  313 (2)			{arguments	{XmNlabelString		= uaf$t_ctl_refresh; };
  314 (2)			 callbacks	{XmNactivateCallback	= procedure activate_proc (uaf$c_ctl_refresh); };
  315 (2)			 };
  316 (2)	object	quit_button		: XmPushButton
  317 (2)			{arguments	{XmNlabelString		= uaf$t_ctl_quit; };
  318 (2)			 callbacks	{XmNactivateCallback	= procedure activate_proc (uaf$c_ctl_quit); };
  319 (2)			 };
  320 (2)	
  321 (2)	! Define the commands menu objects.
  322 (2)	
  323 (2)	object	list_button		: XmPushButton
  324 (2)			{arguments	{XmNlabelString		= uaf$t_cmd_list;
  325 (2)					 XmNsensitive		= false;
  326 (2)					 };
  327 (2)			 callbacks	{XmNactivateCallback	= procedure activate_proc (uaf$c_cmd_list); };
  328 (2)			 };
  329 (2)	object	print_button		: XmPushButton
  330 (2)			{arguments	{XmNlabelString		= uaf$t_cmd_print;
  331 (2)					 XmNsensitive		= false;
  332 (2)					 };
  333 (2)			 callbacks	{XmNactivateCallback	= procedure activate_proc (uaf$c_cmd_print); };
  334 (2)			 };
  335 (2)	object	modify_template_button	: XmPushButton
  336 (2)			{arguments	{XmNlabelString		= uaf$t_cmd_modify_template; };
  337 (2)			 callbacks	{XmNactivateCallback	= procedure activate_proc (uaf$c_cmd_modify_template); };
  338 (2)			 };
  339 (2)	
  340 (2)	! Define the help menu objects.
  341 (2)	
  342 (2)	object	about_button		: XmPushButton
  343 (2)			{arguments	{XmNlabelString		= uaf$t_hlp_about; };
  344 (2)			 callbacks	{XmNactivateCallback	= procedure activate_proc (uaf$c_hlp_about); };
  345 (2)			 };
  346 (2)	object	overview_button		: XmPushButton
  347 (2)			{arguments	{XmNlabelString		= uaf$t_hlp_overview; };
  348 (2)			 callbacks	{XmNactivateCallback	= procedure activate_proc (uaf$c_hlp_overview); };
  349 (2)			 };

Motif Uil Compiler V1.1-000 	22-NOV-1993 11:29:56.26		 Page 15
Module: authorize 	 Version: X1.0
 
  350 (2)	 
  351 (2)	! Define the file selection box object.
  352 (2)	
  353 (2)	object	file_selection_window	: XmFileSelectionDialog
  354 (2)			{arguments	{XmNdialogStyle		= XmDIALOG_FULL_APPLICATION_MODAL;
  355 (2)					 XmNdirMask		= '*SYSUAF*.DAT';
  356 (2)					 XmNdefaultPosition	= false;
  357 (2)					 };
  358 (2)			 callbacks	{XmNokCallback		= procedure activate_proc (uaf$c_file_open_file);
  359 (2)					 XmNapplyCallback	= procedure activate_proc (uaf$c_file_select);
  360 (2)					 XmNcancelCallback	= procedure activate_proc (uaf$c_file_cancel);
  361 (2)					 };
  362 (2)			 };
   51 (0)	include file 'sys$disk:[]uaf_id_window';
    1 (3)	!module	authorize_id_window
    2 (3)	!	version		= 'X1.0'
    3 (3)	!	names		= case_insensitive
    4 (3)	
    5 (3)	! Constants used to define reflect the maximum string size for various
    6 (3)	! fields in the identifier record.
    7 (3)	
    8 (3)	value
    9 (3)		kgb$s_name			: 32;
   10 (3)	
   11 (3)	! Constants used to define sizes of some of the various fields in the entry
   12 (3)	! window.
   13 (3)	
   14 (3)	value
   15 (3)		uaf$c_identifier_name_cols	: 12;			! Size (in characters) of identifier name field
   16 (3)	
   17 (3)	! Strings for the identifier dialog box.
   18 (3)	
   19 (3)	value
   20 (3)		uaf$t_identifier_title		: compound_string	("Authorization entry identifiers");
   21 (3)		uaf$t_identifier_name		: compound_string	("Identifier:");
   22 (3)		uaf$t_identifiers_held		: compound_string	("Identifiers held:");
   23 (3)		uaf$t_identifier_attrib		: compound_string	("Identifier attributes");
   24 (3)		uaf$t_identifier_ok		: compound_string	("OK");
   25 (3)		uaf$t_identifier_cancel		: compound_string	("Cancel");
   26 (3)		uaf$t_identifier_grant		: compound_string	("Grant");
   27 (3)		uaf$t_identifier_modify		: compound_string	("Modify Attributes");
   28 (3)		uaf$t_identifier_remove		: compound_string	("Remove");
   29 (3)	
   30 (3)	! Strings for the identifier popup menu.
   31 (3)	
   32 (3)		uaf$t_system_identifiers	: compound_string	("System identifiers");
   33 (3)	
   34 (3)	! Strings for the system identifier dialog box.
   35 (3)	
   36 (3)		uaf$t_system_identifier_title	: compound_string	("System identifiers");
   37 (3)		uaf$t_system_identifier_ok	: compound_string	("OK");
   38 (3)	
   39 (3)	! Strings for the various identifier flags.  NOTE!! The order of this list is
   40 (3)	! important.  The position in the list corresponds to the bit in the identifier
   41 (3)	! flags field.
   42 (3)	
   43 (3)		uaf$t_identifier_attrib_list	: string_table	('RESOURCE',		! kgb$v_resource

Motif Uil Compiler V1.1-000 	22-NOV-1993 11:29:56.26		 Page 16
Module: authorize 	 Version: X1.0
 
   44 (3)								 'DYNAMIC',		! kgb$v_dynamic
   45 (3)								 'NOACCESS',		! kgb$v_noaccess
   46 (3)								 'SUBSYSTEM',		! kgb$v_subsystem
   47 (3)								 'IMPERSONATE'		! kgb$v_impersonate
   48 (3)	
   49 (3)	! The following two attributes cannot be enabled for a held identifier.
   50 (3)	! Therefore, they should not be in the list.
   51 (3)	
   52 (3)	!							 'HOLDER_HIDDEN',	! kgb$v_holder_hidden
   53 (3)	!							 'NAME_HIDDEN'		! kgb$v_name_hidden
   54 (3)								 );
   55 (3)	

Motif Uil Compiler V1.1-000 	22-NOV-1993 11:29:56.26		 Page 17
Module: authorize 	 Version: X1.0
 
   56 (3)	 
   57 (3)	! Define the identifier box object.
   58 (3)	
   59 (3)	
   60 (3)	object	identifier_window		: XmFormDialog
   61 (3)			{arguments	{XmNdialogTitle		= uaf$t_identifier_title;
   62 (3)					 XmNcancelButton	= identifier_cancel_button;
   63 (3)					 XmNdefaultButton	= identifier_ok_button;
   64 (3)					 XmNunitType		= XmPIXELS;
   65 (3)					 XmNautoUnmanage	= false;
   66 (3)					 XmNdefaultPosition	= false;
   67 (3)					 };
   68 (3)			 controls	{XmLabel		identifier_name_label;
   69 (3)					 XmText			identifier_name_value;
   70 (3)	
   71 (3)					 XmLabel		identifier_attrib_label;
   72 (3)					 XmScrolledWindow	identifier_attrib_window;
   73 (3)	
   74 (3)					 XmLabel		identifier_held_label;
   75 (3)					 XmScrolledWindow	identifier_held_window;
   76 (3)	
   77 (3)					 XmPushButton		identifier_grant_button;
   78 (3)					 XmPushButton		identifier_modify_button;
   79 (3)					 XmPushButton		identifier_remove_button;
   80 (3)	
   81 (3)					 XmPushButton		identifier_ok_button;
   82 (3)					 XmPushButton		identifier_cancel_button;
   83 (3)					 };
   84 (3)			};
   85 (3)	
   86 (3)	object	identifier_name_label	: XmLabel
   87 (3)			{arguments	{XmNlabelString		= uaf$t_identifier_name;
   88 (3)					 XmNtopAttachment	= XmATTACH_FORM;
   89 (3)					 XmNtopOffset		= uaf$c_top_offset;
   90 (3)					 XmNrightAttachment	= XmATTACH_WIDGET;
   91 (3)					 XmNrightOffset		= uaf$c_labval_widget_offset;
   92 (3)					 XmNrightWidget		= XmText identifier_name_value;
   93 (3)					 }; };
   94 (3)	object	identifier_name_value	: XmText
   95 (3)			{arguments	{XmNmaxLength		= kgb$s_name;
   96 (3)					 XmNtopAttachment	= XmATTACH_FORM;
   97 (3)					 XmNtopOffset		= uaf$c_top_offset;
   98 (3)					 XmNleftAttachment	= XmATTACH_POSITION;
   99 (3)					 XmNleftPosition	= uaf$c_2col_left_with_lab;
  100 (3)					 XmNcolumns		= uaf$c_identifier_name_cols;
  101 (3)					 XmNmarginHeight	= 0;
  102 (3)					 };
  103 (3)			 callbacks	{MrmNcreateCallback	= procedure create_proc (uaf$c_identifier_name); };
  104 (3)			 };
  105 (3)	
  106 (3)	object	identifier_held_label	: XmLabel
  107 (3)			{arguments	{XmNlabelString		= uaf$t_identifiers_held;
  108 (3)					 XmNtopAttachment	= XmATTACH_WIDGET;
  109 (3)					 XmNtopOffset		= uaf$c_top_offset;
  110 (3)					 XmNtopWidget		= XmLabel identifier_name_label;
  111 (3)					 XmNleftAttachment	= XmATTACH_POSITION;
  112 (3)					 XmNleftPosition	= uaf$c_2col_left;

Motif Uil Compiler V1.1-000 	22-NOV-1993 11:29:56.26		 Page 18
Module: authorize 	 Version: X1.0
 
  113 (3)					 XmNleftOffset		= uaf$c_left_offset;
  114 (3)					 }; };
  115 (3)	object	identifier_held_window	: XmScrolledWindow
  116 (3)			{arguments	{XmNtopAttachment	= XmATTACH_WIDGET;
  117 (3)					 XmNtopOffset		= uaf$c_topbot_widget_offset;
  118 (3)					 XmNtopWidget		= XmLabel identifier_held_label;
  119 (3)					 XmNbottomAttachment	= XmATTACH_WIDGET;
  120 (3)					 XmNbottomOffset	= uaf$c_bottom_offset;
  121 (3)					 XmNbottomWidget	= XmPushButton identifier_ok_button;
  122 (3)					 XmNleftAttachment	= XmATTACH_POSITION;
  123 (3)					 XmNleftPosition	= uaf$c_2col_left;
  124 (3)					 XmNleftOffset		= uaf$c_left_offset;
  125 (3)					 XmNrightAttachment	= XmATTACH_POSITION;
  126 (3)					 XmNrightPosition	= uaf$c_2col_right;
  127 (3)					 XmNrightOffset		= uaf$c_right_offset;
  128 (3)					 XmNscrollingPolicy	= XmCONSTANT;
  129 (3)					 XmNscrollBarDisplayPolicy	= XmSTATIC;
  130 (3)					 XmNvisualPolicy	= XmVARIABLE;
  131 (3)					 };
  132 (3)			 controls	{XmList			identifier_list; };
  133 (3)			 };
  134 (3)	object	identifier_list		: XmList
  135 (3)			{arguments	{XmNvisibleItemCount	= 20;
  136 (3)					 XmNautomaticSelection	= false;
  137 (3)					 XmNselectionPolicy	= XmSINGLE_SELECT;
  138 (3)					 };
  139 (3)			 callbacks	{MrmNcreateCallback		= procedure create_proc (uaf$c_identifier_list);
  140 (3)					 XmNsingleSelectionCallback	= procedure list_proc (uaf$c_identifier_list); };
  141 (3)			 };
  142 (3)	
  143 (3)	object	identifier_attrib_label	: XmLabel
  144 (3)			{arguments	{XmNlabelString		= uaf$t_identifier_attrib;
  145 (3)					 XmNtopAttachment	= XmATTACH_WIDGET;
  146 (3)					 XmNtopOffset		= uaf$c_top_offset;
  147 (3)					 XmNtopWidget		= XmLabel identifier_name_label;
  148 (3)					 XmNleftAttachment	= XmATTACH_POSITION;
  149 (3)					 XmNleftPosition	= uaf$c_2col_right;
  150 (3)					 XmNleftOffset		= uaf$c_left_offset;
  151 (3)					 }; };
  152 (3)	object	identifier_attrib_window	: XmScrolledWindow
  153 (3)			{arguments	{XmNtopAttachment	= XmATTACH_WIDGET;
  154 (3)					 XmNtopOffset		= uaf$c_topbot_widget_offset;
  155 (3)					 XmNtopWidget		= XmLabel identifier_attrib_label;
  156 (3)					 XmNbottomAttachment	= XmATTACH_WIDGET;
  157 (3)					 XmNbottomOffset	= uaf$c_bottom_offset;
  158 (3)					 XmNbottomWidget	= XmPushButton identifier_ok_button;
  159 (3)					 XmNrightAttachment	= XmATTACH_FORM;
  160 (3)					 XmNrightOffset		= uaf$c_right_offset;
  161 (3)					 XmNleftAttachment	= XmATTACH_POSITION;
  162 (3)					 XmNleftPosition	= uaf$c_2col_right;
  163 (3)					 XmNleftOffset		= uaf$c_left_offset;
  164 (3)					 XmNscrollingPolicy	= XmCONSTANT;
  165 (3)					 XmNscrollBarDisplayPolicy	= XmSTATIC;
  166 (3)					 XmNvisualPolicy	= XmVARIABLE;
  167 (3)					 };
  168 (3)			 controls	{XmList			identifier_attrib_list; };
  169 (3)			 };

Motif Uil Compiler V1.1-000 	22-NOV-1993 11:29:56.26		 Page 19
Module: authorize 	 Version: X1.0
 
  170 (3)	object	identifier_attrib_list		: XmList
  171 (3)			{arguments	{XmNvisibleItemCount	= 20;
  172 (3)					 XmNitems		= uaf$t_identifier_attrib_list;
  173 (3)					 XmNautomaticSelection	= false;
  174 (3)					 XmNselectionPolicy	= XmMULTIPLE_SELECT;
  175 (3)					 };
  176 (3)			 callbacks	{MrmNcreateCallback		= procedure create_proc (uaf$c_identifier_attrib_list);
  177 (3)					 XmNmultipleSelectionCallback	= procedure list_proc (uaf$c_identifier_attrib_list); };
  178 (3)			 };

Motif Uil Compiler V1.1-000 	22-NOV-1993 11:29:56.26		 Page 20
Module: authorize 	 Version: X1.0
 
  179 (3)	 
  180 (3)	! Define the objects for the identifier window popup menu box.
  181 (3)	
  182 (3)	object	identifier_popup_menu	: XmPopupMenu
  183 (3)			{arguments	{XmNorientation		= XmVERTICAL; };
  184 (3)			 controls	{XmPushButton		system_identifier_button; };
  185 (3)			};
  186 (3)	
  187 (3)	object	system_identifier_button	: XmPushButton
  188 (3)			{arguments	{XmNlabelString		= uaf$t_system_identifiers; };
  189 (3)			 callbacks	{XmNactivateCallback	= procedure activate_proc (uaf$c_identifier_system); };
  190 (3)			};

Motif Uil Compiler V1.1-000 	22-NOV-1993 11:29:56.26		 Page 21
Module: authorize 	 Version: X1.0
 
  191 (3)	 
  192 (3)	! Define the objects for the identifier window push buttons.
  193 (3)	
  194 (3)	object	identifier_ok_button	: XmPushButton
  195 (3)			{arguments	{XmNlabelString		= uaf$t_identifier_ok;
  196 (3)					 XmNbottomAttachment	= XmATTACH_FORM;
  197 (3)					 XmNbottomOffset	= uaf$c_bottom_offset;
  198 (3)					 XmNleftAttachment	= XmATTACH_FORM;
  199 (3)					 XmNleftOffset		= uaf$c_left_offset;
  200 (3)					 };
  201 (3)			 callbacks	{XmNactivateCallback	= procedure activate_proc (uaf$c_identifier_ok); };
  202 (3)			 };
  203 (3)	object	identifier_cancel_button	: XmPushButton
  204 (3)			{arguments	{XmNlabelString		= uaf$t_identifier_cancel;
  205 (3)					 XmNbottomAttachment	= XmATTACH_FORM;
  206 (3)					 XmNbottomOffset	= uaf$c_bottom_offset;
  207 (3)					 XmNrightAttachment	= XmATTACH_WIDGET;
  208 (3)					 XmNrightOffset		= uaf$c_right_offset;
  209 (3)					 XmNrightWidget		= XmPushButton identifier_grant_button;
  210 (3)					 XmNleftAttachment	= XmATTACH_WIDGET;
  211 (3)					 XmNleftOffset		= uaf$c_left_offset;
  212 (3)					 XmNleftWidget		= XmPushButton identifier_ok_button;
  213 (3)					 };
  214 (3)			 callbacks	{XmNactivateCallback	= procedure activate_proc (uaf$c_identifier_cancel); };
  215 (3)			 };
  216 (3)	
  217 (3)	object	identifier_grant_button	: XmPushButton
  218 (3)			{arguments	{XmNlabelString		= uaf$t_identifier_grant;
  219 (3)					 XmNbottomAttachment	= XmATTACH_FORM;
  220 (3)					 XmNbottomOffset	= uaf$c_bottom_offset;
  221 (3)					 XmNrightAttachment	= XmATTACH_WIDGET;
  222 (3)					 XmNrightOffset		= uaf$c_right_offset;
  223 (3)					 XmNrightWidget		= XmPushButton identifier_modify_button;
  224 (3)					 };
  225 (3)			 callbacks	{XmNactivateCallback	= procedure activate_proc (uaf$c_identifier_grant); };
  226 (3)			 };
  227 (3)	
  228 (3)	object	identifier_modify_button	: XmPushButton
  229 (3)			{arguments	{XmNlabelString		= uaf$t_identifier_modify;
  230 (3)					 XmNbottomAttachment	= XmATTACH_FORM;
  231 (3)					 XmNbottomOffset	= uaf$c_bottom_offset;
  232 (3)					 XmNrightAttachment	= XmATTACH_WIDGET;
  233 (3)					 XmNrightOffset		= uaf$c_right_offset;
  234 (3)					 XmNrightWidget		= XmPushButton identifier_remove_button;
  235 (3)					 };
  236 (3)			 callbacks	{XmNactivateCallback	= procedure activate_proc (uaf$c_identifier_modify); };
  237 (3)			 };
  238 (3)	
  239 (3)	object	identifier_remove_button	: XmPushButton
  240 (3)			{arguments	{XmNlabelString		= uaf$t_identifier_remove;
  241 (3)					 XmNbottomAttachment	= XmATTACH_FORM;
  242 (3)					 XmNbottomOffset	= uaf$c_bottom_offset;
  243 (3)					 XmNrightAttachment	= XmATTACH_FORM;
  244 (3)					 XmNrightOffset		= uaf$c_right_offset;
  245 (3)					 };
  246 (3)			 callbacks	{XmNactivateCallback	= procedure activate_proc (uaf$c_identifier_remove); };
  247 (3)			 };

Motif Uil Compiler V1.1-000 	22-NOV-1993 11:29:56.26		 Page 22
Module: authorize 	 Version: X1.0
 
  248 (3)	 
  249 (3)	! Define the system identifier box object.
  250 (3)	
  251 (3)	
  252 (3)	object	system_identifier_window	: XmFormDialog
  253 (3)			{arguments	{XmNdialogTitle		= uaf$t_system_identifier_title;
  254 (3)					 XmNcancelButton	= system_identifier_cancel_button;
  255 (3)					 XmNdefaultButton	= system_identifier_cancel_button;
  256 (3)					 XmNunitType		= XmPIXELS;
  257 (3)					 XmNautoUnmanage	= false;
  258 (3)					 XmNdefaultPosition	= false;
  259 (3)					 };
  260 (3)			 controls	{XmScrolledWindow	system_identifier_inner;
  261 (3)	
  262 (3)					 XmPushButton		system_identifier_cancel_button;
  263 (3)					 };
  264 (3)			};
  265 (3)	
  266 (3)	object	system_identifier_inner	: XmScrolledWindow
  267 (3)			{arguments	{XmNtopAttachment	= XmATTACH_FORM;
  268 (3)					 XmNtopOffset		= uaf$c_top_offset;
  269 (3)					 XmNbottomAttachment	= XmATTACH_WIDGET;
  270 (3)					 XmNbottomOffset	= uaf$c_bottom_offset;
  271 (3)					 XmNbottomWidget	= XmPushButton system_identifier_cancel_button;
  272 (3)					 XmNleftAttachment	= XmATTACH_FORM;
  273 (3)					 XmNleftOffset		= uaf$c_left_offset;
  274 (3)					 XmNrightAttachment	= XmATTACH_FORM;
  275 (3)					 XmNrightOffset		= uaf$c_right_offset;
  276 (3)					 XmNscrollingPolicy	= XmCONSTANT;
  277 (3)					 XmNscrollBarDisplayPolicy	= XmSTATIC;
  278 (3)					 XmNvisualPolicy	= XmVARIABLE;
  279 (3)					 };
  280 (3)			 controls	{XmList			system_identifier_list; };
  281 (3)			 };
  282 (3)	object	system_identifier_list		: XmList
  283 (3)			{arguments	{XmNvisibleItemCount	= 20;
  284 (3)					 XmNautomaticSelection	= false;
  285 (3)					 XmNselectionPolicy	= XmSINGLE_SELECT;
  286 (3)					 };
  287 (3)			 callbacks	{MrmNcreateCallback		= procedure create_proc (uaf$c_system_identifier_list);
  288 (3)					 XmNsingleSelectionCallback	= procedure list_proc (uaf$c_system_identifier_list); };
  289 (3)			 };

Motif Uil Compiler V1.1-000 	22-NOV-1993 11:29:56.26		 Page 23
Module: authorize 	 Version: X1.0
 
  290 (3)	 
  291 (3)	! Define the objects for the system identifier window push buttons.
  292 (3)	
  293 (3)	object	system_identifier_cancel_button	: XmPushButton
  294 (3)			{arguments	{XmNlabelString		= uaf$t_identifier_cancel;
  295 (3)					 XmNbottomAttachment	= XmATTACH_FORM;
  296 (3)					 XmNbottomOffset	= uaf$c_bottom_offset;
  297 (3)					 XmNleftAttachment	= XmATTACH_FORM;
  298 (3)					 XmNleftOffset		= uaf$c_left_offset;
  299 (3)					 };
  300 (3)			 callbacks	{XmNactivateCallback	= procedure activate_proc (uaf$c_system_identifier_cancel); };
  301 (3)			 };
   52 (0)	include file 'sys$disk:[]uaf_entry_window';
    1 (4)	!module	authorize_entry_window
    2 (4)	!	version		= 'X1.0'
    3 (4)	!	names		= case_insensitive
    4 (4)	
    5 (4)	! Constants used to define reflect the maximum string size for various
    6 (4)	! fields in the authorization record.
    7 (4)	
    8 (4)	value
    9 (4)		uaf$s_account			: 32;
   10 (4)		uaf$s_clitables			: 32;
   11 (4)		uaf$s_defcli			: 32;
   12 (4)		uaf$s_defdev			: 32;
   13 (4)		uaf$s_defdir			: 64;
   14 (4)		uaf$s_lgicmd			: 64;
   15 (4)		uaf$s_owner			: 64;
   16 (4)		uaf$s_password			: 31;			! Text string not hashed value
   17 (4)		uaf$s_username			: 32;

Motif Uil Compiler V1.1-000 	22-NOV-1993 11:29:56.26		 Page 24
Module: authorize 	 Version: X1.0
 
   18 (4)	 
   19 (4)	! Constants used to define sizes of some of the various fields in the entry
   20 (4)	! window.
   21 (4)	
   22 (4)	value
   23 (4)		uaf$c_account_cols		: 8;			! Size (in characters) of account field
   24 (4)		uaf$c_byte_cols			: 3;			! Number of digits in a byte value
   25 (4)		uaf$c_cli_cols			: 12;			! Size (in characters) of CLI field
   26 (4)		uaf$c_clitable_cols		: 32;			! Size (in characters) of CLI table field
   27 (4)		uaf$c_date_cols			: 10;			! Number of characters in a date
   28 (4)		uaf$c_date_max			: 24;			! Max characters in a date
   29 (4)		uaf$c_default_cols		: 32;			! Size (in characters) of default (device & directory) field
   30 (4)		uaf$c_lgicmd_cols		: 32;			! Size (in characters) of login command field
   31 (4)		uaf$c_longword_cols		: 10;			! Number of digits in a longword value
   32 (4)		uaf$c_owner_cols		: 32;			! Size (in characters) of owner field
   33 (4)		uaf$c_password_cols		: 16;			! Size (in characters) of password field
   34 (4)		uaf$c_uic_cols			: 32;			! Size (in characters) of UIC field
   35 (4)		uaf$c_uic_max			: 65;			! Max characters in a UIC
   36 (4)		uaf$c_word_cols			: 5;			! Number of digits in a word value

Motif Uil Compiler V1.1-000 	22-NOV-1993 11:29:56.26		 Page 25
Module: authorize 	 Version: X1.0
 
   37 (4)	 
   38 (4)	! Strings associated with the various menus and menu entries.  These determine
   39 (4)	! the text displayed.
   40 (4)	
   41 (4)	value
   42 (4)		uaf$t_entry_modify_title	: compound_string	("Authorization Entry");
   43 (4)		uaf$t_entry_ok			: compound_string	("OK");
   44 (4)		uaf$t_entry_cancel		: compound_string	("Cancel");
   45 (4)		uaf$t_entry_apply_template	: compound_string	("Apply Template");
   46 (4)		uaf$t_entry_rename		: compound_string	("Rename");
   47 (4)		uaf$t_entry_copy		: compound_string	("Copy");
   48 (4)	
   49 (4)	! Strings associated with the various fields within the authorization entry
   50 (4)	! display box.  These are needed to label the various entry fields.
   51 (4)	
   52 (4)		uaf$t_username			: compound_string	("Username");
   53 (4)		uaf$t_owner			: compound_string	("Owner");
   54 (4)		uaf$t_account			: compound_string	("Account");
   55 (4)		uaf$t_uic			: compound_string	("UIC");
   56 (4)		uaf$t_cli			: compound_string	("CLI");
   57 (4)		uaf$t_clitable			: compound_string	("CLI tables");
   58 (4)		uaf$t_default			: compound_string	("Default");
   59 (4)		uaf$t_password			: compound_string	("Password");
   60 (4)		uaf$t_lgicmd			: compound_string	("LGICMD");
   61 (4)		uaf$t_password2			: compound_string	("Sec Pwd");
   62 (4)		uaf$t_expiration		: compound_string	("Acct exp");
   63 (4)		uaf$t_lastlogin_i		: compound_string	("Int login");
   64 (4)		uaf$t_lastlogin_n		: compound_string	("Other login");
   65 (4)		uaf$t_logfails			: compound_string	("Logfails");
   66 (4)		uaf$t_pwd_length		: compound_string	("Pwd length");
   67 (4)		uaf$t_pwd_lifetime		: compound_string	("Pwd life");
   68 (4)		uaf$t_pwd_date			: compound_string	("Pri pwd chg");
   69 (4)		uaf$t_pwd2_date			: compound_string	("Sec pwd chg");
   70 (4)	
   71 (4)		uaf$t_maxjobs			: compound_string	("Maxjobs");
   72 (4)		uaf$t_fillm			: compound_string	("Fillm");
   73 (4)		uaf$t_bytlm			: compound_string	("Bytlm");
   74 (4)		uaf$t_maxacctjobs		: compound_string	("Maxacctjobs");
   75 (4)		uaf$t_shrfillm			: compound_string	("Shrfillm");
   76 (4)	!	uaf$t_pbytlm			: compound_string	("Pbylm");
   77 (4)		uaf$t_maxdetach			: compound_string	("Maxdetach");
   78 (4)		uaf$t_biolm			: compound_string	("BIOlm");
   79 (4)		uaf$t_jtquota			: compound_string	("JTquota");
   80 (4)		uaf$t_prclm			: compound_string	("Prclm");
   81 (4)		uaf$t_diolm			: compound_string	("DIOlm");
   82 (4)		uaf$t_wsdef			: compound_string	("WSdef");
   83 (4)		uaf$t_prio			: compound_string	("Prio");
   84 (4)		uaf$t_astlm			: compound_string	("ASTlm");
   85 (4)		uaf$t_wsquo			: compound_string	("WSquo");
   86 (4)		uaf$t_queprio			: compound_string	("Queprio");
   87 (4)		uaf$t_tqelm			: compound_string	("TQElm");
   88 (4)		uaf$t_wsextent			: compound_string	("WSextent");
   89 (4)		uaf$t_cpu			: compound_string	("CPU");
   90 (4)		uaf$t_enqlm			: compound_string	("Enqlm");
   91 (4)		uaf$t_pgflquo			: compound_string	("Pgflquo");
   92 (4)	
   93 (4)		uaf$t_login_flags		: compound_string	("Login Flags:");

Motif Uil Compiler V1.1-000 	22-NOV-1993 11:29:56.26		 Page 26
Module: authorize 	 Version: X1.0
 
   94 (4)		uaf$t_authorized_privileges	: compound_string	("Authorized Privileges:");
   95 (4)		uaf$t_default_privileges	: compound_string	("Default Privileges:");
   96 (4)		uaf$t_primary_days		: compound_string	("Primary Days:");
   97 (4)	
   98 (4)	! Strings for the entry popup menu.
   99 (4)	
  100 (4)		uaf$t_entry_access_primary	: compound_string	("Primary Day Restrictions");
  101 (4)		uaf$t_entry_access_secondary	: compound_string	("Secondary Day Restrictions");
  102 (4)	
  103 (4)	! Strings defined for the various login flags.  NOTE!! The order of this
  104 (4)	! list is important.  The position in the list corresponds to the bit in
  105 (4)	! the login flags field.
  106 (4)	
  107 (4)		uaf$t_login_flag_list		: string_table	('DISCTLY',			! uaf$v_disctly
  108 (4)								 'DEFCLI',			! uaf$v_defcli
  109 (4)								 'LOCKPWD',			! uaf$v_lockpwd
  110 (4)								 'RESTRICTED',			! uaf$v_restricted
  111 (4)								 'DISUSER',			! uaf$v_disacnt
  112 (4)								 'DISWELCOME',			! uaf$v_diswelcom
  113 (4)								 'DISNEWMAIL',			! uaf$v_dismail
  114 (4)								 'DISMAIL',			! uaf$v_nomail
  115 (4)								 'GENPWD',			! uaf$v_genpwd
  116 (4)								 'PWD_EXPIRED',			! uaf$v_pwd_expired
  117 (4)								 'PWD2_EXPIRED',		! uaf$v_pwd2_expired
  118 (4)								 'AUDIT',			! uaf$v_audit
  119 (4)								 'DISREPORT',			! uaf$v_disreport
  120 (4)								 'DISRECONNECT',		! uaf$v_disreconnect
  121 (4)								 'AUTOLOGIN',			! uaf$v_autologin
  122 (4)								 'NOFORCE_EXP_PWD_CHANGE',	! uaf$v_disforce_pwd_change
  123 (4)								 'CAPTIVE',			! uaf$v_captive
  124 (4)								 'DISIMAGE',			! uaf$v_disimage
  125 (4)								 'DISPWDDIC',			! uaf$v_dispwddic
  126 (4)								 'DISPWDHIS',			! uaf$v_dispwdhis
  127 (4)								 'DEFCLSVAL');			! uaf$v_defclsval
  128 (4)	
  129 (4)	! Strings defined for the various privilege bits.  Whenever new privileges are
  130 (4)	! added to $PRVDEF, this list must be updated.  (Otherwise the privileges will
  131 (4)	! not be available for use.)  NOTE!! The order of this list is important.  The
  132 (4)	! position in the list corresponds to the bit in the privilege mask.
  133 (4)	
  134 (4)		uaf$t_privilege_list		: string_table	('CMKRNL',			! prv$v_cmkrnl
  135 (4)								 'CMEXEC',			! prv$v_cmexec
  136 (4)								 'SYSNAM',			! prv$v_sysnam
  137 (4)								 'GRPNAM',			! prv$v_grpnam
  138 (4)								 'ALLSPOOL',			! prv$v_allspool
  139 (4)								 'DETACH',			! prv$v_detach
  140 (4)								 'DIAGNOSE',			! prv$v_diagnose
  141 (4)								 'LOG_IO',			! prv$v_log_io
  142 (4)								 'GROUP',			! prv$v_group
  143 (4)								 'ACNT',			! prv$v_noacnt
  144 (4)								 'PRMCEB',			! prv$v_prmceb
  145 (4)								 'PRMMBX',			! prv$v_prmmbx
  146 (4)								 'PSWAPM',			! prv$v_pswapm
  147 (4)								 'ALTPRI',			! prv$v_setpri
  148 (4)								 'SETPRV',			! prv$v_setprv
  149 (4)								 'TMPMBX',			! prv$v_tmpmbx
  150 (4)								 'WORLD',			! prv$v_world

Motif Uil Compiler V1.1-000 	22-NOV-1993 11:29:56.26		 Page 27
Module: authorize 	 Version: X1.0
 
  151 (4)								 'MOUNT',			! prv$v_mount
  152 (4)								 'OPER',			! prv$v_oper
  153 (4)								 'EXQUOTA',			! prv$v_exquota
  154 (4)								 'NETMBX',			! prv$v_netmbx
  155 (4)								 'VOLPRO',			! prv$v_volpro
  156 (4)								 'PHY_IO',			! prv$v_phy_io
  157 (4)								 'BUGCHK',			! prv$v_bugchk
  158 (4)								 'PRMGBL',			! prv$v_prmgbl
  159 (4)								 'SYSGBL',			! prv$v_sysgbl
  160 (4)								 'PFNMAP',			! prv$v_pfnmap
  161 (4)								 'SHMEM',			! prv$v_shmem
  162 (4)								 'SYSPRV',			! prv$v_sysprv
  163 (4)								 'BYPASS',			! prv$v_bypass
  164 (4)								 'SYSLCK',			! prv$v_syslck
  165 (4)								 'SHARE',			! prv$v_share
  166 (4)								 'UPGRADE',			! prv$v_upgrade
  167 (4)								 'DOWNGRADE',			! prv$v_downgrade
  168 (4)								 'GRPPRV',			! prv$v_grpprv
  169 (4)								 'READALL',			! prv$v_readall
  170 (4)								 'IMPORT',			! prv$v_import
  171 (4)								 'AUDIT',			! prv$v_audit
  172 (4)								 'SECURITY');			! prv$v_security
  173 (4)	
  174 (4)	! Strings defined for the primary day flags.  NOTE!! The order of this
  175 (4)	! list is important.  The position in the list corresponds to the bit in
  176 (4)	! the primary day mask.
  177 (4)	
  178 (4)		uaf$t_primeday_list		: string_table	('Monday',			! uaf$v_monday
  179 (4)								 'Tuesday',			! uaf$v_tuesday
  180 (4)								 'Wednesday',			! uaf$v_wednesday
  181 (4)								 'Thursday',			! uaf$v_thursday
  182 (4)								 'Friday',			! uaf$v_friday
  183 (4)								 'Saturday',			! uaf$v_saturday
  184 (4)								 'Sunday');			! uaf$v_sunday

Motif Uil Compiler V1.1-000 	22-NOV-1993 11:29:56.26		 Page 28
Module: authorize 	 Version: X1.0
 
  185 (4)	 
  186 (4)	! Useful icons.
  187 (4)	
  188 (4)	value
  189 (4)		left_arrow_icon		: icon ('            ******  ',
  190 (4)						'           *******  ',
  191 (4)						'          **    **  ',
  192 (4)						'         **     **  ',
  193 (4)						'        **      **  ',
  194 (4)						'       **       **  ',
  195 (4)						'      **        **  ',
  196 (4)						'     **         **  ',
  197 (4)						'    **          **  ',
  198 (4)						'   **           **  ',
  199 (4)						'  **            **  ',    
  200 (4)						'   **           **  ',
  201 (4)						'    **          **  ',
  202 (4)						'     **         **  ',
  203 (4)						'      **        **  ',
  204 (4)						'       **       **  ',
  205 (4)						'        **      **  ',
  206 (4)						'         **     **  ',
  207 (4)						'          **    **  ',
  208 (4)						'           *******  ',
  209 (4)						'            ******  ');
  210 (4)		right_arrow_icon	: icon ('  ******            ',
  211 (4)						'  *******           ',
  212 (4)						'  **    **          ',
  213 (4)						'  **     **         ',
  214 (4)						'  **      **        ',
  215 (4)						'  **       **       ',
  216 (4)						'  **        **      ',
  217 (4)						'  **         **     ',
  218 (4)						'  **          **    ',
  219 (4)						'  **           **   ',
  220 (4)						'  **            **  ',
  221 (4)						'  **           **   ',
  222 (4)						'  **          **    ',
  223 (4)						'  **         **     ',
  224 (4)						'  **        **      ',
  225 (4)						'  **       **       ',
  226 (4)						'  **      **        ',
  227 (4)						'  **     **         ',
  228 (4)						'  **    **          ',
  229 (4)						'  *******           ',
  230 (4)						'  ******            ');

Motif Uil Compiler V1.1-000 	22-NOV-1993 11:29:56.26		 Page 29
Module: authorize 	 Version: X1.0
 
  231 (4)	 
  232 (4)	! Define the basic entry display/modify display.
  233 (4)	
  234 (4)	object	entry_window		: XmFormDialog
  235 (4)			{arguments	{XmNdialogTitle		= uaf$t_entry_modify_title;
  236 (4)					 XmNcancelButton	= entry_cancel_button;
  237 (4)					 XmNdefaultButton	= entry_ok_button;
  238 (4)					 XmNunitType		= XmPIXELS;
  239 (4)					 XmNautoUnmanage	= false;
  240 (4)					 XmNdefaultPosition	= false;
  241 (4)					 };
  242 (4)			 controls	{XmLabel	entry_username_label;
  243 (4)					 XmText		entry_username_value;
  244 (4)					 XmLabel	entry_owner_label;
  245 (4)					 XmText		entry_owner_value;
  246 (4)					 XmLabel	entry_account_label;
  247 (4)					 XmText		entry_account_value;
  248 (4)					 XmLabel	entry_uic_label;
  249 (4)					 XmText		entry_uic_value;
  250 (4)					 XmLabel	entry_cli_label;
  251 (4)					 XmText		entry_cli_value;
  252 (4)					 XmLabel	entry_clitable_label;
  253 (4)					 XmText		entry_clitable_value;
  254 (4)					 XmLabel	entry_default_label;
  255 (4)					 XmText		entry_default_value;
  256 (4)					 XmLabel	entry_password_label;
  257 (4)					 XmText		entry_password_value;
  258 (4)					 XmLabel	entry_lgicmd_label;
  259 (4)					 XmText		entry_lgicmd_value;
  260 (4)					 XmLabel	entry_password2_label;
  261 (4)					 XmText		entry_password2_value;
  262 (4)	
  263 (4)					 XmLabel	entry_expiration_label;
  264 (4)					 XmText		entry_expiration_value;
  265 (4)					 XmLabel	entry_lastlogin_i_label;
  266 (4)					 XmText		entry_lastlogin_i_value;
  267 (4)					 XmLabel	entry_lastlogin_n_label;
  268 (4)					 XmText		entry_lastlogin_n_value;
  269 (4)					 XmLabel	entry_logfails_label;
  270 (4)					 XmText		entry_logfails_value;
  271 (4)					 XmLabel	entry_pwd_length_label;
  272 (4)					 XmText		entry_pwd_length_value;
  273 (4)					 XmLabel	entry_pwd_lifetime_label;
  274 (4)					 XmText		entry_pwd_lifetime_value;
  275 (4)					 XmLabel	entry_pwd_date_label;
  276 (4)					 XmText		entry_pwd_date_value;
  277 (4)					 XmLabel	entry_pwd2_date_label;
  278 (4)					 XmText		entry_pwd2_date_value;
  279 (4)	
  280 (4)					 XmLabel	entry_maxjobs_label;
  281 (4)					 XmText		entry_maxjobs_value;
  282 (4)					 XmLabel	entry_maxacctjobs_label;
  283 (4)					 XmText		entry_maxacctjobs_value;
  284 (4)					 XmLabel	entry_maxdetach_label;
  285 (4)					 XmText		entry_maxdetach_value;
  286 (4)					 XmLabel	entry_prclm_label;
  287 (4)					 XmText		entry_prclm_value;

Motif Uil Compiler V1.1-000 	22-NOV-1993 11:29:56.26		 Page 30
Module: authorize 	 Version: X1.0
 
  288 (4)					 XmLabel	entry_prio_label;
  289 (4)					 XmText		entry_prio_value;
  290 (4)					 XmLabel	entry_queprio_label;
  291 (4)					 XmText		entry_queprio_value;
  292 (4)					 XmLabel	entry_cpu_label;
  293 (4)					 XmText		entry_cpu_value;
  294 (4)					 XmLabel	entry_bytlm_label;
  295 (4)					 XmText		entry_bytlm_value;
  296 (4)					 XmLabel	entry_fillm_label;
  297 (4)					 XmText		entry_fillm_value;
  298 (4)					 XmLabel	entry_shrfillm_label;
  299 (4)					 XmText		entry_shrfillm_value;
  300 (4)					 XmLabel	entry_biolm_label;
  301 (4)					 XmText		entry_biolm_value;
  302 (4)					 XmLabel	entry_diolm_label;
  303 (4)					 XmText		entry_diolm_value;
  304 (4)					 XmLabel	entry_wsdef_label;
  305 (4)					 XmText		entry_wsdef_value;
  306 (4)					 XmLabel	entry_wsquo_label;
  307 (4)					 XmText		entry_wsquo_value;
  308 (4)					 XmLabel	entry_wsextent_label;
  309 (4)					 XmText		entry_wsextent_value;
  310 (4)					 XmLabel	entry_pgflquo_label;
  311 (4)					 XmText		entry_pgflquo_value;
  312 (4)					 XmLabel	entry_astlm_label;
  313 (4)					 XmText		entry_astlm_value;
  314 (4)					 XmLabel	entry_tqelm_label;
  315 (4)					 XmText		entry_tqelm_value;
  316 (4)					 XmLabel	entry_enqlm_label;
  317 (4)					 XmText		entry_enqlm_value;
  318 (4)					 XmLabel	entry_jtquota_label;
  319 (4)					 XmText		entry_jtquota_value;
  320 (4)	
  321 (4)					 XmLabel	entry_login_flag_label;
  322 (4)					 XmScrolledWindow	entry_login_flags;
  323 (4)	
  324 (4)					 XmLabel	entry_auth_priv_label;
  325 (4)					 XmScrolledWindow	entry_auth_privileges;
  326 (4)	
  327 (4)					 XmLabel	entry_def_priv_label;
  328 (4)					 XmScrolledWindow	entry_def_privileges;
  329 (4)	
  330 (4)					 XmLabel	entry_primary_day_label;
  331 (4)					 XmScrolledWindow	entry_primary_days;
  332 (4)	
  333 (4)	! Pushbuttons for the authorization entry window.
  334 (4)	
  335 (4)					 XmPushButton	entry_ok_previous_button;
  336 (4)					 XmPushButton	entry_ok_button;
  337 (4)					 XmPushButton	entry_ok_next_button;
  338 (4)					 XmPushButton	entry_cancel_button;
  339 (4)					 XmPushButton	entry_apply_template_button;
  340 (4)					 XmPushButton	entry_rename_button;
  341 (4)					 XmPushButton	entry_copy_button;
  342 (4)					 };
  343 (4)			};

Motif Uil Compiler V1.1-000 	22-NOV-1993 11:29:56.26		 Page 31
Module: authorize 	 Version: X1.0
 
  344 (4)	 
  345 (4)	! Define the objects for the basic user information area.
  346 (4)	
  347 (4)	object	entry_username_label	: XmLabel
  348 (4)			{arguments	{XmNlabelString		= uaf$t_username;
  349 (4)					 XmNtopAttachment	= XmATTACH_FORM;
  350 (4)					 XmNtopOffset		= uaf$c_top_offset;
  351 (4)					 XmNrightAttachment	= XmATTACH_WIDGET;
  352 (4)					 XmNrightOffset		= uaf$c_labval_widget_offset;
  353 (4)					 XmNrightWidget		= XmText entry_username_value;
  354 (4)					 }; };
  355 (4)	object	entry_username_value	: XmText
  356 (4)			{arguments	{XmNmaxLength		= uaf$s_username;
  357 (4)					 XmNtopAttachment	= XmATTACH_FORM;
  358 (4)					 XmNtopOffset		= uaf$c_top_offset;
  359 (4)					 XmNleftAttachment	= XmATTACH_POSITION;
  360 (4)					 XmNleftPosition	= uaf$c_4col_column_1_with_lab;
  361 (4)					 XmNcolumns		= uaf$c_username_cols;
  362 (4)					 XmNrows		= 1;
  363 (4)					 XmNmarginHeight	= 0;
  364 (4)					 XmNresizeHeight	= false;
  365 (4)					 };
  366 (4)			 callbacks	{MrmNcreateCallback	= procedure create_proc (uaf$c_entry_username); };
  367 (4)			 };
  368 (4)	object	entry_owner_label	: XmLabel
  369 (4)			{arguments	{XmNlabelString		= uaf$t_owner;
  370 (4)					 XmNtopAttachment	= XmATTACH_FORM;
  371 (4)					 XmNtopOffset		= uaf$c_top_offset;
  372 (4)					 XmNrightAttachment	= XmATTACH_WIDGET;
  373 (4)					 XmNrightOffset		= uaf$c_labval_widget_offset;
  374 (4)					 XmNrightWidget		= XmText entry_owner_value;
  375 (4)					 }; };
  376 (4)	object	entry_owner_value	: XmText
  377 (4)			{arguments	{XmNmaxLength		= uaf$s_owner;
  378 (4)					 XmNtopAttachment	= XmATTACH_FORM;
  379 (4)					 XmNtopOffset		= uaf$c_top_offset;
  380 (4)					 XmNleftAttachment	= XmATTACH_POSITION;
  381 (4)					 XmNleftPosition	= uaf$c_2col_right;
  382 (4)					 XmNcolumns		= uaf$c_owner_cols;
  383 (4)					 XmNrows		= 1;
  384 (4)					 XmNmarginHeight	= 0;
  385 (4)					 XmNresizeHeight	= false;
  386 (4)					 };
  387 (4)			 callbacks	{MrmNcreateCallback	= procedure create_proc (uaf$c_entry_owner); };
  388 (4)			 };
  389 (4)	object	entry_account_label	: XmLabel
  390 (4)			{arguments	{XmNlabelString		= uaf$t_account;
  391 (4)					 XmNtopAttachment	= XmATTACH_WIDGET;
  392 (4)					 XmNtopOffset		= uaf$c_topbot_widget_offset;
  393 (4)					 XmNtopWidget		= XmText entry_username_value;
  394 (4)					 XmNrightAttachment	= XmATTACH_WIDGET;
  395 (4)					 XmNrightOffset		= uaf$c_labval_widget_offset;
  396 (4)					 XmNrightWidget		= XmText entry_account_value;
  397 (4)					 }; };
  398 (4)	object	entry_account_value	: XmText
  399 (4)			{arguments	{XmNmaxLength		= uaf$s_account;
  400 (4)					 XmNtopAttachment	= XmATTACH_WIDGET;

Motif Uil Compiler V1.1-000 	22-NOV-1993 11:29:56.26		 Page 32
Module: authorize 	 Version: X1.0
 
  401 (4)					 XmNtopOffset		= uaf$c_topbot_widget_offset;
  402 (4)					 XmNtopWidget		= XmText entry_username_value;
  403 (4)					 XmNleftAttachment	= XmATTACH_POSITION;
  404 (4)					 XmNleftPosition	= uaf$c_4col_column_1_with_lab;
  405 (4)					 XmNcolumns		= uaf$c_account_cols;
  406 (4)					 XmNrows		= 1;
  407 (4)					 XmNmarginHeight	= 0;
  408 (4)					 XmNresizeHeight	= false;
  409 (4)					 };
  410 (4)			 callbacks	{MrmNcreateCallback	= procedure create_proc (uaf$c_entry_account); };
  411 (4)			 };
  412 (4)	object	entry_uic_label		: XmLabel
  413 (4)			{arguments	{XmNlabelString		= uaf$t_uic;
  414 (4)					 XmNtopAttachment	= XmATTACH_WIDGET;
  415 (4)					 XmNtopOffset		= uaf$c_topbot_widget_offset;
  416 (4)					 XmNtopWidget		= XmText entry_username_value;
  417 (4)					 XmNrightAttachment	= XmATTACH_WIDGET;
  418 (4)					 XmNrightOffset		= uaf$c_labval_widget_offset;
  419 (4)					 XmNrightWidget		= XmText entry_uic_value;
  420 (4)					 XmNleftWidget		= XmText entry_account_value;
  421 (4)					 }; };
  422 (4)	object	entry_uic_value		: XmText
  423 (4)			{arguments	{XmNmaxLength		= uaf$c_uic_max;
  424 (4)					 XmNtopAttachment	= XmATTACH_WIDGET;
  425 (4)					 XmNtopOffset		= uaf$c_topbot_widget_offset;
  426 (4)					 XmNtopWidget		= XmText entry_username_value;
  427 (4)					 XmNleftAttachment	= XmATTACH_POSITION;
  428 (4)					 XmNleftPosition	= uaf$c_2col_right;
  429 (4)					 XmNcolumns		= uaf$c_uic_cols;
  430 (4)					 XmNrows		= 1;
  431 (4)					 XmNmarginHeight	= 0;
  432 (4)					 XmNresizeHeight	= false;
  433 (4)					 };
  434 (4)			 callbacks	{MrmNcreateCallback	= procedure create_proc (uaf$c_entry_uic); };
  435 (4)			 };
  436 (4)	object	entry_cli_label		: XmLabel
  437 (4)			{arguments	{XmNlabelString		= uaf$t_cli;
  438 (4)					 XmNtopAttachment	= XmATTACH_WIDGET;
  439 (4)					 XmNtopOffset		= uaf$c_topbot_widget_offset;
  440 (4)					 XmNtopWidget		= XmText entry_account_value;
  441 (4)					 XmNrightAttachment	= XmATTACH_WIDGET;
  442 (4)					 XmNrightOffset		= uaf$c_labval_widget_offset;
  443 (4)					 XmNrightWidget		= XmText entry_cli_value;
  444 (4)					 }; };
  445 (4)	object	entry_cli_value		: XmText
  446 (4)			{arguments	{XmNmaxLength		= uaf$s_defcli;
  447 (4)					 XmNtopAttachment	= XmATTACH_WIDGET;
  448 (4)					 XmNtopOffset		= uaf$c_topbot_widget_offset;
  449 (4)					 XmNtopWidget		= XmText entry_account_value;
  450 (4)					 XmNleftAttachment	= XmATTACH_POSITION;
  451 (4)					 XmNleftPosition	= uaf$c_4col_column_1_with_lab;
  452 (4)					 XmNcolumns		= uaf$c_cli_cols;
  453 (4)					 XmNrows		= 1;
  454 (4)					 XmNmarginHeight	= 0;
  455 (4)					 XmNresizeHeight	= false;
  456 (4)					 };
  457 (4)			 callbacks	{MrmNcreateCallback	= procedure create_proc (uaf$c_entry_cli); };

Motif Uil Compiler V1.1-000 	22-NOV-1993 11:29:56.26		 Page 33
Module: authorize 	 Version: X1.0
 
  458 (4)			 };
  459 (4)	object	entry_clitable_label	: XmLabel
  460 (4)			{arguments	{XmNlabelString		= uaf$t_clitable;
  461 (4)					 XmNtopAttachment	= XmATTACH_WIDGET;
  462 (4)					 XmNtopOffset		= uaf$c_topbot_widget_offset;
  463 (4)					 XmNtopWidget		= XmText entry_account_value;
  464 (4)					 XmNrightAttachment	= XmATTACH_WIDGET;
  465 (4)					 XmNrightOffset		= uaf$c_labval_widget_offset;
  466 (4)					 XmNrightWidget		= XmText entry_clitable_value;
  467 (4)					 }; };
  468 (4)	object	entry_clitable_value	: XmText
  469 (4)			{arguments	{XmNmaxLength		= uaf$s_clitables;
  470 (4)					 XmNtopAttachment	= XmATTACH_WIDGET;
  471 (4)					 XmNtopOffset		= uaf$c_topbot_widget_offset;
  472 (4)					 XmNtopWidget		= XmText entry_account_value;
  473 (4)					 XmNleftAttachment	= XmATTACH_POSITION;
  474 (4)					 XmNleftPosition	= uaf$c_2col_right;
  475 (4)					 XmNcolumns		= uaf$c_clitable_cols;
  476 (4)					 XmNrows		= 1;
  477 (4)					 XmNmarginHeight	= 0;
  478 (4)					 XmNresizeHeight	= false;
  479 (4)					 };
  480 (4)			 callbacks	{MrmNcreateCallback	= procedure create_proc (uaf$c_entry_clitable); };
  481 (4)			 };
  482 (4)	object	entry_default_label	: XmLabel
  483 (4)			{arguments	{XmNlabelString		= uaf$t_default;
  484 (4)					 XmNtopAttachment	= XmATTACH_WIDGET;
  485 (4)					 XmNtopOffset		= uaf$c_topbot_widget_offset;
  486 (4)					 XmNtopWidget		= XmText entry_cli_value;
  487 (4)					 XmNrightAttachment	= XmATTACH_WIDGET;
  488 (4)					 XmNrightOffset		= uaf$c_labval_widget_offset;
  489 (4)					 XmNrightWidget		= XmText entry_default_value;
  490 (4)					 }; };
  491 (4)	object	entry_default_value	: XmText
  492 (4)			{arguments	{XmNmaxLength		= uaf$s_defdev + uaf$s_defdir;
  493 (4)					 XmNtopAttachment	= XmATTACH_WIDGET;
  494 (4)					 XmNtopOffset		= uaf$c_topbot_widget_offset;
  495 (4)					 XmNtopWidget		= XmText entry_cli_value;
  496 (4)					 XmNleftAttachment	= XmATTACH_POSITION;
  497 (4)					 XmNleftPosition	= uaf$c_4col_column_1_with_lab;
  498 (4)					 XmNcolumns		= uaf$c_default_cols;
  499 (4)					 XmNrows		= 1;
  500 (4)					 XmNmarginHeight	= 0;
  501 (4)					 XmNresizeHeight	= false;
  502 (4)					 };
  503 (4)			 callbacks	{MrmNcreateCallback	= procedure create_proc (uaf$c_entry_default); };
  504 (4)			 };
  505 (4)	object	entry_password_label	: XmLabel
  506 (4)			{arguments	{XmNlabelString		= uaf$t_password;
  507 (4)					 XmNtopAttachment	= XmATTACH_WIDGET;
  508 (4)					 XmNtopOffset		= uaf$c_topbot_widget_offset;
  509 (4)					 XmNtopWidget		= XmText entry_cli_value;
  510 (4)					 XmNrightAttachment	= XmATTACH_WIDGET;
  511 (4)					 XmNrightOffset		= uaf$c_labval_widget_offset;
  512 (4)					 XmNrightWidget		= XmText entry_password_value;
  513 (4)					 }; };
  514 (4)	object	entry_password_value	: XmText

Motif Uil Compiler V1.1-000 	22-NOV-1993 11:29:56.26		 Page 34
Module: authorize 	 Version: X1.0
 
  515 (4)			{arguments	{XmNmaxLength		= uaf$s_password;
  516 (4)					 XmNtopAttachment	= XmATTACH_WIDGET;
  517 (4)					 XmNtopOffset		= uaf$c_topbot_widget_offset;
  518 (4)					 XmNtopWidget		= XmText entry_cli_value;
  519 (4)					 XmNleftAttachment	= XmATTACH_POSITION;
  520 (4)					 XmNleftPosition	= uaf$c_4col_column_3_with_lab;
  521 (4)					 XmNcolumns		= uaf$c_password_cols;
  522 (4)					 XmNrows		= 1;
  523 (4)					 XmNmarginHeight	= 0;
  524 (4)					 XmNresizeHeight	= false;
  525 (4)					 };
  526 (4)			 callbacks	{MrmNcreateCallback	= procedure create_proc (uaf$c_entry_password); };
  527 (4)			 };
  528 (4)	object	entry_lgicmd_label	: XmLabel
  529 (4)			{arguments	{XmNlabelString		= uaf$t_lgicmd;
  530 (4)					 XmNtopAttachment	= XmATTACH_WIDGET;
  531 (4)					 XmNtopOffset		= uaf$c_topbot_widget_offset;
  532 (4)					 XmNtopWidget		= XmText entry_default_value;
  533 (4)					 XmNrightAttachment	= XmATTACH_WIDGET;
  534 (4)					 XmNrightOffset		= uaf$c_labval_widget_offset;
  535 (4)					 XmNrightWidget		= XmText entry_lgicmd_value;
  536 (4)					 }; };
  537 (4)	object	entry_lgicmd_value	: XmText
  538 (4)			{arguments	{XmNmaxLength		= uaf$s_lgicmd;
  539 (4)					 XmNtopAttachment	= XmATTACH_WIDGET;
  540 (4)					 XmNtopOffset		= uaf$c_topbot_widget_offset;
  541 (4)					 XmNtopWidget		= XmText entry_default_value;
  542 (4)					 XmNleftAttachment	= XmATTACH_POSITION;
  543 (4)					 XmNleftPosition	= uaf$c_4col_column_1_with_lab;
  544 (4)					 XmNcolumns		= uaf$c_lgicmd_cols;
  545 (4)					 XmNrows		= 1;
  546 (4)					 XmNmarginHeight	= 0;
  547 (4)					 XmNresizeHeight	= false;
  548 (4)					 };
  549 (4)			 callbacks	{MrmNcreateCallback	= procedure create_proc (uaf$c_entry_lgicmd); };
  550 (4)			 };
  551 (4)	object	entry_password2_label	: XmLabel
  552 (4)			{arguments	{XmNlabelString		= uaf$t_password2;
  553 (4)					 XmNtopAttachment	= XmATTACH_WIDGET;
  554 (4)					 XmNtopOffset		= uaf$c_topbot_widget_offset;
  555 (4)					 XmNtopWidget		= XmText entry_default_value;
  556 (4)					 XmNrightAttachment	= XmATTACH_WIDGET;
  557 (4)					 XmNrightOffset		= uaf$c_labval_widget_offset;
  558 (4)					 XmNrightWidget		= XmText entry_password2_value;
  559 (4)					 }; };
  560 (4)	object	entry_password2_value	: XmText
  561 (4)			{arguments	{XmNmaxLength		= uaf$s_password;
  562 (4)					 XmNtopAttachment	= XmATTACH_WIDGET;
  563 (4)					 XmNtopOffset		= uaf$c_topbot_widget_offset;
  564 (4)					 XmNtopWidget		= XmText entry_default_value;
  565 (4)					 XmNleftAttachment	= XmATTACH_POSITION;
  566 (4)					 XmNleftPosition	= uaf$c_4col_column_3_with_lab;
  567 (4)					 XmNcolumns		= uaf$c_password_cols;
  568 (4)					 XmNrows		= 1;
  569 (4)					 XmNmarginHeight	= 0;
  570 (4)					 XmNresizeHeight	= false;
  571 (4)					 };

Motif Uil Compiler V1.1-000 	22-NOV-1993 11:29:56.26		 Page 35
Module: authorize 	 Version: X1.0
 
  572 (4)			 callbacks	{MrmNcreateCallback	= procedure create_proc (uaf$c_entry_password2); };
  573 (4)			 };

Motif Uil Compiler V1.1-000 	22-NOV-1993 11:29:56.26		 Page 36
Module: authorize 	 Version: X1.0
 
  574 (4)	 
  575 (4)	object	entry_expiration_label	: XmLabel
  576 (4)			{arguments	{XmNlabelString		= uaf$t_expiration;
  577 (4)					 XmNtopAttachment	= XmATTACH_WIDGET;
  578 (4)					 XmNtopOffset		= uaf$c_topbot_widget_offset;
  579 (4)					 XmNtopWidget		= XmText entry_lgicmd_value;
  580 (4)					 XmNrightAttachment	= XmATTACH_WIDGET;
  581 (4)					 XmNrightOffset		= uaf$c_labval_widget_offset;
  582 (4)					 XmNrightWidget		= XmText entry_expiration_value;
  583 (4)					 }; };
  584 (4)	object	entry_expiration_value	: XmText
  585 (4)			{arguments	{XmNmaxLength		= uaf$c_date_max;
  586 (4)					 XmNtopAttachment	= XmATTACH_WIDGET;
  587 (4)					 XmNtopOffset		= uaf$c_topbot_widget_offset;
  588 (4)					 XmNtopWidget		= XmText entry_lgicmd_value;
  589 (4)					 XmNleftAttachment	= XmATTACH_POSITION;
  590 (4)					 XmNleftPosition	= uaf$c_4col_column_1_with_lab;
  591 (4)					 XmNcolumns		= uaf$c_date_cols;
  592 (4)					 XmNrows		= 1;
  593 (4)					 XmNmarginHeight	= 0;
  594 (4)					 XmNresizeHeight	= false;
  595 (4)					 };
  596 (4)			 callbacks	{MrmNcreateCallback	= procedure create_proc (uaf$c_entry_expiration); };
  597 (4)			 };
  598 (4)	object	entry_lastlogin_i_label	: XmLabel
  599 (4)			{arguments	{XmNlabelString		= uaf$t_lastlogin_i;
  600 (4)					 XmNtopAttachment	= XmATTACH_WIDGET;
  601 (4)					 XmNtopOffset		= uaf$c_topbot_widget_offset;
  602 (4)					 XmNtopWidget		= XmText entry_lgicmd_value;
  603 (4)					 XmNrightAttachment	= XmATTACH_WIDGET;
  604 (4)					 XmNrightOffset		= uaf$c_labval_widget_offset;
  605 (4)					 XmNrightWidget		= XmText entry_lastlogin_i_value;
  606 (4)					 }; };
  607 (4)	object	entry_lastlogin_i_value	: XmText
  608 (4)			{arguments	{XmNmaxLength		= uaf$c_date_max;
  609 (4)					 XmNtopAttachment	= XmATTACH_WIDGET;
  610 (4)					 XmNtopOffset		= uaf$c_topbot_widget_offset;
  611 (4)					 XmNtopWidget		= XmText entry_lgicmd_value;
  612 (4)					 XmNleftAttachment	= XmATTACH_POSITION;
  613 (4)					 XmNleftPosition	= uaf$c_4col_column_2_with_lab;
  614 (4)					 XmNcolumns		= uaf$c_date_cols;
  615 (4)					 XmNrows		= 1;
  616 (4)					 XmNmarginHeight	= 0;
  617 (4)					 XmNresizeHeight	= false;
  618 (4)					 };
  619 (4)			 callbacks	{MrmNcreateCallback	= procedure create_proc (uaf$c_entry_lastlogin_i); };
  620 (4)			 };
  621 (4)	object	entry_lastlogin_n_label	: XmLabel
  622 (4)			{arguments	{XmNlabelString		= uaf$t_lastlogin_n;
  623 (4)					 XmNtopAttachment	= XmATTACH_WIDGET;
  624 (4)					 XmNtopOffset		= uaf$c_topbot_widget_offset;
  625 (4)					 XmNtopWidget		= XmText entry_lgicmd_value;
  626 (4)					 XmNrightAttachment	= XmATTACH_WIDGET;
  627 (4)					 XmNrightOffset		= uaf$c_labval_widget_offset;
  628 (4)					 XmNrightWidget		= XmText entry_lastlogin_n_value;
  629 (4)					 }; };
  630 (4)	object	entry_lastlogin_n_value	: XmText

Motif Uil Compiler V1.1-000 	22-NOV-1993 11:29:56.26		 Page 37
Module: authorize 	 Version: X1.0
 
  631 (4)			{arguments	{XmNmaxLength		= uaf$c_date_max;
  632 (4)					 XmNtopAttachment	= XmATTACH_WIDGET;
  633 (4)					 XmNtopOffset		= uaf$c_topbot_widget_offset;
  634 (4)					 XmNtopWidget		= XmText entry_lgicmd_value;
  635 (4)					 XmNleftAttachment	= XmATTACH_POSITION;
  636 (4)					 XmNleftPosition	= uaf$c_4col_column_3_with_lab;
  637 (4)					 XmNcolumns		= uaf$c_date_cols;
  638 (4)					 XmNrows		= 1;
  639 (4)					 XmNmarginHeight	= 0;
  640 (4)					 XmNresizeHeight	= false;
  641 (4)					 };
  642 (4)			 callbacks	{MrmNcreateCallback	= procedure create_proc (uaf$c_entry_lastlogin_n); };
  643 (4)			 };
  644 (4)	object	entry_logfails_label	: XmLabel
  645 (4)			{arguments	{XmNlabelString		= uaf$t_logfails;
  646 (4)					 XmNtopAttachment	= XmATTACH_WIDGET;
  647 (4)					 XmNtopOffset		= uaf$c_topbot_widget_offset;
  648 (4)					 XmNtopWidget		= XmText entry_lgicmd_value;
  649 (4)					 XmNrightAttachment	= XmATTACH_WIDGET;
  650 (4)					 XmNrightOffset		= uaf$c_labval_widget_offset;
  651 (4)					 XmNrightWidget		= XmText entry_logfails_value;
  652 (4)					 }; };
  653 (4)	object	entry_logfails_value	: XmText
  654 (4)			{arguments	{XmNmaxLength		= uaf$c_word_cols;
  655 (4)					 XmNtopAttachment	= XmATTACH_WIDGET;
  656 (4)					 XmNtopOffset		= uaf$c_topbot_widget_offset;
  657 (4)					 XmNtopWidget		= XmText entry_lgicmd_value;
  658 (4)					 XmNleftAttachment	= XmATTACH_POSITION;
  659 (4)					 XmNleftPosition	= uaf$c_4col_column_4_with_lab;
  660 (4)					 XmNcolumns		= uaf$c_date_cols;
  661 (4)					 XmNrows		= 1;
  662 (4)					 XmNmarginHeight	= 0;
  663 (4)					 XmNresizeHeight	= false;
  664 (4)					 };
  665 (4)			 callbacks	{MrmNcreateCallback	= procedure create_proc (uaf$c_entry_logfails); };
  666 (4)			 };
  667 (4)	object	entry_pwd_length_label	: XmLabel
  668 (4)			{arguments	{XmNlabelString		= uaf$t_pwd_length;
  669 (4)					 XmNtopAttachment	= XmATTACH_WIDGET;
  670 (4)					 XmNtopOffset		= uaf$c_topbot_widget_offset;
  671 (4)					 XmNtopWidget		= XmText entry_expiration_value;
  672 (4)					 XmNrightAttachment	= XmATTACH_WIDGET;
  673 (4)					 XmNrightOffset		= uaf$c_labval_widget_offset;
  674 (4)					 XmNrightWidget		= XmText entry_pwd_length_value;
  675 (4)					 }; };
  676 (4)	object	entry_pwd_length_value	: XmText
  677 (4)			{arguments	{XmNmaxLength		= uaf$c_word_cols;
  678 (4)					 XmNtopAttachment	= XmATTACH_WIDGET;
  679 (4)					 XmNtopOffset		= uaf$c_topbot_widget_offset;
  680 (4)					 XmNtopWidget		= XmText entry_expiration_value;
  681 (4)					 XmNleftAttachment	= XmATTACH_POSITION;
  682 (4)					 XmNleftPosition	= uaf$c_4col_column_1_with_lab;
  683 (4)					 XmNcolumns		= uaf$c_date_cols;
  684 (4)					 XmNrows		= 1;
  685 (4)					 XmNmarginHeight	= 0;
  686 (4)					 XmNresizeHeight	= false;
  687 (4)					 };

Motif Uil Compiler V1.1-000 	22-NOV-1993 11:29:56.26		 Page 38
Module: authorize 	 Version: X1.0
 
  688 (4)			 callbacks	{MrmNcreateCallback	= procedure create_proc (uaf$c_entry_pwd_length); };
  689 (4)			 };
  690 (4)	object	entry_pwd_lifetime_label: XmLabel
  691 (4)			{arguments	{XmNlabelString		= uaf$t_pwd_lifetime;
  692 (4)					 XmNtopAttachment	= XmATTACH_WIDGET;
  693 (4)					 XmNtopOffset		= uaf$c_topbot_widget_offset;
  694 (4)					 XmNtopWidget		= XmText entry_expiration_value;
  695 (4)					 XmNrightAttachment	= XmATTACH_WIDGET;
  696 (4)					 XmNrightOffset		= uaf$c_labval_widget_offset;
  697 (4)					 XmNrightWidget		= XmText entry_pwd_lifetime_value;
  698 (4)					 }; };
  699 (4)	object	entry_pwd_lifetime_value: XmText
  700 (4)			{arguments	{XmNmaxLength		= uaf$c_word_cols;
  701 (4)					 XmNtopAttachment	= XmATTACH_WIDGET;
  702 (4)					 XmNtopOffset		= uaf$c_topbot_widget_offset;
  703 (4)					 XmNtopWidget		= XmText entry_expiration_value;
  704 (4)					 XmNleftAttachment	= XmATTACH_POSITION;
  705 (4)					 XmNleftPosition	= uaf$c_4col_column_2_with_lab;
  706 (4)					 XmNcolumns		= uaf$c_date_cols;
  707 (4)					 XmNrows		= 1;
  708 (4)					 XmNmarginHeight	= 0;
  709 (4)					 XmNresizeHeight	= false;
  710 (4)					 };
  711 (4)			 callbacks	{MrmNcreateCallback	= procedure create_proc (uaf$c_entry_pwd_lifetime); };
  712 (4)			 };
  713 (4)	object	entry_pwd_date_label	: XmLabel
  714 (4)			{arguments	{XmNlabelString		= uaf$t_pwd_date;
  715 (4)					 XmNtopAttachment	= XmATTACH_WIDGET;
  716 (4)					 XmNtopOffset		= uaf$c_topbot_widget_offset;
  717 (4)					 XmNtopWidget		= XmText entry_expiration_value;
  718 (4)					 XmNrightAttachment	= XmATTACH_WIDGET;
  719 (4)					 XmNrightOffset		= uaf$c_labval_widget_offset;
  720 (4)					 XmNrightWidget		= XmText entry_pwd_date_value;
  721 (4)					 }; };
  722 (4)	object	entry_pwd_date_value	: XmText
  723 (4)			{arguments	{XmNmaxLength		= uaf$c_word_cols;
  724 (4)					 XmNtopAttachment	= XmATTACH_WIDGET;
  725 (4)					 XmNtopOffset		= uaf$c_topbot_widget_offset;
  726 (4)					 XmNtopWidget		= XmText entry_expiration_value;
  727 (4)					 XmNleftAttachment	= XmATTACH_POSITION;
  728 (4)					 XmNleftPosition	= uaf$c_4col_column_3_with_lab;
  729 (4)					 XmNcolumns		= uaf$c_date_cols;
  730 (4)					 XmNrows		= 1;
  731 (4)					 XmNmarginHeight	= 0;
  732 (4)					 XmNresizeHeight	= false;
  733 (4)					 };
  734 (4)			 callbacks	{MrmNcreateCallback	= procedure create_proc (uaf$c_entry_pwd_date); };
  735 (4)			 };
  736 (4)	object	entry_pwd2_date_label	: XmLabel
  737 (4)			{arguments	{XmNlabelString		= uaf$t_pwd2_date;
  738 (4)					 XmNtopAttachment	= XmATTACH_WIDGET;
  739 (4)					 XmNtopOffset		= uaf$c_topbot_widget_offset;
  740 (4)					 XmNtopWidget		= XmText entry_expiration_value;
  741 (4)					 XmNrightAttachment	= XmATTACH_WIDGET;
  742 (4)					 XmNrightOffset		= uaf$c_labval_widget_offset;
  743 (4)					 XmNrightWidget		= XmText entry_pwd2_date_value;
  744 (4)					 }; };

Motif Uil Compiler V1.1-000 	22-NOV-1993 11:29:56.26		 Page 39
Module: authorize 	 Version: X1.0
 
  745 (4)	object	entry_pwd2_date_value	: XmText
  746 (4)			{arguments	{XmNmaxLength		= uaf$c_word_cols;
  747 (4)					 XmNtopAttachment	= XmATTACH_WIDGET;
  748 (4)					 XmNtopOffset		= uaf$c_topbot_widget_offset;
  749 (4)					 XmNtopWidget		= XmText entry_expiration_value;
  750 (4)					 XmNleftAttachment	= XmATTACH_POSITION;
  751 (4)					 XmNleftPosition	= uaf$c_4col_column_4_with_lab;
  752 (4)					 XmNcolumns		= uaf$c_date_cols;
  753 (4)					 XmNrows		= 1;
  754 (4)					 XmNmarginHeight	= 0;
  755 (4)					 XmNresizeHeight	= false;
  756 (4)					 };
  757 (4)			 callbacks	{MrmNcreateCallback	= procedure create_proc (uaf$c_entry_pwd2_date); };
  758 (4)			 };
  759 (4)	
  760 (4)	object	entry_maxjobs_label	: XmLabel
  761 (4)			{arguments	{XmNlabelString		= uaf$t_maxjobs;
  762 (4)					 XmNtopAttachment	= XmATTACH_WIDGET;
  763 (4)					 XmNtopOffset		= uaf$c_topbot_widget_offset;
  764 (4)					 XmNtopWidget		= XmText entry_pwd_length_value;
  765 (4)					 XmNrightAttachment	= XmATTACH_WIDGET;
  766 (4)					 XmNrightOffset		= uaf$c_labval_widget_offset;
  767 (4)					 XmNrightWidget		= XmText entry_maxjobs_value;
  768 (4)					 }; };
  769 (4)	object	entry_maxjobs_value	: XmText
  770 (4)			{arguments	{XmNmaxLength		= uaf$c_word_cols;
  771 (4)					 XmNtopAttachment	= XmATTACH_WIDGET;
  772 (4)					 XmNtopOffset		= uaf$c_topbot_widget_offset;
  773 (4)					 XmNtopWidget		= XmText entry_pwd_length_value;
  774 (4)					 XmNleftAttachment	= XmATTACH_POSITION;
  775 (4)					 XmNleftPosition	= uaf$c_4col_column_1_with_lab;
  776 (4)					 XmNcolumns		= uaf$c_word_cols;
  777 (4)					 XmNrows		= 1;
  778 (4)					 XmNmarginHeight	= 0;
  779 (4)					 XmNresizeHeight	= false;
  780 (4)					 };
  781 (4)			 callbacks	{MrmNcreateCallback	= procedure create_proc (uaf$c_entry_maxjobs); };
  782 (4)			 };
  783 (4)	object	entry_maxacctjobs_label	: XmLabel
  784 (4)			{arguments	{XmNlabelString		= uaf$t_maxacctjobs;
  785 (4)					 XmNtopAttachment	= XmATTACH_WIDGET;
  786 (4)					 XmNtopOffset		= uaf$c_topbot_widget_offset;
  787 (4)					 XmNtopWidget		= XmText entry_pwd_length_value;
  788 (4)					 XmNrightAttachment	= XmATTACH_WIDGET;
  789 (4)					 XmNrightOffset		= uaf$c_labval_widget_offset;
  790 (4)					 XmNrightWidget		= XmText entry_maxacctjobs_value;
  791 (4)					 }; };
  792 (4)	object	entry_maxacctjobs_value	: XmText
  793 (4)			{arguments	{XmNmaxLength		= uaf$c_word_cols;
  794 (4)					 XmNtopAttachment	= XmATTACH_WIDGET;
  795 (4)					 XmNtopOffset		= uaf$c_topbot_widget_offset;
  796 (4)					 XmNtopWidget		= XmText entry_pwd_length_value;
  797 (4)					 XmNleftAttachment	= XmATTACH_POSITION;
  798 (4)					 XmNleftPosition	= uaf$c_4col_column_2_with_lab;
  799 (4)					 XmNcolumns		= uaf$c_word_cols;
  800 (4)					 XmNrows		= 1;
  801 (4)					 XmNmarginHeight	= 0;

Motif Uil Compiler V1.1-000 	22-NOV-1993 11:29:56.26		 Page 40
Module: authorize 	 Version: X1.0
 
  802 (4)					 XmNresizeHeight	= false;
  803 (4)					 };
  804 (4)			 callbacks	{MrmNcreateCallback	= procedure create_proc (uaf$c_entry_maxacctjobs); };
  805 (4)			 };
  806 (4)	object	entry_maxdetach_label	: XmLabel
  807 (4)			{arguments	{XmNlabelString		= uaf$t_maxdetach;
  808 (4)					 XmNtopAttachment	= XmATTACH_WIDGET;
  809 (4)					 XmNtopOffset		= uaf$c_topbot_widget_offset;
  810 (4)					 XmNtopWidget		= XmText entry_pwd_length_value;
  811 (4)					 XmNrightAttachment	= XmATTACH_WIDGET;
  812 (4)					 XmNrightOffset		= uaf$c_labval_widget_offset;
  813 (4)					 XmNrightWidget		= XmText entry_maxdetach_value;
  814 (4)					 }; };
  815 (4)	object	entry_maxdetach_value	: XmText
  816 (4)			{arguments	{XmNmaxLength		= uaf$c_word_cols;
  817 (4)					 XmNtopAttachment	= XmATTACH_WIDGET;
  818 (4)					 XmNtopOffset		= uaf$c_topbot_widget_offset;
  819 (4)					 XmNtopWidget		= XmText entry_pwd_length_value;
  820 (4)					 XmNleftAttachment	= XmATTACH_POSITION;
  821 (4)					 XmNleftPosition	= uaf$c_4col_column_3_with_lab;
  822 (4)					 XmNcolumns		= uaf$c_word_cols;
  823 (4)					 XmNrows		= 1;
  824 (4)					 XmNmarginHeight	= 0;
  825 (4)					 XmNresizeHeight	= false;
  826 (4)					 };
  827 (4)			 callbacks	{MrmNcreateCallback	= procedure create_proc (uaf$c_entry_maxdetach); };
  828 (4)			 };
  829 (4)	object	entry_prclm_label	: XmLabel
  830 (4)			{arguments	{XmNlabelString		= uaf$t_prclm;
  831 (4)					 XmNtopAttachment	= XmATTACH_WIDGET;
  832 (4)					 XmNtopOffset		= uaf$c_topbot_widget_offset;
  833 (4)					 XmNtopWidget		= XmText entry_pwd_length_value;
  834 (4)					 XmNrightAttachment	= XmATTACH_WIDGET;
  835 (4)					 XmNrightOffset		= uaf$c_labval_widget_offset;
  836 (4)					 XmNrightWidget		= XmText entry_prclm_value;
  837 (4)					 }; };
  838 (4)	object	entry_prclm_value	: XmText
  839 (4)			{arguments	{XmNmaxLength		= uaf$c_word_cols;
  840 (4)					 XmNtopAttachment	= XmATTACH_WIDGET;
  841 (4)					 XmNtopOffset		= uaf$c_topbot_widget_offset;
  842 (4)					 XmNtopWidget		= XmText entry_pwd_length_value;
  843 (4)					 XmNleftAttachment	= XmATTACH_POSITION;
  844 (4)					 XmNleftPosition	= uaf$c_4col_column_4_with_lab;
  845 (4)					 XmNcolumns		= uaf$c_word_cols;
  846 (4)					 XmNrows		= 1;
  847 (4)					 XmNmarginHeight	= 0;
  848 (4)					 XmNresizeHeight	= false;
  849 (4)					 };
  850 (4)			 callbacks	{MrmNcreateCallback	= procedure create_proc (uaf$c_entry_prclm); };
  851 (4)			 };
  852 (4)	
  853 (4)	object	entry_bytlm_label	: XmLabel
  854 (4)			{arguments	{XmNlabelString		= uaf$t_bytlm;
  855 (4)					 XmNtopAttachment	= XmATTACH_WIDGET;
  856 (4)					 XmNtopOffset		= uaf$c_topbot_widget_offset;
  857 (4)					 XmNtopWidget		= XmText entry_maxjobs_value;
  858 (4)					 XmNrightAttachment	= XmATTACH_WIDGET;

Motif Uil Compiler V1.1-000 	22-NOV-1993 11:29:56.26		 Page 41
Module: authorize 	 Version: X1.0
 
  859 (4)					 XmNrightOffset		= uaf$c_labval_widget_offset;
  860 (4)					 XmNrightWidget		= XmText entry_bytlm_value;
  861 (4)					 }; };
  862 (4)	object	entry_bytlm_value	: XmText
  863 (4)			{arguments	{XmNmaxLength		= uaf$c_longword_cols;
  864 (4)					 XmNtopAttachment	= XmATTACH_WIDGET;
  865 (4)					 XmNtopOffset		= uaf$c_topbot_widget_offset;
  866 (4)					 XmNtopWidget		= XmText entry_maxjobs_value;
  867 (4)					 XmNleftAttachment	= XmATTACH_POSITION;
  868 (4)					 XmNleftPosition	= uaf$c_4col_column_1_with_lab;
  869 (4)					 XmNcolumns		= uaf$c_longword_cols;
  870 (4)					 XmNrows		= 1;
  871 (4)					 XmNmarginHeight	= 0;
  872 (4)					 XmNresizeHeight	= false;
  873 (4)					 };
  874 (4)			 callbacks	{MrmNcreateCallback	= procedure create_proc (uaf$c_entry_bytlm); };
  875 (4)			 };
  876 (4)	object	entry_prio_label	: XmLabel
  877 (4)			{arguments	{XmNlabelString		= uaf$t_prio;
  878 (4)					 XmNtopAttachment	= XmATTACH_WIDGET;
  879 (4)					 XmNtopOffset		= uaf$c_topbot_widget_offset;
  880 (4)					 XmNtopWidget		= XmText entry_maxjobs_value;
  881 (4)					 XmNrightAttachment	= XmATTACH_WIDGET;
  882 (4)					 XmNrightOffset		= uaf$c_labval_widget_offset;
  883 (4)					 XmNrightWidget		= XmText entry_prio_value;
  884 (4)					 }; };
  885 (4)	object	entry_prio_value	: XmText
  886 (4)			{arguments	{XmNmaxLength		= uaf$c_byte_cols;
  887 (4)					 XmNtopAttachment	= XmATTACH_WIDGET;
  888 (4)					 XmNtopOffset		= uaf$c_topbot_widget_offset;
  889 (4)					 XmNtopWidget		= XmText entry_maxjobs_value;
  890 (4)					 XmNleftAttachment	= XmATTACH_POSITION;
  891 (4)					 XmNleftPosition	= uaf$c_4col_column_2_with_lab;
  892 (4)					 XmNcolumns		= uaf$c_byte_cols;
  893 (4)					 XmNrows		= 1;
  894 (4)					 XmNmarginHeight	= 0;
  895 (4)					 XmNresizeHeight	= false;
  896 (4)					 };
  897 (4)			 callbacks	{MrmNcreateCallback	= procedure create_proc (uaf$c_entry_prio); };
  898 (4)			 };
  899 (4)	object	entry_queprio_label	: XmLabel
  900 (4)			{arguments	{XmNlabelString		= uaf$t_queprio;
  901 (4)					 XmNtopAttachment	= XmATTACH_WIDGET;
  902 (4)					 XmNtopOffset		= uaf$c_topbot_widget_offset;
  903 (4)					 XmNtopWidget		= XmText entry_maxjobs_value;
  904 (4)					 XmNrightAttachment	= XmATTACH_WIDGET;
  905 (4)					 XmNrightOffset		= uaf$c_labval_widget_offset;
  906 (4)					 XmNrightWidget		= XmText entry_queprio_value;
  907 (4)					 }; };
  908 (4)	object	entry_queprio_value	: XmText
  909 (4)			{arguments	{XmNmaxLength		= uaf$c_byte_cols;
  910 (4)					 XmNtopAttachment	= XmATTACH_WIDGET;
  911 (4)					 XmNtopOffset		= uaf$c_topbot_widget_offset;
  912 (4)					 XmNtopWidget		= XmText entry_maxjobs_value;
  913 (4)					 XmNleftAttachment	= XmATTACH_POSITION;
  914 (4)					 XmNleftPosition	= uaf$c_4col_column_3_with_lab;
  915 (4)					 XmNcolumns		= uaf$c_byte_cols;

Motif Uil Compiler V1.1-000 	22-NOV-1993 11:29:56.26		 Page 42
Module: authorize 	 Version: X1.0
 
  916 (4)					 XmNrows		= 1;
  917 (4)					 XmNmarginHeight	= 0;
  918 (4)					 XmNresizeHeight	= false;
  919 (4)					 };
  920 (4)			 callbacks	{MrmNcreateCallback	= procedure create_proc (uaf$c_entry_queprio); };
  921 (4)			 };
  922 (4)	object	entry_cpu_label		: XmLabel
  923 (4)			{arguments	{XmNlabelString		= uaf$t_cpu;
  924 (4)					 XmNtopAttachment	= XmATTACH_WIDGET;
  925 (4)					 XmNtopOffset		= uaf$c_topbot_widget_offset;
  926 (4)					 XmNtopWidget		= XmText entry_maxjobs_value;
  927 (4)					 XmNrightAttachment	= XmATTACH_WIDGET;
  928 (4)					 XmNrightOffset		= uaf$c_labval_widget_offset;
  929 (4)					 XmNrightWidget		= XmText entry_cpu_value;
  930 (4)					 }; };
  931 (4)	object	entry_cpu_value		: XmText
  932 (4)			{arguments	{XmNmaxLength		= 16;
  933 (4)					 XmNtopAttachment	= XmATTACH_WIDGET;
  934 (4)					 XmNtopOffset		= uaf$c_topbot_widget_offset;
  935 (4)					 XmNtopWidget		= XmText entry_maxjobs_value;
  936 (4)					 XmNleftAttachment	= XmATTACH_POSITION;
  937 (4)					 XmNleftPosition	= uaf$c_4col_column_4_with_lab;
  938 (4)					 XmNcolumns		= uaf$c_date_cols;
  939 (4)					 XmNrows		= 1;
  940 (4)					 XmNmarginHeight	= 0;
  941 (4)					 XmNresizeHeight	= false;
  942 (4)					 };
  943 (4)			 callbacks	{MrmNcreateCallback	= procedure create_proc (uaf$c_entry_cpu); };
  944 (4)			 };
  945 (4)	object	entry_fillm_label	: XmLabel
  946 (4)			{arguments	{XmNlabelString		= uaf$t_fillm;
  947 (4)					 XmNtopAttachment	= XmATTACH_WIDGET;
  948 (4)					 XmNtopOffset		= uaf$c_topbot_widget_offset;
  949 (4)					 XmNtopWidget		= XmText entry_bytlm_value;
  950 (4)					 XmNrightAttachment	= XmATTACH_WIDGET;
  951 (4)					 XmNrightOffset		= uaf$c_labval_widget_offset;
  952 (4)					 XmNrightWidget		= XmText entry_fillm_value;
  953 (4)					 }; };
  954 (4)	object	entry_fillm_value	: XmText
  955 (4)			{arguments	{XmNmaxLength		= uaf$c_word_cols;
  956 (4)					 XmNtopAttachment	= XmATTACH_WIDGET;
  957 (4)					 XmNtopOffset		= uaf$c_topbot_widget_offset;
  958 (4)					 XmNtopWidget		= XmText entry_bytlm_value;
  959 (4)					 XmNleftAttachment	= XmATTACH_POSITION;
  960 (4)					 XmNleftPosition	= uaf$c_4col_column_1_with_lab;
  961 (4)					 XmNcolumns		= uaf$c_word_cols;
  962 (4)					 XmNrows		= 1;
  963 (4)					 XmNmarginHeight	= 0;
  964 (4)					 XmNresizeHeight	= false;
  965 (4)					 };
  966 (4)			 callbacks	{MrmNcreateCallback	= procedure create_proc (uaf$c_entry_fillm); };
  967 (4)			 };
  968 (4)	object	entry_shrfillm_label	: XmLabel
  969 (4)			{arguments	{XmNlabelString		= uaf$t_shrfillm;
  970 (4)					 XmNtopAttachment	= XmATTACH_WIDGET;
  971 (4)					 XmNtopOffset		= uaf$c_topbot_widget_offset;
  972 (4)					 XmNtopWidget		= XmText entry_bytlm_value;

Motif Uil Compiler V1.1-000 	22-NOV-1993 11:29:56.26		 Page 43
Module: authorize 	 Version: X1.0
 
  973 (4)					 XmNrightAttachment	= XmATTACH_WIDGET;
  974 (4)					 XmNrightOffset		= uaf$c_labval_widget_offset;
  975 (4)					 XmNrightWidget		= XmText entry_shrfillm_value;
  976 (4)					 }; };
  977 (4)	object	entry_shrfillm_value	: XmText
  978 (4)			{arguments	{XmNmaxLength		= uaf$c_word_cols;
  979 (4)					 XmNtopAttachment	= XmATTACH_WIDGET;
  980 (4)					 XmNtopOffset		= uaf$c_topbot_widget_offset;
  981 (4)					 XmNtopWidget		= XmText entry_bytlm_value;
  982 (4)					 XmNleftAttachment	= XmATTACH_POSITION;
  983 (4)					 XmNleftPosition	= uaf$c_4col_column_2_with_lab;
  984 (4)					 XmNcolumns		= uaf$c_word_cols;
  985 (4)					 XmNrows		= 1;
  986 (4)					 XmNmarginHeight	= 0;
  987 (4)					 XmNresizeHeight	= false;
  988 (4)					 };
  989 (4)			 callbacks	{MrmNcreateCallback	= procedure create_proc (uaf$c_entry_shrfillm); };
  990 (4)			 };
  991 (4)	object	entry_biolm_label	: XmLabel
  992 (4)			{arguments	{XmNlabelString		= uaf$t_biolm;
  993 (4)					 XmNtopAttachment	= XmATTACH_WIDGET;
  994 (4)					 XmNtopOffset		= uaf$c_topbot_widget_offset;
  995 (4)					 XmNtopWidget		= XmText entry_bytlm_value;
  996 (4)					 XmNrightAttachment	= XmATTACH_WIDGET;
  997 (4)					 XmNrightOffset		= uaf$c_labval_widget_offset;
  998 (4)					 XmNrightWidget		= XmText entry_biolm_value;
  999 (4)					 }; };
 1000 (4)	object	entry_biolm_value	: XmText
 1001 (4)			{arguments	{XmNmaxLength		= uaf$c_word_cols;
 1002 (4)					 XmNtopAttachment	= XmATTACH_WIDGET;
 1003 (4)					 XmNtopOffset		= uaf$c_topbot_widget_offset;
 1004 (4)					 XmNtopWidget		= XmText entry_bytlm_value;
 1005 (4)					 XmNleftAttachment	= XmATTACH_POSITION;
 1006 (4)					 XmNleftPosition	= uaf$c_4col_column_3_with_lab;
 1007 (4)					 XmNcolumns		= uaf$c_word_cols;
 1008 (4)					 XmNrows		= 1;
 1009 (4)					 XmNmarginHeight	= 0;
 1010 (4)					 XmNresizeHeight	= false;
 1011 (4)					 };
 1012 (4)			 callbacks	{MrmNcreateCallback	= procedure create_proc (uaf$c_entry_biolm); };
 1013 (4)			 };
 1014 (4)	object	entry_diolm_label	: XmLabel
 1015 (4)			{arguments	{XmNlabelString		= uaf$t_diolm;
 1016 (4)					 XmNtopAttachment	= XmATTACH_WIDGET;
 1017 (4)					 XmNtopOffset		= uaf$c_topbot_widget_offset;
 1018 (4)					 XmNtopWidget		= XmText entry_bytlm_value;
 1019 (4)					 XmNrightAttachment	= XmATTACH_WIDGET;
 1020 (4)					 XmNrightOffset		= uaf$c_labval_widget_offset;
 1021 (4)					 XmNrightWidget		= XmText entry_diolm_value;
 1022 (4)					 }; };
 1023 (4)	object	entry_diolm_value	: XmText
 1024 (4)			{arguments	{XmNmaxLength		= uaf$c_word_cols;
 1025 (4)					 XmNtopAttachment	= XmATTACH_WIDGET;
 1026 (4)					 XmNtopOffset		= uaf$c_topbot_widget_offset;
 1027 (4)					 XmNtopWidget		= XmText entry_bytlm_value;
 1028 (4)					 XmNleftAttachment	= XmATTACH_POSITION;
 1029 (4)					 XmNleftPosition	= uaf$c_4col_column_4_with_lab;

Motif Uil Compiler V1.1-000 	22-NOV-1993 11:29:56.26		 Page 44
Module: authorize 	 Version: X1.0
 
 1030 (4)					 XmNcolumns		= uaf$c_word_cols;
 1031 (4)					 XmNrows		= 1;
 1032 (4)					 XmNmarginHeight	= 0;
 1033 (4)					 XmNresizeHeight	= false;
 1034 (4)					 };
 1035 (4)			 callbacks	{MrmNcreateCallback	= procedure create_proc (uaf$c_entry_diolm); };
 1036 (4)			 };
 1037 (4)	
 1038 (4)	object	entry_wsdef_label	: XmLabel
 1039 (4)			{arguments	{XmNlabelString		= uaf$t_wsdef;
 1040 (4)					 XmNtopAttachment	= XmATTACH_WIDGET;
 1041 (4)					 XmNtopOffset		= uaf$c_topbot_widget_offset;
 1042 (4)					 XmNtopWidget		= XmText entry_fillm_value;
 1043 (4)					 XmNrightAttachment	= XmATTACH_WIDGET;
 1044 (4)					 XmNrightOffset		= uaf$c_labval_widget_offset;
 1045 (4)					 XmNrightWidget		= XmText entry_wsdef_value;
 1046 (4)					 }; };
 1047 (4)	object	entry_wsdef_value	: XmText
 1048 (4)			{arguments	{XmNmaxLength		= uaf$c_longword_cols;
 1049 (4)					 XmNtopAttachment	= XmATTACH_WIDGET;
 1050 (4)					 XmNtopOffset		= uaf$c_topbot_widget_offset;
 1051 (4)					 XmNtopWidget		= XmText entry_fillm_value;
 1052 (4)					 XmNleftAttachment	= XmATTACH_POSITION;
 1053 (4)					 XmNleftPosition	= uaf$c_4col_column_1_with_lab;
 1054 (4)					 XmNcolumns		= uaf$c_longword_cols;
 1055 (4)					 XmNrows		= 1;
 1056 (4)					 XmNmarginHeight	= 0;
 1057 (4)					 XmNresizeHeight	= false;
 1058 (4)					 };
 1059 (4)			 callbacks	{MrmNcreateCallback	= procedure create_proc (uaf$c_entry_wsdef); };
 1060 (4)			 };
 1061 (4)	object	entry_wsquo_label	: XmLabel
 1062 (4)			{arguments	{XmNlabelString		= uaf$t_wsquo;
 1063 (4)					 XmNtopAttachment	= XmATTACH_WIDGET;
 1064 (4)					 XmNtopOffset		= uaf$c_topbot_widget_offset;
 1065 (4)					 XmNtopWidget		= XmText entry_fillm_value;
 1066 (4)					 XmNrightAttachment	= XmATTACH_WIDGET;
 1067 (4)					 XmNrightOffset		= uaf$c_labval_widget_offset;
 1068 (4)					 XmNrightWidget		= XmText entry_wsquo_value;
 1069 (4)					 }; };
 1070 (4)	object	entry_wsquo_value	: XmText
 1071 (4)			{arguments	{XmNmaxLength		= uaf$c_longword_cols;
 1072 (4)					 XmNtopAttachment	= XmATTACH_WIDGET;
 1073 (4)					 XmNtopOffset		= uaf$c_topbot_widget_offset;
 1074 (4)					 XmNtopWidget		= XmText entry_fillm_value;
 1075 (4)					 XmNleftAttachment	= XmATTACH_POSITION;
 1076 (4)					 XmNleftPosition	= uaf$c_4col_column_2_with_lab;
 1077 (4)					 XmNcolumns		= uaf$c_longword_cols;
 1078 (4)					 XmNrows		= 1;
 1079 (4)					 XmNmarginHeight	= 0;
 1080 (4)					 XmNresizeHeight	= false;
 1081 (4)					 };
 1082 (4)			 callbacks	{MrmNcreateCallback	= procedure create_proc (uaf$c_entry_wsquo); };
 1083 (4)			 };
 1084 (4)	object	entry_wsextent_label	: XmLabel
 1085 (4)			{arguments	{XmNlabelString		= uaf$t_wsextent;
 1086 (4)					 XmNtopAttachment	= XmATTACH_WIDGET;

Motif Uil Compiler V1.1-000 	22-NOV-1993 11:29:56.26		 Page 45
Module: authorize 	 Version: X1.0
 
 1087 (4)					 XmNtopOffset		= uaf$c_topbot_widget_offset;
 1088 (4)					 XmNtopWidget		= XmText entry_fillm_value;
 1089 (4)					 XmNrightAttachment	= XmATTACH_WIDGET;
 1090 (4)					 XmNrightOffset		= uaf$c_labval_widget_offset;
 1091 (4)					 XmNrightWidget		= XmText entry_wsextent_value;
 1092 (4)					 }; };
 1093 (4)	object	entry_wsextent_value	: XmText
 1094 (4)			{arguments	{XmNmaxLength		= uaf$c_longword_cols;
 1095 (4)					 XmNtopAttachment	= XmATTACH_WIDGET;
 1096 (4)					 XmNtopOffset		= uaf$c_topbot_widget_offset;
 1097 (4)					 XmNtopWidget		= XmText entry_fillm_value;
 1098 (4)					 XmNleftAttachment	= XmATTACH_POSITION;
 1099 (4)					 XmNleftPosition	= uaf$c_4col_column_3_with_lab;
 1100 (4)					 XmNcolumns		= uaf$c_longword_cols;
 1101 (4)					 XmNrows		= 1;
 1102 (4)					 XmNmarginHeight	= 0;
 1103 (4)					 XmNresizeHeight	= false;
 1104 (4)					 };
 1105 (4)			 callbacks	{MrmNcreateCallback	= procedure create_proc (uaf$c_entry_wsextent); };
 1106 (4)			 };
 1107 (4)	object	entry_pgflquo_label	: XmLabel
 1108 (4)			{arguments	{XmNlabelString		= uaf$t_pgflquo;
 1109 (4)					 XmNtopAttachment	= XmATTACH_WIDGET;
 1110 (4)					 XmNtopOffset		= uaf$c_topbot_widget_offset;
 1111 (4)					 XmNtopWidget		= XmText entry_fillm_value;
 1112 (4)					 XmNrightAttachment	= XmATTACH_WIDGET;
 1113 (4)					 XmNrightOffset		= uaf$c_labval_widget_offset;
 1114 (4)					 XmNrightWidget		= XmText entry_pgflquo_value;
 1115 (4)					 }; };
 1116 (4)	object	entry_pgflquo_value	: XmText
 1117 (4)			{arguments	{XmNmaxLength		= uaf$c_longword_cols;
 1118 (4)					 XmNtopAttachment	= XmATTACH_WIDGET;
 1119 (4)					 XmNtopOffset		= uaf$c_topbot_widget_offset;
 1120 (4)					 XmNtopWidget		= XmText entry_fillm_value;
 1121 (4)					 XmNleftAttachment	= XmATTACH_POSITION;
 1122 (4)					 XmNleftPosition	= uaf$c_4col_column_4_with_lab;
 1123 (4)					 XmNcolumns		= uaf$c_longword_cols;
 1124 (4)					 XmNrows		= 1;
 1125 (4)					 XmNmarginHeight	= 0;
 1126 (4)					 XmNresizeHeight	= false;
 1127 (4)					 };
 1128 (4)			 callbacks	{MrmNcreateCallback	= procedure create_proc (uaf$c_entry_pgflquo); };
 1129 (4)			 };
 1130 (4)	
 1131 (4)	object	entry_astlm_label	: XmLabel
 1132 (4)			{arguments	{XmNlabelString		= uaf$t_astlm;
 1133 (4)					 XmNtopAttachment	= XmATTACH_WIDGET;
 1134 (4)					 XmNtopOffset		= uaf$c_topbot_widget_offset;
 1135 (4)					 XmNtopWidget		= XmText entry_wsdef_value;
 1136 (4)					 XmNrightAttachment	= XmATTACH_WIDGET;
 1137 (4)					 XmNrightOffset		= uaf$c_labval_widget_offset;
 1138 (4)					 XmNrightWidget		= XmText entry_astlm_value;
 1139 (4)					 }; };
 1140 (4)	object	entry_astlm_value	: XmText
 1141 (4)			{arguments	{XmNmaxLength		= uaf$c_word_cols;
 1142 (4)					 XmNtopAttachment	= XmATTACH_WIDGET;
 1143 (4)					 XmNtopOffset		= uaf$c_topbot_widget_offset;

Motif Uil Compiler V1.1-000 	22-NOV-1993 11:29:56.26		 Page 46
Module: authorize 	 Version: X1.0
 
 1144 (4)					 XmNtopWidget		= XmText entry_wsdef_value;
 1145 (4)					 XmNleftAttachment	= XmATTACH_POSITION;
 1146 (4)					 XmNleftPosition	= uaf$c_4col_column_1_with_lab;
 1147 (4)					 XmNcolumns		= uaf$c_word_cols;
 1148 (4)					 XmNrows		= 1;
 1149 (4)					 XmNmarginHeight	= 0;
 1150 (4)					 XmNresizeHeight	= false;
 1151 (4)					 };
 1152 (4)			 callbacks	{MrmNcreateCallback	= procedure create_proc (uaf$c_entry_astlm); };
 1153 (4)			 };
 1154 (4)	object	entry_tqelm_label	: XmLabel
 1155 (4)			{arguments	{XmNlabelString		= uaf$t_tqelm;
 1156 (4)					 XmNtopAttachment	= XmATTACH_WIDGET;
 1157 (4)					 XmNtopOffset		= uaf$c_topbot_widget_offset;
 1158 (4)					 XmNtopWidget		= XmText entry_wsdef_value;
 1159 (4)					 XmNrightAttachment	= XmATTACH_WIDGET;
 1160 (4)					 XmNrightOffset		= uaf$c_labval_widget_offset;
 1161 (4)					 XmNrightWidget		= XmText entry_tqelm_value;
 1162 (4)					 }; };
 1163 (4)	object	entry_tqelm_value	: XmText
 1164 (4)			{arguments	{XmNmaxLength		= uaf$c_word_cols;
 1165 (4)					 XmNtopAttachment	= XmATTACH_WIDGET;
 1166 (4)					 XmNtopOffset		= uaf$c_topbot_widget_offset;
 1167 (4)					 XmNtopWidget		= XmText entry_wsdef_value;
 1168 (4)					 XmNleftAttachment	= XmATTACH_POSITION;
 1169 (4)					 XmNleftPosition	= uaf$c_4col_column_2_with_lab;
 1170 (4)					 XmNcolumns		= uaf$c_word_cols;
 1171 (4)					 XmNrows		= 1;
 1172 (4)					 XmNmarginHeight	= 0;
 1173 (4)					 XmNresizeHeight	= false;
 1174 (4)					 };
 1175 (4)			 callbacks	{MrmNcreateCallback	= procedure create_proc (uaf$c_entry_tqelm); };
 1176 (4)			 };
 1177 (4)	object	entry_enqlm_label	: XmLabel
 1178 (4)			{arguments	{XmNlabelString		= uaf$t_enqlm;
 1179 (4)					 XmNtopAttachment	= XmATTACH_WIDGET;
 1180 (4)					 XmNtopOffset		= uaf$c_topbot_widget_offset;
 1181 (4)					 XmNtopWidget		= XmText entry_wsdef_value;
 1182 (4)					 XmNrightAttachment	= XmATTACH_WIDGET;
 1183 (4)					 XmNrightOffset		= uaf$c_labval_widget_offset;
 1184 (4)					 XmNrightWidget		= XmText entry_enqlm_value;
 1185 (4)					 }; };
 1186 (4)	object	entry_enqlm_value	: XmText
 1187 (4)			{arguments	{XmNmaxLength		= uaf$c_word_cols;
 1188 (4)					 XmNtopAttachment	= XmATTACH_WIDGET;
 1189 (4)					 XmNtopOffset		= uaf$c_topbot_widget_offset;
 1190 (4)					 XmNtopWidget		= XmText entry_wsdef_value;
 1191 (4)					 XmNleftAttachment	= XmATTACH_POSITION;
 1192 (4)					 XmNleftPosition	= uaf$c_4col_column_3_with_lab;
 1193 (4)					 XmNcolumns		= uaf$c_word_cols;
 1194 (4)					 XmNrows		= 1;
 1195 (4)					 XmNmarginHeight	= 0;
 1196 (4)					 XmNresizeHeight	= false;
 1197 (4)					 };
 1198 (4)			 callbacks	{MrmNcreateCallback	= procedure create_proc (uaf$c_entry_enqlm); };
 1199 (4)			 };
 1200 (4)	object	entry_jtquota_label	: XmLabel

Motif Uil Compiler V1.1-000 	22-NOV-1993 11:29:56.26		 Page 47
Module: authorize 	 Version: X1.0
 
 1201 (4)			{arguments	{XmNlabelString		= uaf$t_jtquota;
 1202 (4)					 XmNtopAttachment	= XmATTACH_WIDGET;
 1203 (4)					 XmNtopOffset		= uaf$c_topbot_widget_offset;
 1204 (4)					 XmNtopWidget		= XmText entry_wsdef_value;
 1205 (4)					 XmNrightAttachment	= XmATTACH_WIDGET;
 1206 (4)					 XmNrightOffset		= uaf$c_labval_widget_offset;
 1207 (4)					 XmNrightWidget		= XmText entry_jtquota_value;
 1208 (4)					 }; };
 1209 (4)	object	entry_jtquota_value	: XmText
 1210 (4)			{arguments	{XmNmaxLength		= uaf$c_word_cols;
 1211 (4)					 XmNtopAttachment	= XmATTACH_WIDGET;
 1212 (4)					 XmNtopOffset		= uaf$c_topbot_widget_offset;
 1213 (4)					 XmNtopWidget		= XmText entry_wsdef_value;
 1214 (4)					 XmNleftAttachment	= XmATTACH_POSITION;
 1215 (4)					 XmNleftPosition	= uaf$c_4col_column_4_with_lab;
 1216 (4)					 XmNcolumns		= uaf$c_word_cols;
 1217 (4)					 XmNrows		= 1;
 1218 (4)					 XmNmarginHeight	= 0;
 1219 (4)					 XmNresizeHeight	= false;
 1220 (4)					 };
 1221 (4)			 callbacks	{MrmNcreateCallback	= procedure create_proc (uaf$c_entry_jtquota); };
 1222 (4)			 };

Motif Uil Compiler V1.1-000 	22-NOV-1993 11:29:56.26		 Page 48
Module: authorize 	 Version: X1.0
 
 1223 (4)	 
 1224 (4)	! Define the objects for the login flags area.
 1225 (4)	
 1226 (4)	object	entry_login_flag_label	: XmLabel
 1227 (4)			{arguments	{XmNlabelString		= uaf$t_login_flags;
 1228 (4)					 XmNtopAttachment	= XmATTACH_WIDGET;
 1229 (4)					 XmNtopOffset		= uaf$c_top_offset;
 1230 (4)					 XmNtopWidget		= XmText entry_astlm_value;
 1231 (4)					 XmNleftAttachment	= XmATTACH_FORM;
 1232 (4)					 XmNleftOffset		= uaf$c_left_offset;
 1233 (4)					 }; };
 1234 (4)	object	entry_login_flags	: XmScrolledWindow
 1235 (4)			{arguments	{XmNtopAttachment	= XmATTACH_WIDGET;
 1236 (4)					 XmNtopOffset		= uaf$c_topbot_widget_offset;
 1237 (4)					 XmNtopWidget		= XmLabel entry_login_flag_label;
 1238 (4)					 XmNbottomAttachment	= XmATTACH_WIDGET;
 1239 (4)					 XmNbottomOffset	= uaf$c_bottom_offset;
 1240 (4)					 XmNbottomWidget	= XmPushButton entry_ok_previous_button;
 1241 (4)					 XmNrightAttachment	= XmATTACH_POSITION;
 1242 (4)					 XmNrightPosition	= uaf$c_4col_column_2;
 1243 (4)					 XmNrightOffset		= uaf$c_right_offset;
 1244 (4)					 XmNleftAttachment	= XmATTACH_FORM;
 1245 (4)					 XmNleftOffset		= uaf$c_left_offset;
 1246 (4)					 XmNscrollingPolicy	= XmCONSTANT;
 1247 (4)					 XmNscrollBarDisplayPolicy	= XmSTATIC;
 1248 (4)					 XmNvisualPolicy	= XmVARIABLE;
 1249 (4)					 };
 1250 (4)			 controls	{XmList			entry_login_flag_list; };
 1251 (4)			 };
 1252 (4)	object	entry_login_flag_list	: XmList
 1253 (4)			{arguments	{XmNvisibleItemCount	= 10;
 1254 (4)					 XmNitems		= uaf$t_login_flag_list;
 1255 (4)					 XmNautomaticSelection	= false;
 1256 (4)					 XmNselectionPolicy	= XmMULTIPLE_SELECT;
 1257 (4)					 };
 1258 (4)			 callbacks	{MrmNcreateCallback		= procedure create_proc (uaf$c_entry_login_flag_list);
 1259 (4)					 XmNmultipleSelectionCallback	= procedure list_proc (uaf$c_entry_login_flag_list); };
 1260 (4)			 };
 1261 (4)	
 1262 (4)	! Define the objects for the authorized privilege display.
 1263 (4)	
 1264 (4)	object	entry_auth_priv_label	: XmLabel
 1265 (4)			{arguments	{XmNlabelString		= uaf$t_authorized_privileges;
 1266 (4)					 XmNtopAttachment	= XmATTACH_WIDGET;
 1267 (4)					 XmNtopOffset		= uaf$c_top_offset;
 1268 (4)					 XmNtopWidget		= XmText entry_astlm_value;
 1269 (4)					 XmNleftAttachment	= XmATTACH_POSITION;
 1270 (4)					 XmNleftPosition	= uaf$c_4col_column_2;
 1271 (4)					 }; };
 1272 (4)	object	entry_auth_privileges	: XmScrolledWindow
 1273 (4)			{arguments	{XmNtopAttachment	= XmATTACH_WIDGET;
 1274 (4)					 XmNtopOffset		= uaf$c_topbot_widget_offset;
 1275 (4)					 XmNtopWidget		= XmLabel entry_login_flag_label;
 1276 (4)					 XmNbottomAttachment	= XmATTACH_WIDGET;
 1277 (4)					 XmNbottomOffset	= uaf$c_bottom_offset;
 1278 (4)					 XmNbottomWidget	= XmPushButton entry_ok_previous_button;
 1279 (4)					 XmNrightAttachment	= XmATTACH_POSITION;

Motif Uil Compiler V1.1-000 	22-NOV-1993 11:29:56.26		 Page 49
Module: authorize 	 Version: X1.0
 
 1280 (4)					 XmNrightPosition	= uaf$c_4col_column_3;
 1281 (4)					 XmNrightOffset		= uaf$c_right_offset;
 1282 (4)					 XmNleftAttachment	= XmATTACH_POSITION;
 1283 (4)					 XmNleftPosition	= uaf$c_4col_column_2;
 1284 (4)					 XmNscrollingPolicy	= XmCONSTANT;
 1285 (4)					 XmNvisualPolicy	= XmVARIABLE;
 1286 (4)					 };
 1287 (4)			 controls	{XmList			entry_auth_priv_list; };
 1288 (4)			 };
 1289 (4)	object	entry_auth_priv_list	: XmList
 1290 (4)			{arguments	{XmNvisibleItemCount	= 10;
 1291 (4)					 XmNitems		= uaf$t_privilege_list;
 1292 (4)					 XmNautomaticSelection	= false;
 1293 (4)					 XmNselectionPolicy	= XmMULTIPLE_SELECT;
 1294 (4)					 };
 1295 (4)			 callbacks	{MrmNcreateCallback		= procedure create_proc (uaf$c_entry_auth_priv_list);
 1296 (4)					 XmNmultipleSelectionCallback	= procedure list_proc (uaf$c_entry_auth_priv_list); };
 1297 (4)			 };
 1298 (4)	
 1299 (4)	! Define the objects for the default privilege display.
 1300 (4)	
 1301 (4)	object	entry_def_priv_label	: XmLabel
 1302 (4)			{arguments	{XmNlabelString		= uaf$t_default_privileges;
 1303 (4)					 XmNtopAttachment	= XmATTACH_WIDGET;
 1304 (4)					 XmNtopOffset		= uaf$c_top_offset;
 1305 (4)					 XmNtopWidget		= XmText entry_astlm_value;
 1306 (4)					 XmNleftAttachment	= XmATTACH_POSITION;
 1307 (4)					 XmNleftPosition	= uaf$c_4col_column_3;
 1308 (4)					 }; };
 1309 (4)	object	entry_def_privileges	: XmScrolledWindow
 1310 (4)			{arguments	{XmNtopAttachment	= XmATTACH_WIDGET;
 1311 (4)					 XmNtopOffset		= uaf$c_topbot_widget_offset;
 1312 (4)					 XmNtopWidget		= XmLabel entry_login_flag_label;
 1313 (4)					 XmNbottomAttachment	= XmATTACH_WIDGET;
 1314 (4)					 XmNbottomOffset	= uaf$c_bottom_offset;
 1315 (4)					 XmNbottomWidget	= XmPushButton entry_ok_previous_button;
 1316 (4)					 XmNrightAttachment	= XmATTACH_POSITION;
 1317 (4)					 XmNrightPosition	= uaf$c_4col_column_4;
 1318 (4)					 XmNleftAttachment	= XmATTACH_POSITION;
 1319 (4)					 XmNleftPosition	= uaf$c_4col_column_3;
 1320 (4)					 XmNscrollingPolicy	= XmCONSTANT;
 1321 (4)					 XmNvisualPolicy	= XmVARIABLE;
 1322 (4)					 };
 1323 (4)			 controls	{XmList			entry_def_priv_list; };
 1324 (4)			 };
 1325 (4)	object	entry_def_priv_list	: XmList
 1326 (4)			{arguments	{XmNvisibleItemCount	= 10;
 1327 (4)					 XmNitems		= uaf$t_privilege_list;
 1328 (4)					 XmNautomaticSelection	= false;
 1329 (4)					 XmNselectionPolicy	= XmMULTIPLE_SELECT;
 1330 (4)					 };
 1331 (4)			 callbacks	{MrmNcreateCallback		= procedure create_proc (uaf$c_entry_def_priv_list);
 1332 (4)					 XmNmultipleSelectionCallback	= procedure list_proc (uaf$c_entry_def_priv_list); };
 1333 (4)			 };
 1334 (4)	
 1335 (4)	object	entry_primary_day_label	: XmLabel
 1336 (4)			{arguments	{XmNlabelString		= uaf$t_primary_days;

Motif Uil Compiler V1.1-000 	22-NOV-1993 11:29:56.26		 Page 50
Module: authorize 	 Version: X1.0
 
 1337 (4)					 XmNtopAttachment	= XmATTACH_WIDGET;
 1338 (4)					 XmNtopOffset		= uaf$c_top_offset;
 1339 (4)					 XmNtopWidget		= XmText entry_astlm_value;
 1340 (4)					 XmNleftAttachment	= XmATTACH_POSITION;
 1341 (4)					 XmNleftPosition	= uaf$c_4col_column_4;
 1342 (4)					 }; };
 1343 (4)	object	entry_primary_days	: XmScrolledWindow
 1344 (4)			{arguments	{XmNtopAttachment	= XmATTACH_WIDGET;
 1345 (4)					 XmNtopOffset		= uaf$c_topbot_widget_offset;
 1346 (4)					 XmNtopWidget		= XmLabel entry_login_flag_label;
 1347 (4)					 XmNbottomAttachment	= XmATTACH_WIDGET;
 1348 (4)					 XmNbottomOffset	= uaf$c_bottom_offset;
 1349 (4)					 XmNbottomWidget	= XmPushButton entry_ok_previous_button;
 1350 (4)					 XmNrightAttachment	= XmATTACH_FORM;
 1351 (4)					 XmNrightOffset		= uaf$c_right_offset;
 1352 (4)					 XmNleftAttachment	= XmATTACH_POSITION;
 1353 (4)					 XmNleftPosition	= uaf$c_4col_column_4;
 1354 (4)					 XmNscrollingPolicy	= XmCONSTANT;
 1355 (4)					 XmNvisualPolicy	= XmVARIABLE;
 1356 (4)					 };
 1357 (4)			 controls	{XmList			entry_primeday_list; };
 1358 (4)			 };
 1359 (4)	object	entry_primeday_list	: XmList
 1360 (4)			{arguments	{XmNvisibleItemCount	= 10;
 1361 (4)					 XmNitems		= uaf$t_primeday_list;
 1362 (4)					 XmNautomaticSelection	= false;
 1363 (4)					 XmNselectionPolicy	= XmMULTIPLE_SELECT;
 1364 (4)					 };
 1365 (4)			 callbacks	{MrmNcreateCallback		= procedure create_proc (uaf$c_entry_primeday_list);
 1366 (4)					 XmNmultipleSelectionCallback	= procedure list_proc (uaf$c_entry_primeday_list); };
 1367 (4)			 };

Motif Uil Compiler V1.1-000 	22-NOV-1993 11:29:56.26		 Page 51
Module: authorize 	 Version: X1.0
 
 1368 (4)	 
 1369 (4)	! Define the objects for the entry window push buttons.
 1370 (4)	
 1371 (4)	object	entry_ok_previous_button	: XmPushButton
 1372 (4)			{arguments	{XmNlabelType		= XmPIXMAP;
 1373 (4)					 XmNlabelPixmap		= left_arrow_icon;
 1374 (4)					 XmNbottomAttachment	= XmATTACH_FORM;
 1375 (4)					 XmNbottomOffset	= uaf$c_bottom_offset;
 1376 (4)					 XmNleftAttachment	= XmATTACH_FORM;
 1377 (4)					 XmNleftOffset		= uaf$c_left_offset;
 1378 (4)					 };
 1379 (4)			 callbacks	{XmNactivateCallback	= procedure activate_proc (uaf$c_entry_ok_previous); };
 1380 (4)			 };
 1381 (4)	object	entry_ok_button		: XmPushButton
 1382 (4)			{arguments	{XmNlabelString		= uaf$t_entry_ok;
 1383 (4)					 XmNbottomAttachment	= XmATTACH_FORM;
 1384 (4)					 XmNbottomOffset	= uaf$c_bottom_offset;
 1385 (4)					 XmNleftAttachment	= XmATTACH_WIDGET;
 1386 (4)					 XmNleftOffset		= 1;
 1387 (4)					 XmNleftWidget		= XmPushButton entry_ok_previous_button;
 1388 (4)					 };
 1389 (4)			 callbacks	{XmNactivateCallback	= procedure activate_proc (uaf$c_entry_ok); };
 1390 (4)			 };
 1391 (4)	object	entry_ok_next_button	: XmPushButton
 1392 (4)			{arguments	{XmNlabelType		= XmPIXMAP;
 1393 (4)					 XmNlabelPixmap		= right_arrow_icon;
 1394 (4)					 XmNbottomAttachment	= XmATTACH_FORM;
 1395 (4)					 XmNbottomOffset	= uaf$c_bottom_offset;
 1396 (4)					 XmNleftAttachment	= XmATTACH_WIDGET;
 1397 (4)					 XmNleftOffset		= 1;
 1398 (4)					 XmNleftWidget		= XmPushButton entry_ok_button;
 1399 (4)					 };
 1400 (4)			 callbacks	{XmNactivateCallback	= procedure activate_proc (uaf$c_entry_ok_next); };
 1401 (4)			 };
 1402 (4)	object	entry_cancel_button	: XmPushButton
 1403 (4)			{arguments	{XmNlabelString		= uaf$t_entry_cancel;
 1404 (4)					 XmNbottomAttachment	= XmATTACH_FORM;
 1405 (4)					 XmNbottomOffset	= uaf$c_bottom_offset;
 1406 (4)					 XmNleftAttachment	= XmATTACH_WIDGET;
 1407 (4)					 XmNleftOffset		= uaf$c_left_offset;
 1408 (4)					 XmNleftWidget		= XmPushButton entry_ok_next_button;
 1409 (4)					 };
 1410 (4)			 callbacks	{XmNactivateCallback	= procedure activate_proc (uaf$c_entry_cancel); };
 1411 (4)			 };
 1412 (4)	object	entry_apply_template_button	: XmPushButton
 1413 (4)			{arguments	{XmNlabelString		= uaf$t_entry_apply_template;
 1414 (4)					 XmNbottomAttachment	= XmATTACH_FORM;
 1415 (4)					 XmNbottomOffset	= uaf$c_bottom_offset;
 1416 (4)					 XmNleftAttachment	= XmATTACH_WIDGET;
 1417 (4)					 XmNleftOffset		= uaf$c_left_offset;
 1418 (4)					 XmNleftWidget		= XmPushButton entry_cancel_button;
 1419 (4)					 };
 1420 (4)			 callbacks	{XmNactivateCallback	= procedure activate_proc (uaf$c_entry_apply_template); };
 1421 (4)			 };
 1422 (4)	object	entry_rename_button	: XmPushButton
 1423 (4)			{arguments	{XmNlabelString		= uaf$t_entry_rename;
 1424 (4)					 XmNbottomAttachment	= XmATTACH_FORM;

Motif Uil Compiler V1.1-000 	22-NOV-1993 11:29:56.26		 Page 52
Module: authorize 	 Version: X1.0
 
 1425 (4)					 XmNbottomOffset	= uaf$c_bottom_offset;
 1426 (4)					 XmNleftAttachment	= XmATTACH_WIDGET;
 1427 (4)					 XmNleftOffset		= uaf$c_left_offset;
 1428 (4)					 XmNleftWidget		= XmPushButton entry_apply_template_button;
 1429 (4)					 XmNsensitive		= false;
 1430 (4)					 };
 1431 (4)			 callbacks	{XmNactivateCallback	= procedure activate_proc (uaf$c_entry_rename); };
 1432 (4)			 };
 1433 (4)	object	entry_copy_button	: XmPushButton
 1434 (4)			{arguments	{XmNlabelString		= uaf$t_entry_copy;
 1435 (4)					 XmNbottomAttachment	= XmATTACH_FORM;
 1436 (4)					 XmNbottomOffset	= uaf$c_bottom_offset;
 1437 (4)					 XmNleftAttachment	= XmATTACH_WIDGET;
 1438 (4)					 XmNleftOffset		= uaf$c_left_offset;
 1439 (4)					 XmNleftWidget		= XmPushButton entry_rename_button;
 1440 (4)					 XmNsensitive		= false;
 1441 (4)					 };
 1442 (4)			 callbacks	{XmNactivateCallback	= procedure activate_proc (uaf$c_entry_copy); };
 1443 (4)			 };

Motif Uil Compiler V1.1-000 	22-NOV-1993 11:29:56.26		 Page 53
Module: authorize 	 Version: X1.0
 
 1444 (4)	 
 1445 (4)	! Define the objects needed for the entry window popup menu box.
 1446 (4)	
 1447 (4)	object	entry_popup_menu		: XmPopupMenu
 1448 (4)			{arguments	{XmNorientation		= XmVERTICAL; };
 1449 (4)			 controls	{XmPushButton		primary_access_restrictions;
 1450 (4)					 XmPushButton		secondary_access_restrictions;
 1451 (4)					};
 1452 (4)			};
 1453 (4)	
 1454 (4)	object	primary_access_restrictions	: XmPushButton
 1455 (4)			{arguments	{XmNlabelString		= uaf$t_entry_access_primary; };
 1456 (4)			 callbacks	{XmNactivateCallback	= procedure activate_proc (uaf$c_entry_access_primary); };
 1457 (4)			};
 1458 (4)	
 1459 (4)	object	secondary_access_restrictions	: XmPushButton
 1460 (4)			{arguments	{XmNlabelString		= uaf$t_entry_access_secondary; };
 1461 (4)			 callbacks	{XmNactivateCallback	= procedure activate_proc (uaf$c_entry_access_secondary); };
 1462 (4)			};
   53 (0)	include file 'sys$disk:[]uaf_access_window';
    1 (5)	!module	authorize_access_window
    2 (5)	!	version		= 'X1.0'
    3 (5)	!	names		= case_insensitive
    4 (5)	
    5 (5)	! Strings defined for the access restriction lists.  These strings represent
    6 (5)	! hourly increments for a 24 hour day.
    7 (5)	
    8 (5)	value
    9 (5)		uaf$t_hour_list			: string_table	(' 00:00 - 01:00 ',
   10 (5)								 ' 01:00 - 02:00 ',
   11 (5)								 ' 02:00 - 03:00 ',
   12 (5)								 ' 03:00 - 04:00 ',
   13 (5)								 ' 04:00 - 05:00 ',
   14 (5)								 ' 05:00 - 06:00 ',
   15 (5)								 ' 06:00 - 07:00 ',
   16 (5)								 ' 07:00 - 08:00 ',
   17 (5)								 ' 08:00 - 09:00 ',
   18 (5)								 ' 09:00 - 10:00 ',
   19 (5)								 ' 10:00 - 11:00 ',
   20 (5)								 ' 11:00 - 12:00 ',
   21 (5)								 ' 12:00 - 13:00 ',
   22 (5)								 ' 13:00 - 14:00 ',
   23 (5)								 ' 14:00 - 15:00 ',
   24 (5)								 ' 15:00 - 16:00 ',
   25 (5)								 ' 16:00 - 17:00 ',
   26 (5)								 ' 17:00 - 18:00 ',
   27 (5)								 ' 18:00 - 19:00 ',
   28 (5)								 ' 19:00 - 20:00 ',
   29 (5)								 ' 20:00 - 21:00 ',
   30 (5)								 ' 21:00 - 22:00 ',
   31 (5)								 ' 22:00 - 23:00 ',
   32 (5)								 ' 23:00 - 00:00 ');
   33 (5)	
   34 (5)	! Strings for the access restriction dialog box.
   35 (5)	
   36 (5)		uaf$t_pri_access_restriction_title	: compound_string	("Authorization entry primary access restrictions");
   37 (5)		uaf$t_pri_access_ok			: compound_string	("OK");

Motif Uil Compiler V1.1-000 	22-NOV-1993 11:29:56.26		 Page 54
Module: authorize 	 Version: X1.0
 
   38 (5)		uaf$t_pri_access_cancel			: compound_string	("Cancel");
   39 (5)		uaf$t_sec_access_restriction_title	: compound_string	("Authorization entry secondary access restrictions");
   40 (5)		uaf$t_sec_access_ok			: compound_string	("OK");
   41 (5)		uaf$t_sec_access_cancel			: compound_string	("Cancel");
   42 (5)		uaf$t_local_access			: compound_string	("Local Access:");
   43 (5)		uaf$t_batch_access			: compound_string	("Batch Access:");
   44 (5)		uaf$t_dialup_access			: compound_string	("Dialup Access:");
   45 (5)		uaf$t_remote_access			: compound_string	("Remote Access:");
   46 (5)		uaf$t_network_access			: compound_string	("Network Access:");

Motif Uil Compiler V1.1-000 	22-NOV-1993 11:29:56.26		 Page 55
Module: authorize 	 Version: X1.0
 
   47 (5)	 
   48 (5)	! Define the primary access restriction display.
   49 (5)	
   50 (5)	object	pri_access_restriction_window	: XmFormDialog
   51 (5)			{arguments	{XmNdialogTitle		= uaf$t_pri_access_restriction_title;
   52 (5)					 XmNcancelButton	= pri_access_cancel_button;
   53 (5)					 XmNdefaultButton	= pri_access_ok_button;
   54 (5)					 XmNunitType		= XmPIXELS;
   55 (5)					 XmNautoUnmanage	= false;
   56 (5)					 XmNdefaultPosition	= false;
   57 (5)					 };
   58 (5)			 controls	{XmLabel		pri_access_local_label;
   59 (5)					 XmScrolledWindow	pri_access_local;
   60 (5)					 XmLabel		pri_access_batch_label;
   61 (5)					 XmScrolledWindow	pri_access_batch;
   62 (5)					 XmLabel		pri_access_dialup_label;
   63 (5)					 XmScrolledWindow	pri_access_dialup;
   64 (5)					 XmLabel		pri_access_remote_label;
   65 (5)					 XmScrolledWindow	pri_access_remote;
   66 (5)					 XmLabel		pri_access_network_label;
   67 (5)					 XmScrolledWindow	pri_access_network;
   68 (5)	
   69 (5)					 XmPushButton	pri_access_ok_button;
   70 (5)					 XmPushButton	pri_access_cancel_button;
   71 (5)					 };
   72 (5)			};
   73 (5)	
   74 (5)	object	pri_access_local_label	: XmLabel
   75 (5)			{arguments	{XmNlabelString		= uaf$t_local_access;
   76 (5)					 XmNtopAttachment	= XmATTACH_FORM;
   77 (5)					 XmNtopOffset		= uaf$c_top_offset;
   78 (5)					 XmNleftAttachment	= XmATTACH_FORM;
   79 (5)					 XmNleftOffset		= uaf$c_left_offset;
   80 (5)					 }; };
   81 (5)	object	pri_access_local		: XmScrolledWindow
   82 (5)			{arguments	{XmNtopAttachment	= XmATTACH_WIDGET;
   83 (5)					 XmNtopOffset		= uaf$c_topbot_widget_offset;
   84 (5)					 XmNtopWidget		= XmLabel pri_access_local_label;
   85 (5)					 XmNbottomAttachment	= XmATTACH_WIDGET;
   86 (5)					 XmNbottomOffset	= uaf$c_bottom_offset;
   87 (5)					 XmNbottomWidget	= XmPushButton pri_access_ok_button;
   88 (5)					 XmNleftAttachment	= XmATTACH_FORM;
   89 (5)					 XmNleftOffset		= uaf$c_left_offset;
   90 (5)					 XmNscrollingPolicy	= XmCONSTANT;
   91 (5)					 XmNscrollBarDisplayPolicy	= XmSTATIC;
   92 (5)					 XmNvisualPolicy	= XmVARIABLE;
   93 (5)					 };
   94 (5)			 controls	{XmList			pri_access_local_list; };
   95 (5)			 };
   96 (5)	object	pri_access_local_list	: XmList
   97 (5)			{arguments	{XmNvisibleItemCount	= 12;
   98 (5)					 XmNitems		= uaf$t_hour_list;
   99 (5)					 XmNautomaticSelection	= false;
  100 (5)					 XmNselectionPolicy	= XmMULTIPLE_SELECT;
  101 (5)					 };
  102 (5)			 callbacks	{MrmNcreateCallback		= procedure create_proc (uaf$c_access_pri_local_list);
  103 (5)					 XmNmultipleSelectionCallback	= procedure list_proc (uaf$c_access_pri_local_list); };

Motif Uil Compiler V1.1-000 	22-NOV-1993 11:29:56.26		 Page 56
Module: authorize 	 Version: X1.0
 
  104 (5)			 };
  105 (5)	
  106 (5)	object	pri_access_batch_label	: XmLabel
  107 (5)			{arguments	{XmNlabelString		= uaf$t_batch_access;
  108 (5)					 XmNtopAttachment	= XmATTACH_FORM;
  109 (5)					 XmNtopOffset		= uaf$c_top_offset;
  110 (5)					 XmNleftAttachment	= XmATTACH_WIDGET;
  111 (5)					 XmNleftOffset		= uaf$c_left_offset;
  112 (5)					 XmNleftWidget		= XmScrolledWindow pri_access_local;
  113 (5)					 }; };
  114 (5)	object	pri_access_batch		: XmScrolledWindow
  115 (5)			{arguments	{XmNtopAttachment	= XmATTACH_WIDGET;
  116 (5)					 XmNtopOffset		= uaf$c_topbot_widget_offset;
  117 (5)					 XmNtopWidget		= XmLabel pri_access_batch_label;
  118 (5)					 XmNbottomAttachment	= XmATTACH_WIDGET;
  119 (5)					 XmNbottomOffset	= uaf$c_bottom_offset;
  120 (5)					 XmNbottomWidget	= XmPushButton pri_access_ok_button;
  121 (5)					 XmNleftAttachment	= XmATTACH_WIDGET;
  122 (5)					 XmNleftOffset		= uaf$c_left_offset;
  123 (5)					 XmNleftWidget		= XmScrolledWindow pri_access_local;
  124 (5)					 XmNscrollingPolicy	= XmCONSTANT;
  125 (5)					 XmNscrollBarDisplayPolicy	= XmSTATIC;
  126 (5)					 XmNvisualPolicy	= XmVARIABLE;
  127 (5)					 };
  128 (5)			 controls	{XmList			pri_access_batch_list; };
  129 (5)			 };
  130 (5)	object	pri_access_batch_list	: XmList
  131 (5)			{arguments	{XmNvisibleItemCount	= 12;
  132 (5)					 XmNitems		= uaf$t_hour_list;
  133 (5)					 XmNautomaticSelection	= false;
  134 (5)					 XmNselectionPolicy	= XmMULTIPLE_SELECT;
  135 (5)					 };
  136 (5)			 callbacks	{MrmNcreateCallback		= procedure create_proc (uaf$c_access_pri_batch_list);
  137 (5)					 XmNmultipleSelectionCallback	= procedure list_proc (uaf$c_access_pri_batch_list); };
  138 (5)			 };
  139 (5)	
  140 (5)	object	pri_access_dialup_label	: XmLabel
  141 (5)			{arguments	{XmNlabelString		= uaf$t_dialup_access;
  142 (5)					 XmNtopAttachment	= XmATTACH_FORM;
  143 (5)					 XmNtopOffset		= uaf$c_top_offset;
  144 (5)					 XmNleftAttachment	= XmATTACH_WIDGET;
  145 (5)					 XmNleftOffset		= uaf$c_left_offset;
  146 (5)					 XmNleftWidget		= XmScrolledWindow pri_access_batch;
  147 (5)					 }; };
  148 (5)	object	pri_access_dialup		: XmScrolledWindow
  149 (5)			{arguments	{XmNtopAttachment	= XmATTACH_WIDGET;
  150 (5)					 XmNtopOffset		= uaf$c_topbot_widget_offset;
  151 (5)					 XmNtopWidget		= XmLabel pri_access_dialup_label;
  152 (5)					 XmNbottomAttachment	= XmATTACH_WIDGET;
  153 (5)					 XmNbottomOffset	= uaf$c_bottom_offset;
  154 (5)					 XmNbottomWidget	= XmPushButton pri_access_ok_button;
  155 (5)					 XmNleftAttachment	= XmATTACH_WIDGET;
  156 (5)					 XmNleftOffset		= uaf$c_left_offset;
  157 (5)					 XmNleftWidget		= XmScrolledWindow pri_access_batch;
  158 (5)					 XmNscrollingPolicy	= XmCONSTANT;
  159 (5)					 XmNscrollBarDisplayPolicy	= XmSTATIC;
  160 (5)					 XmNvisualPolicy	= XmVARIABLE;

Motif Uil Compiler V1.1-000 	22-NOV-1993 11:29:56.26		 Page 57
Module: authorize 	 Version: X1.0
 
  161 (5)					 };
  162 (5)			 controls	{XmList			pri_access_dialup_list; };
  163 (5)			 };
  164 (5)	object	pri_access_dialup_list	: XmList
  165 (5)			{arguments	{XmNvisibleItemCount	= 12;
  166 (5)					 XmNitems		= uaf$t_hour_list;
  167 (5)					 XmNautomaticSelection	= false;
  168 (5)					 XmNselectionPolicy	= XmMULTIPLE_SELECT;
  169 (5)					 };
  170 (5)			 callbacks	{MrmNcreateCallback		= procedure create_proc (uaf$c_access_pri_dialup_list);
  171 (5)					 XmNmultipleSelectionCallback	= procedure list_proc (uaf$c_access_pri_dialup_list); };
  172 (5)			 };
  173 (5)	
  174 (5)	object	pri_access_remote_label	: XmLabel
  175 (5)			{arguments	{XmNlabelString		= uaf$t_remote_access;
  176 (5)					 XmNtopAttachment	= XmATTACH_FORM;
  177 (5)					 XmNtopOffset		= uaf$c_top_offset;
  178 (5)					 XmNleftAttachment	= XmATTACH_WIDGET;
  179 (5)					 XmNleftOffset		= uaf$c_left_offset;
  180 (5)					 XmNleftWidget		= XmScrolledWindow pri_access_dialup;
  181 (5)					 }; };
  182 (5)	object	pri_access_remote		: XmScrolledWindow
  183 (5)			{arguments	{XmNtopAttachment	= XmATTACH_WIDGET;
  184 (5)					 XmNtopOffset		= uaf$c_topbot_widget_offset;
  185 (5)					 XmNtopWidget		= XmLabel pri_access_remote_label;
  186 (5)					 XmNbottomAttachment	= XmATTACH_WIDGET;
  187 (5)					 XmNbottomOffset	= uaf$c_bottom_offset;
  188 (5)					 XmNbottomWidget	= XmPushButton pri_access_ok_button;
  189 (5)					 XmNleftAttachment	= XmATTACH_WIDGET;
  190 (5)					 XmNleftOffset		= uaf$c_left_offset;
  191 (5)					 XmNleftWidget		= XmScrolledWindow pri_access_dialup;
  192 (5)					 XmNscrollingPolicy	= XmCONSTANT;
  193 (5)					 XmNscrollBarDisplayPolicy	= XmSTATIC;
  194 (5)					 XmNvisualPolicy	= XmVARIABLE;
  195 (5)					 };
  196 (5)			 controls	{XmList			pri_access_remote_list; };
  197 (5)			 };
  198 (5)	object	pri_access_remote_list	: XmList
  199 (5)			{arguments	{XmNvisibleItemCount	= 12;
  200 (5)					 XmNitems		= uaf$t_hour_list;
  201 (5)					 XmNautomaticSelection	= false;
  202 (5)					 XmNselectionPolicy	= XmMULTIPLE_SELECT;
  203 (5)					 };
  204 (5)			 callbacks	{MrmNcreateCallback		= procedure create_proc (uaf$c_access_pri_remote_list);
  205 (5)					 XmNmultipleSelectionCallback	= procedure list_proc (uaf$c_access_pri_remote_list); };
  206 (5)			 };
  207 (5)	
  208 (5)	object	pri_access_network_label	: XmLabel
  209 (5)			{arguments	{XmNlabelString		= uaf$t_network_access;
  210 (5)					 XmNtopAttachment	= XmATTACH_FORM;
  211 (5)					 XmNtopOffset		= uaf$c_top_offset;
  212 (5)					 XmNleftAttachment	= XmATTACH_WIDGET;
  213 (5)					 XmNleftOffset		= uaf$c_left_offset;
  214 (5)					 XmNleftWidget		= XmScrolledWindow pri_access_remote;
  215 (5)					 }; };
  216 (5)	object	pri_access_network		: XmScrolledWindow
  217 (5)			{arguments	{XmNtopAttachment	= XmATTACH_WIDGET;

Motif Uil Compiler V1.1-000 	22-NOV-1993 11:29:56.26		 Page 58
Module: authorize 	 Version: X1.0
 
  218 (5)					 XmNtopOffset		= uaf$c_topbot_widget_offset;
  219 (5)					 XmNtopWidget		= XmLabel pri_access_network_label;
  220 (5)					 XmNbottomAttachment	= XmATTACH_WIDGET;
  221 (5)					 XmNbottomOffset	= uaf$c_bottom_offset;
  222 (5)					 XmNbottomWidget	= XmPushButton pri_access_ok_button;
  223 (5)					 XmNrightAttachment	= XmATTACH_FORM;
  224 (5)					 XmNrightOffset		= uaf$c_right_offset;
  225 (5)					 XmNleftAttachment	= XmATTACH_WIDGET;
  226 (5)					 XmNleftOffset		= uaf$c_left_offset;
  227 (5)					 XmNleftWidget		= XmScrolledWindow pri_access_remote;
  228 (5)					 XmNscrollingPolicy	= XmCONSTANT;
  229 (5)					 XmNscrollBarDisplayPolicy	= XmSTATIC;
  230 (5)					 XmNvisualPolicy	= XmVARIABLE;
  231 (5)					 };
  232 (5)			 controls	{XmList			pri_access_network_list; };
  233 (5)			 };
  234 (5)	object	pri_access_network_list	: XmList
  235 (5)			{arguments	{XmNvisibleItemCount	= 10;
  236 (5)					 XmNitems		= uaf$t_hour_list;
  237 (5)					 XmNautomaticSelection	= false;
  238 (5)					 XmNselectionPolicy	= XmMULTIPLE_SELECT;
  239 (5)					 };
  240 (5)			 callbacks	{MrmNcreateCallback		= procedure create_proc (uaf$c_access_pri_network_list);
  241 (5)					 XmNmultipleSelectionCallback	= procedure list_proc (uaf$c_access_pri_network_list); };
  242 (5)			 };

Motif Uil Compiler V1.1-000 	22-NOV-1993 11:29:56.26		 Page 59
Module: authorize 	 Version: X1.0
 
  243 (5)	 
  244 (5)	! Define the secondary access restriction display.
  245 (5)	
  246 (5)	object	sec_access_restriction_window	: XmFormDialog
  247 (5)			{arguments	{XmNdialogTitle		= uaf$t_sec_access_restriction_title;
  248 (5)					 XmNcancelButton	= sec_access_cancel_button;
  249 (5)					 XmNdefaultButton	= sec_access_ok_button;
  250 (5)					 XmNunitType		= XmPIXELS;
  251 (5)					 XmNautoUnmanage	= false;
  252 (5)					 XmNdefaultPosition	= false;
  253 (5)					 };
  254 (5)			 controls	{XmLabel		sec_access_local_label;
  255 (5)					 XmScrolledWindow	sec_access_local;
  256 (5)					 XmLabel		sec_access_batch_label;
  257 (5)					 XmScrolledWindow	sec_access_batch;
  258 (5)					 XmLabel		sec_access_dialup_label;
  259 (5)					 XmScrolledWindow	sec_access_dialup;
  260 (5)					 XmLabel		sec_access_remote_label;
  261 (5)					 XmScrolledWindow	sec_access_remote;
  262 (5)					 XmLabel		sec_access_network_label;
  263 (5)					 XmScrolledWindow	sec_access_network;
  264 (5)	
  265 (5)					 XmPushButton	sec_access_ok_button;
  266 (5)					 XmPushButton	sec_access_cancel_button;
  267 (5)					 };
  268 (5)			};
  269 (5)	
  270 (5)	object	sec_access_local_label	: XmLabel
  271 (5)			{arguments	{XmNlabelString		= uaf$t_local_access;
  272 (5)					 XmNtopAttachment	= XmATTACH_FORM;
  273 (5)					 XmNtopOffset		= uaf$c_top_offset;
  274 (5)					 XmNleftAttachment	= XmATTACH_FORM;
  275 (5)					 XmNleftOffset		= uaf$c_left_offset;
  276 (5)					 }; };
  277 (5)	object	sec_access_local		: XmScrolledWindow
  278 (5)			{arguments	{XmNtopAttachment	= XmATTACH_WIDGET;
  279 (5)					 XmNtopOffset		= uaf$c_topbot_widget_offset;
  280 (5)					 XmNtopWidget		= XmLabel sec_access_local_label;
  281 (5)					 XmNbottomAttachment	= XmATTACH_WIDGET;
  282 (5)					 XmNbottomOffset	= uaf$c_bottom_offset;
  283 (5)					 XmNbottomWidget	= XmPushButton sec_access_ok_button;
  284 (5)					 XmNleftAttachment	= XmATTACH_FORM;
  285 (5)					 XmNleftOffset		= uaf$c_left_offset;
  286 (5)					 XmNscrollingPolicy	= XmCONSTANT;
  287 (5)					 XmNscrollBarDisplayPolicy	= XmSTATIC;
  288 (5)					 XmNvisualPolicy	= XmVARIABLE;
  289 (5)					 };
  290 (5)			 controls	{XmList			sec_access_local_list; };
  291 (5)			 };
  292 (5)	object	sec_access_local_list	: XmList
  293 (5)			{arguments	{XmNvisibleItemCount	= 12;
  294 (5)					 XmNitems		= uaf$t_hour_list;
  295 (5)					 XmNautomaticSelection	= false;
  296 (5)					 XmNselectionPolicy	= XmMULTIPLE_SELECT;
  297 (5)					 };
  298 (5)			 callbacks	{MrmNcreateCallback		= procedure create_proc (uaf$c_access_sec_local_list);
  299 (5)					 XmNmultipleSelectionCallback	= procedure list_proc (uaf$c_access_sec_local_list); };

Motif Uil Compiler V1.1-000 	22-NOV-1993 11:29:56.26		 Page 60
Module: authorize 	 Version: X1.0
 
  300 (5)			 };
  301 (5)	
  302 (5)	object	sec_access_batch_label	: XmLabel
  303 (5)			{arguments	{XmNlabelString		= uaf$t_batch_access;
  304 (5)					 XmNtopAttachment	= XmATTACH_FORM;
  305 (5)					 XmNtopOffset		= uaf$c_top_offset;
  306 (5)					 XmNleftAttachment	= XmATTACH_WIDGET;
  307 (5)					 XmNleftOffset		= uaf$c_left_offset;
  308 (5)					 XmNleftWidget		= XmScrolledWindow sec_access_local;
  309 (5)					 }; };
  310 (5)	object	sec_access_batch		: XmScrolledWindow
  311 (5)			{arguments	{XmNtopAttachment	= XmATTACH_WIDGET;
  312 (5)					 XmNtopOffset		= uaf$c_topbot_widget_offset;
  313 (5)					 XmNtopWidget		= XmLabel sec_access_batch_label;
  314 (5)					 XmNbottomAttachment	= XmATTACH_WIDGET;
  315 (5)					 XmNbottomOffset	= uaf$c_bottom_offset;
  316 (5)					 XmNbottomWidget	= XmPushButton sec_access_ok_button;
  317 (5)					 XmNleftAttachment	= XmATTACH_WIDGET;
  318 (5)					 XmNleftOffset		= uaf$c_left_offset;
  319 (5)					 XmNleftWidget		= XmScrolledWindow sec_access_local;
  320 (5)					 XmNscrollingPolicy	= XmCONSTANT;
  321 (5)					 XmNscrollBarDisplayPolicy	= XmSTATIC;
  322 (5)					 XmNvisualPolicy	= XmVARIABLE;
  323 (5)					 };
  324 (5)			 controls	{XmList			sec_access_batch_list; };
  325 (5)			 };
  326 (5)	object	sec_access_batch_list	: XmList
  327 (5)			{arguments	{XmNvisibleItemCount	= 12;
  328 (5)					 XmNitems		= uaf$t_hour_list;
  329 (5)					 XmNautomaticSelection	= false;
  330 (5)					 XmNselectionPolicy	= XmMULTIPLE_SELECT;
  331 (5)					 };
  332 (5)			 callbacks	{MrmNcreateCallback		= procedure create_proc (uaf$c_access_sec_batch_list);
  333 (5)					 XmNmultipleSelectionCallback	= procedure list_proc (uaf$c_access_sec_batch_list); };
  334 (5)			 };
  335 (5)	
  336 (5)	object	sec_access_dialup_label	: XmLabel
  337 (5)			{arguments	{XmNlabelString		= uaf$t_dialup_access;
  338 (5)					 XmNtopAttachment	= XmATTACH_FORM;
  339 (5)					 XmNtopOffset		= uaf$c_top_offset;
  340 (5)					 XmNleftAttachment	= XmATTACH_WIDGET;
  341 (5)					 XmNleftOffset		= uaf$c_left_offset;
  342 (5)					 XmNleftWidget		= XmScrolledWindow sec_access_batch;
  343 (5)					 }; };
  344 (5)	object	sec_access_dialup		: XmScrolledWindow
  345 (5)			{arguments	{XmNtopAttachment	= XmATTACH_WIDGET;
  346 (5)					 XmNtopOffset		= uaf$c_topbot_widget_offset;
  347 (5)					 XmNtopWidget		= XmLabel sec_access_dialup_label;
  348 (5)					 XmNbottomAttachment	= XmATTACH_WIDGET;
  349 (5)					 XmNbottomOffset	= uaf$c_bottom_offset;
  350 (5)					 XmNbottomWidget	= XmPushButton sec_access_ok_button;
  351 (5)					 XmNleftAttachment	= XmATTACH_WIDGET;
  352 (5)					 XmNleftOffset		= uaf$c_left_offset;
  353 (5)					 XmNleftWidget		= XmScrolledWindow sec_access_batch;
  354 (5)					 XmNscrollingPolicy	= XmCONSTANT;
  355 (5)					 XmNscrollBarDisplayPolicy	= XmSTATIC;
  356 (5)					 XmNvisualPolicy	= XmVARIABLE;

Motif Uil Compiler V1.1-000 	22-NOV-1993 11:29:56.26		 Page 61
Module: authorize 	 Version: X1.0
 
  357 (5)					 };
  358 (5)			 controls	{XmList			sec_access_dialup_list; };
  359 (5)			 };
  360 (5)	object	sec_access_dialup_list	: XmList
  361 (5)			{arguments	{XmNvisibleItemCount	= 12;
  362 (5)					 XmNitems		= uaf$t_hour_list;
  363 (5)					 XmNautomaticSelection	= false;
  364 (5)					 XmNselectionPolicy	= XmMULTIPLE_SELECT;
  365 (5)					 };
  366 (5)			 callbacks	{MrmNcreateCallback		= procedure create_proc (uaf$c_access_sec_dialup_list);
  367 (5)					 XmNmultipleSelectionCallback	= procedure list_proc (uaf$c_access_sec_dialup_list); };
  368 (5)			 };
  369 (5)	
  370 (5)	object	sec_access_remote_label	: XmLabel
  371 (5)			{arguments	{XmNlabelString		= uaf$t_remote_access;
  372 (5)					 XmNtopAttachment	= XmATTACH_FORM;
  373 (5)					 XmNtopOffset		= uaf$c_top_offset;
  374 (5)					 XmNleftAttachment	= XmATTACH_WIDGET;
  375 (5)					 XmNleftOffset		= uaf$c_left_offset;
  376 (5)					 XmNleftWidget		= XmScrolledWindow sec_access_dialup;
  377 (5)					 }; };
  378 (5)	object	sec_access_remote		: XmScrolledWindow
  379 (5)			{arguments	{XmNtopAttachment	= XmATTACH_WIDGET;
  380 (5)					 XmNtopOffset		= uaf$c_topbot_widget_offset;
  381 (5)					 XmNtopWidget		= XmLabel sec_access_remote_label;
  382 (5)					 XmNbottomAttachment	= XmATTACH_WIDGET;
  383 (5)					 XmNbottomOffset	= uaf$c_bottom_offset;
  384 (5)					 XmNbottomWidget	= XmPushButton sec_access_ok_button;
  385 (5)					 XmNleftAttachment	= XmATTACH_WIDGET;
  386 (5)					 XmNleftOffset		= uaf$c_left_offset;
  387 (5)					 XmNleftWidget		= XmScrolledWindow sec_access_dialup;
  388 (5)					 XmNscrollingPolicy	= XmCONSTANT;
  389 (5)					 XmNscrollBarDisplayPolicy	= XmSTATIC;
  390 (5)					 XmNvisualPolicy	= XmVARIABLE;
  391 (5)					 };
  392 (5)			 controls	{XmList			sec_access_remote_list; };
  393 (5)			 };
  394 (5)	object	sec_access_remote_list	: XmList
  395 (5)			{arguments	{XmNvisibleItemCount	= 12;
  396 (5)					 XmNitems		= uaf$t_hour_list;
  397 (5)					 XmNautomaticSelection	= false;
  398 (5)					 XmNselectionPolicy	= XmMULTIPLE_SELECT;
  399 (5)					 };
  400 (5)			 callbacks	{MrmNcreateCallback		= procedure create_proc (uaf$c_access_sec_remote_list);
  401 (5)					 XmNmultipleSelectionCallback	= procedure list_proc (uaf$c_access_sec_remote_list); };
  402 (5)			 };
  403 (5)	
  404 (5)	object	sec_access_network_label	: XmLabel
  405 (5)			{arguments	{XmNlabelString		= uaf$t_network_access;
  406 (5)					 XmNtopAttachment	= XmATTACH_FORM;
  407 (5)					 XmNtopOffset		= uaf$c_top_offset;
  408 (5)					 XmNleftAttachment	= XmATTACH_WIDGET;
  409 (5)					 XmNleftOffset		= uaf$c_left_offset;
  410 (5)					 XmNleftWidget		= XmScrolledWindow sec_access_remote;
  411 (5)					 }; };
  412 (5)	object	sec_access_network		: XmScrolledWindow
  413 (5)			{arguments	{XmNtopAttachment	= XmATTACH_WIDGET;

Motif Uil Compiler V1.1-000 	22-NOV-1993 11:29:56.26		 Page 62
Module: authorize 	 Version: X1.0
 
  414 (5)					 XmNtopOffset		= uaf$c_topbot_widget_offset;
  415 (5)					 XmNtopWidget		= XmLabel sec_access_network_label;
  416 (5)					 XmNbottomAttachment	= XmATTACH_WIDGET;
  417 (5)					 XmNbottomOffset	= uaf$c_bottom_offset;
  418 (5)					 XmNbottomWidget	= XmPushButton sec_access_ok_button;
  419 (5)					 XmNrightAttachment	= XmATTACH_FORM;
  420 (5)					 XmNrightOffset		= uaf$c_right_offset;
  421 (5)					 XmNleftAttachment	= XmATTACH_WIDGET;
  422 (5)					 XmNleftOffset		= uaf$c_left_offset;
  423 (5)					 XmNleftWidget		= XmScrolledWindow sec_access_remote;
  424 (5)					 XmNscrollingPolicy	= XmCONSTANT;
  425 (5)					 XmNscrollBarDisplayPolicy	= XmSTATIC;
  426 (5)					 XmNvisualPolicy	= XmVARIABLE;
  427 (5)					 };
  428 (5)			 controls	{XmList			sec_access_network_list; };
  429 (5)			 };
  430 (5)	object	sec_access_network_list	: XmList
  431 (5)			{arguments	{XmNvisibleItemCount	= 10;
  432 (5)					 XmNitems		= uaf$t_hour_list;
  433 (5)					 XmNautomaticSelection	= false;
  434 (5)					 XmNselectionPolicy	= XmMULTIPLE_SELECT;
  435 (5)					 };
  436 (5)			 callbacks	{MrmNcreateCallback		= procedure create_proc (uaf$c_access_sec_network_list);
  437 (5)					 XmNmultipleSelectionCallback	= procedure list_proc (uaf$c_access_sec_network_list); };
  438 (5)			 };

Motif Uil Compiler V1.1-000 	22-NOV-1993 11:29:56.26		 Page 63
Module: authorize 	 Version: X1.0
 
  439 (5)	 
  440 (5)	! Define the objects for the access restriction window push buttons.
  441 (5)	
  442 (5)	object	pri_access_ok_button	: XmPushButton
  443 (5)			{arguments	{XmNlabelString		= uaf$t_pri_access_ok;
  444 (5)					 XmNbottomAttachment	= XmATTACH_FORM;
  445 (5)					 XmNbottomOffset	= uaf$c_bottom_offset;
  446 (5)					 XmNleftAttachment	= XmATTACH_FORM;
  447 (5)					 XmNleftOffset		= uaf$c_left_offset;
  448 (5)					 };
  449 (5)			 callbacks	{XmNactivateCallback	= procedure activate_proc (uaf$c_access_pri_ok); };
  450 (5)			 };
  451 (5)	object	pri_access_cancel_button	: XmPushButton
  452 (5)			{arguments	{XmNlabelString		= uaf$t_pri_access_cancel;
  453 (5)					 XmNbottomAttachment	= XmATTACH_FORM;
  454 (5)					 XmNbottomOffset	= uaf$c_bottom_offset;
  455 (5)					 XmNleftAttachment	= XmATTACH_WIDGET;
  456 (5)					 XmNleftOffset		= uaf$c_left_offset;
  457 (5)					 XmNleftWidget		= XmPushButton pri_access_ok_button;
  458 (5)					 };
  459 (5)			 callbacks	{XmNactivateCallback	= procedure activate_proc (uaf$c_access_pri_cancel); };
  460 (5)			 };
  461 (5)	
  462 (5)	object	sec_access_ok_button	: XmPushButton
  463 (5)			{arguments	{XmNlabelString		= uaf$t_sec_access_ok;
  464 (5)					 XmNbottomAttachment	= XmATTACH_FORM;
  465 (5)					 XmNbottomOffset	= uaf$c_bottom_offset;
  466 (5)					 XmNleftAttachment	= XmATTACH_FORM;
  467 (5)					 XmNleftOffset		= uaf$c_left_offset;
  468 (5)					 };
  469 (5)			 callbacks	{XmNactivateCallback	= procedure activate_proc (uaf$c_access_sec_ok); };
  470 (5)			 };
  471 (5)	object	sec_access_cancel_button	: XmPushButton
  472 (5)			{arguments	{XmNlabelString		= uaf$t_sec_access_cancel;
  473 (5)					 XmNbottomAttachment	= XmATTACH_FORM;
  474 (5)					 XmNbottomOffset	= uaf$c_bottom_offset;
  475 (5)					 XmNleftAttachment	= XmATTACH_WIDGET;
  476 (5)					 XmNleftOffset		= uaf$c_left_offset;
  477 (5)					 XmNleftWidget		= XmPushButton sec_access_ok_button;
  478 (5)					 };
  479 (5)			 callbacks	{XmNactivateCallback	= procedure activate_proc (uaf$c_access_sec_cancel); };
  480 (5)			 };
   54 (0)	
   55 (0)	end module;
 
     File (0)   WORK209:[PILANT.HACK.DWAUTH.BL2]UAF.UIL;237
     File (1)   WORK209:[PILANT.HACK.DWAUTH.BL2]UAFUIDEF.UIL;55
     File (2)   WORK209:[PILANT.HACK.DWAUTH.BL2]UAF_MAIN_WINDOW.UIL;53
     File (3)   WORK209:[PILANT.HACK.DWAUTH.BL2]UAF_ID_WINDOW.UIL;31
     File (4)   WORK209:[PILANT.HACK.DWAUTH.BL2]UAF_ENTRY_WINDOW.UIL;212
     File (5)   WORK209:[PILANT.HACK.DWAUTH.BL2]UAF_ACCESS_WINDOW.UIL;8
 
