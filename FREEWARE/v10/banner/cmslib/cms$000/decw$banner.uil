 module DECW$BANNER
*9D
     version = '1.0'
*9E
*14D
     names = case_insensitive
*14E
*14I
     names = case_sensitive
*14E
*9D
 
*9E
*9I
     version = 
*11D
     "1.0"
*11E
*11I
*14D
     '1.0'
*14E
*14I
     "1.0"
*14E
*11E
 
 value
*9E
 !++
 !
 ! Facility:
 !   [-tbs-]
 !
 ! Abstract:
 !   [-tbs-]
 !
 ! Author:
 !   [-tbs-]
 !
 ! Creation Date:
 !   [-tbs-]
 !
 ! Modification History:
 !   [-tbs-]
 !
 !--
*9D
 
*9E
*7D
     include file 'decw$include:DECwDwtApplProg.uil';
*7E
*7I
*8D
     include file 'decw$include:XmAppl.uil';
 
*8E
*7E
*9D
  
     Value
 		banner_exit_option : 1;
 		banner_setup_option : 2;
 		banner_restore_option : 3;
 		banner_save_option : 4;
 		banner_restore_saved_option : 5;
 		banner_hide_option : 6;
 		banner_show_option : 7;
 		banner_erase_option : 8;
 		banner_alarm_option : 9;
 		banner_alarm_ok : 10;
 		banner_alarm_cancel : 11;
 		banner_help_option : 12;
*9E
*4I
*9D
 		banner_min_option : 13;
*9E
*4E
*9D
 
*9E
*7I
*9D
 
*9E
*7E
*9D
 		banner_setup_cancel : 0;
 		banner_setup_ok : 1;
 		banner_setup_initialise : 2;
*9E
*6I
*9D
 		banner_setup_apply : 3;
*9E
*6E
*9D
 
 		banner_box_toggle : 1;
 		banner_world_toggle : 2;
*9E
*5D
 		banner_niether_toggle : 3;
*5E
*9D
 		banner_cpu_window_toggle : 6;
 		banner_mon_window_toggle : 7;
 		banner_analog_window_toggle : 8;
 		banner_digital_window_toggle : 9;
 		banner_dua0_active : 10;
 		banner_dua1_active : 11;
 		banner_dua2_active : 12;
 		banner_page_io_active : 13;
 		banner_page_fault_active : 14;
 		banner_modified_pages_active : 15;
 		banner_free_pages_active : 16;
 		banner_border_active : 17;
 		banner_seconds_active : 18;
 		banner_tick_size : 19;
 		banner_base_priority : 20;
 		banner_hanoi_toggle : 21;
 		banner_modes_window_toggle : 22;		
 		banner_message_toggle : 23;
 		banner_bell_on : 25;
 		banner_icon_active : 26;
 		banner_hour_widget : 30;
 		banner_minute_widget : 31;
 		banner_alarmtext_widget : 32;
 		banner_process_window_toggle : 33;
 		banner_disk_0 : 34;
 		banner_disk_0_name : 35;
 		banner_disk_1 : 36;
 		banner_disk_1_name : 37;
 		banner_disk_2 : 38;
 		banner_disk_2_name : 39;
 		banner_message_create : 40;
 		banner_pe_window : 41;
 		banner_lck_window : 42;
 		banner_cwps_window : 43;
 		banner_font_name : 44;
 		banner_font_size : 45;
 		banner_process_name : 46;
 		banner_process_user : 47;
 		banner_process_pid : 48;
 		banner_sysfaults_active : 49;
 		banner_ni_io_active : 50;
 
 		avantgarde_font : 51;
 		courier_font : 52;
 		helvetica_font : 53;
 		lubalingraph_font : 54;
 		ncsschoolbook_font : 55;
 		souvenir_font : 56;
 		times_font : 57;
 		a8_font : 58;
 		a10_font : 59;
 		a12_font : 60;
 		a14_font : 61;
 		a18_font : 62;
 		a24_font : 63;
 
 		banner_process_states : 64;
 		banner_multi_hist_toggle : 65;		
 		banner_window_border_active : 66;
 
*9E
*2I
*9D
 		banner_iocnt : 67;
 		banner_freeblkcnt : 68;
 
*9E
*2E
*3I
*9D
 		banner_sys_window_toggle : 69;
 
*9E
*3E
*7I
*9D
 
*9E
*7E
*9D
     procedure
 		BANNER_MENU_CALLBACK (integer);
 		BANNER_MESSAGE_CALLBACK (integer);
 		BANNER_SETUP_CALLBACK (integer);
 		TOGGLE_INIT_CALLBACK (integer);
 		TOGGLE_CHANGE_CALLBACK (integer);
 
*9E
*7D
 value
         adb_top_attachment      :argument('adbTopAttachment', integer);
         adb_bottom_attachment   :argument('adbBottomAttachment', integer);
         adb_left_attachment     :argument('adbLeftAttachment', integer);
         adb_right_attachment    :argument('adbRightAttachment', integer);
         adb_top_widget          : argument('adbTopWidget', any);
         adb_bottom_widget       : argument('adbBottomWidget', any);
         adb_left_widget         : argument('adbLeftWidget', any);
         adb_right_widget        : argument('adbRightWidget', any);
         adb_top_offset          : argument ('adbTopOffset', integer);
         adb_bottom_offset       : argument ('adbBottomOffset', integer);
         adb_left_offset         : argument ('adbLeftOffset', integer);
         adb_right_offset        : argument ('adbRightOffset', integer);
 
 
 
 	object BANNER_MENU : exported POPUP_MENU 
*7E
*7I
*9D
 
 	object BANNER_MENU : EXPORTED XmPopupMenu 
*9E
*7E
*9D
    	     {
 		arguments {
 		};
 		controls {
*9E
*7D
 			managed PUSH_BUTTON help_select;
 			managed PUSH_BUTTON Setup_select;
 			managed PUSH_BUTTON Alarm_select;
 			managed PUSH_BUTTON Show_select;
*7E
*4I
*7D
 			managed PUSH_BUTTON hide_select;
*7E
*4E
*7D
 			managed PUSH_BUTTON Restore_saved_select;
 			managed PUSH_BUTTON Restore_select;
 			managed PUSH_BUTTON Save_select;
 			managed PUSH_BUTTON exit_select;
*7E
*7I
*9D
 			managed XmPushButton help_select;
 			managed XmPushButton Setup_select;
 			managed XmPushButton Alarm_select;
 			managed XmPushButton Show_select;
 			managed XmPushButton hide_select;
 			managed XmPushButton Restore_saved_select;
 			managed XmPushButton Restore_select;
 			managed XmPushButton Save_select;
 			managed XmPushButton exit_select;
*9E
*7E
*9D
 			};
 	     };
 
*9E
*7D
 	object setup_select : private PUSH_BUTTON GADGET
*7E
*7I
*9D
 	object setup_select : private XmPushButton GADGET
*9E
*7E
*9D
 	    {
 		arguments {
*9E
*7D
 			LABEL_LABEL = 'Setup options';
*7E
*7I
*9D
 			XmNlabelString = 'Setup options';
*9E
*7E
*9D
 		};
 		callbacks {
*9E
*7D
 			ACTIVATE = PROCEDURE banner_menu_callback (banner_setup_option);
*7E
*7I
*9D
 			XmNactivateCallback = PROCEDURE banner_menu_callback (banner_setup_option);
*9E
*7E
*9D
 		};
 	    };
 
*9E
*7D
 	object alarm_select : private PUSH_BUTTON GADGET
*7E
*7I
*9D
 	object alarm_select : private XmPushButton GADGET
*9E
*7E
*9D
 	    {
 		arguments {
*9E
*7D
 			LABEL_LABEL = 'Alarm Setup';
*7E
*7I
*9D
 			XmNlabelString = 'Alarm Setup';
*9E
*7E
*9D
 		};
 		callbacks {
*9E
*7D
 			ACTIVATE = PROCEDURE banner_menu_callback (banner_alarm_option);
*7E
*7I
*9D
 			XmNactivateCallback = PROCEDURE banner_menu_callback (banner_alarm_option);
*9E
*7E
*9D
 		};
 	    };
 
 
*9E
*7D
 	object show_select : private PUSH_BUTTON GADGET
*7E
*7I
*9D
 	object show_select : private XmPushButton GADGET
*9E
*7E
*9D
 	    {
 		arguments {
*9E
*7D
 			LABEL_LABEL = 'Show Message Window';
*7E
*7I
*9D
 			XmNlabelString = 'Show Message Window';
*9E
*7E
*9D
 		};
 		callbacks {
*9E
*7D
 			ACTIVATE = PROCEDURE banner_menu_callback (banner_show_option);
*7E
*7I
*9D
 			XmNactivateCallback = PROCEDURE banner_menu_callback (banner_show_option);
*9E
*7E
*9D
 		};
 	    };
 
 
 
*9E
*7D
 	object Restore_saved_select : private PUSH_BUTTON GADGET
*7E
*7I
*9D
 	object Restore_saved_select : private XmPushButton GADGET
*9E
*7E
*9D
 	    {
 		arguments {
*9E
*7D
 			LABEL_LABEL = 'Restore Saved Settings';
*7E
*7I
*9D
 			XmNlabelString = 'Restore Saved Settings';
*9E
*7E
*9D
 		};
 		callbacks {
*9E
*7D
 			ACTIVATE = PROCEDURE banner_menu_callback (banner_restore_saved_option);
*7E
*7I
*9D
 			XmNactivateCallback = PROCEDURE banner_menu_callback (banner_restore_saved_option);
*9E
*7E
*9D
 		};
 	    };
 
*9E
*7D
 	object restore_select : private PUSH_BUTTON GADGET
*7E
*7I
*9D
 	object restore_select : private XmPushButton GADGET
*9E
*7E
*9D
 	    {
 		arguments {
*9E
*7D
 			LABEL_LABEL = 'Restore Default';
*7E
*7I
*9D
 			XmNlabelString = 'Restore Default';
*9E
*7E
*9D
 		};
 		controls {
 		};
 		callbacks {
*9E
*7D
 			ACTIVATE = PROCEDURE banner_menu_callback (banner_restore_option);
*7E
*7I
*9D
 			XmNactivateCallback = PROCEDURE banner_menu_callback (banner_restore_option);
*9E
*7E
*9D
 		};
 	    };
 
*9E
*7D
 	object save_select : private PUSH_BUTTON GADGET
*7E
*7I
*9D
 	object save_select : private XmPushButton GADGET
*9E
*7E
*9D
 	    {
 		arguments {
*9E
*7D
 			LABEL_LABEL = 'Save Current';
*7E
*7I
*9D
 			XmNlabelString = 'Save Current';
*9E
*7E
*9D
 		};
 		controls {
 		};
 		callbacks {
*9E
*7D
 			ACTIVATE = PROCEDURE banner_menu_callback (banner_save_option);
*7E
*7I
*9D
 			XmNactivateCallback = PROCEDURE banner_menu_callback (banner_save_option);
*9E
*7E
*9D
 		};
 	    };
 
*9E
*7D
 	object exit_select : private PUSH_BUTTON GADGET
*7E
*7I
*9D
 	object exit_select : private XmPushButton GADGET
*9E
*7E
*9D
 	    {
 		arguments {
*9E
*7D
 			LABEL_LABEL = 'Exit';
*7E
*7I
*9D
 			XmNlabelString = 'Exit';
*9E
*7E
*9D
 		};
 		controls {
 		};
 		callbacks {
*9E
*7D
 			ACTIVATE = PROCEDURE banner_menu_callback (banner_exit_option);
*7E
*7I
*9D
 			XmNactivateCallback = PROCEDURE banner_menu_callback (banner_exit_option);
*9E
*7E
*9D
 		};
 	    };
 
*9E
*4I
*7D
 	object hide_select : private PUSH_BUTTON GADGET
*7E
*7I
*9D
 	object hide_select : private XmPushButton GADGET
*9E
*7E
*9D
 	    {
 		arguments {
*9E
*7D
 			LABEL_LABEL = 'Goto Minimum Display';
*7E
*7I
*9D
 			XmNlabelString = 'Goto Minimum Display';
*9E
*7E
*9D
 		};
 		controls {
 		};
 		callbacks {
*9E
*7D
 			ACTIVATE = PROCEDURE banner_menu_callback (banner_min_option);
*7E
*7I
*9D
 			XmNactivateCallback = PROCEDURE banner_menu_callback (banner_min_option);
*9E
*7E
*9D
 		};
 	    };
 
*9E
*4E
*7D
 	object help_select : private PUSH_BUTTON GADGET
*7E
*7I
*9D
 	object help_select : private XmPushButton GADGET
*9E
*7E
*9D
 	    {
 		arguments {
*9E
*7D
 			LABEL_LABEL = 'Help';
*7E
*7I
*9D
 			XmNlabelString = 'Help';
*9E
*7E
*9D
 		};
 		controls {
 		};
 		callbacks {
*9E
*7D
 			ACTIVATE = PROCEDURE banner_menu_callback (banner_help_option);
*7E
*7I
*9D
 			XmNactivateCallback = PROCEDURE banner_menu_callback (banner_help_option);
*9E
*7E
*9D
 		};
 	    };
 
*9E
*7D
 	object banner_alarm_options : exported POPUP_DIALOG_BOX 
*7E
*7I
*9D
 	object banner_alarm_options : EXPORTED XmFormDialog
*9E
*7E
*9D
 	    {
 		arguments {
*9E
*7D
 			STYLE = 1;
 			TITLE = 'Banner Alarm Setup';
*7E
*7I
*9D
 			XmNunitType = XmPIXELS;
 			XmNdialogStyle = XmDIALOG_MODELESS;
 			XmNdialogTitle = 'Banner Alarm Setup';
*9E
*7E
*9D
 			};
 		controls {
*9E
*7D
 			managed SCALE hour_time;
 			managed SCALE minute_time;
 			managed PUSH_BUTTON alarm_ok_button;
 			managed PUSH_BUTTON alarm_cancel_button;
 			managed SIMPLE_TEXT message_text;
*7E
*7I
*9D
 			managed XmScale hour_time;
 			managed XmScale minute_time;
 			managed XmPushButton alarm_ok_button;
 			managed XmPushButton alarm_cancel_button;
 			managed XmScrolledText message_text;
*9E
*7E
*9D
 			};
             };
 
*9E
*7D
 	object alarm_ok_button : PUSH_BUTTON  GADGET {
*7E
*7I
*9D
 	object alarm_ok_button : XmPushButton  GADGET {
*9E
*7E
*9D
 		arguments {
*9E
*7D
 			X = 180;
 			Y = 70;
 			LABEL_LABEL = 'OK';
*7E
*7I
*9D
 			XmNx = 200;
 			XmNy = 70;
 			XmNlabelString = 'OK';
*9E
*7E
*9D
 		};
 		callbacks {
*9E
*7D
 			ACTIVATE = PROCEDURE banner_menu_callback (banner_alarm_ok);
*7E
*7I
*9D
 			XmNactivateCallback = PROCEDURE banner_menu_callback (banner_alarm_ok);
*9E
*7E
*9D
 		};
 	};
 
*9E
*7D
 	object alarm_cancel_button : PUSH_BUTTON GADGET {
*7E
*7I
*9D
 	object alarm_cancel_button : XmPushButton GADGET {
*9E
*7E
*9D
 		arguments {
*9E
*7D
 			X = 180;
 			Y = 90;
 			LABEL_LABEL = 'Cancel';
*7E
*7I
*9D
 			XmNx = 200;
 			XmNy = 90;
 			XmNlabelString = 'Cancel';
*9E
*7E
*9D
 		};
 		callbacks {
*9E
*7D
 			ACTIVATE = PROCEDURE banner_menu_callback (banner_alarm_cancel);
*7E
*7I
*9D
 			XmNactivateCallback = PROCEDURE banner_menu_callback (banner_alarm_cancel);
*9E
*7E
*9D
 		};
 	};
 
*9E
*7D
 	object message_text : SIMPLE_TEXT
*7E
*7I
*9D
 	object message_text : XmScrolledText
*9E
*7E
*9D
 	    {
 		arguments {
*9E
*7D
 			X = 6;
 			Y = 60;
 			WIDTH = 300;
 			HEIGHT = 80;
 			EDITABLE = TRUE;
 			INSERTION_POINT_VISIBLE = TRUE;
 			AUTO_SHOW_INSERTION_POINT = TRUE;
 			SCROLL_VERTICAL = TRUE;
 			SIMPLE_TEXT_VALUE = 'Banner Alarm Message';
 			WORD_WRAP = TRUE;
*7E
*7I
*9D
 			XmNx = 6;
 			XmNy = 60;
 			XmNrows = 6;
 			XmNcolumns = 20;
 			XmNeditable = TRUE;
 !			XmNeditMode = 1;
 			XmNeditMode = 0;
 			XmNcursorPositionVisible = TRUE;
 			XmNautoShowCursorPosition = TRUE;
 			XmNscrollVertical = TRUE;
 			XmNscrollHorizontal = FALSE;
 			XmNvalue = 'Banner Alarm Message';
 			XmNwordWrap = TRUE;
*9E
*7E
*9D
 			};
 		callbacks {
*9E
*7D
 			CREATE = PROCEDURE toggle_init_callback (banner_alarmtext_widget);
*7E
*7I
*9D
 			XmNcreateCallback = PROCEDURE toggle_init_callback (banner_alarmtext_widget);
*9E
*7E
*9D
 		};
 	    };
 
*9E
*7D
 	object hour_time : SCALE 
*7E
*7I
*9D
 	object hour_time : XmScale 
*9E
*7E
*9D
 	    {
 		arguments {
*9E
*7D
 			MAX_VALUE = 24;
 			MIN_VALUE = 0;
 			TITLE = 'Alarm Hour';
 			HEIGHT = 60;
 			WIDTH = 200;
 			X = 1;
 			Y = 1;
 			SHOW_VALUE = TRUE;
 			SHOW_VALUE_AUTOMATIC = TRUE;
*7E
*7I
*9D
 			XmNmaximum = 24;
 			XmNminimum = 0;
 			XmNtitleString = 'Alarm Hour';
 			XmNheight = 60;
 			XmNwidth = 250;
 			XmNx = 1;
 			XmNy = 1;
 			XmNorientation = XmHORIZONTAL;
 			XmNshowValue = TRUE;
*9E
*7E
*9D
 		};
 		callbacks {
*9E
*7D
 			CREATE = PROCEDURE toggle_init_callback (banner_hour_widget);
*7E
*7I
*9D
 			XmNcreateCallback = PROCEDURE toggle_init_callback (banner_hour_widget);
*9E
*7E
*9D
 		};
 	    };
 
*9E
*7D
 	object minute_time : SCALE 
*7E
*7I
*9D
 	object minute_time : XmScale 
*9E
*7E
*9D
 	    {
 		arguments {
*9E
*7D
 			MAX_VALUE = 60;
 			MIN_VALUE = 0;
 			TITLE = 'Alarm Minute';
 			HEIGHT = 60;
 			WIDTH = 200;
 			X = 150;
 			Y = 1;
 			SHOW_VALUE = TRUE;
 			SHOW_VALUE_AUTOMATIC = TRUE;
*7E
*7I
*9D
 			XmNorientation = XmHORIZONTAL;
 			XmNmaximum = 60;
 			XmNminimum = 0;
 			XmNtitleString = 'Alarm Minute';
 			XmNheight = 60;
 			XmNwidth = 250;
 			XmNx = 150;
 			XmNy = 1;
 			XmNshowValue = TRUE;
*9E
*7E
*9D
 		};
 		callbacks {
*9E
*7D
 			CREATE = PROCEDURE toggle_init_callback (banner_minute_widget);
*7E
*7I
*9D
 			XmNcreateCallback = PROCEDURE toggle_init_callback (banner_minute_widget);
*9E
*7E
*9D
 		};
 	    };
 
*9E
*7D
 	object 	banner_setup_options : exported POPUP_DIALOG_BOX
*7E
*7I
*9D
 	object 	banner_setup_options : EXPORTED XmBulletinBoardDialog
*9E
*7E
*9D
 	    {
 		arguments {
*9E
*7D
 			STYLE = 1;
 			TITLE = 'Banner Setup';
*7E
*6I
*7D
 			auto_unmanage = FALSE;
 			default_button = PUSH_BUTTON ok_button;
*7E
*7I
*9D
 			XmNunitType = XmPIXELS;
 			XmNdialogStyle = XmDIALOG_MODELESS;
 			XmNdialogTitle = 'Banner Setup';
 			XmNautoUnmanage = FALSE;
 			XmNdefaultButton = XmPushButton ok_button;
*9E
*7E
*6E
*9D
 			};
 		controls {
*9E
*7D
 			managed TOGGLE_BUTTON cpu_window;
 			managed TOGGLE_BUTTON mon_window;
*7E
*3I
*7D
 			managed TOGGLE_BUTTON sys_window;
*7E
*3E
*7D
 			managed TOGGLE_BUTTON process_window;
 			managed TOGGLE_BUTTON modes_window;
 			managed TOGGLE_BUTTON multi_hist;
 			managed TOGGLE_BUTTON message_window;
 			managed TOGGLE_BUTTON pe_window;
 			managed TOGGLE_BUTTON lck_window;
 			managed TOGGLE_BUTTON cwps_window;
 			managed TOGGLE_BUTTON analog_clock;
 			managed TOGGLE_BUTTON digital_clock;
 			managed TOGGLE_BUTTON process_name;
 			managed TOGGLE_BUTTON process_user;
 			managed TOGGLE_BUTTON process_pid;
 			managed TOGGLE_BUTTON process_states;
*7E
*5D
 			managed RADIO_BOX rotating_box;
*5E
*5I
*7D
 		        managed TOGGLE_BUTTON display_box;
 		        managed TOGGLE_BUTTON display_world;
 		        managed TOGGLE_BUTTON display_hanoi;
*7E
*5E
*7D
 			managed OPTION_MENU font_name;
 			managed OPTION_MENU font_size;
 			managed PUSH_BUTTON ok_button;
*7E
*6I
*7D
 			managed PUSH_BUTTON apply_button;
*7E
*6E
*7D
 			managed PUSH_BUTTON cancel_button;
 			managed TOGGLE_BUTTON dua0_active;
 			managed TOGGLE_BUTTON dua1_active;
 			managed TOGGLE_BUTTON dua2_active;
 			managed TOGGLE_BUTTON page_io_active;
 			managed TOGGLE_BUTTON page_fault_active;
 			managed TOGGLE_BUTTON modified_pages_active;
 			managed TOGGLE_BUTTON free_pages_active;
 			managed TOGGLE_BUTTON ni_io_active;
*7E
*2I
*7D
 			managed RADIO_BOX freeblocks_box;
*7E
*2E
*7D
 			managed TOGGLE_BUTTON sysfaults_active;
 			managed TOGGLE_BUTTON seconds_active;
 			managed TOGGLE_BUTTON title_active;
 			managed TOGGLE_BUTTON border_active;
 			managed TOGGLE_BUTTON icon_active;
 			managed TOGGLE_BUTTON bell_active;
 			managed SCALE cpu_tick;
 			managed SCALE base_priority;
 			managed LABEL disk_0_name_label;
 			managed SIMPLE_TEXT disk_0_name;
 			managed LABEL disk_0_label;
 			managed SIMPLE_TEXT disk_0;
 			managed LABEL disk_1_name_label;
 			managed SIMPLE_TEXT disk_1_name;
 			managed LABEL disk_1_label;
 			managed SIMPLE_TEXT disk_1;
 			managed LABEL disk_2_name_label;
 			managed SIMPLE_TEXT disk_2_name;
 			managed LABEL disk_2_label;
 			managed SIMPLE_TEXT disk_2;
*7E
*7I
*9D
 			managed XmToggleButton cpu_window;
 			managed XmToggleButton mon_window;
 			managed XmToggleButton sys_window;
 			managed XmToggleButton process_window;
 			managed XmToggleButton modes_window;
 			managed XmToggleButton multi_hist;
 			managed XmToggleButton message_window;
 			managed XmToggleButton pe_window;
 			managed XmToggleButton lck_window;
 			managed XmToggleButton cwps_window;
 			managed XmToggleButton analog_clock;
 			managed XmToggleButton digital_clock;
 			managed XmToggleButton process_name;
 			managed XmToggleButton process_user;
 			managed XmToggleButton process_pid;
 			managed XmToggleButton process_states;
 		        managed XmToggleButton display_box;
 		        managed XmToggleButton display_world;
 		        managed XmToggleButton display_hanoi;
 			managed XmOptionMenu font_name;
 			managed XmOptionMenu font_size;
 			managed XmPushButton ok_button;
 			managed XmPushButton apply_button;
 			managed XmPushButton cancel_button;
 			managed XmToggleButton dua0_active;
 			managed XmToggleButton dua1_active;
 			managed XmToggleButton dua2_active;
 			managed XmToggleButton page_io_active;
 			managed XmToggleButton page_fault_active;
 			managed XmToggleButton modified_pages_active;
 			managed XmToggleButton free_pages_active;
 			managed XmToggleButton ni_io_active;
 			managed XmRadioBox freeblocks_box;
 			managed XmToggleButton sysfaults_active;
 			managed XmToggleButton seconds_active;
 			managed XmToggleButton title_active;
 			managed XmToggleButton border_active;
 			managed XmToggleButton icon_active;
 			managed XmToggleButton bell_active;
 			managed XmScale cpu_tick;
 			managed XmScale base_priority;
 			managed XmLabel disk_0_name_label;
 			managed XmText disk_0_name;
 			managed XmLabel disk_0_label;
 			managed XmText disk_0;
 			managed XmLabel disk_1_name_label;
 			managed XmText disk_1_name;
 			managed XmLabel disk_1_label;
 			managed XmText disk_1;
 			managed XmLabel disk_2_name_label;
 			managed XmText disk_2_name;
 			managed XmLabel disk_2_label;
 			managed XmText disk_2;
*9E
*7E
*9D
 			};
 		callbacks {
*9E
*7D
 			CREATE = PROCEDURE banner_setup_callback (banner_setup_initialise);
*7E
*7I
*9D
 			XmNcreateCallback = PROCEDURE banner_setup_callback (banner_setup_initialise);
*9E
*7E
*9D
 		};
*9E
*9I
     BANNER_EXIT_OPTION: 1;
     BANNER_SETUP_OPTION: 2;
     BANNER_RESTORE_OPTION: 3;
     BANNER_SAVE_OPTION: 4;
     BANNER_RESTORE_SAVED_OPTION: 5;
     BANNER_HIDE_OPTION: 6;
     BANNER_SHOW_OPTION: 7;
     BANNER_ERASE_OPTION: 8;
     BANNER_ALARM_OPTION: 9;
     BANNER_ALARM_OK: 10;
     BANNER_ALARM_CANCEL: 11;
     BANNER_HELP_OPTION: 12;
     BANNER_MIN_OPTION: 13;
*15I
     BANNER_SOUND_OPTION: 14;
*15E
     BANNER_SETUP_CANCEL: 0;
     BANNER_SETUP_OK: 1;
     BANNER_SETUP_INITIALISE: 2;
     BANNER_SETUP_APPLY: 3;
     BANNER_BOX_TOGGLE: 1;
     BANNER_WORLD_TOGGLE: 2;
     BANNER_CPU_WINDOW_TOGGLE: 6;
*18D
     BANNER_MON_WINDOW_TOGGLE: 7;
*18E
*18I
*19D
     BANNER_LINK_WINDOW_TOGGLE: 7;
*19E
*19I
     BANNER_MON_WINDOW_TOGGLE: 7;
*19E
*18E
     BANNER_ANALOG_WINDOW_TOGGLE: 8;
     BANNER_DIGITAL_WINDOW_TOGGLE: 9;
     BANNER_DUA0_ACTIVE: 10;
     BANNER_DUA1_ACTIVE: 11;
     BANNER_DUA2_ACTIVE: 12;
     BANNER_PAGE_IO_ACTIVE: 13;
     BANNER_PAGE_FAULT_ACTIVE: 14;
     BANNER_MODIFIED_PAGES_ACTIVE: 15;
     BANNER_FREE_PAGES_ACTIVE: 16;
     BANNER_BORDER_ACTIVE: 17;
     BANNER_SECONDS_ACTIVE: 18;
     BANNER_TICK_SIZE: 19;
     BANNER_BASE_PRIORITY: 20;
     BANNER_HANOI_TOGGLE: 21;
     BANNER_MODES_WINDOW_TOGGLE: 22;
     BANNER_MESSAGE_TOGGLE: 23;
     BANNER_BELL_ON: 25;
     BANNER_ICON_ACTIVE: 26;
*19I
     BANNER_LINK_WINDOW_TOGGLE: 27;
*19E
     BANNER_HOUR_WIDGET: 30;
     BANNER_MINUTE_WIDGET: 31;
     BANNER_ALARMTEXT_WIDGET: 32;
     BANNER_PROCESS_WINDOW_TOGGLE: 33;
     BANNER_DISK_0: 34;
     BANNER_DISK_0_NAME: 35;
     BANNER_DISK_1: 36;
     BANNER_DISK_1_NAME: 37;
     BANNER_DISK_2: 38;
     BANNER_DISK_2_NAME: 39;
     BANNER_MESSAGE_CREATE: 40;
     BANNER_PE_WINDOW: 41;
     BANNER_LCK_WINDOW: 42;
     BANNER_CWPS_WINDOW: 43;
     BANNER_FONT_NAME: 44;
     BANNER_FONT_SIZE: 45;
     BANNER_PROCESS_NAME: 46;
     BANNER_PROCESS_USER: 47;
     BANNER_PROCESS_PID: 48;
     BANNER_SYSFAULTS_ACTIVE: 49;
     BANNER_NI_IO_ACTIVE: 50;
     AVANTGARDE_FONT: 51;
     COURIER_FONT: 52;
     HELVETICA_FONT: 53;
     LUBALINGRAPH_FONT: 54;
     NCSSCHOOLBOOK_FONT: 55;
     SOUVENIR_FONT: 56;
     TIMES_FONT: 57;
     A8_FONT: 58;
     A10_FONT: 59;
     A12_FONT: 60;
     A14_FONT: 61;
     A18_FONT: 62;
     A24_FONT: 63;
     BANNER_PROCESS_STATES: 64;
     BANNER_MULTI_HIST_TOGGLE: 65;
     BANNER_WINDOW_BORDER_ACTIVE: 66;
     BANNER_IOCNT: 67;
     BANNER_FREEBLKCNT: 68;
     BANNER_SYS_WINDOW_TOGGLE: 69;
*11D
 
     BANNER_TP		:	70;
     BANNER_CLUSTER	:	71;
     BANNER_PRINT_QUEUE	:	72;
     BANNER_BATCH_QUEUE	:	73;
     BANNER_TP_TCOMPRATE	:	74;
     BANNER_TP_1FCOMPRATE :	75;
     BANNER_TP_STARTCOMPRATE :	76;
     BANNER_TP_PREPCOMPRATE :	77;
     BANNER_TP_ABORTCOMPRATE :	78;
     BANNER_TP_ENDCOMPRATE :	79;
     BANNER_TP_REMSTARTCOMPRATE : 80;
     BANNER_TP_REMENDCOMPRATE :	81;
     BANNER_TP_COMPRATE1 :	82;
     BANNER_TP_COMPRATE2 :	83;
     BANNER_TP_COMPRATE3 :	84;
     BANNER_TP_COMPRATE4 :	85;
     BANNER_PRINT_QUEUE_NAME :	86;
     BANNER_BATCH_QUEUE_NAME :	87;
     BANNER_QUEUE_USER :		88;
     BANNER_SHOW_HOLD :		89;
     BANNER_SHOW_ALL_USERS :	90;
     BANNER_SHOW_STOPPED :	91;
     BANNER_SHOW_INT :		92;
     BANNER_MAX_COMP_RATE :	93;
     BANNER_COMP_RATE1_START :	94;
     BANNER_COMP_RATE2_START :	95;
     BANNER_COMP_RATE3_START :	96;
     BANNER_COMP_RATE4_START :	97;
     BANNER_COMP_RATE1_END :	98;
     BANNER_COMP_RATE2_END :	99;
     BANNER_COMP_RATE3_END :	100;
*11E
*11I
     BANNER_TP: 70;
     BANNER_CLUSTER: 71;
     BANNER_PRINT_QUEUE: 72;
     BANNER_BATCH_QUEUE: 73;
     BANNER_TP_TCOMPRATE: 74;
     BANNER_TP_1FCOMPRATE: 75;
     BANNER_TP_STARTCOMPRATE: 76;
     BANNER_TP_PREPCOMPRATE: 77;
     BANNER_TP_ABORTCOMPRATE: 78;
     BANNER_TP_ENDCOMPRATE: 79;
     BANNER_TP_REMSTARTCOMPRATE: 80;
     BANNER_TP_REMENDCOMPRATE: 81;
     BANNER_TP_COMPRATE1: 82;
     BANNER_TP_COMPRATE2: 83;
     BANNER_TP_COMPRATE3: 84;
     BANNER_TP_COMPRATE4: 85;
     BANNER_PRINT_QUEUE_NAME: 86;
     BANNER_BATCH_QUEUE_NAME: 87;
     BANNER_QUEUE_USER: 88;
     BANNER_SHOW_HOLD: 89;
     BANNER_SHOW_ALL_USERS: 90;
     BANNER_SHOW_STOPPED: 91;
     BANNER_SHOW_INT: 92;
     BANNER_MAX_COMP_RATE: 93;
     BANNER_COMP_RATE1_START: 94;
     BANNER_COMP_RATE2_START: 95;
     BANNER_COMP_RATE3_START: 96;
     BANNER_COMP_RATE4_START: 97;
     BANNER_COMP_RATE1_END: 98;
     BANNER_COMP_RATE2_END: 99;
     BANNER_COMP_RATE3_END: 100;
*11E
*16I
     BANNER_SOUND_MENU_CREATE: 1001;
*16E
 
*15I
*16D
     BANNER_SOUND_MENU_CREATE: 1;
*16E
*16I
 value
*17D
     BANNER_SOUND_OK_BUTTON	: 1;
     BANNER_SOUND_CANCEL_BUTTON  : 2;
     BANNER_SOUND_VOLUME : 3;
     BANNER_SOUND_TIME : 4;
     BANNER_SOUND_MWAIT : 5;
     BANNER_SOUND_MWAIT_PUSH : 6;
     BANNER_SOUND_NEW_PROCESSES : 7;
     BANNER_SOUND_NEW_PROCESSES_PUSH : 8;
     BANNER_LESS_PROCESSES : 9;
     BANNER_LESS_PROCESSES_PUSH : 10;
     BANNER_SOUND_DISK_1 : 11;
     BANNER_SOUND_DISK_1_PUSH : 12;
     BANNER_SOUND_DISK_2 : 13;
     BANNER_SOUND_DISK_2_PUSH : 14;
     BANNER_SOUND_DISK_3 : 15;
     BANNER_SOUND_DISK_3_PUSH : 16;
     BANNER_SOUND_MEMORY : 17;
     BANNER_SOUND_MEMORY_PUSH : 18;
     BANNER_SOUND_PAGE_FILE : 19;
     BANNER_SOUND_PAGE_FILE_PUSH : 20;
     BANNER_SOUND_PENDING_IOS : 21;
     BANNER_SOUND_PENDING_IOS_PUSH : 22;
*17E
*17I
     BANNER_SOUND_OK_BUTTON: 1;
     BANNER_SOUND_CANCEL_BUTTON: 2;
     BANNER_SOUND_VOLUME: 3;
     BANNER_SOUND_TIME: 4;
     BANNER_SOUND_MWAIT: 5;
     BANNER_SOUND_MWAIT_PUSH: 6;
     BANNER_SOUND_NEW_PROCESSES: 7;
     BANNER_SOUND_NEW_PROCESSES_PUSH: 8;
     BANNER_LESS_PROCESSES: 9;
     BANNER_LESS_PROCESSES_PUSH: 10;
     BANNER_SOUND_DISK_1: 11;
     BANNER_SOUND_DISK_1_PUSH: 12;
     BANNER_SOUND_DISK_2: 13;
     BANNER_SOUND_DISK_2_PUSH: 14;
     BANNER_SOUND_DISK_3: 15;
     BANNER_SOUND_DISK_3_PUSH: 16;
     BANNER_SOUND_MEMORY: 17;
     BANNER_SOUND_MEMORY_PUSH: 18;
     BANNER_SOUND_PAGE_FILE: 19;
     BANNER_SOUND_PAGE_FILE_PUSH: 20;
     BANNER_SOUND_PENDING_IOS: 21;
     BANNER_SOUND_PENDING_IOS_PUSH: 22;
*17E
*16E
 
*15E
 procedure
*15I
     BANNER_SOUND_CALLBACK(integer);
     BANNER_SOUND_INIT_CALLBACK(integer);
*15E
     BANNER_MENU_CALLBACK(integer);
     BANNER_MESSAGE_CALLBACK(integer);
     BANNER_SETUP_CALLBACK(integer);
     TOGGLE_INIT_CALLBACK(integer);
     TOGGLE_CHANGE_CALLBACK(integer);
 
 value
     FIRST_COLUMN: 4;
*14D
     SECOND_COLUMN: 173;
*14E
*14I
     SECOND_COLUMN: 177;
*14E
     THIRD_COLUMN: 318;
     FOURTH_COLUMN: 628;
*14D
     BUTTONY: 440;
*14E
*14I
     BUTTONY: 535;
*14E
     TP_COLUMN: 450;
 
 object
     BANNER_MENU: exported XmPopupMenu 
         {
         arguments
             {
*14I
*16D
 	    XmNwhichButton = 2;
*16E
*16I
             XmNwhichButton = 2;
*16E
*14E
             };
         controls
             {
             XmPushButtonGadget HELP_SELECT;
             XmPushButtonGadget SETUP_SELECT;
*15I
*16D
 	    XmPushButtonGadget SOUND_SELECT;
*16E
*16I
*21D
             XmPushButtonGadget SOUND_SELECT;
*21E
*16E
*15E
*21D
             XmPushButtonGadget ALARM_SELECT;
*21E
*21I
 !            XmPushButtonGadget SOUND_SELECT;
 !            XmPushButtonGadget ALARM_SELECT;
*21E
             XmPushButtonGadget SHOW_SELECT;
             XmPushButtonGadget HIDE_SELECT;
             XmPushButtonGadget RESTORE_SAVED_SELECT;
             XmPushButtonGadget RESTORE_SELECT;
             XmPushButtonGadget SAVE_SELECT;
             XmPushButtonGadget EXIT_SELECT;
             };
         };
 
 object
     SETUP_SELECT: XmPushButtonGadget 
         {
         arguments
             {
             XmNlabelString = 
             compound_string("Setup options");
             };
         callbacks
             {
             XmNactivateCallback = procedures
                 {
                 BANNER_MENU_CALLBACK(BANNER_SETUP_OPTION);
                 };
             };
         };
 
 object
     ALARM_SELECT: XmPushButtonGadget 
         {
         arguments
             {
             XmNlabelString = 
             compound_string("Alarm Setup");
             };
         callbacks
             {
             XmNactivateCallback = procedures
                 {
                 BANNER_MENU_CALLBACK(BANNER_ALARM_OPTION);
                 };
             };
         };
 
 object
     SHOW_SELECT: XmPushButtonGadget 
         {
         arguments
             {
             XmNlabelString = 
             compound_string("Show Message Window");
             };
         callbacks
             {
             XmNactivateCallback = procedures
                 {
                 BANNER_MENU_CALLBACK(BANNER_SHOW_OPTION);
                 };
             };
         };
 
 object
     RESTORE_SAVED_SELECT: XmPushButtonGadget 
         {
         arguments
             {
             XmNlabelString = 
             compound_string("Restore Saved Settings");
             };
         callbacks
             {
             XmNactivateCallback = procedures
                 {
                 BANNER_MENU_CALLBACK(BANNER_RESTORE_SAVED_OPTION);
                 };
             };
         };
 
 object
     RESTORE_SELECT: XmPushButtonGadget 
         {
         arguments
             {
             XmNlabelString = 
             compound_string("Restore Default");
             };
         controls
             {
             };
         callbacks
             {
             XmNactivateCallback = procedures
                 {
                 BANNER_MENU_CALLBACK(BANNER_RESTORE_OPTION);
                 };
             };
         };
 
 object
     SAVE_SELECT: XmPushButtonGadget 
         {
         arguments
             {
             XmNlabelString = 
             compound_string("Save Current");
             };
         controls
             {
             };
         callbacks
             {
             XmNactivateCallback = procedures
                 {
                 BANNER_MENU_CALLBACK(BANNER_SAVE_OPTION);
                 };
             };
         };
 
 object
     EXIT_SELECT: XmPushButtonGadget 
         {
         arguments
             {
             XmNlabelString = 
             compound_string("Exit");
             };
         controls
             {
             };
         callbacks
             {
             XmNactivateCallback = procedures
                 {
                 BANNER_MENU_CALLBACK(BANNER_EXIT_OPTION);
                 };
             };
         };
 
 object
     HIDE_SELECT: XmPushButtonGadget 
         {
         arguments
             {
             XmNlabelString = 
             compound_string("Goto Minimum Display");
             };
         controls
             {
             };
         callbacks
             {
             XmNactivateCallback = procedures
                 {
                 BANNER_MENU_CALLBACK(BANNER_MIN_OPTION);
                 };
             };
         };
 
 object
     HELP_SELECT: XmPushButtonGadget 
         {
         arguments
             {
             XmNlabelString = 
             compound_string("Help");
             };
         controls
             {
             };
         callbacks
             {
             XmNactivateCallback = procedures
                 {
                 BANNER_MENU_CALLBACK(BANNER_HELP_OPTION);
                 };
             };
         };
 
 object
*15I
     SOUND_SELECT: XmPushButtonGadget 
         {
         arguments
             {
             XmNlabelString = 
             compound_string("Sound Setup");
             };
         callbacks
             {
             MrmNcreateCallback = procedures
                 {
                 BANNER_SOUND_INIT_CALLBACK(BANNER_SOUND_MENU_CREATE);
                 };
             XmNactivateCallback = procedures
                 {
                 BANNER_MENU_CALLBACK(BANNER_SOUND_OPTION);
                 };
             };
         };
 
 object
*15E
     BANNER_ALARM_OPTIONS: exported XmFormDialog 
         {
         arguments
             {
             XmNunitType = XmPIXELS;
             XmNdialogStyle = XmDIALOG_MODELESS;
             XmNdialogTitle = 
             compound_string("Banner Alarm Setup");
*14I
*17D
             XmNheight = 197;
*17E
*17I
             XmNdefaultButton = XmPushButtonGadget ALARM_OK_BUTTON;
*17E
*14E
             };
         controls
             {
             XmScale HOUR_TIME;
             XmScale MINUTE_TIME;
             XmPushButtonGadget ALARM_OK_BUTTON;
             XmPushButtonGadget ALARM_CANCEL_BUTTON;
             XmScrolledText MESSAGE_TEXT;
             };
         };
 
 object
     ALARM_OK_BUTTON: XmPushButtonGadget 
         {
         arguments
             {
*14D
             XmNx = 200;
             XmNy = 70;
*14E
*14I
             XmNx = 257;
             XmNy = 61;
*14E
             XmNlabelString = 
             compound_string("OK");
*14I
             XmNleftOffset = 0;
             XmNleftAttachment = XmATTACH_POSITION;
             XmNleftPosition = 50;
             XmNtopOffset = 0;
             XmNtopAttachment = XmATTACH_POSITION;
             XmNtopPosition = 33;
             XmNrightOffset = -213;
             XmNrightAttachment = XmATTACH_POSITION;
             XmNrightPosition = 56;
             XmNbottomOffset = -29;
             XmNbottomAttachment = XmATTACH_POSITION;
             XmNbottomPosition = 48;
*14E
*17I
             XmNshowAsDefault = 1;
*17E
             };
         callbacks
             {
             XmNactivateCallback = procedures
                 {
                 BANNER_MENU_CALLBACK(BANNER_ALARM_OK);
                 };
             };
         };
 
 object
     ALARM_CANCEL_BUTTON: XmPushButtonGadget 
         {
         arguments
             {
*14D
             XmNx = 200;
             XmNy = 90;
*14E
*14I
             XmNx = 258;
             XmNy = 154;
*14E
             XmNlabelString = 
             compound_string("Cancel");
*14I
             XmNrightOffset = 10;
             XmNrightAttachment = XmATTACH_FORM;
             XmNtopOffset = -39;
             XmNtopAttachment = XmATTACH_POSITION;
             XmNtopPosition = 83;
             XmNbottomOffset = 9;
             XmNbottomAttachment = XmATTACH_FORM;
             XmNleftOffset = -187;
             XmNleftAttachment = XmATTACH_POSITION;
             XmNleftPosition = 87;
*14E
             };
         callbacks
             {
             XmNactivateCallback = procedures
                 {
                 BANNER_MENU_CALLBACK(BANNER_ALARM_CANCEL);
                 };
             };
         };
 
 object
     MESSAGE_TEXT: XmScrolledText 
         {
         arguments
             {
             XmNx = 6;
             XmNy = 60;
             XmNrows = 6;
             XmNcolumns = 20;
             XmNeditable = true;
             XmNeditMode = 0;
             XmNcursorPositionVisible = true;
             XmNautoShowCursorPosition = true;
             XmNscrollVertical = true;
             XmNscrollHorizontal = false;
             XmNvalue = 
             "Banner Alarm Message";
             XmNwordWrap = true;
             };
         callbacks
             {
             MrmNcreateCallback = procedures
                 {
                 TOGGLE_INIT_CALLBACK(BANNER_ALARMTEXT_WIDGET);
                 };
             };
         };
 
 object
     HOUR_TIME: XmScale 
         {
         arguments
             {
             XmNmaximum = 24;
             XmNminimum = 0;
             XmNtitleString = 
             compound_string("Alarm Hour");
             XmNheight = 60;
             XmNwidth = 250;
             XmNx = 1;
             XmNy = 1;
             XmNorientation = XmHORIZONTAL;
             XmNshowValue = true;
             };
         callbacks
             {
             MrmNcreateCallback = procedures
                 {
                 TOGGLE_INIT_CALLBACK(BANNER_HOUR_WIDGET);
                 };
             };
         };
 
 object
     MINUTE_TIME: XmScale 
         {
         arguments
             {
             XmNorientation = XmHORIZONTAL;
             XmNmaximum = 60;
             XmNminimum = 0;
             XmNtitleString = 
             compound_string("Alarm Minute");
             XmNheight = 60;
             XmNwidth = 250;
*14D
             XmNx = 150;
*14E
*14I
             XmNx = 257;
*14E
             XmNy = 1;
             XmNshowValue = true;
             };
         callbacks
             {
             MrmNcreateCallback = procedures
                 {
                 TOGGLE_INIT_CALLBACK(BANNER_MINUTE_WIDGET);
                 };
             };
         };
 
 object
     BANNER_SETUP_OPTIONS: exported XmBulletinBoardDialog 
         {
         arguments
             {
             XmNunitType = XmPIXELS;
             XmNdialogStyle = XmDIALOG_MODELESS;
             XmNdialogTitle = 
             compound_string("Banner Setup");
             XmNautoUnmanage = false;
             XmNdefaultButton = XmPushButtonGadget OK_BUTTON;
*9E
             };
*9D
 
*9E
*7D
 	object cpu_tick : SCALE 
*7E
*7I
*9D
 	object cpu_tick : XmScale 
*9E
*7E
*9D
 	    {
 		arguments {
*9E
*7D
 			MAX_VALUE = 60;
 			MIN_VALUE = 1;
 			TITLE = 'Banner Update Timer (Seconds)';
 			HEIGHT = 60;
 			WIDTH = 250;
 			X = 6;
 			Y = 130;
 			SHOW_VALUE = TRUE;
 			SHOW_VALUE_AUTOMATIC = TRUE;
*7E
*7I
*9D
 			XmNorientation = XmHORIZONTAL;
 			XmNmaximum = 60;
 			XmNminimum = 1;
 			XmNvalue = 1;
 			XmNtitleString = 'Banner Update Timer (Seconds)';
 			XmNheight = 60;
 			XmNwidth = 250;
 			XmNx = 6;
 			XmNy = 260;
 			XmNshowValue = TRUE;
*9E
*7E
*9D
 		};
 		callbacks {
*9E
*7D
 			VALUE_CHANGED = PROCEDURE toggle_change_callback (banner_tick_size);
 			CREATE = PROCEDURE toggle_init_callback (banner_tick_size);
*7E
*7I
*9D
 			XmNvalueChangedCallback = PROCEDURE toggle_change_callback (banner_tick_size);
 			XmNcreateCallback = PROCEDURE toggle_init_callback (banner_tick_size);
*9E
*7E
*9D
 		};
 	    };
 
*9E
*7D
 	object base_priority : SCALE 
*7E
*7I
*9D
 	object base_priority : XmScale 
*9E
*7E
*9D
 	    {
 		arguments {
*9E
*7D
 			MAX_VALUE = 14;
 			MIN_VALUE = 0;
 			TITLE = 'Banner Base Priority';
 			HEIGHT = 60;
 			WIDTH = 250;
 			X = 6;
 			Y = 180;
 			SHOW_VALUE = TRUE;
 			SHOW_VALUE_AUTOMATIC = TRUE;
*7E
*7I
*9D
 			XmNorientation = XmHORIZONTAL;
 			XmNmaximum = 14;
 			XmNminimum = 1;
 			XmNvalue = 1;
 			XmNtitleString = 'Banner Base Priority';
 			XmNheight = 60;
 			XmNwidth = 250;
 			XmNx = 6;
 			XmNy = 200;
 			XmNshowValue = TRUE;
*9E
*7E
*9D
 		};
 		callbacks {
*9E
*7D
 			VALUE_CHANGED = PROCEDURE toggle_change_callback (banner_base_priority);
 			CREATE = PROCEDURE toggle_init_callback (banner_base_priority);
*7E
*7I
*9D
 			XmNvalueChangedCallback = PROCEDURE toggle_change_callback (banner_base_priority);
 			XmNcreateCallback = PROCEDURE toggle_init_callback (banner_base_priority);
*9E
*7E
*9D
 		};
 	    };
 
*9E
*7D
 	object seconds_active : TOGGLE_BUTTON GADGET
*7E
*7I
*9D
 	object seconds_active : XmToggleButton GADGET
*9E
*7E
*9D
 	    {
 		arguments {
*9E
*7D
 			X = 76;
 			Y = 10;
 			LABEL_LABEL = 'Display Seconds';
*7E
*7I
*9D
 			XmNx = 150;
 			XmNy = 10;
 			XmNlabelString = 'Display Seconds';
*9E
*7E
*9D
 			};
 		callbacks {
*9E
*7D
 			VALUE_CHANGED = PROCEDURE toggle_change_callback (banner_seconds_active);
 			CREATE = PROCEDURE toggle_init_callback (banner_seconds_active);
*7E
*7I
*9D
 			XmNvalueChangedCallback = PROCEDURE toggle_change_callback (banner_seconds_active);
 			XmNcreateCallback = PROCEDURE toggle_init_callback (banner_seconds_active);
*9E
*7E
*9D
 		};
 	    };
*9E
*2I
*9D
 
*9E
*2E
*7D
 	object title_active : TOGGLE_BUTTON GADGET
*7E
*7I
*9D
 	object title_active : XmToggleButton GADGET
*9E
*7E
*9D
 	    {
 		arguments {
*9E
*7D
 			X = 76;
 			Y = 20;
 			LABEL_LABEL = 'Title Bar';
*7E
*7I
*9D
 			XmNx = 150;
 			XmNy = 25;
 			XmNlabelString = 'Title Bar';
*9E
*7E
*9D
 			};
 		callbacks {
*9E
*7D
 			VALUE_CHANGED = PROCEDURE toggle_change_callback (banner_border_active);
 			CREATE = PROCEDURE toggle_init_callback (banner_border_active);
*7E
*7I
*9D
 			XmNvalueChangedCallback = PROCEDURE toggle_change_callback (banner_border_active);
 			XmNcreateCallback = PROCEDURE toggle_init_callback (banner_border_active);
*9E
*7E
*9D
 		};
 	    };
*9E
*7D
 	object border_active : TOGGLE_BUTTON GADGET
*7E
*7I
*9D
 	object border_active : XmToggleButton GADGET
*9E
*7E
*9D
 	    {
 		arguments {
*9E
*7D
 			X = 76;
 			Y = 30;
 			LABEL_LABEL = 'Window Border';
*7E
*7I
*9D
 			XmNx = 150;
 			XmNy = 40;
 			XmNlabelString = 'Window Border';
*9E
*7E
*9D
 			};
 		callbacks {
*9E
*7D
 			VALUE_CHANGED = PROCEDURE toggle_change_callback (banner_window_border_active);
 			CREATE = PROCEDURE toggle_init_callback (banner_window_border_active);
*7E
*7I
*9D
 			XmNvalueChangedCallback = PROCEDURE toggle_change_callback (banner_window_border_active);
 			XmNcreateCallback = PROCEDURE toggle_init_callback (banner_window_border_active);
*9E
*7E
*9D
 		};
 	    };
*9E
*7D
 	object icon_active : TOGGLE_BUTTON GADGET
*7E
*7I
*9D
 	object icon_active : XmToggleButton GADGET
*9E
*7E
*9D
 	    {
 		arguments {
*9E
*7D
 			X = 76;
 			Y = 40;
 			LABEL_LABEL = 'Active Icons';
*7E
*7I
*9D
 			XmNx = 150;
 			XmNy = 55;
 			XmNlabelString = 'Active Icons';
*9E
*7E
*9D
 			};
 		callbacks {
*9E
*7D
 			VALUE_CHANGED = PROCEDURE toggle_change_callback (banner_icon_active);
 			CREATE = PROCEDURE toggle_init_callback (banner_icon_active);
*7E
*7I
*9D
 			XmNvalueChangedCallback = PROCEDURE toggle_change_callback (banner_icon_active);
 			XmNcreateCallback = PROCEDURE toggle_init_callback (banner_icon_active);
*9E
*7E
*9D
 		};
 	    };
*9E
*7D
 	object bell_active : TOGGLE_BUTTON GADGET
*7E
*7I
*9D
 	object bell_active : XmToggleButton GADGET
*9E
*7E
*9D
 	    {
 		arguments {
*9E
*7D
 			X = 76;
 			Y = 50;
 			LABEL_LABEL = 'Bell active';
*7E
*7I
*9D
 			XmNx = 150;
 			XmNy = 70;
 			XmNlabelString = 'Bell active';
*9E
*7E
*9D
 			};
 		callbacks {
*9E
*7D
 			VALUE_CHANGED = PROCEDURE toggle_change_callback (banner_bell_on);
 			CREATE = PROCEDURE toggle_init_callback (banner_bell_on);
*7E
*7I
*9D
 			XmNvalueChangedCallback = PROCEDURE toggle_change_callback (banner_bell_on);
 			XmNcreateCallback = PROCEDURE toggle_init_callback (banner_bell_on);
*9E
*7E
*9D
 		};
 	    };
*9E
*7D
 	object process_name : TOGGLE_BUTTON GADGET
*7E
*7I
*9D
 	object process_name : XmToggleButton GADGET
*9E
*7E
*9D
 	    {
 		arguments {
*9E
*7D
 			X = 76;
 			Y = 60;
 			LABEL_LABEL = 'Process Name';
*7E
*7I
*9D
 			XmNx = 150;
 			XmNy = 85;
 			XmNlabelString = 'Process Name';
*9E
*7E
*9D
 			};
 		callbacks {
*9E
*7D
 			VALUE_CHANGED = PROCEDURE toggle_change_callback (banner_process_name);
 			CREATE = PROCEDURE toggle_init_callback (banner_process_name);
*7E
*7I
*9D
 			XmNvalueChangedCallback = PROCEDURE toggle_change_callback (banner_process_name);
 			XmNcreateCallback = PROCEDURE toggle_init_callback (banner_process_name);
*9E
*7E
*9D
 			};
 	    };
 
 
*9E
*7D
 	object process_user : TOGGLE_BUTTON GADGET
*7E
*7I
*9D
 	object process_user : XmToggleButton GADGET
*9E
*7E
*9D
 	    {
 		arguments {
*9E
*7D
 			X = 76;
 			Y = 70;
 			LABEL_LABEL = 'User Name';
*7E
*7I
*9D
 			XmNx = 150;
 			XmNy = 100;
 			XmNlabelString = 'User Name';
*9E
*7E
*9D
 			};
 		callbacks {
*9E
*7D
 			VALUE_CHANGED = PROCEDURE toggle_change_callback (banner_process_user);
 			CREATE = PROCEDURE toggle_init_callback (banner_process_user);
*7E
*7I
*9D
 			XmNvalueChangedCallback = PROCEDURE toggle_change_callback (banner_process_user);
 			XmNcreateCallback = PROCEDURE toggle_init_callback (banner_process_user);
*9E
*7E
*9D
 			};
 	    };
 
*9E
*7D
 	object process_pid : TOGGLE_BUTTON GADGET
*7E
*7I
*9D
 	object process_pid : XmToggleButton GADGET
*9E
*7E
*9D
 	    {
 		arguments {
*9E
*7D
 			X = 76;
 			Y = 80;
 			LABEL_LABEL = 'Process Pid';
*7E
*7I
*9D
 			XmNx = 150;
 			XmNy = 115;
 			XmNlabelString = 'Process Pid';
*9E
*7E
*9D
 			};
 		callbacks {
*9E
*7D
 			VALUE_CHANGED = PROCEDURE toggle_change_callback (banner_process_pid);
 			CREATE = PROCEDURE toggle_init_callback (banner_process_pid);
*7E
*7I
*9D
 			XmNvalueChangedCallback = PROCEDURE toggle_change_callback (banner_process_pid);
 			XmNcreateCallback = PROCEDURE toggle_init_callback (banner_process_pid);
*9E
*7E
*9D
 			};
 	    };
 
*9E
*7D
 	object process_states : TOGGLE_BUTTON GADGET
*7E
*7I
*9D
 	object process_states : XmToggleButton GADGET
*9E
*7E
*9D
 	    {
 		arguments {
*9E
*7D
 			X = 76;
 			Y = 90;
 			LABEL_LABEL = 'Process States';
*7E
*7I
*9D
 			XmNx = 150;
 			XmNy = 130;
 			XmNlabelString = 'Process States';
*9E
*7E
*9D
 			};
 		callbacks {
*9E
*7D
 			VALUE_CHANGED = PROCEDURE toggle_change_callback (banner_process_states);
 			CREATE = PROCEDURE toggle_init_callback (banner_process_states);
*7E
*7I
*9D
 			XmNvalueChangedCallback = PROCEDURE toggle_change_callback (banner_process_states);
 			XmNcreateCallback = PROCEDURE toggle_init_callback (banner_process_states);
*9E
*7E
*9D
 			};
 	    };
*9E
*7D
 	object multi_hist : TOGGLE_BUTTON GADGET
*7E
*7I
*9D
 	object multi_hist : XmToggleButton GADGET
*9E
*7E
*9D
 	    {
 		arguments {
*9E
*7D
 			X = 76;
 			Y = 100;
 			LABEL_LABEL = 'Multiple Cpu\'s';
*7E
*7I
*9D
 			XmNx = 150;
 			XmNy = 145;
 			XmNlabelString = 'Multiple Cpu\'s';
*9E
*7E
*9D
 			};
 		callbacks {
*9E
*7D
 			VALUE_CHANGED = PROCEDURE toggle_change_callback (banner_multi_hist_toggle);
 			CREATE = PROCEDURE toggle_init_callback (banner_multi_hist_toggle);
*7E
*7I
*9D
 			XmNvalueChangedCallback = PROCEDURE toggle_change_callback (banner_multi_hist_toggle);
 			XmNcreateCallback = PROCEDURE toggle_init_callback (banner_multi_hist_toggle);
*9E
*7E
*9D
 			};
 	    };
 
*9E
*7D
 	object dua0_active : TOGGLE_BUTTON GADGET
*7E
*7I
*9D
 	object dua0_active : XmToggleButton GADGET
*9E
*7E
*9D
 	    {
 		arguments {
*9E
*7D
 			X = 146;
 			Y = 10;
 			LABEL_LABEL = 'Disk 0 IO';
*7E
*7I
*9D
 			XmNx = 300;
 			XmNy = 10;
 			XmNlabelString = 'Disk 0 IO';
*9E
*7E
*9D
 			};
 		callbacks {
*9E
*7D
 			VALUE_CHANGED = PROCEDURE toggle_change_callback (banner_dua0_active);
 			CREATE = PROCEDURE toggle_init_callback (banner_dua0_active);
*7E
*7I
*9D
 			XmNvalueChangedCallback = PROCEDURE toggle_change_callback (banner_dua0_active);
 			XmNcreateCallback = PROCEDURE toggle_init_callback (banner_dua0_active);
*9E
*7E
*9D
 		};
 	    };
*9E
*7D
 	object dua1_active : TOGGLE_BUTTON GADGET
*7E
*7I
*9D
 	object dua1_active : XmToggleButton GADGET
*9E
*7E
*9D
 	    {
 		arguments {
*9E
*7D
 			X = 146;
 			Y = 20;
 			LABEL_LABEL = 'Disk 1 IO';
*7E
*7I
*9D
 			XmNx = 300;
 			XmNy = 25;
 			XmNlabelString = 'Disk 1 IO';
*9E
*7E
*9D
 			};
 		callbacks {
*9E
*7D
 			VALUE_CHANGED = PROCEDURE toggle_change_callback (banner_dua1_active);
 			CREATE = PROCEDURE toggle_init_callback (banner_dua1_active);
*7E
*7I
*9D
 			XmNvalueChangedCallback = PROCEDURE toggle_change_callback (banner_dua1_active);
 			XmNcreateCallback = PROCEDURE toggle_init_callback (banner_dua1_active);
*9E
*7E
*9D
 		};
 	    };
*9E
*7D
 	object dua2_active : TOGGLE_BUTTON GADGET
*7E
*7I
*9D
 	object dua2_active : XmToggleButton GADGET
*9E
*7E
*9D
 	    {
 		arguments {
*9E
*7D
 			X = 146;
 			Y = 30;
 			LABEL_LABEL = 'Disk 2 IO';
*7E
*7I
*9D
 			XmNx = 300;
 			XmNy = 40;
 			XmNlabelString = 'Disk 2 IO';
*9E
*7E
*9D
 			};
 		callbacks {
*9E
*7D
 			VALUE_CHANGED = PROCEDURE toggle_change_callback (banner_dua2_active);
 			CREATE = PROCEDURE toggle_init_callback (banner_dua2_active);
*7E
*7I
*9D
 			XmNvalueChangedCallback = PROCEDURE toggle_change_callback (banner_dua2_active);
 			XmNcreateCallback = PROCEDURE toggle_init_callback (banner_dua2_active);
*9E
*7E
*9D
 		};
 	    };
*9E
*7D
 	object page_io_active : TOGGLE_BUTTON GADGET
*7E
*7I
*9D
 	object page_io_active : XmToggleButton GADGET
*9E
*7E
*9D
 	    {
 		arguments {
*9E
*7D
 			X = 146;
 			Y = 40;
 			LABEL_LABEL = 'Paging IO';
*7E
*7I
*9D
 			XmNx = 300;
 			XmNy = 55;
 			XmNlabelString = 'Paging IO';
*9E
*7E
*9D
 			};
 		callbacks {
*9E
*7D
 			VALUE_CHANGED = PROCEDURE toggle_change_callback (banner_page_io_active);
 			CREATE = PROCEDURE toggle_init_callback (banner_page_io_active);
*7E
*7I
*9D
 			XmNvalueChangedCallback = PROCEDURE toggle_change_callback (banner_page_io_active);
 			XmNcreateCallback = PROCEDURE toggle_init_callback (banner_page_io_active);
*9E
*7E
*9D
 		};
 	    };
*9E
*7D
 	object page_fault_active : TOGGLE_BUTTON GADGET
*7E
*7I
*9D
 	object page_fault_active : XmToggleButton GADGET
*9E
*7E
*9D
 	    {
 		arguments {
*9E
*7D
 			X = 146;
 			Y = 50;
 			LABEL_LABEL = 'Page Faults';
*7E
*7I
*9D
 			XmNx = 300;
 			XmNy = 70;
 			XmNlabelString = 'Page Faults';
*9E
*7E
*9D
 			};
 		callbacks {
*9E
*7D
 			VALUE_CHANGED = PROCEDURE toggle_change_callback (banner_page_fault_active);
 			CREATE = PROCEDURE toggle_init_callback (banner_page_fault_active);
*7E
*7I
*9D
 			XmNvalueChangedCallback = PROCEDURE toggle_change_callback (banner_page_fault_active);
 			XmNcreateCallback = PROCEDURE toggle_init_callback (banner_page_fault_active);
*9E
*7E
*9D
 		};
 	    };
*9E
*7D
 	object modified_pages_active : TOGGLE_BUTTON GADGET
*7E
*7I
*9D
 	object modified_pages_active : XmToggleButton GADGET
*9E
*7E
*9D
 	    {
 		arguments {
*9E
*7D
 			X = 146;
 			Y = 60;
 			LABEL_LABEL = 'Modified Pages';
*7E
*7I
*9D
 			XmNx = 300;
 			XmNy = 85;
 			XmNlabelString = 'Modified Pages';
*9E
*7E
*9D
 			};
 		callbacks {
*9E
*7D
 			VALUE_CHANGED = PROCEDURE toggle_change_callback (banner_modified_pages_active);
 			CREATE = PROCEDURE toggle_init_callback (banner_modified_pages_active);
*7E
*7I
*9D
 			XmNvalueChangedCallback = PROCEDURE toggle_change_callback (banner_modified_pages_active);
 			XmNcreateCallback = PROCEDURE toggle_init_callback (banner_modified_pages_active);
*9E
*7E
*9D
 		};
 	    };
*9E
*7D
 	object free_pages_active : TOGGLE_BUTTON GADGET
*7E
*7I
*9D
 	object free_pages_active : XmToggleButton GADGET
*9E
*7E
*9D
 	    {
 		arguments {
*9E
*7D
 			X = 146;
 			Y = 70;
 			LABEL_LABEL = 'Free Pages';
*7E
*7I
*9D
 			XmNx = 300;
 			XmNy = 100;
 			XmNlabelString = 'Free Pages';
*9E
*7E
*9D
 			};
 		callbacks {
*9E
*7D
 			VALUE_CHANGED = PROCEDURE toggle_change_callback (banner_free_pages_active);
 			CREATE = PROCEDURE toggle_init_callback (banner_free_pages_active);
*7E
*7I
*9D
 			XmNvalueChangedCallback = PROCEDURE toggle_change_callback (banner_free_pages_active);
 			XmNcreateCallback = PROCEDURE toggle_init_callback (banner_free_pages_active);
*9E
*7E
*9D
 		};
 	    };
 
*9E
*7D
 	object sysfaults_active : TOGGLE_BUTTON GADGET
*7E
*7I
*9D
 	object sysfaults_active : XmToggleButton GADGET
*9E
*7E
*9D
 	    {
 		arguments {
*9E
*7D
 			X = 146;
 			Y = 80;
 			LABEL_LABEL = 'System Faults';
*7E
*7I
*9D
 			XmNx = 300;
 			XmNy = 115;
 			XmNlabelString = 'System Faults';
*9E
*7E
*9D
 			};
 		callbacks {
*9E
*7D
 			VALUE_CHANGED = PROCEDURE toggle_change_callback (banner_sysfaults_active);
 			CREATE = PROCEDURE toggle_init_callback (banner_sysfaults_active);
*7E
*7I
*9D
 			XmNvalueChangedCallback = PROCEDURE toggle_change_callback (banner_sysfaults_active);
 			XmNcreateCallback = PROCEDURE toggle_init_callback (banner_sysfaults_active);
*9E
*7E
*9D
 		};
 	    };
 
*9E
*7D
 	object ni_io_active : TOGGLE_BUTTON GADGET
*7E
*7I
*9D
 	object ni_io_active : XmToggleButton GADGET
*9E
*7E
*9D
 	    {
 		arguments {
*9E
*7D
 			X = 146;
 			Y = 90;
 			LABEL_LABEL = 'Remote Disks';
*7E
*7I
*9D
 			XmNx = 300;
 			XmNy = 130;
 			XmNlabelString = 'Remote Disks';
*9E
*7E
*9D
 			};
 		callbacks {
*9E
*7D
 			VALUE_CHANGED = PROCEDURE toggle_change_callback (banner_ni_io_active);
 			CREATE = PROCEDURE toggle_init_callback (banner_ni_io_active);
*7E
*7I
*9D
 			XmNvalueChangedCallback = PROCEDURE toggle_change_callback (banner_ni_io_active);
 			XmNcreateCallback = PROCEDURE toggle_init_callback (banner_ni_io_active);
*9E
*7E
*9D
 		};
 	    };
 
*9E
*2I
*7D
 	object freeblocks_box : RADIO_BOX 
*7E
*7I
*9D
 	object freeblocks_box : XmRadioBox 
*9E
*7E
*9D
 	      {
 		arguments {
*9E
*7D
 			BORDER_WIDTH = 1;
 			X = 146;
 			Y = 105;
*7E
*7I
*9D
 			XmNborderWidth = 1;
 			XmNx = 450;
 			XmNy = 120;
*9E
*7E
*9D
 		    };
 		controls {
*9E
*7D
 		    managed TOGGLE_BUTTON io_cnt;
 		    managed TOGGLE_BUTTON freeblk_cnt;
*7E
*7I
*9D
 		    managed XmToggleButton io_cnt;
 		    managed XmToggleButton freeblk_cnt;
*9E
*7E
*9D
 		    };
 	    };
 
*9E
*7D
 	object io_cnt : TOGGLE_BUTTON GADGET
*7E
*7I
*9D
 	object io_cnt : XmToggleButton GADGET
*9E
*7E
*9D
 	    {
 		arguments {
*9E
*7D
 			LABEL_LABEL = 'Display IO count';
*7E
*7I
*9D
 			XmNlabelString = 'Display IO count';
*9E
*7E
*9D
 			};
 		callbacks {
*9E
*7D
 			VALUE_CHANGED = PROCEDURE toggle_change_callback (banner_iocnt);
 			CREATE = PROCEDURE toggle_init_callback (banner_iocnt);
*7E
*7I
*9D
 			XmNvalueChangedCallback = PROCEDURE toggle_change_callback (banner_iocnt);
 			XmNcreateCallback = PROCEDURE toggle_init_callback (banner_iocnt);
*9E
*7E
*9D
 		};
 	    };
 
*9E
*7D
 	object freeblk_cnt : TOGGLE_BUTTON GADGET
*7E
*7I
*9D
 	object freeblk_cnt : XmToggleButton GADGET
*9E
*7E
*9D
 	    {
 		arguments {
*9E
*7D
 			LABEL_LABEL = 'Display FreeBlk Count';
*7E
*7I
*9D
 			XmNlabelString = 'Display FreeBlk Count';
*9E
*7E
*9D
 			};
 		callbacks {
*9E
*7D
 		VALUE_CHANGED = PROCEDURE toggle_change_callback (banner_freeblkcnt);
 		CREATE = PROCEDURE toggle_init_callback (banner_freeblkcnt);
*7E
*7I
*9D
 		XmNvalueChangedCallback = PROCEDURE toggle_change_callback (banner_freeblkcnt);
 		XmNcreateCallback = PROCEDURE toggle_init_callback (banner_freeblkcnt);
*9E
*7E
*9D
 		};
 	    };
 
*9E
*2E
*7D
 	object ok_button : PUSH_BUTTON GADGET {
*7E
*7I
*9D
 	object ok_button : XmPushButton GADGET {
*9E
*7E
*9D
 		arguments {
*9E
*7D
 			X = 176;
 			Y = 200;
 			LABEL_LABEL = 'OK';
*7E
*7I
*9D
 			XmNx = 300;
 			XmNy = 300;
 			XmNlabelString = 'OK';
*9E
*7E
*9D
 		};
 		callbacks {
*9E
*7D
 			ACTIVATE = PROCEDURE banner_setup_callback (banner_setup_ok);
*7E
*7I
*9D
 			XmNactivateCallback = PROCEDURE banner_setup_callback (banner_setup_ok);
*9E
*7E
*9D
 		};
 	};
 
*9E
*6D
 	object cancel_button : PUSH_BUTTON GADGET {
*6E
*6I
*7D
 	object apply_button : PUSH_BUTTON GADGET {
*7E
*7I
*9D
 	object apply_button : XmPushButton GADGET {
*9E
*7E
*6E
*9D
 		arguments {
*9E
*7D
 			X = 240;
 			Y = 200;
*7E
*6I
*7D
 			LABEL_LABEL = 'APPLY';
*7E
*7I
*9D
 			XmNx = 360;
 			XmNy = 300;
 			XmNlabelString = 'APPLY';
*9E
*7E
*9D
 		};
 		callbacks {
*9E
*7D
 			ACTIVATE = PROCEDURE banner_setup_callback (banner_setup_apply);
*7E
*7I
*9D
 			XmNactivateCallback = PROCEDURE banner_setup_callback (banner_setup_apply);
*9E
*7E
*9D
 		};
 	};
 
*9E
*7D
 	object cancel_button : PUSH_BUTTON GADGET {
*7E
*7I
*9D
 	object cancel_button : XmPushButton GADGET {
*9E
*7E
*9D
 		arguments {
*9E
*7D
 			X = 302;
 			Y = 200;
*7E
*6E
*7D
 			LABEL_LABEL = 'Cancel';
*7E
*7I
*9D
 			XmNx = 420;
 			XmNy = 300;
 			XmNlabelString = 'Cancel';
*9E
*7E
*9D
 		};
 		callbacks {
*9E
*7D
 			ACTIVATE = PROCEDURE banner_setup_callback (banner_setup_cancel);
*7E
*7I
*9D
 			XmNactivateCallback = PROCEDURE banner_setup_callback (banner_setup_cancel);
*9E
*7E
*9D
 		};
 	};
 
*9E
*7D
 	object disk_0_name_label : LABEL GADGET
*7E
*7I
*9D
 	object disk_0_name_label : XmLabel GADGET
*9E
*7E
*9D
 		{
 		arguments {
*9E
*7D
 			LABEL_LABEL = 'Disk 0 Name:';
 			X = 150;
*7E
*2D
 			Y = 130;
*2E
*2I
*7D
 			Y = 140;
*7E
*7I
*9D
 			XmNlabelString = 'Disk 0 Name:';
 			XmNx = 160;
 			XmNy = 200;
*9E
*7E
*2E
*9D
 			};
 		};
 
*9E
*7D
 	object disk_0_name : SIMPLE_TEXT
*7E
*7I
*9D
 	object disk_0_name : XmText
*9E
*7E
*9D
 		{
 		arguments {
*9E
*7D
 			EDITABLE = TRUE;
 			INSERTION_POINT_VISIBLE = TRUE;
 			AUTO_SHOW_INSERTION_POINT = TRUE;
 			SCROLL_VERTICAL = FALSE;
 			WORD_WRAP = FALSE;
 			ROWS = 1 ;
 			COLS = 11;
 			RESIZE_HEIGHT = FALSE;
 			RESIZE_WIDTH  = FALSE;
 			X = 200;
*7E
*2D
 			Y = 130;
*2E
*2I
*7D
 			Y = 140;
*7E
*7I
*9D
 			XmNeditable = TRUE;
 			XmNcursorPositionVisible = TRUE;
 			XmNautoShowCursorPosition = TRUE;
 !			XmNscrollVertical = FALSE;
 			XmNwordWrap = FALSE;
 			XmNrows = 1 ;
 			XmNcolumns = 11;
 			XmNresizeHeight = FALSE;
 			XmNresizeWidth  = FALSE;
 			XmNx = 260;
 			XmNy = 200;
*9E
*7E
*2E
*9D
 			};
*9E
*9I
         controls
             {
             XmToggleButtonGadget CPU_WINDOW;
*18D
             XmToggleButtonGadget MON_WINDOW;
*18E
*18I
             XmToggleButtonGadget LINK_WINDOW;
*18E
*19I
             XmToggleButtonGadget MON_WINDOW;
*19E
             XmToggleButtonGadget SYS_WINDOW;
             XmToggleButtonGadget PROCESS_WINDOW;
             XmToggleButtonGadget MODES_WINDOW;
             XmToggleButtonGadget MULTI_HIST;
             XmToggleButtonGadget MESSAGE_WINDOW;
             XmToggleButtonGadget PE_WINDOW;
             XmToggleButtonGadget LCK_WINDOW;
             XmToggleButtonGadget CWPS_WINDOW;
             XmToggleButtonGadget ANALOG_CLOCK;
             XmToggleButtonGadget DIGITAL_CLOCK;
             XmToggleButtonGadget PROCESS_NAME;
             XmToggleButtonGadget PROCESS_USER;
             XmToggleButtonGadget PROCESS_PID;
             XmToggleButtonGadget PROCESS_STATES;
             XmToggleButtonGadget DISPLAY_BOX;
             XmToggleButtonGadget DISPLAY_WORLD;
             XmToggleButtonGadget DISPLAY_HANOI;
             XmOptionMenu FONT_NAME;
             XmOptionMenu FONT_SIZE;
             XmPushButtonGadget OK_BUTTON;
             XmPushButtonGadget APPLY_BUTTON;
             XmPushButtonGadget CANCEL_BUTTON;
             XmToggleButtonGadget DUA0_ACTIVE;
             XmToggleButtonGadget DUA1_ACTIVE;
             XmToggleButtonGadget DUA2_ACTIVE;
             XmToggleButtonGadget PAGE_IO_ACTIVE;
             XmToggleButtonGadget PAGE_FAULT_ACTIVE;
             XmToggleButtonGadget MODIFIED_PAGES_ACTIVE;
             XmToggleButtonGadget FREE_PAGES_ACTIVE;
             XmToggleButtonGadget NI_IO_ACTIVE;
             XmRadioBox FREEBLOCKS_BOX;
             XmToggleButtonGadget SYSFAULTS_ACTIVE;
             XmToggleButtonGadget SECONDS_ACTIVE;
             XmToggleButtonGadget TITLE_ACTIVE;
             XmToggleButtonGadget BORDER_ACTIVE;
             XmToggleButtonGadget ICON_ACTIVE;
             XmToggleButtonGadget BELL_ACTIVE;
             XmScale CPU_TICK;
             XmScale BASE_PRIORITY;
             XmLabelGadget DISK_0_NAME_LABEL;
             XmText DISK_0_NAME;
             XmLabelGadget DISK_0_LABEL;
             XmText DISK_0;
             XmLabelGadget DISK_1_NAME_LABEL;
             XmText DISK_1_NAME;
             XmLabelGadget DISK_1_LABEL;
             XmText DISK_1;
             XmLabelGadget DISK_2_NAME_LABEL;
             XmText DISK_2_NAME;
             XmLabelGadget DISK_2_LABEL;
             XmText DISK_2;
             XmToggleButtonGadget 
                 {
                 arguments
                     {
                     XmNx = FIRST_COLUMN;
*14D
                     XmNy = 145;
*14E
*14I
                     XmNy = 212;
*14E
                     XmNlabelString = 
                     compound_string("TP Display");
                     };
*11D
 		callbacks
 		    {
 		    XmNvalueChangedCallback = procedures
 			{
 			TOGGLE_CHANGE_CALLBACK(BANNER_TP);
 			};
 		    MrmNcreateCallback = procedures
 			{
 			TOGGLE_INIT_CALLBACK(BANNER_TP);
 			};
 		    };
*11E
*11I
                 callbacks
                     {
                     XmNvalueChangedCallback = procedures
                         {
                         TOGGLE_CHANGE_CALLBACK(BANNER_TP);
                         };
                     MrmNcreateCallback = procedures
                         {
                         TOGGLE_INIT_CALLBACK(BANNER_TP);
                         };
                     };
*11E
                 };
             XmToggleButtonGadget 
                 {
                 arguments
                     {
                     XmNx = FIRST_COLUMN;
*14D
                     XmNy = 160;
*14E
*14I
                     XmNy = 234;
*14E
                     XmNlabelString = 
                     compound_string("Cluster Display");
                     };
*11D
 		callbacks
 		    {
 		    XmNvalueChangedCallback = procedures
 			{
 			TOGGLE_CHANGE_CALLBACK(BANNER_CLUSTER);
 			};
 		    MrmNcreateCallback = procedures
 			{
 			TOGGLE_INIT_CALLBACK(BANNER_CLUSTER);
 			};
 		    };
*11E
*11I
                 callbacks
                     {
                     XmNvalueChangedCallback = procedures
                         {
                         TOGGLE_CHANGE_CALLBACK(BANNER_CLUSTER);
                         };
                     MrmNcreateCallback = procedures
                         {
                         TOGGLE_INIT_CALLBACK(BANNER_CLUSTER);
                         };
                     };
*11E
                 };
             XmToggleButtonGadget 
                 {
                 arguments
                     {
                     XmNx = FIRST_COLUMN;
*14D
                     XmNy = 175;
*14E
*14I
                     XmNy = 256;
*14E
                     XmNlabelString = 
                     compound_string("Print Queue Display");
                     };
*11D
 		callbacks
 		    {
 		    XmNvalueChangedCallback = procedures
 			{
 			TOGGLE_CHANGE_CALLBACK(BANNER_PRINT_QUEUE);
 			};
 		    MrmNcreateCallback = procedures
 			{
 			TOGGLE_INIT_CALLBACK(BANNER_PRINT_QUEUE);
 			};
 		    };
*11E
*11I
                 callbacks
                     {
                     XmNvalueChangedCallback = procedures
                         {
                         TOGGLE_CHANGE_CALLBACK(BANNER_PRINT_QUEUE);
                         };
                     MrmNcreateCallback = procedures
                         {
                         TOGGLE_INIT_CALLBACK(BANNER_PRINT_QUEUE);
                         };
                     };
*11E
                 };
             XmToggleButtonGadget 
                 {
                 arguments
                     {
                     XmNx = TP_COLUMN;
                     XmNy = 10;
                     XmNlabelString = 
                     compound_string("TP Total Com Rate");
                     };
*11D
 		callbacks
 		    {
 		    XmNvalueChangedCallback = procedures
 			{
 			TOGGLE_CHANGE_CALLBACK(BANNER_TP_TCOMPRATE);
 			};
 		    MrmNcreateCallback = procedures
 			{
 			TOGGLE_INIT_CALLBACK(BANNER_TP_TCOMPRATE);
 			};
 		    };
*11E
*11I
                 callbacks
                     {
                     XmNvalueChangedCallback = procedures
                         {
                         TOGGLE_CHANGE_CALLBACK(BANNER_TP_TCOMPRATE);
                         };
                     MrmNcreateCallback = procedures
                         {
                         TOGGLE_INIT_CALLBACK(BANNER_TP_TCOMPRATE);
                         };
                     };
*11E
                 };
             XmToggleButtonGadget 
                 {
                 arguments
                     {
                     XmNx = TP_COLUMN;
*14D
                     XmNy = 25;
*14E
*14I
                     XmNy = 32;
*14E
                     XmNlabelString = 
                     compound_string("TP 1F Com Rate");
                     };
*11D
 		callbacks
 		    {
 		    XmNvalueChangedCallback = procedures
 			{
 			TOGGLE_CHANGE_CALLBACK(BANNER_TP_1FCOMPRATE);
 			};
 		    MrmNcreateCallback = procedures
 			{
 			TOGGLE_INIT_CALLBACK(BANNER_TP_1FCOMPRATE);
 			};
 		    };
*11E
*11I
                 callbacks
                     {
                     XmNvalueChangedCallback = procedures
                         {
                         TOGGLE_CHANGE_CALLBACK(BANNER_TP_1FCOMPRATE);
                         };
                     MrmNcreateCallback = procedures
                         {
                         TOGGLE_INIT_CALLBACK(BANNER_TP_1FCOMPRATE);
                         };
                     };
*11E
                 };
             XmToggleButtonGadget 
                 {
                 arguments
                     {
                     XmNx = TP_COLUMN;
*14D
                     XmNy = 40;
*14E
*14I
                     XmNy = 53;
*14E
                     XmNlabelString = 
                     compound_string("TP Start Rate");
                     };
*11D
 		callbacks
 		    {
 		    XmNvalueChangedCallback = procedures
 			{
 			TOGGLE_CHANGE_CALLBACK(BANNER_TP_STARTCOMPRATE);
 			};
 		    MrmNcreateCallback = procedures
 			{
 			TOGGLE_INIT_CALLBACK(BANNER_TP_STARTCOMPRATE);
 			};
 		    };
*11E
*11I
                 callbacks
                     {
                     XmNvalueChangedCallback = procedures
                         {
                         TOGGLE_CHANGE_CALLBACK(BANNER_TP_STARTCOMPRATE);
                         };
                     MrmNcreateCallback = procedures
                         {
                         TOGGLE_INIT_CALLBACK(BANNER_TP_STARTCOMPRATE);
                         };
                     };
*11E
                 };
             XmToggleButtonGadget 
                 {
                 arguments
                     {
                     XmNx = TP_COLUMN;
*14D
                     XmNy = 55;
*14E
*14I
                     XmNy = 74;
*14E
                     XmNlabelString = 
                     compound_string("TP Prepare Rate");
                     };
*11D
 		callbacks
 		    {
 		    XmNvalueChangedCallback = procedures
 			{
 			TOGGLE_CHANGE_CALLBACK(BANNER_TP_PREPCOMPRATE);
 			};
 		    MrmNcreateCallback = procedures
 			{
 			TOGGLE_INIT_CALLBACK(BANNER_TP_PREPCOMPRATE);
 			};
 		    };
*11E
*11I
                 callbacks
                     {
                     XmNvalueChangedCallback = procedures
                         {
                         TOGGLE_CHANGE_CALLBACK(BANNER_TP_PREPCOMPRATE);
                         };
                     MrmNcreateCallback = procedures
                         {
                         TOGGLE_INIT_CALLBACK(BANNER_TP_PREPCOMPRATE);
                         };
                     };
*11E
                 };
             XmToggleButtonGadget 
                 {
                 arguments
                     {
                     XmNx = TP_COLUMN;
*14D
                     XmNy = 70;
*14E
*14I
                     XmNy = 96;
*14E
                     XmNlabelString = 
                     compound_string("TP Abort Rate");
                     };
*11D
 		callbacks
 		    {
 		    XmNvalueChangedCallback = procedures
 			{
 			TOGGLE_CHANGE_CALLBACK(BANNER_TP_ABORTCOMPRATE);
 			};
 		    MrmNcreateCallback = procedures
 			{
 			TOGGLE_INIT_CALLBACK(BANNER_TP_ABORTCOMPRATE);
 			};
 		    };
*11E
*11I
                 callbacks
                     {
                     XmNvalueChangedCallback = procedures
                         {
                         TOGGLE_CHANGE_CALLBACK(BANNER_TP_ABORTCOMPRATE);
                         };
                     MrmNcreateCallback = procedures
                         {
                         TOGGLE_INIT_CALLBACK(BANNER_TP_ABORTCOMPRATE);
                         };
                     };
*11E
                 };
             XmToggleButtonGadget 
                 {
                 arguments
                     {
                     XmNx = TP_COLUMN;
*14D
                     XmNy = 85;
*14E
*14I
                     XmNy = 117;
*14E
                     XmNlabelString = 
                     compound_string("TP End Rate");
                     };
*11D
 		callbacks
 		    {
 		    XmNvalueChangedCallback = procedures
 			{
 			TOGGLE_CHANGE_CALLBACK(BANNER_TP_ENDCOMPRATE);
 			};
 		    MrmNcreateCallback = procedures
 			{
 			TOGGLE_INIT_CALLBACK(BANNER_TP_ENDCOMPRATE);
 			};
 		    };
*11E
*11I
                 callbacks
                     {
                     XmNvalueChangedCallback = procedures
                         {
                         TOGGLE_CHANGE_CALLBACK(BANNER_TP_ENDCOMPRATE);
                         };
                     MrmNcreateCallback = procedures
                         {
                         TOGGLE_INIT_CALLBACK(BANNER_TP_ENDCOMPRATE);
                         };
                     };
*11E
                 };
             XmToggleButtonGadget 
                 {
                 arguments
                     {
                     XmNx = TP_COLUMN;
*14D
                     XmNy = 100;
*14E
*14I
                     XmNy = 139;
*14E
                     XmNlabelString = 
                     compound_string("TP Rem Start Rate");
                     };
*11D
 		callbacks
 		    {
 		    XmNvalueChangedCallback = procedures
 			{
 			TOGGLE_CHANGE_CALLBACK(BANNER_TP_REMSTARTCOMPRATE);
 			};
 		    MrmNcreateCallback = procedures
 			{
 			TOGGLE_INIT_CALLBACK(BANNER_TP_REMSTARTCOMPRATE);
 			};
 		    };
*11E
*11I
                 callbacks
                     {
                     XmNvalueChangedCallback = procedures
                         {
                         TOGGLE_CHANGE_CALLBACK(BANNER_TP_REMSTARTCOMPRATE);
                         };
                     MrmNcreateCallback = procedures
                         {
                         TOGGLE_INIT_CALLBACK(BANNER_TP_REMSTARTCOMPRATE);
                         };
                     };
*11E
                 };
             XmToggleButtonGadget 
                 {
                 arguments
                     {
                     XmNx = TP_COLUMN;
*14D
                     XmNy = 115;
*14E
*14I
                     XmNy = 161;
*14E
                     XmNlabelString = 
                     compound_string("TP Rem Add Rate");
                     };
*11D
 		callbacks
 		    {
 		    XmNvalueChangedCallback = procedures
 			{
 			TOGGLE_CHANGE_CALLBACK(BANNER_TP_REMENDCOMPRATE);
 			};
 		    MrmNcreateCallback = procedures
 			{
 			TOGGLE_INIT_CALLBACK(BANNER_TP_REMENDCOMPRATE);
 			};
 		    };
*11E
*11I
                 callbacks
                     {
                     XmNvalueChangedCallback = procedures
                         {
                         TOGGLE_CHANGE_CALLBACK(BANNER_TP_REMENDCOMPRATE);
                         };
                     MrmNcreateCallback = procedures
                         {
                         TOGGLE_INIT_CALLBACK(BANNER_TP_REMENDCOMPRATE);
                         };
                     };
*11E
                 };
             XmToggleButtonGadget 
                 {
                 arguments
                     {
                     XmNx = TP_COLUMN;
*14D
                     XmNy = 130;
*14E
*14I
                     XmNy = 183;
*14E
                     XmNlabelString = 
                     compound_string("TP Comp Rate 1");
                     };
*11D
 		callbacks
 		    {
 		    XmNvalueChangedCallback = procedures
 			{
 			TOGGLE_CHANGE_CALLBACK(BANNER_TP_COMPRATE1);
 			};
 		    MrmNcreateCallback = procedures
 			{
 			TOGGLE_INIT_CALLBACK(BANNER_TP_COMPRATE1);
 			};
 		    };
*11E
*11I
                 callbacks
                     {
                     XmNvalueChangedCallback = procedures
                         {
                         TOGGLE_CHANGE_CALLBACK(BANNER_TP_COMPRATE1);
                         };
                     MrmNcreateCallback = procedures
                         {
                         TOGGLE_INIT_CALLBACK(BANNER_TP_COMPRATE1);
                         };
                     };
*11E
                 };
             XmToggleButtonGadget 
                 {
                 arguments
                     {
                     XmNx = TP_COLUMN;
*14D
                     XmNy = 145;
*14E
*14I
                     XmNy = 205;
*14E
                     XmNlabelString = 
                     compound_string("TP Comp Rate 2");
                     };
*11D
 		callbacks
 		    {
 		    XmNvalueChangedCallback = procedures
 			{
 			TOGGLE_CHANGE_CALLBACK(BANNER_TP_COMPRATE2);
 			};
 		    MrmNcreateCallback = procedures
 			{
 			TOGGLE_INIT_CALLBACK(BANNER_TP_COMPRATE2);
 			};
 		    };
*11E
*11I
                 callbacks
                     {
                     XmNvalueChangedCallback = procedures
                         {
                         TOGGLE_CHANGE_CALLBACK(BANNER_TP_COMPRATE2);
                         };
                     MrmNcreateCallback = procedures
                         {
                         TOGGLE_INIT_CALLBACK(BANNER_TP_COMPRATE2);
                         };
                     };
*11E
                 };
             XmToggleButtonGadget 
                 {
                 arguments
                     {
                     XmNx = TP_COLUMN;
*14D
                     XmNy = 160;
*14E
*14I
                     XmNy = 227;
*14E
                     XmNlabelString = 
                     compound_string("TP Comp Rate 3");
                     };
*11D
 		callbacks
 		    {
 		    XmNvalueChangedCallback = procedures
 			{
 			TOGGLE_CHANGE_CALLBACK(BANNER_TP_COMPRATE3);
 			};
 		    MrmNcreateCallback = procedures
 			{
 			TOGGLE_INIT_CALLBACK(BANNER_TP_COMPRATE3);
 			};
 		    };
*11E
*11I
                 callbacks
                     {
                     XmNvalueChangedCallback = procedures
                         {
                         TOGGLE_CHANGE_CALLBACK(BANNER_TP_COMPRATE3);
                         };
                     MrmNcreateCallback = procedures
                         {
                         TOGGLE_INIT_CALLBACK(BANNER_TP_COMPRATE3);
                         };
                     };
*11E
                 };
             XmToggleButtonGadget 
                 {
                 arguments
                     {
                     XmNx = TP_COLUMN;
*14D
                     XmNy = 175;
*14E
*14I
                     XmNy = 249;
*14E
                     XmNlabelString = 
                     compound_string("TP Comp Rate 4");
                     };
*11D
 		callbacks
 		    {
 		    XmNvalueChangedCallback = procedures
 			{
 			TOGGLE_CHANGE_CALLBACK(BANNER_TP_COMPRATE4);
 			};
 		    MrmNcreateCallback = procedures
 			{
 			TOGGLE_INIT_CALLBACK(BANNER_TP_COMPRATE4);
 			};
 		    };
*11E
*11I
                 callbacks
                     {
                     XmNvalueChangedCallback = procedures
                         {
                         TOGGLE_CHANGE_CALLBACK(BANNER_TP_COMPRATE4);
                         };
                     MrmNcreateCallback = procedures
                         {
                         TOGGLE_INIT_CALLBACK(BANNER_TP_COMPRATE4);
                         };
                     };
*11E
                 };
             XmToggleButton 
                 {
                 arguments
                     {
                     XmNx = FIRST_COLUMN;
*14D
                     XmNy = 190;
*14E
*14I
                     XmNy = 279;
*14E
                     XmNlabelString = 
                     compound_string("Batch Queue Display");
                     };
*11D
 		callbacks
 		    {
 		    XmNvalueChangedCallback = procedures
 			{
 			TOGGLE_CHANGE_CALLBACK(BANNER_BATCH_QUEUE);
 			};
 		    MrmNcreateCallback = procedures
 			{
 			TOGGLE_INIT_CALLBACK(BANNER_BATCH_QUEUE);
 			};
 		    };
*11E
*11I
                 callbacks
                     {
                     XmNvalueChangedCallback = procedures
                         {
                         TOGGLE_CHANGE_CALLBACK(BANNER_BATCH_QUEUE);
                         };
                     MrmNcreateCallback = procedures
                         {
                         TOGGLE_INIT_CALLBACK(BANNER_BATCH_QUEUE);
                         };
                     };
*11E
                 };
             XmLabel 
                 {
                 arguments
                     {
                     XmNx = FIRST_COLUMN;
*14D
                     XmNy = 272;
*14E
*14I
                     XmNy = 377;
*14E
                     XmNlabelString = 
                     compound_string("Print Queue Spec");
                     };
                 };
             XmLabel 
                 {
                 arguments
                     {
                     XmNx = FIRST_COLUMN;
*14D
                     XmNy = 302;
*14E
*14I
                     XmNy = 411;
*14E
                     XmNlabelString = 
                     compound_string("Batch Queue Spec");
                     };
                 };
             XmLabel 
                 {
                 arguments
                     {
                     XmNx = FIRST_COLUMN;
*14D
                     XmNy = 333;
*14E
*14I
                     XmNy = 445;
*14E
                     XmNlabelString = 
                     compound_string("Show User Name");
                     };
                 };
             XmText 
                 {
                 arguments
                     {
                     XmNx = 140;
*14D
                     XmNy = 330;
*14E
*14I
                     XmNy = 439;
*14E
                     XmNautoShowCursorPosition = true;
                     XmNcolumns = 25;
                     XmNcursorPositionVisible = true;
                     XmNeditMode = XmSINGLE_LINE_EDIT;
                     XmNeditable = true;
                     XmNresizeHeight = false;
                     XmNresizeWidth = false;
                     XmNrows = 1;
                     XmNwordWrap = false;
                     };
*11D
 		callbacks
 		    {
 		    MrmNcreateCallback = procedures
 			{
 			TOGGLE_INIT_CALLBACK(BANNER_QUEUE_USER);
 			};
 		    };
*11E
*11I
                 callbacks
                     {
                     MrmNcreateCallback = procedures
                         {
                         TOGGLE_INIT_CALLBACK(BANNER_QUEUE_USER);
                         };
                     };
*11E
                 };
             XmText 
                 {
                 arguments
                     {
                     XmNx = 140;
*14D
                     XmNy = 299;
*14E
*14I
                     XmNy = 404;
*14E
                     XmNautoShowCursorPosition = true;
                     XmNcolumns = 25;
                     XmNeditMode = XmSINGLE_LINE_EDIT;
                     XmNeditable = true;
                     XmNcursorPositionVisible = true;
                     XmNresizeHeight = false;
                     XmNresizeWidth = false;
                     XmNrows = 1;
                     XmNwordWrap = false;
                     };
*11D
 		callbacks
 		    {
 		    MrmNcreateCallback = procedures
 			{
 			TOGGLE_INIT_CALLBACK(BANNER_BATCH_QUEUE_NAME);
 			};
 		    };
*11E
*11I
                 callbacks
                     {
                     MrmNcreateCallback = procedures
                         {
                         TOGGLE_INIT_CALLBACK(BANNER_BATCH_QUEUE_NAME);
                         };
                     };
*11E
                 };
             XmText 
                 {
                 arguments
                     {
                     XmNx = 140;
*14D
                     XmNy = 270;
*14E
*14I
                     XmNy = 369;
*14E
                     XmNcolumns = 25;
                     XmNautoShowCursorPosition = true;
                     XmNcursorPositionVisible = true;
                     XmNeditMode = XmSINGLE_LINE_EDIT;
                     XmNeditable = true;
                     XmNresizeHeight = false;
                     XmNrows = 1;
                     XmNresizeWidth = false;
                     XmNwordWrap = false;
                     };
*11D
 		callbacks
 		    {
 		    MrmNcreateCallback = procedures
 			{
 			TOGGLE_INIT_CALLBACK(BANNER_PRINT_QUEUE_NAME);
 			};
 		    };
*11E
*11I
                 callbacks
                     {
                     MrmNcreateCallback = procedures
                         {
                         TOGGLE_INIT_CALLBACK(BANNER_PRINT_QUEUE_NAME);
                         };
                     };
*11E
                 };
             XmToggleButton 
                 {
                 arguments
                     {
                     XmNx = FIRST_COLUMN;
*14D
                     XmNy = 245;
*14E
*14I
                     XmNy = 338;
*14E
                     XmNlabelString = 
                     compound_string("Show Jobs On Hold");
                     };
*11D
 		callbacks
 		    {
 		    XmNvalueChangedCallback = procedures
 			{
 			TOGGLE_CHANGE_CALLBACK(BANNER_SHOW_HOLD);
 			};
 		    MrmNcreateCallback = procedures
 			{
 			TOGGLE_INIT_CALLBACK(BANNER_SHOW_HOLD);
 			};
 		    };
*11E
*11I
                 callbacks
                     {
                     XmNvalueChangedCallback = procedures
                         {
                         TOGGLE_CHANGE_CALLBACK(BANNER_SHOW_HOLD);
                         };
                     MrmNcreateCallback = procedures
                         {
                         TOGGLE_INIT_CALLBACK(BANNER_SHOW_HOLD);
                         };
                     };
*11E
                 };
             XmToggleButton 
                 {
                 arguments
                     {
                     XmNx = FIRST_COLUMN;
*14D
                     XmNy = 230;
*14E
*14I
                     XmNy = 316;
*14E
                     XmNlabelString = 
                     compound_string("Show All Users");
                     };
*11D
 		callbacks
 		    {
 		    XmNvalueChangedCallback = procedures
 			{
 			TOGGLE_CHANGE_CALLBACK(BANNER_SHOW_ALL_USERS);
 			};
 		    MrmNcreateCallback = procedures
 			{
 			TOGGLE_INIT_CALLBACK(BANNER_SHOW_ALL_USERS);
 			};
 		    };
*11E
*11I
                 callbacks
                     {
                     XmNvalueChangedCallback = procedures
                         {
                         TOGGLE_CHANGE_CALLBACK(BANNER_SHOW_ALL_USERS);
                         };
                     MrmNcreateCallback = procedures
                         {
                         TOGGLE_INIT_CALLBACK(BANNER_SHOW_ALL_USERS);
                         };
                     };
*11E
                 };
             XmToggleButton 
                 {
                 arguments
                     {
                     XmNx = SECOND_COLUMN;
*14D
                     XmNy = 230;
*14E
*14I
                     XmNy = 312;
*14E
                     XmNlabelString = 
                     compound_string("Show Stopped Queues");
                     };
*11D
 		callbacks
 		    {
 		    XmNvalueChangedCallback = procedures
 			{
 			TOGGLE_CHANGE_CALLBACK(BANNER_SHOW_STOPPED);
 			};
 		    MrmNcreateCallback = procedures
 			{
 			TOGGLE_INIT_CALLBACK(BANNER_SHOW_STOPPED);
 			};
 		    };
*11E
*11I
                 callbacks
                     {
                     XmNvalueChangedCallback = procedures
                         {
                         TOGGLE_CHANGE_CALLBACK(BANNER_SHOW_STOPPED);
                         };
                     MrmNcreateCallback = procedures
                         {
                         TOGGLE_INIT_CALLBACK(BANNER_SHOW_STOPPED);
                         };
                     };
*11E
                 };
             XmToggleButton 
                 {
                 arguments
                     {
                     XmNx = SECOND_COLUMN;
*14D
                     XmNy = 245;
*14E
*14I
                     XmNy = 337;
*14E
                     XmNlabelString = 
                     compound_string("Show Intervining Jobs");
                     };
*11D
 		callbacks
 		    {
 		    XmNvalueChangedCallback = procedures
 			{
 			TOGGLE_CHANGE_CALLBACK(BANNER_SHOW_INT);
 			};
 		    MrmNcreateCallback = procedures
 			{
 			TOGGLE_INIT_CALLBACK(BANNER_SHOW_INT);
 			};
 		    };
*11E
*11I
                 callbacks
                     {
                     XmNvalueChangedCallback = procedures
                         {
                         TOGGLE_CHANGE_CALLBACK(BANNER_SHOW_INT);
                         };
                     MrmNcreateCallback = procedures
                         {
                         TOGGLE_INIT_CALLBACK(BANNER_SHOW_INT);
                         };
                     };
*11E
                 };
             XmLabel 
                 {
                 arguments
                     {
*11D
                     XmNx = TP_COLUMN;
                     XmNy = 215;
*11E
*11I
                     XmNx = 602;
*14D
                     XmNy = 11;
*14E
*14I
                     XmNy = 18;
*14E
*11E
                     XmNlabelString = 
                     compound_string("TP Max Rate");
                     };
                 };
             XmLabel 
                 {
                 arguments
                     {
*11D
                     XmNx = TP_COLUMN;
                     XmNy = 245;
*11E
*11I
                     XmNx = 602;
*14D
                     XmNy = 41;
*14E
*14I
                     XmNy = 54;
*14E
*11E
                     XmNlabelString = 
                     compound_string("TP Comp Rate 1");
                     };
                 };
             XmLabel 
                 {
                 arguments
                     {
*11D
                     XmNx = TP_COLUMN;
                     XmNy = 275;
*11E
*11I
                     XmNx = 602;
*14D
                     XmNy = 71;
*14E
*14I
                     XmNy = 93;
*14E
*11E
                     XmNlabelString = 
                     compound_string("TP Comp Rate 2");
                     };
                 };
             XmLabel 
                 {
                 arguments
                     {
*11D
                     XmNx = TP_COLUMN;
                     XmNy = 305;
*11E
*11I
                     XmNx = 602;
*14D
                     XmNy = 101;
*14E
*14I
                     XmNy = 131;
*14E
*11E
                     XmNlabelString = 
                     compound_string("TP Comp Rate 3");
                     };
                 };
             XmLabel 
                 {
                 arguments
                     {
*11D
                     XmNx = TP_COLUMN;
                     XmNy = 335;
*11E
*11I
                     XmNx = 602;
*14D
                     XmNy = 131;
*14E
*14I
                     XmNy = 172;
*14E
*11E
                     XmNlabelString = 
                     compound_string("TP Comp Rate 4");
                     };
                 };
             XmText 
                 {
                 arguments
                     {
*11D
                     XmNx = 560;
                     XmNy = 210;
*11E
*11I
                     XmNx = 712;
                     XmNy = 6;
*11E
                     XmNautoShowCursorPosition = true;
                     XmNcolumns = 4;
                     XmNcursorPositionVisible = true;
                     XmNeditMode = XmSINGLE_LINE_EDIT;
                     XmNeditable = true;
                     XmNresizeHeight = false;
                     XmNresizeWidth = false;
                     XmNrows = 1;
                     XmNwordWrap = false;
                     };
*11D
 		callbacks
 		    {
 		    MrmNcreateCallback = procedures
 			{
 			TOGGLE_INIT_CALLBACK(BANNER_MAX_COMP_RATE);
 			};
 		    };
*11E
*11I
                 callbacks
                     {
                     MrmNcreateCallback = procedures
                         {
                         TOGGLE_INIT_CALLBACK(BANNER_MAX_COMP_RATE);
                         };
                     };
*11E
                 };
             XmText 
                 {
                 arguments
                     {
*11D
                     XmNx = 560;
                     XmNy = 240;
*11E
*11I
                     XmNx = 712;
*14D
                     XmNy = 36;
*14E
*14I
                     XmNy = 47;
*14E
*11E
                     XmNautoShowCursorPosition = true;
                     XmNcolumns = 4;
                     XmNcursorPositionVisible = true;
                     XmNeditMode = XmSINGLE_LINE_EDIT;
                     XmNeditable = true;
                     XmNresizeHeight = false;
                     XmNresizeWidth = false;
                     XmNrows = 1;
                     XmNwordWrap = false;
                     };
*11D
 		callbacks
 		    {
 		    MrmNcreateCallback = procedures
 			{
 			TOGGLE_INIT_CALLBACK(BANNER_COMP_RATE1_START);
 			};
 		    };
*11E
*11I
                 callbacks
                     {
                     MrmNcreateCallback = procedures
                         {
                         TOGGLE_INIT_CALLBACK(BANNER_COMP_RATE1_START);
                         };
                     };
*11E
                 };
             XmText 
                 {
                 arguments
                     {
*11D
                     XmNx = 560;
                     XmNy = 270;
*11E
*11I
                     XmNx = 712;
*14D
                     XmNy = 66;
*14E
*14I
                     XmNy = 86;
*14E
*11E
                     XmNautoShowCursorPosition = true;
                     XmNcolumns = 4;
                     XmNeditMode = XmSINGLE_LINE_EDIT;
                     XmNcursorPositionVisible = true;
                     XmNeditable = true;
                     XmNresizeHeight = false;
                     XmNresizeWidth = false;
                     XmNrows = 1;
                     XmNwordWrap = false;
                     };
*11D
 		callbacks
 		    {
 		    MrmNcreateCallback = procedures
 			{
 			TOGGLE_INIT_CALLBACK(BANNER_COMP_RATE2_START);
 			};
 		    };
*11E
*11I
                 callbacks
                     {
                     MrmNcreateCallback = procedures
                         {
                         TOGGLE_INIT_CALLBACK(BANNER_COMP_RATE2_START);
                         };
                     };
*11E
                 };
             XmText 
                 {
                 arguments
                     {
*11D
                     XmNx = 560;
                     XmNy = 300;
*11E
*11I
                     XmNx = 712;
*14D
                     XmNy = 96;
*14E
*14I
                     XmNy = 125;
*14E
*11E
                     XmNautoShowCursorPosition = true;
                     XmNcolumns = 4;
                     XmNcursorPositionVisible = true;
                     XmNeditMode = XmSINGLE_LINE_EDIT;
                     XmNeditable = true;
                     XmNresizeHeight = false;
                     XmNresizeWidth = false;
                     XmNrows = 1;
                     XmNwordWrap = false;
                     };
*11D
 		callbacks
 		    {
 		    MrmNcreateCallback = procedures
 			{
 			TOGGLE_INIT_CALLBACK(BANNER_COMP_RATE3_START);
 			};
 		    };
*11E
*11I
                 callbacks
                     {
                     MrmNcreateCallback = procedures
                         {
                         TOGGLE_INIT_CALLBACK(BANNER_COMP_RATE3_START);
                         };
                     };
*11E
                 };
             XmText 
                 {
                 arguments
                     {
*11D
                     XmNx = 560;
                     XmNy = 330;
*11E
*11I
                     XmNx = 712;
*14D
                     XmNy = 126;
*14E
*14I
                     XmNy = 165;
*14E
*11E
                     XmNautoShowCursorPosition = true;
                     XmNcolumns = 4;
                     XmNcursorPositionVisible = true;
                     XmNeditMode = XmSINGLE_LINE_EDIT;
                     XmNeditable = true;
                     XmNresizeHeight = false;
                     XmNresizeWidth = false;
                     XmNrows = 1;
                     XmNwordWrap = false;
                     };
*11D
 		callbacks
 		    {
 		    MrmNcreateCallback = procedures
 			{
 			TOGGLE_INIT_CALLBACK(BANNER_COMP_RATE4_START);
 			};
 		    };
*11E
*11I
                 callbacks
                     {
                     MrmNcreateCallback = procedures
                         {
                         TOGGLE_INIT_CALLBACK(BANNER_COMP_RATE4_START);
                         };
                     };
*11E
                 };
             XmLabel 
                 {
                 arguments
                     {
*11D
                     XmNx = 620;
                     XmNy = 245;
*11E
*11I
                     XmNx = 772;
                     XmNy = 41;
*11E
                     XmNlabelString = 
                     compound_string("To");
                     };
                 };
             XmLabel 
                 {
                 arguments
                     {
*11D
                     XmNx = 620;
                     XmNy = 275;
*11E
*11I
                     XmNx = 772;
*14D
                     XmNy = 71;
*14E
*14I
                     XmNy = 83;
*14E
*11E
                     XmNlabelString = 
                     compound_string("To");
                     };
                 };
             XmLabel 
                 {
                 arguments
                     {
*11D
                     XmNx = 620;
                     XmNy = 305;
*11E
*11I
                     XmNx = 772;
*14D
                     XmNy = 101;
*14E
*14I
                     XmNy = 123;
*14E
*11E
                     XmNlabelString = 
                     compound_string("To");
                     };
                 };
             XmText 
                 {
                 arguments
                     {
*11D
                     XmNx = 650;
                     XmNy = 240;
*11E
*11I
                     XmNx = 802;
                     XmNy = 36;
*11E
                     XmNautoShowCursorPosition = true;
                     XmNcolumns = 4;
                     XmNcursorPositionVisible = true;
                     XmNeditMode = XmSINGLE_LINE_EDIT;
                     XmNeditable = true;
                     XmNresizeHeight = false;
                     XmNresizeWidth = false;
                     XmNrows = 1;
                     XmNwordWrap = false;
                     };
*11D
 		callbacks
 		    {
 		    MrmNcreateCallback = procedures
 			{
 			TOGGLE_INIT_CALLBACK(BANNER_COMP_RATE1_END);
 			};
 		    };
*11E
*11I
                 callbacks
                     {
                     MrmNcreateCallback = procedures
                         {
                         TOGGLE_INIT_CALLBACK(BANNER_COMP_RATE1_END);
                         };
                     };
*11E
                 };
             XmText 
                 {
                 arguments
                     {
*11D
                     XmNx = 650;
                     XmNy = 270;
*11E
*11I
                     XmNx = 802;
*14D
                     XmNy = 66;
*14E
*14I
                     XmNy = 75;
*14E
*11E
                     XmNautoShowCursorPosition = true;
                     XmNcolumns = 4;
                     XmNcursorPositionVisible = true;
                     XmNeditMode = XmSINGLE_LINE_EDIT;
                     XmNeditable = true;
                     XmNresizeHeight = false;
                     XmNresizeWidth = false;
                     XmNrows = 1;
                     XmNwordWrap = false;
                     };
*11D
 		callbacks
 		    {
 		    MrmNcreateCallback = procedures
 			{
 			TOGGLE_INIT_CALLBACK(BANNER_COMP_RATE2_END);
 			};
 		    };
*11E
*11I
                 callbacks
                     {
                     MrmNcreateCallback = procedures
                         {
                         TOGGLE_INIT_CALLBACK(BANNER_COMP_RATE2_END);
                         };
                     };
*11E
                 };
             XmText 
                 {
                 arguments
                     {
*11D
                     XmNx = 650;
                     XmNy = 300;
*11E
*11I
                     XmNx = 802;
*14D
                     XmNy = 96;
*14E
*14I
                     XmNy = 114;
*14E
*11E
                     XmNautoShowCursorPosition = true;
                     XmNcolumns = 4;
                     XmNcursorPositionVisible = true;
                     XmNeditMode = XmSINGLE_LINE_EDIT;
                     XmNeditable = true;
                     XmNresizeHeight = false;
                     XmNresizeWidth = false;
                     XmNrows = 1;
                     XmNwordWrap = false;
                     };
*9E
*11D
 		callbacks
*11E
*9D
 			{
*9E
*7D
 			CREATE = PROCEDURE toggle_init_callback (banner_disk_0_name);
*7E
*7I
*9D
 			XmNcreateCallback = PROCEDURE toggle_init_callback (banner_disk_0_name);
*9E
*7E
*9D
 			};		
 		};
 
*9E
*7D
 	object disk_0_label : LABEL GADGET
*7E
*7I
*9D
 	object disk_0_label : XmLabel GADGET
*9E
*7E
*9D
 		{
 		arguments {
*9E
*7D
 			LABEL_LABEL = 'Disk 0:';
 			X = 270;
*7E
*2D
 			Y = 130;
*2E
*2I
*7D
 			Y = 140;
*7E
*7I
*9D
 			XmNlabelString = 'Disk 0:';
 			XmNx = 380;
 			XmNy = 200;
*9E
*7E
*2E
*9D
 			};
 		};
 
*9E
*7D
 	object disk_0 : SIMPLE_TEXT
*7E
*7I
*9D
 	object disk_0 : XmText
*9E
*7E
*9D
 		{
 		arguments {
*9E
*7D
 			EDITABLE = TRUE;
 			INSERTION_POINT_VISIBLE = TRUE;
 			AUTO_SHOW_INSERTION_POINT = TRUE;
 			SCROLL_VERTICAL = FALSE;
 			WORD_WRAP = FALSE;
 			ROWS = 1;
 			COLS = 20;
 			RESIZE_HEIGHT = FALSE;
 			RESIZE_WIDTH  = FALSE;
 			X = 300;
*7E
*2D
 			Y = 130;
*2E
*2I
*7D
 			Y = 140;
*7E
*7I
*9D
 			XmNeditable = TRUE;
 			XmNcursorPositionVisible = TRUE;
 			XmNautoShowCursorPosition = TRUE;
 !			XmNscrollVertical = FALSE;
 			XmNwordWrap = FALSE;
 			XmNrows = 1;
 			XmNcolumns = 20;
 			XmNresizeHeight = FALSE;
 			XmNresizeWidth  = FALSE;
 			XmNx = 450;
 			XmNy = 200;
*9E
*7E
*2E
*9D
 			};
 		callbacks
 			{
*9E
*7D
 			CREATE = PROCEDURE toggle_init_callback (banner_disk_0);
*7E
*7I
*9D
 			XmNcreateCallback = PROCEDURE toggle_init_callback (banner_disk_0);
*9E
*7E
*9D
 			};		
 		};
 
*9E
*7D
 	object disk_1_name_label : LABEL GADGET
*7E
*7I
*9D
 	object disk_1_name_label : XmLabel GADGET
*9E
*7E
*9D
 		{
 		arguments {
*9E
*7D
 			LABEL_LABEL = 'Disk 1 Name:';
 			X = 150;
*7E
*2D
 			Y = 150;
*2E
*2I
*7D
 			Y = 160;
*7E
*7I
*9D
 			XmNlabelString = 'Disk 1 Name:';
 			XmNx = 160;
 			XmNy = 220;
*9E
*7E
*2E
*9D
 			};
 		};
 
*9E
*7D
 	object disk_1_name : SIMPLE_TEXT
*7E
*7I
*9D
 	object disk_1_name : XmText
*9E
*7E
*9D
 		{
 		arguments {
*9E
*7D
 			EDITABLE = TRUE;
 			INSERTION_POINT_VISIBLE = TRUE;
 			AUTO_SHOW_INSERTION_POINT = TRUE;
 			SCROLL_VERTICAL = FALSE;
 			WORD_WRAP = FALSE;
 			ROWS = 1 ;
 			COLS = 11;
 			RESIZE_HEIGHT = FALSE;
 			RESIZE_WIDTH  = FALSE;
 			X = 200;
*7E
*2D
 			Y = 150;
*2E
*2I
*7D
 			Y = 160;
*7E
*7I
*9D
 			XmNeditable = TRUE;
 			XmNcursorPositionVisible = TRUE;
 			XmNautoShowCursorPosition = TRUE;
 !			XmNscrollVertical = FALSE;
 			XmNwordWrap = FALSE;
 			XmNrows = 1 ;
 			XmNcolumns = 11;
 			XmNresizeHeight = FALSE;
 			XmNresizeWidth  = FALSE;
 			XmNx = 260;
 			XmNy = 220;
*9E
*7E
*2E
*9D
 			};
 		callbacks
 			{
*9E
*7D
 			CREATE = PROCEDURE toggle_init_callback (banner_disk_1_name);
*7E
*7I
*9D
 			XmNcreateCallback = PROCEDURE toggle_init_callback (banner_disk_1_name);
*9E
*7E
*9D
 			};		
 		};
 
*9E
*7D
 	object disk_1_label : LABEL GADGET
*7E
*7I
*9D
 	object disk_1_label : XmLabel GADGET
*9E
*7E
*9D
 		{
 		arguments {
*9E
*7D
 			LABEL_LABEL = 'Disk 1:';
 			X = 270;
*7E
*2D
 			Y = 150;
*2E
*2I
*7D
 			Y = 160;
*7E
*7I
*9D
 			XmNlabelString = 'Disk 1:';
 			XmNx = 380;
 			XmNy = 220;
*9E
*7E
*2E
*9D
 			};
 		};
 
*9E
*7D
 	object disk_1 : SIMPLE_TEXT
*7E
*7I
*9D
 	object disk_1 : XmText
*9E
*7E
*9D
 		{
 		arguments {
*9E
*7D
 			EDITABLE = TRUE;
 			INSERTION_POINT_VISIBLE = TRUE;
 			AUTO_SHOW_INSERTION_POINT = TRUE;
 			SCROLL_VERTICAL = FALSE;
 			WORD_WRAP = FALSE;
 			ROWS = 1;
 			COLS = 20;
 			RESIZE_HEIGHT = FALSE;
 			RESIZE_WIDTH  = FALSE;
 			X = 300;
*7E
*2D
 			Y = 150;
*2E
*2I
*7D
 			Y = 160;
*7E
*7I
*9D
 			XmNeditable = TRUE;
 			XmNcursorPositionVisible = TRUE;
 			XmNautoShowCursorPosition = TRUE;
 !			XmNscrollVertical = FALSE;
 			XmNwordWrap = FALSE;
 			XmNrows = 1;
 			XmNcolumns = 20;
 			XmNresizeHeight = FALSE;
 			XmNresizeWidth  = FALSE;
 			XmNx = 450;
 			XmNy = 220;
*9E
*7E
*2E
*9D
 			};
 		callbacks
 			{
*9E
*7D
 			CREATE = PROCEDURE toggle_init_callback (banner_disk_1);
*7E
*7I
*9D
 			XmNcreateCallback = PROCEDURE toggle_init_callback (banner_disk_1);
*9E
*7E
*9D
 			};		
 		};
 
*9E
*7D
 	object disk_2_name_label : LABEL GADGET
*7E
*7I
*9D
 	object disk_2_name_label : XmLabel GADGET
*9E
*7E
*9D
 		{
 		arguments {
*9E
*7D
 			LABEL_LABEL = 'Disk 2 Name:';
 			X = 150;
*7E
*2D
 			Y = 170;
*2E
*2I
*7D
 			Y = 180;
*7E
*7I
*9D
 			XmNlabelString = 'Disk 2 Name:';
 			XmNx = 160;
 			XmNy = 240;
*9E
*7E
*2E
*9D
 			};
 		};
 
*9E
*7D
 	object disk_2_name : SIMPLE_TEXT
*7E
*7I
*9D
 	object disk_2_name : XmText
*9E
*7E
*9D
 		{
 		arguments {
*9E
*7D
 			EDITABLE = TRUE;
 			INSERTION_POINT_VISIBLE = TRUE;
 			AUTO_SHOW_INSERTION_POINT = TRUE;
 			SCROLL_VERTICAL = FALSE;
 			WORD_WRAP = FALSE;
 			ROWS = 1 ;
 			COLS = 11;
 			RESIZE_HEIGHT = FALSE;
 			RESIZE_WIDTH  = FALSE;
 			X = 200;
*7E
*2D
 			Y = 170;
*2E
*2I
*7D
 			Y = 180;
*7E
*7I
*9D
 			XmNeditable = TRUE;
 			XmNcursorPositionVisible = TRUE;
 			XmNautoShowCursorPosition = TRUE;
 !			XmNscrollVertical = FALSE;
 			XmNwordWrap = FALSE;
 			XmNrows = 1 ;
 			XmNcolumns = 11;
 			XmNresizeHeight = FALSE;
 			XmNresizeWidth  = FALSE;
 			XmNx = 260;
 			XmNy = 240;
*9E
*7E
*2E
*9D
 			};
 		callbacks
 			{
*9E
*7D
 			CREATE = PROCEDURE toggle_init_callback (banner_disk_2_name);
*7E
*7I
*9D
 			XmNcreateCallback = PROCEDURE toggle_init_callback (banner_disk_2_name);
*9E
*7E
*9D
 			};		
 		};
 
*9E
*7D
 	object disk_2_label : LABEL GADGET
*7E
*7I
*9D
 	object disk_2_label : XmLabel GADGET
*9E
*7E
*9D
 		{
 		arguments {
*9E
*7D
 			LABEL_LABEL = 'Disk 2:';
 			X = 270;
*7E
*2D
 			Y = 170;
*2E
*2I
*7D
 			Y = 180;
*7E
*7I
*9D
 			XmNlabelString = 'Disk 2:';
 			XmNx = 380;
 			XmNy = 240;
*9E
*7E
*2E
*9D
 			};
 		};
 
*9E
*7D
 	object disk_2 : SIMPLE_TEXT
*7E
*7I
*9D
 	object disk_2 : XmText
*9E
*7E
*9D
 		{
 		arguments {
*9E
*7D
 			EDITABLE = TRUE;
 			INSERTION_POINT_VISIBLE = TRUE;
 			AUTO_SHOW_INSERTION_POINT = TRUE;
 			SCROLL_VERTICAL = FALSE;
 			WORD_WRAP = FALSE;
 			ROWS = 1;
 			COLS = 20;
 			RESIZE_HEIGHT = FALSE;
 			RESIZE_WIDTH  = FALSE;
 			X = 300;
*7E
*2D
 			Y = 170;
*2E
*2I
*7D
 			Y = 180;
*7E
*7I
*9D
 			XmNeditable = TRUE;
 			XmNcursorPositionVisible = TRUE;
 			XmNautoShowCursorPosition = TRUE;
 !			XmNscrollVertical = FALSE;
 			XmNwordWrap = FALSE;
 			XmNrows = 1;
 			XmNcolumns = 20;
 			XmNresizeHeight = FALSE;
 			XmNresizeWidth  = FALSE;
 			XmNx = 450;
 			XmNy = 240;
*9E
*7E
*2E
*9D
 			};
 		callbacks
*9E
*9I
*11D
 		    {
 		    MrmNcreateCallback = procedures
*11E
*9E
*11D
 			{
*11E
*7D
 			CREATE = PROCEDURE toggle_init_callback (banner_disk_2);
*7E
*7I
*9D
 			XmNcreateCallback = PROCEDURE toggle_init_callback (banner_disk_2);
*9E
*7E
*9D
 			};		
 		};
 
*9E
*5D
 	object rotating_box : RADIO_BOX 
 	      {
 		arguments {
 			BORDER_WIDTH = 1;
 			X = 300;
 			Y = 10;
 		    };
 		controls {
 		    managed TOGGLE_BUTTON display_box;
 		    managed TOGGLE_BUTTON display_world;
 		    managed TOGGLE_BUTTON display_hanoi;
 		    managed TOGGLE_BUTTON display_niether;
 		    };
 	    };
 
 
*5E
*7D
 	object avantgarde_family : PUSH_BUTTON GADGET
*7E
*7I
*9D
 	object avantgarde_family : XmPushButton GADGET
*9E
*7E
*9D
 	    {
 	    arguments {
*9E
*7D
 		LABEL_LABEL = 'Avant Garde';
*7E
*7I
*9D
 		XmNlabelString = 'Avant Garde';
*9E
*7E
*9D
 		};
 		callbacks {
*9E
*7D
 	ACTIVATE= PROCEDURE toggle_change_callback (avantgarde_font);
 	CREATE = PROCEDURE toggle_init_callback (avantgarde_font);
*7E
*7I
*9D
 	XmNactivateCallback= PROCEDURE toggle_change_callback (avantgarde_font);
 	XmNcreateCallback = PROCEDURE toggle_init_callback (avantgarde_font);
*9E
*7E
*9D
 		};
 	    };
 
*9E
*7D
 	object courier_family : PUSH_BUTTON GADGET
*7E
*7I
*9D
 	object courier_family : XmPushButton GADGET
*9E
*7E
*9D
 	    {
 	    arguments {
*9E
*7D
 		LABEL_LABEL = 'Courier';
*7E
*7I
*9D
 		XmNlabelString = 'Courier';
*9E
*7E
*9D
 		};
 		callbacks {
*9E
*7D
 	ACTIVATE= PROCEDURE toggle_change_callback (courier_font);
 	CREATE = PROCEDURE toggle_init_callback (courier_font);
*7E
*7I
*9D
 	XmNactivateCallback= PROCEDURE toggle_change_callback (courier_font);
 	XmNcreateCallback = PROCEDURE toggle_init_callback (courier_font);
*9E
*7E
*9D
 		};
 	    };
 
*9E
*7D
 	object helvetica_family : PUSH_BUTTON GADGET
*7E
*7I
*9D
 	object helvetica_family : XmPushButton GADGET
*9E
*7E
*9D
 	    {
 	    arguments {
*9E
*7D
 		LABEL_LABEL = 'Helvetica';
*7E
*7I
*9D
 		XmNlabelString = 'Helvetica';
*9E
*7E
*9D
 		};
 		callbacks {
*9E
*7D
 	ACTIVATE= PROCEDURE toggle_change_callback (helvetica_font);
 	CREATE = PROCEDURE toggle_init_callback (helvetica_font);
*7E
*7I
*9D
 	XmNactivateCallback= PROCEDURE toggle_change_callback (helvetica_font);
 	XmNcreateCallback = PROCEDURE toggle_init_callback (helvetica_font);
*9E
*7E
*9D
 		};
 	    };
 
*9E
*7D
 	object lubalinGraph_family : PUSH_BUTTON GADGET
*7E
*7I
*9D
 	object lubalinGraph_family : XmPushButton GADGET
*9E
*7E
*9D
 	    {
 	    arguments {
*9E
*7D
 		LABEL_LABEL = 'Lubalin Graph';
*7E
*7I
*9D
 		XmNlabelString = 'Lubalin Graph';
*9E
*7E
*9D
 		};
 		callbacks {
*9E
*7D
 	ACTIVATE= PROCEDURE toggle_change_callback (lubalingraph_font);
 	CREATE = PROCEDURE toggle_init_callback (lubalingraph_font);
*7E
*7I
*9D
 	XmNactivateCallback= PROCEDURE toggle_change_callback (lubalingraph_font);
 	XmNcreateCallback = PROCEDURE toggle_init_callback (lubalingraph_font);
*9E
*7E
*9D
 		};
 	    };
 
*9E
*7D
 	object ncschoolbook_family : PUSH_BUTTON GADGET
*7E
*7I
*9D
 	object ncschoolbook_family : XmPushButton GADGET
*9E
*7E
*9D
 	    {
 	    arguments {
*9E
*7D
 		LABEL_LABEL = 'NC Schoolbook';
*7E
*7I
*9D
 		XmNlabelString = 'NC Schoolbook';
*9E
*7E
*9D
 		};
 		callbacks {
*9E
*7D
 	ACTIVATE= PROCEDURE toggle_change_callback (ncsschoolbook_font);
 	CREATE = PROCEDURE toggle_init_callback (ncsschoolbook_font);
*7E
*7I
*9D
 	XmNactivateCallback= PROCEDURE toggle_change_callback (ncsschoolbook_font);
 	XmNcreateCallback = PROCEDURE toggle_init_callback (ncsschoolbook_font);
*9E
*7E
*9D
 		};
 	    };
 
*9E
*7D
 	object souvenir_family : PUSH_BUTTON GADGET
*7E
*7I
*9D
 	object souvenir_family : XmPushButton GADGET
*9E
*7E
*9D
 	    {
 	    arguments {
*9E
*7D
 		LABEL_LABEL = 'Souvenir';
*7E
*7I
*9D
 		XmNlabelString = 'Souvenir';
*9E
*7E
*9D
 		};
 		callbacks {
*9E
*7D
 	ACTIVATE= PROCEDURE toggle_change_callback (souvenir_font);
 	CREATE = PROCEDURE toggle_init_callback (souvenir_font);
*7E
*7I
*9D
 	XmNactivateCallback= PROCEDURE toggle_change_callback (souvenir_font);
 	XmNcreateCallback = PROCEDURE toggle_init_callback (souvenir_font);
*9E
*7E
*9D
 		};
 	    };
 
*9E
*7D
 	object times_family : PUSH_BUTTON GADGET
*7E
*7I
*9D
 	object times_family : XmPushButton GADGET
*9E
*7E
*9D
 	    {
 	    arguments {
*9E
*7D
 		LABEL_LABEL = 'Times';
*7E
*7I
*9D
 		XmNlabelString = 'Times';
*9E
*7E
*9D
 		};
 		callbacks {
*9E
*7D
 	ACTIVATE= PROCEDURE toggle_change_callback (times_font);
 	CREATE = PROCEDURE toggle_init_callback (times_font);
*7E
*7I
*9D
 	XmNactivateCallback= PROCEDURE toggle_change_callback (times_font);
 	XmNcreateCallback = PROCEDURE toggle_init_callback (times_font);
*9E
*7E
*9D
 		};
 	    };
 
*9E
*7D
 	object family : PULLDOWN_MENU
*7E
*7I
*9D
 	object family : XmPulldownMenu
*9E
*7E
*9D
 	    {
 	    controls {
*9E
*7D
 		MANAGED PUSH_BUTTON avantgarde_family;
 		MANAGED PUSH_BUTTON courier_family;
 		MANAGED PUSH_BUTTON helvetica_family;
 		MANAGED PUSH_BUTTON lubalingraph_family;
 		MANAGED PUSH_BUTTON ncschoolbook_family;
 		MANAGED PUSH_BUTTON souvenir_family;
 		MANAGED PUSH_BUTTON times_family;
*7E
*7I
*9D
 		MANAGED XmPushButton avantgarde_family;
 		MANAGED XmPushButton courier_family;
 		MANAGED XmPushButton helvetica_family;
 		MANAGED XmPushButton lubalingraph_family;
 		MANAGED XmPushButton ncschoolbook_family;
 		MANAGED XmPushButton souvenir_family;
 		MANAGED XmPushButton times_family;
*9E
*7E
*9D
 	    };
 	    };
 
*9E
*7D
 	object font_name : OPTION_MENU
*7E
*7I
*9D
 	object font_name : XmOptionMenu
*9E
*7E
*9D
 	    {
 	    arguments {
*9E
*7D
 			X = 270;
 			Y = 80;
 			LABEL_LABEL = 'Font Name: ';
*7E
*7I
*9D
 			XmNx = 450;
 			XmNy = 60;
 			XmNlabelString = 'Font Name: ';
*9E
*7E
*9D
 		};
 	    controls {
*9E
*7D
 			managed PULLDOWN_MENU family;			
*7E
*7I
*9D
 			managed XmPulldownMenu family;			
*9E
*7E
*9D
 		};
 		callbacks {
*9E
*7D
 	CREATE = PROCEDURE toggle_init_callback (banner_font_name);
*7E
*7I
*9D
 	XmNcreateCallback = PROCEDURE toggle_init_callback (banner_font_name);
*9E
*7E
*9D
 			};
 	    };
 
*9E
*7D
 	object a8_family : PUSH_BUTTON GADGET
*7E
*7I
*9D
 	object a8_family : XmPushButton GADGET
*9E
*7E
*9D
 	    {
 	    arguments {
*9E
*7D
 		LABEL_LABEL = '8';
*7E
*7I
*9D
 		XmNlabelString = '8';
*9E
*7E
*9D
 		};
 		callbacks {
*9E
*7D
 	ACTIVATE= PROCEDURE toggle_change_callback (a8_font);
 	CREATE = PROCEDURE toggle_init_callback (a8_font);
*7E
*7I
*9D
 	XmNactivateCallback= PROCEDURE toggle_change_callback (a8_font);
 	XmNcreateCallback = PROCEDURE toggle_init_callback (a8_font);
*9E
*7E
*9D
 		};
 	    };
 
*9E
*7D
 	object a10_family : PUSH_BUTTON GADGET
*7E
*7I
*9D
 	object a10_family : XmPushButton GADGET
*9E
*7E
*9D
 	    {
 	    arguments {
*9E
*7D
 		LABEL_LABEL = '10';
*7E
*7I
*9D
 		XmNlabelString = '10';
*9E
*7E
*9D
 		};
 		callbacks {
*9E
*7D
 	ACTIVATE= PROCEDURE toggle_change_callback (a10_font);
 	CREATE = PROCEDURE toggle_init_callback (a10_font);
*7E
*7I
*9D
 	XmNactivateCallback= PROCEDURE toggle_change_callback (a10_font);
 	XmNcreateCallback = PROCEDURE toggle_init_callback (a10_font);
*9E
*7E
*9D
 		};
 	    };
 
*9E
*7D
 	object a12_family : PUSH_BUTTON GADGET
*7E
*7I
*9D
 	object a12_family : XmPushButton GADGET
*9E
*7E
*9D
 	    {
 	    arguments {
*9E
*7D
 		LABEL_LABEL = '12';
*7E
*7I
*9D
 		XmNlabelString = '12';
*9E
*7E
*9D
 		};
 		callbacks {
*9E
*7D
 	ACTIVATE= PROCEDURE toggle_change_callback (a12_font);
 	CREATE = PROCEDURE toggle_init_callback (a12_font);
*7E
*7I
*9D
 	XmNactivateCallback= PROCEDURE toggle_change_callback (a12_font);
 	XmNcreateCallback = PROCEDURE toggle_init_callback (a12_font);
*9E
*7E
*9D
 		};
 	    };
 
*9E
*7D
 	object a14_family : PUSH_BUTTON GADGET
*7E
*7I
*9D
 	object a14_family : XmPushButton GADGET
*9E
*7E
*9D
 	    {
 	    arguments {
*9E
*7D
 		LABEL_LABEL = '14';
*7E
*7I
*9D
 		XmNlabelString = '14';
*9E
*7E
*9D
 		};
 		callbacks {
*9E
*7D
 	ACTIVATE= PROCEDURE toggle_change_callback (a14_font);
 	CREATE = PROCEDURE toggle_init_callback (a14_font);
*7E
*7I
*9D
 	XmNactivateCallback= PROCEDURE toggle_change_callback (a14_font);
 	XmNcreateCallback = PROCEDURE toggle_init_callback (a14_font);
*9E
*7E
*9D
 		};
 	    };
 
*9E
*7D
 	object a18_family : PUSH_BUTTON GADGET
*7E
*7I
*9D
 	object a18_family : XmPushButton GADGET
*9E
*7E
*9D
 	    {
 	    arguments {
*9E
*7D
 		LABEL_LABEL = '18';
*7E
*7I
*9D
 		XmNlabelString = '18';
*9E
*7E
*9D
 		};
 		callbacks {
*9E
*7D
 	ACTIVATE= PROCEDURE toggle_change_callback (a18_font);
 	CREATE = PROCEDURE toggle_init_callback (a18_font);
*7E
*7I
*9D
 	XmNactivateCallback= PROCEDURE toggle_change_callback (a18_font);
 	XmNcreateCallback = PROCEDURE toggle_init_callback (a18_font);
*9E
*7E
*9D
 		};
 	    };
 
*9E
*7D
 	object a24_family : PUSH_BUTTON GADGET
*7E
*7I
*9D
 	object a24_family : XmPushButton GADGET
*9E
*7E
*9D
 	    {
 	    arguments {
*9E
*7D
 		LABEL_LABEL = '24';
*7E
*7I
*9D
 		XmNlabelString = '24';
*9E
*7E
*9D
 		};
 		callbacks {
*9E
*7D
 	ACTIVATE= PROCEDURE toggle_change_callback (a24_font);
 	CREATE = PROCEDURE toggle_init_callback (a24_font);
*7E
*7I
*9D
 	XmNactivateCallback= PROCEDURE toggle_change_callback (a24_font);
 	XmNcreateCallback = PROCEDURE toggle_init_callback (a24_font);
*9E
*7E
*9D
 		};
 	    };
 
*9E
*7D
 	object size : PULLDOWN_MENU
*7E
*7I
*9D
 	object size : XmPulldownMenu
*9E
*7E
*9D
 	    {
 	    controls {
*9E
*7D
 		MANAGED PUSH_BUTTON a8_family;
 		MANAGED PUSH_BUTTON a10_family;
 		MANAGED PUSH_BUTTON a12_family;
 		MANAGED PUSH_BUTTON a14_family;
 		MANAGED PUSH_BUTTON a18_family;
 		MANAGED PUSH_BUTTON a24_family;
*7E
*7I
*9D
 		MANAGED XmPushButton a8_family;
 		MANAGED XmPushButton a10_family;
 		MANAGED XmPushButton a12_family;
 		MANAGED XmPushButton a14_family;
 		MANAGED XmPushButton a18_family;
 		MANAGED XmPushButton a24_family;
*9E
*7E
*9D
 	    };
 	    };
 
*9E
*7D
 	object font_size : OPTION_MENU
*7E
*7I
*9D
 	object font_size : XmOptionMenu
*9E
*7E
*9D
 	    {
 	    arguments {
*9E
*7D
 			X = 270;
 			Y = 100;
 			LABEL_LABEL = 'Font Size: ';
*7E
*7I
*9D
 			XmNx = 450;
 			XmNy = 85;
 			XmNlabelString = 'Font Size: ';
*9E
*7E
*9D
 		};
 	    controls {
*9E
*7D
 			managed PULLDOWN_MENU size;			
*7E
*7I
*9D
 			managed XmPulldownMenu size;			
*9E
*7E
*9D
 		};
 		callbacks {
*9E
*7D
 	CREATE = PROCEDURE toggle_init_callback (banner_font_size);
*7E
*7I
*9D
 	XmNcreateCallback = PROCEDURE toggle_init_callback (banner_font_size);
*9E
*7E
*9D
 			};
 	    };
 
*9E
*7D
 	object display_box : TOGGLE_BUTTON GADGET
*7E
*7I
*9D
 	object display_box : XmToggleButton GADGET
*9E
*7E
*9D
 	    {
 		arguments {
*9E
*7D
 			LABEL_LABEL = 'Rotating Box';
*7E
*5I
*7D
 			X = 300;
 			Y = 10;
*7E
*7I
*9D
 			XmNlabelString = 'Rotating Box';
 			XmNx = 450;
 			XmNy = 10;
*9E
*7E
*5E
*9D
 			};
 		callbacks {
*9E
*7D
 			VALUE_CHANGED = PROCEDURE toggle_change_callback (banner_box_toggle);
 			CREATE = PROCEDURE toggle_init_callback (banner_box_toggle);
*7E
*7I
*9D
 			XmNvalueChangedCallback = PROCEDURE toggle_change_callback (banner_box_toggle);
 			XmNcreateCallback = PROCEDURE toggle_init_callback (banner_box_toggle);
*9E
*7E
*9D
 		};
 	    };
 
*9E
*7D
 	object display_world : TOGGLE_BUTTON GADGET
*7E
*7I
*9D
 	object display_world : XmToggleButton GADGET
*9E
*7E
*9D
 	    {
 		arguments {
*9E
*7D
 			LABEL_LABEL = 'Rotating World';
*7E
*5I
*7D
 			X = 300;
*7E
*6D
 			Y = 30;
*6E
*6I
*7D
 			Y = 20;
*7E
*7I
*9D
 			XmNlabelString = 'Rotating World';
 			XmNx = 450;
 			XmNy = 25;
*9E
*7E
*6E
*5E
*9D
 			};
 		callbacks {
*9E
*7D
 			VALUE_CHANGED = PROCEDURE toggle_change_callback (banner_world_toggle);
 			CREATE = PROCEDURE toggle_init_callback (banner_world_toggle);
*7E
*7I
*9D
 			XmNvalueChangedCallback = PROCEDURE toggle_change_callback (banner_world_toggle);
 			XmNcreateCallback = PROCEDURE toggle_init_callback (banner_world_toggle);
*9E
*7E
*9D
 			};
 	    };
*9E
*7D
 	object display_hanoi : TOGGLE_BUTTON GADGET
*7E
*7I
*9D
 	object display_hanoi : XmToggleButton GADGET
*9E
*7E
*9D
 	    {
 		arguments {
*9E
*7D
 			LABEL_LABEL = 'Hanoi';
*7E
*5I
*7D
 			X = 300;
*7E
*6D
 			Y = 50;
*6E
*6I
*7D
 			Y = 30;
*7E
*7I
*9D
 			XmNlabelString = 'Hanoi';
 			XmNx = 450;
 			XmNy = 40;
*9E
*7E
*6E
*5E
*9D
 			};
 		callbacks {
*9E
*7D
 			VALUE_CHANGED = PROCEDURE toggle_change_callback (banner_hanoi_toggle);
 			CREATE = PROCEDURE toggle_init_callback (banner_hanoi_toggle);
*7E
*7I
*9D
 			XmNvalueChangedCallback = PROCEDURE toggle_change_callback (banner_hanoi_toggle);
 			XmNcreateCallback = PROCEDURE toggle_init_callback (banner_hanoi_toggle);
*9E
*7E
*9D
 			};
 	    };
 
*9E
*5D
 	object display_niether : TOGGLE_BUTTON GADGET
 	    {
 		arguments {
 			LABEL_LABEL = 'None';
 			};
 		callbacks {
 			VALUE_CHANGED = PROCEDURE toggle_change_callback (banner_niether_toggle);
 			CREATE = PROCEDURE toggle_init_callback (banner_niether_toggle);
 			};
 	    };
 
*5E
*7D
 	object cpu_window : TOGGLE_BUTTON GADGET
*7E
*7I
*9D
 	object cpu_window : XmToggleButton GADGET
*9E
*7E
*9D
 	    {
 		arguments {
*9E
*7D
 			X = 6;
 			Y = 10;
 			LABEL_LABEL = 'Cpu Display';
*7E
*7I
*9D
 			XmNx = 6;
 			XmNy = 10;
 			XmNlabelString = 'Cpu Display';
*9E
*7E
*9D
 			};
 		callbacks {
*9E
*7D
 			VALUE_CHANGED = PROCEDURE toggle_change_callback (banner_cpu_window_toggle);
 			CREATE = PROCEDURE toggle_init_callback (banner_cpu_window_toggle);
*7E
*7I
*9D
 			XmNvalueChangedCallback = PROCEDURE toggle_change_callback (banner_cpu_window_toggle);
 			XmNcreateCallback = PROCEDURE toggle_init_callback (banner_cpu_window_toggle);
*9E
*7E
*9D
 			};
 	    };
 
*9E
*7D
 	object mon_window : TOGGLE_BUTTON GADGET
*7E
*7I
*9D
 	object mon_window : XmToggleButton GADGET
*9E
*7E
*9D
 	    {
 		arguments {
*9E
*7D
 			X = 6;
 			Y = 20;
 			LABEL_LABEL = 'Monitor Display';
*7E
*7I
*9D
 			XmNx = 6;
 			XmNy = 25;
 			XmNlabelString = 'Monitor Display';
*9E
*7E
*9D
 			};
 		callbacks {
*9E
*7D
 			VALUE_CHANGED = PROCEDURE toggle_change_callback (banner_mon_window_toggle);
 			CREATE = PROCEDURE toggle_init_callback (banner_mon_window_toggle);
*7E
*7I
*9D
 			XmNvalueChangedCallback = PROCEDURE toggle_change_callback (banner_mon_window_toggle);
 			XmNcreateCallback = PROCEDURE toggle_init_callback (banner_mon_window_toggle);
*9E
*7E
*9D
 			};
 	    };
*9E
*3D
 	object modes_window : TOGGLE_BUTTON GADGET
*3E
*3I
*7D
 	object sys_window : TOGGLE_BUTTON GADGET
*7E
*7I
*9D
 	object sys_window : XmToggleButton GADGET
*9E
*7E
*3E
*9D
 	    {
 		arguments {
*9E
*7D
 			X = 6;
 			Y = 30;
*7E
*3I
*7D
 			LABEL_LABEL = 'System Display';
*7E
*7I
*9D
 			XmNx = 6;
 			XmNy = 40;
 			XmNlabelString = 'System Display';
*9E
*7E
*9D
 			};
 		callbacks {
*9E
*7D
 			VALUE_CHANGED = PROCEDURE toggle_change_callback (banner_sys_window_toggle);
 			CREATE = PROCEDURE toggle_init_callback (banner_sys_window_toggle);
*7E
*7I
*9D
 			XmNvalueChangedCallback = PROCEDURE toggle_change_callback (banner_sys_window_toggle);
 			XmNcreateCallback = PROCEDURE toggle_init_callback (banner_sys_window_toggle);
*9E
*7E
*9D
 			};
 	    };
*9E
*7D
 	object modes_window : TOGGLE_BUTTON GADGET
*7E
*7I
*9D
 	object modes_window : XmToggleButton GADGET
*9E
*7E
*9D
 	    {
 		arguments {
*9E
*7D
 			X = 6;
 			Y = 40;
*7E
*3E
*7D
 			LABEL_LABEL = 'Modes Display';
*7E
*7I
*9D
 			XmNx = 6;
 			XmNy = 55;
 			XmNlabelString = 'Modes Display';
*9E
*7E
*9D
 			};
 		callbacks {
*9E
*7D
 			VALUE_CHANGED = PROCEDURE toggle_change_callback (banner_modes_window_toggle);
 			CREATE = PROCEDURE toggle_init_callback (banner_modes_window_toggle);
*7E
*7I
*9D
 			XmNvalueChangedCallback = PROCEDURE toggle_change_callback (banner_modes_window_toggle);
 			XmNcreateCallback = PROCEDURE toggle_init_callback (banner_modes_window_toggle);
*9E
*7E
*9D
 			};
 	    };
 
 
*9E
*7D
 	object process_window : TOGGLE_BUTTON GADGET
*7E
*7I
*9D
 	object process_window : XmToggleButton GADGET
*9E
*7E
*9D
 	    {
 		arguments {
*9E
*7D
 			X = 6;
*7E
*3D
 			Y = 40;
*3E
*3I
*7D
 			Y = 50;
*7E
*3E
*7D
 			LABEL_LABEL = 'Process Display';
*7E
*7I
*9D
 			XmNx = 6;
 			XmNy = 70;
 			XmNlabelString = 'Process Display';
*9E
*7E
*9D
 			};
 		callbacks {
*9E
*7D
 			VALUE_CHANGED = PROCEDURE toggle_change_callback (banner_process_window_toggle);
 			CREATE = PROCEDURE toggle_init_callback (banner_process_window_toggle);
*7E
*7I
*9D
 			XmNvalueChangedCallback = PROCEDURE toggle_change_callback (banner_process_window_toggle);
 			XmNcreateCallback = PROCEDURE toggle_init_callback (banner_process_window_toggle);
*9E
*7E
*9D
 			};
 	    };
*9E
*7D
 	object message_window : TOGGLE_BUTTON GADGET
*7E
*7I
*9D
 	object message_window : XmToggleButton GADGET
*9E
*7E
*9D
 	    {
 		arguments {
*9E
*7D
 			X = 6;
*7E
*3D
 			Y = 50;
*3E
*3I
*7D
 			Y = 60;
*7E
*3E
*7D
 			LABEL_LABEL = 'Message Display';
*7E
*7I
*9D
 			XmNx = 6;
 			XmNy = 85;
 			XmNlabelString = 'Message Display';
*9E
*7E
*9D
 			};
 		callbacks {
*9E
*7D
 			VALUE_CHANGED = PROCEDURE toggle_change_callback (banner_message_toggle);
 			CREATE = PROCEDURE toggle_init_callback (banner_message_toggle);
*7E
*7I
*9D
 			XmNvalueChangedCallback = PROCEDURE toggle_change_callback (banner_message_toggle);
 			XmNcreateCallback = PROCEDURE toggle_init_callback (banner_message_toggle);
*9E
*7E
*9D
 			};
 	    };
 
*9E
*7D
 	object pe_window : TOGGLE_BUTTON GADGET
*7E
*7I
*9D
 	object pe_window : XmToggleButton GADGET
*9E
*7E
*9D
 	    {
 		arguments {
*9E
*7D
 			X = 6;
*7E
*3D
 			Y = 60;
*3E
*3I
*7D
 			Y = 70;
*7E
*3E
*7D
 			LABEL_LABEL = 'PE Display';
*7E
*7I
*9D
 			XmNx = 6;
 			XmNy = 100;
 			XmNlabelString = 'PE Display';
*9E
*7E
*9D
 			};
 		callbacks {
*9E
*7D
 			VALUE_CHANGED = PROCEDURE toggle_change_callback (banner_pe_window);
 			CREATE = PROCEDURE toggle_init_callback (banner_pe_window);
*7E
*7I
*9D
 			XmNvalueChangedCallback = PROCEDURE toggle_change_callback (banner_pe_window);
 			XmNcreateCallback = PROCEDURE toggle_init_callback (banner_pe_window);
*9E
*7E
*9D
 			};
 	    };
*9E
*7D
 	object lck_window : TOGGLE_BUTTON GADGET
*7E
*7I
*9D
 	object lck_window : XmToggleButton GADGET
*9E
*7E
*9D
 	    {
 		arguments {
*9E
*7D
 			X = 6;
*7E
*3D
 			Y = 70;
*3E
*3I
*7D
 			Y = 80;
*7E
*3E
*7D
 			LABEL_LABEL = 'Locks Display';
*7E
*7I
*9D
 			XmNx = 6;
 			XmNy = 115;
 			XmNlabelString = 'Locks Display';
*9E
*7E
*9D
 			};
 		callbacks {
*9E
*7D
 			VALUE_CHANGED = PROCEDURE toggle_change_callback (banner_lck_window);
 			CREATE = PROCEDURE toggle_init_callback (banner_lck_window);
*7E
*7I
*9D
 			XmNvalueChangedCallback = PROCEDURE toggle_change_callback (banner_lck_window);
 			XmNcreateCallback = PROCEDURE toggle_init_callback (banner_lck_window);
*9E
*7E
*9D
 			};
 	    };
*9E
*7D
 	object cwps_window : TOGGLE_BUTTON GADGET
*7E
*7I
*9D
 	object cwps_window : XmToggleButton GADGET
*9E
*7E
*9D
 	    {
 		arguments {
*9E
*7D
 			X = 6;
*7E
*3D
 			Y = 80;
*3E
*3I
*7D
 			Y = 90;
*7E
*3E
*7D
 			LABEL_LABEL = 'CWPS Display';
*7E
*7I
*9D
 			XmNx = 6;
 			XmNy = 130;
 			XmNlabelString = 'CWPS Display';
*9E
*7E
*9D
 			};
 		callbacks {
*9E
*7D
 			VALUE_CHANGED = PROCEDURE toggle_change_callback (banner_cwps_window);
 			CREATE = PROCEDURE toggle_init_callback (banner_cwps_window);
*7E
*7I
*9D
 			XmNvalueChangedCallback = PROCEDURE toggle_change_callback (banner_cwps_window);
 			XmNcreateCallback = PROCEDURE toggle_init_callback (banner_cwps_window);
*9E
*7E
*9D
 			};
 	    };
*9E
*7D
 	object analog_clock : TOGGLE_BUTTON GADGET
*7E
*7I
*9D
 	object analog_clock : XmToggleButton GADGET
*9E
*7E
*9D
 	    {
 		arguments {
*9E
*7D
 			X = 6;
*7E
*3D
 			Y = 90;
*3E
*3I
*7D
 			Y = 100;
*7E
*3E
*7D
 			LABEL_LABEL = 'Analog Clock';
*7E
*7I
*9D
 			XmNx = 6;
 			XmNy = 145;
 			XmNlabelString = 'Analog Clock';
*9E
*7E
*9D
 			};
 		callbacks {
*9E
*7D
 			VALUE_CHANGED = PROCEDURE toggle_change_callback (banner_analog_window_toggle);
 			CREATE = PROCEDURE toggle_init_callback (banner_analog_window_toggle);
*7E
*7I
*9D
 			XmNvalueChangedCallback = PROCEDURE toggle_change_callback (banner_analog_window_toggle);
 			XmNcreateCallback = PROCEDURE toggle_init_callback (banner_analog_window_toggle);
*9E
*7E
*9D
 			};
 	    };
 
*9E
*7D
 	object digital_clock : TOGGLE_BUTTON GADGET
*7E
*7I
*9D
 	object digital_clock : XmToggleButton GADGET
*9E
*7E
*9D
 	    {
 		arguments {
*9E
*7D
 			X = 6;
*7E
*3D
 			Y = 100;
*3E
*3I
*7D
 			Y = 110;
*7E
*3E
*7D
 			LABEL_LABEL = 'Digital Clock';
*7E
*7I
*9D
 			XmNx = 6;
 			XmNy = 160;
 			XmNlabelString = 'Digital Clock';
*9E
*7E
*9D
 			};
 		callbacks {
*9E
*7D
 			VALUE_CHANGED = PROCEDURE toggle_change_callback (banner_digital_window_toggle);
 			CREATE = PROCEDURE toggle_init_callback (banner_digital_window_toggle);
 			};
 	    };
 
 
 	object Banner_Message : exported MESSAGE_BOX 
 	    {
 		arguments {
 			LABEL_LABEL = 'You have modifed options that cannot\
  be realised dynamicly\nTo realise these new options, use the\
  Save Settings option\n and restart Banner.';
 			};
 	    };
 
 	object Banner_Restore_Message : exported MESSAGE_BOX 
 	    {
 		arguments {
 			LABEL_LABEL = 'Default Attributes have been Restored.';
 			};
 	    };
 
 	object Banner_Save_Message : exported MESSAGE_BOX 
 	    {
 		arguments {
 			LABEL_LABEL = 'Attributes have been saved.';
 			};
 	    };
 
 	object Banner_Not_Save_Message : exported MESSAGE_BOX 
 	    {
 		arguments {
 			LABEL_LABEL = 
 'Failed to write DECW$USER_DEFAULTS:DECW$BANNER.DAT\nReason Unknown';
 			};
 	    };
 
 	object Banner_No_Message : exported MESSAGE_BOX 
 	    {
 		arguments {
 			LABEL_LABEL = 'The Message Window option is not active.';
 			};
 	    };
 
 
 	object Banner_Alarm_Message : exported MESSAGE_BOX 
 	    {
 		arguments {
 			LABEL_LABEL = 'Banner Alarm Message';
 			};
 	    };
 
 	object Banner_Help_Widget : exported HELP_BOX
 	    {
 		arguments {
 			application_name = 'Banner';
 			first_topic = 'OVERVIEW';
 			library_spec = 'SYS$HELP:DECW$BANNER.HLB';
 			title = 'Help on DECWindows Banner';
 			};
 	    };
 
 	object Banner_Message_Widget : exported ATTACHED_DIALOG_BOX
 	    {
 		arguments {
 			default_button = PUSH_BUTTON Banner_Message_Hide;
*7E
*7I
*9D
 			XmNvalueChangedCallback = PROCEDURE toggle_change_callback (banner_digital_window_toggle);
 			XmNcreateCallback = PROCEDURE toggle_init_callback (banner_digital_window_toggle);
 			};
 	    };
 
 
 object Banner_Message : EXPORTED XmMessageDialog
     {
 	arguments {
 		XmNshadowThickness = 1;
 		XmNdialogType = XmDIALOG_WARNING;
 		XmNdialogTitle = 'Banner Message';
 		XmNmessageString = 
 compound_string('You have modifed options that cannot be realised dynamicly.', separate=true) & 
 compound_string('To realise these new options, use the Save Settings option', separate=true) &
 compound_string('and restart Banner.');
 		};
     };
 
 object Banner_Restore_Message : EXPORTED XmMessageDialog
     {
 	arguments {
 		XmNshadowThickness = 1;
 		XmNdialogType = XmDIALOG_INFORMATION;
 		XmNdialogTitle = 'Banner Message';
 		XmNmessageString = 'Default Attributes have been Restored.';
 		};
     };
 
 	object Banner_Save_Message : EXPORTED XmMessageDialog
 	    {
 		arguments {
 			XmNshadowThickness = 1;
 			XmNdialogType = XmDIALOG_INFORMATION;
 			XmNdialogTitle = 'Banner Message';
 			XmNmessageString = 'Attributes have been saved.';
 			};
 	    };
 
 	object Banner_Not_Save_Message : EXPORTED XmMessageDialog
 	    {
 		arguments {
 			XmNshadowThickness = 1;
 			XmNdialogType = XmDIALOG_ERROR;
 			XmNdialogTitle = 'Banner Message';
 			XmNmessageString = 
 compound_string('Failed to write DECW$USER_DEFAULTS:DECW$BANNER.DAT', separate=true) &
 compound_string('Reason Unknown');
 			};
 	    };
 
 object Banner_No_Message : EXPORTED XmMessageDialog
     {
 	arguments {
 		XmNshadowThickness = 1;
 		XmNdialogType = XmDIALOG_WARNING;
 		XmNdialogTitle = 'Banner Message';
 		XmNmessageString = 'The Message Window option is not active.';
 		};
     };
 
 
 	object Banner_Alarm_Message : EXPORTED XmMessageDialog 
 	    {
 		arguments {
 			XmNshadowThickness = 1;
 			XmNdialogType = XmDIALOG_INFORMATION;
 			XmNdialogTitle = 'Banner Message';
 			XmNmessageString = 'Banner Alarm Message';
 			};
 	    };
 
 
 object Banner_Help_Widget : EXPORTED XmMessageDialog
     {
 	arguments {
 		XmNshadowThickness = 1;
 		XmNdialogType = XmDIALOG_WARNING;
 		XmNdialogTitle = 'Banner Help';
 		XmNmessageString = 
 compound_string('No Help is currently available in the Motif Banner.', separate=true) & 
 compound_string('To access help use the following command at DCL:', separate=true) &
 compound_string('$HELP/LIBR=SYS$HELP:DECW$BANNER.HLB.');
 		};
     };
 
 
 !	object Banner_Help_Widget : EXPORTED HELP_BOX
 !	    {
 !		arguments {
 !			DXmNapplicationName = 'Banner';
 !			DXmNfirstTopic = 'OVERVIEW';
 !			DXmNlibrarySpec = 'SYS$HELP:DECW$BANNER.HLB';
 !			
 !>>>Developer decision: XmNx =mNtitleStringString
 ! = 'Help on DECWindows Banner';
 !			};
 !	    };
 
 	object Banner_Message_Widget : EXPORTED XmForm
 	    {
 		arguments {
 			XmNdefaultButton = XmPushButton Banner_Message_Hide;
*9E
*7E
*9D
 			};
 		controls {
*9E
*7D
 			managed PUSH_BUTTON Banner_Message_hide;
 			managed PUSH_BUTTON Banner_Message_erase;
 			managed SIMPLE_TEXT Banner_Message_text;
*7E
*7I
*9D
 			managed XmPushButton Banner_Message_hide;
 			managed XmPushButton Banner_Message_erase;
 			managed XmScrolledText Banner_Message_text;
*9E
*7E
*9D
 			};
 	    };
 
*9E
*7D
 	object Banner_Message_text : SIMPLE_TEXT
*7E
*7I
*9D
 	object Banner_Message_text : XmScrolledText
*9E
*7E
*9D
 	    {
 		arguments {
*9E
*7D
 			EDITABLE = FALSE;
 			INSERTION_POINT_VISIBLE = FALSE;
 			AUTO_SHOW_INSERTION_POINT = FALSE;
 			SCROLL_VERTICAL = TRUE;
 			RESIZE_HEIGHT = TRUE;
 			RESIZE_WIDTH  = TRUE;
 			ROWS = 6;
 			COLS = 50;
 			SIMPLE_TEXT_VALUE = 'Banner Message Area\n';
 			WORD_WRAP = TRUE;
 			adb_top_attachment = DwtAttachAdb;
 			adb_top_offset = 1;
 			adb_right_attachment = DwtAttachAdb;
 			adb_right_offset = 1;
 			adb_left_attachment = DwtAttachwidget;
 			adb_left_widget = PUSH_BUTTON Banner_Message_Hide;
 			adb_left_offset = 3;
 			adb_bottom_attachment = DwtAttachAdb;
 			adb_bottom_offset = 1;
*7E
*7I
*9D
 			XmNeditable = FALSE;
 			XmNeditMode = 0;
 			XmNcursorPositionVisible = FALSE;
 			XmNautoShowCursorPosition = FALSE;
 			XmNscrollVertical = TRUE;
 			XmNscrollHorizontal = false;
 			XmNrows = 8;
 			XmNcolumns = 50;
 			XmNvalue = 'Banner Message Area';
 			XmNwordWrap = TRUE;
 			XmNtopAttachment = XmATTACH_FORM;
 			XmNtopOffset = 1;
 			XmNrightAttachment = XmATTACH_FORM;
 			XmNrightOffset = 1;
 			XmNleftAttachment = XmATTACH_WIDGET;
 			XmNleftWidget = XmPushButton Banner_Message_Hide;
 			XmNleftOffset = 3;
 			XmNbottomAttachment = XmATTACH_FORM;
 			XmNbottomOffset = 1;
*9E
*7E
*9D
 			};
 		callbacks {
*9E
*7D
 			CREATE = PROCEDURE toggle_init_callback (banner_message_create);
*7E
*7I
*9D
 			XmNcreateCallback = PROCEDURE toggle_init_callback (banner_message_create);
*9E
*7E
*9D
 		};
 	    };
 
*9E
*7D
 	object Banner_Message_Erase : PUSH_BUTTON GADGET
*7E
*7I
*9D
 	object Banner_Message_Erase : XmPushButton GADGET
*9E
*7E
*9D
 	    {
 		arguments {
*9E
*7D
 			LABEL_LABEL = 'Erase';
 			adb_left_attachment = DwtAttachAdb;
 			adb_left_offset = 3;
 !			adb_bottom_attachment = DwtAttachAdb;
 !			adb_bottom_offset = 3;
 			adb_top_attachment = DwtAttachwidget;
 			adb_top_widget = PUSH_BUTTON Banner_Message_Hide;
 			adb_top_offset = 3;
 !			adb_right_attachment = DwtAttachwidget;
 !			adb_right_widget = SIMPLE_TEXT Banner_Message_text;
 !			adb_right_offset = 3;
*7E
*7I
*9D
 			XmNlabelString = 'Erase';
 			XmNleftAttachment = XmATTACH_FORM;
 			XmNleftOffset = 3;
 			XmNtopAttachment = XmATTACH_WIDGET;
 			XmNtopWidget = XmPushButton Banner_Message_Hide;
 			XmNtopOffset = 3;
*9E
*7E
*9D
 			};
 		callbacks {
*9E
*7D
 			ACTIVATE = PROCEDURE banner_menu_callback (banner_erase_option);
*7E
*7I
*9D
 			XmNactivateCallback = PROCEDURE banner_menu_callback (banner_erase_option);
*9E
*7E
*9D
 		};
 	    };
 
*9E
*7D
 	object Banner_Message_Hide : PUSH_BUTTON GADGET
*7E
*7I
*9D
 	object Banner_Message_Hide : XmPushButton GADGET
*9E
*7E
*9D
 	    {
 		arguments {
*9E
*7D
 			LABEL_LABEL = 'Dismiss';
 			adb_left_attachment = DwtAttachAdb;
 			adb_left_offset = 3;
 			adb_top_attachment = DwtAttachAdb;
 			adb_top_offset = 3;
 !			adb_right_attachment = DwtAttachwidget;
 !			adb_right_widget = SIMPLE_TEXT Banner_Message_text;
 !			adb_right_offset = 3;
*7E
*7I
*9D
 			XmNlabelString = 'Dismiss';
 			XmNleftAttachment = XmATTACH_FORM;
 			XmNleftOffset = 3;
 			XmNtopAttachment = XmATTACH_FORM;
 			XmNtopOffset = 3;
*9E
*9I
*11D
 			TOGGLE_INIT_CALLBACK(BANNER_COMP_RATE3_END);
*11E
*9E
*7E
*11D
 			};
*11E
*9D
 		callbacks {
*9E
*7D
 			ACTIVATE = PROCEDURE banner_menu_callback (banner_hide_option);
*7E
*7I
*9D
 			XmNactivateCallback = PROCEDURE banner_menu_callback (banner_hide_option);
*9E
*7E
*9D
 		};
 	    };
 
 
 
 
 
 
*9E
*9I
*11D
 		    };
*11E
*11I
                 callbacks
                     {
                     MrmNcreateCallback = procedures
                         {
                         TOGGLE_INIT_CALLBACK(BANNER_COMP_RATE3_END);
                         };
                     };
*11E
                 };
             };
         callbacks
             {
             MrmNcreateCallback = procedures
                 {
                 BANNER_SETUP_CALLBACK(BANNER_SETUP_INITIALISE);
                 };
             };
         };
 
 object
     CPU_TICK: XmScale 
         {
         arguments
             {
             XmNorientation = XmHORIZONTAL;
             XmNmaximum = 60;
             XmNminimum = 1;
             XmNvalue = 1;
             XmNtitleString = 
             compound_string("Banner Update Timer (Seconds)");
             XmNheight = 60;
             XmNwidth = 250;
             XmNx = FIRST_COLUMN;
*14D
             XmNy = 447;
*14E
*14I
             XmNy = 551;
*14E
             XmNshowValue = true;
             };
         callbacks
             {
             XmNvalueChangedCallback = procedures
                 {
                 TOGGLE_CHANGE_CALLBACK(BANNER_TICK_SIZE);
                 };
             MrmNcreateCallback = procedures
                 {
                 TOGGLE_INIT_CALLBACK(BANNER_TICK_SIZE);
                 };
             };
         };
 
 object
     BASE_PRIORITY: XmScale 
         {
         arguments
             {
             XmNorientation = XmHORIZONTAL;
             XmNmaximum = 14;
             XmNminimum = 1;
             XmNvalue = 1;
             XmNtitleString = 
             compound_string("Banner Base Priority");
             XmNheight = 60;
             XmNwidth = 250;
             XmNx = FIRST_COLUMN;
*14D
             XmNy = 388;
*14E
*14I
             XmNy = 480;
*14E
             XmNshowValue = true;
             };
         callbacks
             {
             XmNvalueChangedCallback = procedures
                 {
                 TOGGLE_CHANGE_CALLBACK(BANNER_BASE_PRIORITY);
                 };
             MrmNcreateCallback = procedures
                 {
                 TOGGLE_INIT_CALLBACK(BANNER_BASE_PRIORITY);
                 };
             };
         };
 
 object
     SECONDS_ACTIVE: XmToggleButtonGadget 
         {
         arguments
             {
             XmNx = SECOND_COLUMN;
             XmNy = 11;
             XmNlabelString = 
             compound_string("Display Seconds");
             };
         callbacks
             {
             XmNvalueChangedCallback = procedures
                 {
                 TOGGLE_CHANGE_CALLBACK(BANNER_SECONDS_ACTIVE);
                 };
             MrmNcreateCallback = procedures
                 {
                 TOGGLE_INIT_CALLBACK(BANNER_SECONDS_ACTIVE);
                 };
             };
         };
 
 object
     TITLE_ACTIVE: XmToggleButtonGadget 
         {
         arguments
             {
             XmNx = SECOND_COLUMN;
*14D
             XmNy = 25;
*14E
*14I
             XmNy = 34;
*14E
             XmNlabelString = 
             compound_string("Title Bar");
             };
         callbacks
             {
             XmNvalueChangedCallback = procedures
                 {
                 TOGGLE_CHANGE_CALLBACK(BANNER_BORDER_ACTIVE);
                 };
             MrmNcreateCallback = procedures
                 {
                 TOGGLE_INIT_CALLBACK(BANNER_BORDER_ACTIVE);
                 };
             };
         };
 
 object
     BORDER_ACTIVE: XmToggleButtonGadget 
         {
         arguments
             {
             XmNx = SECOND_COLUMN;
*14D
             XmNy = 40;
*14E
*14I
             XmNy = 57;
*14E
             XmNlabelString = 
             compound_string("Window Border");
             };
         callbacks
             {
             XmNvalueChangedCallback = procedures
                 {
                 TOGGLE_CHANGE_CALLBACK(BANNER_WINDOW_BORDER_ACTIVE);
                 };
             MrmNcreateCallback = procedures
                 {
                 TOGGLE_INIT_CALLBACK(BANNER_WINDOW_BORDER_ACTIVE);
                 };
             };
         };
 
 object
     ICON_ACTIVE: XmToggleButtonGadget 
         {
         arguments
             {
             XmNx = SECOND_COLUMN;
*14D
             XmNy = 55;
*14E
*14I
             XmNy = 80;
*14E
             XmNlabelString = 
             compound_string("Active Icons");
             };
         callbacks
             {
             XmNvalueChangedCallback = procedures
                 {
                 TOGGLE_CHANGE_CALLBACK(BANNER_ICON_ACTIVE);
                 };
             MrmNcreateCallback = procedures
                 {
                 TOGGLE_INIT_CALLBACK(BANNER_ICON_ACTIVE);
                 };
             };
         };
 
 object
     BELL_ACTIVE: XmToggleButtonGadget 
         {
         arguments
             {
             XmNx = SECOND_COLUMN;
*14D
             XmNy = 70;
*14E
*14I
             XmNy = 103;
*14E
             XmNlabelString = 
             compound_string("Bell active");
             };
         callbacks
             {
             XmNvalueChangedCallback = procedures
                 {
                 TOGGLE_CHANGE_CALLBACK(BANNER_BELL_ON);
                 };
             MrmNcreateCallback = procedures
                 {
                 TOGGLE_INIT_CALLBACK(BANNER_BELL_ON);
                 };
             };
         };
 
 object
     PROCESS_NAME: XmToggleButtonGadget 
         {
         arguments
             {
             XmNx = SECOND_COLUMN;
*14D
             XmNy = 85;
*14E
*14I
             XmNy = 126;
*14E
             XmNlabelString = 
             compound_string("Process Name");
             };
         callbacks
             {
             XmNvalueChangedCallback = procedures
                 {
                 TOGGLE_CHANGE_CALLBACK(BANNER_PROCESS_NAME);
                 };
             MrmNcreateCallback = procedures
                 {
                 TOGGLE_INIT_CALLBACK(BANNER_PROCESS_NAME);
                 };
             };
         };
 
 object
     PROCESS_USER: XmToggleButtonGadget 
         {
         arguments
             {
             XmNx = SECOND_COLUMN;
*14D
             XmNy = 100;
*14E
*14I
             XmNy = 148;
*14E
             XmNlabelString = 
             compound_string("User Name");
             };
         callbacks
             {
             XmNvalueChangedCallback = procedures
                 {
                 TOGGLE_CHANGE_CALLBACK(BANNER_PROCESS_USER);
                 };
             MrmNcreateCallback = procedures
                 {
                 TOGGLE_INIT_CALLBACK(BANNER_PROCESS_USER);
                 };
             };
         };
 
 object
     PROCESS_PID: XmToggleButtonGadget 
         {
         arguments
             {
             XmNx = SECOND_COLUMN;
*14D
             XmNy = 115;
*14E
*14I
             XmNy = 170;
*14E
             XmNlabelString = 
             compound_string("Process Pid");
             };
         callbacks
             {
             XmNvalueChangedCallback = procedures
                 {
                 TOGGLE_CHANGE_CALLBACK(BANNER_PROCESS_PID);
                 };
             MrmNcreateCallback = procedures
                 {
                 TOGGLE_INIT_CALLBACK(BANNER_PROCESS_PID);
                 };
             };
         };
 
 object
     PROCESS_STATES: XmToggleButtonGadget 
         {
         arguments
             {
             XmNx = SECOND_COLUMN;
*14D
             XmNy = 130;
*14E
*14I
             XmNy = 192;
*14E
             XmNlabelString = 
             compound_string("Process States");
             };
         callbacks
             {
             XmNvalueChangedCallback = procedures
                 {
                 TOGGLE_CHANGE_CALLBACK(BANNER_PROCESS_STATES);
                 };
             MrmNcreateCallback = procedures
                 {
                 TOGGLE_INIT_CALLBACK(BANNER_PROCESS_STATES);
                 };
             };
         };
 
 object
     MULTI_HIST: XmToggleButtonGadget 
         {
         arguments
             {
             XmNx = SECOND_COLUMN;
*14D
             XmNy = 145;
*14E
*14I
             XmNy = 215;
*14E
             XmNlabelString = 
             compound_string("Multiple Cpu\'s");
             };
         callbacks
             {
             XmNvalueChangedCallback = procedures
                 {
                 TOGGLE_CHANGE_CALLBACK(BANNER_MULTI_HIST_TOGGLE);
                 };
             MrmNcreateCallback = procedures
                 {
                 TOGGLE_INIT_CALLBACK(BANNER_MULTI_HIST_TOGGLE);
                 };
             };
         };
 
 object
     DUA0_ACTIVE: XmToggleButtonGadget 
         {
         arguments
             {
             XmNx = THIRD_COLUMN;
             XmNy = 10;
             XmNlabelString = 
             compound_string("Disk 0 IO");
             };
         callbacks
             {
             XmNvalueChangedCallback = procedures
                 {
                 TOGGLE_CHANGE_CALLBACK(BANNER_DUA0_ACTIVE);
                 };
             MrmNcreateCallback = procedures
                 {
                 TOGGLE_INIT_CALLBACK(BANNER_DUA0_ACTIVE);
                 };
             };
         };
 
 object
     DUA1_ACTIVE: XmToggleButtonGadget 
         {
         arguments
             {
             XmNx = THIRD_COLUMN;
*14D
             XmNy = 25;
*14E
*14I
             XmNy = 33;
*14E
             XmNlabelString = 
             compound_string("Disk 1 IO");
             };
         callbacks
             {
             XmNvalueChangedCallback = procedures
                 {
                 TOGGLE_CHANGE_CALLBACK(BANNER_DUA1_ACTIVE);
                 };
             MrmNcreateCallback = procedures
                 {
                 TOGGLE_INIT_CALLBACK(BANNER_DUA1_ACTIVE);
                 };
             };
         };
 
 object
     DUA2_ACTIVE: XmToggleButtonGadget 
         {
         arguments
             {
             XmNx = THIRD_COLUMN;
*14D
             XmNy = 40;
*14E
*14I
             XmNy = 55;
*14E
             XmNlabelString = 
             compound_string("Disk 2 IO");
             };
         callbacks
             {
             XmNvalueChangedCallback = procedures
                 {
                 TOGGLE_CHANGE_CALLBACK(BANNER_DUA2_ACTIVE);
                 };
             MrmNcreateCallback = procedures
                 {
                 TOGGLE_INIT_CALLBACK(BANNER_DUA2_ACTIVE);
                 };
             };
         };
 
 object
     PAGE_IO_ACTIVE: XmToggleButtonGadget 
         {
         arguments
             {
             XmNx = THIRD_COLUMN;
*14D
             XmNy = 55;
*14E
*14I
             XmNy = 77;
*14E
             XmNlabelString = 
             compound_string("Paging IO");
             };
         callbacks
             {
             XmNvalueChangedCallback = procedures
                 {
                 TOGGLE_CHANGE_CALLBACK(BANNER_PAGE_IO_ACTIVE);
                 };
             MrmNcreateCallback = procedures
                 {
                 TOGGLE_INIT_CALLBACK(BANNER_PAGE_IO_ACTIVE);
                 };
             };
         };
 
 object
     PAGE_FAULT_ACTIVE: XmToggleButtonGadget 
         {
         arguments
             {
             XmNx = THIRD_COLUMN;
*14D
             XmNy = 70;
*14E
*14I
             XmNy = 99;
*14E
             XmNlabelString = 
             compound_string("Page Faults");
             };
         callbacks
             {
             XmNvalueChangedCallback = procedures
                 {
                 TOGGLE_CHANGE_CALLBACK(BANNER_PAGE_FAULT_ACTIVE);
                 };
             MrmNcreateCallback = procedures
                 {
                 TOGGLE_INIT_CALLBACK(BANNER_PAGE_FAULT_ACTIVE);
                 };
             };
         };
 
 object
     MODIFIED_PAGES_ACTIVE: XmToggleButtonGadget 
         {
         arguments
             {
             XmNx = THIRD_COLUMN;
*14D
             XmNy = 84;
*14E
*14I
             XmNy = 121;
*14E
             XmNlabelString = 
             compound_string("Modified Pages");
             };
         callbacks
             {
             XmNvalueChangedCallback = procedures
                 {
                 TOGGLE_CHANGE_CALLBACK(BANNER_MODIFIED_PAGES_ACTIVE);
                 };
             MrmNcreateCallback = procedures
                 {
                 TOGGLE_INIT_CALLBACK(BANNER_MODIFIED_PAGES_ACTIVE);
                 };
             };
         };
 
 object
     FREE_PAGES_ACTIVE: XmToggleButtonGadget 
         {
         arguments
             {
             XmNx = THIRD_COLUMN;
*14D
             XmNy = 100;
*14E
*14I
             XmNy = 143;
*14E
             XmNlabelString = 
             compound_string("Free Pages");
             };
         callbacks
             {
             XmNvalueChangedCallback = procedures
                 {
                 TOGGLE_CHANGE_CALLBACK(BANNER_FREE_PAGES_ACTIVE);
                 };
             MrmNcreateCallback = procedures
                 {
                 TOGGLE_INIT_CALLBACK(BANNER_FREE_PAGES_ACTIVE);
                 };
             };
         };
 
 object
     SYSFAULTS_ACTIVE: XmToggleButtonGadget 
         {
         arguments
             {
             XmNx = THIRD_COLUMN;
*14D
             XmNy = 115;
*14E
*14I
             XmNy = 165;
*14E
             XmNlabelString = 
             compound_string("System Faults");
             };
         callbacks
             {
             XmNvalueChangedCallback = procedures
                 {
                 TOGGLE_CHANGE_CALLBACK(BANNER_SYSFAULTS_ACTIVE);
                 };
             MrmNcreateCallback = procedures
                 {
                 TOGGLE_INIT_CALLBACK(BANNER_SYSFAULTS_ACTIVE);
                 };
             };
         };
 
 object
     NI_IO_ACTIVE: XmToggleButtonGadget 
         {
         arguments
             {
             XmNx = THIRD_COLUMN;
*14D
             XmNy = 130;
*14E
*14I
             XmNy = 187;
*14E
             XmNlabelString = 
             compound_string("Remote Disks");
             };
         callbacks
             {
             XmNvalueChangedCallback = procedures
                 {
                 TOGGLE_CHANGE_CALLBACK(BANNER_NI_IO_ACTIVE);
                 };
             MrmNcreateCallback = procedures
                 {
                 TOGGLE_INIT_CALLBACK(BANNER_NI_IO_ACTIVE);
                 };
             };
         };
 
 object
     FREEBLOCKS_BOX: XmRadioBox 
         {
         arguments
             {
             XmNborderWidth = 1;
*14D
             XmNx = 169;
             XmNy = 371;
*14E
*14I
             XmNx = 600;
             XmNy = 250;
*14E
             };
         controls
             {
             XmToggleButtonGadget IO_CNT;
             XmToggleButtonGadget FREEBLK_CNT;
             };
         };
 
 object
     IO_CNT: XmToggleButtonGadget 
         {
         arguments
             {
             XmNlabelString = 
             compound_string("Display IO count");
             };
         callbacks
             {
             XmNvalueChangedCallback = procedures
                 {
                 TOGGLE_CHANGE_CALLBACK(BANNER_IOCNT);
                 };
             MrmNcreateCallback = procedures
                 {
                 TOGGLE_INIT_CALLBACK(BANNER_IOCNT);
                 };
             };
         };
 
 object
     FREEBLK_CNT: XmToggleButtonGadget 
         {
         arguments
             {
             XmNlabelString = 
             compound_string("Display FreeBlk Count");
             };
         callbacks
             {
             XmNvalueChangedCallback = procedures
                 {
                 TOGGLE_CHANGE_CALLBACK(BANNER_FREEBLKCNT);
                 };
             MrmNcreateCallback = procedures
                 {
                 TOGGLE_INIT_CALLBACK(BANNER_FREEBLKCNT);
                 };
             };
         };
 
 object
     OK_BUTTON: XmPushButtonGadget 
         {
         arguments
             {
             XmNx = 285;
             XmNy = BUTTONY;
             XmNlabelString = 
             compound_string("OK");
             XmNshowAsDefault = 1;
             XmNwidth = 186;
             };
         callbacks
             {
             XmNactivateCallback = procedures
                 {
                 BANNER_SETUP_CALLBACK(BANNER_SETUP_OK);
                 };
             };
         };
 
 object
     APPLY_BUTTON: XmPushButtonGadget 
         {
         arguments
             {
             XmNx = 481;
*14D
             XmNy = 444;
*14E
*14I
             XmNy = 535;
*14E
             XmNlabelString = 
             compound_string("APPLY");
             XmNwidth = 327;
             };
         callbacks
             {
             XmNactivateCallback = procedures
                 {
                 BANNER_SETUP_CALLBACK(BANNER_SETUP_APPLY);
                 };
             };
         };
 
 object
     CANCEL_BUTTON: XmPushButtonGadget 
         {
         arguments
             {
             XmNx = 284;
*14D
             XmNy = 479;
*14E
*14I
             XmNy = 577;
*14E
             XmNlabelString = 
             compound_string("Cancel");
             XmNwidth = 523;
             };
         callbacks
             {
             XmNactivateCallback = procedures
                 {
                 BANNER_SETUP_CALLBACK(BANNER_SETUP_CANCEL);
                 };
             };
         };
 
 object
     DISK_0_NAME_LABEL: XmLabelGadget 
         {
         arguments
             {
             XmNlabelString = 
             compound_string("Disk 0 Name:");
*14D
             XmNx = 352;
             XmNy = 365;
*14E
*14I
             XmNx = 476;
             XmNy = 425;
*14E
             };
         };
 
 object
     DISK_0_NAME: XmText 
         {
         arguments
             {
             XmNeditable = true;
             XmNcursorPositionVisible = true;
             XmNautoShowCursorPosition = true;
             XmNwordWrap = false;
             XmNrows = 1;
             XmNcolumns = 11;
             XmNresizeHeight = false;
             XmNresizeWidth = false;
*14D
             XmNx = 452;
             XmNy = 365;
*14E
*14I
             XmNx = 583;
             XmNy = 420;
*14E
             };
         callbacks
             {
             MrmNcreateCallback = procedures
                 {
                 TOGGLE_INIT_CALLBACK(BANNER_DISK_0_NAME);
                 };
             };
         };
 
 object
     DISK_0_LABEL: XmLabelGadget 
         {
         arguments
             {
             XmNlabelString = 
             compound_string("Disk 0:");
*14D
             XmNx = 572;
             XmNy = 365;
*14E
*14I
             XmNx = 715;
             XmNy = 421;
*14E
             };
         };
 
 object
     DISK_0: XmText 
         {
         arguments
             {
             XmNeditable = true;
             XmNcursorPositionVisible = true;
             XmNautoShowCursorPosition = true;
             XmNwordWrap = false;
             XmNrows = 1;
             XmNcolumns = 20;
             XmNresizeHeight = false;
             XmNresizeWidth = false;
*14D
             XmNx = 642;
             XmNy = 365;
*14E
*14I
             XmNx = 771;
             XmNy = 417;
*14E
             };
         callbacks
             {
             MrmNcreateCallback = procedures
                 {
                 TOGGLE_INIT_CALLBACK(BANNER_DISK_0);
                 };
             };
         };
 
 object
     DISK_1_NAME_LABEL: XmLabelGadget 
         {
         arguments
             {
             XmNlabelString = 
             compound_string("Disk 1 Name:");
*14D
             XmNx = 352;
             XmNy = 385;
*14E
*14I
             XmNx = 476;
             XmNy = 464;
*14E
             };
         };
 
 object
     DISK_1_NAME: XmText 
         {
         arguments
             {
             XmNeditable = true;
             XmNcursorPositionVisible = true;
             XmNautoShowCursorPosition = true;
             XmNwordWrap = false;
             XmNrows = 1;
             XmNcolumns = 11;
             XmNresizeHeight = false;
             XmNresizeWidth = false;
*14D
             XmNx = 452;
             XmNy = 385;
*14E
*14I
             XmNx = 583;
             XmNy = 458;
*14E
             };
         callbacks
             {
             MrmNcreateCallback = procedures
                 {
                 TOGGLE_INIT_CALLBACK(BANNER_DISK_1_NAME);
                 };
             };
         };
 
 object
     DISK_1_LABEL: XmLabelGadget 
         {
         arguments
             {
             XmNlabelString = 
             compound_string("Disk 1:");
*14D
             XmNx = 572;
             XmNy = 385;
*14E
*14I
             XmNx = 715;
             XmNy = 464;
*14E
             };
         };
 
 object
     DISK_1: XmText 
         {
         arguments
             {
             XmNeditable = true;
             XmNcursorPositionVisible = true;
             XmNautoShowCursorPosition = true;
             XmNwordWrap = false;
             XmNrows = 1;
             XmNcolumns = 20;
             XmNresizeHeight = false;
             XmNresizeWidth = false;
*14D
             XmNx = 642;
             XmNy = 385;
*14E
*14I
             XmNx = 770;
             XmNy = 458;
*14E
             };
         callbacks
             {
             MrmNcreateCallback = procedures
                 {
                 TOGGLE_INIT_CALLBACK(BANNER_DISK_1);
                 };
             };
         };
 
 object
     DISK_2_NAME_LABEL: XmLabelGadget 
         {
         arguments
             {
             XmNlabelString = 
             compound_string("Disk 2 Name:");
*14D
             XmNx = 352;
             XmNy = 405;
*14E
*14I
             XmNx = 477;
             XmNy = 500;
*14E
             };
         };
 
 object
     DISK_2_NAME: XmText 
         {
         arguments
             {
             XmNeditable = true;
             XmNcursorPositionVisible = true;
             XmNautoShowCursorPosition = true;
             XmNwordWrap = false;
             XmNrows = 1;
             XmNcolumns = 11;
             XmNresizeHeight = false;
             XmNresizeWidth = false;
*14D
             XmNx = 452;
             XmNy = 405;
*14E
*14I
             XmNx = 583;
             XmNy = 495;
*14E
             };
         callbacks
             {
             MrmNcreateCallback = procedures
                 {
                 TOGGLE_INIT_CALLBACK(BANNER_DISK_2_NAME);
                 };
             };
         };
 
 object
     DISK_2_LABEL: XmLabelGadget 
         {
         arguments
             {
             XmNlabelString = 
             compound_string("Disk 2:");
*14D
             XmNx = 572;
             XmNy = 405;
*14E
*14I
             XmNx = 717;
             XmNy = 504;
*14E
             };
         };
 
 object
     DISK_2: XmText 
         {
         arguments
             {
             XmNeditable = true;
             XmNcursorPositionVisible = true;
             XmNautoShowCursorPosition = true;
             XmNwordWrap = false;
             XmNrows = 1;
             XmNcolumns = 20;
             XmNresizeHeight = false;
             XmNresizeWidth = false;
*14D
             XmNx = 642;
             XmNy = 405;
*14E
*14I
             XmNx = 770;
             XmNy = 497;
*14E
             };
         callbacks
             {
             MrmNcreateCallback = procedures
                 {
                 TOGGLE_INIT_CALLBACK(BANNER_DISK_2);
                 };
             };
         };
 
 object
     AVANTGARDE_FAMILY: XmPushButtonGadget 
         {
         arguments
             {
             XmNlabelString = 
             compound_string("Avant Garde");
             };
         callbacks
             {
             XmNactivateCallback = procedures
                 {
                 TOGGLE_CHANGE_CALLBACK(AVANTGARDE_FONT);
                 };
             MrmNcreateCallback = procedures
                 {
                 TOGGLE_INIT_CALLBACK(AVANTGARDE_FONT);
                 };
             };
         };
 
 object
     COURIER_FAMILY: XmPushButtonGadget 
         {
         arguments
             {
             XmNlabelString = 
             compound_string("Courier");
             };
         callbacks
             {
             XmNactivateCallback = procedures
                 {
                 TOGGLE_CHANGE_CALLBACK(COURIER_FONT);
                 };
             MrmNcreateCallback = procedures
                 {
                 TOGGLE_INIT_CALLBACK(COURIER_FONT);
                 };
             };
         };
 
 object
     HELVETICA_FAMILY: XmPushButtonGadget 
         {
         arguments
             {
             XmNlabelString = 
             compound_string("Helvetica");
             };
         callbacks
             {
             XmNactivateCallback = procedures
                 {
                 TOGGLE_CHANGE_CALLBACK(HELVETICA_FONT);
                 };
             MrmNcreateCallback = procedures
                 {
                 TOGGLE_INIT_CALLBACK(HELVETICA_FONT);
                 };
             };
         };
 
 object
     LUBALINGRAPH_FAMILY: XmPushButtonGadget 
         {
         arguments
             {
             XmNlabelString = 
             compound_string("Lubalin Graph");
             };
         callbacks
             {
             XmNactivateCallback = procedures
                 {
                 TOGGLE_CHANGE_CALLBACK(LUBALINGRAPH_FONT);
                 };
             MrmNcreateCallback = procedures
                 {
                 TOGGLE_INIT_CALLBACK(LUBALINGRAPH_FONT);
                 };
             };
         };
 
 object
     NCSCHOOLBOOK_FAMILY: XmPushButtonGadget 
         {
         arguments
             {
             XmNlabelString = 
             compound_string("NC Schoolbook");
             };
         callbacks
             {
             XmNactivateCallback = procedures
                 {
                 TOGGLE_CHANGE_CALLBACK(NCSSCHOOLBOOK_FONT);
                 };
             MrmNcreateCallback = procedures
                 {
                 TOGGLE_INIT_CALLBACK(NCSSCHOOLBOOK_FONT);
                 };
             };
         };
 
 object
     SOUVENIR_FAMILY: XmPushButtonGadget 
         {
         arguments
             {
             XmNlabelString = 
             compound_string("Souvenir");
             };
         callbacks
             {
             XmNactivateCallback = procedures
                 {
                 TOGGLE_CHANGE_CALLBACK(SOUVENIR_FONT);
                 };
             MrmNcreateCallback = procedures
                 {
                 TOGGLE_INIT_CALLBACK(SOUVENIR_FONT);
                 };
             };
         };
 
 object
     TIMES_FAMILY: XmPushButtonGadget 
         {
         arguments
             {
             XmNlabelString = 
             compound_string("Times");
             };
         callbacks
             {
             XmNactivateCallback = procedures
                 {
                 TOGGLE_CHANGE_CALLBACK(TIMES_FONT);
                 };
             MrmNcreateCallback = procedures
                 {
                 TOGGLE_INIT_CALLBACK(TIMES_FONT);
                 };
             };
         };
 
 object
     FAMILY: XmPulldownMenu 
         {
         controls
             {
             XmPushButtonGadget AVANTGARDE_FAMILY;
             XmPushButtonGadget COURIER_FAMILY;
             XmPushButtonGadget HELVETICA_FAMILY;
             XmPushButtonGadget LUBALINGRAPH_FAMILY;
             XmPushButtonGadget NCSCHOOLBOOK_FAMILY;
             XmPushButtonGadget SOUVENIR_FAMILY;
             XmPushButtonGadget TIMES_FAMILY;
             };
         };
 
 object
     FONT_NAME: XmOptionMenu 
         {
         arguments
             {
*11D
             XmNx = FOURTH_COLUMN;
             XmNy = 78;
*11E
*11I
*14D
             XmNx = 452;
             XmNy = 280;
*14E
*14I
             XmNx = 617;
             XmNy = 371;
*14E
*11E
             XmNlabelString = 
             compound_string("Font Name: ");
             XmNborderWidth = 1;
             };
         controls
             {
             XmPulldownMenu FAMILY;
             };
         callbacks
             {
             MrmNcreateCallback = procedures
                 {
                 TOGGLE_INIT_CALLBACK(BANNER_FONT_NAME);
                 };
             };
         };
 
 object
     A8_FAMILY: XmPushButtonGadget 
         {
         arguments
             {
             XmNlabelString = 
             compound_string("8");
             };
         callbacks
             {
             XmNactivateCallback = procedures
                 {
                 TOGGLE_CHANGE_CALLBACK(A8_FONT);
                 };
             MrmNcreateCallback = procedures
                 {
                 TOGGLE_INIT_CALLBACK(A8_FONT);
                 };
             };
         };
 
 object
     A10_FAMILY: XmPushButtonGadget 
         {
         arguments
             {
             XmNlabelString = 
             compound_string("10");
             };
         callbacks
             {
             XmNactivateCallback = procedures
                 {
                 TOGGLE_CHANGE_CALLBACK(A10_FONT);
                 };
             MrmNcreateCallback = procedures
                 {
                 TOGGLE_INIT_CALLBACK(A10_FONT);
                 };
             };
         };
 
 object
     A12_FAMILY: XmPushButtonGadget 
         {
         arguments
             {
             XmNlabelString = 
             compound_string("12");
             };
         callbacks
             {
             XmNactivateCallback = procedures
                 {
                 TOGGLE_CHANGE_CALLBACK(A12_FONT);
                 };
             MrmNcreateCallback = procedures
                 {
                 TOGGLE_INIT_CALLBACK(A12_FONT);
                 };
             };
         };
 
 object
     A14_FAMILY: XmPushButtonGadget 
         {
         arguments
             {
             XmNlabelString = 
             compound_string("14");
             };
         callbacks
             {
             XmNactivateCallback = procedures
                 {
                 TOGGLE_CHANGE_CALLBACK(A14_FONT);
                 };
             MrmNcreateCallback = procedures
                 {
                 TOGGLE_INIT_CALLBACK(A14_FONT);
                 };
             };
         };
 
 object
     A18_FAMILY: XmPushButtonGadget 
         {
         arguments
             {
             XmNlabelString = 
             compound_string("18");
             };
         callbacks
             {
             XmNactivateCallback = procedures
                 {
                 TOGGLE_CHANGE_CALLBACK(A18_FONT);
                 };
             MrmNcreateCallback = procedures
                 {
                 TOGGLE_INIT_CALLBACK(A18_FONT);
                 };
             };
         };
 
 object
     A24_FAMILY: XmPushButtonGadget 
         {
         arguments
             {
             XmNlabelString = 
             compound_string("24");
             };
         callbacks
             {
             XmNactivateCallback = procedures
                 {
                 TOGGLE_CHANGE_CALLBACK(A24_FONT);
                 };
             MrmNcreateCallback = procedures
                 {
                 TOGGLE_INIT_CALLBACK(A24_FONT);
                 };
             };
         };
 
 object
     SIZE: XmPulldownMenu 
         {
         controls
             {
             XmPushButtonGadget A8_FAMILY;
             XmPushButtonGadget A10_FAMILY;
             XmPushButtonGadget A12_FAMILY;
             XmPushButtonGadget A14_FAMILY;
             XmPushButtonGadget A18_FAMILY;
             XmPushButtonGadget A24_FAMILY;
             };
         };
 
 object
     FONT_SIZE: XmOptionMenu 
         {
         arguments
             {
*11D
             XmNx = FOURTH_COLUMN;
             XmNy = 114;
*11E
*11I
             XmNx = 452;
*14D
             XmNy = 316;
*14E
*14I
             XmNy = 371;
*14E
*11E
             XmNlabelString = 
             compound_string("Font Size: ");
             XmNborderWidth = 1;
             };
         controls
             {
             XmPulldownMenu SIZE;
             };
         callbacks
             {
             MrmNcreateCallback = procedures
                 {
                 TOGGLE_INIT_CALLBACK(BANNER_FONT_SIZE);
                 };
             };
         };
 
 object
     DISPLAY_BOX: XmToggleButtonGadget 
         {
         arguments
             {
             XmNlabelString = 
             compound_string("Rotating Box");
*11D
             XmNx = FOURTH_COLUMN;
             XmNy = 12;
*11E
*11I
*14D
             XmNx = 452;
             XmNy = 214;
*14E
*14I
             XmNx = 835;
             XmNy = 277;
*14E
*11E
             };
         callbacks
             {
             XmNvalueChangedCallback = procedures
                 {
                 TOGGLE_CHANGE_CALLBACK(BANNER_BOX_TOGGLE);
                 };
             MrmNcreateCallback = procedures
                 {
                 TOGGLE_INIT_CALLBACK(BANNER_BOX_TOGGLE);
                 };
             };
         };
 
 object
     DISPLAY_WORLD: XmToggleButtonGadget 
         {
         arguments
             {
             XmNlabelString = 
             compound_string("Rotating World");
*11D
             XmNx = FOURTH_COLUMN;
             XmNy = 27;
*11E
*11I
*14D
             XmNx = 452;
             XmNy = 229;
*14E
*14I
             XmNx = 834;
             XmNy = 304;
*14E
*11E
             };
         callbacks
             {
             XmNvalueChangedCallback = procedures
                 {
                 TOGGLE_CHANGE_CALLBACK(BANNER_WORLD_TOGGLE);
                 };
             MrmNcreateCallback = procedures
                 {
                 TOGGLE_INIT_CALLBACK(BANNER_WORLD_TOGGLE);
                 };
             };
         };
 
 object
     DISPLAY_HANOI: XmToggleButtonGadget 
         {
         arguments
             {
             XmNlabelString = 
             compound_string("Hanoi");
*11D
             XmNx = FOURTH_COLUMN;
             XmNy = 42;
*11E
*11I
*14D
             XmNx = 452;
             XmNy = 244;
*14E
*14I
             XmNx = 834;
             XmNy = 331;
*14E
*11E
             };
         callbacks
             {
             XmNvalueChangedCallback = procedures
                 {
                 TOGGLE_CHANGE_CALLBACK(BANNER_HANOI_TOGGLE);
                 };
             MrmNcreateCallback = procedures
                 {
                 TOGGLE_INIT_CALLBACK(BANNER_HANOI_TOGGLE);
                 };
             };
         };
 
 object
     CPU_WINDOW: XmToggleButtonGadget 
         {
         arguments
             {
             XmNx = FIRST_COLUMN;
*14D
             XmNy = 10;
*14E
*14I
             XmNy = 1;
*14E
             XmNlabelString = 
             compound_string("Cpu Display");
             };
         callbacks
             {
             XmNvalueChangedCallback = procedures
                 {
                 TOGGLE_CHANGE_CALLBACK(BANNER_CPU_WINDOW_TOGGLE);
                 };
             MrmNcreateCallback = procedures
                 {
                 TOGGLE_INIT_CALLBACK(BANNER_CPU_WINDOW_TOGGLE);
                 };
             };
         };
 
 object
*18D
     MON_WINDOW: XmToggleButtonGadget 
*18E
*18I
     LINK_WINDOW: XmToggleButtonGadget 
*18E
         {
         arguments
             {
             XmNx = FIRST_COLUMN;
*14D
             XmNy = 25;
*14E
*14I
             XmNy = 33;
*14E
             XmNlabelString = 
*18D
             compound_string("Monitor Display");
*18E
*18I
             compound_string("NCP Link Display");
*18E
             };
         callbacks
             {
             XmNvalueChangedCallback = procedures
                 {
*18D
                 TOGGLE_CHANGE_CALLBACK(BANNER_MON_WINDOW_TOGGLE);
*18E
*18I
                 TOGGLE_CHANGE_CALLBACK(BANNER_LINK_WINDOW_TOGGLE);
*18E
                 };
             MrmNcreateCallback = procedures
                 {
*18D
                 TOGGLE_INIT_CALLBACK(BANNER_MON_WINDOW_TOGGLE);
*18E
*18I
                 TOGGLE_INIT_CALLBACK(BANNER_LINK_WINDOW_TOGGLE);
*18E
                 };
             };
         };
 
 object
*19I
     MON_WINDOW: XmToggleButtonGadget 
         {
         arguments
             {
*20D
             XmNx = FIRST_COLUMN;
             XmNy = 301;
*20E
*20I
             XmNx = SECOND_COLUMN;
             XmNy = 279;
*20E
             XmNlabelString = 
             compound_string("Monitor Display");
             };
         callbacks
             {
             XmNvalueChangedCallback = procedures
                 {
                 TOGGLE_CHANGE_CALLBACK(BANNER_MON_WINDOW_TOGGLE);
                 };
             MrmNcreateCallback = procedures
                 {
                 TOGGLE_INIT_CALLBACK(BANNER_MON_WINDOW_TOGGLE);
                 };
             };
         };
 
 object
*19E
     SYS_WINDOW: XmToggleButtonGadget 
         {
         arguments
             {
             XmNx = FIRST_COLUMN;
*14D
             XmNy = 40;
*14E
*14I
             XmNy = 55;
*14E
             XmNlabelString = 
             compound_string("System Display");
             };
         callbacks
             {
             XmNvalueChangedCallback = procedures
                 {
                 TOGGLE_CHANGE_CALLBACK(BANNER_SYS_WINDOW_TOGGLE);
                 };
             MrmNcreateCallback = procedures
                 {
                 TOGGLE_INIT_CALLBACK(BANNER_SYS_WINDOW_TOGGLE);
                 };
             };
         };
 
 object
     MODES_WINDOW: XmToggleButtonGadget 
         {
         arguments
             {
             XmNx = FIRST_COLUMN;
*14D
             XmNy = 55;
*14E
*14I
             XmNy = 78;
*14E
             XmNlabelString = 
             compound_string("Modes Display");
             };
         callbacks
             {
             XmNvalueChangedCallback = procedures
                 {
                 TOGGLE_CHANGE_CALLBACK(BANNER_MODES_WINDOW_TOGGLE);
                 };
             MrmNcreateCallback = procedures
                 {
                 TOGGLE_INIT_CALLBACK(BANNER_MODES_WINDOW_TOGGLE);
                 };
             };
         };
 
 object
     PROCESS_WINDOW: XmToggleButtonGadget 
         {
         arguments
             {
             XmNx = FIRST_COLUMN;
*14D
             XmNy = 70;
*14E
*14I
             XmNy = 100;
*14E
             XmNlabelString = 
             compound_string("Process Display");
             };
         callbacks
             {
             XmNvalueChangedCallback = procedures
                 {
                 TOGGLE_CHANGE_CALLBACK(BANNER_PROCESS_WINDOW_TOGGLE);
                 };
             MrmNcreateCallback = procedures
                 {
                 TOGGLE_INIT_CALLBACK(BANNER_PROCESS_WINDOW_TOGGLE);
                 };
             };
         };
 
 object
     MESSAGE_WINDOW: XmToggleButtonGadget 
         {
         arguments
             {
             XmNx = FIRST_COLUMN;
*14D
             XmNy = 85;
*14E
*14I
             XmNy = 123;
*14E
             XmNlabelString = 
             compound_string("Message Display");
             };
         callbacks
             {
             XmNvalueChangedCallback = procedures
                 {
                 TOGGLE_CHANGE_CALLBACK(BANNER_MESSAGE_TOGGLE);
                 };
             MrmNcreateCallback = procedures
                 {
                 TOGGLE_INIT_CALLBACK(BANNER_MESSAGE_TOGGLE);
                 };
             };
         };
 
 object
     PE_WINDOW: XmToggleButtonGadget 
         {
         arguments
             {
             XmNx = FIRST_COLUMN;
*14D
             XmNy = 100;
*14E
*14I
             XmNy = 145;
*14E
             XmNlabelString = 
             compound_string("PE Display");
             };
         callbacks
             {
             XmNvalueChangedCallback = procedures
                 {
                 TOGGLE_CHANGE_CALLBACK(BANNER_PE_WINDOW);
                 };
             MrmNcreateCallback = procedures
                 {
                 TOGGLE_INIT_CALLBACK(BANNER_PE_WINDOW);
                 };
             };
         };
 
 object
     LCK_WINDOW: XmToggleButtonGadget 
         {
         arguments
             {
             XmNx = FIRST_COLUMN;
*14D
             XmNy = 115;
*14E
*14I
             XmNy = 167;
*14E
             XmNlabelString = 
             compound_string("Locks Display");
             };
         callbacks
             {
             XmNvalueChangedCallback = procedures
                 {
                 TOGGLE_CHANGE_CALLBACK(BANNER_LCK_WINDOW);
                 };
             MrmNcreateCallback = procedures
                 {
                 TOGGLE_INIT_CALLBACK(BANNER_LCK_WINDOW);
                 };
             };
         };
 
 object
     CWPS_WINDOW: XmToggleButtonGadget 
         {
         arguments
             {
             XmNx = FIRST_COLUMN;
*14D
             XmNy = 130;
*14E
*14I
             XmNy = 190;
*14E
             XmNlabelString = 
             compound_string("CWPS Display");
             };
         callbacks
             {
             XmNvalueChangedCallback = procedures
                 {
                 TOGGLE_CHANGE_CALLBACK(BANNER_CWPS_WINDOW);
                 };
             MrmNcreateCallback = procedures
                 {
                 TOGGLE_INIT_CALLBACK(BANNER_CWPS_WINDOW);
                 };
             };
         };
 
 object
     ANALOG_CLOCK: XmToggleButtonGadget 
         {
         arguments
             {
             XmNx = SECOND_COLUMN;
*14D
             XmNy = 160;
*14E
*14I
             XmNy = 238;
*14E
             XmNlabelString = 
             compound_string("Analog Clock");
             };
         callbacks
             {
             XmNvalueChangedCallback = procedures
                 {
                 TOGGLE_CHANGE_CALLBACK(BANNER_ANALOG_WINDOW_TOGGLE);
                 };
             MrmNcreateCallback = procedures
                 {
                 TOGGLE_INIT_CALLBACK(BANNER_ANALOG_WINDOW_TOGGLE);
                 };
             };
         };
 
 object
     DIGITAL_CLOCK: XmToggleButtonGadget 
         {
         arguments
             {
             XmNx = SECOND_COLUMN;
*14D
             XmNy = 175;
*14E
*14I
             XmNy = 260;
*14E
             XmNlabelString = 
             compound_string("Digital Clock");
             };
         callbacks
             {
             XmNvalueChangedCallback = procedures
                 {
                 TOGGLE_CHANGE_CALLBACK(BANNER_DIGITAL_WINDOW_TOGGLE);
                 };
             MrmNcreateCallback = procedures
                 {
                 TOGGLE_INIT_CALLBACK(BANNER_DIGITAL_WINDOW_TOGGLE);
                 };
             };
         };
 
 object
     BANNER_MESSAGE: exported XmMessageDialog 
         {
         arguments
             {
             XmNshadowThickness = 1;
             XmNdialogType = XmDIALOG_WARNING;
             XmNdialogTitle = 
             compound_string("Banner Message");
             XmNmessageString = 
*13D
             compound_string("You have modifed options that cannot be realised dynamicly.")&
             compound_string("To realise these new options, use the Save Settings option")&
*13E
*13I
*14D
             compound_string("You have modifed options that cannot be realised dynamicly.", separate=true)&
             compound_string("To realise these new options, use the Save Settings option", separate=true)&
*14E
*13E
*14D
             compound_string("and restart Banner.");
*14E
*14I
             compound_string("You have modifed options that cannot be realised dynamicly.",separate=true) &
                 compound_string("To realise these new options, use the Save Settings option",separate=true) &
                 compound_string("and restart Banner.");
*14E
             };
         };
 
 object
     BANNER_RESTORE_MESSAGE: exported XmMessageDialog 
         {
         arguments
             {
             XmNshadowThickness = 1;
             XmNdialogType = XmDIALOG_INFORMATION;
             XmNdialogTitle = 
             compound_string("Banner Message");
             XmNmessageString = 
             compound_string("Default Attributes have been Restored.");
             };
         };
 
 object
     BANNER_SAVE_MESSAGE: exported XmMessageDialog 
         {
         arguments
             {
             XmNshadowThickness = 1;
             XmNdialogType = XmDIALOG_INFORMATION;
             XmNdialogTitle = 
             compound_string("Banner Message");
             XmNmessageString = 
             compound_string("Attributes have been saved.");
             };
         };
 
 object
     BANNER_NOT_SAVE_MESSAGE: exported XmMessageDialog 
         {
         arguments
             {
             XmNshadowThickness = 1;
             XmNdialogType = XmDIALOG_ERROR;
             XmNdialogTitle = 
             compound_string("Banner Message");
             XmNmessageString = 
*13D
             compound_string("Failed to write DECW$USER_DEFAULTS:DECW$BANNER.DAT")&
*13E
*13I
*14D
             compound_string("Failed to write DECW$USER_DEFAULTS:DECW$BANNER.DAT", separate=true)&
*14E
*13E
*14D
             compound_string("Reason Unknown");
*14E
*14I
             compound_string("Failed to write DECW$USER_DEFAULTS:DECW$BANNER.DAT",separate=true) &
                 compound_string("Reason Unknown");
*14E
             };
         };
 
 object
     BANNER_NO_MESSAGE: exported XmMessageDialog 
         {
         arguments
             {
             XmNshadowThickness = 1;
             XmNdialogType = XmDIALOG_WARNING;
             XmNdialogTitle = 
             compound_string("Banner Message");
             XmNmessageString = 
             compound_string("The Message Window option is not active.");
             };
         };
 
 object
     BANNER_ALARM_MESSAGE: exported XmMessageDialog 
         {
         arguments
             {
             XmNshadowThickness = 1;
             XmNdialogType = XmDIALOG_INFORMATION;
             XmNdialogTitle = 
             compound_string("Banner Message");
             XmNmessageString = 
             compound_string("Banner Alarm Message");
             };
         };
 
*12D
 object
     BANNER_HELP_WIDGET: exported XmMessageDialog 
         {
         arguments
             {
             XmNshadowThickness = 1;
             XmNdialogType = XmDIALOG_WARNING;
             XmNdialogTitle = 
             compound_string("Banner Help");
             XmNmessageString = 
             compound_string("No Help is currently available in the Motif Banner.")&
             compound_string("To access help use the following command at DCL:")&
             compound_string("$HELP/LIBR=SYS$HELP:DECW$BANNER.HLB.");
             };
         };
 
 object
 !	object Banner_Help_Widget : EXPORTED HELP_BOX
 !	    {
 !		arguments {
 !			DXmNapplicationName = 'Banner';
 !			DXmNfirstTopic = 'OVERVIEW';
 !			DXmNlibrarySpec = 'SYS$HELP:DECW$BANNER.HLB';
 !			
 !>>>Developer decision: XmNx =mNtitleStringString
 ! = 'Help on DECWindows Banner';
 !			};
 !	    };
*12E
*12I
*14D
 object 
 	Banner_Help_Widget : EXPORTED DXmHelp
 	    {
 		arguments {
 			DXmNapplicationName = 'Banner';
 			DXmNfirstTopic = 'OVERVIEW';
 			DXmNlibrarySpec = 'SYS$HELP:DECW$BANNER.HLB';
 			};
 	    };
*14E
*14I
 object
     BANNER_HELP_WIDGET: exported DXmHelp 
         {
         arguments
             {
             DXmNapplicationName = 
             compound_string("Banner");
             DXmNfirstTopic = 
             compound_string("OVERVIEW");
             DXmNlibrarySpec = 
             compound_string("SYS$HELP:DECW$BANNER.HLB");
             };
         };
*14E
 
 object
*12E
     BANNER_MESSAGE_WIDGET: exported XmForm 
         {
         arguments
             {
             XmNdefaultButton = XmPushButtonGadget BANNER_MESSAGE_HIDE;
             };
         controls
             {
             XmPushButtonGadget BANNER_MESSAGE_HIDE;
             XmPushButtonGadget BANNER_MESSAGE_ERASE;
             XmScrolledText BANNER_MESSAGE_TEXT;
             };
         };
*9E
 
*9D
 end module /* DECW$BANNER */;
*9E
*9I
 object
     BANNER_MESSAGE_TEXT: XmScrolledText 
         {
         arguments
             {
             XmNeditable = false;
             XmNeditMode = 0;
             XmNcursorPositionVisible = false;
             XmNautoShowCursorPosition = false;
             XmNscrollVertical = true;
             XmNscrollHorizontal = false;
             XmNrows = 8;
             XmNcolumns = 50;
             XmNvalue = 
             "Banner Message Area";
             XmNwordWrap = true;
             XmNtopAttachment = XmATTACH_FORM;
             XmNtopOffset = 1;
             XmNrightAttachment = XmATTACH_FORM;
             XmNrightOffset = 1;
             XmNleftAttachment = XmATTACH_WIDGET;
             XmNleftWidget = XmPushButtonGadget BANNER_MESSAGE_HIDE;
             XmNleftOffset = 3;
             XmNbottomAttachment = XmATTACH_FORM;
             XmNbottomOffset = 1;
             };
         callbacks
             {
             MrmNcreateCallback = procedures
                 {
                 TOGGLE_INIT_CALLBACK(BANNER_MESSAGE_CREATE);
                 };
             };
         };
 
 object
     BANNER_MESSAGE_ERASE: XmPushButtonGadget 
         {
         arguments
             {
             XmNlabelString = 
             compound_string("Erase");
             XmNleftAttachment = XmATTACH_FORM;
             XmNleftOffset = 3;
             XmNtopAttachment = XmATTACH_WIDGET;
*14I
             XmNtopOffset = 13;
             XmNbottomOffset = 12;
             XmNbottomAttachment = XmATTACH_FORM;
             XmNy = 74;
*14E
             XmNtopWidget = XmPushButtonGadget BANNER_MESSAGE_HIDE;
*14D
             XmNtopOffset = 3;
*14E
*14I
             XmNrightOffset = -32;
             XmNrightAttachment = XmATTACH_POSITION;
             XmNrightPosition = 11;
*14E
             };
         callbacks
             {
             XmNactivateCallback = procedures
                 {
                 BANNER_MENU_CALLBACK(BANNER_ERASE_OPTION);
                 };
             };
         };
 
 object
     BANNER_MESSAGE_HIDE: XmPushButtonGadget 
         {
         arguments
             {
             XmNlabelString = 
             compound_string("Dismiss");
             XmNleftAttachment = XmATTACH_FORM;
             XmNleftOffset = 3;
             XmNtopAttachment = XmATTACH_FORM;
             XmNtopOffset = 3;
*14I
*17D
             XmNy = 24;
             XmNrightOffset = -15;
*17E
             XmNrightAttachment = XmATTACH_POSITION;
             XmNrightPosition = 14;
*17I
             XmNbottomAttachment = XmATTACH_POSITION;
             XmNbottomPosition = 27;
             XmNy = 24;
             XmNrightOffset = -15;
*17E
             XmNbottomOffset = -25;
*17D
             XmNbottomAttachment = XmATTACH_POSITION;
             XmNbottomPosition = 27;
*17E
*17I
             XmNshowAsDefault = 1;
*17E
*14E
             };
         callbacks
             {
             XmNactivateCallback = procedures
                 {
                 BANNER_MENU_CALLBACK(BANNER_HIDE_OPTION);
                 };
             };
         };
 
*13I
 object
     BANNER_NEW_MESSAGE: exported XmMessageDialog 
         {
         arguments
             {
             XmNshadowThickness = 1;
             XmNdialogType = XmDIALOG_ERROR;
             XmNdialogTitle = 
             compound_string("Banner New Message");
             XmNmessageString = 
*14D
 compound_string("Welcome to DECwindows Banner. Banner is for Digital Internal Use ONLY!", separate=true)&
 compound_string("To Access Help, Press MB2 in any of the Banner Windows, and select Help.", separate=true)&
 compound_string("To Customize the windows displayed by Banner, Press MB2 and select SETUP.", separate=true)&
 compound_string("To reposition the Banner windows, Press MB3, and Drag the window to the desired Position", separate=true)&
 compound_string("To save the customized settings/window positions, Press MB2, and select Save Current Settings", separate=true);
*14E
*14I
*17D
             compound_string("Welcome to DECwindows Banner. Banner is for Digital Internal Use ONLY!",separate=true) &
*17E
*17I
*21D
             compound_string("Welcome to DECwindows Banner. ",separate=true) &
                 compound_string("Banner is for Digital Internal Use ONLY!",separate=true) &
*21E
*17E
*21D
                 compound_string("To Access Help, Press MB2 in any of the Banner Windows, and select Help.",separate=true) &
*21E
*17D
                 compound_string("To Customize the windows displayed by Banner, Press MB2 and select SETUP.",separate=true) &
*17E
*17I
*21D
                 compound_string("To Customize the windows displayed by Banner, Press MB2 and select SETUP OPTIONS.",separate=true)
                      &
*21E
*17E
*21D
                 compound_string("To reposition the Banner windows, Press MB3, and Drag the window to the desired Position"
                     ,separate=true) &
                 compound_string("To save the customized settings/window positions, Press MB2, and select Save Current Settings"
                     ,separate=true) &
                 compound_string("");
*21E
*21I
 compound_string("Welcome to DECwindows Banner.",separate=true) &
 compound_string("",separate=true) &
 compound_string("To Access Help, Press MB2 in any of the") &
 compound_string("Banner Windows, and select Help.",separate=true) &
 compound_string("To Customize the windows displayed by Banner,") &
 compound_string("Press MB2 and select SETUP OPTIONS.",separate=true) &
 compound_string("To reposition the Banner windows, Press MB3,") & 
 compound_string("and Drag the window to the desired Position.",separate=true) &
 compound_string("To save the customized settings/window positions,") &
 compound_string("Press MB2, and select Save Current Settings",separate=true) &
 compound_string("");
*21E
*14E
             };
         };
 
*14D
 
*14E
*13E
*15I
 object
     BANNER_SOUND_OPTIONS: exported XmFormDialog 
         {
         arguments
             {
             XmNunitType = XmPIXELS;
             XmNdialogStyle = XmDIALOG_MODELESS;
             XmNdialogTitle = 
             compound_string("Banner Sound Setup");
*16I
             XmNdefaultButton = XmPushButtonGadget SOUND_OK_BUTTON;
             };
         controls
             {
             XmLabelGadget SOUND_EVENT_LABEL;
             XmPushButtonGadget SOUND_OK_BUTTON;
             XmPushButtonGadget SOUND_CANCEL_BUTTON;
             XmScale VOLUME_SELECT;
             XmScale TIME_SELECT;
             XmSeparatorGadget SEPERATOR_1;
             XmOptionMenu MWAIT_SOUND;
             XmOptionMenu NEW_PROCESSESS_SOUND;
             XmOptionMenu LESS_PROCESSES_SOUND;
             XmOptionMenu DISK_1_SOUND;
             XmOptionMenu DISK_2_SOUND;
             XmOptionMenu DISK_3_SOUND;
             XmOptionMenu MEMORY_HIGH_SOUND;
             XmOptionMenu PAGE_FILE_HIGH_SOUND;
             XmOptionMenu PENDING_IOS_SOUND;
             XmSeparatorGadget SEPERATOR_3;
             XmSeparator SEPERATOR_4;
             };
         };
     SOUND_EVENT_LABEL: XmLabelGadget 
         {
         arguments
             {
             XmNx = 44;
             XmNy = 10;
             XmNlabelString = 
             compound_string("Sound Event");
             XmNtopAttachment = XmATTACH_FORM;
             XmNleftAttachment = XmATTACH_FORM;
             XmNleftOffset = 24;
             };
         };
     SOUND_OK_BUTTON: XmPushButtonGadget 
         {
         arguments
             {
             XmNlabelString = 
             compound_string("OK");
             XmNtopAttachment = XmATTACH_WIDGET;
             XmNleftAttachment = XmATTACH_FORM;
             XmNrightAttachment = XmATTACH_FORM;
             XmNtopWidget = XmSeparatorGadget SEPERATOR_3;
             XmNshowAsDefault = 1;
*17I
             XmNtopOffset = 7;
*17E
             };
         callbacks
             {
             MrmNcreateCallback = procedures
                 {
                 BANNER_SOUND_INIT_CALLBACK(BANNER_SOUND_OK_BUTTON);
                 };
             XmNactivateCallback = procedures
                 {
                 BANNER_SOUND_CALLBACK(BANNER_SOUND_OK_BUTTON);
                 };
             };
         };
     SOUND_CANCEL_BUTTON: XmPushButtonGadget 
         {
         arguments
             {
             XmNlabelString = 
             compound_string("Cancel");
             XmNtopAttachment = XmATTACH_WIDGET;
             XmNleftAttachment = XmATTACH_FORM;
             XmNtopWidget = XmPushButtonGadget SOUND_OK_BUTTON;
             XmNbottomAttachment = XmATTACH_FORM;
             XmNrightAttachment = XmATTACH_FORM;
             };
         callbacks
             {
             MrmNcreateCallback = procedures
                 {
                 BANNER_SOUND_INIT_CALLBACK(BANNER_SOUND_CANCEL_BUTTON);
                 };
             XmNactivateCallback = procedures
                 {
                 BANNER_SOUND_CALLBACK(BANNER_SOUND_CANCEL_BUTTON);
                 };
             };
         };
     VOLUME_SELECT: XmScale 
         {
         arguments
             {
             XmNborderWidth = 0;
             XmNtopAttachment = XmATTACH_WIDGET;
             XmNleftAttachment = XmATTACH_WIDGET;
             XmNmaximum = 100;
             XmNminimum = 1;
             XmNrightAttachment = XmATTACH_FORM;
             XmNshowValue = true;
             XmNtitleString = 
             compound_string("Volume Level");
             XmNvalue = 20;
             XmNorientation = XmVERTICAL;
             XmNbottomAttachment = XmATTACH_POSITION;
             XmNbottomPosition = 27;
             XmNleftWidget = XmSeparator SEPERATOR_4;
             XmNtopWidget = XmSeparatorGadget SEPERATOR_1;
             XmNbottomOffset = -52;
             XmNtopOffset = 7;
*17D
             XmNleftOffset = 13;
*17E
*17I
             XmNleftOffset = 3;
*17E
             };
         callbacks
             {
             MrmNcreateCallback = procedures
                 {
                 BANNER_SOUND_INIT_CALLBACK(BANNER_SOUND_VOLUME);
                 };
             XmNvalueChangedCallback = procedures
                 {
                 BANNER_SOUND_CALLBACK(BANNER_SOUND_VOLUME);
                 };
             };
         };
     TIME_SELECT: XmScale 
         {
         arguments
             {
             XmNborderWidth = 0;
             XmNtopAttachment = XmATTACH_POSITION;
             XmNleftAttachment = XmATTACH_WIDGET;
             XmNmaximum = 100;
             XmNminimum = 1;
             XmNrightAttachment = XmATTACH_FORM;
             XmNshowValue = true;
             XmNtitleString = 
             compound_string("Sound Time");
             XmNvalue = 20;
             XmNorientation = XmVERTICAL;
             XmNtopPosition = 34;
             XmNbottomAttachment = XmATTACH_WIDGET;
             XmNbottomWidget = XmSeparatorGadget SEPERATOR_3;
             XmNleftWidget = XmSeparator SEPERATOR_4;
             XmNtopOffset = 35;
             XmNbottomOffset = 9;
*17I
             XmNrightOffset = 13;
*17E
             };
         callbacks
             {
             MrmNcreateCallback = procedures
                 {
                 BANNER_SOUND_INIT_CALLBACK(BANNER_SOUND_TIME);
                 };
             XmNvalueChangedCallback = procedures
                 {
                 BANNER_SOUND_CALLBACK(BANNER_SOUND_TIME);
                 };
             };
         };
     SEPERATOR_1: XmSeparatorGadget 
         {
         arguments
             {
             XmNtopAttachment = XmATTACH_WIDGET;
             XmNleftAttachment = XmATTACH_FORM;
             XmNrightAttachment = XmATTACH_FORM;
             XmNtopWidget = XmLabelGadget SOUND_EVENT_LABEL;
             };
         };
     MWAIT_SOUND: XmOptionMenu 
         {
         arguments
             {
             XmNborderWidth = 0;
             XmNtopAttachment = XmATTACH_WIDGET;
             XmNleftAttachment = XmATTACH_FORM;
             XmNlabelString = 
             compound_string("MWait Processes");
             XmNtopWidget = XmSeparatorGadget SEPERATOR_1;
             XmNwhichButton = 1;
             XmNleftOffset = 5;
             XmNspacing = 20;
             };
*17I
         controls
             {
             XmPulldownMenu 
                 {
                 arguments
                     {
                     XmNx = 118;
                     XmNy = 13;
                     XmNborderWidth = 1;
                     };
                 controls
                     {
                     XmPushButton 
                         {
                         arguments
                             {
                             XmNx = 8;
                             XmNy = 5;
                             XmNlabelString = 
                             compound_string("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
                             };
                         callbacks
                             {
                             MrmNcreateCallback = procedures
                                 {
                                 BANNER_SOUND_INIT_CALLBACK(BANNER_SOUND_MWAIT_PUSH);
                                 };
                             };
                         };
                     };
                 };
             };
*17E
         callbacks
             {
             MrmNcreateCallback = procedures
                 {
                 BANNER_SOUND_INIT_CALLBACK(BANNER_SOUND_MWAIT);
                 };
             };
*17D
         controls
             {
             XmPulldownMenu 
                 {
                 arguments
                     {
                     XmNx = 118;
                     XmNy = 13;
                     XmNborderWidth = 1;
                     };
                 controls
                     {
                     XmPushButton 
                         {
                         arguments
                             {
                             XmNx = 8;
                             XmNy = 5;
                             XmNlabelString = 
                             compound_string("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
                             };
 			callbacks
 			    {
 			    MrmNcreateCallback = procedures
 				{
 				BANNER_SOUND_INIT_CALLBACK(BANNER_SOUND_MWAIT_PUSH);
 				};
 			    };
                         };
                     };
                 };
             };
*17E
         };
     NEW_PROCESSESS_SOUND: XmOptionMenu 
         {
         arguments
             {
             XmNborderWidth = 0;
             XmNtopAttachment = XmATTACH_WIDGET;
             XmNleftAttachment = XmATTACH_FORM;
             XmNlabelString = 
             compound_string("New Processes");
             XmNwhichButton = 1;
             XmNtopWidget = XmOptionMenu MWAIT_SOUND;
             XmNleftOffset = 5;
             XmNspacing = 30;
             };
*17I
         controls
             {
             XmPulldownMenu 
                 {
                 arguments
                     {
                     XmNx = 118;
                     XmNy = 13;
                     XmNborderWidth = 1;
                     };
                 controls
                     {
                     XmPushButton 
                         {
                         arguments
                             {
                             XmNx = 8;
                             XmNy = 5;
                             XmNlabelString = 
                             compound_string("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
                             };
                         callbacks
                             {
                             MrmNcreateCallback = procedures
                                 {
                                 BANNER_SOUND_INIT_CALLBACK(BANNER_SOUND_NEW_PROCESSES_PUSH);
                                 };
                             };
                         };
                     };
                 };
             };
*17E
         callbacks
             {
             MrmNcreateCallback = procedures
                 {
                 BANNER_SOUND_INIT_CALLBACK(BANNER_SOUND_NEW_PROCESSES);
                 };
             };
*17D
         controls
             {
             XmPulldownMenu 
                 {
                 arguments
                     {
                     XmNx = 118;
                     XmNy = 13;
                     XmNborderWidth = 1;
                     };
                 controls
                     {
                     XmPushButton 
                         {
                         arguments
                             {
                             XmNx = 8;
                             XmNy = 5;
                             XmNlabelString = 
                             compound_string("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
                             };
 			callbacks
 			    {
 				MrmNcreateCallback = procedures
 				    {
 				    BANNER_SOUND_INIT_CALLBACK(BANNER_SOUND_NEW_PROCESSES_PUSH);
 				    };
 			    };
                         };
                     };
                 };
             };
*17E
         };
     LESS_PROCESSES_SOUND: XmOptionMenu 
         {
         arguments
             {
             XmNborderWidth = 0;
             XmNtopAttachment = XmATTACH_WIDGET;
             XmNleftAttachment = XmATTACH_FORM;
             XmNlabelString = 
             compound_string("Less Processes");
             XmNwhichButton = 1;
             XmNtopOffset = 0;
             XmNtopWidget = XmOptionMenu NEW_PROCESSESS_SOUND;
             XmNleftOffset = 5;
             XmNspacing = 30;
             };
*17I
         controls
             {
             XmPulldownMenu 
                 {
                 arguments
                     {
                     XmNx = 118;
                     XmNy = 13;
                     XmNborderWidth = 1;
                     };
                 controls
                     {
                     XmPushButton 
                         {
                         arguments
                             {
                             XmNx = 8;
                             XmNy = 5;
                             XmNlabelString = 
                             compound_string("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
                             };
                         callbacks
                             {
                             MrmNcreateCallback = procedures
                                 {
                                 BANNER_SOUND_INIT_CALLBACK(BANNER_LESS_PROCESSES_PUSH);
                                 };
                             };
                         };
                     };
                 };
             };
*17E
         callbacks
             {
             MrmNcreateCallback = procedures
                 {
                 BANNER_SOUND_INIT_CALLBACK(BANNER_LESS_PROCESSES);
                 };
             };
*17D
         controls
             {
             XmPulldownMenu 
                 {
                 arguments
                     {
                     XmNx = 118;
                     XmNy = 13;
                     XmNborderWidth = 1;
                     };
                 controls
                     {
                     XmPushButton 
                         {
                         arguments
                             {
                             XmNx = 8;
                             XmNy = 5;
                             XmNlabelString = 
                             compound_string("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
                             };
 			callbacks
 			    {
 				MrmNcreateCallback = procedures
 				    {
 				    BANNER_SOUND_INIT_CALLBACK(BANNER_LESS_PROCESSES_PUSH);
 				    };
 			    };
                         };
                     };
                 };
             };
*17E
         };
     DISK_1_SOUND: XmOptionMenu 
         {
         arguments
             {
             XmNborderWidth = 0;
             XmNtopAttachment = XmATTACH_WIDGET;
             XmNleftAttachment = XmATTACH_FORM;
             XmNlabelString = 
             compound_string("Disk 1 High");
             XmNwhichButton = 1;
             XmNtopWidget = XmOptionMenu LESS_PROCESSES_SOUND;
             XmNleftOffset = 5;
             XmNspacing = 54;
             };
*17I
         controls
             {
             XmPulldownMenu 
                 {
                 arguments
                     {
                     XmNx = 118;
                     XmNy = 13;
                     XmNborderWidth = 1;
                     };
                 controls
                     {
                     XmPushButton 
                         {
                         arguments
                             {
                             XmNx = 8;
                             XmNy = 5;
                             XmNlabelString = 
                             compound_string("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
                             };
                         callbacks
                             {
                             MrmNcreateCallback = procedures
                                 {
                                 BANNER_SOUND_INIT_CALLBACK(BANNER_SOUND_DISK_1_PUSH);
                                 };
                             };
                         };
                     };
                 };
             };
*17E
         callbacks
             {
             MrmNcreateCallback = procedures
                 {
                 BANNER_SOUND_INIT_CALLBACK(BANNER_SOUND_DISK_1);
                 };
             };
*17D
         controls
             {
             XmPulldownMenu 
                 {
                 arguments
                     {
                     XmNx = 118;
                     XmNy = 13;
                     XmNborderWidth = 1;
                     };
                 controls
                     {
                     XmPushButton 
                         {
                         arguments
                             {
                             XmNx = 8;
                             XmNy = 5;
                             XmNlabelString = 
                             compound_string("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
                             };
 			callbacks
 			    {
 				MrmNcreateCallback = procedures
 				    {
 				    BANNER_SOUND_INIT_CALLBACK(BANNER_SOUND_DISK_1_PUSH);
 				    };
 			    };
                         };
                     };
                 };
             };
*17E
         };
     DISK_2_SOUND: XmOptionMenu 
         {
         arguments
             {
             XmNborderWidth = 0;
             XmNtopAttachment = XmATTACH_WIDGET;
             XmNleftAttachment = XmATTACH_FORM;
             XmNlabelString = 
             compound_string("Disk 2 High");
             XmNwhichButton = 1;
             XmNtopWidget = XmOptionMenu DISK_1_SOUND;
             XmNleftOffset = 5;
             XmNspacing = 54;
             };
*17I
         controls
             {
             XmPulldownMenu 
                 {
                 arguments
                     {
                     XmNx = 118;
                     XmNy = 13;
                     XmNborderWidth = 1;
                     };
                 controls
                     {
                     XmPushButton 
                         {
                         arguments
                             {
                             XmNx = 8;
                             XmNy = 5;
                             XmNlabelString = 
                             compound_string("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
                             };
                         callbacks
                             {
                             MrmNcreateCallback = procedures
                                 {
                                 BANNER_SOUND_INIT_CALLBACK(BANNER_SOUND_DISK_2_PUSH);
                                 };
                             };
                         };
                     };
                 };
             };
*17E
         callbacks
             {
             MrmNcreateCallback = procedures
                 {
                 BANNER_SOUND_INIT_CALLBACK(BANNER_SOUND_DISK_2);
                 };
             };
*17D
         controls
             {
             XmPulldownMenu 
                 {
                 arguments
                     {
                     XmNx = 118;
                     XmNy = 13;
                     XmNborderWidth = 1;
                     };
                 controls
                     {
                     XmPushButton 
                         {
                         arguments
                             {
                             XmNx = 8;
                             XmNy = 5;
                             XmNlabelString = 
                             compound_string("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
                             };
 			callbacks
 			    {
 				MrmNcreateCallback = procedures
 				    {
 				    BANNER_SOUND_INIT_CALLBACK(BANNER_SOUND_DISK_2_PUSH);
 				    };
 			    };
                         };
                     };
                 };
             };
*17E
         };
     DISK_3_SOUND: XmOptionMenu 
         {
         arguments
             {
             XmNborderWidth = 0;
             XmNtopAttachment = XmATTACH_WIDGET;
             XmNleftAttachment = XmATTACH_FORM;
             XmNlabelString = 
             compound_string("Disk 3 High");
             XmNwhichButton = 1;
             XmNtopWidget = XmOptionMenu DISK_2_SOUND;
             XmNleftOffset = 5;
             XmNspacing = 54;
             };
*17I
         controls
             {
             XmPulldownMenu 
                 {
                 arguments
                     {
                     XmNx = 118;
                     XmNy = 13;
                     XmNborderWidth = 1;
                     };
                 controls
                     {
                     XmPushButton 
                         {
                         arguments
                             {
                             XmNx = 8;
                             XmNy = 5;
                             XmNlabelString = 
                             compound_string("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
                             };
                         callbacks
                             {
                             MrmNcreateCallback = procedures
                                 {
                                 BANNER_SOUND_INIT_CALLBACK(BANNER_SOUND_DISK_3_PUSH);
                                 };
                             };
                         };
                     };
                 };
             };
*17E
         callbacks
             {
             MrmNcreateCallback = procedures
                 {
                 BANNER_SOUND_INIT_CALLBACK(BANNER_SOUND_DISK_3);
                 };
             };
*17D
         controls
             {
             XmPulldownMenu 
                 {
                 arguments
                     {
                     XmNx = 118;
                     XmNy = 13;
                     XmNborderWidth = 1;
                     };
                 controls
                     {
                     XmPushButton 
                         {
                         arguments
                             {
                             XmNx = 8;
                             XmNy = 5;
                             XmNlabelString = 
                             compound_string("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
                             };
 			callbacks
 			    {
 				MrmNcreateCallback = procedures
 				    {
 				    BANNER_SOUND_INIT_CALLBACK(BANNER_SOUND_DISK_3_PUSH);
 				    };
 			    };
                         };
                     };
                 };
             };
*17E
         };
     MEMORY_HIGH_SOUND: XmOptionMenu 
         {
         arguments
             {
             XmNborderWidth = 0;
             XmNtopAttachment = XmATTACH_WIDGET;
             XmNleftAttachment = XmATTACH_FORM;
             XmNlabelString = 
             compound_string("Memory High");
             XmNwhichButton = 1;
             XmNtopWidget = XmOptionMenu DISK_3_SOUND;
             XmNleftOffset = 5;
             XmNspacing = 40;
             };
*17I
         controls
             {
             XmPulldownMenu 
                 {
                 arguments
                     {
                     XmNx = 118;
                     XmNy = 13;
                     XmNborderWidth = 1;
                     };
                 controls
                     {
                     XmPushButton 
                         {
                         arguments
                             {
                             XmNx = 8;
                             XmNy = 5;
                             XmNlabelString = 
                             compound_string("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
                             };
                         callbacks
                             {
                             MrmNcreateCallback = procedures
                                 {
                                 BANNER_SOUND_INIT_CALLBACK(BANNER_SOUND_MEMORY_PUSH);
                                 };
                             };
                         };
                     };
                 };
             };
*17E
         callbacks
             {
             MrmNcreateCallback = procedures
                 {
                 BANNER_SOUND_INIT_CALLBACK(BANNER_SOUND_MEMORY);
                 };
             };
*17D
         controls
             {
             XmPulldownMenu 
                 {
                 arguments
                     {
                     XmNx = 118;
                     XmNy = 13;
                     XmNborderWidth = 1;
                     };
                 controls
                     {
                     XmPushButton 
                         {
                         arguments
                             {
                             XmNx = 8;
                             XmNy = 5;
                             XmNlabelString = 
                             compound_string("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
                             };
 			callbacks
 			    {
 				MrmNcreateCallback = procedures
 				    {
 				    BANNER_SOUND_INIT_CALLBACK(BANNER_SOUND_MEMORY_PUSH);
 				    };
 			    };
                         };
                     };
                 };
             };
*17E
         };
     PAGE_FILE_HIGH_SOUND: XmOptionMenu 
         {
         arguments
             {
             XmNborderWidth = 0;
             XmNtopAttachment = XmATTACH_WIDGET;
             XmNleftAttachment = XmATTACH_FORM;
             XmNlabelString = 
             compound_string("Page File High");
             XmNwhichButton = 1;
             XmNtopWidget = XmOptionMenu MEMORY_HIGH_SOUND;
             XmNleftOffset = 5;
             XmNspacing = 35;
             };
*17I
         controls
             {
             XmPulldownMenu 
                 {
                 arguments
                     {
                     XmNx = 118;
                     XmNy = 13;
                     XmNborderWidth = 1;
                     };
                 controls
                     {
                     XmPushButton 
                         {
                         arguments
                             {
                             XmNx = 8;
                             XmNy = 5;
                             XmNlabelString = 
                             compound_string("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
                             };
                         callbacks
                             {
                             MrmNcreateCallback = procedures
                                 {
                                 BANNER_SOUND_INIT_CALLBACK(BANNER_SOUND_PAGE_FILE_PUSH);
                                 };
                             };
                         };
                     };
                 };
             };
*17E
         callbacks
             {
             MrmNcreateCallback = procedures
                 {
                 BANNER_SOUND_INIT_CALLBACK(BANNER_SOUND_PAGE_FILE);
                 };
             };
*17D
         controls
             {
             XmPulldownMenu 
                 {
                 arguments
                     {
                     XmNx = 118;
                     XmNy = 13;
                     XmNborderWidth = 1;
                     };
                 controls
                     {
                     XmPushButton 
                         {
                         arguments
                             {
                             XmNx = 8;
                             XmNy = 5;
                             XmNlabelString = 
                             compound_string("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
                             };
 			callbacks
 			    {
 				MrmNcreateCallback = procedures
 				    {
 				    BANNER_SOUND_INIT_CALLBACK(BANNER_SOUND_PAGE_FILE_PUSH);
 				    };
 			    };
                         };
                     };
                 };
             };
*17E
         };
     PENDING_IOS_SOUND: XmOptionMenu 
         {
         arguments
             {
             XmNborderWidth = 0;
             XmNtopAttachment = XmATTACH_WIDGET;
             XmNleftAttachment = XmATTACH_FORM;
             XmNlabelString = 
             compound_string("Pending IO\'s");
             XmNwhichButton = 1;
             XmNtopWidget = XmOptionMenu PAGE_FILE_HIGH_SOUND;
             XmNleftOffset = 5;
*17D
             XmNspacing = 35;
             };
         callbacks
             {
             MrmNcreateCallback = procedures
                 {
                 BANNER_SOUND_INIT_CALLBACK(BANNER_SOUND_PENDING_IOS);
                 };
*17E
*17I
             XmNspacing = 45;
*17E
*16E
             };
         controls
             {
*16I
             XmPulldownMenu 
                 {
                 arguments
                     {
                     XmNx = 118;
                     XmNy = 13;
                     XmNborderWidth = 1;
                     };
                 controls
                     {
                     XmPushButton 
                         {
                         arguments
                             {
                             XmNx = 8;
                             XmNy = 5;
                             XmNlabelString = 
                             compound_string("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
                             };
*17D
 			callbacks
 			    {
 				MrmNcreateCallback = procedures
 				    {
 				    BANNER_SOUND_INIT_CALLBACK(BANNER_SOUND_PENDING_IOS_PUSH);
 				    };
 			    };
*17E
*17I
                         callbacks
                             {
                             MrmNcreateCallback = procedures
                                 {
                                 BANNER_SOUND_INIT_CALLBACK(BANNER_SOUND_PENDING_IOS_PUSH);
                                 };
                             };
*17E
                         };
                     };
                 };
             };
*17I
         callbacks
             {
             MrmNcreateCallback = procedures
                 {
                 BANNER_SOUND_INIT_CALLBACK(BANNER_SOUND_PENDING_IOS);
                 };
             };
*17E
         };
     SEPERATOR_3: XmSeparatorGadget 
         {
         arguments
             {
             XmNtopAttachment = XmATTACH_WIDGET;
             XmNleftAttachment = XmATTACH_FORM;
             XmNrightAttachment = XmATTACH_FORM;
*17D
             XmNtopWidget = XmOptionMenu PAGE_FILE_HIGH_SOUND;
*17E
*17I
             XmNtopWidget = XmOptionMenu PENDING_IOS_SOUND;
*17E
             };
         };
     SEPERATOR_4: XmSeparator 
         {
         arguments
             {
             XmNtopAttachment = XmATTACH_WIDGET;
             XmNleftAttachment = XmATTACH_FORM;
             XmNleftOffset = 490;
             XmNbottomAttachment = XmATTACH_WIDGET;
             XmNbottomWidget = XmSeparatorGadget SEPERATOR_3;
             XmNtopWidget = XmSeparatorGadget SEPERATOR_1;
             XmNorientation = XmVERTICAL;
*16E
             };
         };
 
*16D
 
*16E
*15E
 end module;
 
*9E
