Return-Path: <panigl@cc.univie.ac.at>
Received: from TGV.COM by CIA.TGV.COM with SMTP;
          Fri, 20 Aug 1993 7:38:16 -0700 (PDT)
Received: from access.edvz.univie.ac.at ([131.130.5.2]) by TGV.COM via INTERNET ;
          Fri, 20 Aug 93 07:38:11 PDT
Received: by cc.univie.ac.at (MX V3.1) id 884; Fri, 20 Aug 1993 16:37:08 +0200
Sender: <panigl@cc.univie.ac.at>
Date: Fri, 20 Aug 1993 16:38:01 +0200
From: Christian Panigl - ACOnet/UniVie +43(1)436111-383
      <panigl@cc.univie.ac.at>
To: madison@tgv.com
CC: panigl@cc.univie.ac.at
Message-ID: <00971500.D5C12FA0.884@cc.univie.ac.at>
Subject: nsquery.hlp

    Hello Mat,
    
    first of all thank you a lot for all the nice and brilliant software you
    gave us for free !  Yesterday I sucessfully installed NSQUERY on my
    DECmcc-station (on UCX020D). Our domain-admins (used to use unix/nslookup)
    do like it a lot !!!
    
    For HELP on all the PD tools on our hosts, I created a
    SYS$TOOLS:TOOLS.HLB.  I made a .HLP out of your NSQUERY_DOC.TXT
    (shortened and slightly modified) and included it in our TOOLS.HLB.
    
    Here it is, if you'd like to include it in your next distribution.
    
    Regards
    Christian
    
  -o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-
  Christian Panigl                   X400: Christian.Panigl@CAN.ACOnet.ADA.AT
  Computer Center - ACOnet                 |         |      |   |      |   |
  Vienna University                        G         S      O   P      A   C
  Universitaetsstrasse 7         Internet:   Christian.Panigl@cc.UniVie.ac.at
  A-1010 Wien                         Tel:   +43 1 436111-383  
  Austria                             Fax:   +43 1 436111-170     
  -o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-


1 NSQUERY

    NSQUERY is designed to be invoked as a DCL "foreign command":

               $ NSQ*UERY :== $disk:[dir]NSQUERY

    This command issues a query to an Internet domain server and displays
    the resultant reply.

    FORMAT

    NSQUERY  query-name [server]

    _______________________________________________________
          Command Qualifiers     Defaults

          /PORT=number           /PORT=53
          /PROTOCOL=proto        /PROTOCOL=UDP
          /[NO]RECURSIVE         /NORECURSIVE
          /TYPE=qtype            /TYPE=ALL
          /CLASS=qclass          /CLASS=INTERNET

    _______________________________________________________

2 Parameters

    query-name

    Name about which information should be obtained. This should be an
    internet dotted domain-style name. If query-name is a numeric IP
    address in dotted decimal form (e.g., 128.113.1.5), NSQUERY will
    automatically make an inverse query by reversing the address segments
    and adding ".IN-ADDR.ARPA".

    All resource records defined in RFC 1035 are interpreted by NSQUERY.
    Refer to that RFC for information about the abbreviations used in the
    resource record display. All "time-to-live" values are displayed as
    VMS delta-time strings. Authoritative responses and truncated
    messages are noted before the resource records are displayed.

    server

    Server to be queried. If omitted, NSQUERY translates the logical name
    NSQ_SERVER to obtain the server name. If there is no such logical
    name or it cannot be translated, NSQUERY prompts for the name of the
    server.  If the server's name has multiple addresses, all addresses
    are obtained and each is tried until a query is successfully sent and
    reply received.

2 Qualifiers
/PORT

    /PORT=port

    Directs the query to the specified TCP or UDP port. If omitted, port
    53 (the port used by most, if not all, domain servers) is used.

/PROTOCOL

    /PROTOCOL=proto

    Selects either TCP or UDP protocol. The default is UDP. UDP is
    generally used for simple domain queries;  TCP is generally only used
    for major domain system events, such as zone transfers.

/RECURSIVE

    /[NO]RECURSIVE

    Sets the recursion desired bit in the query. If the server being
    queried supports recursion and does not have the requested
    information cached, it will make queries of other servers on your
    behalf until the query is answered. NSQUERY will notify you if the
    server does not support recursive queries.

/TYPE

    /TYPE=qtype

    Selects the type of resource record to be returned about the name.
    The default is ALL, which selects all available resource record
    types.  Available types are as follows:

          Type/QType_______Description___________________________

          A                host address

          NS               authoritative name server

          MD               mail destination (obsolete)

          MF               mail forwarder (obsolete)

          CNAME            canonical name for an alias

          SOA              start of zone authority

          MB               mailbox domain name (experimental)

          MG               mail group member (experimental)

          MR               mail rename domain name
                           (experimental)

          NULL             null resource record

          WKS              well-known service description

          PTR              domain name pointer

          HINFO            host information

          MINFO            mailbox or mail list information

          MX               mail exchange

          TXT              text strings

          AXFR             complete zone transfer

          MAILB            all mailbox-related records (MB, MG,
                           MR)

          MAILA            all_mail_agent_records_(obsolete)     


    Refer to RFC 1035 for a complete description of resource record types
    and their uses. Note that not all servers support all record types.
    You should probably never attempt to use the AXFR query type.

/CLASS

    /CLASS=qclass

    Selects the class of resource records to be returned.  The default is
    INTERNET. Available qclass values are:

          Class/QClass_____Description___________________________

          INTERNET         the Internet

          CSNET            the CSNET class (obsolete)

          CHAOSNET         the CHAOS class

          HESIOD           the Hesiod class

          ALL              all_classes

2 Example

$ NSQUERY RPI.EDU NETSERV1.ITS.RPI.EDU

%NSQUERY-I-TRYNS, trying address 128.113.1.5...
%NSQUERY-I-AUTHRESP, authoritative response
%NSQUERY-I-QUERYOK, query operation completed successfully

QUERY  #1: QName=RPI.EDU., QType=255, QClass=1

ANSWER #1: RPI.EDU., SOA, INTERNET,    0 12:00:00
    Primary NS: rpi.edu.
    Responsible: hostmaster.rpi.edu.
    Serial=600072, Refresh=   1 06:00:00, Retry=   0 00:20:00
    Expire=  41 16:00:00, Minimum=   0 12:00:00
ANSWER #2: RPI.EDU., A, INTERNET,    0 12:00:00, Addr=128.113.1.7
ANSWER #3: RPI.EDU., NS, INTERNET,    0 12:00:00, NS=netserv1.its.rpi.edu.
ANSWER #4: RPI.EDU., NS, INTERNET,    0 12:00:00, NS=netserv2.its.rpi.edu.
ANSWER #5: RPI.EDU., NS, INTERNET,    0 12:00:00, NS=columbia.edu.
ANSWER #6: RPI.EDU., NS, INTERNET,    0 12:00:00, NS=n2ngw.nyser.net.
ANSWER #7: RPI.EDU., HINFO, INTERNET,    0 12:00:00, CPU=SUN-3/280, OS=UNIX

ADDTNL #1: netserv1.its.rpi.edu., A, INTERNET,    0 12:00:00, Addr=128.113.1.5
ADDTNL #2: netserv2.its.rpi.edu., A, INTERNET,    1 00:00:00, Addr=128.113.1.3
ADDTNL #3: columbia.edu., A, INTERNET,    0 21:27:26, Addr=128.59.16.1
ADDTNL #4: columbia.edu., A, INTERNET,    0 21:27:26, Addr=128.59.32.1
ADDTNL #5: n2ngw.nyser.net., A, INTERNET,    1 22:57:35, Addr=192.35.82.2
ADDTNL_#6:_n2ngw.nyser.net.,_A,_INTERNET,____0_00:00:56, Addr=128.145.198.2

