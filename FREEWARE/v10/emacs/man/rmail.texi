@c This is part of the Emacs manual.
@c Copyright (C) 1985, 1986, 1987, 1993 Free Software Foundation, Inc.
@c See file emacs.texi for copying conditions.
@node Rmail, Dired, Sending Mail, Top
@chapter Reading Mail with Rmail
@cindex Rmail
@cindex reading mail
@findex rmail

  Rmail is an Emacs subsystem for reading and disposing of mail that you
receive.  Rmail stores mail messages in files called Rmail files.
Reading the message in an Rmail file is done in a special major mode,
Rmail mode, which redefines most letters to run commands for managing
mail.  To enter Rmail, type @kbd{M-x rmail}.  This reads your primary
mail file, merges new mail in from your inboxes, displays the first
message you haven't read yet, and lets you begin reading.

@cindex primary mail file
  Using Rmail in the simplest fashion, you have one Rmail file @file{~/RMAIL}
in which all of your mail is saved.  It is called your @dfn{primary mail
file}.  In more sophisticated usage, you can copy messages into other Rmail
files and then edit those files with Rmail.

  Rmail uses narrowing to hide all but one message in the Rmail file.
The message that is shown is called the @dfn{current message}.  Rmail
mode's special commands can do such things as delete the current
message, copy into another file, send a reply, or move to another
message.

@cindex message number
  Within the Rmail file, messages are arranged sequentially in order
of receipt.  They are also assigned consecutive integers as their
@dfn{message numbers}.  The number of the current message is displayed
in Rmail's mode line, followed by the total number of messages in the
file.  You can move to a message by specifying its message number
using the @kbd{j} key (@pxref{Rmail Motion}).

@kindex s @r{(Rmail)}
@findex rmail-save
  Following the usual conventions of Emacs, changes in an Rmail file become
permanent only when the file is saved.  You can do this with @kbd{s}
(@code{rmail-save}), which also expunges deleted messages from the file
first (@pxref{Rmail Deletion}).  To save the file without expunging, use
@kbd{C-x C-s}.  Rmail saves the Rmail file spontaneously when moving new
mail from an inbox file (@pxref{Rmail Inbox}).

@kindex q @r{(Rmail)}
@findex rmail-quit
@kindex b @r{(Rmail)}
@findex rmail-bury
  You can exit Rmail with @kbd{q} (@code{rmail-quit}); this expunges and
saves the Rmail file and then switches to another buffer.  But there is
no need to `exit' formally.  If you switch from Rmail to editing in
other buffers, and never happen to switch back, you have exited.  (The
Rmail command @kbd{b}, @code{rmail-bury}, does this for you.)  Just make
sure to save the Rmail file eventually (like any other file you have
changed).  @kbd{C-x s} is a good enough way to do this
(@pxref{Saving}).

@menu
* Scroll: Rmail Scrolling.   Scrolling through a message.
* Motion: Rmail Motion.      Moving to another message.
* Deletion: Rmail Deletion.  Deleting and expunging messages.
* Inbox: Rmail Inbox.        How mail gets into the Rmail file.
* Files: Rmail Files.        Using multiple Rmail files.
* Output: Rmail Output.	     Copying message out to files.
* Labels: Rmail Labels.      Classifying messages by labeling them.
* Reply: Rmail Reply.        Sending replies to messages you are viewing.
* Summary: Rmail Summary.    Summaries show brief info on many messages.
* Editing: Rmail Editing.    Editing message text and headers in Rmail.
* Digest: Rmail Digest.      Extracting the messages from a digest message.
* Out of Rmail::	     Converting an Rmail file to mailbox format.
* Rot13: Rmail Rot13.	     Reading messages encoded in the rot13 code.
@end menu

@node Rmail Scrolling
@section Scrolling Within a Message

  When Rmail displays a message that does not fit on the screen, it is
necessary to scroll through it.  This could be done with @kbd{C-v}, @kbd{M-v}
and @kbd{M-<}, but in Rmail scrolling is so frequent that it deserves to be
easier to type.

@table @kbd
@item @key{SPC}
Scroll forward (@code{scroll-up}).
@item @key{DEL}
Scroll backward (@code{scroll-down}).
@item .
Scroll to start of message (@code{rmail-beginning-of-message}).
@end table

@kindex SPC @r{(Rmail)}
@kindex DEL @r{(Rmail)}
  Since the most common thing to do while reading a message is to scroll
through it by screenfuls, Rmail makes @key{SPC} and @key{DEL} synonyms of
@kbd{C-v} (@code{scroll-up}) and @kbd{M-v} (@code{scroll-down})

@kindex . @r{(Rmail)}
@findex rmail-beginning-of-message
  The command @kbd{.} (@code{rmail-beginning-of-message}) scrolls back to the
beginning of the selected message.  This is not quite the same as @kbd{M-<}:
for one thing, it does not set the mark; for another, it resets the buffer
boundaries to the current message if you have changed them.

@node Rmail Motion
@section Moving Among Messages

  The most basic thing to do with a message is to read it.  The way to
do this in Rmail is to make the message current.  The usual practice is
to move sequentially through the file, since this is the order of
receipt of messages.  When you enter Rmail, you are positioned at the
first message that you have not yet made current (that is, the first one
that has the @samp{unseen} attribute; @pxref{Rmail Labels}).  Move
forward to see the other new messages; move backward to reexamine old
messages.

@table @kbd
@item n
Move to the next nondeleted message, skipping any intervening deleted @*
messages (@code{rmail-next-undeleted-message}).
@item p
Move to the previous nondeleted message @*
(@code{rmail-previous-undeleted-message}).
@item M-n
Move to the next message, including deleted messages
(@code{rmail-next-message}).
@item M-p
Move to the previous message, including deleted messages
(@code{rmail-previous-message}).
@item j
Move to the first message.  With argument @var{n}, move to
message number @var{n} (@code{rmail-show-message}).
@item >
Move to the last message (@code{rmail-last-message}).
@item <
Move to the first message (@code{rmail-first-message}).

@item M-s @var{regexp} @key{RET}
Move to the next message containing a match for @var{regexp}
(@code{rmail-search}).

@item - M-s @var{regexp} @key{RET}
Move to the previous message containing a match for @var{regexp}.
@end table

@kindex n @r{(Rmail)}
@kindex p @r{(Rmail)}
@kindex M-n @r{(Rmail)}
@kindex M-p @r{(Rmail)}
@findex rmail-next-undeleted-message
@findex rmail-previous-undeleted-message
@findex rmail-next-message
@findex rmail-previous-message
  @kbd{n} and @kbd{p} are the usual way of moving among messages in
Rmail.  They move through the messages sequentially, but skip over
deleted messages, which is usually what you want to do.  Their command
definitions are named @code{rmail-next-undeleted-message} and
@code{rmail-previous-undeleted-message}.  If you do not want to skip
deleted messages---for example, if you want to move to a message to
undelete it---use the variants @kbd{M-n} and @kbd{M-p}
(@code{rmail-next-message} and @code{rmail-previous-message}).  A
numeric argument to any of these commands serves as a repeat
count.@refill

  In Rmail, you can specify a numeric argument by typing just the
digits.  You don't need to type @kbd{C-u} first.

@kindex M-s @r{(Rmail)}
@findex rmail-search
  The @kbd{M-s} (@code{rmail-search}) command is Rmail's version of
search.  The usual incremental search command @kbd{C-s} works in Rmail,
but it searches only within the current message.  The purpose of
@kbd{M-s} is to search for another message.  It reads a regular
expression (@pxref{Regexps}) nonincrementally, then searches starting at
the beginning of the following message for a match.  The message
containing the match is selected.

  If @var{regexp} is empty, @kbd{M-s} reuses the regexp used the
previous time.

  To search backward in the file for another message, give @kbd{M-s} a
negative argument.  In Rmail you can do this with @kbd{- M-s}.

  It is also possible to search for a message based on labels.
@xref{Rmail Labels}.

@kindex j @r{(Rmail)}
@kindex > @r{(Rmail)}
@kindex < @r{(Rmail)}
@findex rmail-show-message
@findex rmail-last-message
@findex rmail-first-message
  To move to a message specified by absolute message number, use @kbd{j}
(@code{rmail-show-message}) with the message number as argument.  With
no argument, @kbd{j} selects the first message.  @kbd{>}
(@code{rmail-last-message}) selects the last message.  @kbd{<}
(@code{rmail-first-message}) selects the first message.

@node Rmail Deletion
@section Deleting Messages

@cindex deletion (Rmail)
  When you no longer need to keep a message, you can @dfn{delete} it.  This
flags it as ignorable, and some Rmail commands pretend it is no longer
present; but it still has its place in the Rmail file, and still has its
message number.

@cindex expunging (Rmail)
  @dfn{Expunging} the Rmail file actually removes the deleted messages.
The remaining messages are renumbered consecutively.  Expunging is the only
action that changes the message number of any message, except for
undigestifying (@pxref{Rmail Digest}).

@table @kbd
@item d
Delete the current message, and move to the next nondeleted message
(@code{rmail-delete-forward}).
@item C-d
Delete the current message, and move to the previous nondeleted
message (@code{rmail-delete-backward}).
@item u
Undelete the current message, or move back to a deleted message and
undelete it (@code{rmail-undelete-previous-message}).
@item x
Expunge the Rmail file (@code{rmail-expunge}).
@end table

@kindex d @r{(Rmail)}
@kindex C-d @r{(Rmail)}
@findex rmail-delete-forward
@findex rmail-delete-backward
  There are two Rmail commands for deleting messages.  Both delete the
current message and select another message.  @kbd{d} (@code{rmail-delete-forward})
moves to the following message, skipping messages already deleted, while
@kbd{C-d} (@code{rmail-delete-backward}) moves to the previous nondeleted message.
If there is no nondeleted message to move to in the specified direction,
the message that was just deleted remains current.

@cindex undeletion (Rmail)
@kindex x @r{(Rmail)}
@findex rmail-expunge
  To make all the deleted messages finally vanish from the Rmail file,
type @kbd{x} (@code{rmail-expunge}).  Until you do this, you can still
@dfn{undelete} the deleted messages.

@kindex u @r{(Rmail)}
@findex rmail-undelete-previous-message
  To undelete, type
@kbd{u} (@code{rmail-undelete-previous-message}), which is designed to cancel the
effect of a @kbd{d} command (usually).  It undeletes the current message
if the current message is deleted.  Otherwise it moves backward to previous
messages until a deleted message is found, and undeletes that message.

  You can usually undo a @kbd{d} with a @kbd{u} because the @kbd{u}
moves back to and undeletes the message that the @kbd{d} deleted.  But
this does not work when the @kbd{d} skips a few already-deleted messages
that follow the message being deleted; then the @kbd{u} command
undeletes the last of the messages that were skipped.  There is no clean
way to avoid this problem.  However, by repeating the @kbd{u} command,
you can eventually get back to the message that you intend to
undelete.  You can also select a particular deleted message with
@kbd{M-p} command, then type @kbd{u} to undelete it.

  A deleted message has the @samp{deleted} attribute, and as a result
@samp{deleted} appears in the mode line when the current message is
deleted.  In fact, deleting or undeleting a message is nothing more than
adding or removing this attribute.  @xref{Rmail Labels}.

@node Rmail Inbox
@section Rmail Files and Inboxes
@cindex inbox file

  Unix places incoming mail for you in a file that we call your
@dfn{inbox}.  When you start up Rmail, it copies the new messages from
your inbox into your primary mail file, an Rmail file, which also
contains other messages saved from previous Rmail sessions.  It is in
this file that you actually read the mail with Rmail.  This operation is
called @dfn{getting new mail}.  It can be repeated at any time using the
@kbd{g} key in Rmail.  The inbox file name is
@file{/usr/spool/mail/@var{username}} on some systems (typically
Berkeley-derived ones) and @file{/usr/mail/@var{username}} on other
systems.

  There are three reason for having separate Rmail files and inboxes.

@enumerate
@item
The inbox file format varies between operating systems and according to
the other mail software in use.  Only one part of Rmail needs to know
about the alternatives, and it need only understand how to convert all
of them to Rmail's own format.

@item
The inbox file format usually doesn't provide a place for all the
information that Rmail records.

@item
It is very cumbersome to access an inbox file without danger of losing
mail, because it is necessary to interlock with mail delivery.
Moreover, different operating systems use different interlocking
techniques.  The strategy of moving mail out of the inbox once and for
all into a separate Rmail file avoids the need for interlocking in all
the rest of Rmail, since only Rmail operates on the Rmail file.
@end enumerate

  When getting new mail, Rmail first copies the new mail from the inbox
file to the Rmail file; then it saves the Rmail file; then it truncates
the inbox file.  This way, a system crash may cause duplication of mail
between the inbox and the Rmail file, but cannot lose mail.

  Copying mail from an inbox in the system's mailer directory actually puts
it in an intermediate file @file{~/.newmail}.  This is because the
interlocking is done by a C program that copies to another file.
@file{~/.newmail} is deleted after mail merging is successful.  If there is
a crash at the wrong time, this file continues to exist and will be
used as an inbox the next time you get new mail.

@node Rmail Files
@section Multiple Mail Files

  Rmail operates by default on your @dfn{primary mail file}, which is named
@file{~/RMAIL} and receives your incoming mail from your system inbox file.
But you can also have other mail files and edit them with Rmail.  These
files can receive mail through their own inboxes, or you can move messages
into them with explicit Rmail commands (@pxref{Rmail Output}).

@table @kbd
@item i @var{file} @key{RET}
Read @var{file} into Emacs and run Rmail on it (@code{rmail-input}).

@item M-x set-rmail-inbox-list @key{RET} @var{files} @key{RET}
Specify inbox file names for current Rmail file to get mail from.

@item g
Merge new mail from current Rmail file's inboxes
(@code{rmail-get-new-mail}).

@item C-u g @var{file} @key{RET}
Merge new mail from inbox file @var{file}.
@end table

@kindex i @r{(Rmail)}
@findex rmail-input
  To run Rmail on a file other than your primary mail file, you may use
the @kbd{i} (@code{rmail-input}) command in Rmail.  This visits the
file, puts it in Rmail mode, and then gets new mail from the file's
inboxes if any.  The file should be in Rmail format.  You can use
@kbd{M-x rmail-input} even when not in Rmail.

  The file you read with @kbd{i} should usually be a valid Rmail file.
If it is not, then Rmail tries to decompose it into a stream of messages
in various known formats.  If it succeeds, it converts the whole file to
an Rmail file.

@findex set-rmail-inbox-list
  Each Rmail file can contain a list of inbox file names; you can specify
this list with @kbd{M-x set-rmail-inbox-list @key{RET} @var{files}
@key{RET}}.  The argument can contain any number of file names, separated
by commas.  It can also be empty, which specifies that this file should
have no inboxes.  Once a list of inboxes is specified, the Rmail file
remembers it permanently until it is explicitly changed.@refill

@kindex g @r{(Rmail)}
@findex rmail-get-new-mail
  If an Rmail file has inboxes, new mail is merged in from the inboxes
when the Rmail file is brought into Rmail, and when you use the @kbd{g}
(@code{rmail-get-new-mail}) command.  If the Rmail file specifies no
inboxes, then no new mail is merged in at these times.  As a special
exception, if your primary mail file does not specify any inbox files,
it uses the standard system inbox.

  To merge mail from a file that is not the usual inbox, give the
@kbd{g} key a numeric argument, as in @kbd{C-u g}.  Then it reads a file
name and merges mail from that file.  The inbox file is not deleted or
changed in any way when @kbd{g} with an argument is used.  This is,
therefore, a general way of merging one file of messages into another.

@node Rmail Output
@section Copying Messages Out to Files

@table @kbd
@item o @var{file} @key{RET}
Append a copy of the current message to the file @var{file}, writing it
in Rmail file format by default (@code{rmail-output-to-rmail-file}).

@item C-o @var{file} @key{RET}
Append a copy of the current message to the file @var{file},
writing it in Unix mail file format by default (@code{rmail-output}).
@end table

@kindex o @r{(Rmail)}
@findex rmail-output-to-rmail-file
@kindex C-o @r{(Rmail)}
@findex rmail-output
  If an Rmail file has no inboxes, the only way messages get into it is
by means of explicit @kbd{o} commands.

  @kbd{o} (@code{rmail-output-to-rmail-file}) appends the current message
in Rmail format to the end of the specified file.  This is the best command
to use to move messages between Rmail files.  If the other Rmail file is
currently visited, the copying is done into the other file's Emacs buffer
instead.  You should eventually save it on disk.

  The @kbd{C-o} (@code{rmail-output}) command in Rmail appends a copy of
the current message to a specified file, in inbox file format.  This
is useful for moving messages into files to be read by other mail
processors that do not understand Rmail format.

  The @kbd{o} and @kbd{C-o} commands are actually equivalent (aside from
having separate file name defaults) when you specify an existing file;
both commands check the file's contents to determine which format to use
(Rmail or inbox).  But it does matter which command you use when you
specify a nonexistent file; @kbd{o} starts it in Rmail format, while
@kbd{C-o} starts it in inbox format.

@vindex rmail-delete-after-output
  Copying a message with @kbd{o} or @kbd{C-o} gives the original copy of
the message the @samp{filed} attribute, so that @samp{filed} appears in
the mode line when such a message is current.  If you like to keep just
a single copy of every mail message, set the variable
@code{rmail-delete-after-output} to @code{t}; then the @kbd{o} and
@kbd{C-o} commands delete the original message after copying it.
(You can undelete the original afterward.)

  Copying messages in Unix format copies the header fields that are
displayed in Rmail at the time.  Thus, if you use the @kbd{t} command to
view the entire header and then copy the message, the entire header is
copied.

@vindex rmail-output-file-alist
  The variable @code{rmail-output-file-alist} lets you specify
intelligent defaults for the output file, based on the contents of the
current message.  The value should be a list whose elements have this
form:

@example
(@var{regexp} . @var{filename})
@end example

@noindent
If there's a match for @var{regexp} in the current message, then the
default file name for output is @var{filename}.  If multiple elements
match the message, the first matching element decides the default file
name.

@node Rmail Labels
@section Labels
@cindex label (Rmail)
@cindex attribute (Rmail)

  Each message can have various @dfn{labels} assigned to it as a means of
classification.  A label has a name; different names mean different labels.
Any given label is either present or absent on a particular message.  A few
label names have standard meanings and are given to messages automatically
by Rmail when appropriate; these special labels are called @dfn{attributes}.
All other labels are assigned only by users.

@table @kbd
@item a @var{label} @key{RET}
Assign the label @var{label} to the current message (@code{rmail-add-label}).
@item k @var{label} @key{RET}
Remove the label @var{label} from the current message (@code{rmail-kill-label}).
@item C-M-n @var{labels} @key{RET}
Move to the next message that has one of the labels @var{labels}
(@code{rmail-next-labeled-message}).
@item C-M-p @var{labels} @key{RET}
Move to the previous message that has one of the labels @var{labels}
(@code{rmail-previous-labeled-message}).
@item C-M-l @var{labels} @key{RET}
Make a summary of all messages containing any of the labels @var{labels}
(@code{rmail-summary-by-labels}).
@end table

@noindent
Specifying an empty string for one these commands means to use the last
label specified for any of these commands.

@kindex a @r{(Rmail)}
@kindex k @r{(Rmail)}
@findex rmail-add-label
@findex rmail-kill-label
  The @kbd{a} (@code{rmail-add-label}) and @kbd{k} (@code{rmail-kill-label}) commands allow
you to assign or remove any label on the current message.  If the @var{label}
argument is empty, it means to assign or remove the same label most
recently assigned or removed.

  Once you have given messages labels to classify them as you wish, there
are two ways to use the labels: in moving and in summaries.

@kindex C-M-n @r{(Rmail)}
@kindex C-M-p @r{(Rmail)}
@findex rmail-next-labeled-message
@findex rmail-previous-labeled-message
  The command @kbd{C-M-n @var{labels} @key{RET}}
(@code{rmail-next-labeled-message}) moves to the next message that has
one of the labels @var{labels}.  The argument @var{labels} specifies one
or more label names, separated by commas.  @kbd{C-M-p}
(@code{rmail-previous-labeled-message}) is similar, but moves backwards
to previous messages.  A preceding numeric argument to either one serves
as a repeat count.@refill

  The command @kbd{C-M-l @var{labels} @key{RET}}
(@code{rmail-summary-by-labels}) displays a summary containing only the
messages that have at least one of a specified set of messages.  The
argument @var{labels} is one or more label names, separated by commas.
@xref{Rmail Summary}, for information on summaries.@refill

  If the @var{labels} argument to @kbd{C-M-n}, @kbd{C-M-p} or @kbd{C-M-l} is empty, it means
to use the last set of labels specified for any of these commands.

  Some labels such as @samp{deleted} and @samp{filed} have built-in
meanings and are assigned to or removed from messages automatically at
appropriate times; these labels are called @dfn{attributes}.  Here is a
list of Rmail attributes:

@table @samp
@item unseen
Means the message has never been current.  Assigned to messages when
they come from an inbox file, and removed when a message is made
current.  When you start Rmail, it initially shows the first message
that has this attribute.
@item deleted
Means the message is deleted.  Assigned by deletion commands and
removed by undeletion commands (@pxref{Rmail Deletion}).
@item filed
Means the message has been copied to some other file.  Assigned by the
file output commands (@pxref{Rmail Files}).
@item answered
Means you have mailed an answer to the message.  Assigned by the @kbd{r}
command (@code{rmail-reply}).  @xref{Rmail Reply}.
@item forwarded
Means you have forwarded the message to other users.  Assigned by the
@kbd{f} command (@code{rmail-forward}).  @xref{Rmail Reply}.
@item edited
Means you have edited the text of the message within Rmail.
@xref{Rmail Editing}.
@item resent
Means you have resent the message to other users.  Assigned by the
command @kbd{M-x rmail-resend}.  @xref{Rmail Reply}.
@end table

  All other labels are assigned or removed only by the user, and have no
standard meaning.

@node Rmail Reply
@section Sending Replies

  Rmail has several commands that use Mail mode to send outgoing mail.
@xref{Sending Mail}, for information on using Mail mode.  What are
documented here are the special commands of Rmail for entering Mail mode.
Note that the usual keys for sending mail, @kbd{C-x m} and @kbd{C-x 4 m},
are available in Rmail mode and work just as they usually do.@refill

@table @kbd
@item m
Send a message (@code{rmail-mail}).
@item c
Continue editing already started outgoing message @*(@code{rmail-continue}).
@item r
Send a reply to the current Rmail message (@code{rmail-reply}).
@item f
Forward current message to other users (@code{rmail-forward}).
@item C-u f
Resend the current message to other users (@code{rmail-resend}).
@item M-m
Try sending a bounced message a second time (@code{rmail-retry-failure}).
@end table

@kindex r @r{(Rmail)}
@findex rmail-reply
@cindex reply to a message
  The most common reason to send a message while in Rmail is to reply to
the message you are reading.  To do this, type @kbd{r}
(@code{rmail-reply}).  This displays the @samp{*mail*} buffer in another
window, much like @kbd{C-x 4 m}, but preinitializes the @samp{Subject},
@samp{To}, @samp{CC} and @samp{In-reply-to} header fields based on the
message you are replying to.  The @samp{To} field is starts out as the
address of the person who sent the message you received, and the
@samp{CC} field starts out with all the other recipients of that
message.

@vindex rmail-dont-reply-to-names
  You can exclude certain recipients from being placed automatically in
the @samp{CC}, using the variable @code{rmail-dont-reply-to-names}.  Its
value should be a regular expression (as a string); any recipient that
the regular expression matches, is excluded from the @samp{CC} field.
The default value matches your own name, and any name starting with
@samp{info-}.  (Those names are excluded because there is a convention
of using them for large mailing lists to broadcast announcements.)

  To omit the @samp{CC} field completely for a particular reply, enter
the reply command with a prefix argument: @kbd{C-u r}.

  Once the @samp{*mail*} buffer has been initialized, editing and
sending the mail goes as usual (@pxref{Sending Mail}).  You can edit the
presupplied header fields if they are not right for you.  You can also
use the commands of Mail mode, including @kbd{C-c C-y} to yank in the
message that you are replying to, and @kbd{C-c C-q} to fill what was
thus yanked.  You can also switch to the Rmail buffer, select a
different message, switch back, and yank the new current message.

  Sometimes a message does not reach its destination.  Mailers usually
send the failed message back to you, enclosed in a @dfn{failure
message}.  The Rmail command @kbd{M-m} (@code{rmail-retry-failure})
prepares to send the same message a second time: it sets up a
@samp{*mail*} buffer with the same text and header fields as before.  If
you type @kbd{C-c C-c} right away, you send the message again exactly
the same as the first time.  Alternatively, you can edit the text or
headers and then send it.

@kindex f @r{(Rmail)}
@findex rmail-forward
@cindex forwarding a message
  Another frequent reason to send mail in Rmail is to @dfn{forward} the
current message to other users.  @kbd{f} (@code{rmail-forward}) makes
this easy by preinitializing the @samp{*mail*} buffer with the current
message as the text, and a subject designating a forwarded message.  All
you have to do is fill in the recipients and send.  When you forward a
message, recipients get a message which is ``from'' you, and which has
the original message in its contents.

@findex rmail-resend
  @dfn{Resending} is an alternative similar to forwarding; the
difference is that resending sends a message that is ``from'' the
original sender, just as it reached you---with a few added header fields
@samp{Resent-from} and @samp{Resent-to} to indicate that it came via
you.  To resend a message in Rmail, use @kbd{C-u f}.  (@kbd{f} runs
@code{rmail-forward}, which is programmed to invoke @code{rmail-resend}
if you provide a numeric argument.)

@kindex m @r{(Rmail)}
@findex rmail-mail
  The @kbd{m} (@code{rmail-mail}) command is used to start editing an
outgoing message that is not a reply.  It leaves the header fields empty.
Its only difference from @kbd{C-x 4 m} is that it makes the Rmail buffer
accessible for @kbd{C-c C-y}, just as @kbd{r} does.  Thus, @kbd{m} can be
used to reply to or forward a message; it can do anything @kbd{r} or @kbd{f}
can do.@refill

@kindex c @r{(Rmail)}
@findex rmail-continue
  The @kbd{c} (@code{rmail-continue}) command resumes editing the
@samp{*mail*} buffer, to finish editing an outgoing message you were
already composing, or to alter a message you have sent.@refill

@vindex rmail-mail-new-frame
  If you set the variable @code{rmail-mail-new-frame} to a
non-@code{nil} value, then all the Rmail commands to start sending a
message create a new frame to edit it in.  This frame is deleted when
you send the message, or when you use the @samp{Don't Send} item in the
@samp{Mail} menu.

@node Rmail Summary
@section Summaries
@cindex summary (Rmail)

  A @dfn{summary} is a buffer containing one line per message to give
you an overview of the mail in an Rmail file.  Each line shows the
message number, the sender, the labels, and the subject.  When the
summary buffer is selected, you can use almost all Rmail commands;
these apply to the message described by the current line of the
summary.  Moving point in the summary buffer selects messages as you
move to their summary lines.

  A summary buffer applies to a single Rmail file only; if you are
editing multiple Rmail files, each one has its own summary buffer (if
you have asked for one).  The summary buffer name is made by appending
@samp{-summary} to the Rmail buffer's name.  Normally only one summary
buffer is displayed at a time.

@menu
* Rmail Make Summary::  Making various sorts of summaries.
* Rmail Summary Edit::  Manipulating messages from the summary.
@end menu

@node Rmail Make Summary
@subsection Making Summaries

  Here are the commands to create a summary for the current Rmail file.
Once the Rmail file has a summary buffer, changes in the Rmail file
(such as deleting or expunging messages, and getting new mail)
automatically update the summary.

@table @kbd
@item h
@itemx C-M-h
Summarize all messages (@code{rmail-summary}).
@item l @var{labels} @key{RET}
@itemx C-M-l @var{labels} @key{RET}
Summarize message that have one or more of the specified labels
(@code{rmail-summary-by-labels}).
@item C-M-r @var{rcpts} @key{RET}
Summarize messages that have one or more of the specified recipients
(@code{rmail-summary-by-recipients}).
@item C-M-t @var{topic} @key{RET}
Summarize messages that have a match for the specified regexp
@var{topic} in their subjects (@code{rmail-summary-by-topic}).
@end table

@kindex h @r{(Rmail)}
@findex rmail-summary
  The @kbd{h} or @kbd{C-M-h} (@code{rmail-summary}) command fills the summary buffer
for the current Rmail file with a summary of all the messages in the file.
It then displays and selects the summary buffer in another window.

@kindex l @r{(Rmail)}
@kindex C-M-l @r{(Rmail)}
@findex rmail-summary-by-labels
  @kbd{C-M-l @var{labels} @key{RET}} (@code{rmail-summary-by-labels}) makes
a partial summary mentioning only the messages that have one or more of the
labels @var{labels}.  @var{labels} should contain label names separated by
commas.@refill

@kindex C-M-r @r{(Rmail)}
@findex rmail-summary-by-recipients
  @kbd{C-M-r @var{rcpts} @key{RET}} (@code{rmail-summary-by-recipients})
makes a partial summary mentioning only the messages that have one or more
of the recipients @var{rcpts}.  @var{rcpts} should contain mailing
addresses separated by commas.@refill

@kindex C-M-t @r{(Rmail)}
@findex rmail-summary-by-topic
  @kbd{C-M-t @var{topic} @key{RET}} (@code{rmail-summary-by-topic})
makes a partial summary mentioning only the messages whose subjects have
a match for the regular expression @var{topic}.

  Note that there is only one summary buffer for any Rmail file; making one
kind of summary discards any previously made summary.

@node Rmail Summary Edit
@subsection Editing in Summaries

  You can use the Rmail summary buffer to do almost anything you can do
in the Rmail buffer itself.  In fact, once you have a summary buffer,
there's no need to switch back to the Rmail buffer.

  You can select and display various messages in the Rmail buffer, from
the summary buffer, just by moving point in the summary buffer to
different lines.  It doesn't matter what Emacs command you use to move
point; whichever line point is on at the end of the command, that
message is selected in the Rmail buffer.

  Almost all Rmail commands work in the summary buffer as well as in the
Rmail buffer.  Thus, @kbd{d} in the summary buffer deletes the current
message, @kbd{u} undeletes, and @kbd{x} expunges.  @kbd{o} and @kbd{C-o}
output the current message to a file; @kbd{r} starts a reply to it.  You
can scroll the current message while remaining in the summary buffer
using @key{SPC} and @key{DEL}.

  The Rmail commands to move between messages also work in the summary
buffer, but with a twist: they move through the set of messages included
in the summary.  They also redisplay the Rmail buffer on the screen
(unlike cursor motion commands, which update the contents of the Rmail
buffer but don't display it in a window unless it already appears).
Here is a list of these commands:

@table @kbd
@item n
Move to next line, skipping lines saying `deleted', and select its
message.
@item p
Move to previous line, skipping lines saying `deleted', and select
its message.
@item M-n
Move to next line and select its message.
@item M-p
Move to previous line and select its message.
@item >
Move to the last line, and select its message.
@item <
Move to the first line, and select its message.
@item M-s @var{pattern} @key{RET}
Search through messages for @var{pattern} starting with the current
message; select the message found, and move point in the summary buffer
to that message's line.
@end table

@vindex rmail-redisplay-summary
  Deletion, undeletion, and getting new mail, and even selection of a
different message all update the summary buffer when you do them in the
Rmail buffer.  If the variable @code{rmail-redisplay-summary} is
non-@code{nil}, these actions also bring the summary buffer back onto
the screen.

@kindex w @r{(Rmail summary)}
@findex rmail-summary-wipe
@kindex q @r{(Rmail summary)}
@findex rmail-summary-quit
  When you are finished using the summary, type @kbd{w}
(@code{rmail-summary-wipe}) to kill the summary buffer's window.  You
can also exit Rmail while in the summary.  @kbd{q}
(@code{rmail-summary-quit}) kills the summary window, then saves the
Rmail file and switches to another buffer.

@node Rmail Editing
@section Editing Within a Message

  Rmail mode provides a few special commands for moving within and editing
the current message.  In addition, the usual Emacs commands are available
(except for a few, such as @kbd{C-M-n} and @kbd{C-M-h}, that are redefined by Rmail for
other purposes).  However, the Rmail buffer is normally read-only, and to
alter it you must use the Rmail command @kbd{e} described below.

@table @kbd
@item t
Toggle display of original headers (@code{rmail-toggle-headers}).
@item e
Edit current message (@code{rmail-edit-current-message}).
@end table

@kindex t @r{(Rmail)}
@findex rmail-toggle-header
@vindex rmail-ignored-headers
  Rmail reformats the header of each message before displaying it.
Normally this involves deleting most header fields, on the grounds that
they are not interesting.  The variable @code{rmail-ignored-headers}
specifies a regexp that matches the header fields to discard in this
way.  The original headers are saved permanently, and to see what they
look like, use the @kbd{t} command (@code{rmail-toggle-headers}).  This
discards the reformatted headers of the current message and displays it
with the original headers.  Repeating @kbd{t} reformats the message
again.  Selecting the message again also reformats.

@kindex e @r{(Rmail)}
@findex rmail-edit-current-message
  The Rmail buffer is normally read only, and most of the characters you
would type to modify it (including most letters) are redefined as Rmail
commands.  This is usually not a problem since it is rare to want to change
the text of a message.  When you do want to do this, the way is to type
@kbd{e} (@code{rmail-edit-current-message}), which changes from Rmail mode into
Rmail Edit mode, another major mode which is nearly the same as Text mode.
The mode line indicates this change.

  In Rmail Edit mode, letters insert themselves as usual and the Rmail
commands are not available.  When you are finished editing the message and
are ready to go back to Rmail, type @kbd{C-c C-c}, which switches back to
Rmail mode.  Alternatively, you can return to Rmail mode but cancel all the
editing that you have done by typing @kbd{C-c C-]}.

@vindex rmail-edit-mode-hook
  Entering Rmail Edit mode runs the hook @code{text-mode-hook}; then it
runs the hook @code{rmail-edit-mode-hook} (@pxref{Hooks}).  It adds the
attribute @samp{edited} to the message.

@node Rmail Digest
@section Digest Messages
@cindex digest message
@cindex undigestify

  A @dfn{digest message} is a message which exists to contain and carry
several other messages.  Digests are used on some moderated mailing
lists; all the messages that arrive for the list during a period of time
such as one day are put inside a single digest which is then sent to the
subscribers.  Transmitting the single digest uses much less computer
time than transmitting the individual messages even though the total
size is the same, because the per-message overhead in network mail
transmission is considerable.

@findex undigestify-rmail-message
  When you receive a digest message, the most convenient way to read it is
to @dfn{undigestify} it: to turn it back into many individual messages.
Then you can read and delete the individual messages as it suits you.

  To do this, type @kbd{M-x undigestify-rmail-message} after selecting
the digest message.  This extracts the submessages as separate Rmail
messages, and inserts them following the digest.  The digest message
itself is flagged as deleted.

@node Out of Rmail
@section Converting an Rmail File to Mailbox Format

  The command @kbd{M-x unrmail} converts a file in Rmail format
to ordinary system mailbox format, so that you can use it with
other mail-editing tools.  You must specify two arguments, the name
of the Rmail file and the name to use for the converted file.
@kbd{M-x unrmail} does not alter the Rmail file itself.

@node Rmail Rot13
@section Reading Rot13 Messages
@cindex rot13 code

  Mailing list messages that might offend some readers are sometimes
encoded in a simple code called @dfn{rot13}---so named because it
rotates the alphabet by 13 letters.  This code is not for secrecy, as it
provides none; rather, it enables those who might be offended to avoid
ever seeing the real text of the message.

@findex rot13-other-window
  To view a buffer using the rot13 code, use the command @kbd{M-x
rot13-other-window}.  This displays the current buffer in another window
which applies the code when displaying the text.
