@c This is part of the Emacs manual.
@c Copyright (C) 1985, 1986, 1987, 1993 Free Software Foundation, Inc.
@c See file emacs.texi for copying conditions.
@node Frames, Major Modes, Windows, Top
@chapter Frames and X Windows
@cindex frames

  When using the X Window System, you can create multiple windows at the
X level in a single Emacs session.  Each X window that belongs to Emacs
displays a @dfn{frame} which can contain one or several Emacs windows.
A frame initially contains a single general-purpose Emacs window which
you can subdivide vertically or horizontally into smaller windows.  A
frame normally contains its own echo area and minibuffer, but you can
make frames that don't have these---they use the echo area and
minibuffer of another frame.

  Anything you do in one frame also affects the other frames.  For
instance, if you put text in the kill ring in one frame, you can yank it
in another frame.  If you exit emacs through @kbd{C-x C-c} in one frame,
it terminates all the frames.  To delete just one frame, use @kbd{C-x 5
0}.

  To avoid confusion, we reserve the word ``window'' for the
subdivisions that Emacs implements, and never use it to refer to a
frame.

@menu
* Mouse Commands::     Moving, cutting, and pasting, with the mouse.
* Secondary Selection::Cutting without altering point and mark.
* Creating Frames::    Creating additional Emacs frames with various contents.
* Frame Parameters::   Changing the colors and other modes of frames.
* Scroll Bars::        How to enable and disable scroll bars; how to use them.
* Menu Bars::          Enabling and disabling the menu bar.
* Faces::              How to change the display style using faces.
* Modifying Faces::    How to change what a particular face looks like.
* Misc X::             Iconifying and deleting frames.  Region highlighting.
@end menu

@node Mouse Commands
@section Mouse Commands
@cindex mouse buttons (what they do)

@findex mouse-set-region
@findex mouse-set-point
@findex mouse-yank-at-click
@findex mouse-save-then-click
@kindex MOUSE
@table @kbd
@item mouse-1
Move point to where you click (@code{mouse-set-point}).
This is normally the left button.

@item drag-mouse-1
Set the region to the text you select by dragging, and copy it to the
kill ring (@code{mouse-set-region}). Thus, you can specify both ends of
the region.

If you move the mouse off the top or bottom of the window while
dragging, the window scrolls at a steady rate until you move the mouse
back into the window.  This way, you can mark regions that don't fit
entirely on the screen.

@item mouse-2
Yank the last killed text, where you click (@code{mouse-yank-at-click}).
This is normally the middle button.

@item mouse-3
This command, @code{mouse-save-then-kill}, has several functions
depending on where you click and the status of the region.

If you have a highlighted region, or if the region was set just before
by dragging button 1, @code{mouse-save-then-kill} adjusts the nearer
end of the region by moving it to where you click.  The adjusted
region's text also replaces the old region's text in the kill ring.

Otherwise, @code{mouse-save-then-kill} sets mark where you click,
without changing point.  It copies the new region to the kill ring.

If you originally specified the region using a double or triple
@key{Mouse-1}, so that the region is defined to consist of entire words
or lines, then adjusting the region also proceeds by entire words or
lines.

If you use @code{mouse-save-then-kill} twice in a row at the same place,
that kills the region already selected.

@item double-mouse-1
This key sets the region around the word which you click on.

@item double-drag-mouse-1
This key selects a region made up of the words that you drag across.

@item triple-mouse-1
This key sets the region around the line which you click on.

@item triple-drag-mouse-1
This key selects a region made up of the lines that you drag across.
@end table

The simplest way to kill some text is to press @key{Mouse-1} at one end,
then press @key{Mouse-3} twice at the other end.  @xref{Killing}.  To
copy the text into the kill ring without deleting it from the buffer,
press @key{Mouse-3} just once---or just drag across the text with
@key{Mouse-1}.  Then you can copy it elsewhere by yanking it.

To yank the killed or copied text somewhere else, move the mouse there
and press @key{Mouse-2}.  @xref{Yanking}.

The mouse commands for selecting a region are mostly compatible with the
@code{xterm} program.

@cindex cutting and X
@cindex pasting and X
@cindex X cutting and pasting
@cindex X pasting and cutting
To copy text to another X window, kill it or save it in the kill ring.
Under X, this also sets the @dfn{primary selection}.  Then use the
``paste'' or ``yank'' command of the program operating the other window
to insert the text from the selection.

  To copy text from another X window, use the ``cut'' or ``copy'' command
of the program operating the other window, to select the text you want.
Then yank it in Emacs with @kbd{C-y} or @key{Mouse-2}.

@cindex primary selection
@cindex cut buffer
@cindex selection, primary
  When Emacs puts text into the kill ring, or rotates text to the front
of the kill ring, it sets the @dfn{primary selection} in the X server.
This is how other X clients can access the text.  Emacs also stores the
text in the cut buffer, if the text is short enough
(@code{x-cut-buffer-max} specifies the maximum number of characters);
putting long strings in the cut buffer can be slow.

  When you yank in Emacs, Emacs checks for a primary selection in
another program; after that, it checks for text in the cut buffer.  

@node Secondary Selection
@section Secondary Selection
@cindex secondary selection

  The @dfn{secondary selection} is another way of selecting text using
X.  It does not use point or the mark, so you can use it to kill text
without setting point or the mark.

@table @kbd
@findex mouse-set-secondary
@kindex drag-M-mouse-1
@item drag-M-mouse-1
Set the secondary selection, with one end at the place where you press
down the button, and the other end at the place where you release it
(@code{mouse-set-secondary}).  In Transient Mark mode, highlighting
appears and changes as you drag.

If you move the mouse off the top or bottom of the window while
dragging, the window scrolls at a steady rate until you move the mouse
back into the window.  This way, you can mark regions that don't fit
entirely on the screen.

@findex mouse-start-secondary
@kindex M-mouse-1
@item M-mouse-1
Set one endpoint for the @dfn{secondary selection}
(@code{mouse-start-secondary}).

@findex mouse-secondary-save-then-kill
@kindex M-mouse-3
@item M-mouse-3
Make a secondary selection, using the place specified with @kbd{M-mouse-1}
as the other end (@code{mouse-secondary-save-then-kill}).  A second click
at the same place kills the secondary selection just made.

@findex mouse-kill-secondary
@kindex M-mouse-2
@item M-mouse-2
Kill the secondary selection (@code{mouse-kill-secondary}).
@end table

Double or triple clicking of @kbd{M-@key{Mouse-1}} operates on words and
lines, much like @key{Mouse-1}.

@node Creating Frames
@section Creating Frames
@cindex creating frames

@kindex C-x 5
  The prefix key @kbd{C-x 5} is analogous to @kbd{C-x 4}, with parallel
subcommands.  The difference is that @kbd{C-x 5} commands create a new
frame rather than just a new window in the selected frame.  (@xref{Pop
Up Window}.)  Different @kbd{C-x 5} commands have different ways of
finding the buffer to select.

@table @kbd
@item C-x 5 b @var{bufname} @key{RET}
Select buffer @var{bufname} in another window.  This runs @*
@code{switch-to-buffer-other-frame}.
@item C-x 5 f @var{filename} @key{RET}
Visit file @var{filename} and select its buffer in another frame.  This
runs @code{find-file-other-frame}.  @xref{Visiting}.
@item C-x 5 d @var{directory} @key{RET}
Select a Dired buffer for directory @var{directory} in another frame.
This runs @code{dired-other-frame}.  @xref{Dired}.
@item C-x 5 m
Start composing a mail message in another frame.  This runs
@code{mail-other-frame}, and its same-frame version is @kbd{C-x m}.
@xref{Sending Mail}.
@item C-x 5 .
Find a tag in the current tag table in another frame.  This runs
@code{find-tag-other-frame}, the multiple-frame variant of @kbd{M-.}.
@xref{Tags}.
@item C-x 5 r @var{filename} @key{RET}
Visit file @var{filename} read-only, and select its buffer in another
frame.  This runs @code{find-file-read-only-other-frame}.
@xref{Visiting}.
@end table

@node Frame Parameters
@section Setting Frame Parameters
@cindex colors
@cindex Auto-Raise mode
@cindex Auto-Lower mode

  This section describes commands for altering the display style and
window management behavior of the selected frame.

@findex set-foreground-color
@findex set-background-color
@findex set-cursor-color
@findex set-mouse-color
@findex set-border-color
@findex auto-raise-mode
@findex auto-lower-mode
@table @kbd
@item M-x set-foreground-color @key{RET} @var{color} @key{RET}
Specify color @var{color} for the foreground of the selected frame.

@item M-x set-background-color @key{RET} @var{color} @key{RET}
Specify color @var{color} for the background of the selected frame.

@item M-x set-cursor-color @key{RET} @var{color} @key{RET}
Specify color @var{color} for the cursor of the selected frame.

@item M-x set-mouse-color @key{RET} @var{color} @key{RET}
Specify color @var{color} for the mouse cursor when it is over the
selected frame.

@item M-x set-border-color @key{RET} @var{color} @key{RET}
Specify color @var{color} for the border of the selected frame.

@item M-x auto-raise-mode
Toggle whether or not the selected frame should auto-raise.
Auto-raise means that every time you move the mouse onto the frame,
it raises the frame.

@item M-x auto-lower-mode
Toggle whether or not the selected frame should auto-lower.
Auto-lower means that every time you move the mouse off of the frame,
the frame moves to the bottom of the stack of X windows.

@findex set-default-font
@item M-x set-default-font @key{RET} @var{font} @key{RET}
Specify font @var{font} as the default for the selected frame. 
@xref{Font X}, for ways to list the available fonts on your system.

You can also set a frame's default font through a pop-up menu.
Press @kbd{C-@key{Mouse-3}} to activate this menu.
@end table

@node Scroll Bars
@section Scroll Bars
@cindex Scroll Bar mode
@cindex mode, Scroll Bar

  When using X, Emacs normally makes a @dfn{scroll bar} at the right of
each Emacs window.  The scroll bar runs the height of the window, and
shows a moving rectangular inner box which represents the portion of the
buffer currently displayed.  The entire height of the scroll bar
represents the entire length of the buffer.

  You can use @key{Mouse-2} (normally, the middle button) in the scroll
bar to move or drag the inner box up and down.  If you move it to the
top of the scroll bar, you see the top of the buffer.  If you move it to
the bottom of the scroll bar, you see the bottom of the buffer.

  The left and right buttons in the scroll bar scroll by controlled
increments.  @key{Mouse-1} (normally, the left button) moves the line at
the level where you click up to the top of the window.  @key{Mouse-3}
(normally, the right button) moves the line at the top of the window
down to the level where you click.  By clicking repeatedly in the same
place, you can scroll by the same distance over and over.

@findex scroll-bar-mode
  You can enable or disable Scroll Bar mode with the command @kbd{M-x
scroll-bar-mode}.  With no argument, it toggles the use of scroll bars.
With an argument, it turns use of scroll bars on if and only if the
argument is positive.  This command applies to all frames, including
frames yet to be created.

@findex toggle-scroll-bar
  To enable or disable scroll bars for just the selected frame, use the
@kbd{M-x toggle-scroll-bar} command.

@node Menu Bars
@section Menu Bars
@cindex Menu Bar mode
@cindex mode, Menu Bar

  By default, each Emacs frame has a menu bar at the top which you can
use to perform certain common operations.  There's no need to describe
them in detail here, as you can more easily see for yourself; also,
we may change them and add to them in subsequent Emacs versions.

  Each of the operations in the menu bar is bound to an ordinary Emacs
command which you can invoke equally well with @kbd{M-x} or with its own
key bindings.  To see the command's name and documentation, type
@kbd{C-h k} and then select the menu bar item you are interested in.

  You can turn display of menu bars on or off with @kbd{M-x menu-bar-mode}.
With no argument, this command toggles Menu Bar mode, a minor mode.
With an argument, the command turns Menu Bar mode on if the argument
is positive, off if the argument is not positive.

@node Faces
@section Using Multiple Typefaces
@cindex faces

  When using Emacs with X, you can set up multiple styles of displaying
characters.  The aspects of style that you can control are the type
font, the foreground color, the background color, and whether to
underline.

  The way you control display style is by defining named @dfn{faces}.
Each face can specify a type font, a foreground color, a background
color, and an underline flag; but it does not have to specify all of
them.

  The style of display used for a given character in the text is
determined by combining several faces.  Which faces to use is always set
up by Lisp programs, at present, by means of text properties and
overlays.  Any aspect of the display style that isn't specified by
overlays or text properties comes from the frame itself.

@findex list-faces-display
  To see what faces are currently defined, and what they look like, type
@kbd{M-x list-faces-display}.  It's possible for a given face to look
different in different frames; this command shows the appearance in the
frame in which you type it.

@cindex @code{region} face
@cindex region highlighting
  When Transient Mark mode is enabled, the text of the region is
highlighted when the mark is active.  This uses a face named
@code{region}; you can control the style of highlighting by changing the
style of this face with the commands below.  @xref{Setting Mark}, for
more information about Transient Mark mode and activation and
deactivation of the mark.

  One easy way to use faces is to turn on Font-Lock mode.
This minor mode, which is always local to a particular buffer, arranges
to choose faces according to the syntax of the text you are editing.
It can recognize comments and strings in any major mode; for several
major modes, it can also recognize and properly highlight various other
important parts of the text.  To get the full benefit of Font-Lock mode,
you need to choose a default font which has bold, italic, and bold-italic
variants.

@node Modifying Faces
@section Modifying Faces

  Here are the commands for users to change the font of a face.

@cindex bold font
@cindex italic font
@cindex fonts and faces
@findex set-face-font
@findex make-face-bold
@findex make-face-italic
@findex make-face-bold-italic
@findex make-face-unbold
@findex make-face-unitalic
@table @kbd
@item M-x set-face-font @key{RET} @var{face} @key{RET} @var{font} @key{RET}
Use font @var{font} in face @var{face}.

@item M-x make-face-bold @key{RET} @var{face} @key{RET}
Convert face @var{face} to use a bold version of its current font.

@item M-x make-face-italic @key{RET} @var{face} @key{RET}
Convert face @var{face} to use a italic version of its current font.

@item M-x make-face-bold-italic @key{RET} @var{face} @key{RET}
Convert face @var{face} to use a bold-italic version of its current font.

@item M-x make-face-unbold @key{RET} @var{face} @key{RET}
Convert face @var{face} to use a non-bold version of its current font.

@item M-x make-face-unitalic @key{RET} @var{face} @key{RET}
Convert face @var{face} to use a non-italic version of its current font.
@end table

  Here are the commands for users to set the colors and underline flag
of a face:

@cindex underlining and faces
@cindex inverse video and faces
@cindex colors and faces
@findex set-face-foreground
@findex set-face-background
@findex set-face-underline-p
@findex invert-face
@table @kbd
@item M-x set-face-foreground @key{RET} @var{face} @key{RET} @var{color} @key{RET}
Use color @var{color} for the foreground of characters in face @var{face}.

@item M-x set-face-background @key{RET} @var{face} @key{RET} @var{color} @key{RET}
Use color @var{color} for the background of characters in face @var{face}.

@item M-x set-face-underline-p @key{RET} @var{face} @key{RET} @var{flag} @key{RET}
Specify whether to underline characters in face @var{face}.

@item M-x invert-face @key{RET} @var{face} @key{RET}
Swap the foreground and background colors of face @var{face}.
@end table

@node Misc X
@section Miscellaneous X Window Features

The following commands do user-level mangement of frames under a window
system:

@table @kbd
@item C-z
@kindex C-z
@findex iconify-or-deiconify-frame
To iconify the selected Emacs frame, type @kbd{C-z}
(@code{iconify-or-deiconify-frame}).  The normal meaning of @kbd{C-z},
to suspend Emacs, is not useful under a window system, so it has a
different binding in that case.

If you type this command on an Emacs icon, it deiconifies the frame.

@item C-x 5 0
@kindex C-x 5 0
@findex delete-frame
To delete the selected frame, type @kbd{C-x 5 0} (@code{delete-frame}).
If there is more than one frame in this invocation of Emacs, the current
frame is deleted.

@item M-x transient-mark-mode
Under X Windows, when Transient Mark mode is enabled, Emacs highlights
the region when the mark is active.  This is the main motive for using
Transient Mark mode.  To toggle the state of this mode, use the command
@kbd{M-x transient-mark-mode}.  @xref{Mark}.
@end table
