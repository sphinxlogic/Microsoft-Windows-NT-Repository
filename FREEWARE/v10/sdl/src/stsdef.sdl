{
{****************************************************************************
{*									    *
{*  Copyright (c) 1980, 1981		                                    *
{*  by DIGITAL Equipment Corporation, Maynard, Mass.			    *
{* 									    *
{*  This software is furnished under a license and may be used and  copied  *
{*  only  in  accordance  with  the  terms  of  such  license and with the  *
{*  inclusion of the above copyright notice.  This software or  any  other  *
{*  copies  thereof may not be provided or otherwise made available to any  *
{*  other person.  No title to and ownership of  the  software  is  hereby  *
{*  transferred.							    *
{* 									    *
{*  The information in this software is subject to change  without  notice  *
{*  and  should  not  be  construed  as  a commitment by DIGITAL Equipment  *
{*  Corporation.							    *
{* 									    *
{*  DIGITAL assumes no responsibility for the use or  reliability  of  its  *
{*  software on equipment which is not supplied by DIGITAL.		    *
{*									    *
{****************************************************************************
{++
{ facility:
{
{	SDL (Structure Definition Language)
{
{ abstract:
{
{	structure definition for status return codes and severity bits
{
{ author:
{	c.t. pacy
{ date:
{	revised 22-DEC-1981	ctp
{--


module $stsdef;

	aggregate $cond_value union prefix sts$;
		"value" longword;
		success bitfield mask;
		status2 structure;
			severity bitfield length 3 mask;
		 	cond_id bitfield length 25 mask;
		 	inhib_msg bitfield mask;
			cntrl bitfield length 3;
			end;
		status3 structure;
			status_fill3a bitfield length 3;
			msg_no bitfield length 13 mask;
	   		fac_no bitfield length 12 mask;
			status_fill3b bitfield length 4;
			end;
		status4 structure;
			status_fill4a bitfield length 3;
			code bitfield length 12;
			fac_sp bitfield mask;
			status_fill4 bitfield length 11;
			cust_def bitfield mask;
			status_fill4b bitfield length 4;
			end ;
		end ;


constant (warning,
	success,
	error,
	info,
	severe) equals 0 increment 1 prefix sts$;

end_module;
