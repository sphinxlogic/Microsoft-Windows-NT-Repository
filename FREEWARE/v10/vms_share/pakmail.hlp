! Version 2.0
!     -- Andy Harper, Kings College London, UK
!     -- January 1993
1 PAKMAIL

Sends a series of files produced by VMS_SHARE across the E-mail
system to a specified set of recipients. 

Format:
     $ PAKMAIL recipient filespec parts [part-list] [comment]

2 Author

This software was written by, and is the copyright (C) of:

Andy Harper
Kings College London
England

2 Examples

     $ PAKMAIL FRED [.TEST]PACKAGE 25
          Send all 25 parts of a VMS_SHARE created series of files
          that comprise the package "PACKAGE". Files have a generic
          prefix of "[.TEST]PACKAGE" and  each will have its TYPE
          suffixed by the VMS_SHARE convention of 'nn'-OF-25

     $ PAKMAIL FRED [.TEST]PACKAGE 25 5,9
          As above, but just send parts 5 and 9.


     $ PAKMAIL FRED [.TEST]PACKAGE 25 5,9 "Demonstration only"
          As above, but just send parts 5 and 9, and add the
          comment "Demonstration only" into the subject field
          of each message.


2 Filespec

The directory and fixed constant part of the files containing the
VMS_SHARE'd package. The part number is appended to the TYPE part
of the name. 

For instance, the name "[.TEST]BURBLE.SHAR" refers to the files:

     [.TEST]BURBLE.SHAR_nn-OF-mm

'nn' being the part number and 'mm' being the total number of parts

2 Comment

This parameter is optional. If specified, it defines a comment
string to be inserted into the subject header of the generated
mail message.

For example, without this parameter, the subject: header looks
like this: 
   Subject:   VMS_SHARE.1-OF-4

With it set to the string "(Version 8.2)", the subject:
header line looks like this: 
   Subject:   VMS_SHARE.1-OF-4 (Version 8.2)

2 Partlist

This parameter is optional. If specified, it should be a comma
separated list of parts. Only the parts listed will be sent.

If not specified, all parts will be sent.

2 Parts

This parameter is required. It defines the total number of parts
making up the share file to be sent.

2 Recipient

The mail address of the recipient. This may be anything which can
be used on the MAIL command line. Because of the way MAIL parses
addresses and the way DCL treats @ symbols, care is needed when
specifying addresses which are distribution lists (usually
prefixed by @) or which contain double quotes. 

3 Distribution_Lists

Use of distribution lists directly on the MAIl command line does
not work as DCL gets at the '@' symbol before MAIL does!  It must
be done by pointing a logical name at the distribution list,
including the '@' and then using the logical name as the
recipient. 

For instance, to simulate:

   $ PAKMAIL @FRIENDS   ....

Do:

   $ DEFINE FRIENDS "@FRIENDS.DIS"
   $ CREATE FRIENDS.DIS
   ..... insert friends here
   ^Z
   $ PAKMAIL FRIENDS .....

3 Quoted_usernames

Usernames must be specified in exactly the same form as they
would be used on the MAIL command line, as in: 

   $ MAIL MESSAGE.TXT NET%"""FRED@MIT"""

This is important only when addresses containing double quotes
are used; essentially, individual quotes are doubled and a new
set placed around the lot. 

For instance, to simulate:

   $ PAKMAIL  EARN%"FRED@CARNEGIE"

Do:
   $ PAKMAIL  EARN%"""FRED@CARNEGIE"""

Alternatively, define a logical name that contains the original
form of address: 

   $ DEFINE BROTHER EARN%"""FRED@CARNEGIE"""
   $ PAKMAIL BROTHER   ...

2 VMS_SHARE

VMS_SHARE packages a series of files into the special format. See
the help on that utility for specific information. 
