This is a short note explaining how to use JED with a color terminal.  This
only applies to Unix and VMS spplies to Unix and VMS systems.  This is
particularly relavant if you want to exploit JED's ability to do color
syntax highlighting on a character based terminal.

To use JED with a color terminal, it is necessary that the terminal
understand ANSI color escape sequences.  If so, then it is possble to set
up JED to use different foreground and background colors for the modeline,
region highlighting, syntax highlighting, etc...

To turn on ANSI color support, set the variable `USE_ANSI_COLORS' to a
non-zero value.  If set to zero, the support is turned off. The colors may
be specified using the set_color function as illustrated in jed.rc.  They
only become active if USE_ANSI_COLORS is non-zero.

Unfortunately, few termcaps provide information regarding whether the
terminal is a color one or not. To interactively set USE_ANSI_COLORS, simply
press `Ctrl-X ESC' and enter

     USE_ANSI_COLORS = 1
     
at the `S-Lang>' prompt.  Alternatively, you might want to put something like:

   USE_ANSI_COLORS = int(getenv ("JED_COLOR"));
   
in your jed.rc that would set this variable to the value of an environment
variable JED_COLOR.  Such an environment variable would be initialized when
you login to the system.  Finally, you could simply put:

  define term_use_colors () { USE_ANSI_COLORS = 1; }
  
in your jed.rc (.jedrc) and define (alias) jed to be:

  alias colorjed 'jed -f term_use_colors'

*Note, if you use MS-Kermit as a terminal emulator, you will need to tell it
 what foreground/background colors you want via the `set term color'
 function.  For example, if you choose back on white as the `normal' color,
 put `set term color 30 47' in your MSKermit.ini file.

  

