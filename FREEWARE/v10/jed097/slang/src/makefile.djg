# DJGPP makefile

# define FLOAT_TYPE below if you want floating point support.  This 
#  might require a floating point processor.  Consult the DJGPP 
#  documentation for more details.  In particluar, the calc.c demo
#  program requires it.

CFLAGS1 = -O -Wall #-DFLOAT_TYPE
CFLAGS = $(CFLAGS1) -DHAS_MEMSET -DHAS_MEMCPY -DHAS_MEMCMP

CC =gcc
GO32 = C:\djgpp\bin\go32.exe

OBJS = slang.o slparse.o slmath.o slfile.o slstd.o slarray.o slregexp.o\
 slunix.o slmatrix.o slkeymap.o slrline.o slerr.o sldostty.o slgetkey.o\
 slmemcpy.o slmemcmp.o slmemset.o slmemchr.o slxstrng.o sltoken.o\
 slsearch.o slvideo.o slsmg.o slmalloc.o slclass.o

EXEC = calc
RANLIB = ranlib

SUFFIXES = .c
.SUFFIXES: $(SUFFIXES)

.c.o:
	$(CC) -c $(CFLAGS) $*.c

libslang.a: ${OBJS}
	rm libslang.a
	ar -cr libslang.a @sldjgpp.rsp
	$(RANLIB) libslang.a

calc: calc.o libslang.a
	$(CC) $(CFLAGS) calc.o -L. libslang.a -lm -o $(EXEC).386
	coff2exe -s $(GO32) $(EXEC).386

worm.o: worm.c
	$(CC) -c $(CFLAGS) -DSLANG worm.c

worm: worm.o libslang.a
	$(CC) $(CFLAGS) worm.o -L. libslang.a -lpc -lm -o worm.386
	coff2exe -s $(GO32) worm.386


export:
	export -f slang.lis
