	----- S-Lang README file and installation instructions ------

The files in this distribution include:

  README        This file.  Installation instructions.
  COPYING       Explanation of Copyright
  COPYRIGHT     Copyright

Application specific files: (example is a programmable calculator)

  calc.c	main program for calculator
  calc.sl	sample S-Lang file loaded by calc.
  makefile.*	makefile for S-Lang library and calculator
  VMSmake.com   VMS 'makefile' 

Documentation:

  slang.txt     Description of S-Lang language
  slang.how     How to embed S-Lang into a C program
  help/slang.hlp Online documentation
  
S-Lang library specific files.

  jmalloc.h	system dependent malloc definitions
  config.h      configuration file
  slang.c	main code for S-Lang interpreter
  slang.h       include file for all S-Lang applications
  _slang.h      include file for interpreter modules.
  slstd.c       standard S-Lang intrinsics module
  slmath.c	floating point math functions
  slfile.c      file i/o module
  slparse.c     Infix -> RPN parser
  slarray.c     Array operations
  slarray.h     include file
  slunix.c      unix functions, e.g., stat, etc...
  slregexp.c    regular expression package

If you wish to be on the S-Lang mailing list, simply send me an email with
your email address.  I use the mailing list to announce new releases of
S-Lang and to report any bugs.  Send an email to:

davis@amy.tch.harvard.edu

------------------------------------------------------------------------------

Installation instructions.

Building the S-Lang library requires a C compiler that understands function
prototypes.  On SunOS, you will need gcc.

S-Lang has been successfully compiled and tested on many platforms and OSs
(Unix/VMS/PC-MSDOS/OS2).   There are at least 4 makefiles included in the
distribution:

     makefile.unx    Unix
     makefile.dos    MS-DOS (Borland BCC specific)
     makefile.os2    OS2 makefile
     makefile.djg    DJGPP (GO32) specific
     vmsmake.com     VMS DCL command procedure 
     
As usual, look at the relavent makefile and edit it as required for your
system.  On VMS, just type `@vmsmake' or if you have gcc, type `@vmsmake gcc'.
For non-VMS systems, copy the appropriate makefile.xxx to `makefile'.  Then
after editing it, simply type `make'.

The library comes with a sample program called calc.  Once you have
successfully built the S-Lang library,  simply type `make calc' to build the
sample application.  This step is not necessary if you are running VMS.

Also to browse the online documentation, create the help file reader in the
help directory.

Finally not that some Unix systems do not have `ranlib'.  If you see an
error indicating this fact, simply ignore it.

