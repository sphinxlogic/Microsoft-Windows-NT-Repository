!++
!   DESCRIP.MMS
!
!   MMS/MMK description file for building WATCHER.
!
!   Copyright © 1994, MadGoat Software.  All rights reserved.
!
!   To build WATCHER using MMS on OpenVMS AXP, use the command
!
!   	$ MMS/MACRO=__AXP__=1
!
!   MMK automatically defines this macro on AXP systems.
!
!-   

PRIMARY_TARGET : ALL
    @ !

.IFDEF __MMK_V32__
.IFDEF __AXP__
ARCH = AXP
OPT  = .ALPHA_OPT
L32  = .L32E
.ELSE
ARCH = VAX
OPT  = .OPT
L32  = .L32

.SUFFIXES  .MAR .B32

B2MFLAGS = /LIST=$(MMS$TARGET)/NOOBJ/MACHINE=(OBJ,NOBIN,ASSEM,UNIQUE,NOCOMM)/SOURCE=(NOHEAD,NOSOURCE)
{}.B32{[.MACRO]}.MAR :
    $(BLISS)$(B2MFLAGS) $(MMS$SOURCE)
.ENDIF

FIRST :
    @ IF F$PARSE("[.BIN-$(ARCH)]") .EQS. "" THEN CREATE/DIR [.BIN-$(ARCH)]

{}.B32{[.BIN-$(ARCH)]}.OBJ :
    $(BLISS)$(BFLAGS) $(MMS$SOURCE)
{}.MSG{[.BIN-$(ARCH)]}.OBJ :
    $(MESSAGE) $(MSGFLAGS) $(MMS$SOURCE)
{}.CLD{[.BIN-$(ARCH)]}.OBJ :
    $(SETCMD) $(SETCMDFLAGS) $(MMS$SOURCE)

PFX = [.BIN-$(ARCH)]

.ELSE
.IFDEF __AXP__
OPT = .MMS_ALPHA_OPT
L32 = .L32E
.ELSE
OPT = .MMS_OPT
L32 = .L32E
.ENDIF
PFX =

FIRST :
    @ !
.ENDIF

.IFDEF __AXP__
SYSEXE = /SYSEXE
MCH = /NOMACHINE
CHK = /CHECK=ALIGN
.IFDEF DBG
OPTIM = /NOOPT
.ENDIF
.ELSE
SYSSTB = ,SYS$SYSTEM:SYS.STB/SELECT
MCH = /MACHINE=NOOBJ
CHK =
.IFDEF DBG
OPTIM = /OPT=LEVEL:0
.ENDIF

.B32.MAR :
    $(BLISS)/LIST=$(MMS$TARGET)/NOOBJ/MACHINE=(OBJ,NOBIN,ASSEM,UNIQUE,NOCOMM)-
/SOURCE=(NOHEAD,NOSOURCE) $(MMS$SOURCE)

.ENDIF

LINKFLAGS = /EXEC=$(MMS$TARGET)/NOMAP$(MAP)/NOTRACE$(DBG)
BFLAGS = /OBJECT=$(MMS$TARGET)$(DBG)/NOLIST$(MCH)$(LIS)$(OPTIM)$(CHK)

WCP_MODULES = WCP,WCP_SHOW,WCP_MISC,WCP_CMDIO,CONFIG,PARSE_TIMES,WCP_CLD,-
    WCP_CMD_CLD,WCP_MSG

WCH_MODULES = WATCHER,COLLECT,LOG,FORCE,CONFIG,DECW_DISPLAY,WATCHER_MSG

.IFDEF __MADGOAT_BUILD__
.IFDEF __AXP__
ALL : FIRST, $(PFX)WATCHER.EXE, $(PFX)WCP.EXE, $(PFX)V1_PERFORM_DISCONNECT.OBJ,-
      $(PFX)V15_PERFORM_DISCONNECT.OBJ,$(PFX)V6_PERFORM_DISCONNECT.OBJ
    @ !
.ELSE
ALL : FIRST, $(PFX)WATCHER.EXE, $(PFX)WCP.EXE, $(PFX)V5_PERFORM_DISCONNECT.OBJ,-
      $(PFX)V6_PERFORM_DISCONNECT.OBJ
    @ !
.ENDIF	! AXP
.ELSE
ALL : FIRST, $(PFX)WATCHER.EXE, $(PFX)WCP.EXE
    @ !
.ENDIF	! MadGoat build

$(PFX)WATCHER.EXE : $(PFX)WATCHER.OLB($(WCH_MODULES)),-
    	    	    $(PFX)PERFORM_DISCONNECT.OBJ,WATCHER$(OPT)
    LIBRARY/OUTPUT=$(PFX)WATCHER.OLB/COMPRESS $(PFX)WATCHER.OLB
    $(LINK)$(LINKFLAGS)$(SYSEXE) WATCHER$(OPT)/OPT

$(PFX)WCP.EXE : $(PFX)WCP.OLB($(WCP_MODULES))
    LIBRARY/OUTPUT=$(PFX)WCP.OLB/COMPRESS $(PFX)WCP.OLB
    $(LINK)$(LINKFLAGS) $(PFX)WCP.OLB/INCLUDE=WCP/LIB

WCP_HELPLIB.HLB : WCP_HELPLIB.HLP
    LIBRARY/CREATE/HELP $(MMS$TARGET) $(MMS$SOURCE)

WCP_HELPLIB.HLP : WCP_HELPLIB.RNH
    RUNOFF $(MMS$SOURCE)

$(PFX)WATCHER.OBJ, $(PFX)COLLECT.OBJ,-
$(PFX)FORCE.OBJ, $(PFX)LOG.OBJ -
    	    	    	: WATCHER$(L32),WATCHER_PRIVATE$(L32)
$(PFX)WCP.OBJ, $(PFX)WCP_SHOW.OBJ,-
$(PFX)WCP_MISC.OBJ, $(PFX)CONFIG.OBJ  -
    	    	    	: WATCHER$(L32),WCP$(L32)
$(PFX)WCP_CMDIO.OBJ 	: WCP$(L32)
$(PFX)PERFORM_DISCONNECT.OBJ : PERFORM_DISCONNECT.B32
    @ DEFINE/NOLOG LIBREQ_DIR SYS$LIBRARY:
    $(BLISS)$(BFLAGS) $(MMS$SOURCE)

.IFDEF __AXP__
$(PFX)V1_PERFORM_DISCONNECT.OBJ : PERFORM_DISCONNECT.B32
    @ DEFINE/NOLOG LIBREQ_DIR RPI$SRC:[LIBREQ.AXP_V1]
    $(BLISS)$(BFLAGS) $(MMS$SOURCE)
$(PFX)V15_PERFORM_DISCONNECT.OBJ : PERFORM_DISCONNECT.B32
    @ DEFINE/NOLOG LIBREQ_DIR RPI$SRC:[LIBREQ.AXP_V15]
    $(BLISS)$(BFLAGS) $(MMS$SOURCE)
$(PFX)V6_PERFORM_DISCONNECT.OBJ : PERFORM_DISCONNECT.B32
    @ DEFINE/NOLOG LIBREQ_DIR RPI$SRC:[LIBREQ.AXP_V6]
    $(BLISS)$(BFLAGS) $(MMS$SOURCE)
.ELSE
$(PFX)V5_PERFORM_DISCONNECT.OBJ : PERFORM_DISCONNECT.B32
    @ DEFINE/NOLOG LIBREQ_DIR RPI$SRC:[LIBREQ.VAX_V5]
    $(BLISS)$(BFLAGS) $(MMS$SOURCE)
$(PFX)V6_PERFORM_DISCONNECT.OBJ : PERFORM_DISCONNECT.B32
    @ DEFINE/NOLOG LIBREQ_DIR RPI$SRC:[LIBREQ.VAX_V6]
    $(BLISS)$(BFLAGS) $(MMS$SOURCE)
.ENDIF

WATCHER$(L32) 	      : FIELDS$(L32)
WATCHER_PRIVATE$(L32) : WATCHER$(L32), FIELDS$(L32)
WCP$(L32)   	      : WATCHER$(L32),FIELDS$(L32)

.IFDEF __AXP__
.ELSE
[.MACRO]WATCHER.MAR, [.MACRO]COLLECT.MAR,-
[.MACRO]FORCE.MAR, [.MACRO]LOG.MAR -
    	    	    	: WATCHER$(L32),WATCHER_PRIVATE$(L32)
[.MACRO]WCP.MAR, [.MACRO]WCP_SHOW.MAR,-
[.MACRO]WCP_MISC.MAR, [.MACRO]CONFIG.MAR  -
    	    	    	: WATCHER$(L32),WCP$(L32)
[.MACRO]WCP_CMDIO.MAR 	: WCP$(L32)
[.MACRO]V5_PERFORM_DISCONNECT.MAR : PERFORM_DISCONNECT.B32
    @ DEFINE LIBREQ_DIR RPI$SRC:[LIBREQ.VAX_V5]
    $(BLISS)$(B2MFLAGS) $(MMS$SOURCE)
[.MACRO]V6_PERFORM_DISCONNECT.MAR : PERFORM_DISCONNECT.B32
    @ DEFINE LIBREQ_DIR RPI$SRC:[LIBREQ.VAX_V6]
    $(BLISS)$(B2MFLAGS) $(MMS$SOURCE)
.ENDIF

[.DOC]WATCHER_DOC.PS : WATCHER_DOC.SDML
    DOC/NOPRINT/CONTENT/OUTPUT=$(MMS$TARGET) $(MMS$SOURCE) S.R PS/DEVICE=BLANK

[.DOC]WATCHER_DOC.TXT : WATCHER_DOC.SDML
    DOC/NOPRINT/CONTENT/OUTPUT=$(MMS$TARGET) $(MMS$SOURCE) S.R MAIL/DEVICE=BLANK

[.DOC]WATCHER_DOC.DECW$BOOK : WATCHER_DOC.SDML
    DOC/NOPRINT/CONTENT/OUTPUT=$(MMS$TARGET) $(MMS$SOURCE) S.O BOOKR

KIT : WATCHER.ZIP
    @ !

WATCHER.ZIP : DISTRIBUTION, SOURCE
    IF F$SEARCH("$(MMS$TARGET)") .NES. "" THEN DELETE $(MMS$TARGET);*
    PURGE [.DIST...]
    SET DEFAULT [.DIST]
    PKZIP -r "-V" [-]$(MMS$TARGET) *.*;
    SET DEFAULT [-]
    TREDEL DIST.DIR

DISTRIBUTION : PRE_DIST, DIST_TOP, DIST_BIN, DIST_DOC
    @ !

PRE_DIST :
    IF F$SEARCH("DIST.DIR") .NES. "" THEN TREDEL DIST.DIR
    CREATE/DIRECTORY [.DIST],[.DIST.BIN-VAX],[.DIST.BIN-AXP]

DIST_TOP : AAAREADME.DOC,AAAREADME.TOO,-
    	   LINK.COM,-
    	   WATCHER.OPT,V5_WATCHER.OPT,V6_WATCHER.OPT,-
    	   WATCHER.ALPHA_OPT,V1_WATCHER.ALPHA_OPT,V15_WATCHER.ALPHA_OPT,-
    	   V6_WATCHER.ALPHA_OPT,-
    	   WCP_HELPLIB.HLB,DECW_STARTLOGIN.COM,-
    	   WATCHER_STARTUP.COM,WATCHER_SHUTDOWN.COM,SAMPLE_CONFIG.WCP,-
    	   WATCHER_MAIL.COM
    $(LIBR)/COMPRESS/OUTPUT=WCP_HELPLIB.HLB WCP_HELPLIB.HLB
    PURGE $(MMS$SOURCE_LIST)
    BACKUP $(MMS$SOURCE_LIST) [.DIST]/OWNER=PARENT

DIST_BIN :     DIST_VAX, DIST_AXP
    @ !

DIST_VAX : [.BIN-VAX]WATCHER.OLB,[.BIN-VAX]WCP.OLB,-
    	   [.BIN-VAX]V5_PERFORM_DISCONNECT.OBJ,-
    	   [.BIN-VAX]V6_PERFORM_DISCONNECT.OBJ
    PURGE $(MMS$SOURCE_LIST)
    BACKUP $(MMS$SOURCE_LIST) [.DIST.BIN-VAX]/OWNER=PARENT

DIST_AXP : [.BIN-AXP]WATCHER.OLB,[.BIN-AXP]WCP.OLB,-
    	   [.BIN-AXP]V1_PERFORM_DISCONNECT.OBJ,-
    	   [.BIN-AXP]V15_PERFORM_DISCONNECT.OBJ,-
    	   [.BIN-AXP]V6_PERFORM_DISCONNECT.OBJ
    PURGE $(MMS$SOURCE_LIST)
    BACKUP $(MMS$SOURCE_LIST) [.DIST.BIN-AXP]/OWNER=PARENT

DIST_DOC : [.DOC]WATCHER_DOC.PS,[.DOC]WATCHER_DOC.TXT,[.DOC]WATCHER_DOC.DECW$BOOK,-
    	   [.DOC]LIBRARY.DECW$BOOKSHELF,[.DOC]WATCHER_DOC.DECW$BOOKSHELF,-
    	   [.DOC]AAAREADME.BOOKREADER_SETUP
    PURGE $(MMS$SOURCE_LIST)
    BACKUP $(MMS$SOURCE_LIST) [.DIST.DOC]/OWNER=PARENT

SOURCE : SRC_BLISS, SRC_MACRO
    @ !

SRC_BLISS : COLLECT.B32,CONFIG.B32,DECW_DISPLAY.B32,-
    	    FIELDS.R32,FORCE.B32,LOG.B32,PARSE_TIMES.B32,WATCHER.B32,-
    	    WATCHER.R32,WATCHER_DOC.SDML,WATCHER_MSG.MSG,WATCHER_PRIVATE.R32,-
    	WCP.B32,WCP.R32,WCP_CLD.CLD,WCP_CMDIO.B32,PERFORM_DISCONNECT.B32,-
    	WCP_CMD_CLD.CLD,WATCHER.OPT,V5_WATCHER.OPT,V6_WATCHER.OPT,-
    	WATCHER.ALPHA_OPT,V1_WATCHER.ALPHA_OPT,V15_WATCHER.ALPHA_OPT,-
    	V6_WATCHER.ALPHA_OPT,-
    	WCP_HELPLIB.RNH,WCP_MISC.B32,WCP_MSG.MSG,WCP_SHOW.B32,-
    	DESCRIP.MMS,COMPILE.COM,WATCHER.MMS_OPT,WATCHER.MMS_ALPHA_OPT
    PURGE $(MMS$SOURCE_LIST)
    IF F$SEARCH("[.DIST]SOURCE.DIR") .NES. "" THEN TREDEL [.DIST]SOURCE.DIR
    CREATE/DIRECTORY [.DIST.SOURCE]
    BACKUP $(MMS$SOURCE_LIST) [.DIST.SOURCE]/OWNER=PARENT

SRC_MACRO : [.MACRO]COLLECT.MAR,[.MACRO]CONFIG.MAR,[.MACRO]DECW_DISPLAY.MAR,-
    	    [.MACRO]FORCE.MAR,[.MACRO]LOG.MAR,[.MACRO]PARSE_TIMES.MAR,-
    	    [.MACRO]WATCHER.MAR,[.MACRO]WCP.MAR,[.MACRO]WCP_CMDIO.MAR,-
    	    [.MACRO]WCP_MISC.MAR,[.MACRO]WCP_SHOW.MAR,-
    	    [.MACRO]V5_PERFORM_DISCONNECT.MAR,-
    	    [.MACRO]V6_PERFORM_DISCONNECT.MAR,[.MACRO]ASSEMBLE.COM
    PURGE $(MMS$SOURCE_LIST)
    CREATE/DIRECTORY [.DIST.SOURCE.MACRO]
    BACKUP $(MMS$SOURCE_LIST) [.DIST.SOURCE.MACRO]/OWNER=PARENT
